float sub_100B07C2C@<S0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  int v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  int v27;
  double v28;
  double v29;
  double v30;
  double v31;
  unsigned __int8 v32;
  id v33;
  const mach_header_64 *v34;
  const mach_header_64 *v35;
  unint64_t v36;
  const mach_header_64 *v37;
  unint64_t v38;
  float v39;
  float v40;
  float v41;
  float v42;
  const mach_header_64 *v43;
  unint64_t v44;
  float v45;
  float v46;
  const mach_header_64 *v47;
  unint64_t v48;
  float v49;
  float v50;
  const mach_header_64 *v51;
  unint64_t v52;
  float v53;
  float v54;
  const mach_header_64 *v55;
  unint64_t v56;
  float v57;
  float v58;
  const mach_header_64 *v59;
  unint64_t v60;
  float v61;
  float v62;
  float v63;
  float result;
  long long v65;
  long long v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  long long v71;
  long long v72;
  long long v73;
  double v74;
  long long v75;
  uint64_t v76;
  uint64_t v77;
  long long v78;
  long long v79;
  long long v80;
  long long v81;
  double v82;
  int v83;
  uint64_t v84;
  long long v85;
  long long v86;
  long long v87;
  uint64_t v88;
  uint64_t v89;
  long long v90;
  double v91;
  long long v92;
  long long v93;
  double v94;
  uint64_t v95;
  uint64_t v96;
  long long v97;
  long long v98;
  int v99;
  uint64_t v100;
  long long v101;
  long long v102;
  long long v103;
  uint64_t v104;
  uint64_t v105;
  long long v106;
  double v107;
  long long v108;
  long long v109;
  long long v110;
  long long v111;
  double v112;
  uint64_t v113;
  uint64_t v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  double v119;
  long long v120;
  long long v121;
  uint64_t v122;
  uint64_t v123;
  long long v124;
  long long v125;
  long long v126;
  long long v127;
  double v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  unsigned __int8 v133;
  unsigned char v134[7];
  __int16 v135;
  char v136;
  __int16 v137;
  char v138;
  __int16 v139;
  char v140;
  __int16 v141;
  char v142;
  __int16 v143;
  char v144;
  __int16 v145;
  char v146;
  __int16 v147;
  char v148;
  unsigned int v149;
  unsigned __int8 v150;
  long long v151;
  long long v152;
  long long v153;
  long long v154;
  uint64_t v155;
  uint64_t v156;
  unsigned int v157;
  unsigned __int8 v158;
  long long v159;
  long long v160;
  long long v161;
  long long v162;
  uint64_t v163;
  uint64_t v164;
  unsigned int v165;
  unsigned __int8 v166;
  long long v167;
  long long v168;
  long long v169;
  long long v170;
  uint64_t v171;
  uint64_t v172;
  unsigned int v173;
  unsigned __int8 v174;
  long long v175;
  long long v176;
  long long v177;
  long long v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  unsigned __int8 v182;
  long long v183;
  long long v184;
  long long v185;
  long long v186;
  uint64_t v187;
  uint64_t v188;
  unsigned int v189;
  unsigned __int8 v190;
  long long v191;
  long long v192;
  long long v193;
  long long v194;
  uint64_t v195;
  uint64_t v196;
  unsigned int v197;
  unsigned __int8 v198;
  long long v199;
  long long v200;
  long long v201;
  long long v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int v205;
  unsigned __int8 v206;
  long long v207;
  long long v208;
  long long v209;
  long long v210;
  uint64_t v211;
  uint64_t v212;

  v133 = sub_1006C8F38((unint64_t)[a1 mostRecentRestorableToolType]);
  sub_1007B16EC([a1 colorForToolType:0], (uint64_t)&v149);
  v132 = v149;
  v131 = v150;
  v126 = v152;
  v127 = v151;
  v125 = v153;
  v121 = v154;
  v130 = v155;
  v129 = v156;
  [a1 opacityForToolType:0];
  v128 = v4;
  [a1 strokeWidthForToolType:0];
  v119 = v5;
  sub_1007B16EC([a1 colorForToolType:1], (uint64_t)&v157);
  v118 = v157;
  v115 = v158;
  v110 = v160;
  v111 = v159;
  v108 = v162;
  v109 = v161;
  v114 = v163;
  v113 = v164;
  [a1 opacityForToolType:1];
  v112 = v6;
  [a1 strokeWidthForToolType:1];
  v107 = v7;
  sub_1007B16EC([a1 colorForToolType:2], (uint64_t)&v165);
  v100 = v165;
  v99 = v166;
  v92 = v168;
  v93 = v167;
  v120 = v169;
  v124 = v170;
  v123 = v171;
  v122 = v172;
  [a1 opacityForToolType:2];
  v94 = v8;
  [a1 strokeWidthForToolType:2];
  v91 = v9;
  sub_1007B16EC([a1 colorForToolType:3], (uint64_t)&v173);
  v84 = v173;
  v83 = v174;
  v75 = v175;
  v72 = v177;
  v73 = v176;
  v71 = v178;
  v117 = v179;
  v116 = v180;
  [a1 opacityForToolType:3];
  v82 = v10;
  [a1 strokeWidthForToolType:3];
  v74 = v11;
  sub_1007B16EC([a1 colorForToolType:4], (uint64_t)&v181);
  v70 = v181;
  v69 = v182;
  v101 = v183;
  v102 = v184;
  v103 = v185;
  v106 = v186;
  v105 = v187;
  v104 = v188;
  [a1 opacityForToolType:4];
  v13 = v12;
  [a1 strokeWidthForToolType:4];
  v15 = v14;
  sub_1007B16EC([a1 colorForToolType:5], (uint64_t)&v189);
  v68 = v189;
  v67 = v190;
  v65 = v192;
  v66 = v191;
  v97 = v194;
  v98 = v193;
  v95 = v196;
  v96 = v195;
  [a1 opacityForToolType:5];
  v17 = v16;
  [a1 strokeWidthForToolType:5];
  v19 = v18;
  sub_1007B16EC([a1 colorForToolType:6], (uint64_t)&v197);
  v20 = v197;
  v21 = v198;
  v85 = v199;
  v86 = v200;
  v87 = v201;
  v90 = v202;
  v88 = v204;
  v89 = v203;
  [a1 opacityForToolType:6];
  v23 = v22;
  [a1 strokeWidthForToolType:6];
  v25 = v24;
  sub_1007B16EC([a1 colorForToolType:7], (uint64_t)&v205);
  v26 = v205;
  v27 = v206;
  v80 = v208;
  v81 = v207;
  v78 = v210;
  v79 = v209;
  v76 = v212;
  v77 = v211;
  [a1 opacityForToolType:7];
  v29 = v28;
  [a1 strokeWidthForToolType:8];
  v31 = v30;
  v32 = [a1 eraserToolErasesWholeObjects];
  v33 = [a1 currentLassoType];

  *(_OWORD *)(a2 + 24) = v127;
  *(_OWORD *)(a2 + 40) = v126;
  *(_OWORD *)(a2 + 56) = v125;
  *(_OWORD *)(a2 + 72) = v121;
  *(_OWORD *)(a2 + 128) = v111;
  *(_OWORD *)(a2 + 144) = v110;
  *(_OWORD *)(a2 + 160) = v109;
  *(_OWORD *)(a2 + 176) = v108;
  *(_OWORD *)(a2 + 232) = v93;
  *(_OWORD *)(a2 + 248) = v92;
  *(_OWORD *)(a2 + 336) = v75;
  *(_OWORD *)(a2 + 352) = v73;
  *(_OWORD *)(a2 + 368) = v72;
  *(_OWORD *)(a2 + 384) = v71;
  *(_OWORD *)(a2 + 544) = v66;
  *(_OWORD *)(a2 + 560) = v65;
  *(void *)(a2 + 88) = v130;
  *(void *)(a2 + 96) = v129;
  *(void *)(a2 + 192) = v114;
  *(void *)(a2 + 200) = v113;
  v34 = &_mh_execute_header;
  if (v131) {
    v35 = &_mh_execute_header;
  }
  else {
    v35 = 0;
  }
  v36 = (unint64_t)v35 | v132;
  if (v115) {
    v37 = &_mh_execute_header;
  }
  else {
    v37 = 0;
  }
  v38 = (unint64_t)v37 | v118;
  if (v99) {
    v43 = &_mh_execute_header;
  }
  else {
    v43 = 0;
  }
  v44 = (unint64_t)v43 | v100;
  if (v83) {
    v47 = &_mh_execute_header;
  }
  else {
    v47 = 0;
  }
  v48 = (unint64_t)v47 | v84;
  if (v69) {
    v51 = &_mh_execute_header;
  }
  else {
    v51 = 0;
  }
  v52 = (unint64_t)v51 | v70;
  if (v67) {
    v55 = &_mh_execute_header;
  }
  else {
    v55 = 0;
  }
  v56 = (unint64_t)v55 | v68;
  if (v21) {
    v59 = &_mh_execute_header;
  }
  else {
    v59 = 0;
  }
  v60 = (unint64_t)v59 | v20;
  if (!v27) {
    v34 = 0;
  }
  v63 = v29;
  result = v31;
  *(void *)a2 = v133;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v36;
  v39 = v128;
  *(float *)(a2 + 104) = v39;
  *(unsigned char *)(a2 + 108) = 0;
  v40 = v119;
  *(float *)(a2 + 112) = v40;
  *(unsigned char *)(a2 + 116) = 0;
  *(void *)(a2 + 120) = v38;
  v41 = v112;
  *(float *)(a2 + 208) = v41;
  *(unsigned char *)(a2 + 212) = 0;
  v42 = v107;
  *(float *)(a2 + 216) = v42;
  *(unsigned char *)(a2 + 220) = 0;
  *(void *)(a2 + 224) = v44;
  *(_OWORD *)(a2 + 264) = v120;
  *(_OWORD *)(a2 + 280) = v124;
  *(void *)(a2 + 296) = v123;
  *(void *)(a2 + 304) = v122;
  v45 = v94;
  *(float *)(a2 + 312) = v45;
  *(unsigned char *)(a2 + 316) = 0;
  v46 = v91;
  *(float *)(a2 + 320) = v46;
  *(unsigned char *)(a2 + 324) = 0;
  *(void *)(a2 + 328) = v48;
  *(void *)(a2 + 400) = v117;
  *(void *)(a2 + 408) = v116;
  v49 = v82;
  *(float *)(a2 + 416) = v49;
  *(unsigned char *)(a2 + 420) = 0;
  v50 = v74;
  *(float *)(a2 + 424) = v50;
  *(unsigned char *)(a2 + 428) = 0;
  *(void *)(a2 + 432) = v52;
  *(_OWORD *)(a2 + 440) = v101;
  *(_OWORD *)(a2 + 456) = v102;
  *(_OWORD *)(a2 + 472) = v103;
  *(_OWORD *)(a2 + 488) = v106;
  *(void *)(a2 + 504) = v105;
  *(void *)(a2 + 512) = v104;
  v53 = v13;
  *(float *)(a2 + 520) = v53;
  *(unsigned char *)(a2 + 524) = 0;
  *(unsigned char *)(a2 + 527) = v148;
  *(_WORD *)(a2 + 525) = v147;
  v54 = v15;
  *(float *)(a2 + 528) = v54;
  *(unsigned char *)(a2 + 532) = 0;
  *(unsigned char *)(a2 + 535) = v146;
  *(_WORD *)(a2 + 533) = v145;
  *(void *)(a2 + 536) = v56;
  *(_OWORD *)(a2 + 576) = v98;
  *(_OWORD *)(a2 + 592) = v97;
  *(void *)(a2 + 608) = v96;
  *(void *)(a2 + 616) = v95;
  v57 = v17;
  *(float *)(a2 + 624) = v57;
  *(unsigned char *)(a2 + 628) = 0;
  *(unsigned char *)(a2 + 631) = v144;
  *(_WORD *)(a2 + 629) = v143;
  v58 = v19;
  *(float *)(a2 + 632) = v58;
  *(unsigned char *)(a2 + 636) = 0;
  *(unsigned char *)(a2 + 639) = v142;
  *(_WORD *)(a2 + 637) = v141;
  *(void *)(a2 + 640) = v60;
  *(_OWORD *)(a2 + 648) = v85;
  *(_OWORD *)(a2 + 664) = v86;
  *(_OWORD *)(a2 + 680) = v87;
  *(_OWORD *)(a2 + 696) = v90;
  *(void *)(a2 + 712) = v89;
  *(void *)(a2 + 720) = v88;
  v61 = v23;
  *(float *)(a2 + 728) = v61;
  *(unsigned char *)(a2 + 732) = 0;
  *(unsigned char *)(a2 + 735) = v140;
  *(_WORD *)(a2 + 733) = v139;
  v62 = v25;
  *(float *)(a2 + 736) = v62;
  *(unsigned char *)(a2 + 740) = 0;
  *(unsigned char *)(a2 + 743) = v138;
  *(_WORD *)(a2 + 741) = v137;
  *(void *)(a2 + 744) = (unint64_t)v34 | v26;
  *(_OWORD *)(a2 + 752) = v81;
  *(_OWORD *)(a2 + 768) = v80;
  *(_OWORD *)(a2 + 784) = v79;
  *(_OWORD *)(a2 + 800) = v78;
  *(void *)(a2 + 816) = v77;
  *(void *)(a2 + 824) = v76;
  *(float *)(a2 + 832) = v63;
  *(unsigned char *)(a2 + 836) = 0;
  *(unsigned char *)(a2 + 839) = v136;
  *(_WORD *)(a2 + 837) = v135;
  *(float *)(a2 + 840) = result;
  *(unsigned char *)(a2 + 844) = 0;
  *(unsigned char *)(a2 + 845) = v32;
  *(void *)(a2 + 848) = v33 == (id)1;
  *(unsigned char *)(a2 + 856) = 0;
  *(_DWORD *)(a2 + 860) = *(_DWORD *)&v134[3];
  *(_DWORD *)(a2 + 857) = *(_DWORD *)v134;
  *(void *)(a2 + 864) = &_swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_100B08574(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 0x1B) {
    return 28;
  }
  else {
    return byte_1011A7FD8[a1 + 1];
  }
}

uint64_t sub_100B08598(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000101271B60
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101271B80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101271BA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000101271BC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F546C69636E6570 && a2 == 0xEF726F6C6F436C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101271BE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000101271C00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F546E6F79617263 && a2 == 0xEF726F6C6F436C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101271C20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000101271C40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C6F6F546C6C6966 && a2 == 0xED0000726F6C6F43 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6C6F6F546C6C6966 && a2 == 0xEF7974696361704FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101271C60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000101271C80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x436C6F6F546E6570 && a2 == 0xEC000000726F6C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x4F6C6F6F546E6570 && a2 == 0xEE00797469636170 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000101271CA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101271CC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101271CE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000101271D00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000101271D20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000101271D40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000101271D60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6F5472656B72616DLL && a2 == 0xEF726F6C6F436C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000101271D80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000101271DA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000101271DC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 27;
    }
    else {
      return 28;
    }
  }
}

void *sub_100B0904C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *(void *)&long long v227 = sub_1005057FC(&qword_101692460);
  uint64_t v5 = *(void *)(v227 - 8);
  __chkstk_darwin(v227, v6);
  v8 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B0EDC0();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v428 = v2;
    unsigned int v13 = 0x8000000;
  }
  else
  {
    *(void *)&long long v184 = v5;
    sub_1005057FC(&qword_1016923F0);
    v228[0] = 0;
    sub_100A22280(&qword_101692468, &qword_1016923F0);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v9 = v229;
    int v10 = v230;
    v228[0] = 1;
    v11 = v8;
    unint64_t v12 = sub_1007B1FA0();
    v147 = v11;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    unint64_t v185 = v12;
    int v143 = v10;
    uint64_t v144 = v9;
    v145 = a2;
    v146 = a1;
    uint64_t v26 = v229;
    uint64_t v27 = *((void *)&v233 + 1);
    uint64_t v28 = v234;
    uint64_t v29 = v235;
    uint64_t v30 = v236;
    uint64_t v31 = v237;
    LOBYTE(v229) = 2;
    uint64_t v178 = v26;
    uint64_t v180 = v230;
    uint64_t v183 = v231;
    uint64_t v181 = *((void *)&v232 + 1);
    uint64_t v179 = v232;
    uint64_t v182 = v233;
    sub_100B0EFD4(v26, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
    unint64_t v32 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v173 = v28;
    uint64_t v177 = v27;
    uint64_t v176 = v29;
    uint64_t v175 = v30;
    uint64_t v174 = v31;
    unint64_t v33 = v32;
    uint64_t v34 = HIDWORD(v32) & 1;
    char v426 = BYTE4(v32) & 1;
    LOBYTE(v229) = 3;
    unint64_t v35 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v141 = v34;
    unint64_t v142 = v35;
    uint64_t v36 = HIDWORD(v35) & 1;
    char v423 = BYTE4(v35) & 1;
    v228[0] = 4;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v140 = v36;
    uint64_t v37 = v229;
    uint64_t v38 = v230;
    uint64_t v39 = v234;
    uint64_t v40 = v237;
    LOBYTE(v229) = 5;
    uint64_t v172 = v236;
    uint64_t v225 = v235;
    uint64_t v41 = v231;
    long long v223 = v232;
    uint64_t v226 = *((void *)&v233 + 1);
    uint64_t v224 = v233;
    sub_100B0EFD4(v37, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
    unint64_t v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v171 = v39;
    uint64_t v222 = v40;
    uint64_t v221 = v41;
    uint64_t v220 = v38;
    uint64_t v219 = v37;
    uint64_t v43 = HIDWORD(v42) & 1;
    char v414 = BYTE4(v42) & 1;
    LOBYTE(v229) = 6;
    unint64_t v44 = v42;
    unint64_t v45 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v138 = HIDWORD(v45) & 1;
    unint64_t v139 = v44;
    char v411 = BYTE4(v45) & 1;
    v228[0] = 7;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v136 = v43;
    unint64_t v137 = v45;
    uint64_t v46 = v229;
    uint64_t v47 = v237;
    LOBYTE(v229) = 8;
    uint64_t v218 = v236;
    uint64_t v216 = v235;
    uint64_t v48 = v46;
    uint64_t v212 = v230;
    uint64_t v213 = v231;
    uint64_t v214 = *((void *)&v232 + 1);
    uint64_t v49 = v232;
    long long v215 = v233;
    uint64_t v217 = v234;
    sub_100B0EFD4(v46, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
    unint64_t v50 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v211 = v47;
    uint64_t v210 = v49;
    uint64_t v209 = v48;
    int v51 = v139;
    unint64_t v52 = v50;
    uint64_t v53 = HIDWORD(v50) & 1;
    char v408 = BYTE4(v50) & 1;
    LOBYTE(v229) = 9;
    unint64_t v54 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v428 = 0;
    unint64_t v55 = v54;
    uint64_t v56 = HIDWORD(v54) & 1;
    char v405 = BYTE4(v54) & 1;
    v228[0] = 10;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v428 = 0;
    uint64_t v57 = v229;
    LOBYTE(v229) = 11;
    uint64_t v198 = v237;
    uint64_t v199 = v236;
    uint64_t v200 = v235;
    uint64_t v208 = v57;
    uint64_t v207 = v230;
    uint64_t v206 = v231;
    uint64_t v204 = *((void *)&v232 + 1);
    uint64_t v205 = v232;
    uint64_t v202 = *((void *)&v233 + 1);
    uint64_t v203 = v233;
    uint64_t v201 = v234;
    sub_100B0EFD4(v57, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
    uint64_t v58 = v428;
    unint64_t v135 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v428 = v58;
    if (v58)
    {
      unsigned int v13 = 138413186;
      (*(void (**)(char *, void))(v184 + 8))(v147, v227);
      sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
      sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
      sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
      sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
    }
    else
    {
      uint64_t v133 = HIDWORD(v135) & 1;
      char v384 = BYTE4(v135) & 1;
      LOBYTE(v229) = 12;
      unint64_t v134 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      uint64_t v428 = 0;
      uint64_t v131 = HIDWORD(v134) & 1;
      char v381 = BYTE4(v134) & 1;
      LOBYTE(v229) = 13;
      int v132 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      uint64_t v428 = 0;
      v228[0] = 14;
      KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
      uint64_t v428 = 0;
      uint64_t v59 = v229;
      LOBYTE(v229) = 15;
      uint64_t v170 = v237;
      uint64_t v169 = v236;
      uint64_t v168 = v235;
      uint64_t v162 = v59;
      uint64_t v163 = v230;
      uint64_t v164 = v231;
      long long v165 = v232;
      long long v166 = v233;
      uint64_t v167 = v234;
      sub_100B0EFD4(v59, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
      uint64_t v60 = v428;
      unint64_t v130 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      uint64_t v428 = v60;
      if (v60)
      {
        (*(void (**)(char *, void))(v184 + 8))(v147, v227);
        sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
        sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
        sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
        sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
        sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
        unsigned int v13 = 138413202;
      }
      else
      {
        uint64_t v128 = HIDWORD(v130) & 1;
        char v420 = BYTE4(v130) & 1;
        LOBYTE(v229) = 16;
        unint64_t v129 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
        uint64_t v428 = 0;
        uint64_t v127 = HIDWORD(v129) & 1;
        char v417 = BYTE4(v129) & 1;
        v228[0] = 17;
        KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
        uint64_t v428 = 0;
        uint64_t v61 = v229;
        LOBYTE(v229) = 18;
        long long v158 = v233;
        long long v159 = v232;
        uint64_t v160 = v237;
        uint64_t v161 = v236;
        uint64_t v121 = v235;
        uint64_t v122 = v61;
        uint64_t v123 = v230;
        uint64_t v197 = v231;
        long long v124 = v232;
        long long v125 = v233;
        uint64_t v126 = v234;
        sub_100B0EFD4(v61, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
        uint64_t v62 = v428;
        unint64_t v120 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
        uint64_t v428 = v62;
        if (v62)
        {
          unsigned int v13 = 138421394;
          (*(void (**)(char *, void))(v184 + 8))(v147, v227);
          sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
          uint64_t v63 = v121;
          uint64_t v64 = v122;
          uint64_t v65 = v123;
          uint64_t v66 = v126;
          sub_100B0C93C(v122, v123, v197, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, v121, v161, v160);
          sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
          sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
          sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
          sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
          *(void *)&long long v67 = v65;
          *((void *)&v67 + 1) = v64;
          long long v227 = v67;
          *(void *)&long long v67 = v66;
          *((void *)&v67 + 1) = v63;
          long long v184 = v67;
        }
        else
        {
          uint64_t v118 = HIDWORD(v120) & 1;
          char v402 = BYTE4(v120) & 1;
          LOBYTE(v229) = 19;
          unint64_t v119 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
          uint64_t v428 = 0;
          uint64_t v117 = HIDWORD(v119) & 1;
          char v399 = BYTE4(v119) & 1;
          v228[0] = 20;
          KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
          uint64_t v428 = 0;
          uint64_t v68 = v229;
          LOBYTE(v229) = 21;
          uint64_t v186 = v237;
          uint64_t v187 = v236;
          uint64_t v188 = v235;
          uint64_t v196 = v68;
          uint64_t v195 = v230;
          uint64_t v194 = v231;
          uint64_t v192 = *((void *)&v232 + 1);
          uint64_t v193 = v232;
          uint64_t v190 = *((void *)&v233 + 1);
          uint64_t v191 = v233;
          uint64_t v189 = v234;
          sub_100B0EFD4(v68, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
          uint64_t v69 = v428;
          unint64_t v116 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
          uint64_t v428 = v69;
          if (v69)
          {
            (*(void (**)(char *, void))(v184 + 8))(v147, v227);
            sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
            sub_100B0C93C(v196, v195, v194, v193, v192, v191, v190, v189, v188, v187, v186);
            uint64_t v70 = v121;
            uint64_t v72 = v122;
            uint64_t v71 = v123;
            uint64_t v73 = v126;
            sub_100B0C93C(v122, v123, v197, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, v121, v161, v160);
            sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
            sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
            sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
            sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
            *(void *)&long long v74 = v71;
            *((void *)&v74 + 1) = v72;
            long long v227 = v74;
            *(void *)&long long v74 = v73;
            *((void *)&v74 + 1) = v70;
            long long v184 = v74;
            unsigned int v13 = 138486930;
          }
          else
          {
            uint64_t v114 = HIDWORD(v116) & 1;
            char v396 = BYTE4(v116) & 1;
            LOBYTE(v229) = 22;
            unint64_t v115 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
            uint64_t v428 = 0;
            uint64_t v113 = HIDWORD(v115) & 1;
            char v393 = BYTE4(v115) & 1;
            v228[0] = 23;
            KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
            uint64_t v428 = 0;
            uint64_t v75 = v229;
            LOBYTE(v229) = 24;
            uint64_t v148 = v237;
            uint64_t v149 = v236;
            uint64_t v150 = v235;
            uint64_t v154 = v75;
            uint64_t v155 = *((void *)&v232 + 1);
            unint64_t v185 = v230;
            uint64_t v156 = v232;
            uint64_t v157 = v231;
            uint64_t v152 = *((void *)&v233 + 1);
            uint64_t v153 = v233;
            uint64_t v151 = v234;
            sub_100B0EFD4(v75, v230, v231, v232, *((uint64_t *)&v232 + 1), v233, *((uint64_t *)&v233 + 1), v234, v235, v236, v237);
            uint64_t v76 = v428;
            unint64_t v112 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
            uint64_t v428 = v76;
            if (!v76)
            {
              uint64_t v110 = HIDWORD(v112) & 1;
              char v390 = BYTE4(v112) & 1;
              LOBYTE(v229) = 25;
              unint64_t v111 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
              uint64_t v428 = 0;
              uint64_t v109 = HIDWORD(v111) & 1;
              char v387 = BYTE4(v111) & 1;
              sub_1005057FC(&qword_1016923E8);
              v228[0] = 26;
              sub_100A22280(&qword_101692470, &qword_1016923E8);
              uint64_t v77 = v428;
              KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
              uint64_t v428 = v77;
              if (!v77)
              {
                uint64_t v108 = v229;
                int v107 = v230;
                sub_1005057FC((uint64_t *)&unk_101687A40);
                char v378 = 27;
                sub_100557304();
                uint64_t v83 = v428;
                KeyedDecodingContainer.decode<A>(_:forKey:)();
                uint64_t v428 = v83;
                if (!v83)
                {
                  (*(void (**)(char *, void))(v184 + 8))(v147, v227);
                  *(void *)&long long v227 = v379;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v228[316] = v136;
                  v228[324] = v138;
                  v228[420] = v53;
                  v228[428] = v56;
                  v228[524] = v118;
                  v228[532] = v117;
                  v228[628] = v114;
                  v228[636] = v113;
                  v228[732] = v110;
                  v228[740] = v109;
                  v228[836] = v133;
                  v228[844] = v131;
                  v228[108] = v141;
                  v228[116] = v140;
                  v228[212] = v128;
                  v228[220] = v127;
                  *(void *)v228 = v144;
                  v228[8] = v143;
                  *(void *)&v228[16] = v178;
                  *(void *)&v228[24] = v180;
                  *(void *)&v228[32] = v183;
                  *(void *)&v228[40] = v179;
                  *(void *)&v228[48] = v181;
                  *(void *)&v228[56] = v182;
                  *(void *)&v228[64] = v177;
                  *(void *)&v228[72] = v173;
                  *(void *)&v228[80] = v176;
                  *(void *)&v228[88] = v175;
                  *(void *)&v228[96] = v174;
                  unint64_t v104 = v33;
                  *(_DWORD *)&v228[104] = v33;
                  *(_DWORD *)&v228[112] = v142;
                  *(void *)&v228[120] = v162;
                  *(void *)&v228[128] = v163;
                  *(void *)&v228[136] = v164;
                  *(_OWORD *)&v228[144] = v165;
                  *(_OWORD *)&v228[160] = v166;
                  *(void *)&v228[176] = v167;
                  *(void *)&v228[184] = v168;
                  *(void *)&v228[192] = v169;
                  *(void *)&v228[200] = v170;
                  *(_DWORD *)&v228[208] = v130;
                  *(_DWORD *)&v228[216] = v129;
                  *(void *)&v228[224] = v219;
                  *(void *)&v228[232] = v220;
                  *(void *)&v228[240] = v221;
                  *(_OWORD *)&v228[248] = v223;
                  *(void *)&v228[264] = v224;
                  *(void *)&v228[272] = v226;
                  *(void *)&v228[280] = v171;
                  *(void *)&v228[288] = v225;
                  *(void *)&v228[296] = v172;
                  *(void *)&v228[304] = v222;
                  *(_DWORD *)&v228[312] = v51;
                  *(_DWORD *)&v228[320] = v137;
                  *(void *)&v228[328] = v209;
                  *(void *)&v228[336] = v212;
                  *(void *)&v228[344] = v213;
                  *(void *)&v228[352] = v210;
                  *(void *)&v228[360] = v214;
                  *(_OWORD *)&v228[368] = v215;
                  *(void *)&v228[384] = v217;
                  *(void *)&v228[392] = v216;
                  *(void *)&v228[400] = v218;
                  *(void *)&v228[408] = v211;
                  unint64_t v105 = v55;
                  unint64_t v106 = v52;
                  *(_DWORD *)&v228[416] = v52;
                  *(_DWORD *)&v228[424] = v55;
                  *(void *)&v228[432] = v122;
                  *(void *)&v228[440] = v123;
                  *(void *)&v228[448] = v197;
                  *(_OWORD *)&v228[456] = v124;
                  *(_OWORD *)&v228[472] = v125;
                  *(void *)&v228[488] = v126;
                  *(void *)&v228[496] = v121;
                  *(void *)&v228[504] = v161;
                  *(void *)&v228[512] = v160;
                  *(_DWORD *)&v228[520] = v120;
                  *(_DWORD *)&v228[528] = v119;
                  *(void *)&v228[536] = v196;
                  *(void *)&v228[544] = v195;
                  *(void *)&v228[552] = v194;
                  *(void *)&v228[560] = v193;
                  *(void *)&v228[568] = v192;
                  *(void *)&v228[576] = v191;
                  *(void *)&v228[584] = v190;
                  *(void *)&v228[592] = v189;
                  *(void *)&v228[600] = v188;
                  *(void *)&v228[608] = v187;
                  *(void *)&v228[616] = v186;
                  *(_DWORD *)&v228[624] = v116;
                  *(_DWORD *)&v228[632] = v115;
                  *(void *)&v228[640] = v154;
                  *(void *)&v228[648] = v185;
                  *(void *)&v228[656] = v157;
                  *(void *)&v228[664] = v156;
                  *(void *)&v228[672] = v155;
                  *(void *)&v228[680] = v153;
                  *(void *)&v228[688] = v152;
                  *(void *)&v228[696] = v151;
                  *(void *)&v228[704] = v150;
                  *(void *)&v228[712] = v149;
                  *(void *)&v228[720] = v148;
                  *(_DWORD *)&v228[728] = v112;
                  *(_DWORD *)&v228[736] = v111;
                  *(void *)&v228[744] = v208;
                  *(void *)&v228[752] = v207;
                  *(void *)&v228[760] = v206;
                  *(void *)&v228[768] = v205;
                  uint64_t v89 = v204;
                  *(void *)&v228[776] = v204;
                  uint64_t v90 = v203;
                  *(void *)&v228[784] = v203;
                  uint64_t v91 = v202;
                  *(void *)&v228[792] = v202;
                  uint64_t v92 = v201;
                  *(void *)&v228[800] = v201;
                  uint64_t v93 = v200;
                  *(void *)&v228[808] = v200;
                  uint64_t v94 = v199;
                  *(void *)&v228[816] = v199;
                  uint64_t v95 = v198;
                  *(void *)&v228[824] = v198;
                  *(_DWORD *)&v228[832] = v135;
                  *(_DWORD *)&v228[840] = v134;
                  v228[845] = v132;
                  *(void *)&v228[848] = v108;
                  v228[856] = v107;
                  *(void *)&v228[864] = v227;
                  sub_100B0F104((uint64_t)v228);
                  swift_bridgeObjectRelease();
                  sub_100B0C93C(v208, v207, v206, v205, v89, v90, v91, v92, v93, v94, v95);
                  sub_100B0C93C(v154, v185, v157, v156, v155, v153, v152, v151, v150, v149, v148);
                  sub_100B0C93C(v196, v195, v194, v193, v192, v191, v190, v189, v188, v187, v186);
                  sub_100B0C93C(v122, v123, v197, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, v121, v161, v160);
                  sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
                  sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
                  sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
                  uint64_t v96 = v178;
                  uint64_t v97 = v180;
                  uint64_t v98 = v183;
                  uint64_t v99 = v179;
                  uint64_t v100 = v181;
                  uint64_t v101 = v182;
                  uint64_t v102 = v177;
                  uint64_t v103 = v173;
                  sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
                  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v146);
                  uint64_t v229 = v144;
                  LOBYTE(v230) = v143;
                  uint64_t v231 = v96;
                  *(void *)&long long v232 = v97;
                  *((void *)&v232 + 1) = v98;
                  *(void *)&long long v233 = v99;
                  *((void *)&v233 + 1) = v100;
                  uint64_t v234 = v101;
                  uint64_t v235 = v102;
                  uint64_t v236 = v103;
                  uint64_t v237 = v176;
                  uint64_t v238 = v175;
                  uint64_t v239 = v174;
                  int v240 = v104;
                  int v244 = v142;
                  uint64_t v248 = v162;
                  uint64_t v249 = v163;
                  uint64_t v250 = v164;
                  long long v251 = v165;
                  long long v252 = v166;
                  uint64_t v253 = v167;
                  uint64_t v254 = v168;
                  uint64_t v255 = v169;
                  uint64_t v256 = v170;
                  int v257 = v130;
                  int v261 = v129;
                  uint64_t v265 = v219;
                  uint64_t v266 = v220;
                  uint64_t v267 = v221;
                  long long v268 = v223;
                  uint64_t v269 = v224;
                  uint64_t v270 = v226;
                  uint64_t v271 = v171;
                  uint64_t v272 = v225;
                  uint64_t v273 = v172;
                  uint64_t v274 = v222;
                  int v275 = v139;
                  int v279 = v137;
                  uint64_t v283 = v209;
                  uint64_t v284 = v212;
                  uint64_t v285 = v213;
                  uint64_t v286 = v210;
                  uint64_t v287 = v214;
                  long long v288 = v215;
                  uint64_t v289 = v217;
                  uint64_t v290 = v216;
                  uint64_t v291 = v218;
                  uint64_t v292 = v211;
                  int v293 = v106;
                  int v297 = v105;
                  uint64_t v301 = v122;
                  uint64_t v302 = v123;
                  uint64_t v303 = v197;
                  long long v304 = v124;
                  long long v305 = v125;
                  uint64_t v306 = v126;
                  uint64_t v307 = v121;
                  uint64_t v308 = v161;
                  uint64_t v309 = v160;
                  int v310 = v120;
                  int v314 = v119;
                  uint64_t v318 = v196;
                  uint64_t v319 = v195;
                  uint64_t v320 = v194;
                  uint64_t v321 = v193;
                  uint64_t v322 = v192;
                  uint64_t v323 = v191;
                  uint64_t v324 = v190;
                  uint64_t v325 = v189;
                  uint64_t v326 = v188;
                  uint64_t v327 = v187;
                  uint64_t v328 = v186;
                  int v329 = v116;
                  int v333 = v115;
                  uint64_t v337 = v154;
                  *(_DWORD *)((char *)&v230 + 1) = v427[0];
                  __int16 v242 = v424;
                  __int16 v246 = v421;
                  __int16 v259 = v418;
                  __int16 v263 = v415;
                  __int16 v277 = v412;
                  __int16 v281 = v409;
                  __int16 v295 = v406;
                  __int16 v299 = v403;
                  __int16 v312 = v400;
                  __int16 v316 = v397;
                  __int16 v331 = v394;
                  __int16 v335 = v391;
                  HIDWORD(v230) = *(_DWORD *)((char *)v427 + 3);
                  char v241 = v426;
                  char v243 = v425;
                  char v245 = v423;
                  char v247 = v422;
                  char v258 = v420;
                  char v260 = v419;
                  char v262 = v417;
                  char v264 = v416;
                  char v276 = v414;
                  char v278 = v413;
                  char v280 = v411;
                  char v282 = v410;
                  char v294 = v408;
                  char v296 = v407;
                  char v298 = v405;
                  char v300 = v404;
                  char v311 = v402;
                  char v313 = v401;
                  char v315 = v399;
                  char v317 = v398;
                  char v330 = v396;
                  char v332 = v395;
                  char v334 = v393;
                  char v336 = v392;
                  uint64_t v338 = v185;
                  uint64_t v339 = v157;
                  uint64_t v340 = v156;
                  uint64_t v341 = v155;
                  uint64_t v342 = v153;
                  uint64_t v343 = v152;
                  uint64_t v344 = v151;
                  uint64_t v345 = v150;
                  uint64_t v346 = v149;
                  uint64_t v347 = v148;
                  int v348 = v112;
                  char v349 = v390;
                  __int16 v350 = v388;
                  char v351 = v389;
                  int v352 = v111;
                  char v353 = v387;
                  __int16 v354 = v385;
                  char v355 = v386;
                  uint64_t v356 = v208;
                  uint64_t v357 = v207;
                  uint64_t v358 = v206;
                  uint64_t v359 = v205;
                  uint64_t v360 = v204;
                  uint64_t v361 = v203;
                  uint64_t v362 = v202;
                  uint64_t v363 = v201;
                  uint64_t v364 = v200;
                  uint64_t v365 = v199;
                  uint64_t v366 = v198;
                  int v367 = v135;
                  char v368 = v384;
                  __int16 v369 = v382;
                  char v370 = v383;
                  int v371 = v134;
                  char v372 = v381;
                  char v373 = v132;
                  uint64_t v374 = v108;
                  char v375 = v107;
                  *(_DWORD *)v376 = *(_DWORD *)v380;
                  *(_DWORD *)&v376[3] = *(_DWORD *)&v380[3];
                  uint64_t v377 = v227;
                  sub_100B0C5F0((uint64_t)&v229);
                  return memcpy(v145, v228, 0x368uLL);
                }
                (*(void (**)(char *, void))(v184 + 8))(v147, v227);
                sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
                sub_100B0C93C(v154, v185, v157, v156, v155, v153, v152, v151, v150, v149, v148);
                sub_100B0C93C(v196, v195, v194, v193, v192, v191, v190, v189, v188, v187, v186);
                uint64_t v84 = v121;
                uint64_t v86 = v122;
                uint64_t v85 = v123;
                uint64_t v87 = v126;
                sub_100B0C93C(v122, v123, v197, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, v121, v161, v160);
                sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
                sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
                sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
                sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
                _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v146);
                *(void *)&long long v88 = v85;
                *((void *)&v88 + 1) = v86;
                long long v227 = v88;
                *(void *)&long long v88 = v87;
                int v14 = 1;
                int v15 = 1;
                int v16 = 1;
                *((void *)&v88 + 1) = v84;
                long long v184 = v88;
                int v17 = 1;
                int v18 = 1;
                int v19 = 1;
                int v20 = 1;
                goto LABEL_5;
              }
            }
            (*(void (**)(char *, void))(v184 + 8))(v147, v227);
            sub_100B0C93C(v208, v207, v206, v205, v204, v203, v202, v201, v200, v199, v198);
            sub_100B0C93C(v154, v185, v157, v156, v155, v153, v152, v151, v150, v149, v148);
            sub_100B0C93C(v196, v195, v194, v193, v192, v191, v190, v189, v188, v187, v186);
            uint64_t v78 = v121;
            uint64_t v80 = v122;
            uint64_t v79 = v123;
            uint64_t v81 = v126;
            sub_100B0C93C(v122, v123, v197, v124, *((uint64_t *)&v124 + 1), v125, *((uint64_t *)&v125 + 1), v126, v121, v161, v160);
            sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
            sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
            sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
            sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
            *(void *)&long long v82 = v79;
            *((void *)&v82 + 1) = v80;
            long long v227 = v82;
            *(void *)&long long v82 = v81;
            *((void *)&v82 + 1) = v78;
            long long v184 = v82;
            unsigned int v13 = 139011218;
          }
        }
      }
    }
    a1 = v146;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  int v14 = (v13 >> 4) & 1;
  int v15 = (v13 >> 7) & 1;
  int v16 = (v13 >> 10) & 1;
  int v17 = (v13 >> 13) & 1;
  int v18 = HIWORD(v13) & 1;
  int v19 = (v13 >> 19) & 1;
  int v20 = (v13 >> 22) & 1;
  if ((v13 & 2) != 0) {
LABEL_5:
  }
    sub_100B0C93C(v178, v180, v183, v179, v181, v182, v177, v173, v176, v175, v174);
  if (v14) {
    sub_100B0C93C(v162, v163, v164, v165, *((uint64_t *)&v165 + 1), v166, *((uint64_t *)&v166 + 1), v167, v168, v169, v170);
  }
  if (v15) {
    sub_100B0C93C(v219, v220, v221, v223, *((uint64_t *)&v223 + 1), v224, v226, v171, v225, v172, v222);
  }
  uint64_t v21 = v206;
  if (v16) {
    sub_100B0C93C(v209, v212, v213, v210, v214, v215, *((uint64_t *)&v215 + 1), v217, v216, v218, v211);
  }
  uint64_t v22 = v208;
  if (v17) {
    sub_100B0C93C(*((uint64_t *)&v227 + 1), v227, v197, v159, *((uint64_t *)&v159 + 1), v158, *((uint64_t *)&v158 + 1), v184, *((uint64_t *)&v184 + 1), v161, v160);
  }
  uint64_t v23 = v185;
  if (v18) {
    sub_100B0C93C(v196, v195, v194, v193, v192, v191, v190, v189, v188, v187, v186);
  }
  uint64_t v24 = v207;
  if (v19) {
    sub_100B0C93C(v154, v23, v157, v156, v155, v153, v152, v151, v150, v149, v148);
  }
  if (v20) {
    sub_100B0C93C(v22, v24, v21, v205, v204, v203, v202, v201, v200, v199, v198);
  }
  return (void *)swift_bridgeObjectRelease();
}

id sub_100B0B9E4(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  sub_10051B3EC(a1, (uint64_t)v71, &qword_1016923D8);
  sub_10051B3EC((uint64_t)v71, (uint64_t)v144, &qword_1016923D8);
  if (v144[8] == 255
    || (sub_10051B3EC((uint64_t)v144, (uint64_t)v145, &qword_1016923F0),
        sub_10051B3EC((uint64_t)v145, (uint64_t)v146, &qword_1016923F0),
        (v146[8] & 1) != 0))
  {
    id v3 = v2;
  }
  else
  {
    [v2 setCurrentToolType:sub_1006C8FA8(v146[0])];
  }
  uint64_t v4 = *(void *)(a1 + 96);
  if (v4)
  {
    uint64_t v5 = *(void *)(a1 + 88);
    uint64_t v6 = *(void *)(a1 + 64);
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 16);
    int v135 = v8;
    char v136 = BYTE4(v8) & 1;
    long long v137 = *(_OWORD *)(a1 + 24);
    long long v139 = *(_OWORD *)(a1 + 48);
    uint64_t v138 = v7;
    uint64_t v140 = v6;
    long long v141 = *(_OWORD *)(a1 + 72);
    uint64_t v142 = v5;
    uint64_t v143 = v4;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1007B0B84((uint64_t)&v135);
    [v2 setColor:v9 forToolType:0];
  }
  sub_10051B3EC(a1 + 104, (uint64_t)v70, &qword_101673520);
  sub_10051B3EC((uint64_t)v70, (uint64_t)&v147, &qword_101673520);
  if ((v148 & 1) == 0) {
    [v2 setOpacity:0 forToolType:v147];
  }
  sub_10051B3EC(a1 + 112, (uint64_t)v69, &qword_101673520);
  sub_10051B3EC((uint64_t)v69, (uint64_t)&v149, &qword_101673520);
  if ((v150 & 1) == 0) {
    [v2 setStrokeWidth:0 forToolType:v149];
  }
  uint64_t v10 = *(void *)(a1 + 200);
  if (v10)
  {
    uint64_t v11 = *(void *)(a1 + 192);
    uint64_t v12 = *(void *)(a1 + 168);
    uint64_t v13 = *(void *)(a1 + 144);
    uint64_t v14 = *(void *)(a1 + 120);
    int v126 = v14;
    char v127 = BYTE4(v14) & 1;
    long long v128 = *(_OWORD *)(a1 + 128);
    uint64_t v129 = v13;
    long long v130 = *(_OWORD *)(a1 + 152);
    long long v132 = *(_OWORD *)(a1 + 176);
    uint64_t v131 = v12;
    uint64_t v133 = v11;
    uint64_t v134 = v10;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v15 = sub_1007B0B84((uint64_t)&v126);
    [v2 setColor:v15 forToolType:1];
  }
  sub_10051B3EC(a1 + 208, (uint64_t)v68, &qword_101673520);
  sub_10051B3EC((uint64_t)v68, (uint64_t)&v151, &qword_101673520);
  if ((v152 & 1) == 0) {
    [v2 setOpacity:1 forToolType:v151];
  }
  sub_10051B3EC(a1 + 216, (uint64_t)&v67, &qword_101673520);
  sub_10051B3EC((uint64_t)&v67, (uint64_t)&v153, &qword_101673520);
  if ((v154 & 1) == 0) {
    [v2 setStrokeWidth:1 forToolType:v153];
  }
  uint64_t v16 = *(void *)(a1 + 304);
  if (v16)
  {
    uint64_t v17 = *(void *)(a1 + 296);
    uint64_t v18 = *(void *)(a1 + 272);
    uint64_t v19 = *(void *)(a1 + 248);
    uint64_t v20 = *(void *)(a1 + 224);
    int v117 = v20;
    char v118 = BYTE4(v20) & 1;
    long long v119 = *(_OWORD *)(a1 + 232);
    long long v121 = *(_OWORD *)(a1 + 256);
    uint64_t v120 = v19;
    uint64_t v122 = v18;
    long long v123 = *(_OWORD *)(a1 + 280);
    uint64_t v124 = v17;
    uint64_t v125 = v16;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1007B0B84((uint64_t)&v117);
    [v2 setColor:v21 forToolType:2];
  }
  sub_10051B3EC(a1 + 312, (uint64_t)v66, &qword_101673520);
  sub_10051B3EC((uint64_t)v66, (uint64_t)&v155, &qword_101673520);
  if ((v156 & 1) == 0) {
    [v2 setOpacity:2 forToolType:v155];
  }
  sub_10051B3EC(a1 + 320, (uint64_t)v65, &qword_101673520);
  sub_10051B3EC((uint64_t)v65, (uint64_t)&v157, &qword_101673520);
  if ((v158 & 1) == 0) {
    [v2 setStrokeWidth:2 forToolType:v157];
  }
  uint64_t v22 = *(void *)(a1 + 408);
  if (v22)
  {
    uint64_t v23 = *(void *)(a1 + 400);
    uint64_t v24 = *(void *)(a1 + 376);
    uint64_t v25 = *(void *)(a1 + 352);
    uint64_t v26 = *(void *)(a1 + 328);
    int v108 = v26;
    char v109 = BYTE4(v26) & 1;
    long long v110 = *(_OWORD *)(a1 + 336);
    uint64_t v111 = v25;
    long long v112 = *(_OWORD *)(a1 + 360);
    long long v114 = *(_OWORD *)(a1 + 384);
    uint64_t v113 = v24;
    uint64_t v115 = v23;
    uint64_t v116 = v22;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1007B0B84((uint64_t)&v108);
    [v2 setColor:v27 forToolType:3];
  }
  sub_10051B3EC(a1 + 416, (uint64_t)v64, &qword_101673520);
  sub_10051B3EC((uint64_t)v64, (uint64_t)&v159, &qword_101673520);
  if ((v160 & 1) == 0) {
    [v2 setOpacity:3 forToolType:v159];
  }
  sub_10051B3EC(a1 + 424, (uint64_t)v63, &qword_101673520);
  sub_10051B3EC((uint64_t)v63, (uint64_t)&v161, &qword_101673520);
  if ((v162 & 1) == 0) {
    [v2 setStrokeWidth:3 forToolType:v161];
  }
  uint64_t v28 = *(void *)(a1 + 512);
  if (v28)
  {
    uint64_t v29 = *(void *)(a1 + 504);
    uint64_t v30 = *(void *)(a1 + 480);
    uint64_t v31 = *(void *)(a1 + 456);
    uint64_t v32 = *(void *)(a1 + 432);
    int v99 = v32;
    char v100 = BYTE4(v32) & 1;
    long long v101 = *(_OWORD *)(a1 + 440);
    long long v103 = *(_OWORD *)(a1 + 464);
    uint64_t v102 = v31;
    uint64_t v104 = v30;
    long long v105 = *(_OWORD *)(a1 + 488);
    uint64_t v106 = v29;
    uint64_t v107 = v28;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v33 = sub_1007B0B84((uint64_t)&v99);
    [v2 setColor:v33 forToolType:4];
  }
  sub_10051B3EC(a1 + 520, (uint64_t)v62, &qword_101673520);
  sub_10051B3EC((uint64_t)v62, (uint64_t)&v163, &qword_101673520);
  if ((v164 & 1) == 0) {
    [v2 setOpacity:4 forToolType:v163];
  }
  sub_10051B3EC(a1 + 528, (uint64_t)v61, &qword_101673520);
  sub_10051B3EC((uint64_t)v61, (uint64_t)&v165, &qword_101673520);
  if ((v166 & 1) == 0) {
    [v2 setStrokeWidth:4 forToolType:v165];
  }
  uint64_t v34 = *(void *)(a1 + 616);
  if (v34)
  {
    uint64_t v35 = *(void *)(a1 + 608);
    uint64_t v36 = *(void *)(a1 + 584);
    uint64_t v37 = *(void *)(a1 + 560);
    uint64_t v38 = *(void *)(a1 + 536);
    int v90 = v38;
    char v91 = BYTE4(v38) & 1;
    long long v92 = *(_OWORD *)(a1 + 544);
    uint64_t v93 = v37;
    long long v94 = *(_OWORD *)(a1 + 568);
    long long v96 = *(_OWORD *)(a1 + 592);
    uint64_t v95 = v36;
    uint64_t v97 = v35;
    uint64_t v98 = v34;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1007B0B84((uint64_t)&v90);
    [v2 setColor:v39 forToolType:5];
  }
  sub_10051B3EC(a1 + 624, (uint64_t)v60, &qword_101673520);
  sub_10051B3EC((uint64_t)v60, (uint64_t)&v167, &qword_101673520);
  if ((v168 & 1) == 0) {
    [v2 setOpacity:5 forToolType:v167];
  }
  sub_10051B3EC(a1 + 632, (uint64_t)v59, &qword_101673520);
  sub_10051B3EC((uint64_t)v59, (uint64_t)&v169, &qword_101673520);
  if ((v170 & 1) == 0) {
    [v2 setStrokeWidth:5 forToolType:v169];
  }
  uint64_t v40 = *(void *)(a1 + 720);
  if (v40)
  {
    uint64_t v41 = *(void *)(a1 + 712);
    uint64_t v42 = *(void *)(a1 + 688);
    uint64_t v43 = *(void *)(a1 + 664);
    uint64_t v44 = *(void *)(a1 + 640);
    int v81 = v44;
    char v82 = BYTE4(v44) & 1;
    long long v83 = *(_OWORD *)(a1 + 648);
    long long v85 = *(_OWORD *)(a1 + 672);
    uint64_t v84 = v43;
    uint64_t v86 = v42;
    long long v87 = *(_OWORD *)(a1 + 696);
    uint64_t v88 = v41;
    uint64_t v89 = v40;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v45 = sub_1007B0B84((uint64_t)&v81);
    [v2 setColor:v45 forToolType:6];
  }
  sub_10051B3EC(a1 + 728, (uint64_t)v58, &qword_101673520);
  sub_10051B3EC((uint64_t)v58, (uint64_t)&v171, &qword_101673520);
  if ((v172 & 1) == 0) {
    [v2 setOpacity:6 forToolType:v171];
  }
  sub_10051B3EC(a1 + 736, (uint64_t)v57, &qword_101673520);
  sub_10051B3EC((uint64_t)v57, (uint64_t)&v173, &qword_101673520);
  if ((v174 & 1) == 0) {
    [v2 setStrokeWidth:6 forToolType:v173];
  }
  uint64_t v46 = *(void *)(a1 + 824);
  if (v46)
  {
    uint64_t v47 = *(void *)(a1 + 816);
    uint64_t v48 = *(void *)(a1 + 792);
    uint64_t v49 = *(void *)(a1 + 768);
    uint64_t v50 = *(void *)(a1 + 744);
    int v72 = v50;
    char v73 = BYTE4(v50) & 1;
    long long v74 = *(_OWORD *)(a1 + 752);
    uint64_t v75 = v49;
    long long v76 = *(_OWORD *)(a1 + 776);
    long long v78 = *(_OWORD *)(a1 + 800);
    uint64_t v77 = v48;
    uint64_t v79 = v47;
    uint64_t v80 = v46;
    sub_10068F4B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v51 = sub_1007B0B84((uint64_t)&v72);
    [v2 setColor:v51 forToolType:7];
  }
  sub_10051B3EC(a1 + 832, (uint64_t)v56, &qword_101673520);
  sub_10051B3EC((uint64_t)v56, (uint64_t)&v175, &qword_101673520);
  if ((v176 & 1) == 0) {
    [v2 setOpacity:7 forToolType:v175];
  }
  sub_10051B3EC(a1 + 840, (uint64_t)v55, &qword_101673520);
  sub_10051B3EC((uint64_t)v55, (uint64_t)&v177, &qword_101673520);
  if ((v178 & 1) == 0) {
    [v2 setStrokeWidth:8 forToolType:v177];
  }
  sub_10051B3EC(a1 + 845, (uint64_t)&v54, &qword_101683780);
  sub_10051B3EC((uint64_t)&v54, (uint64_t)&v179, &qword_101683780);
  if (v179 != 2) {
    [v2 setEraserToolErasesWholeObjects:v179 & 1];
  }
  sub_10051B3EC(a1 + 848, (uint64_t)v53, &qword_1016923E0);
  sub_10051B3EC((uint64_t)v53, (uint64_t)v180, &qword_1016923E0);
  if (v180[8] != 255)
  {
    sub_10051B3EC((uint64_t)v180, (uint64_t)v181, &qword_1016923E8);
    sub_10051B3EC((uint64_t)v181, (uint64_t)v182, &qword_1016923E8);
    if ((v182[8] & 1) == 0) {
      [v2 setCurrentLassoType:v182[0]];
    }
  }

  return v2;
}

uint64_t sub_100B0C5F0(uint64_t a1)
{
  uint64_t v70 = *(void *)(a1 + 128);
  uint64_t v71 = *(void *)(a1 + 120);
  uint64_t v69 = *(void *)(a1 + 136);
  uint64_t v66 = *(void *)(a1 + 152);
  uint64_t v67 = *(void *)(a1 + 144);
  uint64_t v64 = *(void *)(a1 + 168);
  uint64_t v65 = *(void *)(a1 + 160);
  uint64_t v60 = *(void *)(a1 + 176);
  long long v50 = *(_OWORD *)(a1 + 184);
  uint64_t v49 = *(void *)(a1 + 200);
  uint64_t v63 = *(void *)(a1 + 224);
  uint64_t v58 = *(void *)(a1 + 240);
  uint64_t v59 = *(void *)(a1 + 232);
  uint64_t v56 = *(void *)(a1 + 256);
  uint64_t v57 = *(void *)(a1 + 248);
  uint64_t v53 = *(void *)(a1 + 272);
  uint64_t v54 = *(void *)(a1 + 264);
  uint64_t v52 = *(void *)(a1 + 280);
  long long v46 = *(_OWORD *)(a1 + 288);
  uint64_t v41 = *(void *)(a1 + 304);
  uint64_t v2 = *(void *)(a1 + 344);
  uint64_t v61 = *(void *)(a1 + 336);
  uint64_t v62 = *(void *)(a1 + 328);
  long long v44 = *(_OWORD *)(a1 + 392);
  long long v51 = *(_OWORD *)(a1 + 496);
  long long v55 = *(_OWORD *)(a1 + 600);
  long long v68 = *(_OWORD *)(a1 + 704);
  long long v72 = *(_OWORD *)(a1 + 808);
  uint64_t v3 = *(void *)(a1 + 352);
  uint64_t v4 = *(void *)(a1 + 360);
  uint64_t v6 = *(void *)(a1 + 368);
  uint64_t v5 = *(void *)(a1 + 376);
  uint64_t v7 = *(void *)(a1 + 384);
  uint64_t v8 = *(void *)(a1 + 408);
  uint64_t v9 = *(void *)(a1 + 432);
  uint64_t v12 = *(void *)(a1 + 440);
  uint64_t v13 = *(void *)(a1 + 448);
  uint64_t v14 = *(void *)(a1 + 456);
  uint64_t v15 = *(void *)(a1 + 464);
  uint64_t v16 = *(void *)(a1 + 472);
  uint64_t v17 = *(void *)(a1 + 480);
  uint64_t v10 = *(void *)(a1 + 512);
  uint64_t v19 = *(void *)(a1 + 488);
  uint64_t v20 = *(void *)(a1 + 536);
  uint64_t v21 = *(void *)(a1 + 544);
  uint64_t v22 = *(void *)(a1 + 552);
  uint64_t v23 = *(void *)(a1 + 560);
  uint64_t v24 = *(void *)(a1 + 568);
  uint64_t v25 = *(void *)(a1 + 576);
  uint64_t v26 = *(void *)(a1 + 584);
  uint64_t v18 = *(void *)(a1 + 616);
  uint64_t v28 = *(void *)(a1 + 592);
  uint64_t v29 = *(void *)(a1 + 640);
  uint64_t v30 = *(void *)(a1 + 648);
  uint64_t v31 = *(void *)(a1 + 656);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v27 = *(void *)(a1 + 720);
  uint64_t v37 = *(void *)(a1 + 696);
  uint64_t v38 = *(void *)(a1 + 744);
  uint64_t v39 = *(void *)(a1 + 752);
  uint64_t v40 = *(void *)(a1 + 760);
  uint64_t v42 = *(void *)(a1 + 768);
  uint64_t v43 = *(void *)(a1 + 776);
  uint64_t v45 = *(void *)(a1 + 784);
  uint64_t v47 = *(void *)(a1 + 792);
  uint64_t v48 = *(void *)(a1 + 800);
  uint64_t v36 = *(void *)(a1 + 824);
  sub_100B0C93C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
  sub_100B0C93C(v71, v70, v69, v67, v66, v65, v64, v60, v50, *((uint64_t *)&v50 + 1), v49);
  sub_100B0C93C(v63, v59, v58, v57, v56, v54, v53, v52, v46, *((uint64_t *)&v46 + 1), v41);
  sub_100B0C93C(v62, v61, v2, v3, v4, v6, v5, v7, v44, *((uint64_t *)&v44 + 1), v8);
  sub_100B0C93C(v9, v12, v13, v14, v15, v16, v17, v19, v51, *((uint64_t *)&v51 + 1), v10);
  sub_100B0C93C(v20, v21, v22, v23, v24, v25, v26, v28, v55, *((uint64_t *)&v55 + 1), v18);
  sub_100B0C93C(v29, v30, v31, v32, v33, v34, v35, v37, v68, *((uint64_t *)&v68 + 1), v27);
  sub_100B0C93C(v38, v39, v40, v42, v43, v45, v47, v48, v72, *((uint64_t *)&v72 + 1), v36);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B0C93C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result = a11;
  if (a11)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100B0C9AC(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_10169A780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t destroy for CRLFreehandDrawingToolkitUIStateData(void *a1)
{
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[25])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[51])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[64])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[77])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[90])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[103])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = (_DWORD *)(a1 + 16);
  uint64_t v5 = (_DWORD *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 96);
  if (v6)
  {
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v8;
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  uint64_t v9 = (_DWORD *)(a1 + 120);
  uint64_t v10 = (_DWORD *)(a2 + 120);
  uint64_t v11 = *(void *)(a2 + 200);
  if (v11)
  {
    *uint64_t v9 = *v10;
    *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 140) = *(void *)(a2 + 140);
    *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v12;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    long long v13 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *(_OWORD *)(a1 + 136) = v13;
  }
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  uint64_t v14 = (_DWORD *)(a1 + 224);
  uint64_t v15 = (_DWORD *)(a2 + 224);
  uint64_t v16 = *(void *)(a2 + 304);
  if (v16)
  {
    *uint64_t v14 = *v15;
    *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(void *)(a1 + 244) = *(void *)(a2 + 244);
    *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v17;
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    long long v18 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    *(_OWORD *)(a1 + 240) = v18;
  }
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
  uint64_t v19 = (_DWORD *)(a1 + 328);
  uint64_t v20 = (_DWORD *)(a2 + 328);
  uint64_t v21 = *(void *)(a2 + 408);
  if (v21)
  {
    *uint64_t v19 = *v20;
    *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
    *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v22;
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    long long v23 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *(_OWORD *)(a1 + 344) = v23;
  }
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 420) = *(unsigned char *)(a2 + 420);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(unsigned char *)(a1 + 428) = *(unsigned char *)(a2 + 428);
  uint64_t v24 = (_DWORD *)(a1 + 432);
  uint64_t v25 = (_DWORD *)(a2 + 432);
  uint64_t v26 = *(void *)(a2 + 512);
  if (v26)
  {
    *uint64_t v24 = *v25;
    *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
    *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(_DWORD *)(a1 + 496) = *(_DWORD *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v27 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v27;
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    long long v28 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(a1 + 448) = v28;
  }
  *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
  *(unsigned char *)(a1 + 524) = *(unsigned char *)(a2 + 524);
  *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
  *(unsigned char *)(a1 + 532) = *(unsigned char *)(a2 + 532);
  uint64_t v29 = (_DWORD *)(a1 + 536);
  uint64_t v30 = (_DWORD *)(a2 + 536);
  uint64_t v31 = *(void *)(a2 + 616);
  if (v31)
  {
    *uint64_t v29 = *v30;
    *(unsigned char *)(a1 + 540) = *(unsigned char *)(a2 + 540);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
    *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v32 = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 584) = v32;
    *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    long long v33 = *(_OWORD *)(a2 + 552);
    *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
    *(_OWORD *)(a1 + 552) = v33;
  }
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(unsigned char *)(a1 + 628) = *(unsigned char *)(a2 + 628);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(unsigned char *)(a1 + 636) = *(unsigned char *)(a2 + 636);
  uint64_t v34 = (_DWORD *)(a1 + 640);
  uint64_t v35 = (_DWORD *)(a2 + 640);
  uint64_t v36 = *(void *)(a2 + 720);
  if (v36)
  {
    *uint64_t v34 = *v35;
    *(unsigned char *)(a1 + 644) = *(unsigned char *)(a2 + 644);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
    *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = v37;
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    long long v38 = *(_OWORD *)(a2 + 656);
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(_OWORD *)(a1 + 656) = v38;
  }
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(unsigned char *)(a1 + 732) = *(unsigned char *)(a2 + 732);
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  *(unsigned char *)(a1 + 740) = *(unsigned char *)(a2 + 740);
  uint64_t v39 = (_DWORD *)(a1 + 744);
  uint64_t v40 = (_DWORD *)(a2 + 744);
  uint64_t v41 = *(void *)(a2 + 824);
  if (v41)
  {
    *uint64_t v39 = *v40;
    *(unsigned char *)(a1 + 748) = *(unsigned char *)(a2 + 748);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
    *(_DWORD *)(a1 + 764) = *(_DWORD *)(a2 + 764);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(void *)(a1 + 800) = *(void *)(a2 + 800);
    *(_DWORD *)(a1 + 808) = *(_DWORD *)(a2 + 808);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    *(void *)(a1 + 824) = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v42;
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(void *)(a1 + 824) = *(void *)(a2 + 824);
    long long v43 = *(_OWORD *)(a2 + 760);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(a1 + 760) = v43;
  }
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(unsigned char *)(a1 + 836) = *(unsigned char *)(a2 + 836);
  *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
  *(_WORD *)(a1 + 844) = *(_WORD *)(a2 + 844);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = a1 + 16;
  uint64_t v6 = (int *)(a2 + 2);
  uint64_t v7 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v7)
    {
      int v8 = *v6;
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)uint64_t v5 = v8;
      uint64_t v9 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v9;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 16);
      long long v12 = *((_OWORD *)v6 + 1);
      *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
      *(_OWORD *)(v5 + 16) = v12;
      long long v14 = *((_OWORD *)v6 + 3);
      long long v13 = *((_OWORD *)v6 + 4);
      long long v15 = *((_OWORD *)v6 + 2);
      *(void *)(v5 + 80) = *((void *)v6 + 10);
      *(_OWORD *)(v5 + 48) = v14;
      *(_OWORD *)(v5 + 64) = v13;
      *(_OWORD *)(v5 + 32) = v15;
    }
  }
  else if (v7)
  {
    int v10 = *v6;
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)uint64_t v5 = v10;
    uint64_t v11 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v11;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)a2 + 2);
    *(_OWORD *)uint64_t v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 32) = v16;
    long long v17 = *((_OWORD *)a2 + 3);
    long long v18 = *((_OWORD *)a2 + 4);
    long long v19 = *((_OWORD *)a2 + 5);
    *(void *)(a1 + 96) = a2[12];
    *(_OWORD *)(a1 + 64) = v18;
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 48) = v17;
  }
  int v20 = *((_DWORD *)a2 + 26);
  *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
  *(_DWORD *)(a1 + 104) = v20;
  int v21 = *((_DWORD *)a2 + 28);
  *(unsigned char *)(a1 + 116) = *((unsigned char *)a2 + 116);
  *(_DWORD *)(a1 + 112) = v21;
  long long v22 = (_DWORD *)(a1 + 120);
  long long v23 = (int *)(a2 + 15);
  uint64_t v24 = a2[25];
  if (*(void *)(a1 + 200))
  {
    if (v24)
    {
      int v25 = *v23;
      *(unsigned char *)(a1 + 124) = *((unsigned char *)a2 + 124);
      *long long v22 = v25;
      uint64_t v26 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v26;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
      *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
      *(void *)(a1 + 152) = a2[19];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
      *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
      *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
      *(void *)(a1 + 176) = a2[22];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 184) = *((_DWORD *)a2 + 46);
      *(void *)(a1 + 192) = a2[24];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = a2[25];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 120);
      long long v29 = *(_OWORD *)(a2 + 17);
      *(_OWORD *)long long v22 = *(_OWORD *)v23;
      *(_OWORD *)(a1 + 136) = v29;
      long long v31 = *(_OWORD *)(a2 + 21);
      long long v30 = *(_OWORD *)(a2 + 23);
      long long v32 = *(_OWORD *)(a2 + 19);
      *(void *)(a1 + 200) = a2[25];
      *(_OWORD *)(a1 + 168) = v31;
      *(_OWORD *)(a1 + 184) = v30;
      *(_OWORD *)(a1 + 152) = v32;
    }
  }
  else if (v24)
  {
    int v27 = *v23;
    *(unsigned char *)(a1 + 124) = *((unsigned char *)a2 + 124);
    *long long v22 = v27;
    uint64_t v28 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v28;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    *(_DWORD *)(a1 + 144) = *((_DWORD *)a2 + 36);
    *(_DWORD *)(a1 + 148) = *((_DWORD *)a2 + 37);
    *(void *)(a1 + 152) = a2[19];
    *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
    *(_DWORD *)(a1 + 164) = *((_DWORD *)a2 + 41);
    *(_DWORD *)(a1 + 168) = *((_DWORD *)a2 + 42);
    *(_DWORD *)(a1 + 172) = *((_DWORD *)a2 + 43);
    *(void *)(a1 + 176) = a2[22];
    *(_DWORD *)(a1 + 184) = *((_DWORD *)a2 + 46);
    *(void *)(a1 + 192) = a2[24];
    *(void *)(a1 + 200) = a2[25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *(_OWORD *)(a2 + 17);
    *(_OWORD *)long long v22 = *(_OWORD *)v23;
    *(_OWORD *)(a1 + 136) = v33;
    long long v34 = *(_OWORD *)(a2 + 19);
    long long v35 = *(_OWORD *)(a2 + 21);
    long long v36 = *(_OWORD *)(a2 + 23);
    *(void *)(a1 + 200) = a2[25];
    *(_OWORD *)(a1 + 168) = v35;
    *(_OWORD *)(a1 + 184) = v36;
    *(_OWORD *)(a1 + 152) = v34;
  }
  int v37 = *((_DWORD *)a2 + 52);
  *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
  *(_DWORD *)(a1 + 208) = v37;
  int v38 = *((_DWORD *)a2 + 54);
  *(unsigned char *)(a1 + 220) = *((unsigned char *)a2 + 220);
  *(_DWORD *)(a1 + 216) = v38;
  uint64_t v39 = (_DWORD *)(a1 + 224);
  uint64_t v40 = (int *)(a2 + 28);
  uint64_t v41 = a2[38];
  if (*(void *)(a1 + 304))
  {
    if (v41)
    {
      int v42 = *v40;
      *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
      *uint64_t v39 = v42;
      uint64_t v43 = a2[29];
      *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
      *(void *)(a1 + 232) = v43;
      *(_DWORD *)(a1 + 244) = *((_DWORD *)a2 + 61);
      *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
      *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
      *(void *)(a1 + 256) = a2[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 264) = *((_DWORD *)a2 + 66);
      *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(void *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
      *(void *)(a1 + 296) = a2[37];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 224);
      long long v46 = *((_OWORD *)a2 + 15);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *(_OWORD *)(a1 + 240) = v46;
      long long v48 = *((_OWORD *)a2 + 17);
      long long v47 = *((_OWORD *)a2 + 18);
      long long v49 = *((_OWORD *)a2 + 16);
      *(void *)(a1 + 304) = a2[38];
      *(_OWORD *)(a1 + 272) = v48;
      *(_OWORD *)(a1 + 288) = v47;
      *(_OWORD *)(a1 + 256) = v49;
    }
  }
  else if (v41)
  {
    int v44 = *v40;
    *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
    *uint64_t v39 = v44;
    uint64_t v45 = a2[29];
    *(unsigned char *)(a1 + 240) = *((unsigned char *)a2 + 240);
    *(void *)(a1 + 232) = v45;
    *(_DWORD *)(a1 + 244) = *((_DWORD *)a2 + 61);
    *(_DWORD *)(a1 + 248) = *((_DWORD *)a2 + 62);
    *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
    *(void *)(a1 + 256) = a2[32];
    *(_DWORD *)(a1 + 264) = *((_DWORD *)a2 + 66);
    *(_DWORD *)(a1 + 268) = *((_DWORD *)a2 + 67);
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(void *)(a1 + 280) = a2[35];
    *(_DWORD *)(a1 + 288) = *((_DWORD *)a2 + 72);
    *(void *)(a1 + 296) = a2[37];
    *(void *)(a1 + 304) = a2[38];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v50 = *((_OWORD *)a2 + 15);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *(_OWORD *)(a1 + 240) = v50;
    long long v51 = *((_OWORD *)a2 + 16);
    long long v52 = *((_OWORD *)a2 + 17);
    long long v53 = *((_OWORD *)a2 + 18);
    *(void *)(a1 + 304) = a2[38];
    *(_OWORD *)(a1 + 272) = v52;
    *(_OWORD *)(a1 + 288) = v53;
    *(_OWORD *)(a1 + 256) = v51;
  }
  int v54 = *((_DWORD *)a2 + 78);
  *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
  *(_DWORD *)(a1 + 312) = v54;
  int v55 = *((_DWORD *)a2 + 80);
  *(unsigned char *)(a1 + 324) = *((unsigned char *)a2 + 324);
  *(_DWORD *)(a1 + 320) = v55;
  uint64_t v56 = (_DWORD *)(a1 + 328);
  uint64_t v57 = (int *)(a2 + 41);
  uint64_t v58 = a2[51];
  if (*(void *)(a1 + 408))
  {
    if (v58)
    {
      int v59 = *v57;
      *(unsigned char *)(a1 + 332) = *((unsigned char *)a2 + 332);
      *uint64_t v56 = v59;
      uint64_t v60 = a2[42];
      *(unsigned char *)(a1 + 344) = *((unsigned char *)a2 + 344);
      *(void *)(a1 + 336) = v60;
      *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 87);
      *(_DWORD *)(a1 + 352) = *((_DWORD *)a2 + 88);
      *(_DWORD *)(a1 + 356) = *((_DWORD *)a2 + 89);
      *(void *)(a1 + 360) = a2[45];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
      *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
      *(_DWORD *)(a1 + 376) = *((_DWORD *)a2 + 94);
      *(_DWORD *)(a1 + 380) = *((_DWORD *)a2 + 95);
      *(void *)(a1 + 384) = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
      *(void *)(a1 + 400) = a2[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = a2[51];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 328);
      long long v63 = *(_OWORD *)(a2 + 43);
      *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
      *(_OWORD *)(a1 + 344) = v63;
      long long v65 = *(_OWORD *)(a2 + 47);
      long long v64 = *(_OWORD *)(a2 + 49);
      long long v66 = *(_OWORD *)(a2 + 45);
      *(void *)(a1 + 408) = a2[51];
      *(_OWORD *)(a1 + 376) = v65;
      *(_OWORD *)(a1 + 392) = v64;
      *(_OWORD *)(a1 + 360) = v66;
    }
  }
  else if (v58)
  {
    int v61 = *v57;
    *(unsigned char *)(a1 + 332) = *((unsigned char *)a2 + 332);
    *uint64_t v56 = v61;
    uint64_t v62 = a2[42];
    *(unsigned char *)(a1 + 344) = *((unsigned char *)a2 + 344);
    *(void *)(a1 + 336) = v62;
    *(_DWORD *)(a1 + 348) = *((_DWORD *)a2 + 87);
    *(_DWORD *)(a1 + 352) = *((_DWORD *)a2 + 88);
    *(_DWORD *)(a1 + 356) = *((_DWORD *)a2 + 89);
    *(void *)(a1 + 360) = a2[45];
    *(_DWORD *)(a1 + 368) = *((_DWORD *)a2 + 92);
    *(_DWORD *)(a1 + 372) = *((_DWORD *)a2 + 93);
    *(_DWORD *)(a1 + 376) = *((_DWORD *)a2 + 94);
    *(_DWORD *)(a1 + 380) = *((_DWORD *)a2 + 95);
    *(void *)(a1 + 384) = a2[48];
    *(_DWORD *)(a1 + 392) = *((_DWORD *)a2 + 98);
    *(void *)(a1 + 400) = a2[50];
    *(void *)(a1 + 408) = a2[51];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v67 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)uint64_t v56 = *(_OWORD *)v57;
    *(_OWORD *)(a1 + 344) = v67;
    long long v68 = *(_OWORD *)(a2 + 45);
    long long v69 = *(_OWORD *)(a2 + 47);
    long long v70 = *(_OWORD *)(a2 + 49);
    *(void *)(a1 + 408) = a2[51];
    *(_OWORD *)(a1 + 376) = v69;
    *(_OWORD *)(a1 + 392) = v70;
    *(_OWORD *)(a1 + 360) = v68;
  }
  int v71 = *((_DWORD *)a2 + 104);
  *(unsigned char *)(a1 + 420) = *((unsigned char *)a2 + 420);
  *(_DWORD *)(a1 + 416) = v71;
  int v72 = *((_DWORD *)a2 + 106);
  *(unsigned char *)(a1 + 428) = *((unsigned char *)a2 + 428);
  *(_DWORD *)(a1 + 424) = v72;
  char v73 = (_DWORD *)(a1 + 432);
  long long v74 = (int *)(a2 + 54);
  uint64_t v75 = a2[64];
  if (*(void *)(a1 + 512))
  {
    if (v75)
    {
      int v76 = *v74;
      *(unsigned char *)(a1 + 436) = *((unsigned char *)a2 + 436);
      *char v73 = v76;
      uint64_t v77 = a2[55];
      *(unsigned char *)(a1 + 448) = *((unsigned char *)a2 + 448);
      *(void *)(a1 + 440) = v77;
      *(_DWORD *)(a1 + 452) = *((_DWORD *)a2 + 113);
      *(_DWORD *)(a1 + 456) = *((_DWORD *)a2 + 114);
      *(_DWORD *)(a1 + 460) = *((_DWORD *)a2 + 115);
      *(void *)(a1 + 464) = a2[58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 472) = *((_DWORD *)a2 + 118);
      *(_DWORD *)(a1 + 476) = *((_DWORD *)a2 + 119);
      *(_DWORD *)(a1 + 480) = *((_DWORD *)a2 + 120);
      *(_DWORD *)(a1 + 484) = *((_DWORD *)a2 + 121);
      *(void *)(a1 + 488) = a2[61];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 496) = *((_DWORD *)a2 + 124);
      *(void *)(a1 + 504) = a2[63];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = a2[64];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 432);
      long long v80 = *((_OWORD *)a2 + 28);
      *(_OWORD *)char v73 = *(_OWORD *)v74;
      *(_OWORD *)(a1 + 448) = v80;
      long long v82 = *((_OWORD *)a2 + 30);
      long long v81 = *((_OWORD *)a2 + 31);
      long long v83 = *((_OWORD *)a2 + 29);
      *(void *)(a1 + 512) = a2[64];
      *(_OWORD *)(a1 + 480) = v82;
      *(_OWORD *)(a1 + 496) = v81;
      *(_OWORD *)(a1 + 464) = v83;
    }
  }
  else if (v75)
  {
    int v78 = *v74;
    *(unsigned char *)(a1 + 436) = *((unsigned char *)a2 + 436);
    *char v73 = v78;
    uint64_t v79 = a2[55];
    *(unsigned char *)(a1 + 448) = *((unsigned char *)a2 + 448);
    *(void *)(a1 + 440) = v79;
    *(_DWORD *)(a1 + 452) = *((_DWORD *)a2 + 113);
    *(_DWORD *)(a1 + 456) = *((_DWORD *)a2 + 114);
    *(_DWORD *)(a1 + 460) = *((_DWORD *)a2 + 115);
    *(void *)(a1 + 464) = a2[58];
    *(_DWORD *)(a1 + 472) = *((_DWORD *)a2 + 118);
    *(_DWORD *)(a1 + 476) = *((_DWORD *)a2 + 119);
    *(_DWORD *)(a1 + 480) = *((_DWORD *)a2 + 120);
    *(_DWORD *)(a1 + 484) = *((_DWORD *)a2 + 121);
    *(void *)(a1 + 488) = a2[61];
    *(_DWORD *)(a1 + 496) = *((_DWORD *)a2 + 124);
    *(void *)(a1 + 504) = a2[63];
    *(void *)(a1 + 512) = a2[64];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v84 = *((_OWORD *)a2 + 28);
    *(_OWORD *)char v73 = *(_OWORD *)v74;
    *(_OWORD *)(a1 + 448) = v84;
    long long v85 = *((_OWORD *)a2 + 29);
    long long v86 = *((_OWORD *)a2 + 30);
    long long v87 = *((_OWORD *)a2 + 31);
    *(void *)(a1 + 512) = a2[64];
    *(_OWORD *)(a1 + 480) = v86;
    *(_OWORD *)(a1 + 496) = v87;
    *(_OWORD *)(a1 + 464) = v85;
  }
  int v88 = *((_DWORD *)a2 + 130);
  *(unsigned char *)(a1 + 524) = *((unsigned char *)a2 + 524);
  *(_DWORD *)(a1 + 520) = v88;
  int v89 = *((_DWORD *)a2 + 132);
  *(unsigned char *)(a1 + 532) = *((unsigned char *)a2 + 532);
  *(_DWORD *)(a1 + 528) = v89;
  int v90 = (_DWORD *)(a1 + 536);
  char v91 = (int *)(a2 + 67);
  uint64_t v92 = a2[77];
  if (*(void *)(a1 + 616))
  {
    if (v92)
    {
      int v93 = *v91;
      *(unsigned char *)(a1 + 540) = *((unsigned char *)a2 + 540);
      *int v90 = v93;
      uint64_t v94 = a2[68];
      *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
      *(void *)(a1 + 544) = v94;
      *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
      *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
      *(_DWORD *)(a1 + 564) = *((_DWORD *)a2 + 141);
      *(void *)(a1 + 568) = a2[71];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
      *(_DWORD *)(a1 + 580) = *((_DWORD *)a2 + 145);
      *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
      *(_DWORD *)(a1 + 588) = *((_DWORD *)a2 + 147);
      *(void *)(a1 + 592) = a2[74];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 600) = *((_DWORD *)a2 + 150);
      *(void *)(a1 + 608) = a2[76];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = a2[77];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 536);
      long long v97 = *(_OWORD *)(a2 + 69);
      *(_OWORD *)int v90 = *(_OWORD *)v91;
      *(_OWORD *)(a1 + 552) = v97;
      long long v99 = *(_OWORD *)(a2 + 73);
      long long v98 = *(_OWORD *)(a2 + 75);
      long long v100 = *(_OWORD *)(a2 + 71);
      *(void *)(a1 + 616) = a2[77];
      *(_OWORD *)(a1 + 584) = v99;
      *(_OWORD *)(a1 + 600) = v98;
      *(_OWORD *)(a1 + 568) = v100;
    }
  }
  else if (v92)
  {
    int v95 = *v91;
    *(unsigned char *)(a1 + 540) = *((unsigned char *)a2 + 540);
    *int v90 = v95;
    uint64_t v96 = a2[68];
    *(unsigned char *)(a1 + 552) = *((unsigned char *)a2 + 552);
    *(void *)(a1 + 544) = v96;
    *(_DWORD *)(a1 + 556) = *((_DWORD *)a2 + 139);
    *(_DWORD *)(a1 + 560) = *((_DWORD *)a2 + 140);
    *(_DWORD *)(a1 + 564) = *((_DWORD *)a2 + 141);
    *(void *)(a1 + 568) = a2[71];
    *(_DWORD *)(a1 + 576) = *((_DWORD *)a2 + 144);
    *(_DWORD *)(a1 + 580) = *((_DWORD *)a2 + 145);
    *(_DWORD *)(a1 + 584) = *((_DWORD *)a2 + 146);
    *(_DWORD *)(a1 + 588) = *((_DWORD *)a2 + 147);
    *(void *)(a1 + 592) = a2[74];
    *(_DWORD *)(a1 + 600) = *((_DWORD *)a2 + 150);
    *(void *)(a1 + 608) = a2[76];
    *(void *)(a1 + 616) = a2[77];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v101 = *(_OWORD *)(a2 + 69);
    *(_OWORD *)int v90 = *(_OWORD *)v91;
    *(_OWORD *)(a1 + 552) = v101;
    long long v102 = *(_OWORD *)(a2 + 71);
    long long v103 = *(_OWORD *)(a2 + 73);
    long long v104 = *(_OWORD *)(a2 + 75);
    *(void *)(a1 + 616) = a2[77];
    *(_OWORD *)(a1 + 584) = v103;
    *(_OWORD *)(a1 + 600) = v104;
    *(_OWORD *)(a1 + 568) = v102;
  }
  int v105 = *((_DWORD *)a2 + 156);
  *(unsigned char *)(a1 + 628) = *((unsigned char *)a2 + 628);
  *(_DWORD *)(a1 + 624) = v105;
  int v106 = *((_DWORD *)a2 + 158);
  *(unsigned char *)(a1 + 636) = *((unsigned char *)a2 + 636);
  *(_DWORD *)(a1 + 632) = v106;
  uint64_t v107 = (_DWORD *)(a1 + 640);
  int v108 = (int *)(a2 + 80);
  uint64_t v109 = a2[90];
  if (*(void *)(a1 + 720))
  {
    if (v109)
    {
      int v110 = *v108;
      *(unsigned char *)(a1 + 644) = *((unsigned char *)a2 + 644);
      *uint64_t v107 = v110;
      uint64_t v111 = a2[81];
      *(unsigned char *)(a1 + 656) = *((unsigned char *)a2 + 656);
      *(void *)(a1 + 648) = v111;
      *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
      *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
      *(_DWORD *)(a1 + 668) = *((_DWORD *)a2 + 167);
      *(void *)(a1 + 672) = a2[84];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 680) = *((_DWORD *)a2 + 170);
      *(_DWORD *)(a1 + 684) = *((_DWORD *)a2 + 171);
      *(_DWORD *)(a1 + 688) = *((_DWORD *)a2 + 172);
      *(_DWORD *)(a1 + 692) = *((_DWORD *)a2 + 173);
      *(void *)(a1 + 696) = a2[87];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
      *(void *)(a1 + 712) = a2[89];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 720) = a2[90];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 640);
      long long v114 = *((_OWORD *)a2 + 41);
      *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
      *(_OWORD *)(a1 + 656) = v114;
      long long v116 = *((_OWORD *)a2 + 43);
      long long v115 = *((_OWORD *)a2 + 44);
      long long v117 = *((_OWORD *)a2 + 42);
      *(void *)(a1 + 720) = a2[90];
      *(_OWORD *)(a1 + 688) = v116;
      *(_OWORD *)(a1 + 704) = v115;
      *(_OWORD *)(a1 + 672) = v117;
    }
  }
  else if (v109)
  {
    int v112 = *v108;
    *(unsigned char *)(a1 + 644) = *((unsigned char *)a2 + 644);
    *uint64_t v107 = v112;
    uint64_t v113 = a2[81];
    *(unsigned char *)(a1 + 656) = *((unsigned char *)a2 + 656);
    *(void *)(a1 + 648) = v113;
    *(_DWORD *)(a1 + 660) = *((_DWORD *)a2 + 165);
    *(_DWORD *)(a1 + 664) = *((_DWORD *)a2 + 166);
    *(_DWORD *)(a1 + 668) = *((_DWORD *)a2 + 167);
    *(void *)(a1 + 672) = a2[84];
    *(_DWORD *)(a1 + 680) = *((_DWORD *)a2 + 170);
    *(_DWORD *)(a1 + 684) = *((_DWORD *)a2 + 171);
    *(_DWORD *)(a1 + 688) = *((_DWORD *)a2 + 172);
    *(_DWORD *)(a1 + 692) = *((_DWORD *)a2 + 173);
    *(void *)(a1 + 696) = a2[87];
    *(_DWORD *)(a1 + 704) = *((_DWORD *)a2 + 176);
    *(void *)(a1 + 712) = a2[89];
    *(void *)(a1 + 720) = a2[90];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v118 = *((_OWORD *)a2 + 41);
    *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
    *(_OWORD *)(a1 + 656) = v118;
    long long v119 = *((_OWORD *)a2 + 42);
    long long v120 = *((_OWORD *)a2 + 43);
    long long v121 = *((_OWORD *)a2 + 44);
    *(void *)(a1 + 720) = a2[90];
    *(_OWORD *)(a1 + 688) = v120;
    *(_OWORD *)(a1 + 704) = v121;
    *(_OWORD *)(a1 + 672) = v119;
  }
  int v122 = *((_DWORD *)a2 + 182);
  *(unsigned char *)(a1 + 732) = *((unsigned char *)a2 + 732);
  *(_DWORD *)(a1 + 728) = v122;
  int v123 = *((_DWORD *)a2 + 184);
  *(unsigned char *)(a1 + 740) = *((unsigned char *)a2 + 740);
  *(_DWORD *)(a1 + 736) = v123;
  uint64_t v124 = (_DWORD *)(a1 + 744);
  uint64_t v125 = (int *)(a2 + 93);
  uint64_t v126 = a2[103];
  if (*(void *)(a1 + 824))
  {
    if (v126)
    {
      int v127 = *v125;
      *(unsigned char *)(a1 + 748) = *((unsigned char *)a2 + 748);
      *uint64_t v124 = v127;
      uint64_t v128 = a2[94];
      *(unsigned char *)(a1 + 760) = *((unsigned char *)a2 + 760);
      *(void *)(a1 + 752) = v128;
      *(_DWORD *)(a1 + 764) = *((_DWORD *)a2 + 191);
      *(_DWORD *)(a1 + 768) = *((_DWORD *)a2 + 192);
      *(_DWORD *)(a1 + 772) = *((_DWORD *)a2 + 193);
      *(void *)(a1 + 776) = a2[97];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 784) = *((_DWORD *)a2 + 196);
      *(_DWORD *)(a1 + 788) = *((_DWORD *)a2 + 197);
      *(_DWORD *)(a1 + 792) = *((_DWORD *)a2 + 198);
      *(_DWORD *)(a1 + 796) = *((_DWORD *)a2 + 199);
      *(void *)(a1 + 800) = a2[100];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 808) = *((_DWORD *)a2 + 202);
      *(void *)(a1 + 816) = a2[102];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 824) = a2[103];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B0E240(a1 + 744);
      long long v131 = *(_OWORD *)(a2 + 95);
      *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
      *(_OWORD *)(a1 + 760) = v131;
      long long v133 = *(_OWORD *)(a2 + 99);
      long long v132 = *(_OWORD *)(a2 + 101);
      long long v134 = *(_OWORD *)(a2 + 97);
      *(void *)(a1 + 824) = a2[103];
      *(_OWORD *)(a1 + 792) = v133;
      *(_OWORD *)(a1 + 808) = v132;
      *(_OWORD *)(a1 + 776) = v134;
    }
  }
  else if (v126)
  {
    int v129 = *v125;
    *(unsigned char *)(a1 + 748) = *((unsigned char *)a2 + 748);
    *uint64_t v124 = v129;
    uint64_t v130 = a2[94];
    *(unsigned char *)(a1 + 760) = *((unsigned char *)a2 + 760);
    *(void *)(a1 + 752) = v130;
    *(_DWORD *)(a1 + 764) = *((_DWORD *)a2 + 191);
    *(_DWORD *)(a1 + 768) = *((_DWORD *)a2 + 192);
    *(_DWORD *)(a1 + 772) = *((_DWORD *)a2 + 193);
    *(void *)(a1 + 776) = a2[97];
    *(_DWORD *)(a1 + 784) = *((_DWORD *)a2 + 196);
    *(_DWORD *)(a1 + 788) = *((_DWORD *)a2 + 197);
    *(_DWORD *)(a1 + 792) = *((_DWORD *)a2 + 198);
    *(_DWORD *)(a1 + 796) = *((_DWORD *)a2 + 199);
    *(void *)(a1 + 800) = a2[100];
    *(_DWORD *)(a1 + 808) = *((_DWORD *)a2 + 202);
    *(void *)(a1 + 816) = a2[102];
    *(void *)(a1 + 824) = a2[103];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v135 = *(_OWORD *)(a2 + 95);
    *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
    *(_OWORD *)(a1 + 760) = v135;
    long long v136 = *(_OWORD *)(a2 + 97);
    long long v137 = *(_OWORD *)(a2 + 99);
    long long v138 = *(_OWORD *)(a2 + 101);
    *(void *)(a1 + 824) = a2[103];
    *(_OWORD *)(a1 + 792) = v137;
    *(_OWORD *)(a1 + 808) = v138;
    *(_OWORD *)(a1 + 776) = v136;
  }
  int v139 = *((_DWORD *)a2 + 208);
  *(unsigned char *)(a1 + 836) = *((unsigned char *)a2 + 836);
  *(_DWORD *)(a1 + 832) = v139;
  int v140 = *((_DWORD *)a2 + 210);
  *(unsigned char *)(a1 + 844) = *((unsigned char *)a2 + 844);
  *(_DWORD *)(a1 + 840) = v140;
  *(unsigned char *)(a1 + 845) = *((unsigned char *)a2 + 845);
  uint64_t v141 = a2[106];
  *(unsigned char *)(a1 + 856) = *((unsigned char *)a2 + 856);
  *(void *)(a1 + 848) = v141;
  *(void *)(a1 + 864) = a2[108];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B0E240(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for CRLFreehandDrawingToolkitUIStateData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x368uLL);
}

uint64_t assignWithTake for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  if (*(void *)(a1 + 96))
  {
    if (*(void *)(a2 + 96))
    {
      *(_DWORD *)uint64_t v4 = *(_DWORD *)v5;
      *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(void *)(a1 + 36) = *(void *)(a2 + 36);
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_100B0E240(a1 + 16);
  }
  long long v6 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
  *(void *)(v4 + 80) = *(void *)(v5 + 80);
  long long v7 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
  *(_OWORD *)(v4 + 16) = v7;
LABEL_6:
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  int v8 = (_DWORD *)(a1 + 120);
  uint64_t v9 = (_DWORD *)(a2 + 120);
  if (*(void *)(a1 + 200))
  {
    if (*(void *)(a2 + 200))
    {
      _DWORD *v8 = *v9;
      *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(void *)(a1 + 140) = *(void *)(a2 + 140);
      *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_100B0E240(a1 + 120);
  }
  long long v10 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v10;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  long long v11 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)int v8 = *(_OWORD *)v9;
  *(_OWORD *)(a1 + 136) = v11;
LABEL_11:
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  long long v12 = (_DWORD *)(a1 + 224);
  long long v13 = (_DWORD *)(a2 + 224);
  if (*(void *)(a1 + 304))
  {
    if (*(void *)(a2 + 304))
    {
      *long long v12 = *v13;
      *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
      *(void *)(a1 + 244) = *(void *)(a2 + 244);
      *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_100B0E240(a1 + 224);
  }
  long long v14 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v14;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  long long v15 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)long long v12 = *(_OWORD *)v13;
  *(_OWORD *)(a1 + 240) = v15;
LABEL_16:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
  *(unsigned char *)(a1 + 324) = *(unsigned char *)(a2 + 324);
  long long v16 = (_DWORD *)(a1 + 328);
  long long v17 = (_DWORD *)(a2 + 328);
  if (*(void *)(a1 + 408))
  {
    if (*(void *)(a2 + 408))
    {
      *long long v16 = *v17;
      *(unsigned char *)(a1 + 332) = *(unsigned char *)(a2 + 332);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
      *(_DWORD *)(a1 + 348) = *(_DWORD *)(a2 + 348);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    sub_100B0E240(a1 + 328);
  }
  long long v18 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v18;
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v19 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)long long v16 = *(_OWORD *)v17;
  *(_OWORD *)(a1 + 344) = v19;
LABEL_21:
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  *(unsigned char *)(a1 + 420) = *(unsigned char *)(a2 + 420);
  *(_DWORD *)(a1 + 424) = *(_DWORD *)(a2 + 424);
  *(unsigned char *)(a1 + 428) = *(unsigned char *)(a2 + 428);
  int v20 = (_DWORD *)(a1 + 432);
  int v21 = (_DWORD *)(a2 + 432);
  if (*(void *)(a1 + 512))
  {
    if (*(void *)(a2 + 512))
    {
      *int v20 = *v21;
      *(unsigned char *)(a1 + 436) = *(unsigned char *)(a2 + 436);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
      *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 496) = *(_DWORD *)(a2 + 496);
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_100B0E240(a1 + 432);
  }
  long long v22 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v22;
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  long long v23 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)int v20 = *(_OWORD *)v21;
  *(_OWORD *)(a1 + 448) = v23;
LABEL_26:
  *(_DWORD *)(a1 + 520) = *(_DWORD *)(a2 + 520);
  *(unsigned char *)(a1 + 524) = *(unsigned char *)(a2 + 524);
  *(_DWORD *)(a1 + 528) = *(_DWORD *)(a2 + 528);
  *(unsigned char *)(a1 + 532) = *(unsigned char *)(a2 + 532);
  uint64_t v24 = (_DWORD *)(a1 + 536);
  int v25 = (_DWORD *)(a2 + 536);
  if (*(void *)(a1 + 616))
  {
    if (*(void *)(a2 + 616))
    {
      *uint64_t v24 = *v25;
      *(unsigned char *)(a1 + 540) = *(unsigned char *)(a2 + 540);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
      *(_DWORD *)(a1 + 556) = *(_DWORD *)(a2 + 556);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    sub_100B0E240(a1 + 536);
  }
  long long v26 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v26;
  *(_OWORD *)(a1 + 600) = *(_OWORD *)(a2 + 600);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  long long v27 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(a1 + 552) = v27;
LABEL_31:
  *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
  *(unsigned char *)(a1 + 628) = *(unsigned char *)(a2 + 628);
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  *(unsigned char *)(a1 + 636) = *(unsigned char *)(a2 + 636);
  uint64_t v28 = (_DWORD *)(a1 + 640);
  long long v29 = (_DWORD *)(a2 + 640);
  if (*(void *)(a1 + 720))
  {
    if (*(void *)(a2 + 720))
    {
      *uint64_t v28 = *v29;
      *(unsigned char *)(a1 + 644) = *(unsigned char *)(a2 + 644);
      *(void *)(a1 + 648) = *(void *)(a2 + 648);
      *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
      *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
      *(void *)(a1 + 664) = *(void *)(a2 + 664);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    sub_100B0E240(a1 + 640);
  }
  long long v30 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v30;
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  long long v31 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
  *(_OWORD *)(a1 + 656) = v31;
LABEL_36:
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  *(unsigned char *)(a1 + 732) = *(unsigned char *)(a2 + 732);
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  *(unsigned char *)(a1 + 740) = *(unsigned char *)(a2 + 740);
  long long v32 = (_OWORD *)(a1 + 744);
  long long v33 = (_OWORD *)(a2 + 744);
  if (!*(void *)(a1 + 824))
  {
LABEL_40:
    long long v34 = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v34;
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(void *)(a1 + 824) = *(void *)(a2 + 824);
    long long v35 = *(_OWORD *)(a2 + 760);
    *long long v32 = *v33;
    *(_OWORD *)(a1 + 760) = v35;
    goto LABEL_41;
  }
  if (!*(void *)(a2 + 824))
  {
    sub_100B0E240(a1 + 744);
    goto LABEL_40;
  }
  *(_DWORD *)long long v32 = *(_DWORD *)v33;
  *(unsigned char *)(a1 + 748) = *(unsigned char *)(a2 + 748);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
  *(_DWORD *)(a1 + 764) = *(_DWORD *)(a2 + 764);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 808) = *(_DWORD *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  swift_bridgeObjectRelease();
LABEL_41:
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  *(unsigned char *)(a1 + 836) = *(unsigned char *)(a2 + 836);
  *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
  *(_WORD *)(a1 + 844) = *(_WORD *)(a2 + 844);
  *(void *)(a1 + 848) = *(void *)(a2 + 848);
  *(unsigned char *)(a1 + 856) = *(unsigned char *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 872)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 864);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 872) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 864) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 872) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolkitUIStateData()
{
  return &type metadata for CRLFreehandDrawingToolkitUIStateData;
}

unint64_t sub_100B0EBAC()
{
  unint64_t result = qword_1016923F8;
  if (!qword_1016923F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016923F8);
  }
  return result;
}

unint64_t sub_100B0EC08()
{
  unint64_t result = qword_101692400;
  if (!qword_101692400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692400);
  }
  return result;
}

unint64_t sub_100B0EC60()
{
  unint64_t result = qword_101692408;
  if (!qword_101692408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692408);
  }
  return result;
}

unint64_t sub_100B0ECB8()
{
  unint64_t result = qword_101692410;
  if (!qword_101692410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692410);
  }
  return result;
}

unint64_t sub_100B0ED10()
{
  unint64_t result = qword_101692418;
  if (!qword_101692418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692418);
  }
  return result;
}

unint64_t sub_100B0ED68()
{
  unint64_t result = qword_101692420;
  if (!qword_101692420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692420);
  }
  return result;
}

unint64_t sub_100B0EDC0()
{
  unint64_t result = qword_101692428;
  if (!qword_101692428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692428);
  }
  return result;
}

unint64_t sub_100B0EE18()
{
  unint64_t result = qword_101692430;
  if (!qword_101692430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692430);
  }
  return result;
}

unint64_t sub_100B0EE70()
{
  unint64_t result = qword_101692438;
  if (!qword_101692438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692438);
  }
  return result;
}

unint64_t sub_100B0EEC8()
{
  unint64_t result = qword_101692440;
  if (!qword_101692440)
  {
    sub_100522D34(&qword_101692448);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692440);
  }
  return result;
}

unint64_t sub_100B0EF28()
{
  unint64_t result = qword_101692450;
  if (!qword_101692450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692450);
  }
  return result;
}

unint64_t sub_100B0EF80()
{
  unint64_t result = qword_101692458;
  if (!qword_101692458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692458);
  }
  return result;
}

uint64_t sub_100B0EFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a11)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100B0F044(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  long long v12 = *(_OWORD *)(a1 + 152);
  uint64_t v10 = *(void *)(a1 + 168);
  sub_100B0C93C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80));
  sub_100B0C93C(v2, v3, v4, v5, v6, v7, v8, v9, v12, *((uint64_t *)&v12 + 1), v10);
  return a1;
}

uint64_t sub_100B0F104(uint64_t a1)
{
  uint64_t v70 = *(void *)(a1 + 128);
  uint64_t v71 = *(void *)(a1 + 120);
  uint64_t v69 = *(void *)(a1 + 136);
  uint64_t v66 = *(void *)(a1 + 152);
  uint64_t v67 = *(void *)(a1 + 144);
  uint64_t v64 = *(void *)(a1 + 168);
  uint64_t v65 = *(void *)(a1 + 160);
  uint64_t v60 = *(void *)(a1 + 176);
  long long v50 = *(_OWORD *)(a1 + 184);
  uint64_t v49 = *(void *)(a1 + 200);
  uint64_t v63 = *(void *)(a1 + 224);
  uint64_t v58 = *(void *)(a1 + 240);
  uint64_t v59 = *(void *)(a1 + 232);
  uint64_t v56 = *(void *)(a1 + 256);
  uint64_t v57 = *(void *)(a1 + 248);
  uint64_t v53 = *(void *)(a1 + 272);
  uint64_t v54 = *(void *)(a1 + 264);
  uint64_t v52 = *(void *)(a1 + 280);
  long long v46 = *(_OWORD *)(a1 + 288);
  uint64_t v41 = *(void *)(a1 + 304);
  uint64_t v2 = *(void *)(a1 + 344);
  uint64_t v61 = *(void *)(a1 + 336);
  uint64_t v62 = *(void *)(a1 + 328);
  long long v44 = *(_OWORD *)(a1 + 392);
  long long v51 = *(_OWORD *)(a1 + 496);
  long long v55 = *(_OWORD *)(a1 + 600);
  long long v68 = *(_OWORD *)(a1 + 704);
  long long v72 = *(_OWORD *)(a1 + 808);
  uint64_t v3 = *(void *)(a1 + 352);
  uint64_t v4 = *(void *)(a1 + 360);
  uint64_t v6 = *(void *)(a1 + 368);
  uint64_t v5 = *(void *)(a1 + 376);
  uint64_t v7 = *(void *)(a1 + 384);
  uint64_t v8 = *(void *)(a1 + 408);
  uint64_t v9 = *(void *)(a1 + 432);
  uint64_t v12 = *(void *)(a1 + 440);
  uint64_t v13 = *(void *)(a1 + 448);
  uint64_t v14 = *(void *)(a1 + 456);
  uint64_t v15 = *(void *)(a1 + 464);
  uint64_t v16 = *(void *)(a1 + 472);
  uint64_t v17 = *(void *)(a1 + 480);
  uint64_t v10 = *(void *)(a1 + 512);
  uint64_t v19 = *(void *)(a1 + 488);
  uint64_t v20 = *(void *)(a1 + 536);
  uint64_t v21 = *(void *)(a1 + 544);
  uint64_t v22 = *(void *)(a1 + 552);
  uint64_t v23 = *(void *)(a1 + 560);
  uint64_t v24 = *(void *)(a1 + 568);
  uint64_t v25 = *(void *)(a1 + 576);
  uint64_t v26 = *(void *)(a1 + 584);
  uint64_t v18 = *(void *)(a1 + 616);
  uint64_t v28 = *(void *)(a1 + 592);
  uint64_t v29 = *(void *)(a1 + 640);
  uint64_t v30 = *(void *)(a1 + 648);
  uint64_t v31 = *(void *)(a1 + 656);
  uint64_t v32 = *(void *)(a1 + 664);
  uint64_t v33 = *(void *)(a1 + 672);
  uint64_t v34 = *(void *)(a1 + 680);
  uint64_t v35 = *(void *)(a1 + 688);
  uint64_t v27 = *(void *)(a1 + 720);
  uint64_t v37 = *(void *)(a1 + 696);
  uint64_t v38 = *(void *)(a1 + 744);
  uint64_t v39 = *(void *)(a1 + 752);
  uint64_t v40 = *(void *)(a1 + 760);
  uint64_t v42 = *(void *)(a1 + 768);
  uint64_t v43 = *(void *)(a1 + 776);
  uint64_t v45 = *(void *)(a1 + 784);
  uint64_t v47 = *(void *)(a1 + 792);
  uint64_t v48 = *(void *)(a1 + 800);
  uint64_t v36 = *(void *)(a1 + 824);
  sub_100B0EFD4(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96));
  sub_100B0EFD4(v71, v70, v69, v67, v66, v65, v64, v60, v50, *((uint64_t *)&v50 + 1), v49);
  sub_100B0EFD4(v63, v59, v58, v57, v56, v54, v53, v52, v46, *((uint64_t *)&v46 + 1), v41);
  sub_100B0EFD4(v62, v61, v2, v3, v4, v6, v5, v7, v44, *((uint64_t *)&v44 + 1), v8);
  sub_100B0EFD4(v9, v12, v13, v14, v15, v16, v17, v19, v51, *((uint64_t *)&v51 + 1), v10);
  sub_100B0EFD4(v20, v21, v22, v23, v24, v25, v26, v28, v55, *((uint64_t *)&v55 + 1), v18);
  sub_100B0EFD4(v29, v30, v31, v32, v33, v34, v35, v37, v68, *((uint64_t *)&v68 + 1), v27);
  sub_100B0EFD4(v38, v39, v40, v42, v43, v45, v47, v48, v72, *((uint64_t *)&v72 + 1), v36);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_100B0F450()
{
  unint64_t result = qword_101692498;
  if (!qword_101692498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692498);
  }
  return result;
}

unint64_t sub_100B0F4A4()
{
  unint64_t result = qword_1016924A0;
  if (!qword_1016924A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016924A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLFreehandDrawingToolkitUIStateData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B0F654);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFreehandDrawingToolkitUIStateData.CodingKeys()
{
  return &type metadata for CRLFreehandDrawingToolkitUIStateData.CodingKeys;
}

unint64_t sub_100B0F690()
{
  unint64_t result = qword_1016924A8;
  if (!qword_1016924A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016924A8);
  }
  return result;
}

uint64_t destroy for CRLLayerTransformByScaleFactorTransition()
{
  swift_unknownObjectWeakDestroy();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B0F7AC(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakCopyInit);
}

uint64_t assignWithCopy for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakCopyAssign();
  *(void *)(v4 + 8) = *(void *)(a2 + 8);
  *(void *)(v4 + 16) = *(void *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(v4 + 40) = *(unsigned char *)(a2 + 40);
  *(_OWORD *)(v4 + 24) = v5;
  swift_unknownObjectWeakCopyAssign();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t initializeWithTake for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100B0F7AC(a1, a2, a3, (uint64_t (*)(void))&_swift_unknownObjectWeakTakeInit);
}

uint64_t sub_100B0F7AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a4();
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v7 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(v7 + 40) = *(unsigned char *)(a2 + 40);
  ((void (*)(uint64_t, uint64_t))a4)(v7 + 48, a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for CRLLayerTransformByScaleFactorTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  *(_OWORD *)(v4 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(v4 + 40) = *(unsigned char *)(a2 + 40);
  swift_unknownObjectWeakTakeAssign();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLLayerTransformByScaleFactorTransition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 57)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLLayerTransformByScaleFactorTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 57) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLLayerTransformByScaleFactorTransition()
{
  return &type metadata for CRLLayerTransformByScaleFactorTransition;
}

void sub_100B0F934(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v5 = (void *)Strong;
    double v6 = 0.5;
    double v7 = 0.5;
    if ((*(unsigned char *)(v2 + 40) & 1) == 0)
    {
      double v6 = *(double *)(v2 + 24);
      double v7 = *(double *)(v2 + 32);
    }
    id v8 = (id)swift_unknownObjectWeakLoadStrong();
    if (!v8) {
      id v8 = v5;
    }
    char v9 = *(unsigned char *)(v2 + 56) & 1;
    CGFloat v10 = *(double *)(v2 + 8);
    id v11 = v8;
    CATransform3DMakeScale(&v39, v10, v10, 1.0);
    sub_100A681F4(&v39.m11, v8, v5, v9, v36, v6, v7);

    CGFloat v12 = *(double *)(v2 + 16);
    id v13 = v11;
    CATransform3DMakeScale(&v38, v12, v12, 1.0);
    sub_100A681F4(&v38.m11, v8, v5, v9, v37, v6, v7);

    type metadata accessor for CATransform3D(0);
    uint64_t v15 = v14;
    v35[3] = v14;
    uint64_t v16 = (_OWORD *)swift_allocObject();
    v34[3] = v15;
    v35[0] = v16;
    long long v17 = v36[5];
    v16[5] = v36[4];
    v16[6] = v17;
    long long v18 = v36[7];
    v16[7] = v36[6];
    v16[8] = v18;
    long long v19 = v36[1];
    v16[1] = v36[0];
    v16[2] = v19;
    long long v20 = v36[3];
    v16[3] = v36[2];
    v16[4] = v20;
    uint64_t v21 = (_OWORD *)swift_allocObject();
    v34[0] = v21;
    long long v22 = v37[5];
    v21[5] = v37[4];
    v21[6] = v22;
    long long v23 = v37[7];
    v21[7] = v37[6];
    v21[8] = v23;
    long long v24 = v37[1];
    v21[1] = v37[0];
    v21[2] = v24;
    long long v25 = v37[3];
    v21[3] = v37[2];
    v21[4] = v25;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v28 = 0u;
    long long v29 = 0u;
    LOBYTE(v32) = 26;
    *((void *)&v32 + 1) = 0x726F66736E617274;
    unint64_t v33 = 0xE90000000000006DLL;
    sub_1005E93B8((uint64_t)v35, (uint64_t)&v28);
    sub_1005E93B8((uint64_t)v34, (uint64_t)&v30);
    long long v26 = v31;
    *(_OWORD *)(a1 + 32) = v30;
    *(_OWORD *)(a1 + 48) = v26;
    *(_OWORD *)(a1 + 64) = v32;
    *(void *)(a1 + 80) = v33;
    long long v27 = v29;
    *(_OWORD *)a1 = v28;
    *(_OWORD *)(a1 + 16) = v27;
  }
  else
  {
    *(void *)(a1 + 80) = 0;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

uint64_t sub_100B0FBA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  char v9 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = result;
  *(unsigned char *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 256) = 58;
  return result;
}

unint64_t sub_100B0FC18(uint64_t a1)
{
  unint64_t result = sub_100B0FC40();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100B0FC40()
{
  unint64_t result = qword_1016924B0;
  if (!qword_1016924B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016924B0);
  }
  return result;
}

BOOL sub_100B0FC94(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  uint64_t v6 = (void *)v5;
  if (Strong)
  {
    if (!v5) {
      goto LABEL_19;
    }
    sub_10054CE40();
    id v7 = Strong;
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    goto LABEL_6;
  }
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8) || *(double *)(a1 + 16) != *(double *)(a2 + 16)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
LABEL_15:
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = (void *)v10;
    if (Strong)
    {
      if (v10)
      {
        sub_10054CE40();
        id v11 = Strong;
        char v12 = static NSObject.== infix(_:_:)();

        if ((v12 & 1) == 0) {
          return 0;
        }
        goto LABEL_23;
      }
LABEL_19:

      return 0;
    }
    if (!v10)
    {
LABEL_23:
      int v13 = *(unsigned __int8 *)(a1 + 56);
      int v14 = *(unsigned __int8 *)(a2 + 56);
      if (v13 != 2)
      {
        BOOL v15 = (v13 & 1) == 0;
        return v14 != 2 && ((v15 ^ v14) & 1) != 0;
      }
      return v14 == 2;
    }
LABEL_6:

    return 0;
  }
  if (*(unsigned char *)(a2 + 40)) {
    return 0;
  }
  BOOL result = 0;
  if (*(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 32) == *(double *)(a2 + 32)) {
    goto LABEL_15;
  }
  return result;
}

uint64_t sub_100B0FE24()
{
  return _swift_deallocObject(v0, 144, 7);
}

void sub_100B0FE34(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v10 = [a1 getBoardItemForUUID:isa];

  if (!v10) {
    goto LABEL_22;
  }
  type metadata accessor for CRLWPShapeItem();
  uint64_t v11 = swift_dynamicCastClass();
  if (!v11)
  {

LABEL_22:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPRemoveHyperlinkCommand.swift", 102, 2, 23, (uint64_t)"Unable to retrieve board item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve board item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/Commands/CRLWPRemoveHyperlinkCommand.swift", 102, 2, 23);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v29, v30);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  int v13 = *(void **)(v11 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v13) {
    goto LABEL_20;
  }
  uint64_t v14 = v6 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_range;
  uint64_t v16 = *(void *)(v6 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_range);
  uint64_t v15 = *(void *)(v14 + 8);
  uint64_t v34 = v16;
  uint64_t v35 = v15;
  if (__OFSUB__(v15, v16))
  {
    __break(1u);
    goto LABEL_18;
  }
  unsigned __int8 v31 = a3;
  if (v15 == v16)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;

    uint64_t v17 = v32;
    uint64_t v18 = v33;
    uint64_t v25 = v16;
    if (v17 != NSNotFound.getter())
    {
      uint64_t v25 = v17 + v18;
      if (__OFADD__(v17, v18))
      {
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
      }
      uint64_t v16 = v17;
    }
  }
  else
  {
    id v19 = v13;
    sub_10090059C(v16, v15, v36);
    id v20 = v36[4];
    id v21 = v36[5];
    long long v22 = (char *)v36[3];

    uint64_t KeyPath = swift_getKeyPath();
    id v24 = v19;
    sub_100917B40(KeyPath, v22, (uint64_t)v20, (uint64_t)v21, v24, &v34);

    uint64_t v5 = v4;
    swift_release();

    uint64_t v16 = v34;
    uint64_t v25 = v35;
  }
  if (__OFSUB__(v25, v16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v25 - v16 < 1)
  {
  }
  else
  {
    id v26 = v10;
    sub_10103405C(v12, (uint64_t)&off_101518040);

    if (v5)
    {
    }
    else
    {
      uint64_t v27 = swift_getKeyPath();
      sub_100E92DB0(v27, v16, v25);
      swift_release();
      id v28 = v26;
      sub_101023724(v12, (uint64_t)&off_101518040, v31);
    }
  }
}

uint64_t sub_100B101EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform27CRLWPRemoveHyperlinkCommand_boardItemID;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

id sub_100B10258()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPRemoveHyperlinkCommand();
  return [super dealloc];
}

uint64_t sub_100B102FC()
{
  return type metadata accessor for CRLWPRemoveHyperlinkCommand();
}

uint64_t type metadata accessor for CRLWPRemoveHyperlinkCommand()
{
  uint64_t result = qword_1016924E0;
  if (!qword_1016924E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B10350()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B103E8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

void destroy for CRLCanvasExporter(uint64_t a1)
{
  swift_bridgeObjectRelease();

  NSString v2 = *(void **)(a1 + 120);
}

uint64_t initializeWithCopy for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void **)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  uint64_t v6 = *(void **)(a2 + 112);
  id v7 = *(void **)(a2 + 120);
  *(void *)(a1 + 112) = v6;
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRetain();
  id v8 = v5;
  id v9 = v6;
  id v10 = v7;
  return a1;
}

uint64_t assignWithCopy for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  long long v6 = *(_OWORD *)(a2 + 56);
  long long v7 = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v7;
  *(_OWORD *)(a1 + 56) = v6;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  id v8 = *(void **)(a2 + 104);
  id v9 = *(void **)(a1 + 104);
  *(void *)(a1 + 104) = v8;
  id v10 = v8;

  uint64_t v11 = *(void **)(a2 + 112);
  uint64_t v12 = *(void **)(a1 + 112);
  *(void *)(a1 + 112) = v11;
  id v13 = v11;

  uint64_t v14 = *(void **)(a2 + 120);
  uint64_t v15 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = v14;
  id v16 = v14;

  return a1;
}

uint64_t assignWithTake for CRLCanvasExporter(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  long long v5 = *(void **)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);

  long long v6 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCanvasExporter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCanvasExporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 104) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCanvasExporter()
{
  return &type metadata for CRLCanvasExporter;
}

uint64_t sub_100B107F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100538BF8(a1, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for TaskPriority();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1005E52F0((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t sub_100B109D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  id v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100538BF8(a1, (uint64_t)v9);
  uint64_t v10 = type metadata accessor for TaskPriority();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1005E52F0((uint64_t)v9);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v12 = 0;
  uint64_t v14 = 0;
LABEL_6:
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  sub_1005057FC((uint64_t *)&unk_1016743B0);
  if (v14 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    v17[2] = v12;
    v17[3] = v14;
  }
  return swift_task_create();
}

uint64_t sub_100B10BC4(uint64_t a1, uint64_t a2, char a3, char a4)
{
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 57) = a4;
  *(unsigned char *)(v5 + 56) = a3;
  *(void *)(v5 + 16) = a1;
  return _swift_task_switch(sub_100B10BF0, 0, 0);
}

uint64_t sub_100B10BF0()
{
  v1._countAndFlagsBits = 6710384;
  v1._object = (void *)0xE300000000000000;
  if (String.hasSuffix(_:)(v1))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"exportAsPDFToTemporaryURL(title:forPrinting:scenesOnly:)", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasExporter.swift", 87, 2, 77, (uint64_t)"The title should not already have pdf applied to it.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"exportAsPDFToTemporaryURL(title:forPrinting:scenesOnly:)", 56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLCanvasExporter.swift", 87, 2, 77);
  }
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 crl_filenameFromDisplayNameWithExtension:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  type metadata accessor for CRLTemporaryFile();
  swift_allocObject();
  uint64_t v8 = sub_100874FA4(v5, v7);
  *(void *)(v0 + 40) = v8;
  uint64_t v9 = (uint64_t)v8 + OBJC_IVAR____TtC8Freeform16CRLTemporaryFile_url;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100B10E24;
  char v11 = *(unsigned char *)(v0 + 57);
  char v12 = *(unsigned char *)(v0 + 56);
  return sub_100B111B0(v9, v12, v11);
}

uint64_t sub_100B10E24()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  NSString v2 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v3 = *(void *)(v1 + 40);
  return v2(v3);
}

unint64_t sub_100B10F34(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 104);
  [v3 setIsPrinting:1];
  if (*(unsigned char *)(v1 + 49))
  {
    sub_10051B3EC(v1 + 8, (uint64_t)v19, &qword_101692528);
    unint64_t result = sub_10051B3EC((uint64_t)v19, (uint64_t)&v20, &qword_101692528);
    if (!v20) {
      return result;
    }
    unint64_t result = *(void *)(v1 + 96);
    if ((v20 & 0xC000000000000001) == 0)
    {
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (result < *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v6 = *(void *)(v20 + 8 * result + 32) + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect;
        double v7 = *(double *)v6;
        double v8 = *(double *)(v6 + 8);
        double v9 = *(double *)(v6 + 16);
        double v10 = *(double *)(v6 + 24);
        if ((*(unsigned char *)(v1 + 50) & 1) == 0)
        {
LABEL_8:
          [v3 setUnscaledClipRect:v7, v8, v9, v10];
          sub_10051B3EC(v1 + 16, (uint64_t)v21, (uint64_t *)&unk_101676320);
          char v11 = v21;
LABEL_13:
          sub_10051B3EC((uint64_t)v11, (uint64_t)v25, (uint64_t *)&unk_101676320);
          double v4 = 1.0;
          if ((v28 & 1) == 0)
          {
            double v16 = v26 / v9;
            if (v27 / v10 < v26 / v9) {
              double v16 = v27 / v10;
            }
            double v4 = floor(v16 * 100.0) / 100.0;
          }
          goto LABEL_17;
        }
LABEL_10:
        sub_10051B3EC(v1 + 56, (uint64_t)v18, (uint64_t *)&unk_101676320);
        sub_10051B3EC((uint64_t)v18, (uint64_t)v21, (uint64_t *)&unk_101676320);
        if ((v24 & 1) == 0)
        {
          double v7 = sub_1000672D8(1, v22, v23, v7, v8, v9, v10);
          double v8 = v13;
          double v9 = v14;
          double v10 = v15;
        }
        [v3 setUnscaledClipRect:v7, v8, v9, v10];
        sub_10051B3EC(v1 + 16, (uint64_t)v17, (uint64_t *)&unk_101676320);
        char v11 = v17;
        goto LABEL_13;
      }
      __break(1u);
      return result;
    }
    uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    double v7 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect);
    double v8 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8);
    double v9 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16);
    double v10 = *(double *)(v12 + OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24);
    swift_unknownObjectRelease();
    if ((*(unsigned char *)(v1 + 50) & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_10;
  }
  [v3 setUnscaledClipRect:CGRectInfinite.origin.x, CGRectInfinite.origin.y, CGRectInfinite.size.width, CGRectInfinite.size.height];
  double v4 = *(double *)v1;
LABEL_17:
  [v3 setViewScale:v4];
  return (unint64_t)[v3 drawPageInContext:a1 createPage:1 includeMargin:0];
}

uint64_t sub_100B111B0(uint64_t a1, char a2, char a3)
{
  *(unsigned char *)(v4 + 90) = a3;
  *(unsigned char *)(v4 + 89) = a2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = type metadata accessor for URL();
  *(void *)(v4 + 32) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = *(void *)(v6 + 64);
  *(void *)(v4 + 56) = swift_task_alloc();
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v4 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_100B112B0, 0, 0);
}

uint64_t sub_100B112B0()
{
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(long long **)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + 32);
  char v7 = *(unsigned char *)(v0 + 90);
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v1, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v8, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v11 + v10, v2, v6);
  unint64_t v12 = v11 + ((v4 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v13 = *v5;
  long long v14 = v5[1];
  long long v15 = v5[3];
  *(_OWORD *)(v12 + 32) = v5[2];
  *(_OWORD *)(v12 + 48) = v15;
  *(_OWORD *)unint64_t v12 = v13;
  *(_OWORD *)(v12 + 16) = v14;
  long long v16 = v5[4];
  long long v17 = v5[5];
  long long v18 = v5[7];
  *(_OWORD *)(v12 + 96) = v5[6];
  *(_OWORD *)(v12 + 112) = v18;
  *(_OWORD *)(v12 + 64) = v16;
  *(_OWORD *)(v12 + 80) = v17;
  *(unsigned char *)(v12 + 128) = v7;
  sub_1007C2298(v5);
  uint64_t v19 = sub_100B107F4(v1, (uint64_t)&unk_101692510, v11);
  *(void *)(v0 + 72) = v19;
  sub_1005E52F0(v1);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_100B114B4;
  return Task.result.getter(v0 + 88, v19, (char *)&type metadata for () + 8, &type metadata for Never, &protocol witness table for Never);
}

uint64_t sub_100B114B4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100B115B0, 0, 0);
}

uint64_t sub_100B115B0()
{
  int v1 = *(unsigned __int8 *)(v0 + 89);
  uint64_t v2 = self;
  NSString v3 = String._bridgeToObjectiveC()();
  if (v1) {
    uint64_t v4 = 3;
  }
  else {
    uint64_t v4 = 1;
  }
  _s8Freeform23CRLAnalyticsFeatureUsedC14featurePayload3forSDySSSo8NSObjectCGAA0bC4NameO_tFZ_0(v4);
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 sendEventInDomain:v3 lazily:1 eventPayload:isa];

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100B116F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 97) = a6;
  *(void *)(v6 + 240) = a4;
  *(void *)(v6 + 248) = a5;
  return _swift_task_switch(sub_100B11714, 0, 0);
}

uint64_t sub_100B11714@<X0>(NSURL *a1@<X8>)
{
  URL._bridgeToObjectiveC()(a1);
  CFURLRef v3 = v2;
  CGContextRef v4 = CGPDFContextCreateWithURL(v2, 0, 0);

  if (v4)
  {
    int v5 = *(unsigned __int8 *)(v1 + 97);
    uint64_t v6 = *(void *)(v1 + 248);
    id v7 = *(id *)(v6 + 112);
    uint64_t v8 = &selRef_crl_dispatchData;
    [v7 setCgContext:v4];
    sub_1004570BC((uint64_t)v4, v7);
    uint64_t v9 = *(void **)(v6 + 104);
    *(void *)(v1 + 48) = sub_100B11EE4;
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 16) = _NSConcreteStackBlock;
    *(void *)(v1 + 24) = *(void *)"";
    *(void *)(v1 + 32) = sub_100B12228;
    *(void *)(v1 + 40) = &unk_101524440;
    unint64_t v10 = _Block_copy((const void *)(v1 + 16));
    swift_release();
    [v9 setPostRenderAction:v10];
    _Block_release(v10);
    if (v5 == 1)
    {
      sub_10051B3EC(*(void *)(v1 + 248) + 8, v1 + 224, &qword_101692528);
      uint64_t v38 = v1 + 224;
      sub_10051B3EC(v1 + 224, v1 + 232, &qword_101692528);
      unint64_t v11 = *(void *)(v1 + 232);
      if (!v11)
      {
LABEL_33:

        goto LABEL_34;
      }
      if (v11 >> 62) {
        goto LABEL_30;
      }
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      sub_1007BA66C(v38);
      id v13 = v9;
      while (v12)
      {
        id v37 = v7;
        uint64_t v14 = *(void *)(v1 + 248);
        sub_10051B3EC(v14 + 56, v1 + 184, (uint64_t *)&unk_101676320);
        sub_10051B3EC(v14 + 16, v1 + 104, (uint64_t *)&unk_101676320);
        uint64_t v8 = 0;
        uint64_t v42 = *(void *)(v14 + 120);
        unint64_t v40 = v11;
        uint64_t v41 = OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer;
        unint64_t v43 = v11 & 0xC000000000000001;
        uint64_t v39 = v12;
        while (v43)
        {
          long long v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          long long v16 = (char *)v8 + 1;
          if (__OFADD__(v8, 1)) {
            goto LABEL_29;
          }
LABEL_12:
          long long v44 = v15;
          double v17 = *(double *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect];
          CGFloat v18 = *(double *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 8];
          double v19 = *(double *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 16];
          double v20 = *(double *)&v15[OBJC_IVAR____TtC8Freeform12CRLSceneInfo_savedUnscaledRect + 24];
          sub_10051B3EC(v1 + 184, v1 + 144, (uint64_t *)&unk_101676320);
          if ((*(unsigned char *)(v1 + 176) & 1) == 0)
          {
            double v17 = sub_1000672D8(1, *(double *)(v1 + 160), *(double *)(v1 + 168), v17, v18, v19, v20);
            CGFloat v18 = v21;
            double v19 = v22;
            double v20 = v23;
          }
          [v9 setUnscaledClipRect:v17, v18, v19, v20];
          sub_10051B3EC(v1 + 104, v1 + 64, (uint64_t *)&unk_101676320);
          double v24 = 1.0;
          if ((*(unsigned char *)(v1 + 96) & 1) == 0)
          {
            double v25 = *(double *)(v1 + 80) / v19;
            if (*(double *)(v1 + 88) / v20 < v25) {
              double v25 = *(double *)(v1 + 88) / v20;
            }
            double v24 = floor(v25 * 100.0) / 100.0;
          }
          [v9 setViewScale:v24];
          double v26 = v4;
          [v9 drawPageInContext:v4 createPage:1 includeMargin:0];
          id v7 = [objc_allocWithZone((Class)CRLCanvasImager) initWithBoard:v42];
          double v27 = *(char **)(v42 + v41);
          uint64_t v28 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
          CKRecordID v29 = *(double **)&v27[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
          Swift::String v30 = v27;
          if (!v29)
          {
            sub_100846AB0();
            CKRecordID v29 = *(double **)&v27[v28];
          }
          if (v29) {
            unint64_t v31 = (unint64_t)v29;
          }
          else {
            unint64_t v31 = (unint64_t)_swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRetain();

          swift_bridgeObjectRetain();
          if (v31 >> 62)
          {
            sub_1005057FC(&qword_101673060);
            _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
          }
          CGContextRef v4 = v26;
          unint64_t v11 = v40;
          swift_bridgeObjectRelease();
          sub_1005057FC(&qword_101673060);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v7 setInfos:isa];

          *(void *)(v1 + 48) = sub_100B11EE4;
          *(void *)(v1 + 56) = 0;
          *(void *)(v1 + 16) = _NSConcreteStackBlock;
          *(void *)(v1 + 24) = *(void *)"";
          *(void *)(v1 + 32) = sub_100B12228;
          *(void *)(v1 + 40) = &unk_101524468;
          uint64_t v33 = _Block_copy((const void *)(v1 + 16));
          swift_release();
          [v7 setPostRenderAction:v33];

          _Block_release(v33);
          uint64_t v8 = (char **)((char *)v8 + 1);
          uint64_t v9 = v7;
          if (v16 == (char *)v39)
          {
            sub_10058EEF8(v38);

            id v7 = v37;
            uint64_t v8 = &selRef_crl_dispatchData;
            goto LABEL_32;
          }
        }
        long long v15 = (char *)*(id *)(v11 + 8 * (void)v8 + 32);
        long long v16 = (char *)v8 + 1;
        if (!__OFADD__(v8, 1)) {
          goto LABEL_12;
        }
LABEL_29:
        __break(1u);
LABEL_30:
        sub_1007BA66C(v38);
        sub_1007BA66C(v38);
        id v34 = v9;
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        sub_10058EEF8(v38);
      }
      sub_10058EEF8(v38);
    }
    else
    {
      [v9 drawPageInContext:v4 createPage:1 includeMargin:1];
    }
LABEL_32:
    CGPDFContextClose(v4);
    sub_1004570BC((uint64_t)v4, 0);
    [v7 v8[494]];
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v35 = *(uint64_t (**)(void))(v1 + 8);
  return v35();
}

uint64_t sub_100B11CC0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 129, v5);
}

uint64_t sub_100B11DC4()
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  char v6 = *(unsigned char *)(v5 + 128);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *(void *)uint64_t v7 = v1;
  *(void *)(v7 + 8) = sub_100528488;
  *(unsigned char *)(v7 + 97) = v6;
  *(void *)(v7 + 240) = v4;
  *(void *)(v7 + 248) = v5;
  return _swift_task_switch(sub_100B11714, 0, 0);
}

void sub_100B11EE4(void *a1, void *a2)
{
  if (a1)
  {
    unint64_t v3 = a1;
    ClipBoundingBodouble x = CGContextGetClipBoundingBox(v3);
    double x = ClipBoundingBox.origin.x;
    double y = ClipBoundingBox.origin.y;
    double width = ClipBoundingBox.size.width;
    double height = ClipBoundingBox.size.height;
    id v8 = [objc_allocWithZone((Class)CRLPdfHyperlinkController) initWithTaggingRect:CGRectNull.origin.x, CGRectNull.origin.y, CGRectNull.size.width, CGRectNull.size.height];
    id v9 = [a2 allReps];
    sub_10050BF48(0, (unint64_t *)&qword_101678790);
    sub_10055A7A4();
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    double v25 = v3;
    if ((v10 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      Set.Iterator.init(_cocoa:)();
      uint64_t v10 = v28;
      uint64_t v26 = v29;
      uint64_t v11 = v30;
      uint64_t v12 = v31;
      unint64_t v13 = v32;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
      uint64_t v26 = v10 + 56;
      uint64_t v11 = ~v14;
      uint64_t v15 = -v14;
      if (v15 < 64) {
        uint64_t v16 = ~(-1 << v15);
      }
      else {
        uint64_t v16 = -1;
      }
      unint64_t v13 = v16 & *(void *)(v10 + 56);
    }
    int64_t v17 = (unint64_t)(v11 + 64) >> 6;
    if (v10 < 0) {
      goto LABEL_11;
    }
    while (1)
    {
      if (v13)
      {
        uint64_t v18 = (v13 - 1) & v13;
        unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
        uint64_t v20 = v12;
      }
      else
      {
        int64_t v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return;
        }
        if (v22 >= v17) {
          goto LABEL_31;
        }
        unint64_t v23 = *(void *)(v26 + 8 * v22);
        uint64_t v20 = v12 + 1;
        if (!v23)
        {
          uint64_t v20 = v12 + 2;
          if (v12 + 2 >= v17) {
            goto LABEL_31;
          }
          unint64_t v23 = *(void *)(v26 + 8 * v20);
          if (!v23)
          {
            uint64_t v20 = v12 + 3;
            if (v12 + 3 >= v17) {
              goto LABEL_31;
            }
            unint64_t v23 = *(void *)(v26 + 8 * v20);
            if (!v23)
            {
              uint64_t v20 = v12 + 4;
              if (v12 + 4 >= v17) {
                goto LABEL_31;
              }
              unint64_t v23 = *(void *)(v26 + 8 * v20);
              if (!v23)
              {
                uint64_t v24 = v12 + 5;
                while (v17 != v24)
                {
                  unint64_t v23 = *(void *)(v26 + 8 * v24++);
                  if (v23)
                  {
                    uint64_t v20 = v24 - 1;
                    goto LABEL_27;
                  }
                }
LABEL_31:
                sub_10052E1EC();
                [v8 crl_commitHyperlinksToPDF:v25 targetRect:x, y, width, height];

                return;
              }
            }
          }
        }
LABEL_27:
        uint64_t v18 = (v23 - 1) & v23;
        unint64_t v19 = __clz(__rbit64(v23)) + (v20 << 6);
      }
      id v21 = *(id *)(*(void *)(v10 + 48) + 8 * v19);
      if (!v21) {
        goto LABEL_31;
      }
      while (1)
      {
        [v8 addHyperlinksForRep:v21];

        uint64_t v12 = v20;
        unint64_t v13 = v18;
        if ((v10 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_11:
        if (__CocoaSet.Iterator.next()())
        {
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v21 = v27;
          swift_unknownObjectRelease();
          uint64_t v20 = v12;
          uint64_t v18 = v13;
          if (v27) {
            continue;
          }
        }
        goto LABEL_31;
      }
    }
  }
}

void sub_100B12228(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, v6);
  swift_release();
}

uint64_t sub_100B122AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B122BC()
{
  return swift_release();
}

uint64_t sub_100B122C4(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 384) = a2;
  *(void *)(v2 + 312) = a1;
  *(void *)(v2 + 320) = type metadata accessor for CRLBoardCRDTData(0);
  *(void *)(v2 + 328) = swift_task_alloc();
  return _swift_task_switch(sub_100B12360, a1, 0);
}

uint64_t sub_100B12360()
{
  uint64_t v1 = *(void *)(v0 + 312);
  type metadata accessor for CRLImmutableBoard(0);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_store);
  uint64_t v3 = v1 + OBJC_IVAR____TtC8Freeform13CRLBoardActor_boardIdentifier;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100B1242C;
  return sub_1006D9650(v2, v3, 1);
}

uint64_t sub_100B1242C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 344) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100B1257C, 0, 0);
  }
}

uint64_t sub_100B1257C()
{
  uint64_t v1 = *(void **)(v0 + 344);
  id v2 = objc_allocWithZone((Class)CRLCanvasImager);
  uint64_t v3 = v1;
  id v4 = [v2 initWithBoard:v3];
  uint64_t v5 = *(char **)&v3[OBJC_IVAR____TtC8Freeform8CRLBoard_rootContainer];
  uint64_t v6 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
  id v7 = *(double **)&v5[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
  id v8 = v5;
  if (!v7)
  {
    sub_100846AB0();
    id v7 = *(double **)&v5[v6];
  }
  if (v7) {
    unint64_t v9 = (unint64_t)v7;
  }
  else {
    unint64_t v9 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 >> 62)
  {
    sub_1005057FC(&qword_101673060);
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }

  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_101673060);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setInfos:isa];

  id v11 = objc_allocWithZone((Class)CRLPdfTagger);
  id v12 = v4;
  unint64_t v13 = (uint64_t (*)())[v11 init];
  if (v13)
  {
    uint64_t v16 = v13;
    int64_t v17 = *(char **)(v0 + 344);
    uint64_t v18 = *(void *)(v0 + 328);

    *(void *)(v0 + 144) = 0x3FF0000000000000;
    *(_OWORD *)(v0 + 152) = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
    *(void *)(v0 + 184) = 0;
    *(unsigned char *)(v0 + 192) = 1;
    *(_WORD *)(v0 + 193) = 256;
    *(_OWORD *)(v0 + 200) = 0u;
    *(_OWORD *)(v0 + 216) = 0u;
    *(unsigned char *)(v0 + 232) = 1;
    *(void *)(v0 + 240) = 0;
    *(void *)(v0 + 248) = v12;
    *(void *)(v0 + 256) = v16;
    *(void *)(v0 + 264) = v17;
    long long v19 = *(_OWORD *)(v0 + 144);
    long long v20 = *(_OWORD *)(v0 + 160);
    long long v21 = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 64) = v21;
    *(_OWORD *)(v0 + 16) = v19;
    *(_OWORD *)(v0 + 32) = v20;
    long long v22 = *(_OWORD *)(v0 + 208);
    long long v23 = *(_OWORD *)(v0 + 224);
    long long v24 = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v0 + 112) = *(_OWORD *)(v0 + 240);
    *(_OWORD *)(v0 + 128) = v24;
    *(_OWORD *)(v0 + 80) = v22;
    *(_OWORD *)(v0 + 96) = v23;
    uint64_t v25 = *(void *)&v17[OBJC_IVAR____TtC8Freeform8CRLBoard_data] + OBJC_IVAR____TtC8Freeform12CRLBoardData_crdtData;
    swift_beginAccess();
    sub_100530898(v25, v18);
    uint64_t v26 = v17;
    sub_1005057FC(&qword_101674450);
    CRRegister.wrappedValue.getter();
    uint64_t v27 = *(void *)(v0 + 296);
    uint64_t v28 = *(void *)(v0 + 304);
    *(void *)(v0 + 352) = v28;
    sub_1005308FC(v18);

    uint64_t v29 = swift_task_alloc();
    *(void *)(v0 + 360) = v29;
    *(void *)uint64_t v29 = v0;
    *(void *)(v29 + 8) = sub_100B12894;
    unsigned __int8 v30 = *(unsigned char *)(v0 + 384);
    *(void *)(v29 + 24) = v28;
    *(void *)(v29 + 32) = v0 + 16;
    *(_WORD *)(v29 + 56) = v30;
    *(void *)(v29 + 16) = v27;
    unint64_t v13 = sub_100B10BF0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v13, v14, v15);
}

uint64_t sub_100B12894(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 368) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100B12A44;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 376) = a1;
    uint64_t v5 = sub_100B129C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100B129C4()
{
  sub_1007C22E0(v0 + 144);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 376);
  return v1(v2);
}

uint64_t sub_100B12A44()
{
  uint64_t v1 = *(void **)(v0 + 344);
  swift_bridgeObjectRelease();
  sub_1007C22E0(v0 + 144);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B12AC0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B12AF8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100528488;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016743A0 + dword_1016743A0);
  return v6(a1, v4);
}

id sub_100B12BBC()
{
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10117DF50;
  id v1 = [self mainBundle];
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v1 localizedStringForKey:v2 value:v3 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = sub_10051ECC0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v5;
  *(void *)(v0 + 40) = sub_100B12D78();
  specialized Array._endMutation()();
  id v6 = objc_allocWithZone((Class)UIStackView);
  sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v6 initWithArrangedSubviews:isa];

  [v8 setAxis:1];
  [v8 setSpacing:8.0];
  return v8;
}

id sub_100B12D78()
{
  id v1 = v0;
  uint64_t v2 = sub_1005057FC(&qword_101673A90);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  unint64_t v9 = (char *)&v51 - v8;
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = self;
  id v12 = [v11 imageNamed:v10];

  if (v12)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v11 imageNamed:v13];

    if (v14)
    {
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = [v11 imageNamed:v15];

      if (v16)
      {
        sub_1005057FC((uint64_t *)&unk_101676C10);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_10117FBD0;
        *(void *)(v17 + 32) = v12;
        *(void *)(v17 + 40) = v14;
        *(void *)(v17 + 48) = v16;
        uint64_t v54 = v17;
        specialized Array._endMutation()();
        sub_1005057FC((uint64_t *)&unk_101672610);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_10117DF40;
        long long v19 = self;
        id v53 = v12;
        id v12 = v14;
        id v20 = v16;
        long long v51 = v5;
        id v52 = v20;
        long long v21 = v19;
        id v22 = [v19 mainBundle];
        NSString v23 = String._bridgeToObjectiveC()();
        NSString v24 = String._bridgeToObjectiveC()();
        id v25 = [v22 localizedStringForKey:v23 value:v24 table:0];

        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;

        *(void *)(v18 + 32) = v26;
        *(void *)(v18 + 40) = v28;
        id v29 = [v21 mainBundle];
        NSString v30 = String._bridgeToObjectiveC()();
        NSString v31 = String._bridgeToObjectiveC()();
        id v32 = [v29 localizedStringForKey:v30 value:v31 table:0];

        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v35 = v34;

        *(void *)(v18 + 48) = v33;
        *(void *)(v18 + 56) = v35;
        uint64_t v36 = v21;
        id v5 = v51;
        id v37 = [v36 mainBundle];
        NSString v38 = String._bridgeToObjectiveC()();
        NSString v39 = String._bridgeToObjectiveC()();
        id v40 = [v37 localizedStringForKey:v38 value:v39 table:0];

        uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v43 = v42;

        *(void *)(v18 + 64) = v41;
        *(void *)(v18 + 72) = v43;

        id v14 = v53;
      }

      id v12 = v14;
    }
  }
  uint64_t v44 = type metadata accessor for IndexSet();
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56);
  v45(v9, 1, 1, v44);
  sub_100853BE8();
  if ((v46 & 0xFF00) != 0x200 && (v46 & 0x101) == 0)
  {
    IndexSet.init(integer:)();
    sub_100B137A8((uint64_t)v9);
    v45(v5, 0, 1, v44);
    sub_100B13808((uint64_t)v5, (uint64_t)v9);
  }
  *(void *)(swift_allocObject() + 16) = v1;
  id v48 = v1;
  id v49 = sub_10051DB44();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100B137A8((uint64_t)v9);
  return v49;
}

void sub_100B132FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform40CRLiOSMiniFormatterConnectionLineBuilder_lineDataProvider);
  uint64_t v3 = sub_100853BE8();
  if (v4 & 0xFF00) == 0x200 || (v4) {
    return;
  }
  uint64_t v6 = v3;
  uint64_t v7 = 0;
  if (!IndexSet.contains(_:)(0))
  {
    if (!IndexSet.contains(_:)(1))
    {
      uint64_t v7 = IndexSet.contains(_:)(2);
      if (v7 == v6) {
        return;
      }
      goto LABEL_12;
    }
    uint64_t v7 = 2;
  }
  if (v7 == v6) {
    return;
  }
LABEL_12:
  uint64_t v8 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterDataProvider_editorController);
  if (sub_10050BF48(0, (unint64_t *)&unk_1016951D0)) {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  }
  else {
    uint64_t ObjCClassFromMetadata = 0;
  }
  id v10 = [v8 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
  self;
  id v11 = (void *)swift_dynamicCastObjCClass();
  id v12 = v11;
  if (!v11)
  {
    swift_unknownObjectRelease();
    id v11 = 0;
  }
  [v11 setConnectionLineType:v7];
}

void *sub_100B13468()
{
  unint64_t v0 = sub_1007FE0AC();
  if (v0) {
    sub_10057C1E4(v0);
  }
  unint64_t v1 = sub_1005D1384();
  if (v1)
  {
    unint64_t v2 = v1;
    if (v1 >> 62)
    {
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      type metadata accessor for CRLBoardItem(0);
      unint64_t v3 = v2;
    }
    swift_bridgeObjectRelease();
    sub_10058EBD0(v3);
    swift_bridgeObjectRelease();
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_100B13550(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLConnectionLineItem();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100520CB4(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_100ED5958((uint64_t)v7, v4);
  swift_bridgeObjectRelease();

  return v5 & 1;
}

uint64_t sub_100B13620(uint64_t a1, uint64_t a2)
{
  sub_100522D7C(a2, (uint64_t)v8);
  type metadata accessor for CRLConnectionLineItem();
  if (!swift_dynamicCast()) {
    goto LABEL_5;
  }
  unint64_t v4 = sub_1005D1384();
  if (!v4)
  {

LABEL_5:
    char v5 = sub_100520CB4(a1, a2);
    return v5 & 1;
  }
  char v5 = sub_100ED5958((uint64_t)v7, v4);
  swift_bridgeObjectRelease();

  return v5 & 1;
}

void sub_100B136F0()
{
}

id sub_100B13700()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterConnectionLineBuilder();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterConnectionLineBuilder()
{
  return self;
}

uint64_t sub_100B13768()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100B137A0(uint64_t a1)
{
  sub_100B132FC(a1, *(void *)(v1 + 16));
}

uint64_t sub_100B137A8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101673A90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B13808(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101673A90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100B13870(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xD000000000000029;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      unint64_t v2 = 0xD000000000000023;
      break;
    case 2uLL:
    case 7uLL:
    case 8uLL:
      unint64_t v2 = 0xD000000000000024;
      break;
    case 3uLL:
      unint64_t v2 = 0xD000000000000026;
      break;
    case 4uLL:
      unint64_t v2 = 0xD000000000000025;
      break;
    case 5uLL:
      unint64_t v2 = 0xD000000000000027;
      break;
    case 6uLL:
      unint64_t v2 = 0xD000000000000023;
      break;
    default:
      unint64_t v2 = a1;
      break;
  }
  sub_10051B3D8(a1, a2);
  return v2;
}

void sub_100B13C18()
{
  qword_10171B868 = (uint64_t)&off_1015048C0;
}

unint64_t sub_100B13D40()
{
  unint64_t result = sub_100B13D60();
  qword_10171B870 = result;
  return result;
}

unint64_t sub_100B13D60()
{
  sub_1005057FC(&qword_1016925C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1011A8170;
  *(UIFontWeight *)(inited + 32) = UIFontWeightUltraLight;
  *(void *)(inited + 40) = 0xD000000000000029;
  *(void *)(inited + 48) = 0x8000000101235A60;
  *(UIFontWeight *)(inited + 56) = UIFontWeightThin;
  *(void *)(inited + 64) = 0xD000000000000023;
  *(void *)(inited + 72) = 0x8000000101235A90;
  *(UIFontWeight *)(inited + 80) = UIFontWeightLight;
  *(void *)(inited + 88) = 0xD000000000000024;
  *(void *)(inited + 96) = 0x8000000101235AC0;
  *(UIFontWeight *)(inited + 104) = UIFontWeightRegular;
  *(void *)(inited + 112) = 0xD000000000000026;
  *(void *)(inited + 120) = 0x8000000101235AF0;
  *(UIFontWeight *)(inited + 128) = UIFontWeightMedium;
  *(void *)(inited + 136) = 0xD000000000000025;
  *(void *)(inited + 144) = 0x8000000101235B20;
  *(UIFontWeight *)(inited + 152) = UIFontWeightSemibold;
  *(void *)(inited + 160) = 0xD000000000000027;
  *(void *)(inited + 168) = 0x8000000101235B50;
  *(UIFontWeight *)(inited + 176) = UIFontWeightBold;
  *(void *)(inited + 184) = 0xD000000000000023;
  *(void *)(inited + 192) = 0x8000000101235B80;
  *(UIFontWeight *)(inited + 200) = UIFontWeightHeavy;
  *(void *)(inited + 208) = 0xD000000000000024;
  *(void *)(inited + 216) = 0x8000000101235BB0;
  *(UIFontWeight *)(inited + 224) = UIFontWeightBlack;
  *(void *)(inited + 232) = 0xD000000000000024;
  *(void *)(inited + 240) = 0x8000000101235BE0;
  unint64_t v1 = sub_100A464CC((double *)inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_1016925C8);
  swift_arrayDestroy();
  return v1;
}

void *sub_100B13F44()
{
  unint64_t result = sub_100B13F64();
  qword_10171B878 = (uint64_t)result;
  return result;
}

void *sub_100B13F64()
{
  if (qword_10166F900 != -1) {
LABEL_39:
  }
    swift_once();
  uint64_t v0 = qword_10171B870;
  uint64_t v29 = qword_10171B870 + 64;
  uint64_t v1 = 1 << *(unsigned char *)(qword_10171B870 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(qword_10171B870 + 64);
  int64_t v4 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  while (1)
  {
    if (v3)
    {
      unint64_t v6 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v7 = v6 | (v5 << 6);
    }
    else
    {
      int64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_37;
      }
      if (v8 >= v4)
      {
LABEL_34:
        swift_release();
        return _swiftEmptyDictionarySingleton;
      }
      unint64_t v9 = *(void *)(v29 + 8 * v8);
      ++v5;
      if (!v9)
      {
        int64_t v5 = v8 + 1;
        if (v8 + 1 >= v4) {
          goto LABEL_34;
        }
        unint64_t v9 = *(void *)(v29 + 8 * v5);
        if (!v9)
        {
          int64_t v5 = v8 + 2;
          if (v8 + 2 >= v4) {
            goto LABEL_34;
          }
          unint64_t v9 = *(void *)(v29 + 8 * v5);
          if (!v9)
          {
            int64_t v10 = v8 + 3;
            if (v10 >= v4) {
              goto LABEL_34;
            }
            unint64_t v9 = *(void *)(v29 + 8 * v10);
            if (!v9)
            {
              while (1)
              {
                int64_t v5 = v10 + 1;
                if (__OFADD__(v10, 1)) {
                  goto LABEL_38;
                }
                if (v5 >= v4) {
                  goto LABEL_34;
                }
                unint64_t v9 = *(void *)(v29 + 8 * v5);
                ++v10;
                if (v9) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v5 = v10;
          }
        }
      }
LABEL_22:
      unint64_t v3 = (v9 - 1) & v9;
      unint64_t v7 = __clz(__rbit64(v9)) + (v5 << 6);
    }
    uint64_t v11 = *(void *)(*(void *)(v0 + 48) + 8 * v7);
    id v12 = (uint64_t *)(*(void *)(v0 + 56) + 16 * v7);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_100955F50(v14, v13);
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    char v21 = v16;
    if (_swiftEmptyDictionarySingleton[3] < v20) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v16) {
        goto LABEL_5;
      }
    }
    else
    {
      sub_1009838E4();
      if (v21)
      {
LABEL_5:
        *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v17) = v11;
        goto LABEL_6;
      }
    }
LABEL_30:
    _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
    NSString v24 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v17);
    *NSString v24 = v14;
    v24[1] = v13;
    *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v17) = v11;
    uint64_t v25 = _swiftEmptyDictionarySingleton[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_36;
    }
    _swiftEmptyDictionarySingleton[2] = v27;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_10096CF4C(v20, isUniquelyReferenced_nonNull_native);
  unint64_t v22 = sub_100955F50(v14, v13);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    if (v21) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
  unint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

id sub_100B1427C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLWPSystemFontNames();
  [super dealloc];
}

uint64_t type metadata accessor for CRLWPSystemFontNames()
{
  return self;
}

uint64_t getEnumTagSinglePayload for CRLWPFontName(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF6 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483639);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 8;
  if (v4 >= 0xA) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CRLWPFontName(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF7) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLWPFontName()
{
  return &type metadata for CRLWPFontName;
}

uint64_t sub_100B14390@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100B149FC(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_100B143C0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100B13870(*(void *)v1, *(void *)(v1 + 8));
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100B143EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 1:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 2:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 3:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 4:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 5:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 6:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 7:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    case 8:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3) {
        goto LABEL_21;
      }
      break;
    default:
      uint64_t result = dispatch thunk of CREncoder.valueContainer()();
      if (!v3)
      {
LABEL_21:
        dispatch thunk of CREncoder.CRValueContainer.encode(_:)();
        uint64_t result = swift_release();
      }
      break;
  }
  return result;
}

Swift::Int sub_100B14670()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_1009501F0((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100B146BC(uint64_t a1)
{
  return sub_1009501F0(a1, *(void *)v1, *(void *)(v1 + 8));
}

Swift::Int sub_100B146C4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_1009501F0((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100B1470C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100B1476C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100B147BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_10051B3D8(v2, v3);
}

uint64_t sub_100B147C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100B14D58();
  unint64_t v7 = sub_100B14950();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B14838(uint64_t a1, uint64_t a2)
{
  return sub_10094F654(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_100B1484C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100B14F0C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_100B14878(uint64_t a1)
{
  return sub_100B143EC(a1, *v1, v1[1]);
}

uint64_t sub_100B14894(uint64_t a1)
{
  unint64_t v2 = sub_100B14D58();
  unint64_t v3 = sub_1006F23A8();

  return CRValue<>.minEncodingVersion.getter(a1, v2, v3, &protocol witness table for String);
}

unint64_t sub_100B148F8()
{
  unint64_t result = qword_1016925A0;
  if (!qword_1016925A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016925A0);
  }
  return result;
}

unint64_t sub_100B14950()
{
  unint64_t result = qword_1016925A8;
  if (!qword_1016925A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016925A8);
  }
  return result;
}

unint64_t sub_100B149A8()
{
  unint64_t result = qword_1016925B0;
  if (!qword_1016925B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016925B0);
  }
  return result;
}

uint64_t sub_100B149FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  if (a1 == 0xD000000000000029 && a2 == 0x8000000101235A60
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000023 && a2 == 0x8000000101235A90
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000024 && a2 == 0x8000000101235AC0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000026 && a2 == 0x8000000101235AF0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000025 && a2 == 0x8000000101235B20
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000027 && a2 == 0x8000000101235B50
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000023 && a2 == 0x8000000101235B80
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000024 && a2 == 0x8000000101235BB0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
    || v3 == 0xD000000000000024 && a2 == 0x8000000101235BE0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

unint64_t sub_100B14D58()
{
  unint64_t result = qword_1016925B8;
  if (!qword_1016925B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016925B8);
  }
  return result;
}

unint64_t sub_100B14DAC(double a1)
{
  if (qword_10166F900 != -1) {
    swift_once();
  }
  unint64_t v2 = 0xD000000000000026;
  uint64_t v3 = qword_10171B870;
  if (*(void *)(qword_10171B870 + 16))
  {
    unint64_t v4 = sub_100957420(a1);
    if (v5)
    {
      unint64_t v2 = *(void *)(*(void *)(v3 + 56) + 16 * v4);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

double sub_100B14E5C(uint64_t a1, uint64_t a2)
{
  if (qword_10166F908 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_10171B878;
  uint64_t v5 = *(void *)(qword_10171B878 + 16);
  swift_bridgeObjectRetain();
  if (v5 && (unint64_t v6 = sub_100955F50(a1, a2), (v7 & 1) != 0)) {
    int64_t v8 = (const UIFontWeight *)(*(void *)(v4 + 56) + 8 * v6);
  }
  else {
    int64_t v8 = &UIFontWeightRegular;
  }
  double v9 = *v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100B14F0C(uint64_t a1)
{
  dispatch thunk of CRDecoder.valueContainer()();
  if (v1)
  {
    swift_release();
  }
  else
  {
    a1 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
    uint64_t v4 = v3;
    swift_release();
    if ((a1 != 0xD000000000000011 || v4 != 0x80000001012721C0)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x546D65747379732ELL || v4 != 0xEB000000006E6968)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x4C6D65747379732ELL || v4 != 0xEC00000074686769)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x526D65747379732ELL || v4 != 0xEE0072616C756765)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x4D6D65747379732ELL || v4 != 0xED00006D75696465)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x536D65747379732ELL || v4 != 0xEF646C6F62696D65)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x426D65747379732ELL || v4 != 0xEB00000000646C6FLL)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
      && (a1 != 0x486D65747379732ELL || v4 != 0xEC00000079766165)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      if (a1 == 0x426D65747379732ELL && v4 == 0xEC0000006B63616CLL)
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        if ((v6 & 1) == 0) {
          return a1;
        }
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    swift_bridgeObjectRelease();
    swift_release();
    return 0;
  }
  return a1;
}

uint64_t sub_100B15454(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 264) = a2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 216) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 224) = v5;
  *(void *)(v3 + 232) = v4;
  return _swift_task_switch(sub_100B154F0, v5, v4);
}

uint64_t sub_100B154F0()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v19 = *(void *)(v0 + 200);
  swift_beginAccess();
  uint64_t v2 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 32);
  *(void *)(v0 + 184) = Strong;
  *(void *)(v0 + 192) = v5;
  id v6 = v2;
  sub_1005057FC(&qword_101692BF8);
  uint64_t v7 = String.init<A>(describing:)();
  uint64_t v9 = v8;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"leaveGroupSession() with delegate %@", 36, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v11 = v19 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  swift_beginAccess();
  sub_10095B648(v11);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_10095B648(v11);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  sub_10095D180(v11);
  swift_endAccess();
  swift_release();
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 240) = v12;
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v20 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101692C00 + dword_101692C00);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_100B1584C;
    uint64_t v15 = *(void *)(v0 + 200);
    return v20(v15, v13);
  }
  else
  {
    unint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v17;
    *unint64_t v17 = v0;
    v17[1] = sub_100B159B0;
    char v18 = *(unsigned char *)(v0 + 264);
    return sub_1009EE1B8(v18);
  }
}

uint64_t sub_100B1584C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 256) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100B159B0;
  char v4 = *(unsigned char *)(v1 + 264);
  return sub_1009EE1B8(v4);
}

uint64_t sub_100B159B0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100B15AD0, v3, v2);
}

uint64_t sub_100B15AD0()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[25];
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v1 + 336))(v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100B15B64(uint64_t a1)
{
  v2[46] = a1;
  v2[47] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[48] = v3;
  v2[49] = *(void *)(v3 - 8);
  v2[50] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[51] = swift_task_alloc();
  uint64_t v4 = sub_1005057FC(&qword_101692B50);
  v2[52] = v4;
  v2[53] = *(void *)(v4 - 8);
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  v2[56] = type metadata accessor for MainActor();
  v2[57] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[58] = v6;
  v2[59] = v5;
  return _swift_task_switch(sub_100B15CF8, v6, v5);
}

uint64_t sub_100B15CF8()
{
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v3 = *(void *)(v0 + 416);
  uint64_t v4 = *(void *)(v0 + 424);
  GroupSession.state.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v2, enum case for GroupSession.State.joined<A>(_:), v3);
  sub_100523288(&qword_101692B58, &qword_101692B50);
  char v5 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v6(v2, v3);
  v6(v1, v3);
  if (v5)
  {
    swift_release();
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)static OS_os_log.realTimeSync;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"CRLGroupSessionManager: we should not be attempting group session if the state is already .joined", 97, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    *(void *)(v0 + 480) = (*(uint64_t (**)(void))(**(void **)(v0 + 376) + 296))(*(void *)(v0 + 368));
    uint64_t v11 = qword_10166FBA0;
    swift_retain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = *(void *)(v0 + 408);
    swift_beginAccess();
    uint64_t v13 = (void *)static OS_os_log.realTimeSync;
    *(void *)(v0 + 488) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(v0 + 224) = type metadata accessor for CRLOpportunisticGroupActivity(0);
    *(void *)(v0 + 232) = sub_100B1E8F4(&qword_101692B60, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
    swift_retain();
    id v15 = v13;
    GroupSession.activity.getter();
    swift_release();
    sub_10050F848((void *)(v0 + 200), *(void *)(v0 + 224));
    sub_100B18D74(v12);
    uint64_t v28 = UUID.uuidString.getter();
    uint64_t v29 = v16;
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = 58;
    v17._object = (void *)0xE100000000000000;
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    char v18 = (uint64_t *)(v12 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
    uint64_t v20 = *v18;
    uint64_t v19 = (void *)v18[1];
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = v20;
    v21._object = v19;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    sub_100B23FA8(v12, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v22 = sub_100528BE4();
    *(void *)(v0 + 496) = v22;
    *(void *)(inited + 64) = v22;
    *(void *)(inited + 32) = v28;
    *(void *)(inited + 40) = v29;
    *(void *)(v0 + 504) = OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
    uint64_t v23 = UUID.uuidString.getter();
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v22;
    *(void *)(inited + 72) = v23;
    *(void *)(inited + 80) = v24;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 200);
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v25, (uint64_t)"CRLGroupSessionManager: received board %@ from group session with ID: %@.", 73, 2, inited);
    swift_setDeallocating();
    *(void *)(v0 + 512) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    *(void *)(v0 + 520) = static MainActor.shared.getter();
    uint64_t v27 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100B16288, v27, v26);
  }
}

uint64_t sub_100B16288()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 472);
  return _swift_task_switch(sub_100B162EC, v1, v2);
}

uint64_t sub_100B162EC()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[66] = Strong;
  if (Strong)
  {
    swift_retain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[67] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100B165E0;
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[47];
    return sub_100EFDD08(v4, (uint64_t)&off_1015083A0, v3);
  }
  else
  {
    uint64_t v6 = v0[60];
    uint64_t v8 = v0[49];
    uint64_t v7 = v0[50];
    uint64_t v9 = (void *)v0[47];
    uint64_t v10 = v0[48];
    uint64_t v11 = v6 + v0[63];
    sub_100B17450(v6);
    id v12 = (id)static OS_os_log.realTimeSync;
    uint64_t v13 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"CRLGroupSessionManager: Calling out to group session to join.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

    swift_retain();
    sub_100B17E1C();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v11, v10);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v9[5];
    v9[5] = 0x8000000000000000;
    sub_100977E0C(v6, v7, isUniquelyReferenced_nonNull_native);
    v9[5] = v18;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v10);
    swift_endAccess();
    Swift::String v17 = (uint64_t (*)(uint64_t))(*(void *)(*v9 + 312) + **(int **)(*v9 + 312));
    id v15 = (void *)swift_task_alloc();
    v0[69] = v15;
    *id v15 = v0;
    v15[1] = sub_100B1674C;
    uint64_t v16 = v0[60];
    return v17(v16);
  }
}

uint64_t sub_100B165E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 544) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 464);
    uint64_t v4 = *(void *)(v2 + 472);
    char v5 = sub_100B16B70;
  }
  else
  {
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 464);
    uint64_t v4 = *(void *)(v2 + 472);
    char v5 = sub_100B16928;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B1674C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 472);
  uint64_t v3 = *(void *)(v1 + 464);
  return _swift_task_switch(sub_100B16890, v3, v2);
}

uint64_t sub_100B16890()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B16928()
{
  uint64_t v1 = v0[60];
  uint64_t v3 = v0[49];
  uint64_t v2 = v0[50];
  uint64_t v4 = (void *)v0[47];
  uint64_t v5 = v0[48];
  uint64_t v6 = v1 + v0[63];
  sub_100B17450(v1);
  id v7 = (id)static OS_os_log.realTimeSync;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v8, (uint64_t)"CRLGroupSessionManager: Calling out to group session to join.", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_retain();
  sub_100B17E1C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v6, v5);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_100977E0C(v1, v2, isUniquelyReferenced_nonNull_native);
  v4[5] = v14;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v5);
  swift_endAccess();
  uint64_t v13 = (uint64_t (*)(uint64_t))(*(void *)(*v4 + 312) + **(int **)(*v4 + 312));
  uint64_t v10 = (void *)swift_task_alloc();
  v0[69] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_100B1674C;
  uint64_t v11 = v0[60];
  return v13(v11);
}

uint64_t sub_100B16B70()
{
  uint64_t v1 = v0[47];
  v0[70] = static MainActor.shared.getter();
  uint64_t v5 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 320) + **(int **)(*(void *)v1 + 320));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[71] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100B16C94;
  uint64_t v3 = v0[60];
  return v5(v3);
}

uint64_t sub_100B16C94()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 576) = v3;
  *(void *)(v1 + 584) = v2;
  return _swift_task_switch(sub_100B16DDC, v3, v2);
}

uint64_t sub_100B16DDC()
{
  *(void *)(v0 + 592) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B16E68, v2, v1);
}

uint64_t sub_100B16E68()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void *)(v0 + 576);
  return _swift_task_switch(sub_100B16ED0, v2, v1);
}

uint64_t sub_100B16ED0()
{
  uint64_t v1 = v0[62];
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.realTimeSync;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  id v4 = v2;
  uint64_t v5 = Error.localizedDescription.getter();
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v5;
  *(void *)(inited + 40) = v6;
  uint64_t v7 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v7, (uint64_t)"CRLGroupSessionManager: could not associate group session. Error: %@", 68, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_release();
  uint64_t v8 = v0[58];
  uint64_t v9 = v0[59];
  return _swift_task_switch(sub_100B1702C, v8, v9);
}

uint64_t sub_100B1702C()
{
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B170D0(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 96) = a2;
  *(void *)(v3 + 40) = a1;
  *(void *)(v3 + 48) = v2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 56) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 72) = v4;
  return _swift_task_switch(sub_100B1716C, v5, v4);
}

uint64_t sub_100B1716C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 40);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_100955FC8(v3);
    if (v5)
    {
      uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * v4);
      *(void *)(v0 + 80) = v6;
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101692BF0 + dword_101692BF0);
      uint64_t v7 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_100B172C4;
      uint64_t v8 = *(unsigned __int8 *)(v0 + 96);
      return v11(v6, v8);
    }
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100B172C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100B173E4, v3, v2);
}

uint64_t sub_100B173E4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B17450(uint64_t a1)
{
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1005057FC(&qword_101692B78);
  sub_100523288(&qword_101692B80, &qword_101692B78);
  uint64_t v3 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_sessionID;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v1 + 48);
  *(void *)(v1 + 48) = 0x8000000000000000;
  sub_100973180(v3, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(v1 + 48) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a1;
  swift_retain();
  swift_retain();
  sub_1005057FC(&qword_101692B88);
  sub_100523288(&qword_101692B90, &qword_101692B88);
  uint64_t v8 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  swift_retain();
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *(void *)(v1 + 56);
  *(void *)(v1 + 56) = 0x8000000000000000;
  sub_100973180(v8, v4, v9);
  *(void *)(v1 + 56) = v12;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_100B176E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101692BC8);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v37 + 64);
  __chkstk_darwin(v8, v10);
  uint64_t v11 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v12;
  uint64_t v13 = *(int *)(v12 + 48);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  NSString v38 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v38(v11, a1, v14);
  int v16 = *(unsigned __int8 *)(a1 + v13);
  uint64_t v39 = v13;
  v11[v13] = v16;
  Swift::String v17 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  uint64_t result = v17(v11, v14);
  if (v16 == 1)
  {
    v35[2] = v9;
    uint64_t v36 = v7;
    v35[1] = a2 + 16;
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v19 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v21 = *(int *)(v40 + 48);
    v38(v11, a1, v14);
    v11[v21] = *(unsigned char *)(a1 + v39);
    id v22 = v19;
    uint64_t v23 = UUID.uuidString.getter();
    v35[0] = a1;
    uint64_t v25 = v24;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v23;
    *(void *)(inited + 40) = v25;
    v17(v11, v14);
    uint64_t v26 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v22, (uint64_t)&_mh_execute_header, v26, (uint64_t)"CRLGroupSessionManager: Group session invalidated. Cleaning up session with ID: %@.", 83, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v27 = type metadata accessor for TaskPriority();
    uint64_t v28 = (uint64_t)v36;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v36, 1, 1, v27);
    uint64_t v29 = swift_allocObject();
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v30 = *(int *)(v40 + 48);
    uint64_t v31 = v35[0];
    v38(v11, v35[0], v14);
    v11[v30] = *(unsigned char *)(v31 + v39);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v32 = static MainActor.shared.getter();
    unint64_t v33 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v32;
    v34[3] = &protocol witness table for MainActor;
    void v34[4] = v29;
    sub_10051B3EC((uint64_t)v11, (uint64_t)v34 + v33, &qword_101692BC8);
    swift_release();
    sub_1005912FC(v28, (uint64_t)&unk_101692BD8, (uint64_t)v34);
    return swift_release();
  }
  return result;
}

uint64_t sub_100B17B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v11 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v13 = v11;
    uint64_t v14 = UUID.uuidString.getter();
    uint64_t v16 = v15;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = v14;
    *(void *)(inited + 40) = v16;
    *(void *)(inited + 96) = sub_1005057FC(&qword_101692B98);
    *(void *)(inited + 104) = sub_100523288(&qword_101692BA0, &qword_101692B98);
    *(void *)(inited + 72) = a1;
    swift_bridgeObjectRetain();
    uint64_t v17 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v17, (uint64_t)"CRLGroupSessionManager: Group session active participants updated. ID: %{public}@. ActiveParticipants: %@", 105, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v18 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v8, 1, 1, v18);
    type metadata accessor for MainActor();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v10;
    v20[5] = a1;
    v20[6] = a3;
    sub_1005912FC((uint64_t)v8, (uint64_t)&unk_101692BB0, (uint64_t)v20);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100B17E1C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v10 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  uint64_t v12 = *(void *)(v0 + qword_10171C2F0);
  id v13 = v10;
  GroupSession.id.getter();
  uint64_t v14 = UUID.uuidString.getter();
  uint64_t v16 = v15;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v16;
  uint64_t v17 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v13, (uint64_t)&_mh_execute_header, v17, (uint64_t)"CRLBoardShareSession: joining group session with ID: %@.", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v12;
  swift_retain();
  sub_100B107F4((uint64_t)v4, (uint64_t)&unk_101692B70, (uint64_t)v19);
  swift_release();
  return sub_100522F00((uint64_t)v4, &qword_101672BB0);
}

uint64_t sub_100B180F4()
{
  uint64_t v1 = sub_1005057FC(&qword_101692C10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v68 = v1;
  uint64_t v69 = v2;
  __chkstk_darwin(v1, v3);
  uint64_t v66 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101692C18);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v70 = v5;
  uint64_t v71 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v67 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101691FA0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1005057FC(&qword_101692C20);
  uint64_t v62 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v13);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1005057FC(&qword_101692C28);
  uint64_t v65 = *(void *)(v64 - 8);
  __chkstk_darwin(v64, v16);
  long long v72 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v60 - 8);
  uint64_t v18 = *(void *)(v54 + 64);
  __chkstk_darwin(v60, v19);
  long long v51 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v49 - v22;
  uint64_t v24 = swift_allocObject();
  uint64_t v59 = v24;
  *(void *)(v24 + 16) = 0;
  uint64_t v25 = (uint64_t *)(v24 + 16);
  uint64_t v52 = v0;
  uint64_t v63 = v23;
  GroupSession.id.getter();
  GroupSession.activity.getter();
  int v50 = *((unsigned __int8 *)v74[0] + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe);
  swift_release();
  GroupSession.activity.getter();
  swift_release();
  GroupSession.$state.getter();
  v49[1] = sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  v74[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v57 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v26 = *(void *)(v57 - 8);
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v58 = v26 + 56;
  v49[0] = v12;
  v56(v12, 1, 1, v57);
  long long v55 = &protocol conformance descriptor for Published<A>.Publisher;
  sub_100523288(&qword_101692C30, &qword_101692C20);
  unint64_t v53 = sub_100B24294();
  uint64_t v27 = v61;
  Publisher.receive<A>(on:options:)();
  sub_100522F00((uint64_t)v12, &qword_101691FA0);

  (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v27);
  uint64_t v28 = swift_allocObject();
  swift_weakInit();
  uint64_t v29 = v54;
  uint64_t v30 = v51;
  uint64_t v31 = v60;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v23, v60);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v33 = v32 + v18;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v28;
  *(unsigned char *)(v34 + 24) = 1;
  uint64_t v35 = v30;
  uint64_t v36 = v31;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v34 + v32, v35, v31);
  *(unsigned char *)(v34 + v33) = v50;
  *(void *)((v33 & 0xFFFFFFFFFFFFFFF8) + v34 + 8) = v59;
  sub_100523288(&qword_101692C38, &qword_101692C28);
  swift_retain();
  uint64_t v37 = v64;
  NSString v38 = v72;
  uint64_t v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v38, v37);
  swift_beginAccess();
  *uint64_t v25 = v39;
  swift_release();
  uint64_t v40 = v66;
  GroupSession.$activeParticipants.getter();
  v74[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v41 = v49[0];
  v56((char *)v49[0], 1, 1, v57);
  sub_100523288(&qword_101692C40, &qword_101692C10);
  uint64_t v42 = v67;
  uint64_t v43 = v68;
  Publisher.receive<A>(on:options:)();
  sub_100522F00(v41, &qword_101691FA0);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v40, v43);
  swift_allocObject();
  uint64_t v44 = v52;
  swift_weakInit();
  sub_100523288(&qword_101692C48, &qword_101692C18);
  uint64_t v45 = v70;
  __int16 v46 = (void *)Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v45);
  v74[3] = (id)type metadata accessor for AnyCancellable();
  v74[4] = &protocol witness table for AnyCancellable;
  v74[0] = v46;
  (*(void (**)(char *, uint64_t))(v29 + 8))(v63, v36);
  sub_10051B3EC((uint64_t)v74, (uint64_t)v73, &qword_101681D68);
  uint64_t v47 = v44 + qword_101699240;
  swift_beginAccess();
  sub_1006063BC((uint64_t)v73, v47, &qword_101681D68);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100B1898C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for GroupActivityMetadata.ActivityType();
  __chkstk_darwin(v6 - 8, v7);
  v37[1] = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for GroupActivityMetadata();
  uint64_t v38 = *(void *)(v9 - 8);
  uint64_t v39 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe) = a2;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v15 = v13;
  uint64_t v16 = UUID.uuidString.getter();
  uint64_t v18 = v17;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v19 = sub_100528BE4();
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v18;
  uint64_t v20 = 28526;
  if (a2) {
    uint64_t v20 = 7562617;
  }
  unint64_t v21 = 0xE200000000000000;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v19;
  if (a2) {
    unint64_t v21 = 0xE300000000000000;
  }
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = v20;
  *(void *)(inited + 80) = v21;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v22, (uint64_t)"Created new opportunistic group activity with activity ID: %{public}@ MeToMe: %@", 80, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v40 = UUID.uuidString.getter();
  uint64_t v41 = v23;
  swift_bridgeObjectRetain();
  v24._countAndFlagsBits = 58;
  v24._object = (void *)0xE100000000000000;
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = v40;
  uint64_t v26 = v41;
  uint64_t v27 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v28 = *v27;
  uint64_t v29 = (void *)v27[1];
  uint64_t v40 = v25;
  uint64_t v41 = v26;
  swift_bridgeObjectRetain();
  v30._countAndFlagsBits = v28;
  v30._object = v29;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = v41;
  *(void *)(v3 + 16) = v40;
  *(void *)(v3 + 24) = v31;
  id v32 = [self mainBundle];
  NSString v33 = String._bridgeToObjectiveC()();
  NSString v34 = String._bridgeToObjectiveC()();
  id v35 = [v32 localizedStringForKey:v33 value:v34 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  GroupActivityMetadata.init()();
  static GroupActivityMetadata.ActivityType.generic.getter();
  GroupActivityMetadata.type.setter();
  GroupActivityMetadata.title.setter();
  sub_100B23FA8(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v3 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v12, v39);
  return v3;
}

uint64_t sub_100B18D74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v5 = type metadata accessor for UUID();
  __chkstk_darwin(v5, v6);
  v21[2] = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v10 = type metadata accessor for CRLBoardIdentifierStorage(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v1 + 16);
  uint64_t v18 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_100753CE4(v19, v18, v13);
  sub_100B24B54((uint64_t)v13, (uint64_t)v17, type metadata accessor for CRLBoardIdentifierStorage);
  return sub_100B24B54((uint64_t)v17, a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

uint64_t sub_100B191C8()
{
  uint64_t v1 = 0x617461646174656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x654D6F54654D7369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_100B19218@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B249A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B19240(uint64_t a1)
{
  unint64_t v2 = sub_100B1EA44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B1927C(uint64_t a1)
{
  unint64_t v2 = sub_100B1EA44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B192B8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata;
  uint64_t v2 = type metadata accessor for GroupActivityMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100B19360(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for GroupActivityMetadata();
  uint64_t v17 = *(void *)(v5 - 8);
  uint64_t v18 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101692CB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B1EA44();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v21 = 0;
  swift_bridgeObjectRetain();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v17;
    uint64_t v15 = v18;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v8, v3 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v18);
    char v20 = 1;
    sub_100B1E8F4(&qword_101692CB8, (void (*)(uint64_t))&type metadata accessor for GroupActivityMetadata);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    char v19 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_100B19644(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for GroupActivityMetadata();
  uint64_t v20 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1005057FC(&qword_101692B18);
  uint64_t v9 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v22 = a1;
  sub_10050F848(a1, v13);
  sub_100B1EA44();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v15 = (uint64_t)v22;
    type metadata accessor for CRLOpportunisticGroupActivity(0);
    swift_deallocPartialClassInstance();
    uint64_t v18 = v15;
  }
  else
  {
    char v25 = 0;
    *(void *)(v3 + 16) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v3 + 24) = v14;
    char v24 = 1;
    sub_100B1E8F4(&qword_101692B28, (void (*)(uint64_t))&type metadata accessor for GroupActivityMetadata);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v3 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata, v8, v5);
    char v23 = 2;
    char v17 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v21);
    *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_isMeToMe) = v17 & 1;
    uint64_t v18 = (uint64_t)v22;
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v18);
  return v3;
}

unint64_t sub_100B199C0()
{
  return 0xD000000000000030;
}

uint64_t sub_100B199DC(uint64_t a1)
{
  uint64_t v4 = *v1 + OBJC_IVAR____TtC8Freeform29CRLOpportunisticGroupActivity_metadata;
  uint64_t v5 = type metadata accessor for GroupActivityMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, v4, v5);
  uint64_t v6 = *(uint64_t (**)(void))(v2 + 8);
  return sub_100B1EA3C(v6);
}

uint64_t sub_100B19AA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for CRLOpportunisticGroupActivity(0);
  uint64_t v5 = swift_allocObject();
  uint64_t result = sub_100B19644(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_100B19B04(void *a1)
{
  return sub_100B19360(a1);
}

uint64_t sub_100B19B2C(uint64_t a1)
{
  uint64_t result = sub_100523288(&qword_1016925D0, &qword_1016925D8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100B19B7C(uint64_t a1)
{
  uint64_t result = sub_100523288(&qword_1016925E0, &qword_1016925E8);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100B19BC8()
{
  return type metadata accessor for CRLOpportunisticGroupActivity(0);
}

uint64_t type metadata accessor for CRLOpportunisticGroupActivity(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101692618);
}

uint64_t sub_100B19BF0()
{
  uint64_t result = type metadata accessor for GroupActivityMetadata();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B19C94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  v37[1] = a3;
  uint64_t v5 = v4;
  v37[0] = a4;
  uint64_t v8 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)v37 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v37 - v18;
  *(void *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = 0;
  *(void *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring + 8) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask) = 0;
  uint64_t v20 = v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier;
  sub_100B24AE8(a1, v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  if (!a2)
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v30 = (id)static OS_os_log.realTimeSync;
    uint64_t v31 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v31, (uint64_t)"CRLOpportunisticGroupSessionProvider: Initialize CRLOpportunisticMeToMeGroupSessionProvider", 91, 2, (uint64_t)_swiftEmptyArrayStorage);

    sub_1005057FC(&qword_1016925E8);
    sub_100B24AE8(a1, (uint64_t)v19, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_100B24AE8((uint64_t)v19, (uint64_t)v15, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    type metadata accessor for CRLOpportunisticGroupActivity(0);
    uint64_t v32 = swift_allocObject();
    sub_100B1898C((uint64_t)v15, 1);
    uint64_t v38 = v32;
    swift_bridgeObjectRetain();
    uint64_t v33 = dispatch thunk of PersonalGroupSessionProvider.__allocating_init(id:activity:)();
    sub_100B23FA8((uint64_t)v19, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    sub_100B23FA8(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v34 = sub_100523288(&qword_101692CA0, &qword_1016925E8);
    goto LABEL_12;
  }
  uint64_t v21 = qword_10166FBA0;
  id v22 = a2;
  if (v21 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v23 = (id)static OS_os_log.realTimeSync;
  uint64_t v24 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v23, (uint64_t)&_mh_execute_header, v24, (uint64_t)"CRLOpportunisticGroupSessionProvider: Initialize CRLOpportunisticCKShareGroupSessionProvider", 92, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_1005057FC(&qword_1016925D8);
  sub_100B24AE8(a1, (uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_100B24AE8((uint64_t)v11, (uint64_t)v19, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  type metadata accessor for CRLOpportunisticGroupActivity(0);
  uint64_t v25 = swift_allocObject();
  sub_100B1898C((uint64_t)v19, 0);
  uint64_t v38 = v25;
  uint64_t v26 = qword_10166EE68;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v26 != -1) {
    swift_once();
  }
  id v27 = (id)qword_10171A488;
  uint64_t v28 = v37[2];
  uint64_t v29 = dispatch thunk of CKShareGroupSessionProvider.__allocating_init(id:activity:share:container:)();
  if (!v28)
  {
    uint64_t v33 = v29;
    sub_100B23FA8((uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);

    swift_release();
    sub_100B23FA8(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v34 = sub_100523288(&qword_101692CA8, &qword_1016925D8);
LABEL_12:
    id v35 = (uint64_t *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
    *id v35 = v33;
    v35[1] = v34;
    *(void *)(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring + 8) = v37[0];
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    return v5;
  }
  sub_100B23FA8((uint64_t)v11, type metadata accessor for CRLGloballyScopedBoardIdentifier);

  swift_unknownObjectRelease();
  swift_release();
  sub_100B23FA8(a1, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  sub_100B23FA8(v20, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_release();
  sub_100523398(v5 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
  swift_release();
  type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
  swift_deallocPartialClassInstance();
  return v5;
}

uint64_t sub_100B1A224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 296) = a4;
  return _swift_task_switch(sub_100B1A244, 0, 0);
}

uint64_t sub_100B1A244()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[38] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v3 = (void *)static OS_os_log.realTimeSync;
    v0[39] = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider);
    uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
    id v9 = v3;
    uint64_t v10 = v8(ObjectType, v6);
    uint64_t v12 = v11;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v13 = sub_100528BE4();
    v0[40] = v13;
    *(void *)(inited + 64) = v13;
    *(void *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v14, (uint64_t)"CRLOpportunisticGroupSessionProvider: begin waiting on session for activity %@", 78, 2, inited);
    swift_setDeallocating();
    v0[41] = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    v0[42] = *v5;
    uint64_t v15 = sub_1005057FC(&qword_1016925E8);
    if (swift_dynamicCastClass())
    {
      uint64_t v16 = swift_unknownObjectWeakLoadStrong();
      v0[43] = v16;
      if (v16)
      {
        type metadata accessor for CRLOpportunisticGroupSessionManager(0);
        uint64_t v17 = swift_dynamicCastClass();
        v0[44] = v17;
        if (v17)
        {
          swift_unknownObjectRetain();
          uint64_t v18 = (void *)swift_task_alloc();
          v0[45] = v18;
          uint64_t v19 = sub_100523288(&qword_1016925E0, &qword_1016925E8);
          *uint64_t v18 = v0;
          uint64_t v20 = sub_100B1A648;
LABEL_13:
          v18[1] = v20;
          return GroupSessionProvider.session.getter(v15, v19);
        }
        swift_unknownObjectRelease();
      }
    }
    v0[48] = *v5;
    uint64_t v15 = sub_1005057FC(&qword_1016925D8);
    if (swift_dynamicCastClass())
    {
      uint64_t v21 = swift_unknownObjectWeakLoadStrong();
      v0[49] = v21;
      if (v21)
      {
        type metadata accessor for CRLOpportunisticGroupSessionManager(0);
        uint64_t v22 = swift_dynamicCastClass();
        v0[50] = v22;
        if (v22)
        {
          swift_unknownObjectRetain();
          uint64_t v18 = (void *)swift_task_alloc();
          v0[51] = v18;
          uint64_t v19 = sub_100523288(&qword_1016925D0, &qword_1016925D8);
          *uint64_t v18 = v0;
          uint64_t v20 = sub_100B1AAA4;
          goto LABEL_13;
        }
        swift_unknownObjectRelease();
      }
    }
    swift_release();
  }
  id v23 = (uint64_t (*)(void))v0[1];
  return v23();
}

uint64_t sub_100B1A648(uint64_t a1)
{
  *(void *)(*(void *)v1 + 368) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100B1A748, 0, 0);
}

uint64_t sub_100B1A748()
{
  uint64_t v1 = v0[46];
  if (v1)
  {
    uint64_t v2 = v0[40];
    uint64_t v3 = (void *)static OS_os_log.realTimeSync;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    v0[36] = v1;
    id v5 = v3;
    swift_retain();
    sub_1005057FC(&qword_101692B40);
    uint64_t v6 = String.init<A>(reflecting:)();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v2;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v7;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v8, (uint64_t)"CRLOpportunisticGroupSessionProvider: observed new group session: %@", 68, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&dword_101692B48 + dword_101692B48);
    id v9 = (void *)swift_task_alloc();
    v0[47] = v9;
    *id v9 = v0;
    v9[1] = sub_100B1A920;
    return v12(v1);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100B1A920()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100B1AA1C, 0, 0);
}

uint64_t sub_100B1AA1C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B1AAA4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 416) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100B1ABA4, 0, 0);
}

uint64_t sub_100B1ABA4()
{
  uint64_t v1 = v0[52];
  if (v1)
  {
    uint64_t v2 = v0[40];
    uint64_t v3 = (void *)static OS_os_log.realTimeSync;
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    v0[35] = v1;
    id v5 = v3;
    swift_retain();
    sub_1005057FC(&qword_101692B40);
    uint64_t v6 = String.init<A>(reflecting:)();
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = v2;
    *(void *)(inited + 32) = v6;
    *(void *)(inited + 40) = v7;
    uint64_t v8 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v8, (uint64_t)"CRLOpportunisticGroupSessionProvider: observed new group session: %@", 68, 2, inited);
    swift_setDeallocating();
    swift_arrayDestroy();

    uint64_t v12 = (uint64_t (*)(uint64_t))((char *)&dword_101692B48 + dword_101692B48);
    id v9 = (void *)swift_task_alloc();
    v0[53] = v9;
    *id v9 = v0;
    v9[1] = sub_100B1AD7C;
    return v12(v1);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100B1AD7C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100B1AE78, 0, 0);
}

uint64_t sub_100B1AE78()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B1AF00()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  sub_100B23FA8(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_globallyScopedBoardIdentifier, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_unknownObjectRelease();
  swift_release();
  sub_100523398(v0 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionConfiguring);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100B1B000()
{
  return type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
}

uint64_t type metadata accessor for CRLBoardOpportunisticActivityWrapper(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101692740);
}

uint64_t sub_100B1B028()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B1B0D8(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(*(void *)(v2 + 64) + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_1009567DC(a1);
    if (v6)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1005057FC(&qword_1016925E8);
      BOOL v7 = swift_dynamicCastClass() != 0;
      swift_release();
      LOBYTE(v5) = v7 ^ a2;
    }
    else
    {
      swift_bridgeObjectRelease();
      LOBYTE(v5) = 0;
    }
  }
  return v5 & 1;
}

uint64_t sub_100B1B1A4(uint64_t a1, char a2)
{
  *(void *)(v3 + 632) = v2;
  *(unsigned char *)(v3 + 744) = a2;
  *(void *)(v3 + 624) = a1;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  *(void *)(v3 + 640) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 648) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 656) = v5;
  *(void *)(v3 + 664) = v4;
  return _swift_task_switch(sub_100B1B274, v5, v4);
}

uint64_t sub_100B1B274()
{
  uint64_t v1 = *(void *)(v0 + 632) + 88;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 624);
    swift_bridgeObjectRetain();
    sub_1009567DC(v2);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v4 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v6 = v4;
      uint64_t v7 = UUID.uuidString.getter();
      uint64_t v9 = v8;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v10 = sub_100528BE4();
      *(void *)(inited + 32) = v7;
      *(void *)(inited + 64) = v10;
      *(void *)(inited + 40) = v9;
      uint64_t v11 = static os_log_type_t.default.getter();
      uint64_t v12 = "leavingOpportunisticActivity exists for %{public}@, don't need to call leave again.";
      uint64_t v13 = (uint64_t)v6;
      uint64_t v14 = 83;
LABEL_20:
      sub_100BAC898(v13, (uint64_t)&_mh_execute_header, v11, (uint64_t)v12, v14, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_task_dealloc();
      uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
      return v41();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = *(void *)(v0 + 632);
  swift_beginAccess();
  uint64_t v16 = *(void *)(v15 + 64);
  if (!*(void *)(v16 + 16))
  {
LABEL_17:
    swift_release();
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v36 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    id v6 = v36;
    uint64_t v37 = UUID.uuidString.getter();
    uint64_t v39 = v38;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v40 = sub_100528BE4();
    *(void *)(inited + 32) = v37;
    *(void *)(inited + 64) = v40;
    *(void *)(inited + 40) = v39;
    uint64_t v11 = static os_log_type_t.default.getter();
    uint64_t v12 = "Missing opportunisticActivityWrappers for %{public}@, unexpected.";
    uint64_t v13 = (uint64_t)v6;
    uint64_t v14 = 65;
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(v0 + 624);
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_1009567DC(v17);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v20 = *(void *)(v0 + 640);
  uint64_t v21 = *(void *)(v0 + 624);
  uint64_t v22 = *(void *)(*(void *)(v16 + 56) + 8 * v18);
  *(void *)(v0 + 672) = v22;
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100B24AE8(v21, v20, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(void *)(v0 + 680) = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider;
  sub_1005057FC(&qword_1016925E8);
  LOBYTE(v21) = swift_dynamicCastClass() != 0;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v51 = *(void *)v1;
  *(void *)uint64_t v1 = 0x8000000000000000;
  sub_1009780B4(v21, v20, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v1 = v51;
  swift_bridgeObjectRelease();
  sub_100B23FA8(v20, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess();
  uint64_t v24 = *(void *)(v22 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session);
  *(void *)(v0 + 688) = v24;
  if (v24)
  {
    uint64_t v25 = qword_10166FBA0;
    swift_retain();
    if (v25 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v26 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v27 = swift_initStackObject();
    *(_OWORD *)(v27 + 16) = xmmword_10117E810;
    id v28 = v26;
    uint64_t v29 = UUID.uuidString.getter();
    uint64_t v31 = v30;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_100528BE4();
    *(void *)(v27 + 32) = v29;
    *(void *)(v27 + 40) = v31;
    uint64_t v32 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v32, (uint64_t)"call leaveGroupSession() for %{public}@", 39, 2, v27);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    int v50 = (uint64_t (*)(uint64_t, char))((char *)&dword_101692BF0 + dword_101692BF0);
    uint64_t v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 696) = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_100B1B970;
    char v34 = *(unsigned char *)(v0 + 744);
    return v50(v24, v34);
  }
  else
  {
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v42 = (void *)static OS_os_log.realTimeSync;
    *(void *)(v0 + 704) = sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v43 = swift_initStackObject();
    *(_OWORD *)(v43 + 16) = xmmword_10117E810;
    id v44 = v42;
    uint64_t v45 = UUID.uuidString.getter();
    uint64_t v47 = v46;
    *(void *)(v43 + 56) = &type metadata for String;
    unint64_t v48 = sub_100528BE4();
    *(void *)(v0 + 712) = v48;
    *(void *)(v43 + 64) = v48;
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    uint64_t v49 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v49, (uint64_t)"calling activityWrapper.leave() for %{public}@", 46, 2, v43);
    swift_setDeallocating();
    *(void *)(v0 + 720) = sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return _swift_task_switch(sub_100B1BC18, 0, 0);
  }
}

uint64_t sub_100B1B970()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 664);
  uint64_t v3 = *(void *)(v1 + 656);
  return _swift_task_switch(sub_100B1BA90, v3, v2);
}

uint64_t sub_100B1BA90()
{
  swift_release();
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)static OS_os_log.realTimeSync;
  v0[88] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v3 = v1;
  uint64_t v4 = UUID.uuidString.getter();
  uint64_t v6 = v5;
  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v7 = sub_100528BE4();
  v0[89] = v7;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 32) = v4;
  *(void *)(inited + 40) = v6;
  uint64_t v8 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v8, (uint64_t)"calling activityWrapper.leave() for %{public}@", 46, 2, inited);
  swift_setDeallocating();
  v0[90] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  return _swift_task_switch(sub_100B1BC18, 0, 0);
}

uint64_t sub_100B1BC18()
{
  uint64_t v1 = v0[84] + v0[85];
  id v2 = (id)static OS_os_log.realTimeSync;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"groupSessionProvider.leave() called", 35, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[91] = v6;
  uint64_t v7 = *(void *)(v4 + 8);
  *uint64_t v6 = v0;
  v6[1] = sub_100B1BD1C;
  return GroupSessionProvider.leave()(ObjectType, v7);
}

uint64_t sub_100B1BD1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 736) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 664);
  uint64_t v4 = *(void *)(v2 + 656);
  if (v0) {
    uint64_t v5 = sub_100B1BFA0;
  }
  else {
    uint64_t v5 = sub_100B1BE58;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B1BE58()
{
  swift_release();
  uint64_t v1 = *(void *)(v0[79] + 64);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[78];
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_1009567DC(v2);
    if (v4)
    {
      uint64_t v5 = v0[84];
      uint64_t v6 = *(void *)(*(void *)(v1 + 56) + 8 * v3);
      swift_bridgeObjectRelease();
      if (v6 == v5)
      {
        uint64_t v7 = v0[78];
        swift_beginAccess();
        sub_10095D1A0(v7);
        swift_endAccess();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v8 = v0[78];
  swift_beginAccess();
  sub_10095D314(v8);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100B1BFA0()
{
  uint64_t v1 = v0[89];
  swift_release();
  uint64_t v2 = (void *)static OS_os_log.realTimeSync;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v4 = v0[60];
  uint64_t v5 = v0[61];
  id v6 = v2;
  uint64_t v7 = Error.publicDescription.getter(v4, v5);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v9, (uint64_t)"Caught error in activityWrapper.leave() call %{public}@", 55, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  swift_errorRelease();
  uint64_t v10 = *(void *)(v0[79] + 64);
  if (*(void *)(v10 + 16))
  {
    uint64_t v11 = v0[78];
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_1009567DC(v11);
    if (v13)
    {
      uint64_t v14 = v0[84];
      uint64_t v15 = *(void *)(*(void *)(v10 + 56) + 8 * v12);
      swift_bridgeObjectRelease();
      if (v15 == v14)
      {
        uint64_t v16 = v0[78];
        swift_beginAccess();
        sub_10095D1A0(v16);
        swift_endAccess();
        swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v17 = v0[78];
  swift_beginAccess();
  sub_10095D314(v17);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  unint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_100B1C1D0(uint64_t a1, uint64_t a2)
{
  v3[88] = v2;
  v3[87] = a2;
  v3[86] = a1;
  sub_1005057FC(&qword_101672BB0);
  v3[89] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[92] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[93] = v5;
  v3[94] = v4;
  return _swift_task_switch(sub_100B1C2E0, v5, v4);
}

uint64_t sub_100B1C2E0()
{
  uint64_t v1 = v0[87];
  uint64_t v2 = v0[88] + 80;
  swift_beginAccess();
  uint64_t v3 = *(void *)v2;
  if (*(void *)(*(void *)v2 + 16))
  {
    uint64_t v4 = v0[86];
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1009567DC(v4);
    if (v6)
    {
      int v7 = *(unsigned __int8 *)(*(void *)(v3 + 56) + v5);
      swift_bridgeObjectRelease();
      if ((((v1 == 0) ^ v7) & 1) == 0)
      {
        swift_release();
        if (qword_10166FBA0 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v8 = (void *)static OS_os_log.realTimeSync;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v10 = v8;
        uint64_t v11 = UUID.uuidString.getter();
        uint64_t v13 = v12;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v14 = sub_100528BE4();
        *(void *)(inited + 32) = v11;
        *(void *)(inited + 64) = v14;
        *(void *)(inited + 40) = v13;
        uint64_t v15 = static os_log_type_t.default.getter();
        uint64_t v16 = "startingOpportunisticActivity exists for %{public}@, wait for current start to finish.";
        uint64_t v17 = (uint64_t)v10;
        uint64_t v18 = 86;
LABEL_13:
        sub_100BAC898(v17, (uint64_t)&_mh_execute_header, v15, (uint64_t)v16, v18, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v27 = (uint64_t (*)(void))v0[1];
        return v27();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v19 = v0[88];
  swift_beginAccess();
  if (*(void *)(*(void *)(v19 + 88) + 16))
  {
    uint64_t v20 = v0[86];
    swift_bridgeObjectRetain();
    sub_1009567DC(v20);
    if (v21)
    {
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v22 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v10 = v22;
      uint64_t v23 = UUID.uuidString.getter();
      uint64_t v25 = v24;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v26 = sub_100528BE4();
      *(void *)(inited + 32) = v23;
      *(void *)(inited + 64) = v26;
      *(void *)(inited + 40) = v25;
      uint64_t v15 = static os_log_type_t.default.getter();
      uint64_t v16 = "leavingOpportunisticActivity exists for %{public}@, wait for leave to finish first.";
      uint64_t v17 = (uint64_t)v10;
      uint64_t v18 = 83;
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v29 = v0[91];
  uint64_t v30 = v0[88];
  sub_100B24AE8(v0[86], v29, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v70 = *(void *)v2;
  *(void *)uint64_t v2 = 0x8000000000000000;
  sub_1009780B4(v1 == 0, v29, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v2 = v70;
  swift_bridgeObjectRelease();
  sub_100B23FA8(v29, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess();
  swift_beginAccess();
  if (*(void *)(*(void *)(v30 + 64) + 16))
  {
    uint64_t v32 = v0[86];
    swift_bridgeObjectRetain();
    sub_1009567DC(v32);
    if (v33)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1005057FC(&qword_1016925E8);
      if (swift_dynamicCastClass())
      {
        if (v1)
        {
LABEL_21:
          if (qword_10166FBA0 != -1) {
            swift_once();
          }
          swift_beginAccess();
          char v34 = (void *)static OS_os_log.realTimeSync;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t v35 = swift_initStackObject();
          *(_OWORD *)(v35 + 16) = xmmword_10117D8C0;
          uint64_t v36 = swift_dynamicCastClass();
          if (v36) {
            uint64_t v37 = 1702195828;
          }
          else {
            uint64_t v37 = 0x65736C6166;
          }
          if (v36) {
            uint64_t v38 = (void *)0xE400000000000000;
          }
          else {
            uint64_t v38 = (void *)0xE500000000000000;
          }
          id v69 = v34;
          v39._countAndFlagsBits = v37;
          v39._object = v38;
          String.append(_:)(v39);
          swift_bridgeObjectRelease();
          *(void *)(v35 + 56) = &type metadata for String;
          unint64_t v40 = sub_100528BE4();
          *(void *)(v35 + 64) = v40;
          *(void *)(v35 + 32) = 0;
          *(void *)(v35 + 40) = 0xE000000000000000;
          if (v1) {
            uint64_t v41 = 0x65736C6166;
          }
          else {
            uint64_t v41 = 1702195828;
          }
          if (v1) {
            unint64_t v42 = 0xE500000000000000;
          }
          else {
            unint64_t v42 = 0xE400000000000000;
          }
          unint64_t v43 = v42;
          String.append(_:)(*(Swift::String *)&v41);
          swift_bridgeObjectRelease();
          *(void *)(v35 + 96) = &type metadata for String;
          *(void *)(v35 + 104) = v40;
          *(void *)(v35 + 72) = 0;
          *(void *)(v35 + 80) = 0xE000000000000000;
          uint64_t v44 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v44, (uint64_t)"Switching from isMeToMe: %{public}@ to isMeToMe: %{public}@", 59, 2, v35);
          swift_release();
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          goto LABEL_42;
        }
      }
      else if (!v1)
      {
        goto LABEL_21;
      }
      if (*(void *)(*(void *)(v30 + 64) + 16))
      {
        uint64_t v45 = v0[86];
        swift_bridgeObjectRetain();
        sub_1009567DC(v45);
        LOBYTE(v45) = v46;
        swift_bridgeObjectRelease();
        if (v45)
        {
          sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"startOpportunisticGroupActivity(globallyScopedBoardIdentifier:ckShare:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 267, (uint64_t)"Attempting to instantiate opportunistic activity that is still connected.", 73, 2u, (uint64_t)_swiftEmptyArrayStorage);
          sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"startOpportunisticGroupActivity(globallyScopedBoardIdentifier:ckShare:)", 71, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 267);
        }
      }
      swift_release();
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
  }
LABEL_42:
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v47 = v0[90];
  uint64_t v48 = v0[88];
  uint64_t v49 = (void *)v0[87];
  uint64_t v50 = v0[86];
  swift_beginAccess();
  uint64_t v51 = (void *)static OS_os_log.realTimeSync;
  v0[95] = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v52 = swift_initStackObject();
  *(_OWORD *)(v52 + 16) = xmmword_10117E810;
  id v53 = v51;
  uint64_t v54 = UUID.uuidString.getter();
  uint64_t v56 = v55;
  *(void *)(v52 + 56) = &type metadata for String;
  unint64_t v57 = sub_100528BE4();
  v0[96] = v57;
  *(void *)(v52 + 64) = v57;
  *(void *)(v52 + 32) = v54;
  *(void *)(v52 + 40) = v56;
  uint64_t v58 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v58, (uint64_t)"startOpportunisticGroupActivity() for %{public}@", 48, 2, v52);
  swift_setDeallocating();
  v0[97] = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100B24AE8(v50, v47, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v59 = sub_100B1E8F4(&qword_101692C90, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupSessionManager);
  type metadata accessor for CRLBoardOpportunisticActivityWrapper(0);
  uint64_t v60 = swift_allocObject();
  v0[98] = v60;
  id v61 = v49;
  swift_retain();
  sub_100B19C94(v47, v49, v48, v59);
  uint64_t v62 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask;
  if (*(void *)(v60 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask))
  {
    swift_retain();
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  uint64_t v63 = v0[89];
  uint64_t v64 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v63, 1, 1, v64);
  uint64_t v65 = swift_allocObject();
  swift_weakInit();
  uint64_t v66 = (void *)swift_allocObject();
  v66[2] = 0;
  v66[3] = 0;
  v66[4] = v65;
  *(void *)(v60 + v62) = sub_1005912D0(v63, (uint64_t)&unk_101692C98, (uint64_t)v66);
  swift_release();
  swift_release();
  id v67 = (id)static OS_os_log.realTimeSync;
  uint64_t v68 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v67, (uint64_t)&_mh_execute_header, v68, (uint64_t)"will call activityWrapper.start()", 33, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_retain();
  return _swift_task_switch(sub_100B1CE98, 0, 0);
}

uint64_t sub_100B1CE98()
{
  uint64_t v1 = *(void *)(v0 + 784);
  id v2 = (id)static OS_os_log.realTimeSync;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"groupSessionProvider.join() called", 34, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_groupSessionProvider + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 792) = v6;
  uint64_t v7 = *(void *)(v4 + 8);
  *char v6 = v0;
  v6[1] = sub_100B1CFA0;
  return GroupSessionProvider.join()(ObjectType, v7);
}

uint64_t sub_100B1CFA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 800) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 752);
    uint64_t v4 = *(void *)(v2 + 744);
    unint64_t v5 = sub_100B1D0C0;
  }
  else
  {
    unint64_t v5 = sub_100B1D2B0;
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B1D0C0()
{
  swift_release();
  uint64_t v1 = v0[100];
  uint64_t v2 = v0[98];
  v0[102] = v2;
  v0[101] = v1;
  uint64_t v3 = v0[96];
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  swift_getErrorValue();
  uint64_t v6 = v0[59];
  id v7 = v4;
  uint64_t v8 = Error.fullDescription.getter(v6);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = v3;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.error.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v10, (uint64_t)"Cannot instantiate opportunistic activity with error %@", 55, 2, inited);
  swift_setDeallocating();
  swift_arrayDestroy();

  if (v2 && *(void *)(v2 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask))
  {
    swift_retain();
    swift_retain();
    Task.cancel()();
    swift_release();
    swift_release();
  }
  uint64_t v11 = (void *)swift_task_alloc();
  v0[103] = v11;
  void *v11 = v0;
  v11[1] = sub_100B1D4F8;
  uint64_t v12 = v0[86];
  return sub_100B1B1A4(v12, 1);
}

uint64_t sub_100B1D2B0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 752);
  uint64_t v2 = *(void *)(v0 + 744);
  return _swift_task_switch(sub_100B1D318, v2, v1);
}

uint64_t sub_100B1D318()
{
  uint64_t v1 = v0[98];
  uint64_t v2 = v0[91];
  uint64_t v3 = v0[88];
  uint64_t v4 = v0[86];
  swift_release();
  id v5 = (id)static OS_os_log.realTimeSync;
  uint64_t v6 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v6, (uint64_t)"called activityWrapper.start()", 30, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100B24AE8(v4, v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v3 + 64);
  *(void *)(v3 + 64) = 0x8000000000000000;
  sub_100977E18(v1, v2, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 64) = v11;
  swift_bridgeObjectRelease();
  sub_100B23FA8(v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_endAccess();
  uint64_t v8 = v0[86];
  swift_beginAccess();
  sub_10095D314(v8);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100B1D4F8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 752);
  uint64_t v3 = *(void *)(v1 + 744);
  return _swift_task_switch(sub_100B1D618, v3, v2);
}

uint64_t sub_100B1D618()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 688);
  swift_beginAccess();
  sub_10095D314(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

char *sub_100B1D6F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  GroupSession.activity.getter();
  sub_100B18D74((uint64_t)v5);
  swift_release();
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v8 = v6;
  uint64_t v9 = UUID.uuidString.getter();
  uint64_t v11 = v10;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v12, (uint64_t)"createGroupSessionForConfiguration() for %{public}@", 51, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  type metadata accessor for CRLBoardOpportunisticGroupSession();
  swift_allocObject();
  uint64_t v13 = swift_retain();
  uint64_t v14 = sub_100B1EA98(v13);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 64);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_1009567DC((uint64_t)v5);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"createGroupSessionForConfiguration(from:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 302, (uint64_t)"Received an opportunistic group session that does not have a corresponding activity wrapper. This is a logic error", 114, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"createGroupSessionForConfiguration(from:)", 41, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Sync/RealTime/CRLOpportunisticGroupSessionManager.swift", 109, 2, 302);
    sub_100B24208();
    swift_allocError();
    swift_willThrow();
    swift_release();
    sub_100B23FA8((uint64_t)v5, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    return v14;
  }
  uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_100B23FA8((uint64_t)v5, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  *(void *)(v18 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = v14;
  swift_retain();
  swift_release();
  swift_release();
  return v14;
}

uint64_t sub_100B1DA54(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[17] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[18] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B1DB18, v4, v3);
}

uint64_t sub_100B1DB18()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_release();
  GroupSession.activity.getter();
  sub_100B18D74(v1);
  swift_release();
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 136);
  swift_beginAccess();
  uint64_t v3 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v5 = v3;
  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v8;
  uint64_t v9 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v9, (uint64_t)"didConfigureGroupSession() for %{public}@", 41, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_retain();
  PassthroughSubject.send(_:)();
  swift_release();
  sub_100B23FA8(v2, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_100B1DD0C(uint64_t a1)
{
  v2[21] = a1;
  v2[22] = v1;
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[23] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[24] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B1DDD0, v4, v3);
}

uint64_t sub_100B1DDD0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[22];
  swift_release();
  GroupSession.activity.getter();
  sub_100B18D74(v1);
  swift_release();
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 64);
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = v0[23];
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1009567DC(v4);
    if (v6)
    {
      uint64_t v7 = *(void *)(*(void *)(v3 + 56) + 8 * v5);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      uint64_t v8 = v0[23];
      swift_beginAccess();
      uint64_t v9 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v11 = v9;
      uint64_t v12 = UUID.uuidString.getter();
      uint64_t v14 = v13;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v12;
      *(void *)(inited + 40) = v14;
      uint64_t v15 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v11, (uint64_t)&_mh_execute_header, v15, (uint64_t)"groupSessionConfigurationFailed() for activity on %{public}@", 60, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_100B23FA8(v8, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      *(void *)(v7 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_session) = 0;
      swift_release();
      swift_release();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v16 = v0[23];
  swift_beginAccess();
  id v17 = (id)static OS_os_log.realTimeSync;
  uint64_t v18 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v17, (uint64_t)&_mh_execute_header, v18, (uint64_t)"groupSessionConfigurationFailed() on an activity we are not tracking", 68, 2, (uint64_t)_swiftEmptyArrayStorage);

  sub_100B23FA8(v16, type metadata accessor for CRLGloballyScopedBoardIdentifier);
LABEL_10:
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100B1E0D8()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  id v17 = (char *)&v37 - v16;
  GroupSession.activity.getter();
  sub_100B18D74((uint64_t)v17);
  swift_release();
  swift_beginAccess();
  uint64_t v18 = *(void *)(v0 + 64);
  if (*(void *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_1009567DC((uint64_t)v17);
    if (v20)
    {
      uint64_t v38 = v4;
      uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 8 * v19);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v22 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v24 = v22;
      GroupSession.activity.getter();
      sub_100B18D74((uint64_t)v13);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v13, v5);
      sub_100B23FA8((uint64_t)v13, type metadata accessor for CRLGloballyScopedBoardIdentifier);
      uint64_t v25 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v25;
      *(void *)(inited + 40) = v27;
      swift_release();
      uint64_t v28 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v28, (uint64_t)"didLeaveGroupSession() for %{public}@", 37, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v29 = OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask;
      if (*(void *)(v21 + OBJC_IVAR____TtC8Freeform36CRLBoardOpportunisticActivityWrapper_sessionObserverTask))
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      uint64_t v30 = type metadata accessor for TaskPriority();
      uint64_t v31 = (uint64_t)v38;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
      uint64_t v32 = swift_allocObject();
      swift_weakInit();
      char v33 = (void *)swift_allocObject();
      v33[2] = 0;
      v33[3] = 0;
      v33[4] = v32;
      *(void *)(v21 + v29) = sub_1005912D0(v31, (uint64_t)&unk_101692B38, (uint64_t)v33);
      swift_release();
      swift_release();
      return sub_100B23FA8((uint64_t)v17, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    }
    swift_bridgeObjectRelease();
  }
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v34 = (id)static OS_os_log.realTimeSync;
  uint64_t v35 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v34, (uint64_t)&_mh_execute_header, v35, (uint64_t)"didLeaveGroupSession() on an activity we are not tracking", 57, 2, (uint64_t)_swiftEmptyArrayStorage);

  return sub_100B23FA8((uint64_t)v17, type metadata accessor for CRLGloballyScopedBoardIdentifier);
}

void *sub_100B1E5F0()
{
  uint64_t v1 = v0;
  v0[8] = _swiftEmptyDictionarySingleton;
  sub_1005057FC(&qword_101692CC0);
  swift_allocObject();
  swift_retain();
  v0[9] = PassthroughSubject.init()();
  v0[10] = _swiftEmptyDictionarySingleton;
  v0[11] = _swiftEmptyDictionarySingleton;
  swift_release();
  v0[2] = &_swiftEmptySetSingleton;
  v0[4] = 0;
  swift_unknownObjectWeakInit();
  v0[5] = _swiftEmptyDictionarySingleton;
  v0[6] = _swiftEmptyDictionarySingleton;
  v0[7] = _swiftEmptyDictionarySingleton;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v2 = (id)static OS_os_log.realTimeSync;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"CRLGroupSessionManager: init.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  return v1;
}

uint64_t sub_100B1E718()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B1E758()
{
  swift_bridgeObjectRelease();
  sub_100523398(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100B1E7B8()
{
  sub_100B1E758();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLOpportunisticGroupSessionManager(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101692880);
}

uint64_t sub_100B1E80C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100B1E864()
{
  return sub_100B1E8F4(&qword_101692AF0, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
}

uint64_t sub_100B1E8AC()
{
  return sub_100B1E8F4((unint64_t *)&unk_101692AF8, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
}

uint64_t sub_100B1E8F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B1E93C(uint64_t a1)
{
  uint64_t result = sub_100B1E8F4(&qword_101692B08, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100B1E994()
{
  return sub_100B1E8F4(&qword_101692B08, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
}

uint64_t sub_100B1E9DC()
{
  return sub_100B1E8F4(&qword_101692B10, (void (*)(uint64_t))type metadata accessor for CRLOpportunisticGroupActivity);
}

void *sub_100B1EA24()
{
  return &protocol witness table for String;
}

void *sub_100B1EA30()
{
  return &protocol witness table for String;
}

uint64_t sub_100B1EA3C(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_100B1EA44()
{
  unint64_t result = qword_101692B20;
  if (!qword_101692B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692B20);
  }
  return result;
}

char *sub_100B1EA98(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Participant();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = v1 + qword_101699240;
  *(void *)(v17 + 32) = 0;
  *(_OWORD *)uint64_t v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  uint64_t v18 = v1 + *(void *)(*(void *)v1 + 280);
  uint64_t v19 = sub_1005057FC(&qword_101692B50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = qword_10166FBA0;
  swift_retain();
  if (v20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v21 = (id)static OS_os_log.realTimeSync;
  uint64_t v22 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v22, (uint64_t)"CRLBoardShareSession: init.", 27, 2, (uint64_t)_swiftEmptyArrayStorage);

  *(void *)(v2 + qword_10171C2F0) = a1;
  swift_retain();
  swift_release();
  GroupSession.id.getter();
  GroupSession.localParticipant.getter();
  Participant.id.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t v23 = sub_100C2E370((uint64_t)v16, (uint64_t)v12);
  swift_retain();
  sub_100B180F4();
  swift_release();
  swift_release();
  return v23;
}

uint64_t sub_100B1ED48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a4;
  uint64_t v5 = type metadata accessor for UUID();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  return _swift_task_switch(sub_100B1EE08, 0, 0);
}

uint64_t sub_100B1EE08()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_beginAccess();
  uint64_t v4 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v6 = v4;
  GroupSession.id.getter();
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v7;
  *(void *)(inited + 40) = v9;
  uint64_t v10 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v10, (uint64_t)"CRLBoardShareSession: Calling join on group session now %@", 58, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  GroupSession.join()();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100B1EFBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v30 = a6;
  int v39 = a3;
  int v40 = a5;
  uint64_t v37 = a4;
  uint64_t v35 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v33 = v6;
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v38 = *(void *)(v41 + 64);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v34 = v9;
  uint64_t v10 = sub_1005057FC(&qword_101692B50);
  uint64_t v31 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  uint64_t v32 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v17;
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v10);
  uint64_t v20 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v37, v6);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v21 = static MainActor.shared.getter();
  uint64_t v22 = v11;
  unint64_t v23 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v24 = v23 + v12;
  unint64_t v25 = (*(unsigned __int8 *)(v20 + 80) + v24 + 1) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v26 = v25 + v38;
  unint64_t v27 = (v25 + v38) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v21;
  *(void *)(v28 + 24) = &protocol witness table for MainActor;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v28 + v23, v32, v31);
  *(unsigned char *)(v28 + v24) = v39;
  (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v28 + v25, v34, v33);
  *(unsigned char *)(v28 + v26) = v40;
  *(void *)(v27 + v28 + 8) = v19;
  *(void *)(v28 + ((v27 + 23) & 0xFFFFFFFFFFFFFFF8)) = v30;
  swift_release();
  sub_1005912D0((uint64_t)v36, (uint64_t)&unk_101692C68, v28);
  return swift_release();
}

uint64_t sub_100B1F348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 1008) = v15;
  *(void *)(v8 + 1000) = a8;
  *(unsigned char *)(v8 + 1193) = a7;
  *(void *)(v8 + 992) = a6;
  *(unsigned char *)(v8 + 1192) = a5;
  *(void *)(v8 + 984) = a4;
  sub_1005057FC(&qword_101672BB0);
  *(void *)(v8 + 1016) = swift_task_alloc();
  sub_1005057FC(&qword_10168B130);
  *(void *)(v8 + 1024) = swift_task_alloc();
  *(void *)(v8 + 1032) = swift_task_alloc();
  *(void *)(v8 + 1040) = sub_1005057FC(&qword_101692BC8);
  *(void *)(v8 + 1048) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UUID();
  *(void *)(v8 + 1056) = v9;
  *(void *)(v8 + 1064) = *(void *)(v9 - 8);
  *(void *)(v8 + 1072) = swift_task_alloc();
  *(void *)(v8 + 1080) = swift_task_alloc();
  uint64_t v10 = sub_1005057FC(&qword_101692B50);
  *(void *)(v8 + 1088) = v10;
  *(void *)(v8 + 1096) = *(void *)(v10 - 8);
  *(void *)(v8 + 1104) = swift_task_alloc();
  *(void *)(v8 + 1112) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 1120) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 1128) = v12;
  *(void *)(v8 + 1136) = v11;
  return _swift_task_switch(sub_100B1F580, v12, v11);
}

uint64_t sub_100B1F580()
{
  uint64_t v1 = (char *)(v0 + 1192);
  uint64_t v2 = *(void *)(v0 + 1112);
  uint64_t v3 = *(void *)(v0 + 1096);
  uint64_t v4 = *(void *)(v0 + 1088);
  uint64_t v5 = *(void *)(v0 + 984);
  uint64_t v6 = *(void (**)(uint64_t, void, uint64_t))(v3 + 16);
  *(void *)(v0 + 1144) = v6;
  *(void *)(v0 + 1152) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  long long v116 = v6;
  v6(v2, v5, v4);
  long long v115 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 88);
  int v7 = v115(v2, v4);
  int v114 = enum case for GroupSession.State.invalidated<A>(_:);
  if (v7 != enum case for GroupSession.State.invalidated<A>(_:))
  {
    if (v7 == enum case for GroupSession.State.waiting<A>(_:))
    {
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      uint64_t v34 = *(void *)(v0 + 1080);
      uint64_t v35 = *(void *)(v0 + 1064);
      uint64_t v36 = *(void *)(v0 + 1056);
      int v37 = *(unsigned __int8 *)(v0 + 1193);
      uint64_t v38 = *(void *)(v0 + 992);
      int v39 = *v1;
      swift_beginAccess();
      int v40 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v38, v36);
      id v42 = v40;
      uint64_t v43 = String.init<A>(reflecting:)();
      uint64_t v45 = v44;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v46 = sub_100528BE4();
      *(void *)(inited + 32) = v43;
      *(void *)(inited + 40) = v45;
      uint64_t v47 = 28526;
      if (v37) {
        uint64_t v48 = 7562617;
      }
      else {
        uint64_t v48 = 28526;
      }
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v46;
      if (v37) {
        unint64_t v49 = 0xE300000000000000;
      }
      else {
        unint64_t v49 = 0xE200000000000000;
      }
      *(void *)(inited + 64) = v46;
      *(void *)(inited + 72) = v48;
      *(void *)(inited + 80) = v49;
      if (v39)
      {
        uint64_t v47 = 7562617;
        unint64_t v50 = 0xE300000000000000;
      }
      else
      {
        unint64_t v50 = 0xE200000000000000;
      }
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v46;
      *(void *)(inited + 112) = v47;
      *(void *)(inited + 120) = v50;
      uint64_t v51 = static os_log_type_t.default.getter();
      uint64_t v52 = "CRLBoardShareSession: state changed to .waiting. ID: %@, MeToMe: %{public}@, isFastSync: %@";
      uint64_t v53 = (uint64_t)v42;
      uint64_t v54 = 91;
    }
    else
    {
      if (v7 != enum case for GroupSession.State.joined<A>(_:))
      {
        (*(void (**)(void, void))(*(void *)(v0 + 1096) + 8))(*(void *)(v0 + 1112), *(void *)(v0 + 1088));
        goto LABEL_43;
      }
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      uint64_t v55 = *(void *)(v0 + 1080);
      uint64_t v56 = *(void *)(v0 + 1064);
      uint64_t v57 = *(void *)(v0 + 1056);
      int v58 = *(unsigned __int8 *)(v0 + 1193);
      uint64_t v59 = *(void *)(v0 + 992);
      int v60 = *v1;
      swift_beginAccess();
      id v61 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117DF40;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v55, v59, v57);
      id v42 = v61;
      uint64_t v62 = String.init<A>(reflecting:)();
      uint64_t v64 = v63;
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v65 = sub_100528BE4();
      *(void *)(inited + 32) = v62;
      *(void *)(inited + 40) = v64;
      uint64_t v66 = 28526;
      if (v58) {
        uint64_t v67 = 7562617;
      }
      else {
        uint64_t v67 = 28526;
      }
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v65;
      if (v58) {
        unint64_t v68 = 0xE300000000000000;
      }
      else {
        unint64_t v68 = 0xE200000000000000;
      }
      *(void *)(inited + 64) = v65;
      *(void *)(inited + 72) = v67;
      *(void *)(inited + 80) = v68;
      if (v60)
      {
        uint64_t v66 = 7562617;
        unint64_t v69 = 0xE300000000000000;
      }
      else
      {
        unint64_t v69 = 0xE200000000000000;
      }
      *(void *)(inited + 136) = &type metadata for String;
      *(void *)(inited + 144) = v65;
      *(void *)(inited + 112) = v66;
      *(void *)(inited + 120) = v69;
      uint64_t v51 = static os_log_type_t.default.getter();
      uint64_t v52 = "CRLBoardShareSession: state changed to .joined. ID: %@, MeToMe: %{public}@, isFastSync: %@";
      uint64_t v53 = (uint64_t)v42;
      uint64_t v54 = 90;
    }
    sub_100BAC898(v53, (uint64_t)&_mh_execute_header, v51, (uint64_t)v52, v54, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_43;
  }
  uint64_t v8 = *(uint64_t **)(v0 + 1112);
  char v9 = *v1;
  (*(void (**)(uint64_t *, void))(*(void *)(v0 + 1096) + 96))(v8, *(void *)(v0 + 1088));
  uint64_t v10 = *v8;
  *(void *)(v0 + 952) = 0;
  *(void *)(v0 + 960) = 0xE000000000000000;
  *(void *)(v0 + 968) = v10;
  sub_1005057FC(&qword_101672BD0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v11 = *(void *)(v0 + 952);
  uint64_t v12 = *(void *)(v0 + 960);
  if (v9) {
    sub_100FAEDB0();
  }
  uint64_t v112 = v12;
  uint64_t v113 = v11;
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void *)(v0 + 1080);
  uint64_t v14 = *(void *)(v0 + 1064);
  uint64_t v15 = *(void *)(v0 + 1056);
  int v16 = *(unsigned __int8 *)(v0 + 1193);
  uint64_t v17 = *(void *)(v0 + 992);
  int v18 = *v1;
  swift_beginAccess();
  uint64_t v19 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_10118E4B0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v17, v15);
  id v21 = v19;
  uint64_t v22 = String.init<A>(reflecting:)();
  uint64_t v24 = v23;
  *(void *)(v20 + 56) = &type metadata for String;
  unint64_t v25 = sub_100528BE4();
  unint64_t v26 = v25;
  *(void *)(v20 + 32) = v22;
  *(void *)(v20 + 40) = v24;
  uint64_t v27 = 28526;
  if (v16) {
    uint64_t v28 = 7562617;
  }
  else {
    uint64_t v28 = 28526;
  }
  *(void *)(v20 + 96) = &type metadata for String;
  *(void *)(v20 + 104) = v25;
  if (v16) {
    unint64_t v29 = 0xE300000000000000;
  }
  else {
    unint64_t v29 = 0xE200000000000000;
  }
  *(void *)(v20 + 64) = v25;
  *(void *)(v20 + 72) = v28;
  *(void *)(v20 + 80) = v29;
  if (v18)
  {
    uint64_t v27 = 7562617;
    unint64_t v30 = 0xE300000000000000;
  }
  else
  {
    unint64_t v30 = 0xE200000000000000;
  }
  *(void *)(v20 + 136) = &type metadata for String;
  *(void *)(v20 + 144) = v25;
  *(void *)(v20 + 112) = v27;
  *(void *)(v20 + 120) = v30;
  *(void *)(v20 + 176) = &type metadata for String;
  *(void *)(v20 + 184) = v25;
  *(void *)(v20 + 152) = v113;
  *(void *)(v20 + 160) = v112;
  swift_getErrorValue();
  uint64_t v31 = Error.localizedDescription.getter();
  *(void *)(v20 + 216) = &type metadata for String;
  *(void *)(v20 + 224) = v26;
  *(void *)(v20 + 192) = v31;
  *(void *)(v20 + 200) = v32;
  uint64_t v33 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v21, (uint64_t)&_mh_execute_header, v33, (uint64_t)"CRLBoardShareSession: state changed to .invalidated. ID: %@, MeToMe: %{public}@, isFastSync: %@. Reason: '%{public}@': %{public}@", 129, 2, v20);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_errorRelease();
LABEL_43:
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 1160) = Strong;
  if (!Strong)
  {
    uint64_t v79 = *(void *)(v0 + 1008);
    swift_release();
    swift_beginAccess();
    if (*(void *)(v79 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v80 = *(void *)(v0 + 1008);
    swift_beginAccess();
    *(void *)(v80 + 16) = 0;
    swift_release();
    if (qword_10166FBA0 != -1) {
      swift_once();
    }
    uint64_t v81 = *(void *)(v0 + 1080);
    uint64_t v82 = *(void *)(v0 + 1064);
    uint64_t v83 = *(void *)(v0 + 1056);
    uint64_t v84 = *(void *)(v0 + 992);
    swift_beginAccess();
    long long v85 = (void *)static OS_os_log.realTimeSync;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v86 = swift_initStackObject();
    *(_OWORD *)(v86 + 16) = xmmword_10117E810;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 16))(v81, v84, v83);
    id v87 = v85;
    uint64_t v88 = String.init<A>(reflecting:)();
    uint64_t v90 = v89;
    *(void *)(v86 + 56) = &type metadata for String;
    *(void *)(v86 + 64) = sub_100528BE4();
    *(void *)(v86 + 32) = v88;
    *(void *)(v86 + 40) = v90;
    uint64_t v91 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v87, (uint64_t)&_mh_execute_header, v91, (uint64_t)"CRLBoardShareSession: Not doing anything because CRLBoardShareSession was deallocated. Session ID: %{public}@", 109, 2, v86);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    goto LABEL_68;
  }
  uint64_t v71 = Strong;
  uint64_t v72 = *(void *)(v0 + 1104);
  uint64_t v73 = *(void *)(v0 + 1088);
  v116(v72, *(void *)(v0 + 984), v73);
  int v74 = v115(v72, v73);
  if (v74 == v114)
  {
    uint64_t v75 = *(void *)(v0 + 1008);
    (*(void (**)(void, void))(*(void *)(v0 + 1096) + 96))(*(void *)(v0 + 1104), *(void *)(v0 + 1088));
    swift_errorRelease();
    swift_beginAccess();
    if (*(void *)(v75 + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v76 = *(void *)(v0 + 1008);
    swift_beginAccess();
    *(void *)(v76 + 16) = 0;
    swift_release();
    uint64_t v77 = *(void *)(v71 + 32);
    *(void *)(v0 + 1184) = v77;
    if (v77)
    {
      int v78 = sub_100B204D8;
LABEL_60:
      uint64_t v92 = v78;
      swift_retain();
      return _swift_task_switch(v92, v77, 0);
    }
    swift_release();
    uint64_t v93 = *(void *)(v0 + 1160);
    uint64_t v94 = *(void *)(v0 + 1048);
    uint64_t v95 = *(int *)(*(void *)(v0 + 1040) + 48);
    (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 1064) + 16))(v94, *(void *)(v0 + 992), *(void *)(v0 + 1056));
    *(unsigned char *)(v94 + v95) = 1;
    swift_retain();
    CurrentValueSubject.value.setter();
    swift_release();
    *(void *)(v0 + 656) = 0;
    *(_OWORD *)(v0 + 624) = 0u;
    *(_OWORD *)(v0 + 640) = 0u;
    uint64_t v96 = v93 + qword_101699240;
    swift_beginAccess();
    sub_1006063BC(v0 + 624, v96, &qword_101681D68);
    swift_endAccess();
    *(void *)(v93 + 32) = 0;
  }
  else
  {
    if (v74 != enum case for GroupSession.State.waiting<A>(_:))
    {
      if (v74 != enum case for GroupSession.State.joined<A>(_:))
      {
        uint64_t v97 = *(void *)(v0 + 1080);
        uint64_t v98 = *(void *)(v0 + 1072);
        uint64_t v99 = *(void *)(v0 + 1056);
        long long v100 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1064) + 16);
        v100(v98, *(void *)(v0 + 992), v99);
        _StringGuts.grow(_:)(59);
        v101._object = (void *)0x8000000101272C50;
        v101._countAndFlagsBits = 0xD000000000000039;
        String.append(_:)(v101);
        v100(v97, v98, v99);
        v102._countAndFlagsBits = String.init<A>(reflecting:)();
        String.append(_:)(v102);
        swift_bridgeObjectRelease();
        return _assertionFailure(_:_:file:line:flags:)();
      }
      uint64_t v77 = *(void *)(v71 + 32);
      *(void *)(v0 + 1176) = v77;
      if (v77)
      {
        int v78 = sub_100B20374;
        goto LABEL_60;
      }
      swift_release();
      id v110 = [self defaultCenter];
      if (qword_10166FE68 != -1) {
        swift_once();
      }
      [v110 postNotificationName:qword_10171C3C8 object:*(void *)(v0 + 1160)];

      goto LABEL_67;
    }
    uint64_t v77 = *(void *)(v71 + 32);
    *(void *)(v0 + 1168) = v77;
    if (v77)
    {
      int v78 = sub_100B202F8;
      goto LABEL_60;
    }
  }
  swift_release();
LABEL_67:
  uint64_t v103 = *(void *)(v0 + 1160);
  uint64_t v104 = *(void *)(v0 + 1096);
  uint64_t v105 = *(void *)(v0 + 1088);
  uint64_t v106 = *(void *)(v0 + 1032);
  uint64_t v107 = *(void *)(v0 + 1024);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1144))(v106, *(void *)(v0 + 984), v105);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v104 + 56))(v106, 0, 1, v105);
  sub_10051B3EC(v106, v107, &qword_10168B130);
  uint64_t v108 = v103 + *(void *)(*(void *)v103 + 280);
  swift_beginAccess();
  sub_1006063BC(v107, v108, &qword_10168B130);
  swift_endAccess();
  sub_1005057FC(&qword_101692C70);
  sub_100523288(&qword_101692C78, &qword_101692C70);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_release();
LABEL_68:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v109 = *(uint64_t (**)(void))(v0 + 8);
  return v109();
}

uint64_t sub_100B202F8()
{
  uint64_t v1 = v0[146];
  if (*(unsigned char *)(v1 + 210) == 1) {
    *(unsigned char *)(v1 + 210) = 0;
  }
  swift_release();
  uint64_t v2 = v0[142];
  uint64_t v3 = v0[141];
  return _swift_task_switch(sub_100B207E8, v3, v2);
}

uint64_t sub_100B20374()
{
  uint64_t v1 = v0[147];
  if ((*(unsigned char *)(v1 + 210) & 1) == 0)
  {
    *(unsigned char *)(v1 + 210) = 1;
    uint64_t v2 = v0[147];
    if (*(unsigned char *)(v1 + 208) == 1)
    {
      uint64_t v3 = v0[127];
      *(unsigned char *)(v1 + 208) = 0;
      uint64_t v4 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
      uint64_t v5 = sub_100B1E8F4((unint64_t *)&qword_101692C80, (void (*)(uint64_t))type metadata accessor for CRLGroupSessionSyncController);
      uint64_t v6 = (void *)swift_allocObject();
      v6[2] = v2;
      v6[3] = v5;
      v6[4] = v2;
      swift_retain_n();
      sub_1005912D0(v3, (uint64_t)&unk_101692C88, (uint64_t)v6);
      swift_release();
    }
  }
  swift_release();
  uint64_t v7 = v0[142];
  uint64_t v8 = v0[141];
  return _swift_task_switch(sub_100B209C8, v8, v7);
}

uint64_t sub_100B204D8()
{
  uint64_t v1 = v0[148];
  if (*(unsigned char *)(v1 + 210) == 1) {
    *(unsigned char *)(v1 + 210) = 0;
  }
  swift_release();
  uint64_t v2 = v0[142];
  uint64_t v3 = v0[141];
  return _swift_task_switch(sub_100B20554, v3, v2);
}

uint64_t sub_100B20554()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v3 = *(int *)(*(void *)(v0 + 1040) + 48);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 1064) + 16))(v2, *(void *)(v0 + 992), *(void *)(v0 + 1056));
  *(unsigned char *)(v2 + v3) = 1;
  swift_retain();
  CurrentValueSubject.value.setter();
  swift_release();
  *(void *)(v0 + 656) = 0;
  *(_OWORD *)(v0 + 624) = 0u;
  *(_OWORD *)(v0 + 640) = 0u;
  uint64_t v4 = v1 + qword_101699240;
  swift_beginAccess();
  sub_1006063BC(v0 + 624, v4, &qword_101681D68);
  swift_endAccess();
  *(void *)(v1 + 32) = 0;
  swift_release();
  uint64_t v5 = *(void *)(v0 + 1160);
  uint64_t v6 = *(void *)(v0 + 1096);
  uint64_t v7 = *(void *)(v0 + 1088);
  uint64_t v8 = *(void *)(v0 + 1032);
  uint64_t v9 = *(void *)(v0 + 1024);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1144))(v8, *(void *)(v0 + 984), v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  sub_10051B3EC(v8, v9, &qword_10168B130);
  uint64_t v10 = v5 + *(void *)(*(void *)v5 + 280);
  swift_beginAccess();
  sub_1006063BC(v9, v10, &qword_10168B130);
  swift_endAccess();
  sub_1005057FC(&qword_101692C70);
  sub_100523288(&qword_101692C78, &qword_101692C70);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100B207E8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1160);
  uint64_t v2 = *(void *)(v0 + 1096);
  uint64_t v3 = *(void *)(v0 + 1088);
  uint64_t v4 = *(void *)(v0 + 1032);
  uint64_t v5 = *(void *)(v0 + 1024);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1144))(v4, *(void *)(v0 + 984), v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  sub_10051B3EC(v4, v5, &qword_10168B130);
  uint64_t v6 = v1 + *(void *)(*(void *)v1 + 280);
  swift_beginAccess();
  sub_1006063BC(v5, v6, &qword_10168B130);
  swift_endAccess();
  sub_1005057FC(&qword_101692C70);
  sub_100523288(&qword_101692C78, &qword_101692C70);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100B209C8()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_10166FE68 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10171C3C8 object:*(void *)(v0 + 1160)];

  uint64_t v2 = *(void *)(v0 + 1160);
  uint64_t v3 = *(void *)(v0 + 1096);
  uint64_t v4 = *(void *)(v0 + 1088);
  uint64_t v5 = *(void *)(v0 + 1032);
  uint64_t v6 = *(void *)(v0 + 1024);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1144))(v5, *(void *)(v0 + 984), v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_10051B3EC(v5, v6, &qword_10168B130);
  uint64_t v7 = v2 + *(void *)(*(void *)v2 + 280);
  swift_beginAccess();
  sub_1006063BC(v6, v7, &qword_10168B130);
  swift_endAccess();
  sub_1005057FC(&qword_101692C70);
  sub_100523288(&qword_101692C78, &qword_101692C70);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100B20C1C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  v9[3] = &protocol witness table for MainActor;
  v9[4] = v7;
  v9[5] = a1;
  swift_release();
  sub_1005912D0((uint64_t)v5, (uint64_t)&unk_101692C58, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_100B20DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  sub_1005057FC(&qword_10168B130);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[14] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B20E84, v7, v6);
}

uint64_t sub_100B20E84()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[11];
    swift_retain();
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v5 = *(void *)(v0[8] + 16);
    swift_bridgeObjectRelease();
    v0[9] = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    CurrentValueSubject.value.setter();
    swift_release();
    uint64_t v6 = v2 + *(void *)(*(void *)v2 + 280);
    swift_beginAccess();
    sub_100522E9C(v6, v3, &qword_10168B130);
    uint64_t v7 = sub_1005057FC(&qword_101692B50);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) != 1)
    {
      uint64_t v9 = v0[12];
      sub_100522E9C(v0[13], v9, &qword_10168B130);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v8 + 88))(v9, v7) != enum case for GroupSession.State.joined<A>(_:))
      {
        uint64_t v11 = v0[12];
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
        goto LABEL_10;
      }
      if (v5 != *(void *)(v0[11] + 16))
      {
        id v10 = [self defaultCenter];
        if (qword_10166FE68 != -1) {
          swift_once();
        }
        [v10 postNotificationName:qword_10171C3C8 object:v2];
      }
    }
    swift_release();
LABEL_10:
    sub_100522F00(v0[13], &qword_10168B130);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100B21150()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B2118C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528D08;
  v3[37] = v2;
  return _swift_task_switch(sub_100B1A244, 0, 0);
}

uint64_t sub_100B2123C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100528D08;
  return sub_100B1ED48(a1, v4, v5, v6);
}

uint64_t sub_100B212F0(uint64_t a1)
{
  return sub_100B176E0(a1, v1);
}

uint64_t sub_100B212F8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B21338(uint64_t *a1)
{
  return sub_100B17B48(*a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100B21344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a1;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v10;
  *id v10 = v6;
  v10[1] = sub_100B24EF4;
  return sub_100B23C54(a4, a5, a6);
}

uint64_t sub_100B213F4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100B21444(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  id v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101692BA8
                                                                                     + dword_101692BA8);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_100B21520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v8;
  void *v8 = v5;
  v8[1] = sub_100B215C0;
  return sub_100B224AC(a4, a5);
}

uint64_t sub_100B215C0(char a1)
{
  uint64_t v3 = *(unsigned char **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1 & 1;
  uint64_t v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_100B216D4(uint64_t a1, uint64_t a2)
{
  v2[24] = a1;
  v2[25] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[26] = v3;
  v2[27] = *(void *)(v3 - 8);
  v2[28] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v2[31] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CRLBoardIdentifier(0);
  v2[32] = v4;
  v2[33] = *(void *)(v4 - 8);
  v2[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[35] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[36] = v6;
  v2[37] = v5;
  return _swift_task_switch(sub_100B21890, v6, v5);
}

uint64_t sub_100B21890()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[24];
  swift_beginAccess();
  id v3 = (id)static OS_os_log.realTimeSync;
  uint64_t v4 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v3, (uint64_t)&_mh_execute_header, v4, (uint64_t)"willLeaveGroupSession called.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v5 = *(void (**)(void))(*(void *)v2 + 192);
  unint64_t v6 = (*(void *)v2 + 192) & 0xFFFFFFFFFFFFLL | 0xEE51000000000000;
  v0[38] = v5;
  v0[39] = v6;
  v5();
  sub_10050F848(v0 + 11, v0[14]);
  sub_100B18D74(v1);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[40] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100B21A2C;
  uint64_t v9 = v0[30];
  uint64_t v8 = v0[31];
  return sub_100F83AB8(v8, v9);
}

uint64_t sub_100B21A2C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[30];
    swift_errorRelease();
    sub_100B23FA8(v3, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v4 = v2[36];
    uint64_t v5 = v2[37];
    unint64_t v6 = sub_100B22068;
  }
  else
  {
    sub_100B23FA8(v2[30], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v2 + 11));
    uint64_t v4 = v2[36];
    uint64_t v5 = v2[37];
    unint64_t v6 = sub_100B21B94;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B21B94()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[25];
  (*(void (**)(uint64_t, void, uint64_t, void))(v0[33] + 56))(v2, 0, 1, v0[32]);
  sub_100B24B54(v2, v1, type metadata accessor for CRLBoardIdentifier);
  uint64_t v4 = v3 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_realTimeCollaborationDelegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[41] = Strong;
  uint64_t v6 = *(void *)(v4 + 8);
  v0[42] = v6;
  if (Strong)
  {
    uint64_t ObjectType = swift_getObjectType();
    v0[43] = ObjectType;
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 24) + **(int **)(v6 + 24));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[44] = v8;
    void *v8 = v0;
    v8[1] = sub_100B21D9C;
    uint64_t v9 = v0[24];
    return v12(v9, ObjectType, v6);
  }
  else
  {
    sub_100B23FA8(v0[34], type metadata accessor for CRLBoardIdentifier);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100B21D9C(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 368) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 296);
  uint64_t v4 = *(void *)(v2 + 288);
  return _swift_task_switch(sub_100B21EC4, v4, v3);
}

uint64_t sub_100B21EC4()
{
  if (*(unsigned char *)(v0 + 368) == 1)
  {
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(v0 + 336) + 32)
                                                                    + **(int **)(*(void *)(v0 + 336) + 32));
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100B222CC;
    uint64_t v3 = *(void *)(v0 + 336);
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 272);
    uint64_t v5 = *(void *)(v0 + 192);
    return v8(v5, v4, v2, v3);
  }
  else
  {
    sub_100B23FA8(*(void *)(v0 + 272), type metadata accessor for CRLBoardIdentifier);
    swift_unknownObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100B22068()
{
  int v16 = (void (*)(void))v0[38];
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[28];
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[27];
  uint64_t v17 = v0[26];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 11));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  swift_release();
  sub_100522F00(v3, &qword_101672C30);
  uint64_t v7 = (void *)static OS_os_log.realTimeSync;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v9 = v7;
  v16();
  sub_10050F848(v0 + 16, v0[19]);
  sub_100B18D74(v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v17);
  sub_100B23FA8(v5, type metadata accessor for CRLGloballyScopedBoardIdentifier);
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v17);
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v12;
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 16));
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v9, (uint64_t)&_mh_execute_header, v13, (uint64_t)"Failed to derive the locally scoped board identifier from the group session. Board %{public}@", 93, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100B222CC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 288);
  return _swift_task_switch(sub_100B223EC, v3, v2);
}

uint64_t sub_100B223EC()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_release();
  swift_unknownObjectRelease();
  sub_100B23FA8(v1, type metadata accessor for CRLBoardIdentifier);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B224AC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  type metadata accessor for MainActor();
  v2[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[8] = v4;
  v2[9] = v3;
  return _swift_task_switch(sub_100B22544, v4, v3);
}

uint64_t sub_100B22544()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[10] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100B22650;
    uint64_t v3 = v0[6];
    return sub_100B170D0(v3, 0);
  }
  else
  {
    swift_release();
    BOOL v5 = v0[10] == 0;
    uint64_t v6 = (uint64_t (*)(BOOL))v0[1];
    return v6(v5);
  }
}

uint64_t sub_100B22650()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100B22794, v3, v2);
}

uint64_t sub_100B22794()
{
  swift_release();
  BOOL v1 = *(void *)(v0 + 80) == 0;
  uint64_t v2 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100B22800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[42] = a2;
  v3[43] = a3;
  v3[41] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[44] = v4;
  v3[45] = *(void *)(v4 - 8);
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLBoard.RealTimeSessionInfo(0);
  v3[48] = v5;
  v3[49] = *(void *)(v5 - 8);
  v3[50] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10169A1A0);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[53] = v6;
  v3[54] = *(void *)(v6 - 8);
  v3[55] = swift_task_alloc();
  type metadata accessor for CRLGloballyScopedBoardIdentifier(0);
  v3[56] = swift_task_alloc();
  sub_1005057FC(&qword_101672C30);
  v3[57] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for CRLBoardIdentifier(0);
  v3[58] = v7;
  v3[59] = *(void *)(v7 - 8);
  v3[60] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[61] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[62] = v9;
  v3[63] = v8;
  return _swift_task_switch(sub_100B22AB8, v9, v8);
}

uint64_t sub_100B22AB8()
{
  uint64_t v1 = *(void *)(v0 + 448);
  (*(void (**)(void))(**(void **)(v0 + 336) + 192))();
  sub_10050F848((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_100B18D74(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100B22BB4;
  uint64_t v4 = *(void *)(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 456);
  return sub_100F83AB8(v3, v4);
}

uint64_t sub_100B22BB4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[56];
    swift_errorRelease();
    sub_100B23FA8(v3, type metadata accessor for CRLGloballyScopedBoardIdentifier);
    uint64_t v4 = v2[62];
    uint64_t v5 = v2[63];
    uint64_t v6 = sub_100B23B3C;
  }
  else
  {
    sub_100B23FA8(v2[56], type metadata accessor for CRLGloballyScopedBoardIdentifier);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v2 + 2));
    uint64_t v4 = v2[62];
    uint64_t v5 = v2[63];
    uint64_t v6 = sub_100B22D1C;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B22D1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[60];
  uint64_t v3 = v0[59];
  uint64_t v5 = v1[57];
  uint64_t v4 = v1[58];
  uint64_t v6 = v1[43];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  sub_100B24B54(v5, v2, type metadata accessor for CRLBoardIdentifier);
  uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardInfos);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (!*(void *)(v8 + 16) || (unint64_t v9 = sub_1009563EC(v1[60]), (v10 & 1) == 0))
  {
    uint64_t v25 = v1[60];
    swift_endAccess();
    goto LABEL_7;
  }
  uint64_t v12 = v1[54];
  uint64_t v11 = v1[55];
  uint64_t v13 = v1[53];
  uint64_t v14 = v1[42];
  unint64_t v15 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v14 + OBJC_IVAR____TtC8Freeform20CRLBoardGroupSession_localParticipantUUID, v13);
  int v16 = &OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard;
  uint64_t v17 = *(void **)(*(void *)(*(void *)(*(void *)(v15 + 16)
                                         + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
                             + OBJC_IVAR____TtC8Freeform8CRLBoard_shareState)
                 + 16);
  uint64_t v18 = &OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
  float v153 = v1;
  if (v17)
  {
    uint64_t v19 = v1[52];
    uint64_t v20 = v1[48];
    uint64_t v21 = v1[49];
    swift_retain();
    id v22 = [v17 participants];
    sub_10050BF48(0, (unint64_t *)&qword_101693410);
    uint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = *(void *)(*(void *)(v15 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard)
        + OBJC_IVAR____TtC8Freeform8CRLBoard_realTimeSessionInfo;
    swift_beginAccess();
    sub_100522E9C(v24, v19, (uint64_t *)&unk_10169A1A0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v25 = v1[60];
      uint64_t v27 = v1[54];
      uint64_t v26 = v1[55];
      uint64_t v29 = v1[52];
      uint64_t v28 = v1[53];
      swift_release();
      swift_bridgeObjectRelease();
      sub_100522F00(v29, (uint64_t *)&unk_10169A1A0);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_7:
      sub_100B23FA8(v25, type metadata accessor for CRLBoardIdentifier);
      goto LABEL_8;
    }
    unint64_t v133 = v15;
    uint64_t v43 = v1[55];
    uint64_t v44 = v1[52];
    uint64_t v45 = v1[50];
    uint64_t v46 = v1[48];
    unint64_t v47 = v1[41];
    sub_100B24AE8(v44, v45, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    sub_100522F00(v44, (uint64_t *)&unk_10169A1A0);
    uint64_t v48 = *(char **)(v45 + *(int *)(v46 + 24));
    swift_retain();
    sub_100B23FA8(v45, type metadata accessor for CRLBoard.RealTimeSessionInfo);
    uint64_t v49 = v43;
    unint64_t v50 = v48;
    sub_10070771C(v47, v23, v49);
    uint64_t v52 = v51;
    swift_bridgeObjectRelease();
    swift_release();
    if ((unint64_t)v52 >> 62) {
      goto LABEL_84;
    }
    uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v54 = v15;
    if (v53) {
      goto LABEL_16;
    }
LABEL_88:
    uint64_t v25 = v1[60];
    uint64_t v40 = v1[54];
    uint64_t v39 = v1[55];
    uint64_t v41 = v1[53];
    swift_release();
    swift_bridgeObjectRelease();
LABEL_89:
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v41);
    goto LABEL_7;
  }
  uint64_t v32 = qword_10166FBA0;
  swift_retain();
  if (v32 != -1) {
LABEL_82:
  }
    swift_once();
  uint64_t v33 = v1[51];
  uint64_t v34 = v1[48];
  uint64_t v35 = v1[49];
  swift_beginAccess();
  id v36 = (id)static OS_os_log.realTimeSync;
  uint64_t v37 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v37, (uint64_t)"Group Session activeParticipants updated, but we were unable to retrieve the ckShare's participants array, this could mean the owner ended the collaboration.", 157, 2, (uint64_t)_swiftEmptyArrayStorage);

  uint64_t v38 = *(void *)(*(void *)(v15 + 16) + *v16) + *v18;
  swift_beginAccess();
  sub_100522E9C(v38, v33, (uint64_t *)&unk_10169A1A0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    uint64_t v25 = v1[60];
    uint64_t v40 = v1[54];
    uint64_t v39 = v1[55];
    uint64_t v41 = v1[53];
    uint64_t v42 = v1[51];
    swift_release();
    sub_100522F00(v42, (uint64_t *)&unk_10169A1A0);
    goto LABEL_89;
  }
  uint64_t v86 = v1[50];
  uint64_t v85 = v1[51];
  uint64_t v87 = v1[48];
  sub_100B24AE8(v85, v86, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  sub_100522F00(v85, (uint64_t *)&unk_10169A1A0);
  uint64_t v88 = *(void *)(v86 + *(int *)(v87 + 24));
  swift_retain();
  sub_100B23FA8(v86, type metadata accessor for CRLBoard.RealTimeSessionInfo);
  swift_beginAccess();
  unint64_t v47 = *(void *)(v88 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  unint64_t v133 = v15;
  unint64_t v50 = *(char **)(*(void *)(v15 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  if (v47 >> 62) {
    goto LABEL_91;
  }
  uint64_t v89 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v90 = v50;
  uint64_t v140 = v89;
  if (!v89)
  {
LABEL_92:
    swift_release();
    uint64_t v129 = v1[60];
    uint64_t v131 = v1[54];
    uint64_t v130 = v1[55];
    uint64_t v132 = v1[53];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v130, v132);
    sub_100B23FA8(v129, type metadata accessor for CRLBoardIdentifier);

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v91 = v1[54];
    uint64_t v92 = v1[45];
    uint64_t v93 = (uint64_t *)&v50[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
    long long v138 = (uint64_t **)(v1 + 40);
    unint64_t v139 = v47 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v52 = 0;
    uint64_t v134 = v91;
    unint64_t v135 = v47 + 32;
    uint64_t v144 = (void (**)(uint64_t, uint64_t))(v92 + 8);
    v146 = (void (**)(uint64_t, unint64_t, uint64_t))(v92 + 16);
    int v16 = v93;
    long long v136 = v50;
    long long v137 = v93;
    while (1)
    {
      if (v139) {
        uint64_t v98 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v98 = (uint64_t *)*(id *)(v135 + 8 * v52);
      }
      uint64_t v18 = v98;
      if (__OFADD__(v52++, 1))
      {
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      static Published.subscript.getter();
      swift_release();
      swift_release();
      int v16 = *v138;
      if ((unint64_t)*v138 >> 62) {
        break;
      }
      uint64_t v100 = *(void *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v100) {
        goto LABEL_47;
      }
LABEL_77:
      swift_bridgeObjectRelease_n();
LABEL_40:

      if (v52 == v140) {
        goto LABEL_92;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
    if (!v100) {
      goto LABEL_77;
    }
LABEL_47:
    unint64_t v152 = (unint64_t)v16 & 0xC000000000000001;
    if (((unint64_t)v16 & 0xC000000000000001) != 0)
    {
      id v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_80;
      }
      id v101 = (id)v16[4];
    }
    unint64_t v47 = (unint64_t)v101;
    unint64_t v151 = v100 - 1;
    uint64_t v141 = v18;
    uint64_t v142 = v52;
    if (v100 == 1) {
      goto LABEL_51;
    }
    if (v100 < 2) {
      goto LABEL_81;
    }
    if (v152 || (unint64_t v111 = *(void *)(((unint64_t)v16 & 0xFFFFFFFFFFFFFF8) + 0x10), v111 >= 2) && v151 < v111)
    {
      uint64_t v112 = 0;
      float v149 = v16;
      do
      {
        if (v152) {
          uint64_t v113 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v113 = (char *)(id)v16[v112 + 5];
        }
        int v114 = v113;
        uint64_t v116 = v153[46];
        uint64_t v115 = v153[47];
        uint64_t v117 = v153[44];
        unint64_t v118 = v47 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime;
        swift_beginAccess();
        long long v119 = *v146;
        (*v146)(v115, v118, v117);
        long long v120 = &v114[OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_lastCursorUpdateTime];
        swift_beginAccess();
        v119(v116, (unint64_t)v120, v117);
        char v121 = static Date.< infix(_:_:)();
        int v122 = *v144;
        (*v144)(v116, v117);
        v122(v115, v117);
        if (v121) {
          int v123 = (void *)v47;
        }
        else {
          int v123 = v114;
        }
        if (v121) {
          unint64_t v47 = (unint64_t)v114;
        }

        ++v112;
        int v16 = v149;
      }
      while (v151 != v112);
LABEL_51:
      swift_bridgeObjectRelease_n();
      uint64_t v102 = v47 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
      int v16 = v137;
      uint64_t v103 = *v137;
      if (*(void *)(*v137 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v104 = sub_100955FC8(v102);
        if (v105)
        {
          uint64_t v106 = *(void *)(v103 + 56) + 24 * v104;
          uint64_t v107 = *(void **)(v106 + 8);
          uint64_t v108 = *(void **)(v106 + 16);
          id v109 = *(id *)v106;
          id v110 = v107;
          uint64_t v18 = v108;
          swift_bridgeObjectRelease();
          if (v109 == (id)1)
          {
            uint64_t v18 = 0;
          }
          else
          {
          }
          int v16 = v137;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = 0;
        }
      }
      else
      {
        uint64_t v18 = 0;
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_100955FC8(v102);
      char v125 = v124;
      swift_bridgeObjectRelease();
      uint64_t v95 = 0;
      uint64_t v96 = 0;
      uint64_t v97 = 0;
      if (v125)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v127 = *v16;
        uint64_t v155 = *v16;
        *int v16 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10097D598();
          uint64_t v127 = v155;
        }
        (*(void (**)(unint64_t, void))(v134 + 8))(*(void *)(v127 + 48) + *(void *)(v134 + 72) * v15, v153[53]);
        uint64_t v94 = *(void *)(v127 + 56) + 24 * v15;
        uint64_t v95 = *(void **)v94;
        uint64_t v96 = *(void **)(v94 + 8);
        uint64_t v97 = *(void **)(v94 + 16);
        sub_100588C38(v15, v127);
        *int v16 = v127;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      sub_10057ADF4(v95, v96, v97);
      unint64_t v50 = v136;
      sub_100BBDB94(v18, 0, v47);

      uint64_t v1 = v153;
      uint64_t v52 = v142;
      goto LABEL_40;
    }
    __break(1u);
LABEL_84:
    if (v52 < 0) {
      unint64_t v50 = (char *)v52;
    }
    else {
      unint64_t v50 = (char *)(v52 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    unint64_t v54 = v133;
    if (!v53) {
      goto LABEL_88;
    }
LABEL_16:
    uint64_t v143 = v52;
    if (v53 < 1)
    {
      __break(1u);
LABEL_91:
      swift_bridgeObjectRetain();
      uint64_t v128 = v50;
      uint64_t v140 = _CocoaArrayWrapper.endIndex.getter();
      if (!v140) {
        goto LABEL_92;
      }
      continue;
    }
    break;
  }
  uint64_t v55 = *(char **)(*(void *)(v54 + 16) + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_collaboratorCursorCoordinator);
  uint64_t v56 = v1[54];
  uint64_t v57 = (uint64_t *)&v55[OBJC_IVAR____TtC8Freeform32CRLCollaboratorCursorCoordinator__collaboratorsToCursorsMap];
  swift_bridgeObjectRetain();
  int v58 = v55;
  uint64_t v59 = v143;
  char v150 = v58;
  swift_beginAccess();
  uint64_t v60 = 0;
  uint64_t v145 = v56;
  float v147 = (void (**)(uint64_t, uint64_t))(v56 + 8);
  uint64_t v148 = v53;
  do
  {
    if ((v143 & 0xC000000000000001) != 0) {
      id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v65 = *(id *)(v59 + 8 * v60 + 32);
    }
    uint64_t v66 = v65;
    uint64_t v67 = (uint64_t)v65 + OBJC_IVAR____TtC8Freeform23CRLCollaboratorPresence_presenceUUID;
    uint64_t v68 = *v57;
    if (*(void *)(*v57 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v69 = sub_100955FC8(v67);
      if (v70)
      {
        uint64_t v71 = *(void *)(v68 + 56) + 24 * v69;
        uint64_t v72 = *(void **)(v71 + 8);
        uint64_t v73 = *(void **)(v71 + 16);
        id v74 = *(id *)v71;
        id v75 = v72;
        id v76 = v73;
        swift_bridgeObjectRelease();
        if (v74 == (id)1)
        {
          id v76 = 0;
        }
        else
        {
        }
        uint64_t v59 = v143;
      }
      else
      {
        swift_bridgeObjectRelease();
        id v76 = 0;
      }
    }
    else
    {
      id v76 = 0;
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    unint64_t v77 = sub_100955FC8(v67);
    char v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    if (v79)
    {
      char v80 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v81 = *v57;
      uint64_t v154 = *v57;
      *uint64_t v57 = 0x8000000000000000;
      if ((v80 & 1) == 0)
      {
        sub_10097D598();
        uint64_t v81 = v154;
      }
      (*(void (**)(unint64_t, void))(v145 + 8))(*(void *)(v81 + 48) + *(void *)(v145 + 72) * v77, v153[53]);
      uint64_t v61 = *(void *)(v81 + 56) + 24 * v77;
      uint64_t v62 = *(void **)v61;
      uint64_t v63 = *(void **)(v61 + 8);
      uint64_t v64 = *(void **)(v61 + 16);
      sub_100588C38(v77, v81);
      *uint64_t v57 = v81;
      swift_bridgeObjectRelease();
    }
    ++v60;
    swift_endAccess();
    sub_10057ADF4(v62, v63, v64);
    sub_100BBDB94(v76, 0, (uint64_t)v66);
  }
  while (v148 != v60);
  uint64_t v1 = v153;
  uint64_t v82 = v153[60];
  uint64_t v83 = v153[55];
  uint64_t v84 = v153[53];
  swift_bridgeObjectRelease();
  swift_release();
  (*v147)(v83, v84);
  sub_100B23FA8(v82, type metadata accessor for CRLBoardIdentifier);

  swift_bridgeObjectRelease();
LABEL_8:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v30 = (uint64_t (*)(void))v1[1];
  return v30();
}

uint64_t sub_100B23B3C()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[59];
  uint64_t v3 = v0[57];
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 1, 1, v1);
  sub_100522F00(v3, &qword_101672C30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100B23C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[6] = v5;
  v3[7] = v4;
  return _swift_task_switch(sub_100B23CF0, v5, v4);
}

uint64_t sub_100B23CF0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[8] = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    unint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_101692BC0 + dword_101692BC0);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100B23DF8;
    uint64_t v5 = v0[3];
    uint64_t v4 = v0[4];
    return v9(v5, v4, v2);
  }
  else
  {
    swift_release();
    BOOL v7 = v0[8] == 0;
    uint64_t v8 = (uint64_t (*)(BOOL))v0[1];
    return v8(v7);
  }
}

uint64_t sub_100B23DF8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100B23F3C, v3, v2);
}

uint64_t sub_100B23F3C()
{
  swift_release();
  BOOL v1 = *(void *)(v0 + 64) == 0;
  uint64_t v2 = *(uint64_t (**)(BOOL))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100B23FA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B24010()
{
  uint64_t v1 = *(void *)(sub_1005057FC(&qword_101692BC8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100B240FC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_101692BC8) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *unint64_t v9 = v2;
  v9[1] = sub_100528488;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101692BD0 + dword_101692BD0);
  return v10(a1, v5, v6, v7, v8);
}

unint64_t sub_100B24208()
{
  unint64_t result = qword_101692C08;
  if (!qword_101692C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692C08);
  }
  return result;
}

uint64_t sub_100B2425C()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100B24294()
{
  unint64_t result = qword_101691FF0;
  if (!qword_101691FF0)
  {
    sub_10050BF48(255, (unint64_t *)&qword_1016725C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101691FF0);
  }
  return result;
}

uint64_t sub_100B242FC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100B243E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(v1 + 16);
  int v7 = *(unsigned __int8 *)(v1 + 24);
  int v8 = *(unsigned __int8 *)(v1 + v5);
  uint64_t v9 = *(void *)((v5 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);

  return sub_100B1EFBC(a1, v6, v7, v1 + v4, v8, v9);
}

uint64_t sub_100B2448C(uint64_t *a1)
{
  return sub_100B20C1C(*a1);
}

uint64_t sub_100B24498()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100B244E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  int v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100528D08;
  return sub_100B20DAC(a1, v4, v5, v7, v6);
}

uint64_t sub_100B245A0()
{
  uint64_t v1 = sub_1005057FC(&qword_101692B50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + v4 + 1) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((((v9 + *(void *)(v7 + 64)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_100B24730(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1005057FC(&qword_101692B50) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = v5 + *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = v8 + *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  char v12 = *(unsigned char *)(v1 + v6);
  char v13 = *(unsigned char *)(v1 + v9);
  uint64_t v14 = v1 + v8;
  uint64_t v15 = *(void *)((v9 & 0xFFFFFFFFFFFFFFF8) + v1 + 8);
  int v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *int v16 = v2;
  v16[1] = sub_100528D08;
  return sub_100B1F348(a1, v10, v11, v1 + v5, v12, v14, v13, v15);
}

uint64_t sub_100B248F4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528D08;
  return sub_100E3221C();
}

uint64_t sub_100B249A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654D6F54654D7369 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100B24AE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B24B54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLOpportunisticGroupSessionManagerError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B24C58);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLOpportunisticGroupSessionManagerError()
{
  return &type metadata for CRLOpportunisticGroupSessionManagerError;
}

unsigned char *storeEnumTagSinglePayload for CRLOpportunisticGroupActivity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B24D5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLOpportunisticGroupActivity.CodingKeys()
{
  return &type metadata for CRLOpportunisticGroupActivity.CodingKeys;
}

unint64_t sub_100B24D98()
{
  unint64_t result = qword_101692CC8;
  if (!qword_101692CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692CC8);
  }
  return result;
}

unint64_t sub_100B24DF0()
{
  unint64_t result = qword_101692CD0;
  if (!qword_101692CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692CD0);
  }
  return result;
}

unint64_t sub_100B24E48()
{
  unint64_t result = qword_101692CD8;
  if (!qword_101692CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692CD8);
  }
  return result;
}

unint64_t sub_100B24EA0()
{
  unint64_t result = qword_101692CE0;
  if (!qword_101692CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692CE0);
  }
  return result;
}

id sub_100B24F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  unsigned int v6 = &v5[OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  *(void *)&v5[OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_maskInfo] = a2;
  v11.receiver = v5;
  v11.super_class = v2;
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v9;
}

id sub_100B25300(char *a1, void *a2, void *a3)
{
  unsigned int v4 = v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  char v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  uint64_t v14 = swift_retain();
  v13(v14);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  id v16 = [objc_allocWithZone((Class)CRLMaskInfo) initWithImageItem:a1 geometry:a2 pathSource:a3];
  id v17 = [v4 initWithId:isa maskInfo:v16];

  return v17;
}

void sub_100B254FC(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_7;
  }
  type metadata accessor for CRLImageItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_7:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMask.swift", 89, 2, 31, (uint64_t)"Unable to retrieve image item", 29, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve image item");
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetMask.swift", 89, 2, 31);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v16, v17);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = v10;
  id v12 = v9;
  sub_10103405C(v11, (uint64_t)&off_101518040);

  if (v4)
  {
  }
  else
  {
    char v13 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_maskInfo);
    id v14 = v13;
    sub_100A36B4C(v13);

    id v15 = v12;
    sub_101023724(v11, (uint64_t)&off_101518040, a3);
  }
}

void sub_100B25738()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform17CRLCommandSetMask_maskInfo);
}

id sub_100B257B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetMask();
  return [super dealloc];
}

uint64_t sub_100B2586C()
{
  return type metadata accessor for CRLCommandSetMask();
}

uint64_t type metadata accessor for CRLCommandSetMask()
{
  uint64_t result = qword_101692D10;
  if (!qword_101692D10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B258C0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_100B25958(void *a1)
{
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState];
  uint64_t v4 = type metadata accessor for CRLFollowViewportState();
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(&v1[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState], 1, 1, v4);
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts;
  uint64_t v7 = self;
  uint64_t v8 = v1;
  *(void *)&v1[v6] = [v7 weakObjectsHashTable];
  *(void *)&v8[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer] = _swiftEmptyArrayStorage;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers] = _swiftEmptyDictionarySingleton;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer] = 0;
  *(void *)&v8[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer] = 0;
  swift_unknownObjectWeakAssign();

  v16.receiver = v8;
  v16.super_class = (Class)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
  [super init];
  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 defaultCenter];
  [v12 addObserver:v11 selector:"accessibilityStatusDidChange" name:UIAccessibilityVoiceOverStatusDidChangeNotification object:0];

  id v13 = [v10 defaultCenter];
  id v14 = v11;
  [v13 addObserver:v14 selector:"accessibilityStatusDidChange" name:UIAccessibilitySwitchControlStatusDidChangeNotification object:0];

  return v14;
}

id sub_100B25BD8()
{
  unint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0 name:UIAccessibilityVoiceOverStatusDidChangeNotification object:0];

  id v3 = [v1 defaultCenter];
  [v3 removeObserver:v0 name:UIAccessibilitySwitchControlStatusDidChangeNotification object:0];

  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
  [super dealloc];
}

void sub_100B25E88(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    type metadata accessor for CRLCollaborationParticipant(0);
    id v7 = Strong;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {

      goto LABEL_7;
    }
  }
  else
  {
    id v9 = Strong;
  }
  sub_100B26A94();
  uint64_t v10 = (void *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer);
  swift_beginAccess();
  *uint64_t v10 = _swiftEmptyArrayStorage;

  swift_bridgeObjectRelease();
LABEL_7:
  if ([self isVoiceOverOrSwitchControlEnabled]) {
    sub_100B265C0();
  }
  else {
    sub_100B26A94();
  }
}

uint64_t sub_100B25FB8(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  __chkstk_darwin(v8, v9);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  objc_super v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v19 = __chkstk_darwin(v17, v18).n128_u64[0];
  uint64_t v21 = (char *)&v32 - v20;
  id v22 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts);
  uint64_t result = [v22 containsObject:a1, v19];
  if ((result & 1) == 0)
  {
    sub_100B264A8(a1);
    uint64_t result = (uint64_t)[v22 addObject:a1];
    if (a2)
    {
      sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
      uint64_t v33 = static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
      uint64_t v24 = v12;
      v34(v16, v12);
      uint64_t v25 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = v25;
      *(void *)(v26 + 24) = a1;
      aBlock[4] = sub_100B32A6C;
      aBlock[5] = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_100679958;
      aBlock[3] = &unk_101524C18;
      uint64_t v27 = _Block_copy(aBlock);
      id v28 = a1;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100B32520((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1005057FC((uint64_t *)&unk_1016725D0);
      sub_10056B494();
      uint64_t v29 = v35;
      uint64_t v30 = v39;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v31 = (void *)v33;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v29, v30);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
      return ((uint64_t (*)(char *, uint64_t))v34)(v21, v24);
    }
  }
  return result;
}

void sub_100B263DC(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    CRLAccessibilityPostLayoutChangedNotification(a2);
  }
}

void sub_100B264A8(void *a1)
{
  if ([self isVoiceOverOrSwitchControlEnabled])
  {
    sub_100B266D8(a1);
  }
  else
  {
    [a1 setAccessibilityHint:0];
    [a1 setAccessibilityCustomActions:0];
    [a1 setAccessibilityRespondsToUserInteraction:0];
    id v2 = [a1 text];
    [a1 setAccessibilityLabel:v2];

    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [a1 setAccessibilityUserInputLabels:isa];
  }
}

uint64_t sub_100B265C0()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts) allObjects];
  sub_10050BF48(0, &qword_10167AF60);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v7 = v6;
      sub_100B266D8(v6);
    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_100B266D8(void *a1)
{
  id v2 = [self mainBundle];
  NSString v3 = String._bridgeToObjectiveC()();
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 localizedStringForKey:v3 value:v4 table:0];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  sub_100B28A10();
  if (v9)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  [a1 setAccessibilityHint:v10];

  [a1 setAccessibilityRespondsToUserInteraction:1];
  sub_1005057FC(&qword_101692EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v12 = [a1 text];
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v8;
  swift_bridgeObjectRetain();
  sub_1009D7100(inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101674580);
  swift_arrayDestroy();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a1 setAccessibilityLabel:v17];

  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_10117D8C0;
  *(void *)(v18 + 32) = v6;
  *(void *)(v18 + 40) = v8;
  id v19 = [a1 text];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
  }
  *(void *)(v18 + 48) = v21;
  *(void *)(v18 + 56) = v23;
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v26 = *((void *)v24 + 2);
  unint64_t v25 = *((void *)v24 + 3);
  unint64_t v27 = v26 + 1;
  if (v26 >= v25 >> 1) {
    uint64_t v24 = sub_100F61B70((double *)(v25 > 1), v26 + 1, 1, v24);
  }
  *((void *)v24 + 2) = v27;
  id v28 = &v24[2 * v26];
  *((void *)v28 + 4) = v6;
  *((void *)v28 + 5) = v8;
  if (v23)
  {
    unint64_t v29 = *((void *)v24 + 3);
    swift_bridgeObjectRetain();
    if (v27 >= v29 >> 1) {
      uint64_t v24 = sub_100F61B70((double *)(v29 > 1), v26 + 2, 1, v24);
    }
    *((void *)v24 + 2) = v26 + 2;
    uint64_t v30 = &v24[2 * v27];
    *((void *)v30 + 4) = v21;
    *((void *)v30 + 5) = v23;
  }
  swift_release();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setAccessibilityUserInputLabels:isa];

  sub_100B2B600();
  sub_100B27438(a1);
  sub_10050BF48(0, &qword_10167AE48);
  Class v32 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setAccessibilityCustomActions:v32];
}

uint64_t sub_100B26A94()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_hosts) allObjects];
  sub_10050BF48(0, &qword_10167AF60);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      uint64_t v8 = v7;
      [v7 setAccessibilityHint:0];
      [v8 setAccessibilityCustomActions:0];
      [v8 setAccessibilityRespondsToUserInteraction:0];
      NSString v9 = [v8 text];
      if (v9)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      ++v5;
      [v8 setAccessibilityLabel:v9];

      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v8 setAccessibilityUserInputLabels:isa];
    }
    while (v3 != v5);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_100B26C8C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v9, v10);
  id v12 = (void **)&v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer;
  swift_beginAccess();
  if (*(void *)(*(void *)v13 + 16))
  {
    sub_100B315A8(*(void *)v13+ *(int *)(v4 + 20)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v12, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_100B314E0((uint64_t)v12, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    }
    else
    {
      uint64_t v14 = *v12;
      uint64_t v15 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v12 + *(int *)(v15 + 48), &qword_101681D50);
      sub_10050BF48(0, (unint64_t *)&qword_101678790);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16) {
        return;
      }
    }
  }
  NSString v17 = &v8[*(int *)(v4 + 20)];
  uint64_t v18 = (uint64_t)v17 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
  *NSString v17 = a1;
  uint64_t v19 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess();
  sub_100522E9C(v19, v18, &qword_101681D50);
  swift_storeEnumTagMultiPayload();
  id v20 = a1;
  static Date.now.getter();
  sub_100B29094((uint64_t)v8);
  sub_100B2A4C4((uint64_t)v8);
  sub_100B314E0((uint64_t)v8, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
}

void sub_100B26F84(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v9, v10);
  id v12 = (void **)&v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer;
  swift_beginAccess();
  if (!*(void *)(*(void *)v13 + 16)) {
    goto LABEL_6;
  }
  sub_100B315A8(*(void *)v13+ *(int *)(v4 + 20)+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v12, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100B314E0((uint64_t)v12, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    goto LABEL_6;
  }
  uint64_t v14 = *v12;
  uint64_t v15 = sub_1005057FC(&qword_101692DA0);
  sub_100522F00((uint64_t)v12 + *(int *)(v15 + 48), &qword_101681D50);
  sub_10050BF48(0, (unint64_t *)&qword_101678790);
  char v16 = static NSObject.== infix(_:_:)();

  if ((v16 & 1) == 0)
  {
LABEL_6:
    NSString v17 = &v8[*(int *)(v4 + 20)];
    uint64_t v18 = (uint64_t)v17 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    *NSString v17 = a1;
    uint64_t v19 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
    swift_beginAccess();
    sub_100522E9C(v19, v18, &qword_101681D50);
    swift_storeEnumTagMultiPayload();
    id v20 = a1;
    static Date.now.getter();
    sub_100B29094((uint64_t)v8);
    sub_100B2A4C4((uint64_t)v8);
    sub_100B314E0((uint64_t)v8, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  }
}

void sub_100B27364()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_101692D20 = v4;
  *(void *)algn_101692D28 = v6;
}

double *sub_100B27438(void *a1)
{
  id v37 = [a1 window];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v34 = v1;
    uint64_t v36 = (void *)Strong;
    id v4 = [*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers) allObjects];
    sub_10050BF48(0, &qword_101675990);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v35 = a1;
    if (v5 >> 62) {
      goto LABEL_23;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v7 = v37;
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v8 = v5 & 0xC000000000000001;
      uint64_t v9 = 4;
      while (1)
      {
        id v10 = v8 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v9);
        uint64_t v11 = v10;
        uint64_t v12 = v9 - 3;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        id v13 = [v10 canvasView];
        if (v13
          && (uint64_t v14 = v13, v15 = [v13 window], v14, v15))
        {
          if (v37)
          {
            unint64_t v16 = v8;
            uint64_t v17 = v6;
            sub_10050BF48(0, &qword_101677CC8);
            id v18 = v37;
            id v19 = v15;
            char v20 = static NSObject.== infix(_:_:)();

            if (v20)
            {

              goto LABEL_21;
            }
            id v15 = v11;
            uint64_t v6 = v17;
            unint64_t v8 = v16;
          }
          else
          {
          }
        }
        else
        {
          if (!v37)
          {
            id v18 = v36;
LABEL_21:

            swift_bridgeObjectRelease_n();
            id v22 = [self configurationWithPointSize:30.0];
            NSString v23 = String._bridgeToObjectiveC()();
            id v24 = [self systemImageNamed:v23 withConfiguration:v22];

            swift_beginAccess();
            id v25 = v34;
            id v26 = v35;
            id v27 = v11;
            id v28 = v24;
            uint64_t v29 = swift_bridgeObjectRetain();
            uint64_t v30 = sub_100B31658(v29, (uint64_t)v25, v26, v27, (uint64_t)v24);
            swift_bridgeObjectRelease();

            uint64_t v31 = sub_100E17A90((unint64_t)v30);
            return (double *)v31;
          }
          id v15 = v11;
        }

        ++v9;
        if (v12 == v6) {
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_23:
      id v32 = v37;
      swift_bridgeObjectRetain();
    }
LABEL_24:

    swift_bridgeObjectRelease_n();
    uint64_t v21 = v36;
  }
  else
  {
    uint64_t v21 = v37;
  }

  return _swiftEmptyArrayStorage;
}

BOOL sub_100B277D8(uint64_t a1, void *a2, void *a3, void *a4)
{
  char v78 = a4;
  uint64_t v70 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v69 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v6);
  id v75 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for DispatchQoS();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v8);
  uint64_t v73 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for DispatchTime();
  uint64_t v72 = *(void *)(v77 - 8);
  uint64_t v11 = __chkstk_darwin(v77, v10);
  id v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v14);
  uint64_t v71 = (char *)&v65 - v15;
  uint64_t v16 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v16 - 8, v17);
  id v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLFollowViewportState();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  id v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v25, v26);
  id v28 = (void **)((char *)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v30 = (void *)Strong;
    uint64_t v31 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
    sub_100B315A8((uint64_t)a2 + *(int *)(v31 + 20), (uint64_t)v28, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      BOOL v42 = sub_100B2D230(v78, a2);

      sub_100B314E0((uint64_t)v28, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    }
    else
    {
      uint64_t v66 = a2;
      uint64_t v67 = a3;
      id v32 = *v28;
      uint64_t v33 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v28 + *(int *)(v33 + 48), &qword_101681D50);
      id v68 = v30;
      id v34 = [v32 canvas];
      if (!v34) {
        goto LABEL_9;
      }
      uint64_t v35 = v34;
      id v36 = [v34 allReps];

      sub_10050BF48(0, (unint64_t *)&qword_101678790);
      sub_10055A7A4();
      uint64_t v37 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v36) = sub_1006E61EC(v32, v37);
      swift_bridgeObjectRelease();
      if (v36)
      {
        uint64_t v38 = v32;
        uint64_t v39 = (uint64_t)v68
            + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
        swift_beginAccess();
        sub_100522E9C(v39, (uint64_t)v19, &qword_101681D50);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
        {
          sub_100522F00((uint64_t)v19, &qword_101681D50);
          uint64_t v40 = v70;
          uint64_t v41 = v69;
        }
        else
        {
          sub_100B31FEC((uint64_t)v19, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
          unint64_t v47 = v78;
          id v48 = [v78 canvas];
          id v49 = [v48 allReps];

          uint64_t v50 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
          __chkstk_darwin(v51, v52);
          *(&v65 - 2) = (uint64_t)v24;
          Swift::Int v53 = sub_100529E74((uint64_t (*)(id *))sub_100B32ADC, (uint64_t)(&v65 - 4), v50);
          LOBYTE(v49) = sub_1006E61EC(v38, v53);
          swift_release();
          uint64_t v54 = v70;
          uint64_t v41 = v69;
          if ((v49 & 1) == 0) {
            sub_100B2D230(v47, v66);
          }
          sub_100B314E0((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
          uint64_t v40 = v54;
        }
        sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
        uint64_t v70 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        uint64_t v55 = v71;
        + infix(_:_:)();
        char v78 = *(void **)(v72 + 8);
        ((void (*)(char *, uint64_t))v78)(v13, v77);
        uint64_t v56 = swift_allocObject();
        uint64_t v57 = v68;
        swift_unknownObjectWeakInit();
        int v58 = (void *)swift_allocObject();
        v58[2] = v56;
        v58[3] = v38;
        v58[4] = v57;
        uint64_t v81 = sub_100B32A20;
        uint64_t v82 = v58;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = *(void *)"";
        aBlock[2] = sub_100679958;
        char v80 = &unk_101524BC8;
        uint64_t v59 = _Block_copy(aBlock);
        id v60 = v57;
        swift_release();
        uint64_t v61 = v73;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100B32520((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1005057FC((uint64_t *)&unk_1016725D0);
        sub_10056B494();
        uint64_t v62 = v75;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v63 = (void *)v70;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v59);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v62, v40);
        (*(void (**)(char *, uint64_t))(v74 + 8))(v61, v76);
        ((void (*)(char *, uint64_t))v78)(v55, v77);
        return 1;
      }
      else
      {
LABEL_9:
        uint64_t v43 = v68;
        sub_100B2B600();
        uint64_t v44 = v67;
        sub_100B27438(v67);
        sub_10050BF48(0, &qword_10167AE48);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v44 setAccessibilityCustomActions:isa];

        char v80 = (void *)type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
        aBlock[0] = v43;
        id v46 = v43;
        sub_100B32858(v32, (uint64_t)aBlock);

        sub_100522F00((uint64_t)aBlock, &qword_101672BF0);
        return 0;
      }
    }
  }
  else
  {
    return 0;
  }
  return v42;
}

uint64_t sub_100B28138(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLFollowViewportState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  id v13 = (char *)&v30[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_6;
  }
  uint64_t v15 = (void *)Strong;
  uint64_t v16 = Strong + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess();
  sub_100522E9C(v16, (uint64_t)v8, &qword_101681D50);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_6:
    sub_100522F00((uint64_t)v8, &qword_101681D50);
    goto LABEL_7;
  }
  sub_100B31FEC((uint64_t)v8, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  uint64_t v17 = (CGFloat *)&v13[*(int *)(v9 + 28)];
  CGFloat v18 = *v17;
  CGFloat v19 = v17[1];
  CGFloat v20 = v17[2];
  CGFloat v21 = v17[3];
  [a2 frameInUnscaledCanvas];
  v32.origin.double x = v22;
  v32.origin.double y = v23;
  v32.size.double width = v24;
  v32.size.double height = v25;
  v31.origin.double x = v18;
  v31.origin.double y = v19;
  v31.size.double width = v20;
  v31.size.double height = v21;
  if (CGRectContainsRect(v31, v32))
  {
    CRLAccessibilityPostLayoutChangedNotification(a2);
    return sub_100B314E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  }
  sub_100B314E0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
LABEL_7:
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v27 = (void *)result;
    v30[3] = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
    v30[0] = a3;
    id v28 = a3;
    sub_100B32858(a2, (uint64_t)v30);

    return sub_100522F00((uint64_t)v30, &qword_101672BF0);
  }
  return result;
}

uint64_t sub_100B284A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLFollowViewportState();
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (void **)((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  sub_100B315A8(a1 + *(int *)(v10 + 20), (uint64_t)v9, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_100B31FEC((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    id v21 = [self mainBundle];
    NSString v22 = String._bridgeToObjectiveC()();
    NSString v23 = String._bridgeToObjectiveC()();
    id v24 = [v21 localizedStringForKey:v22 value:v23 table:0];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v17 = sub_100B2C808((uint64_t)v5);
    uint64_t v19 = v25;
    sub_100B314E0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    if (v19) {
      goto LABEL_3;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t v11 = *v9;
  uint64_t v12 = sub_1005057FC(&qword_101692DA0);
  sub_100522F00((uint64_t)v9 + *(int *)(v12 + 48), &qword_101681D50);
  id v13 = [self mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [v13 localizedStringForKey:v14 value:v15 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = sub_10052D460(v11, 0);
  uint64_t v19 = v18;

  if (!v19) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10117E810;
  *(void *)(v20 + 56) = &type metadata for String;
  *(void *)(v20 + 64) = sub_100528BE4();
  *(void *)(v20 + 32) = v17;
  *(void *)(v20 + 40) = v19;
  uint64_t v17 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_100B28810()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  qword_10171B8C0 = v4;
  *(void *)algn_10171B8C8 = v6;
}

uint64_t sub_100B28970()
{
  return type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(0);
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101692D90);
}

void *sub_100B28A10()
{
  uint64_t v0 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v0 - 8, v1);
  id v3 = &v29[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for PersonNameComponents();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return Strong;
  }
  sub_1007014C4((uint64_t)v3);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v3, &qword_101687FD0);
LABEL_10:
    uint64_t v13 = sub_100701F80();
    unint64_t v15 = v17;
    goto LABEL_11;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v8, v3, v4);
  uint64_t v10 = self;
  Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v12 = [v10 localizedStringFromPersonNameComponents:isa style:1 options:0];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v15 = v14;

  if ((v15 & 0x2000000000000000) != 0) {
    uint64_t v16 = HIBYTE(v15) & 0xF;
  }
  else {
    uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  if (!v16)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_11:

  id v18 = [self mainBundle];
  NSString v19 = String._bridgeToObjectiveC()();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v18 localizedStringForKey:v19 value:v20 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10117E810;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_100528BE4();
  *(void *)(v22 + 32) = v13;
  *(void *)(v22 + 40) = v15;
  uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1005057FC(&qword_101692EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 32) = v23;
  *(void *)(inited + 40) = v25;
  if (qword_10166F918 != -1) {
    swift_once();
  }
  uint64_t v27 = *(void *)algn_10171B8C8;
  *(void *)(inited + 48) = qword_10171B8C0;
  *(void *)(inited + 56) = v27;
  swift_bridgeObjectRetain();
  uint64_t Strong = (void *)sub_1009D7100(inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101674580);
  swift_arrayDestroy();
  return Strong;
}

uint64_t sub_100B28DF8()
{
  id v1 = [self currentlyFocusedElement];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v2 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer;
  [*(id *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer) invalidate];
  id v3 = self;
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100522D7C((uint64_t)v12, (uint64_t)v11);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  sub_100575CE8(v11, (_OWORD *)(v5 + 24));
  v10[4] = sub_100B32514;
  v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = *(void *)"";
  v10[2] = sub_10051CE64;
  v10[3] = &unk_101524B00;
  uint64_t v6 = _Block_copy(v10);
  swift_release();
  id v7 = [v3 scheduledTimerWithTimeInterval:0 repeats:v6 block:0.25];
  _Block_release(v6);
  uint64_t v8 = *(void **)(v0 + v2);
  *(void *)(v0 + v2) = v7;

  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
}

uint64_t sub_100B28F90(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (char *)result;
    uint64_t v6 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer;
    [*(id *)(result + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_voiceOverRepRefocusTimer) invalidate];
    id v7 = *(void **)&v5[v6];
    *(void *)&v5[v6] = 0;

    LODWORD(v6) = UIAccessibilityLayoutChangedNotification;
    sub_10050F848(a3, a3[3]);
    uint64_t v8 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    UIAccessibilityPostNotification(v6, v8);

    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100B29094(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4, v7);
  uint64_t v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (id *)((char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v13);
  unint64_t v15 = (id *)((char *)&aBlock[-1] - v14);
  id result = [self isVoiceOverOrSwitchControlEnabled];
  if (result)
  {
    uint64_t v17 = a1 + *(int *)(v4 + 20);
    sub_100B315A8(v17, (uint64_t)v15, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v36 = v5;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        uint64_t v19 = sub_1005057FC(&qword_101692DA0);
        sub_100522F00((uint64_t)v15 + *(int *)(v19 + 48), &qword_101681D50);
        unsigned __int8 v20 = 1;
      }
      else
      {
        sub_100B314E0((uint64_t)v15, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        unsigned __int8 v20 = 2;
      }
    }
    else
    {

      uint64_t v21 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v15 + *(int *)(v21 + 48), &qword_101681D50);
      unsigned __int8 v20 = 0;
    }
    uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers);
    swift_beginAccess();
    uint64_t v23 = *v22;
    if (*(void *)(*v22 + 16))
    {
      unint64_t v24 = sub_100956978(v20);
      if (v25) {
        [*(id *)(*(void *)(v23 + 56) + 8 * v24) invalidate];
      }
    }
    sub_100B315A8(v17, (uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int v26 = swift_getEnumCaseMultiPayload();
    if (v26)
    {
      if (v26 == 1)
      {

        uint64_t v27 = sub_1005057FC(&qword_101692DA0);
        sub_100522F00((uint64_t)v11 + *(int *)(v27 + 48), &qword_101681D50);
        unsigned __int8 v28 = 1;
      }
      else
      {
        sub_100B314E0((uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        unsigned __int8 v28 = 2;
      }
    }
    else
    {

      uint64_t v29 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v11 + *(int *)(v29 + 48), &qword_101681D50);
      unsigned __int8 v28 = 0;
    }
    uint64_t v30 = self;
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_100B315A8(a1, (uint64_t)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    unint64_t v32 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v31;
    sub_100B31FEC((uint64_t)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + v32, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    aBlock[4] = sub_100B32460;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_10051CE64;
    void aBlock[3] = &unk_101524AB0;
    id v34 = _Block_copy(aBlock);
    swift_release();
    id v35 = [v30 scheduledTimerWithTimeInterval:0 repeats:v34 block:0.5];
    _Block_release(v34);
    swift_beginAccess();
    sub_10057EDE4((uint64_t)v35, v28);
    return (id)swift_endAccess();
  }
  return result;
}

void sub_100B29510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (id *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (id *)((char *)&v33 - v10);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (char *)Strong;
    uint64_t v14 = a3
        + *(int *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) + 20);
    sub_100B315A8(v14, (uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        uint64_t v16 = sub_1005057FC(&qword_101692DA0);
        sub_100522F00((uint64_t)v11 + *(int *)(v16 + 48), &qword_101681D50);
        unsigned __int8 v17 = 1;
      }
      else
      {
        sub_100B314E0((uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        unsigned __int8 v17 = 2;
      }
    }
    else
    {

      uint64_t v18 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v11 + *(int *)(v18 + 48), &qword_101681D50);
      unsigned __int8 v17 = 0;
    }
    uint64_t v19 = (uint64_t *)&v13[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_announcementTimers];
    swift_beginAccess();
    uint64_t v20 = *v19;
    if (*(void *)(*v19 + 16))
    {
      unint64_t v21 = sub_100956978(v17);
      if (v22) {
        [*(id *)(*(void *)(v20 + 56) + 8 * v21) invalidate];
      }
    }
    sub_100B315A8(v14, (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int v23 = swift_getEnumCaseMultiPayload();
    if (v23)
    {
      if (v23 == 1)
      {

        uint64_t v24 = sub_1005057FC(&qword_101692DA0);
        sub_100522F00((uint64_t)v7 + *(int *)(v24 + 48), &qword_101681D50);
        unsigned __int8 v25 = 1;
      }
      else
      {
        sub_100B314E0((uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        unsigned __int8 v25 = 2;
      }
    }
    else
    {

      uint64_t v26 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v7 + *(int *)(v26 + 48), &qword_101681D50);
      unsigned __int8 v25 = 0;
    }
    swift_beginAccess();
    unint64_t v27 = sub_100956978(v25);
    if (v28)
    {
      unint64_t v29 = v27;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v31 = *v19;
      uint64_t v33 = *v19;
      *uint64_t v19 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100983A94();
        uint64_t v31 = v33;
      }
      unint64_t v32 = *(void **)(*(void *)(v31 + 56) + 8 * v29);
      sub_10058B87C(v29, v31);
      *uint64_t v19 = v31;

      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    sub_100B2C070(a3);
  }
}

void sub_100B29848(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = type metadata accessor for CRLFollowViewportState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  *(void *)&double v8 = __chkstk_darwin(v4 - 8, v7).n128_u64[0];
  uint64_t v9 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer) invalidate];
  uint64_t v10 = self;
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100B315A8(a1, (uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  sub_100B31FEC((uint64_t)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  *(void *)(v13 + ((v6 + v12 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_100B321B8;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10051CE64;
  void aBlock[3] = &unk_101524A60;
  uint64_t v14 = _Block_copy(aBlock);
  swift_release();
  id v15 = [v10 scheduledTimerWithTimeInterval:0 repeats:v14 block:0.5];
  _Block_release(v14);
  uint64_t v16 = *(void **)(v1 + v9);
  *(void *)(v1 + v9) = v15;
}

uint64_t sub_100B29A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v89 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v85 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v4);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLFollowViewportState();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v82 = (uint64_t)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v81 = (uint64_t)&v77 - v13;
  uint64_t v86 = sub_1005057FC(&qword_101681D58);
  __chkstk_darwin(v86, v14);
  uint64_t v16 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v88, v17);
  uint64_t v19 = (id *)((char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v83 = (uint64_t)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v84 = (uint64_t)&v77 - v25;
  __chkstk_darwin(v26, v27);
  unint64_t v29 = (char *)&v77 - v28;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v77 - v32;
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v77 - v36;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v39 = (char *)result;
    uint64_t v87 = v33;
    char v80 = v6;
    uint64_t v40 = OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer;
    [*(id *)(result + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_viewportChangeDebounceTimer) invalidate];
    uint64_t v41 = *(void **)&v39[v40];
    *(void *)&v39[v40] = 0;

    uint64_t v90 = a3;
    sub_100B315A8(a3, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v79 = v8;
    BOOL v42 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    v42(v37, 0, 1, v7);
    uint64_t v43 = (uint64_t)&v39[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState];
    swift_beginAccess();
    sub_1006063BC((uint64_t)v37, v43, &qword_101681D50);
    swift_endAccess();
    uint64_t v44 = &v39[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer];
    swift_beginAccess();
    uint64_t v45 = *(void *)v44;
    uint64_t v46 = *(void *)(*(void *)v44 + 16);
    if (!v46) {
      goto LABEL_35;
    }
    sub_100B315A8(v45+ *(int *)(v89 + 20)+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80)), (uint64_t)v19, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      uint64_t v48 = (uint64_t)v87;
      sub_100B31FEC((uint64_t)v19, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
      v42((char *)v48, 0, 1, v7);
    }
    else
    {

      uint64_t v47 = sub_1005057FC(&qword_101692DA0);
      uint64_t v48 = (uint64_t)v87;
      sub_100B31540((uint64_t)v19 + *(int *)(v47 + 48), (uint64_t)v87);
    }
    sub_100B315A8(v90, (uint64_t)v29, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    v42(v29, 0, 1, v7);
    uint64_t v49 = (uint64_t)&v16[*(int *)(v86 + 48)];
    sub_100522E9C(v48, (uint64_t)v16, &qword_101681D50);
    sub_100522E9C((uint64_t)v29, v49, &qword_101681D50);
    uint64_t v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
    if (v50((uint64_t)v16, 1, v7) == 1)
    {
      sub_100522F00((uint64_t)v29, &qword_101681D50);
      if (v50(v49, 1, v7) == 1)
      {
        sub_100522F00((uint64_t)v16, &qword_101681D50);
LABEL_18:

        return sub_100522F00(v48, &qword_101681D50);
      }
    }
    else
    {
      uint64_t v51 = v84;
      sub_100522E9C((uint64_t)v16, v84, &qword_101681D50);
      if (v50(v49, 1, v7) != 1)
      {
        uint64_t v58 = v49;
        uint64_t v59 = v81;
        sub_100B31FEC(v58, v81, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        LODWORD(v86) = sub_100AA2D38(v51, v59);
        sub_100B314E0(v59, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00((uint64_t)v29, &qword_101681D50);
        sub_100B314E0(v84, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00((uint64_t)v16, &qword_101681D50);
        uint64_t v52 = v90;
        if (v86) {
          goto LABEL_18;
        }
        goto LABEL_12;
      }
      sub_100522F00((uint64_t)v29, &qword_101681D50);
      sub_100B314E0(v51, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    }
    sub_100522F00((uint64_t)v16, &qword_101681D58);
    uint64_t v52 = v90;
LABEL_12:
    uint64_t v53 = v83;
    sub_100522E9C(v48, v83, &qword_101681D50);
    if (v50(v53, 1, v7) == 1)
    {
      sub_100522F00(v53, &qword_101681D50);
    }
    else
    {
      uint64_t v54 = v53;
      uint64_t v55 = v82;
      sub_100B31FEC(v54, v82, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
      double v56 = vabds_f32(*(float *)(v55 + *(int *)(v7 + 24)), *(float *)(v52 + *(int *)(v7 + 24)));
      double v57 = sub_1000653B4(*(double *)(v55 + *(int *)(v7 + 28)), *(double *)(v55 + *(int *)(v7 + 28) + 8), *(double *)(v52 + *(int *)(v7 + 28)), *(double *)(v52 + *(int *)(v7 + 28) + 8));
      if (v56 < 0.1 && v57 < 50.0)
      {

        sub_100B314E0(v55, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        return sub_100522F00(v48, &qword_101681D50);
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v61 = (void *)Strong;
        id v62 = [*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers) allObjects];
        sub_10050BF48(0, &qword_101675990);
        unint64_t v63 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v78 = v46;
        if (v63 >> 62) {
          goto LABEL_39;
        }
        uint64_t v64 = *(void *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10);
        while (v64)
        {
          uint64_t v65 = 4;
          while (1)
          {
            id v66 = (v63 & 0xC000000000000001) != 0
                ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
                : *(id *)(v63 + 8 * v65);
            uint64_t v67 = v66;
            uint64_t v68 = v65 - 3;
            if (__OFADD__(v65 - 4, 1)) {
              break;
            }
            id v69 = [v66 canvas];
            id v70 = [v69 allReps];

            sub_10050BF48(0, (unint64_t *)&qword_101678790);
            sub_10055A7A4();
            uint64_t v71 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

            __chkstk_darwin(v72, v73);
            *(&v77 - 2) = v90;
            Swift::Int v74 = sub_100529E74((uint64_t (*)(id *))sub_100B32ADC, (uint64_t)(&v77 - 4), v71);
            if ((v74 & 0xC000000000000001) != 0) {
              uint64_t v75 = __CocoaSet.count.getter();
            }
            else {
              uint64_t v75 = *(void *)(v74 + 16);
            }

            swift_release();
            if (v75)
            {
              swift_bridgeObjectRelease();
              uint64_t v55 = v82;
              uint64_t v46 = v78;
              goto LABEL_34;
            }
            ++v65;
            if (v68 == v64) {
              goto LABEL_32;
            }
          }
          __break(1u);
LABEL_39:
          swift_bridgeObjectRetain();
          uint64_t v64 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
LABEL_32:
        swift_bridgeObjectRelease();

        sub_100B314E0(v82, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        uint64_t v48 = (uint64_t)v87;
        return sub_100522F00(v48, &qword_101681D50);
      }
LABEL_34:
      sub_100B314E0(v55, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    }
LABEL_35:
    uint64_t v76 = (uint64_t)v80;
    sub_100B315A8(v90, (uint64_t)&v80[*(int *)(v89 + 20)], (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    swift_storeEnumTagMultiPayload();
    static Date.now.getter();
    sub_100B29094(v76);
    sub_100B2A4C4(v76);

    uint64_t result = sub_100B314E0(v76, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    uint64_t v48 = (uint64_t)v87;
    if (!v46) {
      return result;
    }
    return sub_100522F00(v48, &qword_101681D50);
  }
  return result;
}

uint64_t sub_100B2A4C4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v5, v9);
  uint64_t v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (id *)((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (id *)((char *)&v38 - v16);
  uint64_t v18 = a1 + *(int *)(v6 + 28);
  sub_100B315A8(v18, (uint64_t)&v38 - v16, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v39 = v7;
  uint64_t v40 = ObjectType;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {

      uint64_t v20 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v17 + *(int *)(v20 + 48), &qword_101681D50);
      unsigned __int8 v21 = 1;
    }
    else
    {
      sub_100B314E0((uint64_t)v17, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      unsigned __int8 v21 = 2;
    }
  }
  else
  {

    uint64_t v22 = sub_1005057FC(&qword_101692DA0);
    sub_100522F00((uint64_t)v17 + *(int *)(v22 + 48), &qword_101681D50);
    unsigned __int8 v21 = 0;
  }
  uint64_t v23 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers);
  swift_beginAccess();
  uint64_t v24 = *v23;
  if (*(void *)(*v23 + 16))
  {
    unint64_t v25 = sub_100956978(v21);
    if (v26) {
      [*(id *)(*(void *)(v24 + 56) + 8 * v25) invalidate];
    }
  }
  sub_100B315A8(v18, (uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  int v27 = swift_getEnumCaseMultiPayload();
  if (v27)
  {
    if (v27 == 1)
    {

      uint64_t v28 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v13 + *(int *)(v28 + 48), &qword_101681D50);
      unsigned __int8 v29 = 1;
    }
    else
    {
      sub_100B314E0((uint64_t)v13, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      unsigned __int8 v29 = 2;
    }
  }
  else
  {

    uint64_t v30 = sub_1005057FC(&qword_101692DA0);
    sub_100522F00((uint64_t)v13 + *(int *)(v30 + 48), &qword_101681D50);
    unsigned __int8 v29 = 0;
  }
  uint64_t v31 = self;
  uint64_t v32 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100B315A8(a1, (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  unint64_t v33 = (*(unsigned __int8 *)(v39 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v32;
  sub_100B31FEC((uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v34 + v33, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  *(void *)(v34 + ((v8 + v33 + 7) & 0xFFFFFFFFFFFFFFF8)) = v40;
  aBlock[4] = sub_100B32054;
  aBlock[5] = v34;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_10051CE64;
  void aBlock[3] = &unk_101524A10;
  uint64_t v35 = _Block_copy(aBlock);
  swift_release();
  id v36 = [v31 scheduledTimerWithTimeInterval:0 repeats:v35 block:1.0];
  _Block_release(v35);
  swift_beginAccess();
  sub_10057EDE4((uint64_t)v36, v29);
  return swift_endAccess();
}

void sub_100B2A940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1005057FC(&qword_101692EF8);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (id *)((char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (id *)((char *)&v47 - v14);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v17 = (char *)Strong;
  uint64_t v18 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v19 = a3 + *(int *)(v18 + 20);
  sub_100B315A8(v19, (uint64_t)v15, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {

      uint64_t v21 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v15 + *(int *)(v21 + 48), &qword_101681D50);
      unsigned __int8 v22 = 1;
    }
    else
    {
      sub_100B314E0((uint64_t)v15, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      unsigned __int8 v22 = 2;
    }
  }
  else
  {

    uint64_t v23 = sub_1005057FC(&qword_101692DA0);
    sub_100522F00((uint64_t)v15 + *(int *)(v23 + 48), &qword_101681D50);
    unsigned __int8 v22 = 0;
  }
  uint64_t v24 = (uint64_t *)&v17[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyLoggingTimers];
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (*(void *)(*v24 + 16))
  {
    unint64_t v26 = sub_100956978(v22);
    if (v27) {
      [*(id *)(*(void *)(v25 + 56) + 8 * v26) invalidate];
    }
  }
  sub_100B315A8(v19, (uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  int v28 = swift_getEnumCaseMultiPayload();
  if (v28)
  {
    if (v28 == 1)
    {

      uint64_t v29 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v11 + *(int *)(v29 + 48), &qword_101681D50);
      unsigned __int8 v30 = 1;
    }
    else
    {
      sub_100B314E0((uint64_t)v11, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      unsigned __int8 v30 = 2;
    }
  }
  else
  {

    uint64_t v31 = sub_1005057FC(&qword_101692DA0);
    sub_100522F00((uint64_t)v11 + *(int *)(v31 + 48), &qword_101681D50);
    unsigned __int8 v30 = 0;
  }
  swift_beginAccess();
  unint64_t v32 = sub_100956978(v30);
  if (v33)
  {
    unint64_t v34 = v32;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *v24;
    uint64_t v48 = *v24;
    *uint64_t v24 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100983A94();
      uint64_t v36 = v48;
    }
    uint64_t v37 = *(void **)(*(void *)(v36 + 56) + 8 * v34);
    sub_10058B87C(v34, v36);
    *uint64_t v24 = v36;

    swift_bridgeObjectRelease();
  }
  uint64_t v38 = swift_endAccess();
  __chkstk_darwin(v38, v39);
  *(&v47 - 2) = a3;
  uint64_t v40 = (uint64_t *)&v17[OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer];
  swift_beginAccess();
  uint64_t v41 = (uint64_t)v40;
  uint64_t v42 = sub_100B303D0((uint64_t (*)(unint64_t))sub_100B32098, (uint64_t)(&v47 - 4), type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, (uint64_t (*)(uint64_t))sub_100F68810, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  uint64_t v43 = *(void *)(*v40 + 16);
  if (v43 < v42)
  {
    __break(1u);
  }
  else
  {
    sub_100F4D278(v42, v43);
    swift_endAccess();
    sub_100B2B600();
    swift_beginAccess();
    sub_100B315A8(a3, (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    sub_100F4A1DC(0, 0, (uint64_t)v7);
    swift_endAccess();
    uint64_t v41 = *v40;
    if (*(uint64_t *)(*v40 + 16) >= 6) {
      a3 = 6;
    }
    else {
      a3 = *(void *)(*v40 + 16);
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    uint64_t v44 = (double *)swift_dynamicCastClass();
    if (!v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v44 = _swiftEmptyArrayStorage;
    }
    uint64_t v45 = *((void *)v44 + 2);
    swift_release();
    if (v45 == a3)
    {
      uint64_t v46 = (double *)swift_dynamicCastClass();
      if (!v46)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = _swiftEmptyArrayStorage;
      }
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_1006BAC84(v41, v41+ ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80)), 0, (2 * a3) | 1);
LABEL_28:
  swift_bridgeObjectRelease();
  *uint64_t v40 = (uint64_t)v46;
  swift_bridgeObjectRelease();
  if ([self isVoiceOverOrSwitchControlEnabled]) {
    sub_100B265C0();
  }
  else {
    sub_100B26A94();
  }
}

BOOL sub_100B2AF18(uint64_t a1, uint64_t a2)
{
  uint64_t v76 = sub_1005057FC(&qword_101681D58);
  __chkstk_darwin(v76, v4);
  uint64_t v77 = (uint64_t)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_1005057FC(&qword_101692EE8);
  __chkstk_darwin(v79, v6);
  char v80 = (void **)((char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for CRLFollowViewportState();
  uint64_t v74 = *(void *)(v8 - 8);
  uint64_t v75 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v72 = (uint64_t)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v78 = (char *)&v71 - v13;
  uint64_t v14 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v73 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v71 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v71 - v23;
  uint64_t v25 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v25, v26);
  int v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29, v30);
  unint64_t v32 = (char *)&v71 - v31;
  uint64_t v33 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v34 = a1 + *(int *)(v33 + 20);
  sub_100B315A8(v34, (uint64_t)v32, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  uint64_t v35 = a2 + *(int *)(v33 + 20);
  sub_100B315A8(v35, (uint64_t)v28, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  LOBYTE(v33) = sub_100B30AB0((uint64_t)v32, (uint64_t)v28);
  sub_100B314E0((uint64_t)v28, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  sub_100B314E0((uint64_t)v32, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if ((v33 & 1) == 0)
  {
    uint64_t v37 = (uint64_t)v78;
    uint64_t v38 = (uint64_t)v20;
    uint64_t v39 = (uint64_t)v24;
    uint64_t v40 = v80;
    uint64_t v41 = (void **)((char *)v80 + *(int *)(v79 + 48));
    sub_100B315A8(v35, (uint64_t)v80, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    sub_100B315A8(v34, (uint64_t)v41, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_100B314E0((uint64_t)v40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        sub_100B314E0((uint64_t)v41, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        return 0;
      }
      uint64_t v43 = *v40;
      uint64_t v44 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v45 = (uint64_t)v40 + v44;
      if (swift_getEnumCaseMultiPayload() < 2)
      {
LABEL_6:
        uint64_t v46 = *v41;
        sub_100522F00((uint64_t)v41 + v44, &qword_101681D50);
        sub_100522F00(v45, &qword_101681D50);
        [v43 frameInUnscaledCanvas];
        CGFloat v48 = v47;
        CGFloat v50 = v49;
        CGFloat v52 = v51;
        CGFloat v54 = v53;

        [v46 frameInUnscaledCanvas];
        CGFloat v56 = v55;
        CGFloat v58 = v57;
        CGFloat v60 = v59;
        CGFloat v62 = v61;

        v81.origin.double x = v48;
        v81.origin.double y = v50;
        v81.size.double width = v52;
        v81.size.double height = v54;
        v82.origin.double x = v56;
        v82.origin.double y = v58;
        v82.size.double width = v60;
        v82.size.double height = v62;
        return CGRectEqualToRect(v81, v82);
      }
    }
    else
    {
      uint64_t v43 = *v40;
      uint64_t v44 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v45 = (uint64_t)v40 + v44;
      if (swift_getEnumCaseMultiPayload() <= 1) {
        goto LABEL_6;
      }
    }

    sub_100B31540(v45, v39);
    sub_100B31FEC((uint64_t)v41, v37, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    sub_100B31FEC(v37, v38, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v63 = v74;
    uint64_t v64 = v75;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v38, 0, 1, v75);
    uint64_t v65 = v77;
    uint64_t v66 = v77 + *(int *)(v76 + 48);
    sub_100522E9C(v39, v77, &qword_101681D50);
    sub_100522E9C(v38, v66, &qword_101681D50);
    uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
    if (v67(v65, 1, v64) == 1)
    {
      sub_100522F00(v38, &qword_101681D50);
      sub_100522F00(v39, &qword_101681D50);
      if (v67(v66, 1, v64) == 1)
      {
        sub_100522F00(v65, &qword_101681D50);
        return 1;
      }
    }
    else
    {
      uint64_t v68 = v73;
      sub_100522E9C(v65, v73, &qword_101681D50);
      if (v67(v66, 1, v64) != 1)
      {
        uint64_t v70 = v72;
        sub_100B31FEC(v66, v72, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        BOOL v36 = sub_100AA2D38(v68, v70);
        sub_100B314E0(v70, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00(v38, &qword_101681D50);
        sub_100522F00(v39, &qword_101681D50);
        sub_100B314E0(v68, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00(v65, &qword_101681D50);
        return v36;
      }
      sub_100522F00(v38, &qword_101681D50);
      sub_100522F00(v39, &qword_101681D50);
      sub_100B314E0(v68, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    }
    sub_100522F00(v65, &qword_101681D58);
    return 0;
  }
  return 1;
}

uint64_t sub_100B2B600()
{
  uint64_t v1 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  uint64_t v3 = __chkstk_darwin(v1, v2);
  uint64_t v79 = (void **)((char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (void **)((char *)&v77 - v6);
  uint64_t v88 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  uint64_t v8 = *(void *)(v88 - 8);
  uint64_t v10 = __chkstk_darwin(v88, v9);
  uint64_t v83 = (uint64_t)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v84 = (uint64_t)&v77 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v86 = (uint64_t)&v77 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  unint64_t v82 = (unint64_t)&v77 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v81 = (uint64_t)&v77 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v87 = (uint64_t)&v77 - v26;
  __chkstk_darwin(v25, v27);
  uint64_t v29 = (char *)&v77 - v28;
  uint64_t v30 = (unint64_t *)(v0 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_historyBuffer);
  swift_beginAccess();
  uint64_t v89 = v30;
  unint64_t v31 = *v30;
  uint64_t v32 = *(void *)(v31 + 16);
  uint64_t v85 = v1;
  if (!v32)
  {
    uint64_t v39 = 0;
    uint64_t v40 = v87;
    goto LABEL_29;
  }
  unint64_t v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v78 = v8;
  uint64_t v34 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  unint64_t v35 = 0;
  unint64_t v80 = v33;
  while (1)
  {
    sub_100B315A8(v31 + v33, (uint64_t)v29, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    Date.timeIntervalSinceNow.getter();
    double v37 = v36;
    sub_100B314E0((uint64_t)v29, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v37 < -300.0) {
      break;
    }
    ++v35;
    v33 += v34;
    if (v32 == v35)
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v39 = *(void *)(*v89 + 16);
LABEL_10:
      uint64_t v40 = v87;
      goto LABEL_28;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v39 = v35 + 1;
  if (__OFADD__(v35, 1)) {
    goto LABEL_86;
  }
  unint64_t v41 = *v89;
  unint64_t v42 = *(void *)(*v89 + 16);
  if (v39 == v42)
  {
    uint64_t v32 = v35;
    goto LABEL_10;
  }
  uint64_t v43 = v34 + v33;
  unint64_t v44 = v35 + 1;
  do
  {
    if (v44 >= v42)
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    sub_100B315A8(v41 + v43, (uint64_t)v29, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    Date.timeIntervalSinceNow.getter();
    double v46 = v45;
    uint64_t result = sub_100B314E0((uint64_t)v29, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v46 >= -300.0)
    {
      uint64_t v40 = v87;
      if (v44 != v35)
      {
        if ((v35 & 0x8000000000000000) != 0) {
          goto LABEL_79;
        }
        unint64_t v47 = *v89;
        unint64_t v48 = *(void *)(*v89 + 16);
        if (v35 >= v48) {
          goto LABEL_80;
        }
        uint64_t result = sub_100B315A8(v47 + v80 + v35 * v34, v81, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        if (v44 >= v48) {
          goto LABEL_81;
        }
        sub_100B315A8(v47 + v43, v82, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v89 = v47;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_100F68810(v47);
          unint64_t v47 = result;
          *uint64_t v89 = result;
        }
        if (v35 >= *(void *)(v47 + 16)) {
          goto LABEL_82;
        }
        uint64_t result = sub_100B32A74(v82, v47 + v80 + v35 * v34, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        if (v44 >= *(void *)(*v89 + 16)) {
          goto LABEL_83;
        }
        uint64_t result = sub_100B32A74(v81, *v89 + v43, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        uint64_t v40 = v87;
      }
      BOOL v49 = __OFADD__(v35++, 1);
      if (v49) {
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t v40 = v87;
    }
    uint64_t v39 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_69;
    }
    unint64_t v41 = *v89;
    unint64_t v42 = *(void *)(*v89 + 16);
    ++v44;
    v43 += v34;
  }
  while (v39 != v42);
  uint64_t v32 = v35;
LABEL_28:
  uint64_t v8 = v78;
  if (v39 < v32)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
LABEL_29:
  CGFloat v50 = v89;
  sub_100F4D278(v32, v39);
  unint64_t v51 = *v50;
  uint64_t v52 = *(void *)(*v50 + 16);
  if (!v52)
  {
    uint64_t v63 = 0;
    goto LABEL_44;
  }
  unint64_t v53 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v54 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  unint64_t v55 = 0;
  unint64_t v82 = v53;
  while (2)
  {
    sub_100B315A8(v51 + v53, v40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    sub_100B315A8(v40 + *(int *)(v88 + 20), (uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload() >= 2)
    {
      sub_100B314E0((uint64_t)v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      sub_100B314E0(v40, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      goto LABEL_32;
    }
    CGFloat v56 = *v7;
    uint64_t v57 = sub_1005057FC(&qword_101692DA0);
    sub_100522F00((uint64_t)v7 + *(int *)(v57 + 48), &qword_101681D50);
    id v58 = [v56 canvas];
    if (v58)
    {
      double v59 = v58;
      id v60 = [v58 allReps];

      sub_10050BF48(0, (unint64_t *)&qword_101678790);
      sub_10055A7A4();
      uint64_t v61 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v60) = sub_1006E61EC(v56, v61);
      swift_bridgeObjectRelease();
      uint64_t v40 = v87;
      sub_100B314E0(v87, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      uint64_t v62 = v86;
      if ((v60 & 1) == 0) {
        goto LABEL_40;
      }
LABEL_32:
      ++v55;
      v53 += v54;
      if (v52 == v55)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v63 = *(void *)(*v89 + 16);
        goto LABEL_43;
      }
      continue;
    }
    break;
  }

  sub_100B314E0(v87, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
  uint64_t v62 = v86;
LABEL_40:
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v63 = v55 + 1;
  if (__OFADD__(v55, 1)) {
    goto LABEL_87;
  }
  unint64_t v64 = *v89;
  unint64_t v65 = *(void *)(*v89 + 16);
  if (v63 != v65)
  {
    uint64_t v66 = v54 + v53;
    unint64_t v67 = v55 + 1;
    uint64_t v68 = v79;
    while (1)
    {
      if (v67 >= v65) {
        goto LABEL_70;
      }
      sub_100B315A8(v64 + v66, v62, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      sub_100B315A8(v62 + *(int *)(v88 + 20), (uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
      if (swift_getEnumCaseMultiPayload() >= 2) {
        break;
      }
      id v69 = *v68;
      uint64_t v70 = sub_1005057FC(&qword_101692DA0);
      sub_100522F00((uint64_t)v68 + *(int *)(v70 + 48), &qword_101681D50);
      id v71 = [v69 canvas];
      if (v71)
      {
        uint64_t v72 = v71;
        id v73 = [v71 allReps];

        sub_10050BF48(0, (unint64_t *)&qword_101678790);
        sub_10055A7A4();
        uint64_t v74 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v73) = sub_1006E61EC(v69, v74);
        swift_bridgeObjectRelease();
        uint64_t v62 = v86;
        uint64_t result = sub_100B314E0(v86, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
        if (v73)
        {
          if (v67 == v55) {
            goto LABEL_61;
          }
LABEL_53:
          if ((v55 & 0x8000000000000000) != 0) {
            goto LABEL_74;
          }
          unint64_t v75 = *v89;
          unint64_t v76 = *(void *)(*v89 + 16);
          if (v55 >= v76) {
            goto LABEL_75;
          }
          uint64_t result = sub_100B315A8(v75 + v82 + v55 * v54, v84, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          if (v67 >= v76) {
            goto LABEL_76;
          }
          sub_100B315A8(v75 + v66, v83, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v89 = v75;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100F68810(v75);
            unint64_t v75 = result;
            *uint64_t v89 = result;
          }
          uint64_t v62 = v86;
          if (v55 >= *(void *)(v75 + 16)) {
            goto LABEL_77;
          }
          uint64_t result = sub_100B32A74(v83, v75 + v82 + v55 * v54, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          if (v67 >= *(void *)(*v89 + 16)) {
            goto LABEL_78;
          }
          uint64_t result = sub_100B32A74(v84, *v89 + v66, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          uint64_t v68 = v79;
LABEL_61:
          BOOL v49 = __OFADD__(v55++, 1);
          if (v49) {
            goto LABEL_72;
          }
        }
        uint64_t v63 = v67 + 1;
        if (__OFADD__(v67, 1)) {
          goto LABEL_71;
        }
        goto LABEL_63;
      }

      uint64_t v62 = v86;
      uint64_t result = sub_100B314E0(v86, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      uint64_t v63 = v67 + 1;
      if (__OFADD__(v67, 1)) {
        goto LABEL_71;
      }
LABEL_63:
      unint64_t v64 = *v89;
      unint64_t v65 = *(void *)(*v89 + 16);
      ++v67;
      v66 += v54;
      if (v63 == v65) {
        goto LABEL_42;
      }
    }
    sub_100B314E0((uint64_t)v68, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    uint64_t result = sub_100B314E0(v62, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
    if (v67 != v55) {
      goto LABEL_53;
    }
    goto LABEL_61;
  }
LABEL_42:
  uint64_t v52 = v55;
LABEL_43:
  if (v63 >= v52)
  {
LABEL_44:
    sub_100F4D278(v52, v63);
    return swift_endAccess();
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

void sub_100B2C070(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101687FD0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PersonNameComponents();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  uint64_t v78 = v8;
  __chkstk_darwin(v7, v9);
  unint64_t v76 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CRLFollowViewportState();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (void **)((char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = (void *)Strong;
    uint64_t v26 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
    sub_100B315A8(a1 + *(int *)(v26 + 20), (uint64_t)v23, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    unint64_t v75 = v1;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        sub_100B31FEC((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        id v50 = [self mainBundle];
        NSString v51 = String._bridgeToObjectiveC()();
        NSString v52 = String._bridgeToObjectiveC()();
        id v53 = [v50 localizedStringForKey:v51 value:v52 table:0];

        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v73 = v25;
        uint64_t v74 = v54;
        unint64_t v55 = v6;
        uint64_t v57 = v56;

        id v58 = v75;
        uint64_t v43 = sub_100B2C808((uint64_t)v19);
        unint64_t v45 = v59;
        sub_100B315A8((uint64_t)v19, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
        uint64_t v60 = (uint64_t)v58
            + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState;
        swift_beginAccess();
        sub_1006063BC((uint64_t)v14, v60, &qword_101681D50);
        swift_endAccess();
        uint64_t v35 = v57;
        uint64_t v6 = v55;
        uint64_t v25 = v73;
        sub_100B314E0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        uint64_t v46 = v78;
        if (v45) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
      uint64_t v28 = *v23;
      uint64_t v29 = (uint64_t)v23 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      id v30 = [self mainBundle];
      NSString v31 = String._bridgeToObjectiveC()();
      NSString v32 = String._bridgeToObjectiveC()();
      id v33 = [v30 localizedStringForKey:v31 value:v32 table:0];

      uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v34;

      double v36 = v28;
      unsigned __int8 v37 = 0;
    }
    else
    {
      uint64_t v28 = *v23;
      uint64_t v29 = (uint64_t)v23 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      id v38 = [self mainBundle];
      NSString v39 = String._bridgeToObjectiveC()();
      NSString v40 = String._bridgeToObjectiveC()();
      id v41 = [v38 localizedStringForKey:v39 value:v40 table:0];

      uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v35 = v42;

      double v36 = v28;
      unsigned __int8 v37 = 1;
    }
    uint64_t v43 = sub_10052D460(v36, v37);
    unint64_t v45 = v44;

    sub_100522F00(v29, &qword_101681D50);
    uint64_t v46 = v78;
    if (v45)
    {
LABEL_7:
      uint64_t v47 = HIBYTE(v45) & 0xF;
      if ((v45 & 0x2000000000000000) == 0) {
        uint64_t v47 = v43 & 0xFFFFFFFFFFFFLL;
      }
      if (v47)
      {
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v48 = swift_allocObject();
        *(_OWORD *)(v48 + 16) = xmmword_10117D8C0;
        sub_1007014C4((uint64_t)v6);
        uint64_t v49 = v77;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v6, 1, v77) == 1)
        {
          sub_100522F00((uint64_t)v6, &qword_101687FD0);
        }
        else
        {
          uint64_t v78 = v35;
          uint64_t v61 = v76;
          (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v76, v6, v49);
          uint64_t v62 = self;
          Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
          id v64 = [v62 localizedStringFromPersonNameComponents:isa style:1 options:0];

          uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v67 = v66;

          if ((v67 & 0x2000000000000000) != 0) {
            uint64_t v68 = HIBYTE(v67) & 0xF;
          }
          else {
            uint64_t v68 = v65 & 0xFFFFFFFFFFFFLL;
          }
          (*(void (**)(char *, uint64_t))(v46 + 8))(v61, v77);
          if (v68) {
            goto LABEL_22;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v65 = sub_100701F80();
        unint64_t v67 = v69;
LABEL_22:
        *(void *)(v48 + 56) = &type metadata for String;
        unint64_t v70 = sub_100528BE4();
        *(void *)(v48 + 32) = v65;
        *(void *)(v48 + 40) = v67;
        *(void *)(v48 + 96) = &type metadata for String;
        *(void *)(v48 + 104) = v70;
        *(void *)(v48 + 64) = v70;
        *(void *)(v48 + 72) = v43;
        *(void *)(v48 + 80) = v45;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        NSString v71 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        CRLAccessibilityPostAnnouncementNotification(v75, v71);

        return;
      }

      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_13:

    goto LABEL_15;
  }
}

uint64_t sub_100B2C808(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v9 = (void *)Strong;
  if (!Strong) {
    return 0;
  }
  id v10 = [*(id *)(Strong + OBJC_IVAR____TtC8Freeform20CRLFollowCoordinator_interactiveCanvasControllers) allObjects];
  sub_10050BF48(0, &qword_101675990);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v12, v13);
  v43[-2] = v2;
  v43[-1] = a1;
  uint64_t v14 = sub_100ED4F9C((uint64_t (*)(id *))sub_100B31638, (uint64_t)&v43[-4], v11);
  swift_bridgeObjectRelease();
  if (!v14) {
    return 0;
  }
  type metadata accessor for CRLAccessibilitySceneDescriptionHelper();
  uint64_t v15 = type metadata accessor for CRLFollowViewportState();
  uint64_t v16 = (double *)(a1 + *(int *)(v15 + 28));
  CGFloat v17 = *v16;
  CGFloat v18 = v16[1];
  CGFloat v19 = v16[2];
  CGFloat v20 = v16[3];
  id v21 = v14;
  id v22 = [v21 canvas];
  id v23 = [v22 allReps];

  sub_10050BF48(0, (unint64_t *)&qword_101678790);
  sub_10055A7A4();
  uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v25 = sub_100528D14(v24, 1u, v17, v18, v19, v20);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(int *)(v15 + 24);
  float v29 = *(float *)(a1 + v28);
  uint64_t v30 = v2 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentAnnouncedViewportState;
  swift_beginAccess();
  sub_100522E9C(v30, (uint64_t)v7, &qword_101681D50);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v7, 1, v15))
  {
    sub_100522F00((uint64_t)v7, &qword_101681D50);
  }
  else
  {
    float v41 = *(float *)&v7[*(int *)(v15 + 24)];
    sub_100522F00((uint64_t)v7, &qword_101681D50);
    if (v29 == v41)
    {
      uint64_t v37 = 0;
      uint64_t v39 = 0;
      goto LABEL_13;
    }
  }
  id v31 = [self mainBundle];
  NSString v32 = String._bridgeToObjectiveC()();
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v31 localizedStringForKey:v32 value:v33 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_10117E810;
  float v36 = roundf(*(float *)(a1 + v28) * 100.0);
  if ((~LODWORD(v36) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v36 <= -9.2234e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v36 < 9.2234e18)
  {
    *(void *)(result + 56) = &type metadata for Int;
    *(void *)(result + 64) = &protocol witness table for Int;
    *(void *)(result + 32) = (uint64_t)v36;
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1005057FC(&qword_101692EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 32) = v25;
    *(void *)(inited + 40) = v27;
    *(void *)(inited + 48) = v37;
    *(void *)(inited + 56) = v39;
    uint64_t v40 = sub_1009D7100(inited);

    swift_setDeallocating();
    sub_1005057FC(&qword_101674580);
    swift_arrayDestroy();
    return v40;
  }
LABEL_17:
  __break(1u);
  return result;
}

BOOL sub_100B2CCF0(id *a1, uint64_t a2, uint64_t a3)
{
  id v4 = [*a1 canvas];
  id v5 = [v4 allReps];

  sub_10050BF48(0, (unint64_t *)&qword_101678790);
  sub_10055A7A4();
  uint64_t v6 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  v10[2] = a3;
  Swift::Int v7 = sub_100529E74((uint64_t (*)(id *))sub_100B32ADC, (uint64_t)v10, v6);
  if ((v7 & 0xC000000000000001) != 0) {
    uint64_t v8 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v8 = *(void *)(v7 + 16);
  }
  swift_release();
  return v8 != 0;
}

BOOL sub_100B2CDF4(id *a1, uint64_t a2)
{
  id v3 = *a1;
  if ([*a1 hasBeenRemoved]) {
    return 0;
  }
  [v3 frameInUnscaledCanvas];
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGRect v14 = *(CGRect *)(a2 + *(int *)(type metadata accessor for CRLFollowViewportState() + 28));
  v13.origin.double x = v6;
  v13.origin.double y = v8;
  v13.size.double width = v10;
  v13.size.double height = v12;
  return CGRectIntersectsRect(v13, v14);
}

uint64_t sub_100B2CEA0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  double v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v10 = (int *)type metadata accessor for CRLFollowViewportState();
  uint64_t v11 = *((void *)v10 - 1);
  __chkstk_darwin(v10, v12);
  CGRect v14 = (__uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  CGFloat v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  id v22 = (char *)&v49 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v49 - v21, a2 + v10[5], v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v22, 0, 1, v5);
  int v23 = *(_DWORD *)(a2 + v10[6]);
  [a1 frameInUnscaledCanvas];
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;
  CGFloat v31 = v30;
  double v32 = *(double *)(a2 + v10[7] + 16);
  __uint64_t v33 = clock_gettime_nsec_np(_CLOCK_MONOTONIC_RAW);
  sub_100522E9C((uint64_t)v22, (uint64_t)v19, (uint64_t *)&unk_101674520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v19, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    uint64_t v34 = 1;
    uint64_t v35 = v50;
  }
  else
  {
    double v36 = sub_100065738(v25, v27, v29, v31);
    double v38 = sub_10006402C(v36, v37, v32);
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    unint64_t v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v9, v19, v5);
    sub_100522F00((uint64_t)v22, (uint64_t *)&unk_101674520);
    v45((char *)v14 + v10[5], v9, v5);
    *(_DWORD *)((char *)v14 + v10[6]) = v23;
    uint64_t v46 = (double *)((char *)v14 + v10[7]);
    *uint64_t v46 = v38;
    *((void *)v46 + 1) = v40;
    *((void *)v46 + 2) = v42;
    *((void *)v46 + 3) = v44;
    *CGRect v14 = v33;
    uint64_t v47 = v50;
    sub_100B31FEC((uint64_t)v14, v50, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v34 = 0;
    uint64_t v35 = v47;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v11 + 56))(v35, v34, 1, v10);
}

BOOL sub_100B2D230(void *a1, void *a2)
{
  uint64_t v81 = a2;
  uint64_t v4 = type metadata accessor for CRLFollowViewportState();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v75 = (uint64_t)&v72 - v11;
  __chkstk_darwin(v10, v12);
  uint64_t v78 = (uint64_t)&v72 - v13;
  uint64_t v14 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (void **)((char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_1005057FC(&qword_101681D50);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v80 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v79 = (uint64_t)&v72 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v77 = (uint64_t)&v72 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  CGFloat v31 = (char *)&v72 - v30;
  uint64_t v33 = __chkstk_darwin(v29, v32);
  uint64_t v35 = (char *)&v72 - v34;
  __chkstk_darwin(v33, v36);
  double v38 = (char *)&v72 - v37;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v40 = (void *)Strong;
  id v74 = a1;
  uint64_t v76 = v2;
  id v73 = v8;
  v83[3] = &type metadata for CRLFeatureFlags;
  v83[4] = (id)sub_1005396A8();
  LOBYTE(v83[0]) = 12;
  char v41 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v83);
  if (v41)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    if (v83[0])
    {

      if (qword_10166FAE0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      id v42 = (id)static OS_os_log.crlFollow;
      uint64_t v43 = static os_log_type_t.default.getter();
      sub_100BAC898((uint64_t)v42, (uint64_t)&_mh_execute_header, v43, (uint64_t)"Calling didEndFollowing because of the public endFollowSessionForLocalParticipant method was called", 99, 2, (uint64_t)_swiftEmptyArrayStorage);

      sub_1007ECCE4(1);
    }
  }

  uint64_t v44 = v82;
  unint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v82 + 56);
  v45(v38, 1, 1, v4);
  uint64_t v46 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0);
  sub_100B315A8((uint64_t)v81 + *(int *)(v46 + 20), (uint64_t)v17, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_100522F00((uint64_t)v38, &qword_101681D50);
    sub_100B31FEC((uint64_t)v17, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v50 = v38;
    uint64_t v51 = v4;
LABEL_14:
    v45(v50, 0, 1, v51);
    goto LABEL_19;
  }
  uint64_t v81 = *v17;
  uint64_t v47 = sub_1005057FC(&qword_101692DA0);
  sub_100B31540((uint64_t)v17 + *(int *)(v47 + 48), (uint64_t)v35);
  sub_100B31540((uint64_t)v35, (uint64_t)v31);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
  if (v48(v31, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v31, &qword_101681D50);
    goto LABEL_16;
  }
  uint64_t v72 = v45;
  uint64_t v52 = v78;
  sub_100B31FEC((uint64_t)v31, v78, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  id v53 = [v74 canvas];
  id v54 = [v53 allReps];

  sub_10050BF48(0, (unint64_t *)&qword_101678790);
  sub_10055A7A4();
  uint64_t v55 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v56, v57);
  *(&v72 - 2) = (void (*)(char *, uint64_t, uint64_t, uint64_t))v52;
  Swift::Int v58 = sub_100529E74((uint64_t (*)(id *))sub_100B31610, (uint64_t)(&v72 - 4), v55);
  LOBYTE(v54) = sub_1006E61EC(v81, v58);
  swift_release();
  if (v54)
  {
    sub_100522F00((uint64_t)v38, &qword_101681D50);

    sub_100B31FEC(v78, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v50 = v38;
    uint64_t v51 = v4;
    unint64_t v45 = v72;
    goto LABEL_14;
  }
  sub_100B314E0(v78, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  unint64_t v45 = v72;
LABEL_16:
  uint64_t v59 = v76 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
  swift_beginAccess();
  uint64_t v60 = v59;
  uint64_t v61 = v77;
  sub_100522E9C(v60, v77, &qword_101681D50);
  if (v48((char *)v61, 1, v4) == 1)
  {

    sub_100522F00(v61, &qword_101681D50);
  }
  else
  {
    uint64_t v62 = v75;
    sub_100B31FEC(v61, v75, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v63 = v79;
    id v64 = v81;
    sub_100B2CEA0(v81, v62, v79);

    sub_100B314E0(v62, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    sub_100522F00((uint64_t)v38, &qword_101681D50);
    sub_100B31540(v63, (uint64_t)v38);
  }
LABEL_19:
  uint64_t v65 = v80;
  sub_100522E9C((uint64_t)v38, v80, &qword_101681D50);
  int v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v65, 1, v4);
  BOOL v49 = v66 != 1;
  if (v66 == 1)
  {
    sub_100522F00((uint64_t)v38, &qword_101681D50);
    double v38 = (char *)v65;
  }
  else
  {
    uint64_t v67 = (uint64_t)v73;
    sub_100B31FEC(v65, (uint64_t)v73, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    uint64_t v68 = v76;
    sub_100B28DF8();
    [v74 zoomWithAnimationToUnscaledRect:*(double *)(v67 + *(int *)(v4 + 28)) withDuration:*(double *)(v67 + *(int *)(v4 + 28) + 8) withDuration:*(double *)(v67 + *(int *)(v4 + 28) + 16) withDuration:*(double *)(v67 + *(int *)(v4 + 28) + 24) withDuration:0.0];
    uint64_t v69 = v79;
    sub_100B315A8(v67, v79, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    v45((char *)v69, 0, 1, v4);
    uint64_t v70 = v68 + OBJC_IVAR____TtC8Freeform43CRLFollowAccessibilityExperienceCoordinator_mostRecentViewportState;
    swift_beginAccess();
    sub_1006063BC(v69, v70, &qword_101681D50);
    swift_endAccess();
    sub_100B314E0(v67, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  }
  sub_100522F00((uint64_t)v38, &qword_101681D50);
  return v49;
}

void sub_100B2DB60()
{
  sub_100B2DC2C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100B2DC2C()
{
  if (!qword_101681D30)
  {
    type metadata accessor for CRLFollowViewportState();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101681D30);
    }
  }
}

void *sub_100B2DC84(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v15 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      *(_DWORD *)((char *)a1 + v15[6]) = *(_DWORD *)((char *)a2 + v15[6]);
      uint64_t v20 = v15[7];
      uint64_t v21 = (_OWORD *)((char *)a1 + v20);
      uint64_t v22 = (_OWORD *)((char *)a2 + v20);
      long long v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = (void *)*a2;
      *a1 = *a2;
      id v8 = v7;
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v10 = (void *)((char *)a1 + v9);
      uint64_t v11 = (void *)((char *)a2 + v9);
      uint64_t v12 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v24 = (void *)*a2;
      *a1 = *a2;
      id v25 = v24;
      uint64_t v26 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v10 = (void *)((char *)a1 + v26);
      uint64_t v11 = (void *)((char *)a2 + v26);
      uint64_t v12 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v13 + 48))(v11, 1, v12))
      {
LABEL_9:
        uint64_t v27 = sub_1005057FC(&qword_101681D50);
        memcpy(v10, v11, *(void *)(*(void *)(v27 - 8) + 64));
        goto LABEL_11;
      }
    }
    *uint64_t v10 = *v11;
    uint64_t v28 = v12[5];
    uint64_t v29 = (char *)v10 + v28;
    uint64_t v30 = (char *)v11 + v28;
    uint64_t v31 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    *(_DWORD *)((char *)v10 + v12[6]) = *(_DWORD *)((char *)v11 + v12[6]);
    uint64_t v32 = v12[7];
    uint64_t v33 = (_OWORD *)((char *)v10 + v32);
    uint64_t v34 = (_OWORD *)((char *)v11 + v32);
    long long v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    (*(void (**)(void *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    goto LABEL_11;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_100B2E060(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = *(int *)(type metadata accessor for CRLFollowViewportState() + 20);
  }
  else
  {
    if (result > 1) {
      return result;
    }

    a1 = (id *)((char *)a1 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48));
    uint64_t v3 = type metadata accessor for CRLFollowViewportState();
    uint64_t result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    uint64_t v4 = *(int *)(v3 + 20);
  }
  int v5 = (char *)a1 + v4;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_100B2E160(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v12 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v13 = v12[5];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *(_DWORD *)((char *)a1 + v12[6]) = *(_DWORD *)((char *)a2 + v12[6]);
    uint64_t v17 = v12[7];
    uint64_t v18 = (_OWORD *)((char *)a1 + v17);
    uint64_t v19 = (_OWORD *)((char *)a2 + v17);
    long long v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
  }
  else
  {
    uint64_t v4 = (void *)*a2;
    *a1 = *a2;
    id v5 = v4;
    uint64_t v6 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    uint64_t v7 = (void *)((char *)a1 + v6);
    id v8 = (void *)((char *)a2 + v6);
    uint64_t v9 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v10 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_1005057FC(&qword_101681D50);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      *uint64_t v7 = *v8;
      uint64_t v21 = v9[5];
      uint64_t v22 = (char *)v7 + v21;
      long long v23 = (char *)v8 + v21;
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(_DWORD *)((char *)v7 + v9[6]) = *(_DWORD *)((char *)v8 + v9[6]);
      uint64_t v25 = v9[7];
      uint64_t v26 = (_OWORD *)((char *)v7 + v25);
      uint64_t v27 = (_OWORD *)((char *)v8 + v25);
      long long v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      (*(void (**)(void *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B2E398(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100B314E0((uint64_t)a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v12 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v13 = v12[5];
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(_DWORD *)((char *)a1 + v12[6]) = *(_DWORD *)((char *)a2 + v12[6]);
      uint64_t v17 = v12[7];
      uint64_t v18 = (_OWORD *)((char *)a1 + v17);
      uint64_t v19 = (_OWORD *)((char *)a2 + v17);
      long long v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
    }
    else
    {
      uint64_t v4 = (void *)*a2;
      *a1 = *a2;
      id v5 = v4;
      uint64_t v6 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v7 = (void *)((char *)a1 + v6);
      id v8 = (void *)((char *)a2 + v6);
      uint64_t v9 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v10 = *((void *)v9 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = sub_1005057FC(&qword_101681D50);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        *uint64_t v7 = *v8;
        uint64_t v21 = v9[5];
        uint64_t v22 = (char *)v7 + v21;
        long long v23 = (char *)v8 + v21;
        uint64_t v24 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *(_DWORD *)((char *)v7 + v9[6]) = *(_DWORD *)((char *)v8 + v9[6]);
        uint64_t v25 = v9[7];
        uint64_t v26 = (_OWORD *)((char *)v7 + v25);
        uint64_t v27 = (_OWORD *)((char *)v8 + v25);
        long long v28 = v27[1];
        *uint64_t v26 = *v27;
        v26[1] = v28;
        (*(void (**)(void *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101692E18);
}

void *sub_100B2E614(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    uint64_t v10 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v11 = v10[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(_DWORD *)((char *)a1 + v10[6]) = *(_DWORD *)((char *)a2 + v10[6]);
    uint64_t v15 = v10[7];
    uint64_t v16 = (_OWORD *)((char *)a1 + v15);
    uint64_t v17 = (_OWORD *)((char *)a2 + v15);
    long long v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
  }
  else
  {
    *a1 = *a2;
    uint64_t v4 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    id v5 = (void *)((char *)a1 + v4);
    uint64_t v6 = (void *)((char *)a2 + v4);
    uint64_t v7 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
    {
      uint64_t v9 = sub_1005057FC(&qword_101681D50);
      memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      *id v5 = *v6;
      uint64_t v19 = v7[5];
      long long v20 = (char *)v5 + v19;
      uint64_t v21 = (char *)v6 + v19;
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      *(_DWORD *)((char *)v5 + v7[6]) = *(_DWORD *)((char *)v6 + v7[6]);
      uint64_t v23 = v7[7];
      uint64_t v24 = (_OWORD *)((char *)v5 + v23);
      uint64_t v25 = (_OWORD *)((char *)v6 + v23);
      long long v26 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v26;
      (*(void (**)(void *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B2E848(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100B314E0((uint64_t)a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      uint64_t v10 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(_DWORD *)((char *)a1 + v10[6]) = *(_DWORD *)((char *)a2 + v10[6]);
      uint64_t v15 = v10[7];
      uint64_t v16 = (_OWORD *)((char *)a1 + v15);
      uint64_t v17 = (_OWORD *)((char *)a2 + v15);
      long long v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
    }
    else
    {
      *a1 = *a2;
      uint64_t v4 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      id v5 = (void *)((char *)a1 + v4);
      uint64_t v6 = (void *)((char *)a2 + v4);
      uint64_t v7 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v8 = *((void *)v7 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v8 + 48))(v6, 1, v7))
      {
        uint64_t v9 = sub_1005057FC(&qword_101681D50);
        memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        *id v5 = *v6;
        uint64_t v19 = v7[5];
        long long v20 = (char *)v5 + v19;
        uint64_t v21 = (char *)v6 + v19;
        uint64_t v22 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
        *(_DWORD *)((char *)v5 + v7[6]) = *(_DWORD *)((char *)v6 + v7[6]);
        uint64_t v23 = v7[7];
        uint64_t v24 = (_OWORD *)((char *)v5 + v23);
        uint64_t v25 = (_OWORD *)((char *)v6 + v23);
        long long v26 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v26;
        (*(void (**)(void *, void, uint64_t, int *))(v8 + 56))(v5, 0, 1, v7);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100B2EAA0()
{
  sub_100B2DC2C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    id v5 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    uint64_t v1 = type metadata accessor for CRLFollowViewportState();
    if (v2 <= 0x3F)
    {
      uint64_t v7 = *(void *)(v1 - 8) + 64;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B2EC70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType()
{
  return &type metadata for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event.EventType;
}

uint64_t *sub_100B2ECA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *uint64_t v9 = *v10;
      long long v20 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)v9 + v21;
      uint64_t v23 = (char *)v10 + v21;
      uint64_t v24 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(_DWORD *)((char *)v9 + v20[6]) = *(_DWORD *)((char *)v10 + v20[6]);
      uint64_t v25 = v20[7];
      long long v26 = (_OWORD *)((char *)v9 + v25);
      uint64_t v27 = (_OWORD *)((char *)v10 + v25);
      long long v28 = v27[1];
      *long long v26 = *v27;
      v26[1] = v28;
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = (void *)*v10;
      *uint64_t v9 = *v10;
      id v13 = v12;
      uint64_t v14 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v15 = (void *)((char *)v9 + v14);
      uint64_t v16 = (void *)((char *)v10 + v14);
      uint64_t v17 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v18 + 48))(v16, 1, v17)) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v29 = (void *)*v10;
      *uint64_t v9 = *v10;
      id v30 = v29;
      uint64_t v31 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      uint64_t v15 = (void *)((char *)v9 + v31);
      uint64_t v16 = (void *)((char *)v10 + v31);
      uint64_t v17 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v18 = *((void *)v17 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
      {
LABEL_9:
        uint64_t v32 = sub_1005057FC(&qword_101681D50);
        memcpy(v15, v16, *(void *)(*(void *)(v32 - 8) + 64));
        goto LABEL_11;
      }
    }
    *uint64_t v15 = *v16;
    uint64_t v33 = v17[5];
    uint64_t v34 = (char *)v15 + v33;
    long long v35 = (char *)v16 + v33;
    uint64_t v36 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    *(_DWORD *)((char *)v15 + v17[6]) = *(_DWORD *)((char *)v16 + v17[6]);
    uint64_t v37 = v17[7];
    double v38 = (_OWORD *)((char *)v15 + v37);
    uint64_t v39 = (_OWORD *)((char *)v16 + v37);
    long long v40 = v39[1];
    *double v38 = *v39;
    v38[1] = v40;
    (*(void (**)(void *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
    goto LABEL_11;
  }
  uint64_t v19 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_100B2F0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v8 = *(int *)(type metadata accessor for CRLFollowViewportState() + 20);
  }
  else
  {
    if (result > 1) {
      return result;
    }

    int v5 = (id *)((char *)v5 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48));
    uint64_t v7 = type metadata accessor for CRLFollowViewportState();
    uint64_t result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
    if (result) {
      return result;
    }
    uint64_t v8 = *(int *)(v7 + 20);
  }
  uint64_t v9 = (char *)v5 + v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_100B2F234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    void *v8 = *v9;
    uint64_t v18 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v19 = v18[5];
    long long v20 = (char *)v8 + v19;
    uint64_t v21 = (char *)v9 + v19;
    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    *(_DWORD *)((char *)v8 + v18[6]) = *(_DWORD *)((char *)v9 + v18[6]);
    uint64_t v23 = v18[7];
    uint64_t v24 = (_OWORD *)((char *)v8 + v23);
    uint64_t v25 = (_OWORD *)((char *)v9 + v23);
    long long v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
  }
  else
  {
    uint64_t v10 = (void *)*v9;
    void *v8 = *v9;
    id v11 = v10;
    uint64_t v12 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    id v13 = (void *)((char *)v8 + v12);
    uint64_t v14 = (void *)((char *)v9 + v12);
    uint64_t v15 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v16 = *((void *)v15 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_1005057FC(&qword_101681D50);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      *id v13 = *v14;
      uint64_t v27 = v15[5];
      long long v28 = (char *)v13 + v27;
      uint64_t v29 = (char *)v14 + v27;
      uint64_t v30 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      *(_DWORD *)((char *)v13 + v15[6]) = *(_DWORD *)((char *)v14 + v15[6]);
      uint64_t v31 = v15[7];
      uint64_t v32 = (_OWORD *)((char *)v13 + v31);
      uint64_t v33 = (_OWORD *)((char *)v14 + v31);
      long long v34 = v33[1];
      *uint64_t v32 = *v33;
      v32[1] = v34;
      (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B2F4C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_100B314E0(a1 + v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      void *v8 = *v9;
      uint64_t v18 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v19 = v18[5];
      long long v20 = (char *)v8 + v19;
      uint64_t v21 = (char *)v9 + v19;
      uint64_t v22 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *(_DWORD *)((char *)v8 + v18[6]) = *(_DWORD *)((char *)v9 + v18[6]);
      uint64_t v23 = v18[7];
      uint64_t v24 = (_OWORD *)((char *)v8 + v23);
      uint64_t v25 = (_OWORD *)((char *)v9 + v23);
      long long v26 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v26;
    }
    else
    {
      uint64_t v10 = (void *)*v9;
      void *v8 = *v9;
      id v11 = v10;
      uint64_t v12 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      id v13 = (void *)((char *)v8 + v12);
      uint64_t v14 = (void *)((char *)v9 + v12);
      uint64_t v15 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v16 = *((void *)v15 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_1005057FC(&qword_101681D50);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *id v13 = *v14;
        uint64_t v27 = v15[5];
        long long v28 = (char *)v13 + v27;
        uint64_t v29 = (char *)v14 + v27;
        uint64_t v30 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        *(_DWORD *)((char *)v13 + v15[6]) = *(_DWORD *)((char *)v14 + v15[6]);
        uint64_t v31 = v15[7];
        uint64_t v32 = (_OWORD *)((char *)v13 + v31);
        uint64_t v33 = (_OWORD *)((char *)v14 + v31);
        long long v34 = v33[1];
        *uint64_t v32 = *v33;
        v32[1] = v34;
        (*(void (**)(void *, void, uint64_t, int *))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B2F770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    void *v8 = *v9;
    uint64_t v16 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v17 = v16[5];
    uint64_t v18 = (char *)v8 + v17;
    uint64_t v19 = (char *)v9 + v17;
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    *(_DWORD *)((char *)v8 + v16[6]) = *(_DWORD *)((char *)v9 + v16[6]);
    uint64_t v21 = v16[7];
    uint64_t v22 = (_OWORD *)((char *)v8 + v21);
    uint64_t v23 = (_OWORD *)((char *)v9 + v21);
    long long v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
  }
  else
  {
    void *v8 = *v9;
    uint64_t v10 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    id v11 = (void *)((char *)v8 + v10);
    uint64_t v12 = (void *)((char *)v9 + v10);
    id v13 = (int *)type metadata accessor for CRLFollowViewportState();
    uint64_t v14 = *((void *)v13 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_1005057FC(&qword_101681D50);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      void *v11 = *v12;
      uint64_t v25 = v13[5];
      long long v26 = (char *)v11 + v25;
      uint64_t v27 = (char *)v12 + v25;
      uint64_t v28 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      *(_DWORD *)((char *)v11 + v13[6]) = *(_DWORD *)((char *)v12 + v13[6]);
      uint64_t v29 = v13[7];
      uint64_t v30 = (_OWORD *)((char *)v11 + v29);
      uint64_t v31 = (_OWORD *)((char *)v12 + v29);
      long long v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100B2F9F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_100B314E0(a1 + v7, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      void *v8 = *v9;
      uint64_t v16 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v17 = v16[5];
      uint64_t v18 = (char *)v8 + v17;
      uint64_t v19 = (char *)v9 + v17;
      uint64_t v20 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      *(_DWORD *)((char *)v8 + v16[6]) = *(_DWORD *)((char *)v9 + v16[6]);
      uint64_t v21 = v16[7];
      uint64_t v22 = (_OWORD *)((char *)v8 + v21);
      uint64_t v23 = (_OWORD *)((char *)v9 + v21);
      long long v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
    }
    else
    {
      void *v8 = *v9;
      uint64_t v10 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
      id v11 = (void *)((char *)v8 + v10);
      uint64_t v12 = (void *)((char *)v9 + v10);
      id v13 = (int *)type metadata accessor for CRLFollowViewportState();
      uint64_t v14 = *((void *)v13 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = sub_1005057FC(&qword_101681D50);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        void *v11 = *v12;
        uint64_t v25 = v13[5];
        long long v26 = (char *)v11 + v25;
        uint64_t v27 = (char *)v12 + v25;
        uint64_t v28 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        *(_DWORD *)((char *)v11 + v13[6]) = *(_DWORD *)((char *)v12 + v13[6]);
        uint64_t v29 = v13[7];
        uint64_t v30 = (_OWORD *)((char *)v11 + v29);
        uint64_t v31 = (_OWORD *)((char *)v12 + v29);
        long long v32 = v31[1];
        *uint64_t v30 = *v31;
        v30[1] = v32;
        (*(void (**)(void *, void, uint64_t, int *))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B2FCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B2FCB8);
}

uint64_t sub_100B2FCB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100B2FDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B2FDC4);
}

uint64_t sub_100B2FDC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101692EA8);
}

uint64_t sub_100B2FEE8()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100B2FFB4()
{
  unint64_t result = qword_101692EE0;
  if (!qword_101692EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101692EE0);
  }
  return result;
}

uint64_t sub_100B30008(uint64_t (*a1)(id *), uint64_t a2)
{
  uint64_t v4 = (uint64_t *)v2;
  unint64_t v7 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100E3BC90(a1, a2, v7);
  char v10 = v9;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_54;
    }
    if ((unint64_t)*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11 != v30) {
        goto LABEL_6;
      }
    }
    else if (v11 != *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v11 = v8 + 5;
      uint64_t v32 = a2;
      while (1)
      {
        unint64_t v12 = v11 - 4;
        uint64_t v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_45;
          }
          id v14 = *(id *)(v13 + 8 * v11);
        }
        uint64_t v15 = v14;
        id v33 = v14;
        char v16 = a1(&v33);

        if ((v16 & 1) == 0) {
          break;
        }
LABEL_32:
        unint64_t v27 = v11 - 3;
        if (__OFADD__(v12, 1)) {
          goto LABEL_46;
        }
        if ((unint64_t)*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v28 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v27 == v28) {
          return v8;
        }
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_47;
        }
        goto LABEL_32;
      }
      uint64_t v17 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v17 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0) {
            goto LABEL_50;
          }
          if (v12 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_51;
          }
          id v19 = *(id *)(v17 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_48;
        }
        if (v8 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_49;
        }
        id v18 = *(id *)(v17 + 8 * v8 + 32);
        if ((v17 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
      }
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v17 = *v4;
LABEL_20:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v17;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v17 < 0 || (v17 & 0x4000000000000000) != 0)
      {
        uint64_t v17 = sub_100F68540(v17);
        *uint64_t v4 = v17;
      }
      uint64_t v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v19;

      specialized Array._endMutation()();
      uint64_t v22 = *v4;
      int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *uint64_t v4 = v22;
      if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        uint64_t v22 = sub_100F68540(v22);
        *uint64_t v4 = v22;
      }
      a2 = v32;
      if ((v12 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_53;
      }
      uint64_t v25 = *(void **)(v24 + 8 * v11);
      *(void *)(v24 + 8 * v11) = v18;

      specialized Array._endMutation()();
      goto LABEL_31;
    }
    return v8;
  }
  if (!((unint64_t)*v4 >> 62)) {
    return *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_100B30368(uint64_t (*a1)(unint64_t), uint64_t a2)
{
  return sub_100B303D0(a1, a2, type metadata accessor for CRLBoardIdentifier, type metadata accessor for CRLBoardIdentifier, (uint64_t (*)(uint64_t))sub_100F686C4, type metadata accessor for CRLBoardIdentifier);
}

uint64_t sub_100B303D0(uint64_t (*a1)(unint64_t), uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t), uint64_t (*a6)(void))
{
  unint64_t v45 = a6;
  uint64_t v11 = a3(0) - 8;
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v48 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v47 = (uint64_t)&v42 - v17;
  __chkstk_darwin(v16, v18);
  uint64_t v50 = (uint64_t)&v42 - v20;
  uint64_t v52 = v6;
  uint64_t v21 = *v6;
  uint64_t v22 = *(void *)(*v6 + 16);
  if (!v22) {
    return 0;
  }
  uint64_t v51 = a4;
  uint64_t v43 = a5;
  unint64_t v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v24 = *(void *)(v19 + 72);
  swift_bridgeObjectRetain();
  unint64_t v25 = 0;
  unint64_t v46 = v23;
  while (1)
  {
    char v26 = a1(v21 + v23);
    if (v7)
    {
      swift_bridgeObjectRelease();
      return v25;
    }
    if (v26) {
      break;
    }
    ++v25;
    v23 += v24;
    if (v22 == v25)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v21 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v25, 1))
  {
    unint64_t v28 = *(void *)(v21 + 16);
    if (v25 + 1 == v28) {
      return v25;
    }
    uint64_t v29 = v24 + v23;
    unint64_t v30 = v25 + 1;
    uint64_t v49 = v24;
    while (v30 < v28)
    {
      uint64_t v31 = v21 + v29;
      uint64_t v32 = v50;
      id v33 = a1;
      long long v34 = v51;
      sub_100B315A8(v31, v50, v51);
      long long v35 = v33;
      LOBYTE(v33) = v33(v32);
      uint64_t result = sub_100B314E0(v32, v34);
      if (v33)
      {
        a1 = v35;
      }
      else
      {
        a1 = v35;
        if (v30 != v25)
        {
          if ((v25 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          uint64_t v36 = *v52;
          unint64_t v37 = *(void *)(*v52 + 16);
          if (v25 >= v37) {
            goto LABEL_33;
          }
          uint64_t v44 = v25 * v49;
          double v38 = v51;
          uint64_t result = sub_100B315A8(v36 + v46 + v25 * v49, v47, v51);
          if (v30 >= v37) {
            goto LABEL_34;
          }
          sub_100B315A8(v36 + v29, v48, v38);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v52 = v36;
          if ((result & 1) == 0)
          {
            uint64_t result = v43(v36);
            uint64_t v36 = result;
            *uint64_t v52 = result;
          }
          uint64_t v39 = v45;
          a1 = v35;
          if (v25 >= *(void *)(v36 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_100B32A74(v48, v36 + v46 + v44, v45);
          if (v30 >= *(void *)(*v52 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_100B32A74(v47, *v52 + v29, v39);
        }
        if (__OFADD__(v25++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v41 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_30;
      }
      uint64_t v21 = *v52;
      unint64_t v28 = *(void *)(*v52 + 16);
      ++v30;
      v29 += v49;
      if (v41 == v28) {
        return v25;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100B30744(uint64_t (*a1)(unint64_t))
{
  uint64_t v4 = sub_1005057FC(&qword_10168E300) - 8;
  __chkstk_darwin(v4, v5);
  uint64_t v37 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v8);
  uint64_t v36 = (uint64_t)&v33 - v9;
  __chkstk_darwin(v10, v11);
  uint64_t v39 = (uint64_t)&v33 - v13;
  unint64_t v14 = *v1;
  uint64_t v15 = *(void *)(*v1 + 16);
  if (!v15) {
    return 0;
  }
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = *(void *)(v12 + 72);
  swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v34 = v16;
  while (1)
  {
    char v19 = a1(v14 + v16);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v18;
    }
    if (v19) {
      break;
    }
    ++v18;
    v16 += v17;
    if (v15 == v18)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v14 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v18, 1))
  {
    unint64_t v21 = *(void *)(v14 + 16);
    if (v18 + 1 == v21) {
      return v18;
    }
    uint64_t v22 = v17 + v16;
    unint64_t v23 = v18 + 1;
    double v38 = v1;
    uint64_t v35 = v17;
    while (v23 < v21)
    {
      unint64_t v40 = v23;
      uint64_t v41 = v22;
      uint64_t v24 = v39;
      sub_100522E9C(v14 + v22, v39, &qword_10168E300);
      char v25 = a1(v24);
      uint64_t result = sub_100522F00(v24, &qword_10168E300);
      if (v25)
      {
        char v26 = v38;
        uint64_t v27 = v35;
        unint64_t v28 = v40;
      }
      else
      {
        unint64_t v28 = v40;
        char v26 = v38;
        uint64_t v27 = v35;
        if (v40 != v18)
        {
          if ((v18 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v29 = *v38;
          unint64_t v30 = *(void *)(*v38 + 16);
          if (v18 >= v30) {
            goto LABEL_33;
          }
          uint64_t v33 = v18 * v35;
          uint64_t result = sub_100522E9C(v29 + v34 + v18 * v35, v36, &qword_10168E300);
          if (v28 >= v30) {
            goto LABEL_34;
          }
          sub_100522E9C(v29 + v41, v37, &qword_10168E300);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          char v26 = v38;
          *double v38 = v29;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_100F68868(v29);
            unint64_t v29 = result;
            *char v26 = result;
          }
          if (v18 >= *(void *)(v29 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1006063BC(v37, v29 + v34 + v33, &qword_10168E300);
          if (v28 >= *(void *)(*v26 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1006063BC(v36, *v26 + v41, &qword_10168E300);
        }
        if (__OFADD__(v18++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v32 = v28 + 1;
      if (__OFADD__(v28, 1)) {
        goto LABEL_30;
      }
      unint64_t v14 = *v26;
      unint64_t v21 = *(void *)(*v26 + 16);
      unint64_t v23 = v28 + 1;
      uint64_t v22 = v41 + v27;
      if (v32 == v21) {
        return v18;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_100B30AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v96 = a1;
  uint64_t v97 = (char *)a2;
  uint64_t v2 = type metadata accessor for CRLFollowViewportState();
  uint64_t v90 = *(void *)(v2 - 8);
  uint64_t v91 = v2;
  __chkstk_darwin(v2, v3);
  uint64_t v92 = (uint64_t)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v86 = (uint64_t)&v86 - v7;
  uint64_t v89 = sub_1005057FC(&qword_101681D58);
  __chkstk_darwin(v89, v8);
  uint64_t v88 = (uint64_t)&v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  uint64_t v95 = (char *)&v86 - v12;
  uint64_t v13 = sub_1005057FC(&qword_101681D50);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v87 = (uint64_t)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v93 = (uint64_t)&v86 - v18;
  __chkstk_darwin(v19, v20);
  uint64_t v94 = (uint64_t)&v86 - v21;
  __chkstk_darwin(v22, v23);
  char v25 = (char *)&v86 - v24;
  __chkstk_darwin(v26, v27);
  unint64_t v29 = (char *)&v86 - v28;
  __chkstk_darwin(v30, v31);
  uint64_t v33 = (char *)&v86 - v32;
  uint64_t v34 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v86 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v39);
  uint64_t v41 = (void **)((char *)&v86 - v40);
  __chkstk_darwin(v42, v43);
  unint64_t v45 = (void **)((char *)&v86 - v44);
  uint64_t v46 = sub_1005057FC(&qword_101692EE8);
  __chkstk_darwin(v46 - 8, v47);
  uint64_t v49 = (char *)&v86 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (void **)&v49[*(int *)(v50 + 56)];
  sub_100B315A8(v96, (uint64_t)v49, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  sub_100B315A8((uint64_t)v97, (uint64_t)v51, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v65 = (uint64_t)v33;
    uint64_t v97 = v25;
    uint64_t v66 = (uint64_t)v95;
    id v53 = v49;
    sub_100B315A8((uint64_t)v49, (uint64_t)v45, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    uint64_t v67 = *v45;
    uint64_t v68 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    uint64_t v69 = (uint64_t)v45 + v68;
    if (swift_getEnumCaseMultiPayload())
    {
      sub_100522F00((uint64_t)v45 + v68, &qword_101681D50);

      uint64_t v49 = v53;
      goto LABEL_14;
    }
    uint64_t v72 = *v51;
    sub_100B31540(v69, v65);
    sub_100B31540((uint64_t)v51 + v68, (uint64_t)v29);
    sub_10050BF48(0, (unint64_t *)&qword_101672E50);
    char v73 = static NSObject.== infix(_:_:)();

    if ((v73 & 1) == 0)
    {
      sub_100522F00((uint64_t)v29, &qword_101681D50);
      uint64_t v77 = v65;
LABEL_21:
      uint64_t v78 = &qword_101681D50;
LABEL_22:
      sub_100522F00(v77, v78);
LABEL_23:
      uint64_t v64 = (uint64_t)v53;
      goto LABEL_27;
    }
    uint64_t v74 = v66 + *(int *)(v89 + 48);
    sub_100522E9C(v65, v66, &qword_101681D50);
    sub_100522E9C((uint64_t)v29, v74, &qword_101681D50);
    uint64_t v75 = v91;
    uint64_t v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
    if (v76(v66, 1, v91) == 1)
    {
      sub_100522F00((uint64_t)v29, &qword_101681D50);
      sub_100522F00(v65, &qword_101681D50);
      if (v76(v74, 1, v75) == 1)
      {
        sub_100522F00(v66, &qword_101681D50);
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v81 = (uint64_t)v97;
      sub_100522E9C(v66, (uint64_t)v97, &qword_101681D50);
      if (v76(v74, 1, v75) != 1)
      {
        uint64_t v84 = v86;
        sub_100B31FEC(v74, v86, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        BOOL v85 = sub_100AA2D38(v81, v84);
        sub_100B314E0(v84, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00((uint64_t)v29, &qword_101681D50);
        sub_100522F00(v65, &qword_101681D50);
        sub_100B314E0(v81, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        sub_100522F00(v66, &qword_101681D50);
        if (!v85) {
          goto LABEL_23;
        }
LABEL_36:
        uint64_t v64 = (uint64_t)v53;
        goto LABEL_37;
      }
      sub_100522F00((uint64_t)v29, &qword_101681D50);
      sub_100522F00(v65, &qword_101681D50);
      sub_100B314E0(v81, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    }
    uint64_t v78 = &qword_101681D58;
    uint64_t v77 = v66;
    goto LABEL_22;
  }
  if (EnumCaseMultiPayload == 1)
  {
    id v53 = v49;
    sub_100B315A8((uint64_t)v49, (uint64_t)v41, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
    id v54 = *v41;
    uint64_t v55 = *(int *)(sub_1005057FC(&qword_101692DA0) + 48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = *v51;
      uint64_t v57 = v94;
      sub_100B31540((uint64_t)v41 + v55, v94);
      uint64_t v58 = v93;
      sub_100B31540((uint64_t)v51 + v55, v93);
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      char v59 = static NSObject.== infix(_:_:)();

      if (v59)
      {
        uint64_t v60 = v88;
        uint64_t v61 = v88 + *(int *)(v89 + 48);
        sub_100522E9C(v57, v88, &qword_101681D50);
        sub_100522E9C(v58, v61, &qword_101681D50);
        uint64_t v62 = v91;
        uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
        if (v63(v60, 1, v91) == 1)
        {
          sub_100522F00(v58, &qword_101681D50);
          sub_100522F00(v57, &qword_101681D50);
          if (v63(v61, 1, v62) == 1)
          {
            sub_100522F00(v60, &qword_101681D50);
            uint64_t v64 = (uint64_t)v53;
LABEL_37:
            sub_100B314E0(v64, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
            return 1;
          }
        }
        else
        {
          uint64_t v79 = v87;
          sub_100522E9C(v60, v87, &qword_101681D50);
          if (v63(v61, 1, v62) != 1)
          {
            uint64_t v82 = v86;
            sub_100B31FEC(v61, v86, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
            BOOL v83 = sub_100AA2D38(v79, v82);
            sub_100B314E0(v82, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
            sub_100522F00(v58, &qword_101681D50);
            sub_100522F00(v57, &qword_101681D50);
            sub_100B314E0(v79, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
            sub_100522F00(v60, &qword_101681D50);
            uint64_t v64 = (uint64_t)v53;
            if (v83) {
              goto LABEL_37;
            }
            goto LABEL_27;
          }
          sub_100522F00(v58, &qword_101681D50);
          sub_100522F00(v57, &qword_101681D50);
          sub_100B314E0(v79, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
        }
        sub_100522F00(v60, &qword_101681D58);
        uint64_t v64 = (uint64_t)v53;
LABEL_27:
        sub_100B314E0(v64, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
        return 0;
      }
      sub_100522F00(v58, &qword_101681D50);
      uint64_t v77 = v57;
      goto LABEL_21;
    }
    sub_100522F00((uint64_t)v41 + v55, &qword_101681D50);

    uint64_t v49 = v53;
LABEL_14:
    sub_100522F00((uint64_t)v49, &qword_101692EE8);
    return 0;
  }
  sub_100B315A8((uint64_t)v49, (uint64_t)v37, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100B314E0((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
    goto LABEL_14;
  }
  uint64_t v70 = v92;
  sub_100B31FEC((uint64_t)v51, v92, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  BOOL v71 = sub_100AA2D38((uint64_t)v37, v70);
  sub_100B314E0(v70, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  sub_100B314E0((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState);
  sub_100B314E0((uint64_t)v49, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event);
  return v71;
}

uint64_t sub_100B314E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B31540(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101681D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B315A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

BOOL sub_100B31610(id *a1)
{
  return sub_100B2CDF4(a1, *(void *)(v1 + 16));
}

BOOL sub_100B31638(id *a1)
{
  return sub_100B2CCF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

double *sub_100B31658(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v70 = a5;
  uint64_t v72 = a3;
  char v73 = a4;
  uint64_t v8 = type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8;
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v71 = (uint64_t)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  uint64_t v16 = (char *)v59 - v15;
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(a1 + 16);
  if (v18)
  {
    v59[1] = v5;
    uint64_t v19 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v20 = a1 + ((v19 + 32) & ~v19);
    uint64_t v68 = v19 | 7;
    uint64_t v69 = (v19 + 24) & ~v19;
    unint64_t v67 = (v14 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v66 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = v66 + 8;
    uint64_t v64 = v77;
    uint64_t v21 = *(void *)(v13 + 72);
    v59[0] = a1;
    swift_bridgeObjectRetain();
    long long v62 = xmmword_10117E810;
    uint64_t v61 = (char *)&type metadata for Any + 8;
    uint64_t v74 = a2;
    uint64_t v63 = v21;
    uint64_t v60 = v16;
    while (1)
    {
      sub_100B315A8(v20, (uint64_t)v16, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
      uint64_t v22 = sub_100B284A4((uint64_t)v16);
      if (v23)
      {
        uint64_t v24 = (void **)v22;
        uint64_t v25 = v23;
        _sSo15NSDateFormatterC8FreeformE37crlaxVoiceOverPronounceableTimeString3forSSSg10Foundation4DateV_tFZ_0();
        if (v26)
        {
          uint64_t v27 = v16;
          aBlock = v24;
          uint64_t v76 = v25;
          swift_bridgeObjectRetain();
          v28._countAndFlagsBits = 32;
          v28._object = (void *)0xE100000000000000;
          String.append(_:)(v28);
          swift_bridgeObjectRelease();
          id v29 = objc_allocWithZone((Class)NSMutableAttributedString);
          NSString v30 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v31 = [v29 initWithString:v30];

          sub_1005057FC((uint64_t *)&unk_101687FB0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v62;
          if (qword_10166F688 != -1) {
            swift_once();
          }
          uint64_t v33 = (void *)static NSAttributedStringKey.crlaxLowPitch;
          *(void *)(inited + 32) = static NSAttributedStringKey.crlaxLowPitch;
          *(void *)(inited + 64) = &type metadata for Bool;
          *(unsigned char *)(inited + 40) = 1;
          id v34 = v33;
          sub_100A38A68(inited);
          id v35 = objc_allocWithZone((Class)NSAttributedString);
          NSString v36 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          type metadata accessor for Key(0);
          sub_100B32520((unint64_t *)&qword_1016837E0, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v38 = [v35 initWithString:v36 attributes:isa];

          [v31 appendAttributedString:v38];
          uint64_t v39 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v40 = (uint64_t)v27;
          uint64_t v41 = v31;
          uint64_t v42 = v71;
          sub_100B315A8(v40, v71, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = v39;
          sub_100B31FEC(v42, v43 + v69, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          unint64_t v45 = v72;
          uint64_t v44 = v73;
          *(void *)(v43 + v67) = v72;
          *(void *)(v43 + v66) = v44;
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 16) = sub_100B32758;
          *(void *)(v46 + 24) = v43;
          id v47 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          v77[2] = sub_100B3282C;
          v77[3] = v46;
          aBlock = _NSConcreteStackBlock;
          uint64_t v76 = *(void *)"";
          v77[0] = sub_100E16228;
          v77[1] = &unk_101524B78;
          uint64_t v48 = _Block_copy(&aBlock);
          id v49 = v45;
          id v50 = v44;
          uint64_t v51 = v41;
          swift_retain();
          id v52 = [v47 initWithAttributedName:v41 image:v70 actionHandler:v48];
          _Block_release(v48);
          swift_release();
          id v53 = [self sharedInstance];
          LOBYTE(v45) = [v53 accessibilitySupportLoaded];

          if (v45)
          {
            id v54 = [self mainBundle];
            NSString v55 = String._bridgeToObjectiveC()();
            NSString v56 = String._bridgeToObjectiveC()();
            id v57 = [v54 localizedStringForKey:v55 value:v56 table:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v58 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v52 setLocalizedActionRotorCategory:v58];

            swift_release();
            uint64_t v16 = v60;
            sub_100B314E0((uint64_t)v60, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
          }
          else
          {
            uint64_t v16 = v60;
            sub_100B314E0((uint64_t)v60, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
            swift_release();
          }
          uint64_t v21 = v63;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      sub_100B314E0((uint64_t)v16, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb);
LABEL_5:
      v20 += v21;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        return (double *)v78;
      }
    }
  }
  return result;
}

uint64_t sub_100B31DE4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B31E1C()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  uint64_t v6 = (id *)(v0 + v3 + v1[7]);
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(int *)(type metadata accessor for CRLFollowViewportState() + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    uint64_t v6 = (id *)((char *)v6 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48));
    uint64_t v8 = type metadata accessor for CRLFollowViewportState();
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
    {
      uint64_t v9 = *(int *)(v8 + 20);
LABEL_6:
      uint64_t v10 = (char *)v6 + v9;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100B31FEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B32054(uint64_t a1)
{
  return sub_100B321E4(a1, type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_100B2A940);
}

uint64_t sub_100B32080(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B32090()
{
  return swift_release();
}

BOOL sub_100B32098(uint64_t a1)
{
  return sub_100B2AF18(a1, *(void *)(v1 + 16));
}

uint64_t sub_100B320B8()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLFollowViewportState() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v6 = v0 + v1[7] + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100B321B8(uint64_t a1)
{
  return sub_100B321E4(a1, (uint64_t (*)(void))type metadata accessor for CRLFollowViewportState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_100B29A78);
}

uint64_t sub_100B321E4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = *(void *)(v3 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a3(a1, v7, v3 + v6, v8);
}

uint64_t sub_100B3229C()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  unint64_t v6 = (id *)(v0 + v3 + v1[7]);
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(int *)(type metadata accessor for CRLFollowViewportState() + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    unint64_t v6 = (id *)((char *)v6 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48));
    uint64_t v8 = type metadata accessor for CRLFollowViewportState();
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
    {
      uint64_t v9 = *(int *)(v8 + 20);
LABEL_6:
      uint64_t v10 = (char *)v6 + v9;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100B32460(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_100B29510(a1, v4, v5);
}

uint64_t sub_100B324D4()
{
  swift_release();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 24);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100B32514(uint64_t a1)
{
  return sub_100B28F90(a1, *(void *)(v1 + 16), (void *)(v1 + 24));
}

uint64_t sub_100B32520(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B32568()
{
  uint64_t v1 = (int *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  unint64_t v6 = (id *)(v0 + v3 + v1[7]);
  type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb.Event(0);
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(int *)(type metadata accessor for CRLFollowViewportState() + 20);
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload <= 1)
  {

    unint64_t v6 = (id *)((char *)v6 + *(int *)(sub_1005057FC(&qword_101692DA0) + 48));
    uint64_t v8 = type metadata accessor for CRLFollowViewportState();
    if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
    {
      uint64_t v9 = *(int *)(v8 + 20);
LABEL_6:
      uint64_t v10 = (char *)v6 + v9;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
  }
  unint64_t v12 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;

  return _swift_deallocObject(v0, v13 + 8, v2 | 7);
}

BOOL sub_100B32758()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLFollowAccessibilityExperienceCoordinator.HistoryBreadcrumb(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + v3);
  unint64_t v6 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100B277D8(v4, (void *)(v0 + v2), v5, v6);
}

uint64_t sub_100B327F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B3282C()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100B32858(void *a1, uint64_t a2)
{
  sub_100522E9C(a2, (uint64_t)&v11, &qword_101672BF0);
  if (!v12) {
    return sub_100522F00((uint64_t)&v11, &qword_101672BF0);
  }
  sub_100575CE8(&v11, &v13);
  uint64_t v3 = sub_10052D460(a1, 0);
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v4;
    if (qword_10166F910 != -1) {
      swift_once();
    }
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_10117E810;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_100528BE4();
    *(void *)(v7 + 32) = v5;
    *(void *)(v7 + 40) = v6;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    sub_10050F848(&v13, v14);
    uint64_t v8 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    CRLAccessibilityPostAnnouncementNotification(v8, v9);
    swift_unknownObjectRelease();
  }
  return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v13);
}

uint64_t sub_100B329D8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B32A20()
{
  return sub_100B28138(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100B32A2C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100B32A6C()
{
  sub_100B263DC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100B32A74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

BOOL sub_100B32ADC(id *a1)
{
  return sub_100B31610(a1);
}

double *sub_100B32B28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v15 = v1;
    do
    {
      sub_1005498A4(v2, (uint64_t)v20);
      sub_1005498A4((uint64_t)v20, (uint64_t)v19);
      sub_1005057FC((uint64_t *)&unk_10167BDB0);
      sub_1005057FC(&qword_101692F00);
      if ((swift_dynamicCast() & 1) == 0)
      {
        long long v17 = 0u;
        long long v18 = 0u;
        long long v16 = 0u;
      }
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
      if (*((void *)&v17 + 1))
      {
        sub_100B332A0(&v16, v19);
        sub_100B332A0(v19, &v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_100F6306C(0, *((void *)v3 + 2) + 1, 1, v3);
        }
        unint64_t v5 = *((void *)v3 + 2);
        unint64_t v4 = *((void *)v3 + 3);
        if (v5 >= v4 >> 1) {
          uint64_t v3 = sub_100F6306C((double *)(v4 > 1), v5 + 1, 1, v3);
        }
        *((void *)v3 + 2) = v5 + 1;
        sub_100B332A0(&v16, &v3[6 * v5 + 4]);
      }
      else
      {
        sub_100522F00((uint64_t)&v16, &qword_101692F08);
      }
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
    uint64_t v1 = v15;
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *((void *)v3 + 2);
  uint64_t v7 = v1 - v6;
  if (v1 != v6)
  {
    if (qword_10166FB20 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.crlLayerAnimation;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for Int;
    *(void *)(inited + 64) = &protocol witness table for Int;
    *(void *)(inited + 32) = v7;
    unint64_t v10 = sub_100528BE4();
    unint64_t v11 = 0xEF6572657720736ELL;
    if (v7 == 1) {
      unint64_t v11 = 0xED0000736177206ELL;
    }
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v10;
    *(void *)(inited + 72) = 0x6F6974616D696E61;
    *(void *)(inited + 80) = v11;
    id v12 = v8;
    uint64_t v13 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v13, (uint64_t)"timingModifiableLayerAnimations was called, but not all layerAnimations are timing-modifiable. Non-timing-modifiable animations should only be added after the animation has been fully processed(). %@ non-timing-modifiable %@ dropped on the floor.", 246, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
  return v3;
}

double sub_100B32E14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    long long v17 = 0u;
    long long v18 = 0u;
    uint64_t v19 = 0;
LABEL_6:
    sub_100522F00((uint64_t)&v17, &qword_10167E120);
    return 0.0;
  }
  sub_1005498A4(a1 + 32, (uint64_t)&v14);
  swift_bridgeObjectRetain();
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v8 = a1 + 72;
    do
    {
      sub_1005498A4(v8, (uint64_t)&v17);
      uint64_t v10 = v15;
      uint64_t v9 = v16;
      sub_10050F848(&v14, v15);
      double v11 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v9 + 24) + 8) + 40))(v10);
      uint64_t v13 = *((void *)&v18 + 1);
      uint64_t v12 = v19;
      sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
      if (v11 >= (*(double (**)(uint64_t))(*(void *)(*(void *)(v12 + 24) + 8) + 40))(v13))
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v14);
        sub_10053974C(&v17, (uint64_t)&v14);
      }
      v8 += 40;
      --v3;
    }
    while (v3);
  }
  sub_10053974C(&v14, (uint64_t)&v17);
  swift_bridgeObjectRelease();
  uint64_t v4 = *((void *)&v18 + 1);
  if (!*((void *)&v18 + 1)) {
    goto LABEL_6;
  }
  uint64_t v5 = v19;
  sub_10050F848(&v17, *((uint64_t *)&v18 + 1));
  double v6 = (*(double (**)(uint64_t))(*(void *)(*(void *)(v5 + 24) + 8) + 40))(v4);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v17);
  return v6;
}

double sub_100B32FB0()
{
  double v1 = *(double *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

double sub_100B32FDC()
{
  return sub_100B32E14(*v0);
}

double sub_100B32FE4(uint64_t a1, double a2)
{
  uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_100B331D0(v4, (uint64_t)v20);
      sub_100B33238((uint64_t)v20, (uint64_t)&v16);
      if (v17)
      {
        sub_10053974C(&v16, (uint64_t)v19);
        sub_10053974C(v19, (uint64_t)&v16);
        uint64_t v5 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          uint64_t v5 = sub_100F62F28(0, *((void *)v5 + 2) + 1, 1, v5);
          uint64_t v21 = v5;
        }
        unint64_t v7 = *((void *)v5 + 2);
        unint64_t v6 = *((void *)v5 + 3);
        if (v7 >= v6 >> 1) {
          uint64_t v21 = sub_100F62F28((double *)(v6 > 1), v7 + 1, 1, v5);
        }
        uint64_t v8 = v17;
        uint64_t v9 = v18;
        uint64_t v10 = sub_1005231B4((uint64_t)&v16, v17);
        __n128 v11 = __chkstk_darwin(v10, v10);
        uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v14 + 16))(v13, v11);
        sub_100667930(v7, (uint64_t)v13, (uint64_t *)&v21, v8, v9);
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v16);
      }
      else
      {
        sub_100522F00((uint64_t)&v16, &qword_10167E120);
      }
      v4 += 40;
      --v3;
    }
    while (v3);
  }
  return a2;
}

uint64_t sub_100B331D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167E120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B33238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_10167E120);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_OWORD *sub_100B332A0(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

ValueMetadata *type metadata accessor for CRLLayerAnimationFlatGroup()
{
  return &type metadata for CRLLayerAnimationFlatGroup;
}

void *initializeBufferWithCopyOfBuffer for CRLAppIntentsBoardItemsImporterError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CRLAppIntentsBoardItemsImporterError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CRLAppIntentsBoardItemsImporterError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11ClientSceneC22InternalAnimationStateOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s11ClientSceneC22InternalAnimationStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAppIntentsBoardItemsImporterError()
{
  return &type metadata for CRLAppIntentsBoardItemsImporterError;
}

uint64_t *CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName.unsafeMutableAddressor()
{
  if (qword_10166F920 != -1) {
    swift_once();
  }
  return &static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName;
}

NSString sub_100B3346C()
{
  NSString result = String._bridgeToObjectiveC()();
  static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName = (uint64_t)result;
  return result;
}

id static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName.getter()
{
  return sub_1009520A0(&qword_10166F920, (void **)&static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName);
}

uint64_t CRLDeviceManagementRestrictionsManager.isMathPaperSolvingAllowed.getter()
{
  double v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

uint64_t CRLDeviceManagementRestrictionsManager.isKeyboardMathSolvingAllowed.getter()
{
  double v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  swift_beginAccess();
  return *v1;
}

uint64_t CRLDeviceManagementRestrictionsManager.isDefinitionLookupAllowed.getter()
{
  double v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess();
  return *v1;
}

id sub_100B33780()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection;
  long long v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection);
  id v3 = v2;
  if (v2 == (void *)1)
  {
    id v3 = [self sharedConnection];
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_100522AD8(v4);
  }
  sub_10052315C(v2);
  return v3;
}

id CRLDeviceManagementRestrictionsManager.__deallocating_deinit()
{
  id v1 = sub_100B33780();
  if (v1)
  {
    long long v2 = v1;
    [v1 unregisterObserver:v0];
  }
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLDeviceManagementRestrictionsManager();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLDeviceManagementRestrictionsManager()
{
  return self;
}

void sub_100B338FC()
{
  id v0 = [objc_allocWithZone((Class)type metadata accessor for CRLDeviceManagementRestrictionsManager()) init];
  CRLDeviceManagementRestrictionsManager.registerObserver()();
  qword_101692F10 = (uint64_t)v0;
}

id static CRLDeviceManagementRestrictionsManager.shared.getter()
{
  return sub_1009520A0(&qword_10166F928, (void **)&qword_101692F10);
}

Swift::Void __swiftcall CRLDeviceManagementRestrictionsManager.registerObserver()()
{
  id v1 = sub_100B33780();
  if (v1)
  {
    long long v2 = v1;
    [v1 registerObserver:v0];
  }
  id v3 = sub_100B33780();
  if (v3)
  {
    objc_super v4 = v3;
    unsigned __int8 v5 = [v3 isMathPaperSolvingAllowed];
  }
  else
  {
    unsigned __int8 v5 = 1;
  }
  unint64_t v6 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  unsigned __int8 v7 = 1;
  swift_beginAccess();
  *unint64_t v6 = v5;
  id v8 = sub_100B33780();
  if (v8)
  {
    uint64_t v9 = v8;
    unsigned __int8 v7 = [v8 isKeyboardMathSolvingAllowed];
  }
  uint64_t v10 = (unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  unsigned __int8 v11 = 1;
  swift_beginAccess();
  *uint64_t v10 = v7;
  id v12 = sub_100B33780();
  if (v12)
  {
    uint64_t v13 = v12;
    unsigned __int8 v11 = [v12 isDefinitionLookupAllowed];
  }
  uint64_t v14 = (unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess();
  *uint64_t v14 = v11;
}

id CRLDeviceManagementRestrictionsManager.init()()
{
  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed] = 1;
  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed] = 1;
  v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed] = 1;
  *(void *)&v0[OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager____lazy_storage___connection] = 1;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLDeviceManagementRestrictionsManager();
  return [super init];
}

void _s8Freeform38CRLDeviceManagementRestrictionsManagerC63profileConnectionDidReceiveEffectiveSettingsChangedNotification_8userInfoySo09MCProfileG0CSg_SDys11AnyHashableVypGSgtF_0(void *a1)
{
  if (!a1)
  {
    __break(1u);
    return;
  }
  unsigned __int8 v3 = [a1 isMathPaperSolvingAllowed];
  objc_super v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
  swift_beginAccess();
  char v5 = v3 ^ *v4;
  if (v5) {
    *objc_super v4 = [a1 isMathPaperSolvingAllowed];
  }
  unsigned int v6 = [a1 isKeyboardMathSolvingAllowed];
  unsigned __int8 v7 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
  swift_beginAccess();
  if (v6 != *v7)
  {
    *unsigned __int8 v7 = [a1 isKeyboardMathSolvingAllowed];
    char v5 = 1;
  }
  unsigned int v8 = [a1 isDefinitionLookupAllowed];
  uint64_t v9 = (unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
  swift_beginAccess();
  if (v8 == *v9)
  {
    if ((v5 & 1) == 0) {
      return;
    }
  }
  else
  {
    *uint64_t v9 = [a1 isDefinitionLookupAllowed];
  }
  id v10 = [self defaultCenter];
  if (qword_10166F920 != -1) {
    swift_once();
  }
  [v10 postNotificationName:static CRLDeviceManagementRestrictionsManager.deviceManagementRestrictionsChangedNotificationName object:0 userInfo:0];
}

uint64_t sub_100B33E1C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100B33E58(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed, a2);
}

uint64_t sub_100B33E28(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100B33EB4(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
}

uint64_t sub_100B33E34@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100B33E58(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed, a2);
}

uint64_t sub_100B33E40(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100B33EB4(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isKeyboardMathSolvingAllowed);
}

uint64_t sub_100B33E4C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100B33E58(a1, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed, a2);
}

uint64_t sub_100B33E58@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  objc_super v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_100B33EA8(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_100B33EB4(a1, a2, a3, a4, &OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isDefinitionLookupAllowed);
}

uint64_t sub_100B33EB4(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  unsigned int v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *unsigned int v6 = v5;
  return result;
}

id sub_100B33F00()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for CRLWPObjcUserDefaults()) init];
  static CRLWPObjcUserDefaults.shared = (uint64_t)result;
  return result;
}

uint64_t *CRLWPObjcUserDefaults.shared.unsafeMutableAddressor()
{
  if (qword_10166F930 != -1) {
    swift_once();
  }
  return &static CRLWPObjcUserDefaults.shared;
}

id static CRLWPObjcUserDefaults.shared.getter()
{
  if (qword_10166F930 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static CRLWPObjcUserDefaults.shared;

  return v0;
}

Swift::Bool __swiftcall CRLWPObjcUserDefaults.spellCheckingEnabled()()
{
  if (qword_101670290 != -1) {
    swift_once();
  }
  char v0 = sub_100B3428C();
  return (v0 == 2) | v0 & 1;
}

uint64_t _s8Freeform21CRLWPObjcUserDefaultsC27automaticSpellingCorrectionSbyF_0()
{
  if (qword_101670290 != -1) {
    swift_once();
  }
  return 1;
}

id CRLWPObjcUserDefaults.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super init];
}

id sub_100B34220@<X0>(void *a1@<X8>)
{
  if (qword_10166F930 != -1) {
    swift_once();
  }
  objc_super v2 = (void *)static CRLWPObjcUserDefaults.shared;
  *a1 = static CRLWPObjcUserDefaults.shared;

  return v2;
}

uint64_t sub_100B3428C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100575CE8(&v4, v5);
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1005057FC(&qword_101672BF0);
  if (swift_dynamicCast()) {
    return v4;
  }
  else {
    return 2;
  }
}

uint64_t type metadata accessor for CRLWPObjcUserDefaults()
{
  return self;
}

uint64_t sub_100B34410(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v10;
    uint64_t v11 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v11;
    uint64_t v12 = a2[9];
    uint64_t v13 = a2[10];
    *(_DWORD *)(a1 + 88) = *((_DWORD *)a2 + 22);
    uint64_t v14 = a3[16];
    uint64_t v29 = (uint64_t)a2 + v14;
    uint64_t v30 = a1 + v14;
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = v13;
    uint64_t v15 = type metadata accessor for Date();
    Swift::String v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v30, v29, v15);
    uint64_t v16 = a3[18];
    *(_DWORD *)(v7 + a3[17]) = *(_DWORD *)((char *)a2 + a3[17]);
    *(_DWORD *)(v7 + v16) = *(_DWORD *)((char *)a2 + v16);
    uint64_t v17 = a3[19];
    uint64_t v18 = (void *)(v7 + v17);
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for UUID();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      uint64_t v22 = sub_1005057FC((uint64_t *)&unk_101674520);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    uint64_t v23 = a3[20];
    uint64_t v24 = a3[21];
    uint64_t v25 = v7 + v23;
    uint64_t v26 = (uint64_t)a2 + v23;
    *(void *)uint64_t v25 = *(void *)v26;
    *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
    *(unsigned char *)(v7 + v24) = *((unsigned char *)a2 + v24);
  }
  return v7;
}

uint64_t sub_100B346A8(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 76);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_100B3480C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v11 = a3[16];
  uint64_t v27 = a2 + v11;
  uint64_t v28 = a1 + v11;
  *(void *)(a1 + 80) = v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v28, v27, v12);
  uint64_t v13 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  uint64_t v14 = a3[19];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[20];
  uint64_t v21 = a3[21];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t sub_100B34A58(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v6 = a3[16];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + a3[18]) = *(_DWORD *)(a2 + a3[18]);
  uint64_t v10 = a3[19];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = a3[20];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  return a1;
}

uint64_t sub_100B34D60(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v9 = a3[16];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = v8;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v13) = *(_DWORD *)(a2 + v13);
  uint64_t v14 = a3[19];
  uint64_t v15 = (void *)(a1 + v14);
  int v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[20];
  uint64_t v21 = a3[21];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  return a1;
}

uint64_t sub_100B34F24(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  uint64_t v7 = a3[16];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[18];
  *(_DWORD *)(a1 + a3[17]) = *(_DWORD *)(a2 + a3[17]);
  *(_DWORD *)(a1 + v11) = *(_DWORD *)(a2 + v11);
  uint64_t v12 = a3[19];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(v13, 1, v15);
  int v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_1005057FC((uint64_t *)&unk_101674520);
    memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  uint64_t v21 = a3[20];
  uint64_t v22 = a3[21];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = a2 + v21;
  *(void *)uint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t sub_100B351CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B351E0);
}

uint64_t sub_100B351E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 64);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 76);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100B35310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B35324);
}

void *sub_100B35324(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 64);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 76);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLPKStrokePathData()
{
  uint64_t result = qword_101693040;
  if (!qword_101693040) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B354A0()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_100510764();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100B355C4()
{
  return sub_100B3BED4(&qword_1016930B8, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);
}

void sub_100B3560C(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for Date();
  uint64_t v91 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v10);
  uint64_t v90 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a3 = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 8) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 16) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 24) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 32) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 40) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 48) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 56) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 64) = &_swiftEmptyArrayStorage;
  *(void *)(a3 + 80) = 0;
  *(_DWORD *)(a3 + 88) = 0;
  uint64_t v12 = (int *)type metadata accessor for CRLPKStrokePathData();
  uint64_t v87 = a3 + v12[16];
  static Date.now.getter();
  uint64_t v88 = v12[17];
  *(_DWORD *)(a3 + v88) = 1065353216;
  uint64_t v89 = v12[18];
  *(_DWORD *)(a3 + v89) = 1065353216;
  uint64_t v13 = a3 + v12[19];
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v95 = v14;
  uint64_t v96 = v13;
  uint64_t v94 = v16;
  uint64_t v93 = v15 + 56;
  ((void (*)(uint64_t, uint64_t, uint64_t))v16)(v13, 1, 1);
  uint64_t v17 = a3 + v12[20];
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  id v98 = a1;
  uint64_t v97 = (char *)[a1 pointCount];
  if (v97)
  {
    uint64_t v82 = v12;
    uint64_t v83 = v17;
    uint64_t v84 = a3;
    BOOL v85 = v9;
    uint64_t v86 = a2;
    int v18 = 0;
    int v19 = &_swiftEmptyArrayStorage;
    uint64_t v20 = &_swiftEmptyArrayStorage;
    uint64_t v21 = &_swiftEmptyArrayStorage;
    uint64_t v22 = &_swiftEmptyArrayStorage;
    uint64_t v23 = &_swiftEmptyArrayStorage;
    uint64_t v24 = &_swiftEmptyArrayStorage;
    uint64_t v25 = &_swiftEmptyArrayStorage;
    unint64_t v104 = &_swiftEmptyArrayStorage;
    char v105 = &_swiftEmptyArrayStorage;
    do
    {
      uint64_t v103 = v24;
      uint64_t v100 = v23;
      uint64_t v26 = v22;
      uint64_t v27 = v21;
      uint64_t v28 = v20;
      [v98 strokePointCompactDataAtIndex:v18 v82, v83, v84, v85, v86];
      int v99 = (unsigned __int16)aBlock;
      int v101 = WORD1(aBlock);
      __int16 v29 = WORD2(aBlock);
      __int16 v30 = HIWORD(aBlock);
      uint64_t v31 = v107;
      uint64_t v32 = v108;
      int v33 = (unsigned __int16)v109;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v102 = v33;
      id v35 = v19;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        char v105 = sub_100F61A64(0, v105[2] + 1, 1, v105);
      }
      unint64_t v37 = v105[2];
      unint64_t v36 = v105[3];
      if (v37 >= v36 >> 1) {
        char v105 = sub_100F61A64((void *)(v36 > 1), v37 + 1, 1, v105);
      }
      id v38 = v105;
      v105[2] = v37 + 1;
      *((_WORD *)v38 + v37 + 16) = v30;
      int v19 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v19 = sub_100F61A64(0, v35[2] + 1, 1, v35);
      }
      uint64_t v20 = v28;
      unint64_t v40 = v19[2];
      unint64_t v39 = v19[3];
      uint64_t v21 = v27;
      if (v40 >= v39 >> 1) {
        int v19 = sub_100F61A64((void *)(v39 > 1), v40 + 1, 1, v19);
      }
      uint64_t v22 = v26;
      long long v19[2] = v40 + 1;
      *((_WORD *)v19 + v40 + 16) = v29;
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = v103;
      if ((v41 & 1) == 0) {
        uint64_t v20 = sub_100F61A64(0, v20[2] + 1, 1, v20);
      }
      __int16 v42 = v99;
      unint64_t v44 = v20[2];
      unint64_t v43 = v20[3];
      if (v44 >= v43 >> 1) {
        uint64_t v20 = sub_100F61A64((void *)(v43 > 1), v44 + 1, 1, v20);
      }
      v20[2] = v44 + 1;
      *((_WORD *)v20 + v44 + 16) = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v21 = sub_100F61A64(0, v21[2] + 1, 1, v21);
      }
      uint64_t v23 = v100;
      unint64_t v46 = v21[2];
      unint64_t v45 = v21[3];
      if (v46 >= v45 >> 1) {
        uint64_t v21 = sub_100F61A64((void *)(v45 > 1), v46 + 1, 1, v21);
      }
      v21[2] = v46 + 1;
      *((_WORD *)v21 + v46 + 16) = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = sub_100F61954(0, v22[2] + 1, 1, v22);
      }
      unint64_t v48 = v22[2];
      unint64_t v47 = v22[3];
      if (v48 >= v47 >> 1) {
        uint64_t v22 = sub_100F61954((void *)(v47 > 1), v48 + 1, 1, v22);
      }
      v22[2] = v48 + 1;
      *((_DWORD *)v22 + v48 + 8) = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v23 = sub_100F61954(0, v23[2] + 1, 1, v23);
      }
      unint64_t v50 = v23[2];
      unint64_t v49 = v23[3];
      if (v50 >= v49 >> 1) {
        uint64_t v23 = sub_100F61954((void *)(v49 > 1), v50 + 1, 1, v23);
      }
      v23[2] = v50 + 1;
      *((_DWORD *)v23 + v50 + 8) = HIDWORD(v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = sub_100F61954(0, v24[2] + 1, 1, v24);
      }
      unint64_t v52 = v24[2];
      unint64_t v51 = v24[3];
      if (v52 >= v51 >> 1) {
        uint64_t v24 = sub_100F61954((void *)(v51 > 1), v52 + 1, 1, v24);
      }
      v24[2] = v52 + 1;
      *((_DWORD *)v24 + v52 + 8) = v32;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v25 = sub_100F61954(0, v25[2] + 1, 1, v25);
      }
      unint64_t v54 = v25[2];
      unint64_t v53 = v25[3];
      if (v54 >= v53 >> 1) {
        uint64_t v25 = sub_100F61954((void *)(v53 > 1), v54 + 1, 1, v25);
      }
      v25[2] = v54 + 1;
      *((_DWORD *)v25 + v54 + 8) = HIDWORD(v32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v104 = sub_100F61A64(0, v104[2] + 1, 1, v104);
      }
      unint64_t v56 = v104[2];
      unint64_t v55 = v104[3];
      if (v56 >= v55 >> 1) {
        unint64_t v104 = sub_100F61A64((void *)(v55 > 1), v56 + 1, 1, v104);
      }
      ++v18;
      id v57 = v104;
      v104[2] = v56 + 1;
      *((_WORD *)v57 + v56 + 16) = v102;
    }
    while (v97 != v18);
    a3 = v84;
    NSString v58 = v104;
    *(void *)(v84 + 56) = v25;
    *(void *)(a3 + 64) = v58;
    *(void *)(a3 + 40) = v23;
    *(void *)(a3 + 48) = v24;
    *(void *)(a3 + 24) = v21;
    *(void *)(a3 + 32) = v22;
    *(void *)(a3 + 8) = v19;
    *(void *)(a3 + 16) = v20;
    *(void *)a3 = v105;
    a2 = v86;
    uint64_t v9 = v85;
    uint64_t v17 = v83;
    uint64_t v12 = v82;
  }
  uint64_t v59 = v12[21];
  id v60 = v98;
  *(unsigned char *)(a3 + v59) = [v98 shouldSolveMath];
  unint64_t v61 = (unint64_t)[v60 pointCount];
  if ((v61 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a3 + 72) = v61;
    sub_100B35FB4();
    if (a2)
    {
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = &_swiftEmptyArrayStorage;
      uint64_t v63 = (uint64_t *)(v62 + 16);
      id v110 = sub_10089DD4C;
      uint64_t v111 = v62;
      aBlock = _NSConcreteStackBlock;
      uint64_t v107 = *(void *)"";
      uint64_t v108 = sub_100AAF588;
      id v109 = &unk_101524E78;
      uint64_t v64 = _Block_copy(&aBlock);
      id v65 = a2;
      swift_retain();
      swift_release();
      [v65 iteratePathElementsWithBlock:v64];

      _Block_release(v64);
      swift_beginAccess();
      uint64_t v66 = *v63;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v66 = 0;
    }
    *(void *)(a3 + 80) = v66;
    id v67 = v98;
    *(_DWORD *)(a3 + 88) = [v98 randomSeed];
    id v68 = [v67 creationDate];
    uint64_t v69 = v90;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 40))(v87, v69, v92);
    [v67 renderScaleX];
    *(_DWORD *)(a3 + v88) = v70;
    [v67 renderScaleY];
    *(_DWORD *)(a3 + v89) = v71;
    id v72 = [v67 renderGroupID];
    if (v72)
    {
      char v73 = v72;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v74 = 1;
    }
    v94(v9, v74, 1, v95);
    sub_10068EA54((uint64_t)v9, v96);
    id v75 = v98;
    [v98 anchorPointForTexture];
    double v77 = v76;
    double v79 = v78;

    if (v77 != 0.0 || v79 != 0.0)
    {
      *(float *)&unsigned int v80 = v77;
      *(float *)&unsigned int v81 = v79;
      *(void *)uint64_t v17 = v80 | ((unint64_t)v81 << 32);
      *(unsigned char *)(v17 + 8) = 0;
    }
  }
}

void sub_100B35FB4()
{
  uint64_t v1 = type metadata accessor for CRLPKStrokePathData();
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v3, v6);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v39 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v24 = (char *)&v39 - v23;
  uint64_t v25 = v0[9];
  uint64_t v26 = *(void *)(*v0 + 16);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)&v39 - v23, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v25 != v26)
  {
    sub_100B3BDC0((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    sub_100B3BCF0((uint64_t)v0, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_10;
  }
  uint64_t v27 = *((void *)v24 + 9);
  uint64_t v28 = *(void *)(*((void *)v24 + 1) + 16);
  sub_100B3BDC0((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v27 != v28)
  {
LABEL_10:
    sub_100B3BDC0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    sub_100B3BCF0((uint64_t)v0, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_11;
  }
  uint64_t v29 = *((void *)v21 + 9);
  uint64_t v30 = *(void *)(*((void *)v21 + 2) + 16);
  sub_100B3BDC0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v29 != v30)
  {
LABEL_11:
    sub_100B3BDC0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    sub_100B3BCF0((uint64_t)v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_12;
  }
  uint64_t v31 = *((void *)v17 + 9);
  uint64_t v32 = *(void *)(*((void *)v17 + 3) + 16);
  sub_100B3BDC0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v31 != v32)
  {
LABEL_12:
    sub_100B3BDC0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    sub_100B3BCF0((uint64_t)v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_13;
  }
  uint64_t v33 = *((void *)v13 + 9);
  uint64_t v34 = *(void *)(*((void *)v13 + 4) + 16);
  sub_100B3BDC0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v33 != v34)
  {
LABEL_13:
    sub_100B3BDC0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    sub_100B3BCF0((uint64_t)v0, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_14;
  }
  uint64_t v35 = *((void *)v9 + 9);
  uint64_t v36 = *(void *)(*((void *)v9 + 5) + 16);
  sub_100B3BDC0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  sub_100B3BCF0((uint64_t)v0, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v35 != v36)
  {
LABEL_14:
    sub_100B3BDC0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    goto LABEL_15;
  }
  uint64_t v37 = *((void *)v5 + 9);
  uint64_t v38 = *(void *)(*((void *)v5 + 6) + 16);
  sub_100B3BDC0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  if (v37 != v38)
  {
LABEL_15:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"verifyConsistentPointCount()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 124, (uint64_t)"The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u, (uint64_t)&_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)&_swiftEmptyArrayStorage, (uint64_t)"verifyConsistentPointCount()", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 124);
  }
}

uint64_t sub_100B364B0()
{
  uint64_t v1 = (void *)v0;
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 72);
  if (v6 < 0) {
    goto LABEL_30;
  }
  uint64_t v7 = *(unsigned int *)(v0 + 88);
  uint64_t v8 = (int *)type metadata accessor for CRLPKStrokePathData();
  id v9 = objc_allocWithZone((Class)CRLPKStrokePathCompactData);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v11 = [v9 initWithCapacity:v6 randomSeed:v7 creationDate:isa];

  LODWORD(v12) = *(_DWORD *)((char *)v1 + v8[17]);
  [v11 setRenderScaleX:v12];
  LODWORD(v13) = *(_DWORD *)((char *)v1 + v8[18]);
  [v11 setRenderScaleY:v13];
  sub_100522E9C((uint64_t)v1 + v8[19], (uint64_t)v5, (uint64_t *)&unk_101674520);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  Class v16 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14) != 1)
  {
    Class v16 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v14);
  }
  [v11 setRenderGroupID:v16];

  [v11 setShouldSolveMath:*((unsigned __int8 *)v1 + v8[21])];
  uint64_t v17 = (float *)((char *)v1 + v8[20]);
  if (((_BYTE)v17[2] & 1) == 0) {
    [v11 setAnchorPointForTexture:*v17, v17[1]];
  }
  uint64_t v18 = v1[9];
  if (v18 < 0)
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v18) {
    return (uint64_t)v11;
  }
  uint64_t v19 = v1[2];
  unint64_t v20 = v18 - 1;
  if ((unint64_t)(v18 - 1) >= *(void *)(v19 + 16)) {
    goto LABEL_21;
  }
  uint64_t v21 = v1[3];
  if (v20 >= *(void *)(v21 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v22 = v1[1];
  if (v20 >= *(void *)(v22 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v23 = *v1;
  if (v20 >= *(void *)(*v1 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v24 = v1[4];
  if (v20 >= *(void *)(v24 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v25 = v1[5];
  if (v20 >= *(void *)(v25 + 16))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v26 = v1[6];
  if (v20 >= *(void *)(v26 + 16))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v27 = v1[7];
  if (v20 < *(void *)(v27 + 16))
  {
    uint64_t v28 = v1[8];
    if (v20 < *(void *)(v28 + 16))
    {
      uint64_t v29 = 0;
      uint64_t v48 = v19 + 32;
      uint64_t v47 = v21 + 32;
      uint64_t v30 = v22 + 32;
      uint64_t v31 = v23 + 32;
      uint64_t v32 = v24 + 32;
      uint64_t v33 = v25 + 32;
      uint64_t v34 = v26 + 32;
      uint64_t v35 = v27 + 32;
      uint64_t v36 = v28 + 32;
      do
      {
        __int16 v37 = *(_WORD *)(v47 + 2 * v29);
        __int16 v38 = *(_WORD *)(v30 + 2 * v29);
        __int16 v39 = *(_WORD *)(v31 + 2 * v29);
        int v40 = *(_DWORD *)(v32 + 4 * v29);
        int v41 = *(_DWORD *)(v33 + 4 * v29);
        int v42 = *(_DWORD *)(v34 + 4 * v29);
        int v43 = *(_DWORD *)(v35 + 4 * v29);
        __int16 v44 = *(_WORD *)(v36 + 2 * v29);
        v49[0] = *(_WORD *)(v48 + 2 * v29);
        uint64_t v45 = v29 + 1;
        v49[1] = v37;
        void v49[2] = v38;
        v49[3] = v39;
        int v50 = v40;
        int v51 = v41;
        int v52 = v42;
        int v53 = v43;
        __int16 v54 = v44;
        [v11 appendStrokePointCompactData:v49, v47, v48];
        uint64_t v29 = v45;
      }
      while (v18 != v45);
      return (uint64_t)v11;
    }
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100B36884(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 > a1 >> 32)
      {
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      sub_100510D4C(a1, a2);
      uint64_t v5 = __DataStorage._bytes.getter();
      if (!v5)
      {
LABEL_14:
        __DataStorage._length.getter();
        __break(1u);
LABEL_15:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x100B3699CLL);
      }
      uint64_t v6 = v5;
      uint64_t v7 = __DataStorage._offset.getter();
      uint64_t v8 = (int)a1 - v7;
      if (__OFSUB__((int)a1, v7))
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      __DataStorage._length.getter();
      uint64_t v4 = *(unsigned __int16 *)(v6 + v8);
      sub_100510084(a1, a2);
      return v4;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      swift_retain();
      swift_retain();
      uint64_t v10 = __DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_15;
      }
      uint64_t v11 = v10;
      uint64_t v12 = __DataStorage._offset.getter();
      BOOL v13 = __OFSUB__(v9, v12);
      uint64_t v14 = v9 - v12;
      if (v13) {
        goto LABEL_12;
      }
      __DataStorage._length.getter();
      uint64_t v4 = *(unsigned __int16 *)(v11 + v14);
      swift_release();
      swift_release();
      return v4;
    case 3uLL:
      return v4;
    default:
      return a1;
  }
}

float sub_100B369AC(uint64_t a1, unint64_t a2)
{
  float v2 = 0.0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if ((int)a1 > a1 >> 32)
      {
        __break(1u);
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      sub_100510D4C(a1, a2);
      uint64_t v5 = __DataStorage._bytes.getter();
      if (!v5)
      {
LABEL_14:
        __DataStorage._length.getter();
        __break(1u);
LABEL_15:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x100B36ACCLL);
      }
      uint64_t v6 = v5;
      uint64_t v7 = __DataStorage._offset.getter();
      uint64_t v8 = (int)a1 - v7;
      if (__OFSUB__((int)a1, v7))
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      __DataStorage._length.getter();
      float v2 = *(float *)(v6 + v8);
      sub_100510084(a1, a2);
      return v2;
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      swift_retain();
      swift_retain();
      uint64_t v10 = __DataStorage._bytes.getter();
      if (!v10) {
        goto LABEL_15;
      }
      uint64_t v11 = v10;
      uint64_t v12 = __DataStorage._offset.getter();
      BOOL v13 = __OFSUB__(v9, v12);
      uint64_t v14 = v9 - v12;
      if (v13) {
        goto LABEL_12;
      }
      __DataStorage._length.getter();
      float v2 = *(float *)(v11 + v14);
      swift_release();
      swift_release();
      return v2;
    case 3uLL:
      return v2;
    default:
      return *(float *)&a1;
  }
}

uint64_t sub_100B36ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v300 = type metadata accessor for CRLProto_Path(0);
  uint64_t v315 = *(void *)(v300 - 8);
  __chkstk_darwin(v300, v4);
  uint64_t v289 = (uint64_t *)((char *)&v279 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  uint64_t v318 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v320 = (uint64_t)&v279 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_1016930D8);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v288 = (uint64_t)&v279 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  __int16 v316 = (char *)&v279 - v14;
  uint64_t v302 = type metadata accessor for CRLProto_Point(0);
  uint64_t v313 = *(void *)(v302 - 8);
  __chkstk_darwin(v302, v15);
  uint64_t v290 = (uint64_t *)((char *)&v279 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1005057FC(&qword_10168E570);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v291 = (uint64_t)&v279 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v301 = (uint64_t)&v279 - v22;
  uint64_t v23 = type metadata accessor for CRLProto_Data(0);
  uint64_t v311 = *(void *)(v23 - 8);
  uint64_t v312 = v23;
  __chkstk_darwin(v23, v24);
  __int16 v299 = (uint64_t *)((char *)&v279 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v292 = (char *)&v279 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v29 - 8, v30);
  uint64_t v298 = (uint64_t)&v279 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v33);
  int v310 = (char *)&v279 - v34;
  uint64_t v307 = type metadata accessor for CRLProto_Date(0);
  uint64_t v306 = *(void *)(v307 - 8);
  __chkstk_darwin(v307, v35);
  uint64_t v309 = (uint64_t *)((char *)&v279 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v296 = type metadata accessor for Date();
  uint64_t v295 = *(void *)(v296 - 8);
  __chkstk_darwin(v296, v37);
  uint64_t v308 = (char *)&v279 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1005057FC(&qword_1016930C8);
  __chkstk_darwin(v39 - 8, v40);
  uint64_t v294 = (uint64_t)&v279 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42, v43);
  uint64_t v303 = (uint64_t)&v279 - v44;
  uint64_t v45 = type metadata accessor for BinaryDecodingOptions();
  __chkstk_darwin(v45 - 8, v46);
  int v314 = (char *)&v279 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v317 = (int *)type metadata accessor for CRLProto_PKStrokePathData(0);
  __chkstk_darwin(v317, v48);
  uint64_t v319 = (uint64_t)&v279 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a2 = _swiftEmptyArrayStorage;
  *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 16) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 24) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 32) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 40) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 48) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 56) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 64) = _swiftEmptyArrayStorage;
  int v50 = (int *)type metadata accessor for CRLPKStrokePathData();
  *(void *)(a2 + 72) = 0;
  *(void *)(a2 + 80) = 0;
  *(_DWORD *)(a2 + 88) = 0;
  uint64_t v293 = a2 + v50[16];
  static Date.now.getter();
  uint64_t v304 = v50[17];
  *(_DWORD *)(a2 + v304) = 1065353216;
  uint64_t v305 = v50[18];
  *(_DWORD *)(a2 + v305) = 1065353216;
  uint64_t v51 = a2 + v50[19];
  uint64_t v52 = type metadata accessor for UUID();
  uint64_t v53 = *(void *)(v52 - 8);
  __int16 v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  uint64_t v55 = v53 + 56;
  uint64_t v297 = v51;
  v54(v51, 1, 1, v52);
  uint64_t v56 = a2 + v50[20];
  *(void *)uint64_t v56 = 0;
  *(unsigned char *)(v56 + 8) = 1;
  uint64_t v57 = v50[21];
  uint64_t v322 = a2;
  *(unsigned char *)(a2 + v57) = 0;
  NSString v58 = v321;
  dispatch thunk of CRDecoder.valueContainer()();
  if (v58)
  {
    swift_release();
    return sub_100B3BDC0(v322, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  }
  uint64_t v285 = v55;
  uint64_t v321 = v54;
  uint64_t v284 = v52;
  uint64_t v282 = v56;
  uint64_t v283 = v57;
  uint64_t v287 = a1;
  uint64_t v286 = (void *)(a2 + 72);
  uint64_t v59 = dispatch thunk of CRDecoder.CRValueContainer.decode(_:)();
  unint64_t v61 = v60;
  swift_release();
  uint64_t v324 = 0;
  memset(v323, 0, sizeof(v323));
  sub_100510D4C(v59, v61);
  BinaryDecodingOptions.init()();
  sub_100B3BED4(&qword_1016930D0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
  uint64_t v62 = v319;
  uint64_t v63 = v317;
  Message.init(serializedData:extensions:partial:options:)();
  uint64_t v281 = 0;
  uint64_t v280 = v59;
  uint64_t v65 = v62 + v63[7];
  if ((*(unsigned char *)(v65 + 4) & 1) == 0) {
    *(_DWORD *)(v322 + 88) = *(_DWORD *)v65;
  }
  uint64_t v66 = v62 + v63[8];
  uint64_t v67 = v303;
  sub_100522E9C(v66, v303, &qword_1016930C8);
  id v68 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v306 + 48);
  uint64_t v69 = v307;
  int v70 = v68(v67, 1, v307);
  sub_100522F00(v67, &qword_1016930C8);
  BOOL v71 = v70 == 1;
  uint64_t v72 = v311;
  char v73 = v309;
  uint64_t v74 = v308;
  if (!v71)
  {
    uint64_t v75 = v66;
    uint64_t v76 = v294;
    sub_100522E9C(v75, v294, &qword_1016930C8);
    if (v68(v76, 1, v69) == 1)
    {
      *char v73 = 0;
      UnknownStorage.init()();
      sub_100522F00(v76, &qword_1016930C8);
    }
    else
    {
      sub_100B3BD58(v76, (uint64_t)v73, type metadata accessor for CRLProto_Date);
    }
    uint64_t v77 = v296;
    uint64_t v78 = v295;
    uint64_t v79 = v293;
    sub_100B3BDC0((uint64_t)v73, type metadata accessor for CRLProto_Date);
    Date.init(timeIntervalSinceReferenceDate:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 40))(v79, v74, v77);
  }
  unsigned int v80 = v317;
  uint64_t v81 = v62 + v317[9];
  uint64_t v82 = v322;
  if ((*(unsigned char *)(v81 + 4) & 1) == 0) {
    *(_DWORD *)(v322 + v304) = *(_DWORD *)v81;
  }
  uint64_t v309 = (void *)v61;
  uint64_t v83 = v62 + v80[10];
  uint64_t v84 = v315;
  uint64_t v85 = (uint64_t)v310;
  if ((*(unsigned char *)(v83 + 4) & 1) == 0) {
    *(_DWORD *)(v82 + v305) = *(_DWORD *)v83;
  }
  uint64_t v86 = v62 + v80[12];
  sub_100522E9C(v86, v85, (uint64_t *)&unk_101674160);
  uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
  uint64_t v88 = v312;
  int v89 = v87(v85, 1, v312);
  sub_100522F00(v85, (uint64_t *)&unk_101674160);
  uint64_t v90 = v318;
  if (v89 == 1)
  {
    uint64_t v91 = v319;
    uint64_t v92 = v313;
  }
  else
  {
    uint64_t v93 = v86;
    uint64_t v94 = v298;
    sub_100522E9C(v93, v298, (uint64_t *)&unk_101674160);
    if (v87(v94, 1, v88) == 1)
    {
      uint64_t v95 = v299;
      *(_OWORD *)__int16 v299 = xmmword_101180360;
      UnknownStorage.init()();
      sub_100522F00(v94, (uint64_t *)&unk_101674160);
    }
    else
    {
      uint64_t v95 = v299;
      sub_100B3BD58(v94, (uint64_t)v299, type metadata accessor for CRLProto_Data);
    }
    uint64_t v91 = v319;
    uint64_t v96 = v297;
    uint64_t v97 = v284;
    uint64_t v98 = (uint64_t)v292;
    uint64_t v99 = *v95;
    unint64_t v100 = v95[1];
    sub_100510D4C(*v95, v100);
    sub_100B3BDC0((uint64_t)v95, type metadata accessor for CRLProto_Data);
    uint64_t v101 = v281;
    UUID.init(crl_data:)(v99, v100);
    uint64_t v281 = v101;
    uint64_t v92 = v313;
    if (v101)
    {
      sub_100510084(v280, (unint64_t)v309);
      swift_release();
      sub_100B3BDC0(v91, type metadata accessor for CRLProto_PKStrokePathData);
      return sub_100B3BDC0(v322, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
    }
    v321(v98, 0, 1, v97);
    sub_10068EA54(v98, v96);
  }
  uint64_t v102 = v91 + v317[11];
  uint64_t v103 = v301;
  sub_100522E9C(v102, v301, &qword_10168E570);
  unint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
  uint64_t v105 = v302;
  int v106 = v104(v103, 1, v302);
  sub_100522F00(v103, &qword_10168E570);
  BOOL v71 = v106 == 1;
  uint64_t v107 = (uint64_t *)v320;
  if (!v71)
  {
    uint64_t v108 = v102;
    uint64_t v109 = v291;
    sub_100522E9C(v108, v291, &qword_10168E570);
    if (v104(v109, 1, v105) == 1)
    {
      id v110 = v290;
      *uint64_t v290 = 0;
      UnknownStorage.init()();
      sub_100522F00(v109, &qword_10168E570);
    }
    else
    {
      id v110 = v290;
      sub_100B3BD58(v109, (uint64_t)v290, type metadata accessor for CRLProto_Point);
    }
    uint64_t v111 = v282;
    uint64_t v112 = *v110;
    sub_100B3BDC0((uint64_t)v110, type metadata accessor for CRLProto_Point);
    *(void *)uint64_t v111 = v112;
    *(unsigned char *)(v111 + 8) = 0;
  }
  int v113 = *(unsigned __int8 *)(v319 + v317[13]);
  uint64_t v114 = v84;
  if (v113 != 2) {
    *(unsigned char *)(v322 + v283) = v113 & 1;
  }
  uint64_t v115 = (double *)static Array._allocateBufferUninitialized(minimumCapacity:)();
  *((void *)v115 + 2) = 2;
  v115[4] = 0.0;
  uint64_t v116 = (uint64_t)v316;
  int v310 = *(char **)(*(void *)v319 + 16);
  uint64_t v117 = v286;
  if (v310)
  {
    LODWORD(v321) = 0;
    LODWORD(v311) = 0;
    LODWORD(v312) = 0;
    LODWORD(v313) = 0;
    LODWORD(v314) = 0;
    unint64_t v118 = 0;
    float v119 = 0.0;
    float v120 = 0.0;
    while (1)
    {
      if ((unint64_t)v118 >= *(void *)(*(void *)v319 + 16))
      {
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
LABEL_241:
        __break(1u);
LABEL_242:
        __break(1u);
LABEL_243:
        __break(1u);
LABEL_244:
        __break(1u);
LABEL_245:
        __break(1u);
LABEL_246:
        __break(1u);
LABEL_247:
        __break(1u);
LABEL_248:
        __break(1u);
LABEL_249:
        __break(1u);
LABEL_250:
        __break(1u);
LABEL_251:
        __break(1u);
LABEL_252:
        __break(1u);
LABEL_253:
        __break(1u);
LABEL_254:
        __break(1u);
LABEL_255:
        __break(1u);
LABEL_256:
        __break(1u);
LABEL_257:
        __break(1u);
LABEL_258:
        __break(1u);
LABEL_259:
        __break(1u);
LABEL_260:
        __break(1u);
LABEL_261:
        __break(1u);
LABEL_262:
        __break(1u);
LABEL_263:
        __break(1u);
LABEL_264:
        __break(1u);
LABEL_265:
        __break(1u);
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
LABEL_271:
        __break(1u);
LABEL_272:
        __break(1u);
      }
      char v121 = v118 + 1;
      sub_100B3BCF0(*(void *)v319+ ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80))+ *(void *)(v90 + 72) * (void)v118, (uint64_t)v107, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      uint64_t v122 = *v107;
      unint64_t v123 = v107[1];
      switch(v123 >> 62)
      {
        case 1uLL:
          LODWORD(v124) = HIDWORD(v122) - v122;
          if (__OFSUB__(HIDWORD(v122), v122)) {
            goto LABEL_241;
          }
          uint64_t v124 = (int)v124;
LABEL_39:
          if (v124 == 2) {
            LODWORD(v314) = sub_100B36884(v122, v123);
          }
LABEL_41:
          uint64_t v128 = v107[2];
          unint64_t v129 = v107[3];
          switch(v129 >> 62)
          {
            case 1uLL:
              LODWORD(v130) = HIDWORD(v128) - v128;
              if (__OFSUB__(HIDWORD(v128), v128)) {
                goto LABEL_243;
              }
              uint64_t v130 = (int)v130;
LABEL_46:
              if (v130 == 2) {
                LODWORD(v313) = sub_100B36884(v128, v129);
              }
LABEL_48:
              uint64_t v133 = v107[4];
              unint64_t v134 = v107[5];
              switch(v134 >> 62)
              {
                case 1uLL:
                  LODWORD(v135) = HIDWORD(v133) - v133;
                  if (__OFSUB__(HIDWORD(v133), v133)) {
                    goto LABEL_245;
                  }
                  uint64_t v135 = (int)v135;
LABEL_53:
                  if (v135 == 2) {
                    LODWORD(v312) = sub_100B36884(v133, v134);
                  }
LABEL_55:
                  uint64_t v138 = v107[6];
                  unint64_t v139 = v107[7];
                  switch(v139 >> 62)
                  {
                    case 1uLL:
                      LODWORD(v140) = HIDWORD(v138) - v138;
                      if (__OFSUB__(HIDWORD(v138), v138)) {
                        goto LABEL_247;
                      }
                      uint64_t v140 = (int)v140;
LABEL_60:
                      if (v140 == 2) {
                        LODWORD(v311) = sub_100B36884(v138, v139);
                      }
LABEL_62:
                      uint64_t v143 = v107[14];
                      unint64_t v144 = v107[15];
                      switch(v144 >> 62)
                      {
                        case 1uLL:
                          LODWORD(v145) = HIDWORD(v143) - v143;
                          if (__OFSUB__(HIDWORD(v143), v143)) {
                            goto LABEL_249;
                          }
                          uint64_t v145 = (int)v145;
LABEL_67:
                          if (v145 >= 1) {
                            LODWORD(v321) = sub_100B36884(v143, v144);
                          }
                          break;
                        case 2uLL:
                          uint64_t v147 = *(void *)(v143 + 16);
                          uint64_t v146 = *(void *)(v143 + 24);
                          BOOL v127 = __OFSUB__(v146, v147);
                          uint64_t v145 = v146 - v147;
                          if (!v127) {
                            goto LABEL_67;
                          }
                          goto LABEL_250;
                        case 3uLL:
                          goto LABEL_69;
                        default:
                          uint64_t v145 = BYTE6(v144);
                          goto LABEL_67;
                      }
                      break;
                    case 2uLL:
                      uint64_t v142 = *(void *)(v138 + 16);
                      uint64_t v141 = *(void *)(v138 + 24);
                      BOOL v127 = __OFSUB__(v141, v142);
                      uint64_t v140 = v141 - v142;
                      if (!v127) {
                        goto LABEL_60;
                      }
                      goto LABEL_248;
                    case 3uLL:
                      goto LABEL_62;
                    default:
                      uint64_t v140 = BYTE6(v139);
                      goto LABEL_60;
                  }
                  break;
                case 2uLL:
                  uint64_t v137 = *(void *)(v133 + 16);
                  uint64_t v136 = *(void *)(v133 + 24);
                  BOOL v127 = __OFSUB__(v136, v137);
                  uint64_t v135 = v136 - v137;
                  if (!v127) {
                    goto LABEL_53;
                  }
                  goto LABEL_246;
                case 3uLL:
                  goto LABEL_55;
                default:
                  uint64_t v135 = BYTE6(v134);
                  goto LABEL_53;
              }
              break;
            case 2uLL:
              uint64_t v132 = *(void *)(v128 + 16);
              uint64_t v131 = *(void *)(v128 + 24);
              BOOL v127 = __OFSUB__(v131, v132);
              uint64_t v130 = v131 - v132;
              if (!v127) {
                goto LABEL_46;
              }
              goto LABEL_244;
            case 3uLL:
              goto LABEL_48;
            default:
              uint64_t v130 = BYTE6(v129);
              goto LABEL_46;
          }
          break;
        case 2uLL:
          uint64_t v126 = *(void *)(v122 + 16);
          uint64_t v125 = *(void *)(v122 + 24);
          BOOL v127 = __OFSUB__(v125, v126);
          uint64_t v124 = v125 - v126;
          if (!v127) {
            goto LABEL_39;
          }
          goto LABEL_242;
        case 3uLL:
          goto LABEL_41;
        default:
          uint64_t v124 = BYTE6(v123);
          goto LABEL_39;
      }
LABEL_69:
      uint64_t v148 = v107[10];
      unint64_t v149 = v107[11];
      unint64_t v150 = v149 >> 62;
      switch(v149 >> 62)
      {
        case 1uLL:
          LODWORD(v151) = HIDWORD(v148) - v148;
          if (__OFSUB__(HIDWORD(v148), v148)) {
            goto LABEL_251;
          }
          uint64_t v151 = (int)v151;
LABEL_74:
          if (v151 == 4)
          {
            float v120 = sub_100B369AC(v148, v149);
          }
          else
          {
            if (v150)
            {
              if (v150 == 1)
              {
                LODWORD(v154) = HIDWORD(v148) - v148;
                if (__OFSUB__(HIDWORD(v148), v148)) {
                  goto LABEL_259;
                }
                uint64_t v154 = (int)v154;
              }
              else
              {
                uint64_t v156 = *(void *)(v148 + 16);
                uint64_t v155 = *(void *)(v148 + 24);
                BOOL v127 = __OFSUB__(v155, v156);
                uint64_t v154 = v155 - v156;
                if (v127) {
                  goto LABEL_260;
                }
              }
            }
            else
            {
              uint64_t v154 = BYTE6(v149);
            }
            if (v154 == 2) {
              float v120 = (float)(unsigned __int16)sub_100B36884(v148, v149);
            }
          }
          break;
        case 2uLL:
          uint64_t v153 = *(void *)(v148 + 16);
          uint64_t v152 = *(void *)(v148 + 24);
          BOOL v127 = __OFSUB__(v152, v153);
          uint64_t v151 = v152 - v153;
          if (!v127) {
            goto LABEL_74;
          }
          goto LABEL_252;
        case 3uLL:
          break;
        default:
          uint64_t v151 = BYTE6(v149);
          goto LABEL_74;
      }
      uint64_t v157 = v107[12];
      unint64_t v158 = v107[13];
      unint64_t v159 = v158 >> 62;
      switch(v158 >> 62)
      {
        case 1uLL:
          LODWORD(v160) = HIDWORD(v157) - v157;
          if (__OFSUB__(HIDWORD(v157), v157)) {
            goto LABEL_253;
          }
          uint64_t v160 = (int)v160;
LABEL_89:
          if (v160 == 4)
          {
            float v119 = sub_100B369AC(v157, v158);
          }
          else
          {
            if (v159)
            {
              if (v159 == 1)
              {
                LODWORD(v163) = HIDWORD(v157) - v157;
                if (__OFSUB__(HIDWORD(v157), v157)) {
                  goto LABEL_261;
                }
                uint64_t v163 = (int)v163;
              }
              else
              {
                uint64_t v165 = *(void *)(v157 + 16);
                uint64_t v164 = *(void *)(v157 + 24);
                BOOL v127 = __OFSUB__(v164, v165);
                uint64_t v163 = v164 - v165;
                if (v127) {
                  goto LABEL_262;
                }
              }
            }
            else
            {
              uint64_t v163 = BYTE6(v158);
            }
            if (v163 == 2) {
              float v119 = (float)(unsigned __int16)sub_100B36884(v157, v158);
            }
          }
          break;
        case 2uLL:
          uint64_t v162 = *(void *)(v157 + 16);
          uint64_t v161 = *(void *)(v157 + 24);
          BOOL v127 = __OFSUB__(v161, v162);
          uint64_t v160 = v161 - v162;
          if (!v127) {
            goto LABEL_89;
          }
          goto LABEL_254;
        case 3uLL:
          break;
        default:
          uint64_t v160 = BYTE6(v158);
          goto LABEL_89;
      }
      uint64_t v166 = v107[8];
      unint64_t v167 = v107[9];
      unint64_t v168 = v167 >> 62;
      switch(v167 >> 62)
      {
        case 1uLL:
          LODWORD(v169) = HIDWORD(v166) - v166;
          if (__OFSUB__(HIDWORD(v166), v166)) {
            goto LABEL_255;
          }
          uint64_t v169 = (int)v169;
LABEL_104:
          if (v169 < 1) {
            goto LABEL_183;
          }
          if (v168)
          {
            if (v168 == 1)
            {
              LODWORD(v172) = HIDWORD(v166) - v166;
              if (__OFSUB__(HIDWORD(v166), v166)) {
                goto LABEL_257;
              }
              uint64_t v172 = (int)v172;
            }
            else
            {
              uint64_t v174 = *(void *)(v166 + 16);
              uint64_t v173 = *(void *)(v166 + 24);
              BOOL v127 = __OFSUB__(v173, v174);
              uint64_t v172 = v173 - v174;
              if (v127) {
                goto LABEL_258;
              }
            }
          }
          else
          {
            uint64_t v172 = BYTE6(v167);
          }
          if (v172 != 4) {
            goto LABEL_147;
          }
          swift_bridgeObjectRelease();
          if (!v168)
          {
            *(void *)&v323[0] = v166;
            WORD4(v323[0]) = v167;
            BYTE10(v323[0]) = BYTE2(v167);
            BYTE11(v323[0]) = BYTE3(v167);
            BYTE12(v323[0]) = BYTE4(v167);
            BYTE13(v323[0]) = BYTE5(v167);
            uint64_t v182 = sub_1006BAB54((char *)v323, (v167 >> 49) & 0x7F);
            goto LABEL_132;
          }
          if (v168 == 1)
          {
            if (v166 >> 32 < (int)v166) {
              goto LABEL_265;
            }
            swift_retain();
            uint64_t v175 = __DataStorage._bytes.getter();
            if (v175)
            {
              uint64_t v176 = v175;
              uint64_t v177 = __DataStorage._offset.getter();
              uint64_t v178 = (int)v166 - v177;
              if (__OFSUB__((int)v166, v177)) {
                goto LABEL_269;
              }
              uint64_t v179 = __DataStorage._length.getter();
              uint64_t v180 = (char *)(v176 + v178);
              if (v179 >= (v166 >> 32) - (int)v166) {
                uint64_t v179 = (v166 >> 32) - (int)v166;
              }
              uint64_t v181 = v179 / 2;
            }
            else
            {
              __DataStorage._length.getter();
              uint64_t v180 = 0;
              uint64_t v181 = 0;
            }
            uint64_t v182 = sub_1006BAB54(v180, v181);
            sub_100510084(v166, v167);
            uint64_t v90 = v318;
LABEL_132:
            uint64_t v115 = _swiftEmptyArrayStorage;
            int64_t v191 = *((void *)v182 + 2);
            if (!v191) {
              goto LABEL_145;
            }
            goto LABEL_133;
          }
          uint64_t v183 = *(void *)(v166 + 16);
          uint64_t v184 = *(void *)(v166 + 24);
          swift_retain();
          swift_retain();
          unint64_t v185 = (char *)__DataStorage._bytes.getter();
          if (v185)
          {
            uint64_t v186 = __DataStorage._offset.getter();
            if (__OFSUB__(v183, v186)) {
              goto LABEL_270;
            }
            v185 += v183 - v186;
          }
          BOOL v127 = __OFSUB__(v184, v183);
          uint64_t v187 = v184 - v183;
          if (v127) {
            goto LABEL_266;
          }
          uint64_t v188 = __DataStorage._length.getter();
          uint64_t v115 = _swiftEmptyArrayStorage;
          if (v185)
          {
            if (v188 >= v187) {
              uint64_t v189 = v187;
            }
            else {
              uint64_t v189 = v188;
            }
            uint64_t v190 = v189 / 2;
          }
          else
          {
            uint64_t v190 = 0;
          }
          uint64_t v182 = sub_1006BAB54(v185, v190);
          swift_release();
          swift_release();
          int64_t v191 = *((void *)v182 + 2);
          if (!v191)
          {
LABEL_145:
            swift_bridgeObjectRelease();
            uint64_t v193 = _swiftEmptyArrayStorage;
            int64_t v197 = *(void *)&_swiftEmptyArrayStorage[2];
            if (v197) {
              goto LABEL_138;
            }
            goto LABEL_146;
          }
LABEL_133:
          *(void *)&v323[0] = _swiftEmptyArrayStorage;
          sub_1006BBB04(0, v191, 0);
          uint64_t v192 = 0;
          uint64_t v193 = *(double **)&v323[0];
          unint64_t v194 = *(void *)(*(void *)&v323[0] + 16);
          do
          {
            __int16 v195 = *((_WORD *)v182 + v192 + 16);
            *(void *)&v323[0] = v193;
            unint64_t v196 = *((void *)v193 + 3);
            if (v194 >= v196 >> 1)
            {
              sub_1006BBB04(v196 > 1, v194 + 1, 1);
              uint64_t v193 = *(double **)&v323[0];
            }
            ++v192;
            *((void *)v193 + 2) = v194 + 1;
            *((_WORD *)v193 + v194++ + 16) = v195;
          }
          while (v191 != v192);
          swift_bridgeObjectRelease();
          uint64_t v114 = v315;
          uint64_t v90 = v318;
          uint64_t v115 = _swiftEmptyArrayStorage;
          uint64_t v117 = v286;
          int64_t v197 = *((void *)v193 + 2);
          if (v197)
          {
LABEL_138:
            *(void *)&v323[0] = _swiftEmptyArrayStorage;
            sub_1006BB644(0, v197, 0);
            uint64_t v198 = 0;
            uint64_t v115 = *(double **)&v323[0];
            unint64_t v199 = *(void *)(*(void *)&v323[0] + 16);
            do
            {
              unsigned int v200 = *((unsigned __int16 *)v193 + v198 + 16);
              *(void *)&v323[0] = v115;
              unint64_t v201 = *((void *)v115 + 3);
              if (v199 >= v201 >> 1)
              {
                sub_1006BB644(v201 > 1, v199 + 1, 1);
                uint64_t v115 = *(double **)&v323[0];
              }
              ++v198;
              *((void *)v115 + 2) = v199 + 1;
              *((float *)v115 + v199++ + 8) = (float)v200;
            }
            while (v197 != v198);
            swift_bridgeObjectRelease();
            uint64_t v114 = v315;
            uint64_t v116 = (uint64_t)v316;
            uint64_t v90 = v318;
            uint64_t v117 = v286;
            goto LABEL_147;
          }
LABEL_146:
          swift_bridgeObjectRelease();
          uint64_t v116 = (uint64_t)v316;
LABEL_147:
          uint64_t v202 = *(void *)(v320 + 64);
          unint64_t v203 = *(void *)(v320 + 72);
          unint64_t v204 = v203 >> 62;
          switch(v203 >> 62)
          {
            case 1uLL:
              LODWORD(v205) = HIDWORD(v202) - v202;
              if (__OFSUB__(HIDWORD(v202), v202)) {
                goto LABEL_263;
              }
              uint64_t v205 = (int)v205;
LABEL_152:
              if (v205 != 8) {
                goto LABEL_183;
              }
              swift_bridgeObjectRelease();
              if (!v204)
              {
                *(void *)&v323[0] = v202;
                WORD4(v323[0]) = v203;
                BYTE10(v323[0]) = BYTE2(v203);
                BYTE11(v323[0]) = BYTE3(v203);
                BYTE12(v323[0]) = BYTE4(v203);
                BYTE13(v323[0]) = BYTE5(v203);
                long long v215 = sub_1006B9BB0((char *)v323, (v203 >> 50) & 0x3F);
                goto LABEL_173;
              }
              if (v204 == 1)
              {
                if (v202 >> 32 < (int)v202) {
                  goto LABEL_267;
                }
                swift_retain();
                uint64_t v208 = __DataStorage._bytes.getter();
                if (v208)
                {
                  uint64_t v209 = v208;
                  uint64_t v210 = __DataStorage._offset.getter();
                  uint64_t v211 = (int)v202 - v210;
                  if (__OFSUB__((int)v202, v210)) {
                    goto LABEL_271;
                  }
                  uint64_t v212 = __DataStorage._length.getter();
                  uint64_t v213 = (char *)(v209 + v211);
                  if (v212 >= (v202 >> 32) - (int)v202) {
                    uint64_t v212 = (v202 >> 32) - (int)v202;
                  }
                  uint64_t v214 = v212 / 4;
                }
                else
                {
                  __DataStorage._length.getter();
                  uint64_t v213 = 0;
                  uint64_t v214 = 0;
                }
                long long v215 = sub_1006B9BB0(v213, v214);
                sub_100510084(v202, v203);
                uint64_t v90 = v318;
LABEL_173:
                uint64_t v115 = _swiftEmptyArrayStorage;
                int64_t v224 = *((void *)v215 + 2);
                if (v224) {
                  goto LABEL_174;
                }
                goto LABEL_181;
              }
              uint64_t v216 = *(void *)(v202 + 16);
              uint64_t v217 = *(void *)(v202 + 24);
              swift_retain();
              swift_retain();
              uint64_t v218 = (char *)__DataStorage._bytes.getter();
              if (v218)
              {
                uint64_t v219 = __DataStorage._offset.getter();
                if (__OFSUB__(v216, v219)) {
                  goto LABEL_272;
                }
                v218 += v216 - v219;
              }
              BOOL v127 = __OFSUB__(v217, v216);
              uint64_t v220 = v217 - v216;
              if (v127) {
                goto LABEL_268;
              }
              uint64_t v221 = __DataStorage._length.getter();
              uint64_t v115 = _swiftEmptyArrayStorage;
              if (v218)
              {
                if (v221 >= v220) {
                  uint64_t v222 = v220;
                }
                else {
                  uint64_t v222 = v221;
                }
                uint64_t v223 = v222 / 4;
              }
              else
              {
                uint64_t v223 = 0;
              }
              long long v215 = sub_1006B9BB0(v218, v223);
              swift_release();
              swift_release();
              int64_t v224 = *((void *)v215 + 2);
              if (v224)
              {
LABEL_174:
                *(void *)&v323[0] = _swiftEmptyArrayStorage;
                sub_1006BB644(0, v224, 0);
                uint64_t v225 = 0;
                uint64_t v115 = *(double **)&v323[0];
                unint64_t v226 = *(void *)(*(void *)&v323[0] + 16);
                do
                {
                  int v227 = *((_DWORD *)v215 + v225 + 8);
                  *(void *)&v323[0] = v115;
                  unint64_t v228 = *((void *)v115 + 3);
                  if (v226 >= v228 >> 1)
                  {
                    sub_1006BB644(v228 > 1, v226 + 1, 1);
                    uint64_t v115 = *(double **)&v323[0];
                  }
                  ++v225;
                  *((void *)v115 + 2) = v226 + 1;
                  *((_DWORD *)v115 + v226++ + 8) = v227;
                }
                while (v224 != v225);
                swift_bridgeObjectRelease();
                uint64_t v116 = (uint64_t)v316;
                uint64_t v90 = v318;
                goto LABEL_182;
              }
LABEL_181:
              swift_bridgeObjectRelease();
              uint64_t v116 = (uint64_t)v316;
LABEL_182:
              uint64_t v117 = v286;
LABEL_183:
              uint64_t v229 = *(void **)(v322 + 8);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v229 = sub_100F61A64(0, v229[2] + 1, 1, v229);
              }
              unint64_t v231 = v229[2];
              unint64_t v230 = v229[3];
              if (v231 >= v230 >> 1) {
                uint64_t v229 = sub_100F61A64((void *)(v230 > 1), v231 + 1, 1, v229);
              }
              v229[2] = v231 + 1;
              *((_WORD *)v229 + v231 + 16) = (_WORD)v314;
              long long v232 = (void **)v322;
              *(void *)(v322 + 8) = v229;
              long long v233 = *v232;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                long long v233 = sub_100F61A64(0, v233[2] + 1, 1, v233);
              }
              unint64_t v235 = v233[2];
              unint64_t v234 = v233[3];
              if (v235 >= v234 >> 1) {
                long long v233 = sub_100F61A64((void *)(v234 > 1), v235 + 1, 1, v233);
              }
              v233[2] = v235 + 1;
              *((_WORD *)v233 + v235 + 16) = v313;
              uint64_t v236 = v322;
              *(void *)uint64_t v322 = v233;
              uint64_t v237 = *(void **)(v236 + 16);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v237 = sub_100F61A64(0, v237[2] + 1, 1, v237);
              }
              unint64_t v239 = v237[2];
              unint64_t v238 = v237[3];
              if (v239 >= v238 >> 1) {
                uint64_t v237 = sub_100F61A64((void *)(v238 > 1), v239 + 1, 1, v237);
              }
              v237[2] = v239 + 1;
              *((_WORD *)v237 + v239 + 16) = v312;
              uint64_t v240 = v322;
              *(void *)(v322 + 16) = v237;
              char v241 = *(void **)(v240 + 24);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v241 = sub_100F61A64(0, v241[2] + 1, 1, v241);
              }
              unint64_t v243 = v241[2];
              unint64_t v242 = v241[3];
              if (v243 >= v242 >> 1) {
                char v241 = sub_100F61A64((void *)(v242 > 1), v243 + 1, 1, v241);
              }
              v241[2] = v243 + 1;
              *((_WORD *)v241 + v243 + 16) = v311;
              uint64_t v244 = v322;
              *(void *)(v322 + 24) = v241;
              char v245 = *(float **)(v244 + 48);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v245 = (float *)sub_100F61954(0, *((void *)v245 + 2) + 1, 1, v245);
              }
              unint64_t v247 = *((void *)v245 + 2);
              unint64_t v246 = *((void *)v245 + 3);
              if (v247 >= v246 >> 1) {
                char v245 = (float *)sub_100F61954((void *)(v246 > 1), v247 + 1, 1, v245);
              }
              *((void *)v245 + 2) = v247 + 1;
              v245[v247 + 8] = v120;
              uint64_t v248 = v322;
              *(void *)(v322 + 48) = v245;
              uint64_t v249 = *(float **)(v248 + 56);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v249 = (float *)sub_100F61954(0, *((void *)v249 + 2) + 1, 1, v249);
              }
              unint64_t v251 = *((void *)v249 + 2);
              unint64_t v250 = *((void *)v249 + 3);
              if (v251 >= v250 >> 1) {
                uint64_t v249 = (float *)sub_100F61954((void *)(v250 > 1), v251 + 1, 1, v249);
              }
              *((void *)v249 + 2) = v251 + 1;
              v249[v251 + 8] = v119;
              uint64_t v252 = v322;
              *(void *)(v322 + 56) = v249;
              uint64_t v253 = *(void **)(v252 + 64);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v253 = sub_100F61A64(0, v253[2] + 1, 1, v253);
              }
              unint64_t v255 = v253[2];
              unint64_t v254 = v253[3];
              if (v255 >= v254 >> 1) {
                uint64_t v253 = sub_100F61A64((void *)(v254 > 1), v255 + 1, 1, v253);
              }
              v253[2] = v255 + 1;
              *((_WORD *)v253 + v255 + 16) = (_WORD)v321;
              uint64_t v256 = v322;
              *(void *)(v322 + 64) = v253;
              if (!*((void *)v115 + 2)) {
                goto LABEL_239;
              }
              int v257 = *((_DWORD *)v115 + 8);
              char v258 = *(void **)(v256 + 32);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v258 = sub_100F61954(0, v258[2] + 1, 1, v258);
              }
              unint64_t v260 = v258[2];
              unint64_t v259 = v258[3];
              if (v260 >= v259 >> 1) {
                char v258 = sub_100F61954((void *)(v259 > 1), v260 + 1, 1, v258);
              }
              v258[2] = v260 + 1;
              *((_DWORD *)v258 + v260 + 8) = v257;
              uint64_t v261 = v322;
              *(void *)(v322 + 32) = v258;
              if (*((void *)v115 + 2) < 2uLL) {
                goto LABEL_240;
              }
              int v262 = *((_DWORD *)v115 + 9);
              __int16 v263 = *(void **)(v261 + 40);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                __int16 v263 = sub_100F61954(0, v263[2] + 1, 1, v263);
              }
              unint64_t v265 = v263[2];
              unint64_t v264 = v263[3];
              if (v265 >= v264 >> 1) {
                __int16 v263 = sub_100F61954((void *)(v264 > 1), v265 + 1, 1, v263);
              }
              v263[2] = v265 + 1;
              *((_DWORD *)v263 + v265 + 8) = v262;
              *(void *)(v322 + 40) = v263;
              uint64_t v107 = (uint64_t *)v320;
              sub_100B3BDC0(v320, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
              unint64_t v118 = v121;
              if (v121 == v310) {
                goto LABEL_222;
              }
              break;
            case 2uLL:
              uint64_t v207 = *(void *)(v202 + 16);
              uint64_t v206 = *(void *)(v202 + 24);
              BOOL v127 = __OFSUB__(v206, v207);
              uint64_t v205 = v206 - v207;
              if (!v127) {
                goto LABEL_152;
              }
              goto LABEL_264;
            case 3uLL:
              goto LABEL_183;
            default:
              uint64_t v205 = BYTE6(v203);
              goto LABEL_152;
          }
          break;
        case 2uLL:
          uint64_t v171 = *(void *)(v166 + 16);
          uint64_t v170 = *(void *)(v166 + 24);
          BOOL v127 = __OFSUB__(v170, v171);
          uint64_t v169 = v170 - v171;
          if (!v127) {
            goto LABEL_104;
          }
          goto LABEL_256;
        case 3uLL:
          goto LABEL_183;
        default:
          uint64_t v169 = BYTE6(v167);
          goto LABEL_104;
      }
    }
  }
LABEL_222:
  swift_bridgeObjectRelease();
  uint64_t v266 = v319;
  *uint64_t v117 = *(void *)(*(void *)v319 + 16);
  uint64_t v267 = v266 + v317[6];
  sub_100522E9C(v267, v116, &qword_1016930D8);
  uint64_t v268 = v116;
  uint64_t v269 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
  uint64_t v270 = v300;
  int v271 = v269(v268, 1, v300);
  sub_100522F00(v268, &qword_1016930D8);
  BOOL v71 = v271 == 1;
  unint64_t v272 = (unint64_t)v309;
  uint64_t v273 = v280;
  if (!v71)
  {
    uint64_t v274 = v288;
    sub_100522E9C(v267, v288, &qword_1016930D8);
    if (v269(v274, 1, v270) == 1)
    {
      int v275 = v289;
      *uint64_t v289 = _swiftEmptyArrayStorage;
      UnknownStorage.init()();
      sub_100522F00(v274, &qword_1016930D8);
    }
    else
    {
      int v275 = v289;
      sub_100B3BD58(v274, (uint64_t)v289, type metadata accessor for CRLProto_Path);
    }
    char v276 = sub_100AC0E30((uint64_t)v275);
    uint64_t v277 = v322;
    swift_bridgeObjectRelease();
    *(void *)(v277 + 80) = v276;
  }
  uint64_t v278 = *(void *)(v322 + 72);
  if (v278 != *(void *)(*(void *)v322 + 16)
    || v278 != *(void *)(*(void *)(v322 + 8) + 16)
    || v278 != *(void *)(*(void *)(v322 + 16) + 16)
    || v278 != *(void *)(*(void *)(v322 + 24) + 16)
    || v278 != *(void *)(*(void *)(v322 + 48) + 16)
    || v278 != *(void *)(*(void *)(v322 + 56) + 16)
    || v278 != *(void *)(*(void *)(v322 + 64) + 16)
    || v278 != *(void *)(*(void *)(v322 + 32) + 16)
    || v278 != *(void *)(*(void *)(v322 + 40) + 16))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 237, (uint64_t)"The CRLPKStrokePathData object has inconsistent point counts.", 61, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v273 = v280;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(from:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 237);
  }
  swift_release();
  sub_100510084(v273, v272);
  return sub_100B3BDC0(v319, type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_100B38B44(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v226 = a1;
  uint64_t v243 = type metadata accessor for CRLProto_Path(0);
  uint64_t v3 = *(void *)(v243 - 8);
  __chkstk_darwin(v243, v4);
  int v227 = (unint64_t *)((char *)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v241 = type metadata accessor for CRLPKStrokePathData();
  __chkstk_darwin(v241, v6);
  char v258 = (char *)&v216 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v259 = (uint64_t)&v216 - v10;
  __chkstk_darwin(v11, v12);
  uint64_t v250 = (uint64_t)&v216 - v13;
  __chkstk_darwin(v14, v15);
  uint64_t v251 = (uint64_t)&v216 - v16;
  __chkstk_darwin(v17, v18);
  uint64_t v252 = (uint64_t)&v216 - v19;
  __chkstk_darwin(v20, v21);
  uint64_t v253 = (uint64_t)&v216 - v22;
  __chkstk_darwin(v23, v24);
  uint64_t v254 = (uint64_t)&v216 - v25;
  __chkstk_darwin(v26, v27);
  uint64_t v255 = (uint64_t)&v216 - v28;
  __chkstk_darwin(v29, v30);
  int v257 = (char *)&v216 - v31;
  uint64_t v256 = type metadata accessor for CRLProto_PKStrokePathData.StrokePoint(0);
  uint64_t v249 = *(void *)(v256 - 8);
  __chkstk_darwin(v256, v32);
  uint64_t v261 = (uint64_t)&v216 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v35);
  uint64_t v37 = (char *)&v216 - v36;
  uint64_t v248 = type metadata accessor for CRLProto_Point(0);
  *(void *)&long long v260 = *(void *)(v248 - 8);
  __chkstk_darwin(v248, v38);
  uint64_t v225 = (char *)&v216 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1005057FC((uint64_t *)&unk_101674160);
  __chkstk_darwin(v40 - 8, v41);
  uint64_t v223 = (uint64_t)&v216 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = type metadata accessor for CRLProto_Data(0);
  uint64_t v245 = *(void *)(v247 - 8);
  __chkstk_darwin(v247, v43);
  int64_t v224 = (long long *)((char *)&v216 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v45, v46);
  uint64_t v222 = (_OWORD *)((char *)&v216 - v47);
  uint64_t v48 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v48 - 8, v49);
  uint64_t v240 = (uint64_t)&v216 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for UUID();
  uint64_t v246 = *(void *)(v244 - 8);
  __chkstk_darwin(v244, v51);
  unint64_t v242 = (char *)&v216 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_1005057FC(&qword_1016930C8);
  __chkstk_darwin(v53 - 8, v54);
  uint64_t v234 = (uint64_t)&v216 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for CRLProto_Date(0);
  uint64_t v229 = *(void *)(v56 - 8);
  uint64_t v57 = v229;
  __chkstk_darwin(v56, v58);
  *(void *)&long long v236 = (char *)&v216 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60, v61);
  uint64_t v63 = (int **)((char *)&v216 - v62);
  uint64_t v64 = (int *)type metadata accessor for CRLProto_PKStrokePathData(0);
  __chkstk_darwin(v64, v65);
  uint64_t v67 = (unint64_t *)((char *)&v216 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v67 = (unint64_t)_swiftEmptyArrayStorage;
  UnknownStorage.init()();
  id v68 = *(void (**)(void))(v3 + 56);
  uint64_t v217 = (uint64_t)v67 + v64[6];
  uint64_t v219 = v3 + 56;
  uint64_t v218 = v68;
  v68();
  uint64_t v69 = (char *)v67 + v64[7];
  *(_DWORD *)uint64_t v69 = 0;
  unint64_t v235 = v69;
  v69[4] = 1;
  uint64_t v70 = (uint64_t)v67 + v64[8];
  BOOL v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 56);
  v71(v70, 1, 1, v56);
  uint64_t v72 = (char *)v67 + v64[9];
  *(_DWORD *)uint64_t v72 = 0;
  long long v232 = v72;
  v72[4] = 1;
  char v73 = (char *)v67 + v64[10];
  *(_DWORD *)char v73 = 0;
  unint64_t v231 = v73;
  v73[4] = 1;
  uint64_t v74 = *(void (**)(void))(v260 + 56);
  uint64_t v220 = (uint64_t)v67 + v64[11];
  *(void *)&long long v260 = v260 + 56;
  uint64_t v221 = v74;
  v74();
  uint64_t v75 = *(void (**)(void))(v245 + 56);
  uint64_t v237 = (uint64_t)v67 + v64[12];
  uint64_t v239 = v245 + 56;
  unint64_t v238 = v75;
  v75();
  uint64_t v216 = v64;
  uint64_t v76 = v64[13];
  uint64_t v77 = (int *)v241;
  int v262 = v67;
  uint64_t v230 = v76;
  *((unsigned char *)v67 + v76) = 2;
  *uint64_t v63 = 0;
  UnknownStorage.init()();
  sub_100522F00(v70, &qword_1016930C8);
  sub_100B3BD58((uint64_t)v63, v70, type metadata accessor for CRLProto_Date);
  long long v233 = v71;
  v71(v70, 0, 1, v56);
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v78 = v234;
  uint64_t v80 = v79;
  sub_100522E9C(v70, v234, &qword_1016930C8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v229 + 48))(v78, 1, v56) == 1)
  {
    uint64_t v81 = (void *)v236;
    *(void *)long long v236 = 0;
    UnknownStorage.init()();
    sub_100522F00(v78, &qword_1016930C8);
  }
  else
  {
    uint64_t v81 = (void *)v236;
    sub_100B3BD58(v78, v236, type metadata accessor for CRLProto_Date);
  }
  *uint64_t v81 = v80;
  sub_100522F00(v70, &qword_1016930C8);
  sub_100B3BD58((uint64_t)v81, v70, type metadata accessor for CRLProto_Date);
  v233(v70, 0, 1, v56);
  uint64_t v82 = v235;
  *unint64_t v235 = *(_DWORD *)(v2 + 88);
  *((unsigned char *)v82 + 4) = 0;
  uint64_t v83 = v232;
  *long long v232 = *(_DWORD *)(v2 + v77[17]);
  *((unsigned char *)v83 + 4) = 0;
  uint64_t v84 = v231;
  *unint64_t v231 = *(_DWORD *)(v2 + v77[18]);
  *((unsigned char *)v84 + 4) = 0;
  *((unsigned char *)v262 + v230) = *(unsigned char *)(v2 + v77[21]);
  uint64_t v85 = v240;
  sub_100522E9C(v2 + v77[19], v240, (uint64_t *)&unk_101674520);
  uint64_t v86 = v246;
  uint64_t v87 = v244;
  int v88 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))(v85, 1, v244);
  uint64_t v89 = (uint64_t)v258;
  if (v88 == 1)
  {
    sub_100522F00(v85, (uint64_t *)&unk_101674520);
    uint64_t v90 = (uint64_t)v257;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v242, v85, v87);
    uint64_t v91 = (uint64_t)v222;
    long long v236 = xmmword_101180360;
    *uint64_t v222 = xmmword_101180360;
    uint64_t v92 = v247;
    UnknownStorage.init()();
    uint64_t v93 = v237;
    sub_100522F00(v237, (uint64_t *)&unk_101674160);
    sub_100B3BD58(v91, v93, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v238)(v93, 0, 1, v92);
    uint64_t v240 = UUID.crl_data()();
    uint64_t v95 = v94;
    uint64_t v96 = v93;
    uint64_t v97 = v223;
    sub_100522E9C(v96, v223, (uint64_t *)&unk_101674160);
    int v98 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v245 + 48))(v97, 1, v92);
    uint64_t v90 = (uint64_t)v257;
    if (v98 == 1)
    {
      uint64_t v99 = v97;
      unint64_t v100 = v224;
      *int64_t v224 = v236;
      UnknownStorage.init()();
      uint64_t v101 = v99;
      uint64_t v87 = v244;
      sub_100522F00(v101, (uint64_t *)&unk_101674160);
    }
    else
    {
      uint64_t v102 = v97;
      unint64_t v100 = v224;
      sub_100B3BD58(v102, (uint64_t)v224, type metadata accessor for CRLProto_Data);
    }
    sub_100510084(*(void *)v100, *((void *)v100 + 1));
    *(void *)unint64_t v100 = v240;
    *((void *)v100 + 1) = v95;
    uint64_t v103 = v237;
    sub_100522F00(v237, (uint64_t *)&unk_101674160);
    sub_100B3BD58((uint64_t)v100, v103, type metadata accessor for CRLProto_Data);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v238)(v103, 0, 1, v92);
    (*(void (**)(char *, uint64_t))(v246 + 8))(v242, v87);
  }
  uint64_t v104 = v2 + v77[20];
  if ((*(unsigned char *)(v104 + 8) & 1) == 0)
  {
    uint64_t v105 = *(void *)v104;
    uint64_t v106 = v248;
    uint64_t v107 = v225;
    UnknownStorage.init()();
    *uint64_t v107 = v105;
    uint64_t v108 = v220;
    sub_100522F00(v220, &qword_10168E570);
    sub_100B3BD58((uint64_t)v107, v108, type metadata accessor for CRLProto_Point);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v221)(v108, 0, 1, v106);
  }
  uint64_t v109 = *(void *)(v2 + 72);
  if (v109 < 0) {
    goto LABEL_127;
  }
  if (v109)
  {
    unint64_t v110 = 0;
    long long v260 = xmmword_101180360;
    uint64_t v248 = v109;
    while (1)
    {
      long long v111 = v260;
      *(_OWORD *)uint64_t v37 = v260;
      *((_OWORD *)v37 + 1) = v111;
      *((_OWORD *)v37 + 2) = v111;
      *((_OWORD *)v37 + 3) = v111;
      *((_OWORD *)v37 + 4) = v111;
      *((_OWORD *)v37 + 5) = v111;
      *((_OWORD *)v37 + 6) = v111;
      *((_OWORD *)v37 + 7) = v111;
      UnknownStorage.init()();
      sub_100B3BCF0(v2, v90, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v112 = *(void *)(v90 + 8);
        unint64_t v113 = *(void *)(v112 + 16);
        if (v110 >= v113) {
          goto LABEL_107;
        }
        if (v110 - 1 >= v113) {
          goto LABEL_108;
        }
        uint64_t v114 = v112 + 2 * v110;
        int v115 = *(unsigned __int16 *)(v114 + 32);
        uint64_t v116 = v90;
        int v117 = *(unsigned __int16 *)(v114 + 30);
        sub_100B3BDC0(v116, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v115 == v117)
        {
          uint64_t v118 = 0;
          unint64_t v119 = 0xC000000000000000;
          goto LABEL_23;
        }
      }
      else
      {
        sub_100B3BDC0(v90, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v120 = *(void *)(v2 + 8);
      if (v110 >= *(void *)(v120 + 16)) {
        goto LABEL_102;
      }
      LOWORD(v263) = *(_WORD *)(v120 + 2 * v110 + 32);
      uint64_t v118 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)&v263 + 2);
      unint64_t v119 = v121;
LABEL_23:
      sub_100510084(*(void *)v37, *((void *)v37 + 1));
      *(void *)uint64_t v37 = v118;
      *((void *)v37 + 1) = v119;
      uint64_t v122 = v255;
      sub_100B3BCF0(v2, v255, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        unint64_t v123 = *(void *)(*(void *)v122 + 16);
        if (v110 >= v123) {
          goto LABEL_109;
        }
        if (v110 - 1 >= v123) {
          goto LABEL_110;
        }
        uint64_t v124 = *(void *)v122 + 2 * v110;
        uint64_t v125 = v122;
        int v126 = *(unsigned __int16 *)(v124 + 32);
        int v127 = *(unsigned __int16 *)(v124 + 30);
        sub_100B3BDC0(v125, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v126 == v127)
        {
          uint64_t v128 = 0;
          unint64_t v129 = 0xC000000000000000;
          goto LABEL_31;
        }
      }
      else
      {
        sub_100B3BDC0(v122, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      if (v110 >= *(void *)(*(void *)v2 + 16)) {
        goto LABEL_103;
      }
      LOWORD(v263) = *(_WORD *)(*(void *)v2 + 2 * v110 + 32);
      uint64_t v128 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)&v263 + 2);
      unint64_t v129 = v130;
LABEL_31:
      sub_100510084(*((void *)v37 + 2), *((void *)v37 + 3));
      *((void *)v37 + 2) = v128;
      *((void *)v37 + 3) = v129;
      uint64_t v131 = v254;
      sub_100B3BCF0(v2, v254, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v132 = *(void *)(v131 + 16);
        unint64_t v133 = *(void *)(v132 + 16);
        if (v110 >= v133) {
          goto LABEL_111;
        }
        if (v110 - 1 >= v133) {
          goto LABEL_112;
        }
        uint64_t v134 = v132 + 2 * v110;
        uint64_t v135 = v131;
        int v136 = *(unsigned __int16 *)(v134 + 32);
        int v137 = *(unsigned __int16 *)(v134 + 30);
        sub_100B3BDC0(v135, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v136 == v137)
        {
          uint64_t v138 = 0;
          unint64_t v139 = 0xC000000000000000;
          goto LABEL_39;
        }
      }
      else
      {
        sub_100B3BDC0(v131, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v140 = *(void *)(v2 + 16);
      if (v110 >= *(void *)(v140 + 16)) {
        goto LABEL_104;
      }
      LOWORD(v263) = *(_WORD *)(v140 + 2 * v110 + 32);
      uint64_t v138 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)&v263 + 2);
      unint64_t v139 = v141;
LABEL_39:
      sub_100510084(*((void *)v37 + 4), *((void *)v37 + 5));
      *((void *)v37 + 4) = v138;
      *((void *)v37 + 5) = v139;
      uint64_t v142 = v253;
      sub_100B3BCF0(v2, v253, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v143 = *(void *)(v142 + 24);
        unint64_t v144 = *(void *)(v143 + 16);
        if (v110 >= v144) {
          goto LABEL_113;
        }
        if (v110 - 1 >= v144) {
          goto LABEL_114;
        }
        uint64_t v145 = v143 + 2 * v110;
        uint64_t v146 = v142;
        int v147 = *(unsigned __int16 *)(v145 + 32);
        int v148 = *(unsigned __int16 *)(v145 + 30);
        sub_100B3BDC0(v146, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v147 == v148)
        {
          uint64_t v149 = 0;
          unint64_t v150 = 0xC000000000000000;
          goto LABEL_47;
        }
      }
      else
      {
        sub_100B3BDC0(v142, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v151 = *(void *)(v2 + 24);
      if (v110 >= *(void *)(v151 + 16)) {
        goto LABEL_105;
      }
      LOWORD(v263) = *(_WORD *)(v151 + 2 * v110 + 32);
      uint64_t v149 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)&v263 + 2);
      unint64_t v150 = v152;
LABEL_47:
      sub_100510084(*((void *)v37 + 6), *((void *)v37 + 7));
      *((void *)v37 + 6) = v149;
      *((void *)v37 + 7) = v150;
      uint64_t v153 = v252;
      sub_100B3BCF0(v2, v252, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v154 = *(void *)(v153 + 48);
        unint64_t v155 = *(void *)(v154 + 16);
        if (v110 >= v155) {
          goto LABEL_115;
        }
        if (v110 - 1 >= v155) {
          goto LABEL_116;
        }
        uint64_t v156 = v154 + 4 * v110;
        float v158 = *(float *)(v156 + 28);
        float v157 = *(float *)(v156 + 32);
        sub_100B3BDC0(v153, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v157 == v158)
        {
          uint64_t v159 = 0;
          unint64_t v160 = 0xC000000000000000;
          goto LABEL_55;
        }
      }
      else
      {
        sub_100B3BDC0(v153, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v161 = *(void *)(v2 + 48);
      if (v110 >= *(void *)(v161 + 16)) {
        goto LABEL_123;
      }
      int v263 = *(_DWORD *)(v161 + 4 * v110 + 32);
      uint64_t v159 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)v264);
      unint64_t v160 = v162;
LABEL_55:
      sub_100510084(*((void *)v37 + 10), *((void *)v37 + 11));
      *((void *)v37 + 10) = v159;
      *((void *)v37 + 11) = v160;
      uint64_t v163 = v251;
      sub_100B3BCF0(v2, v251, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v164 = *(void *)(v163 + 56);
        unint64_t v165 = *(void *)(v164 + 16);
        if (v110 >= v165) {
          goto LABEL_117;
        }
        if (v110 - 1 >= v165) {
          goto LABEL_118;
        }
        uint64_t v166 = v164 + 4 * v110;
        float v168 = *(float *)(v166 + 28);
        float v167 = *(float *)(v166 + 32);
        sub_100B3BDC0(v163, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v167 == v168)
        {
          uint64_t v169 = 0;
          unint64_t v170 = 0xC000000000000000;
          goto LABEL_63;
        }
      }
      else
      {
        sub_100B3BDC0(v163, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v171 = *(void *)(v2 + 56);
      if (v110 >= *(void *)(v171 + 16)) {
        goto LABEL_124;
      }
      int v263 = *(_DWORD *)(v171 + 4 * v110 + 32);
      uint64_t v169 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)v264);
      unint64_t v170 = v172;
LABEL_63:
      sub_100510084(*((void *)v37 + 12), *((void *)v37 + 13));
      *((void *)v37 + 12) = v169;
      *((void *)v37 + 13) = v170;
      uint64_t v173 = v250;
      sub_100B3BCF0(v2, v250, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v174 = *(void *)(v173 + 64);
        unint64_t v175 = *(void *)(v174 + 16);
        if (v110 >= v175) {
          goto LABEL_119;
        }
        if (v110 - 1 >= v175) {
          goto LABEL_120;
        }
        uint64_t v176 = v174 + 2 * v110;
        uint64_t v177 = v173;
        int v178 = *(unsigned __int16 *)(v176 + 32);
        int v179 = *(unsigned __int16 *)(v176 + 30);
        sub_100B3BDC0(v177, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v178 == v179)
        {
          uint64_t v180 = 0;
          unint64_t v181 = 0xC000000000000000;
          goto LABEL_71;
        }
      }
      else
      {
        sub_100B3BDC0(v173, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      uint64_t v182 = *(void *)(v2 + 64);
      if (v110 >= *(void *)(v182 + 16)) {
        goto LABEL_106;
      }
      LOWORD(v263) = *(_WORD *)(v182 + 2 * v110 + 32);
      uint64_t v180 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)&v263 + 2);
      unint64_t v181 = v183;
LABEL_71:
      sub_100510084(*((void *)v37 + 14), *((void *)v37 + 15));
      *((void *)v37 + 14) = v180;
      *((void *)v37 + 15) = v181;
      uint64_t v184 = v259;
      sub_100B3BCF0(v2, v259, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      if (v110)
      {
        uint64_t v185 = *(void *)(v184 + 32);
        unint64_t v186 = *(void *)(v185 + 16);
        if (v110 >= v186) {
          goto LABEL_121;
        }
        if (v110 - 1 >= v186) {
          goto LABEL_122;
        }
        uint64_t v187 = v185 + 4 * v110;
        float v189 = *(float *)(v187 + 28);
        float v188 = *(float *)(v187 + 32);
        sub_100B3BDC0(v259, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        sub_100B3BCF0(v2, v89, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        if (v188 == v189)
        {
          uint64_t v190 = *(void *)(v89 + 40);
          unint64_t v191 = *(void *)(v190 + 16);
          if (v110 >= v191) {
            goto LABEL_125;
          }
          if (v110 - 1 >= v191) {
            goto LABEL_126;
          }
          uint64_t v192 = v190 + 4 * v110;
          float v194 = *(float *)(v192 + 28);
          float v193 = *(float *)(v192 + 32);
          sub_100B3BDC0(v89, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
          sub_100510084(*((void *)v37 + 8), *((void *)v37 + 9));
          *((_OWORD *)v37 + 4) = v260;
          if (v193 == v194) {
            goto LABEL_84;
          }
          goto LABEL_81;
        }
      }
      else
      {
        sub_100B3BDC0(v184, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
        sub_100B3BCF0(v2, v89, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      }
      sub_100B3BDC0(v89, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
      sub_100510084(*((void *)v37 + 8), *((void *)v37 + 9));
      *((_OWORD *)v37 + 4) = v260;
LABEL_81:
      uint64_t v195 = *(void *)(v2 + 32);
      if (v110 >= *(void *)(v195 + 16))
      {
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        __break(1u);
LABEL_107:
        __break(1u);
LABEL_108:
        __break(1u);
LABEL_109:
        __break(1u);
LABEL_110:
        __break(1u);
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
      }
      int v263 = *(_DWORD *)(v195 + 4 * v110 + 32);
      uint64_t v196 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)v264);
      unint64_t v198 = v197;
      Data.append(_:)();
      sub_100510084(v196, v198);
      uint64_t v199 = *(void *)(v2 + 40);
      if (v110 >= *(void *)(v199 + 16)) {
        goto LABEL_101;
      }
      int v263 = *(_DWORD *)(v199 + 4 * v110 + 32);
      uint64_t v200 = sub_1009B6AEC((uint64_t)&v263, (uint64_t)v264);
      unint64_t v202 = v201;
      Data.append(_:)();
      sub_100510084(v200, v202);
LABEL_84:
      sub_100B3BCF0((uint64_t)v37, v261, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      unint64_t v203 = *v262;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v203 = sub_100F64B80(0, *(void *)(v203 + 16) + 1, 1, v203);
      }
      unint64_t v205 = *(void *)(v203 + 16);
      unint64_t v204 = *(void *)(v203 + 24);
      if (v205 >= v204 >> 1) {
        unint64_t v203 = sub_100F64B80(v204 > 1, v205 + 1, 1, v203);
      }
      ++v110;
      *(void *)(v203 + 16) = v205 + 1;
      sub_100B3BD58(v261, v203+ ((*(unsigned __int8 *)(v249 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v249 + 80))+ *(void *)(v249 + 72) * v205, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      *int v262 = v203;
      sub_100B3BDC0((uint64_t)v37, type metadata accessor for CRLProto_PKStrokePathData.StrokePoint);
      uint64_t v90 = (uint64_t)v257;
      uint64_t v89 = (uint64_t)v258;
      if (v248 == v110)
      {
        uint64_t v206 = *(void *)(v2 + 72);
        goto LABEL_91;
      }
    }
  }
  uint64_t v206 = 0;
LABEL_91:
  if (v206 != *(void *)(*v262 + 16))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 301, (uint64_t)"Encoded inconsistent point counts.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"encode(to:)", 11, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLPKStrokePathData.swift", 89, 2, 301);
  }
  uint64_t v207 = *(void *)(v2 + 80);
  if (v207)
  {
    uint64_t v208 = v227;
    uint64_t v209 = v228;
    sub_100ABFCCC(v207, v227);
    uint64_t v210 = v209;
    if (v209) {
      return sub_100B3BDC0((uint64_t)v262, type metadata accessor for CRLProto_PKStrokePathData);
    }
    uint64_t v211 = v217;
    sub_100522F00(v217, &qword_1016930D8);
    sub_100B3BD58((uint64_t)v208, v211, type metadata accessor for CRLProto_Path);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v218)(v211, 0, 1, v243);
  }
  else
  {
    uint64_t v210 = v228;
  }
  dispatch thunk of CREncoder.valueContainer()();
  if (!v210)
  {
    sub_100B3BED4(&qword_1016930D0, (void (*)(uint64_t))type metadata accessor for CRLProto_PKStrokePathData);
    uint64_t v212 = Message.serializedData(partial:)();
    unint64_t v214 = v213;
    dispatch thunk of CREncoder.CRValueContainer.encode(_:)();
    sub_100510084(v212, v214);
    swift_release();
  }
  return sub_100B3BDC0((uint64_t)v262, type metadata accessor for CRLProto_PKStrokePathData);
}

uint64_t sub_100B3A3EC(char a1)
{
  uint64_t result = 0x446874756D697A61;
  switch(a1)
  {
    case 1:
      return 0x6564757469746C61;
    case 2:
      uint64_t v3 = 0x446563726F66;
      goto LABEL_7;
    case 3:
      return 0x447974696361706FLL;
    case 4:
      uint64_t v3 = 0x4458657A6973;
      goto LABEL_7;
    case 5:
      uint64_t v3 = 0x4459657A6973;
LABEL_7:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x7461000000000000;
      break;
    case 6:
      uint64_t result = 0x7366664F656D6974;
      break;
    case 7:
      uint64_t result = 0x4432737569646172;
      break;
    case 8:
      uint64_t result = 0x7464695765676465;
      break;
    case 9:
      uint64_t result = 0x756F43746E696F70;
      break;
    case 10:
      uint64_t result = 0x687461506B73616DLL;
      break;
    case 11:
      uint64_t result = 0x65536D6F646E6172;
      break;
    case 12:
      uint64_t result = 0x6E6F697461657263;
      break;
    case 13:
    case 14:
      uint64_t result = 0x63537265646E6572;
      break;
    case 15:
      uint64_t result = 0x72477265646E6572;
      break;
    case 16:
      uint64_t result = 0xD000000000000015;
      break;
    case 17:
      uint64_t result = 0x6F53646C756F6873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B3A640(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101693100);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B3BE20();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v16 = *v3;
  char v18 = 0;
  sub_1005057FC(&qword_1016930F0);
  sub_100B3BE74(&qword_101693108, &qword_1016930F0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v16 = v3[1];
    char v18 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[2];
    char v18 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[3];
    char v18 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[4];
    char v18 = 4;
    uint64_t v10 = sub_1005057FC(&qword_10168C490);
    sub_100B3BE74(&qword_10168C4A8, &qword_10168C490);
    v15[1] = v10;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[5];
    char v18 = 5;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[6];
    char v18 = 6;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[7];
    char v18 = 7;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v16 = v3[8];
    char v18 = 8;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v16) = 9;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v16 = v3[10];
    char v18 = 10;
    sub_10089DB5C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v16) = 11;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = type metadata accessor for CRLPKStrokePathData();
    LOBYTE(v16) = 12;
    type metadata accessor for Date();
    sub_100B3BED4(&qword_101691F80, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v16) = 13;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v16) = 14;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v16) = 15;
    type metadata accessor for UUID();
    sub_100B3BED4(&qword_101671E70, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    uint64_t v12 = (char *)v3 + *(int *)(v11 + 80);
    uint64_t v13 = *(void *)v12;
    LOBYTE(v12) = v12[8];
    uint64_t v16 = v13;
    char v17 = (char)v12;
    char v18 = 16;
    sub_10089DC18();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v16) = 17;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100B3AC3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v41 = (uint64_t)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v6);
  uint64_t v46 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_1016930E0);
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v51 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLPKStrokePathData();
  uint64_t v12 = (int *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = _swiftEmptyArrayStorage;
  *((void *)v15 + 1) = _swiftEmptyArrayStorage;
  *((void *)v15 + 2) = _swiftEmptyArrayStorage;
  *((void *)v15 + 3) = _swiftEmptyArrayStorage;
  *((void *)v15 + 4) = _swiftEmptyArrayStorage;
  *((void *)v15 + 5) = _swiftEmptyArrayStorage;
  *((void *)v15 + 6) = _swiftEmptyArrayStorage;
  *((void *)v15 + 7) = _swiftEmptyArrayStorage;
  *((void *)v15 + 8) = _swiftEmptyArrayStorage;
  *((void *)v15 + 9) = 0;
  uint64_t v16 = (uint64_t *)(v15 + 72);
  *((void *)v15 + 10) = 0;
  *((_DWORD *)v15 + 22) = 0;
  uint64_t v44 = &v15[v12[18]];
  static Date.now.getter();
  uint64_t v43 = v12[19];
  *(_DWORD *)&v15[v43] = 1065353216;
  uint64_t v42 = v12[20];
  *(_DWORD *)&v15[v42] = 1065353216;
  uint64_t v17 = (uint64_t)&v15[v12[21]];
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = &v15[v12[22]];
  *(void *)uint64_t v19 = 0;
  unsigned char v19[8] = 1;
  uint64_t v20 = v12[23];
  uint64_t v53 = v15;
  v15[v20] = 0;
  uint64_t v21 = a1[3];
  uint64_t v50 = (uint64_t)a1;
  uint64_t v22 = a1;
  uint64_t v23 = v51;
  sub_10050F848(v22, v21);
  sub_100B3BE20();
  uint64_t v24 = v52;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v24)
  {
    uint64_t v34 = v50;
    uint64_t v35 = (uint64_t)v53;
  }
  else
  {
    uint64_t v52 = v18;
    uint64_t v38 = v19;
    uint64_t v39 = v17;
    uint64_t v37 = v20;
    sub_1005057FC(&qword_1016930F0);
    char v56 = 0;
    uint64_t v25 = sub_100B3BE74(&qword_1016930F8, &qword_1016930F0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v27 = v53;
    *(void *)uint64_t v53 = v54;
    char v56 = 1;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[1] = v54;
    char v56 = 2;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[2] = v54;
    char v56 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v36[0] = v25;
    v27[3] = v54;
    sub_1005057FC(&qword_10168C490);
    char v56 = 4;
    v36[1] = sub_100B3BE74(&qword_10168C498, &qword_10168C490);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[4] = v54;
    char v56 = 5;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[5] = v54;
    char v56 = 6;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[6] = v54;
    char v56 = 7;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[7] = v54;
    char v56 = 8;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    v27[8] = v54;
    LOBYTE(v54) = 9;
    *uint64_t v16 = KeyedDecodingContainer.decode(_:forKey:)();
    char v56 = 10;
    sub_10089DAB4();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    *((void *)v53 + 10) = v54;
    LOBYTE(v54) = 11;
    *((_DWORD *)v53 + 22) = KeyedDecodingContainer.decode(_:forKey:)();
    LOBYTE(v54) = 12;
    sub_100B3BED4(&qword_101679BE8, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v44, v46, v47);
    LOBYTE(v54) = 13;
    KeyedDecodingContainer.decode(_:forKey:)();
    *(_DWORD *)&v53[v43] = v28;
    LOBYTE(v54) = 14;
    KeyedDecodingContainer.decode(_:forKey:)();
    *(_DWORD *)&v53[v42] = v29;
    LOBYTE(v54) = 15;
    sub_100B3BED4(&qword_101671E58, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    sub_10068EA54(v41, v39);
    char v56 = 16;
    sub_10089DB08();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    char v30 = v55;
    uint64_t v31 = v38;
    *(void *)uint64_t v38 = v54;
    v31[8] = v30;
    LOBYTE(v54) = 17;
    uint64_t v32 = v49;
    char v33 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v32);
    uint64_t v34 = v50;
    uint64_t v35 = (uint64_t)v53;
    v53[v37] = v33 & 1;
    sub_100B3BCF0(v35, v40, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
  }
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v34);
  return sub_100B3BDC0(v35, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
}

uint64_t sub_100B3B518()
{
  return sub_100B3A3EC(*v0);
}

uint64_t sub_100B3B520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B3C208(a1, a2);
  *a3 = result;
  return result;
}

void sub_100B3B548(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_100B3B554(uint64_t a1)
{
  unint64_t v2 = sub_100B3BE20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B3B590(uint64_t a1)
{
  unint64_t v2 = sub_100B3BE20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B3B5CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B36ADC(a1, a2);
}

uint64_t sub_100B3B5E4(uint64_t a1)
{
  return sub_100B38B44(a1);
}

uint64_t sub_100B3B5FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B3AC3C(a1, a2);
}

uint64_t sub_100B3B614(void *a1)
{
  return sub_100B3A640(a1);
}

uint64_t sub_100B3B62C@<X0>(uint64_t a1@<X8>)
{
  return sub_100B3BCF0(v1, a1, (uint64_t (*)(void))type metadata accessor for CRLPKStrokePathData);
}

uint64_t sub_100B3B660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100B3BED4(&qword_101693110, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);
  uint64_t v7 = sub_100B3BED4(&qword_101693118, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B3B72C()
{
  return sub_100B3BED4(&qword_1016930C0, (void (*)(uint64_t))type metadata accessor for CRLPKStrokePathData);
}

uint64_t sub_100B3B774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v38 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v38 - v23;
  if (!sub_1005BC130(*(void *)a1, *(void *)a2)
    || !sub_1005BC130(*(void *)(a1 + 8), *(void *)(a2 + 8))
    || !sub_1005BC130(*(void *)(a1 + 16), *(void *)(a2 + 16))
    || !sub_1005BC130(*(void *)(a1 + 24), *(void *)(a2 + 24))
    || !sub_1005BAA8C(*(void *)(a1 + 32), *(void *)(a2 + 32))
    || !sub_1005BAA8C(*(void *)(a1 + 40), *(void *)(a2 + 40))
    || !sub_1005BAA8C(*(void *)(a1 + 48), *(void *)(a2 + 48))
    || !sub_1005BAA8C(*(void *)(a1 + 56), *(void *)(a2 + 56))
    || !sub_1005BC130(*(void *)(a1 + 64), *(void *)(a2 + 64))
    || *(void *)(a1 + 72) != *(void *)(a2 + 72))
  {
    goto LABEL_31;
  }
  uint64_t v25 = *(void *)(a1 + 80);
  uint64_t v26 = *(void *)(a2 + 80);
  if (v25)
  {
    if (!v26 || !sub_1005BA910(v25, v26)) {
      goto LABEL_31;
    }
  }
  else if (v26)
  {
    goto LABEL_31;
  }
  if (*(_DWORD *)(a1 + 88) != *(_DWORD *)(a2 + 88)) {
    goto LABEL_31;
  }
  uint64_t v41 = v9;
  uint64_t v27 = type metadata accessor for CRLPKStrokePathData();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_31;
  }
  if (*(float *)(a1 + *(int *)(v27 + 68)) != *(float *)(a2 + *(int *)(v27 + 68))) {
    goto LABEL_31;
  }
  uint64_t v40 = (int *)v27;
  if (*(float *)(a1 + *(int *)(v27 + 72)) != *(float *)(a2 + *(int *)(v27 + 72))) {
    goto LABEL_31;
  }
  int v28 = v40;
  sub_100522E9C(a1 + v40[19], (uint64_t)v24, (uint64_t *)&unk_101674520);
  sub_100522E9C(a2 + v28[19], (uint64_t)v20, (uint64_t *)&unk_101674520);
  uint64_t v29 = (uint64_t)&v12[*(int *)(v41 + 48)];
  sub_100522E9C((uint64_t)v24, (uint64_t)v12, (uint64_t *)&unk_101674520);
  uint64_t v41 = v29;
  sub_100522E9C((uint64_t)v20, v29, (uint64_t *)&unk_101674520);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v39((uint64_t)v12, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
    if (v39(v41, 1, v4) == 1)
    {
      sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
      goto LABEL_27;
    }
LABEL_25:
    sub_100522F00((uint64_t)v12, (uint64_t *)&unk_10168A0C0);
    goto LABEL_31;
  }
  sub_100522E9C((uint64_t)v12, (uint64_t)v16, (uint64_t *)&unk_101674520);
  if (v39(v41, 1, v4) == 1)
  {
    sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v8, v41, v4);
  sub_100B3BED4((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  LODWORD(v41) = dispatch thunk of static Equatable.== infix(_:_:)();
  char v30 = *(void (**)(char *, uint64_t))(v5 + 8);
  v30(v8, v4);
  sub_100522F00((uint64_t)v20, (uint64_t *)&unk_101674520);
  sub_100522F00((uint64_t)v24, (uint64_t *)&unk_101674520);
  v30(v16, v4);
  sub_100522F00((uint64_t)v12, (uint64_t *)&unk_101674520);
  if ((v41 & 1) == 0) {
    goto LABEL_31;
  }
LABEL_27:
  uint64_t v31 = v40[20];
  uint64_t v32 = (float *)(a1 + v31);
  char v33 = *(unsigned char *)(a1 + v31 + 8);
  uint64_t v34 = (uint64_t *)(a2 + v31);
  int v35 = *(unsigned __int8 *)(a2 + v31 + 8);
  if ((v33 & 1) == 0)
  {
    if ((v35 & 1) == 0)
    {
      LOBYTE(v35) = 0;
      uint64_t v37 = *v34;
      if (*v32 == *(float *)&v37 && v32[1] == *((float *)&v37 + 1)) {
        goto LABEL_35;
      }
      return v35 & 1;
    }
LABEL_31:
    LOBYTE(v35) = 0;
    return v35 & 1;
  }
  if (v35) {
LABEL_35:
  }
    LOBYTE(v35) = *(unsigned char *)(a1 + v40[21]) ^ *(unsigned char *)(a2 + v40[21]) ^ 1;
  return v35 & 1;
}

uint64_t sub_100B3BCF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B3BD58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B3BDC0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100B3BE20()
{
  unint64_t result = qword_1016930E8;
  if (!qword_1016930E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016930E8);
  }
  return result;
}

uint64_t sub_100B3BE74(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B3BED4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B3BF1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B3BF54(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B3BF64()
{
  return swift_release();
}

uint64_t getEnumTagSinglePayload for CRLPKStrokePathData.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLPKStrokePathData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B3C0C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPKStrokePathData.CodingKeys()
{
  return &type metadata for CRLPKStrokePathData.CodingKeys;
}

unint64_t sub_100B3C104()
{
  unint64_t result = qword_101693120;
  if (!qword_101693120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693120);
  }
  return result;
}

unint64_t sub_100B3C15C()
{
  unint64_t result = qword_101693128;
  if (!qword_101693128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693128);
  }
  return result;
}

unint64_t sub_100B3C1B4()
{
  unint64_t result = qword_101693130;
  if (!qword_101693130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693130);
  }
  return result;
}

uint64_t sub_100B3C208(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x446874756D697A61 && a2 == 0xEB00000000617461;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xEC00000061746144 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7461446563726F66 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x447974696361706FLL && a2 == 0xEB00000000617461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x74614458657A6973 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74614459657A6973 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7366664F656D6974 && a2 == 0xEE00617461447465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4432737569646172 && a2 == 0xEB00000000617461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7464695765676465 && a2 == 0xED00006174614468 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x756F43746E696F70 && a2 == 0xEA0000000000746ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x687461506B73616DLL && a2 == 0xEC00000061746144 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x63537265646E6572 && a2 == 0xEC00000058656C61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x63537265646E6572 && a2 == 0xEC00000059656C61 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x72477265646E6572 && a2 == 0xED0000444970756FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000101273D10 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6F53646C756F6873 && a2 == 0xEF6874614D65766CLL)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

unint64_t sub_100B3CA8C(void *a1, double a2, double a3)
{
  char v6 = (void *)sub_1005057FC((uint64_t *)&unk_10167BC20);
  uint64_t v94 = *(v6 - 1);
  __chkstk_darwin(v6, v7);
  uint64_t v93 = (char *)v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLWPShapeItemCRDTData(0);
  __chkstk_darwin(v9, v10);
  uint64_t v92 = (char *)v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLWPStorageCRDTData(0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v20, v23);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)v85 - v26;
  [a1 smartFieldAtPoint:a2, a3];
  if (!v28) {
    return 0;
  }
  id v89 = v6;
  uint64_t v29 = v28;
  self;
  char v30 = (void *)swift_dynamicCastObjCClass();
  if (!v30)
  {

    return 0;
  }
  id v90 = v29;
  uint64_t v91 = v21;
  int v88 = v30;
  id v31 = [v30 url];
  if (!v31)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v91 + 56))(v19, 1, 1, v20);
    goto LABEL_32;
  }
  uint64_t v32 = v31;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v33 = v91;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v91 + 32);
  uint64_t v87 = (char *)v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v91 + 32;
  v34(v19, v87, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v19, 0, 1, v20);
  uint64_t v36 = v33;
  uint64_t v37 = v20;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v19, 1, v20) == 1)
  {
LABEL_32:

    sub_1005CCBB8((uint64_t)v19);
    return 0;
  }
  uint64_t v38 = v27;
  v34(v27, v19, v37);
  if ((sub_100601D90() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v91 + 8))(v27, v37);

    return 0;
  }
  uint64_t v86 = (void (*)(uint64_t, char *, uint64_t))v34;
  id v39 = [a1 interactiveCanvasController];
  if (!v39)
  {
LABEL_38:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 29, (uint64_t)"Unable to build context menu configuration", 42, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 29);

LABEL_39:
    (*(void (**)(char *, uint64_t))(v91 + 8))(v38, v37);
    return 0;
  }
  uint64_t v40 = v39;
  if (![v39 allowedToShowHyperlinkContextMenuForRep:a1]
    || (id v41 = [v40 editorController]) == 0)
  {
LABEL_37:

    goto LABEL_38;
  }
  uint64_t v42 = v41;
  uint64_t v43 = v35;
  id v44 = [v41 currentEditors];

  sub_1005057FC((uint64_t *)&unk_1016838C0);
  unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v47 = v89;
    if (!v46) {
      goto LABEL_52;
    }
  }
  else
  {
    unint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v47 = v89;
    if (!v46)
    {
LABEL_52:

      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
  }
  unint64_t v48 = v46 - 1;
  if (__OFSUB__(v46, 1))
  {
    __break(1u);
  }
  else if ((v45 & 0xC000000000000001) == 0)
  {
    if ((v48 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v48 < *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_unknownObjectRetain();
      goto LABEL_16;
    }
    __break(1u);
    goto LABEL_51;
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
  swift_bridgeObjectRelease();
  self;
  uint64_t v49 = (void *)swift_dynamicCastObjCClass();
  if (!v49)
  {
    swift_unknownObjectRelease();
    goto LABEL_37;
  }
  id v50 = [v49 wpEditors];
  swift_unknownObjectRelease();
  type metadata accessor for CRLWPEditor();
  unint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v46 >> 62))
  {
    unint64_t v51 = v46;
    uint64_t v52 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v52) {
      goto LABEL_19;
    }
    goto LABEL_52;
  }
LABEL_51:
  unint64_t v51 = v46;
  swift_bridgeObjectRetain();
  uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v52) {
    goto LABEL_52;
  }
LABEL_19:
  unint64_t result = v52 - 1;
  if (__OFSUB__(v52, 1))
  {
    __break(1u);
  }
  else if ((v51 & 0xC000000000000001) == 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v54 = (char *)*(id *)(v51 + 8 * result + 32);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_57;
  }
  uint64_t v54 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_24:
  char v55 = v54;
  unint64_t result = swift_bridgeObjectRelease();
  id v89 = v55;
  char v56 = *(char **)(*(void *)&v55[OBJC_IVAR____TtC8Freeform11CRLWPEditor_enclosingShape]
                 + OBJC_IVAR____TtC8Freeform14CRLWPShapeItem_textStorage);
  if (!v56)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v85[1] = v43;
  uint64_t v57 = *(void *)&v56[OBJC_IVAR____TtC8Freeform12CRLWPStorage_shapeItemData];
  if (v57)
  {
    uint64_t v58 = (uint64_t)v92;
    (*(void (**)(unint64_t))(*(void *)v57 + 760))(result);
    sub_1005D3C94(v58 + *(int *)(v9 + 20), (uint64_t)v15);
    uint64_t v59 = v56;
    sub_1005D3CF8(v58, type metadata accessor for CRLWPShapeItemCRDTData);
    uint64_t v60 = v93;
    uint64_t v61 = v94;
    (*(void (**)(char *, char *, id))(v94 + 16))(v93, v15, v47);
    sub_1005D3CF8((uint64_t)v15, type metadata accessor for CRLWPStorageCRDTData);
    uint64_t v62 = (void *)CRAttributedString.attributedString.getter();
    (*(void (**)(char *, id))(v61 + 8))(v60, v47);
    id v63 = [v62 string];

    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v65;

    id v67 = [v88 parentStorage];
    if (v67)
    {
      id v68 = [v67 string];
      swift_unknownObjectRelease();
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v71 = v70;

      if (v64 == v69 && v66 == v71)
      {
        swift_bridgeObjectRelease_n();
        id v72 = v89;
LABEL_43:
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 35, (uint64_t)"The hyperlink content should not be edited while generating preview.", 68, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contextMenuConfiguration(at:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLWP/CRLWPHyperlinkHostWPRep.swift", 89, 2, 35);

        goto LABEL_39;
      }
      char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v72 = v89;
      if (v74) {
        goto LABEL_43;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      id v72 = v89;
    }
    if ((sub_100B3D688(v88) & 1) == 0)
    {
      uint64_t v75 = v91;
      uint64_t v93 = *(char **)(v91 + 16);
      uint64_t v76 = v87;
      ((void (*)(char *, char *, uint64_t))v93)(v87, v38, v37);
      uint64_t v77 = *(unsigned __int8 *)(v75 + 80);
      uint64_t v78 = v38;
      v85[0] = v38;
      uint64_t v79 = (v77 + 16) & ~v77;
      uint64_t v94 = swift_allocObject();
      uint64_t v80 = v86;
      v86(v94 + v79, v76, v37);
      ((void (*)(char *, char *, uint64_t))v93)(v76, v78, v37);
      uint64_t v81 = swift_allocObject();
      v80(v81 + v79, v76, v37);
      uint64_t v82 = self;
      uint64_t v99 = sub_100B3E3F4;
      uint64_t v100 = v94;
      aBlock = _NSConcreteStackBlock;
      uint64_t v96 = *(void *)"";
      uint64_t v97 = sub_100598AC4;
      int v98 = &unk_101524F80;
      uint64_t v83 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      uint64_t v99 = sub_100B3E458;
      uint64_t v100 = v81;
      aBlock = _NSConcreteStackBlock;
      uint64_t v96 = *(void *)"";
      uint64_t v97 = sub_10059474C;
      int v98 = &unk_101524FA8;
      uint64_t v84 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v73 = [v82 configurationWithIdentifier:0 previewProvider:v83 actionProvider:v84];
      swift_release();
      swift_release();
      _Block_release(v84);
      _Block_release(v83);

      swift_release();
      swift_release();

      (*(void (**)(void, uint64_t))(v91 + 8))(v85[0], v37);
      return (unint64_t)v73;
    }
    goto LABEL_43;
  }
LABEL_58:
  __break(1u);
  return result;
}

id sub_100B3D688(void *a1)
{
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return result;
  }
  unsigned int v4 = result;
  id v5 = [result editorController];

  if (!v5) {
    return 0;
  }
  type metadata accessor for CRLWPEditor();
  id v6 = [v5 currentEditorsOfClass:swift_getObjCClassFromMetadata()];

  sub_1005057FC((uint64_t *)&unk_1016838C0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v8 < 1) {
    return 0;
  }
  id result = [*(id *)(v1 + OBJC_IVAR____TtC8Freeform11CRLWPEditor_editorController) selectionForEditor:v1];
  if (!result) {
    return result;
  }
  uint64_t v9 = result;
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (!v10)
  {

    return 0;
  }
  uint64_t v11 = (char *)[v10 range];
  uint64_t v13 = v12;
  uint64_t v14 = (char *)[a1 range];
  uint64_t v16 = v15;

  return (id)(v11 <= v14 && &v11[v13] >= &v14[v16]);
}

id sub_100B3D828()
{
  id v0 = objc_allocWithZone((Class)CRLSelectionAwareSafariViewController);
  URL._bridgeToObjectiveC()(v1);
  int v3 = v2;
  id v4 = [v0 initWithURL:v2];

  return v4;
}

UIMenu sub_100B3D880(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  long long v19[2] = sub_10050BF48(0, &qword_101673A80);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101177E70;
  v19[1] = sub_10050BF48(0, (unint64_t *)&qword_101672600);
  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v8 localizedStringForKey:v9 value:v10 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [self systemImageNamed:v12];

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v14 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(void *)(v7 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  UIMenuElementSize v20 = v7;
  specialized Array._endMutation()();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v21.value.super.Class isa = 0;
  v21.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v21, 0, 0xFFFFFFFFFFFFFFFFLL, v20, v18);
}

uint64_t sub_100B3DB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3, v6);
  uint64_t v7 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v7 - 8, v8);
  NSString v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v13 + v12, (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1005912D0((uint64_t)v10, (uint64_t)&unk_101693148, v13);
  return swift_release();
}

uint64_t sub_100B3DD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_100B3DD60, 0, 0);
}

uint64_t sub_100B3DD60()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B3DDF4, v2, v1);
}

uint64_t sub_100B3DDF4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_10077FF34(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_100B3DE5C(uint64_t a1, id a2, double a3, double a4)
{
  id v8 = [a2 interactiveCanvasController];
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  id v10 = [v8 layerHost];
  if (!v10) {
    goto LABEL_13;
  }
  uint64_t v11 = v10;
  if ([v10 respondsToSelector:"asiOSCVC"])
  {
    id v12 = [v11 asiOSCVC];
    swift_unknownObjectRelease();
    id v13 = [v12 canvasView];

    if (v13)
    {
      id v14 = [a2 smartFieldAtPoint:a3, a4];
      if (v14)
      {
        uint64_t v15 = v14;
        self;
        uint64_t v16 = swift_dynamicCastObjCClass();
        if (v16)
        {
          uint64_t v17 = (void *)v16;
          if ((sub_100601D90() & 1) == 0)
          {

            return 0;
          }
          id v18 = [v17 range];
          id v20 = [objc_allocWithZone((Class)CRLWPSelection) initWithRange:v18, v19];
          if (v20)
          {
            UIImage_optional v21 = v20;
            [a2 rectForSelection:v20 includeRuby:0 includePaginatedAttachments:0];
            double v23 = v22;
            double v25 = v24;
            double v27 = v26;
            double v29 = v28;
          }
          else
          {
            double v23 = 0.0;
            double v25 = 0.0;
            double v27 = 0.0;
            double v29 = 0.0;
          }
          [a2 convertNaturalRectToUnscaledCanvas:v23, v25, v27, v29];
          [v9 convertUnscaledToBoundsRect:];
          CGFloat v33 = v32;
          CGFloat v35 = v34;
          CGFloat v37 = v36;
          CGFloat v39 = v38;
          id v40 = [v13 resizableSnapshotViewFromRect:1];
          if (v40)
          {
            id v41 = v40;
            double v42 = sub_100065738(v33, v35, v37, v39);
            id v44 = [objc_allocWithZone((Class)UIPreviewTarget) initWithContainer:v13 center:v42];
            id v45 = [objc_allocWithZone((Class)UIPreviewParameters) init];
            id v46 = [self clearColor];
            [v45 setBackgroundColor:v46];

            id v30 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v41 parameters:v45 target:v44];
            return v30;
          }
          id v47 = [a2 repForSelecting];
          if (v47)
          {
            unint64_t v48 = v47;
            sub_10050BF48(0, (unint64_t *)&qword_101678790);
            id v49 = a2;
            char v50 = static NSObject.== infix(_:_:)();

            if ((v50 & 1) == 0)
            {
              [v49 convertNaturalPointToUnscaledCanvas:a3, a4];
              [v48 convertNaturalPointFromUnscaledCanvas:];
              id v30 = [v48 contextMenuPreviewForHighlightingMenuAtPoint:a1];

              return v30;
            }
          }
          goto LABEL_13;
        }
      }
    }
LABEL_13:

    return 0;
  }

  swift_unknownObjectRelease();
  return 0;
}

unint64_t CRLWPRep.contextMenuConfiguration(at:)(double a1, double a2)
{
  id v5 = v2;
  unint64_t v6 = sub_100B3CA8C(v5, a1, a2);

  return v6;
}

id CRLWPRep.contextMenuPreviewForHighlightingMenu(at:with:)(uint64_t a1, double a2, double a3)
{
  id v7 = v3;
  id v8 = sub_100B3DE5C(a1, v7, a2, a3);

  return v8;
}

id sub_100B3E3F4()
{
  type metadata accessor for URL();

  return sub_100B3D828();
}

UIMenu sub_100B3E458(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100B3D880(a1, v4);
}

uint64_t sub_100B3E4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B3E4D8()
{
  return swift_release();
}

uint64_t sub_100B3E4E4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B3E574(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100B3DB7C(a1, v4);
}

uint64_t sub_100B3E5E4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B3E6B0()
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  v4[2] = v3;
  return _swift_task_switch(sub_100B3DD60, 0, 0);
}

uint64_t sub_100B3E798()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  id v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171B8F8);
  sub_100556B74(v15, (uint64_t)qword_10171B8F8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100B3EA88()
{
  uint64_t v0 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v64 = &v38[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v3 - 8, v4);
  id v63 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v42 - 8);
  __chkstk_darwin(v42, v7);
  uint64_t v9 = &v38[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v60 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v52 = &v38[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005057FC(&qword_1016931B8);
  uint64_t v18 = sub_1005057FC(&qword_10168D0D0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  uint64_t v21 = v18 - 8;
  uint64_t v57 = v18 - 8;
  unint64_t v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v49 = v20;
  uint64_t v50 = 2 * v20;
  uint64_t v23 = swift_allocObject();
  long long v54 = xmmword_10117DF40;
  uint64_t v51 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_10117DF40;
  unint64_t v62 = v23 + v22;
  unint64_t v48 = v23 + v22 + *(int *)(v21 + 56);
  *(unsigned char *)(v23 + v22) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  id v40 = *(void (**)(unsigned char *))(v6 + 104);
  uint64_t v24 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v25 = v42;
  v40(v9);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v61 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v61(v63, 1, 1, v14);
  uint64_t v59 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v26 = *(void *)(v59 - 8);
  uint64_t v58 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v56 = v26 + 56;
  v58(v64, 1, 1, v59);
  uint64_t v47 = sub_1005057FC(&qword_101682DA8);
  uint64_t v55 = v15 + 56;
  uint64_t v27 = *(void *)(v15 + 72);
  uint64_t v28 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v53 = 2 * v27;
  uint64_t v43 = v27;
  uint64_t v45 = ((v28 + 32) & ~v28) + 3 * v27;
  uint64_t v46 = (v28 + 32) & ~v28;
  uint64_t v44 = v28 | 7;
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v54;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v29 = v25;
  uint64_t v30 = v25;
  id v31 = (void (*)(unsigned char *, uint64_t, uint64_t))v40;
  ((void (*)(unsigned char *, uint64_t, uint64_t))v40)(v9, v24, v30);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  CGFloat v33 = v63;
  double v32 = v64;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  double v34 = (unsigned char *)(v62 + v49);
  v49 += v62 + *(int *)(v57 + 56);
  *double v34 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v33, 1, 1, v60);
  v58(v32, 1, 1, v59);
  *(_OWORD *)(swift_allocObject() + 16) = v54;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v39 = v24;
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v24, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  double v36 = v63;
  CGFloat v35 = v64;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v62 + v50) = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v9, v39, v29);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v61(v36, 1, 1, v60);
  v58(v35, 1, 1, v59);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100A3C574(v51);
  qword_10171B910 = result;
  return result;
}

uint64_t sub_100B3F4A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10094E624(*a1, *a2);
}

unint64_t sub_100B3F4B8()
{
  unint64_t result = qword_101693150;
  if (!qword_101693150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693150);
  }
  return result;
}

Swift::Int sub_100B3F50C()
{
  return Hasher._finalize()();
}

uint64_t sub_100B3F59C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B3F618()
{
  return Hasher._finalize()();
}

unint64_t sub_100B3F6A4@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100B3FDF0(*a1);
  *a2 = result;
  return result;
}

void sub_100B3F6D4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE400000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1701079400;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C67676F74;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 2003789939;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

unint64_t sub_100B3F724()
{
  unint64_t result = qword_101693158;
  if (!qword_101693158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693158);
  }
  return result;
}

unint64_t sub_100B3F77C()
{
  unint64_t result = qword_101693160;
  if (!qword_101693160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693160);
  }
  return result;
}

unint64_t sub_100B3F7D4()
{
  unint64_t result = qword_101693168;
  if (!qword_101693168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693168);
  }
  return result;
}

unint64_t sub_100B3F82C()
{
  unint64_t result = qword_101693170;
  if (!qword_101693170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693170);
  }
  return result;
}

unint64_t sub_100B3F884()
{
  unint64_t result = qword_101693178;
  if (!qword_101693178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693178);
  }
  return result;
}

unint64_t sub_100B3F8DC()
{
  unint64_t result = qword_101693180;
  if (!qword_101693180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693180);
  }
  return result;
}

unint64_t sub_100B3F934()
{
  unint64_t result = qword_101693188;
  if (!qword_101693188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693188);
  }
  return result;
}

uint64_t sub_100B3F988@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F938 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171B8F8);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100B3FA30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B3FA80(uint64_t a1)
{
  unint64_t v2 = sub_1006C2A4C();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100B3FAD0()
{
  unint64_t result = qword_101693190;
  if (!qword_101693190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693190);
  }
  return result;
}

unint64_t sub_100B3FB28()
{
  unint64_t result = qword_101693198;
  if (!qword_101693198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693198);
  }
  return result;
}

unint64_t sub_100B3FB80()
{
  unint64_t result = qword_1016931A0;
  if (!qword_1016931A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931A0);
  }
  return result;
}

uint64_t sub_100B3FBD4()
{
  if (qword_10166F940 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100B3FC30(uint64_t a1)
{
  unint64_t v2 = sub_100B3F934();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100B3FC80()
{
  unint64_t result = qword_1016931A8;
  if (!qword_1016931A8)
  {
    sub_100522D34(&qword_1016931B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931A8);
  }
  return result;
}

void sub_100B3FCDC(void *a1@<X8>)
{
  *a1 = &off_1015032A8;
}

unsigned char *storeEnumTagSinglePayload for CRLVisibilityOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B3FDB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLVisibilityOperation()
{
  return &type metadata for CRLVisibilityOperation;
}

unint64_t sub_100B3FDF0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504970, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t destroy for CRLImagePresetData(void *a1)
{
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[18])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (a1[25])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  if (a1[39])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CRLImagePresetData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 96);
  if (v4)
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    *(void *)(a1 + 36) = *(void *)(a2 + 36);
    *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v4;
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    unsigned int v6 = (_OWORD *)(a2 + 144);
    uint64_t v5 = *(void *)(a2 + 144);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
      *(void *)(a1 + 144) = v5;
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 144) = *v6;
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
    }
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    uint64_t v14 = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    if (v14)
    {
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = v14;
      *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
      *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v15;
    }
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v7;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    long long v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    long long v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    long long v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  uint64_t v16 = (_DWORD *)(a1 + 232);
  uint64_t v17 = (_DWORD *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 312);
  if (v18)
  {
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
    *(void *)(a1 + 252) = *(void *)(a2 + 252);
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = v18;
    *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
    *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
    uint64_t v19 = *(void *)(a2 + 352);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v20;
    long long v21 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v21;
    long long v22 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(a1 + 248) = v22;
    long long v23 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v23;
  }
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  uint64_t v24 = *(void *)(a2 + 368);
  uint64_t v25 = *(void *)(a2 + 376);
  *(void *)(a1 + 368) = v24;
  *(void *)(a1 + 376) = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CRLImagePresetData(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[12];
  if (*(void *)(a1 + 96))
  {
    if (v4)
    {
      uint64_t v5 = *a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v5;
      LODWORD(v5) = *((_DWORD *)a2 + 4);
      *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
      *(_DWORD *)(a1 + 16) = v5;
      uint64_t v6 = a2[3];
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
      *(void *)(a1 + 24) = v6;
      *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
      *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
      *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
      *(void *)(a1 + 48) = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
      *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
      *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
      *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
      *(void *)(a1 + 72) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
      *(void *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = a2[12];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      long long v7 = (_OWORD *)(a1 + 144);
      uint64_t v8 = *(void *)(a1 + 144);
      *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
      uint64_t v9 = a2[14];
      *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
      *(void *)(a1 + 112) = v9;
      uint64_t v10 = a2[16];
      *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
      *(void *)(a1 + 128) = v10;
      *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
      long long v12 = a2 + 18;
      uint64_t v11 = a2[18];
      if (v8)
      {
        if (v11)
        {
          *(void *)(a1 + 144) = v11;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
          *(void *)(a1 + 160) = a2[20];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19AFC(a1 + 144);
          uint64_t v41 = a2[20];
          *long long v7 = *v12;
          *(void *)(a1 + 160) = v41;
        }
      }
      else if (v11)
      {
        *(void *)(a1 + 144) = v11;
        *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
        *(void *)(a1 + 160) = a2[20];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v46 = *v12;
        *(void *)(a1 + 160) = a2[20];
        *long long v7 = v46;
      }
      uint64_t v47 = a2[21];
      *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
      *(void *)(a1 + 168) = v47;
      *(void *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v48 = (_OWORD *)(a1 + 192);
      uint64_t v49 = a2 + 24;
      uint64_t v50 = a2[25];
      if (*(void *)(a1 + 200))
      {
        if (v50)
        {
          *(void *)(a1 + 192) = a2[24];
          *(void *)(a1 + 200) = a2[25];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
          *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
          *(void *)(a1 + 216) = a2[27];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_100A19B30(a1 + 192);
          long long v51 = *((_OWORD *)a2 + 13);
          *unint64_t v48 = *v49;
          *(_OWORD *)(a1 + 208) = v51;
        }
      }
      else if (v50)
      {
        *(void *)(a1 + 192) = a2[24];
        *(void *)(a1 + 200) = a2[25];
        *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
        *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
        *(void *)(a1 + 216) = a2[27];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *((_OWORD *)a2 + 13);
        *unint64_t v48 = *v49;
        *(_OWORD *)(a1 + 208) = v52;
      }
      *(void *)(a1 + 224) = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B409D8(a1);
      long long v20 = *((_OWORD *)a2 + 1);
      long long v19 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v20;
      *(_OWORD *)(a1 + 32) = v19;
      long long v21 = *((_OWORD *)a2 + 6);
      long long v23 = *((_OWORD *)a2 + 3);
      long long v22 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 48) = v23;
      *(_OWORD *)(a1 + 64) = v22;
      long long v24 = *((_OWORD *)a2 + 10);
      long long v26 = *((_OWORD *)a2 + 7);
      long long v25 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v24;
      *(_OWORD *)(a1 + 112) = v26;
      *(_OWORD *)(a1 + 128) = v25;
      long long v28 = *((_OWORD *)a2 + 12);
      long long v27 = *((_OWORD *)a2 + 13);
      long long v29 = *((_OWORD *)a2 + 11);
      *(void *)(a1 + 224) = a2[28];
      *(_OWORD *)(a1 + 192) = v28;
      *(_OWORD *)(a1 + 208) = v27;
      *(_OWORD *)(a1 + 176) = v29;
    }
  }
  else if (v4)
  {
    uint64_t v13 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v13;
    LODWORD(v13) = *((_DWORD *)a2 + 4);
    *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
    *(_DWORD *)(a1 + 16) = v13;
    uint64_t v14 = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(void *)(a1 + 24) = v14;
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(_DWORD *)(a1 + 44) = *((_DWORD *)a2 + 11);
    *(void *)(a1 + 48) = a2[6];
    *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 14);
    *(_DWORD *)(a1 + 60) = *((_DWORD *)a2 + 15);
    *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 16);
    *(_DWORD *)(a1 + 68) = *((_DWORD *)a2 + 17);
    *(void *)(a1 + 72) = a2[9];
    *(_DWORD *)(a1 + 80) = *((_DWORD *)a2 + 20);
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = a2[12];
    *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
    uint64_t v15 = a2[14];
    *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
    *(void *)(a1 + 112) = v15;
    uint64_t v16 = a2[16];
    *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
    *(void *)(a1 + 128) = v16;
    *(_DWORD *)(a1 + 140) = *((_DWORD *)a2 + 35);
    uint64_t v18 = (long long *)(a2 + 18);
    uint64_t v17 = a2[18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(void *)(a1 + 144) = v17;
      *(_DWORD *)(a1 + 152) = *((_DWORD *)a2 + 38);
      *(void *)(a1 + 160) = a2[20];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v42 = *v18;
      *(void *)(a1 + 160) = a2[20];
      *(_OWORD *)(a1 + 144) = v42;
    }
    uint64_t v43 = a2[21];
    *(unsigned char *)(a1 + 176) = *((unsigned char *)a2 + 176);
    *(void *)(a1 + 168) = v43;
    *(void *)(a1 + 184) = a2[23];
    uint64_t v44 = a2[25];
    swift_bridgeObjectRetain();
    if (v44)
    {
      *(void *)(a1 + 192) = a2[24];
      *(void *)(a1 + 200) = a2[25];
      *(_DWORD *)(a1 + 208) = *((_DWORD *)a2 + 52);
      *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
      *(void *)(a1 + 216) = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v45 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v45;
    }
    *(void *)(a1 + 224) = a2[28];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v30 = *(_OWORD *)a2;
    long long v31 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v31;
    *(_OWORD *)a1 = v30;
    long long v32 = *((_OWORD *)a2 + 3);
    long long v33 = *((_OWORD *)a2 + 4);
    long long v34 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v34;
    *(_OWORD *)(a1 + 48) = v32;
    *(_OWORD *)(a1 + 64) = v33;
    long long v35 = *((_OWORD *)a2 + 7);
    long long v36 = *((_OWORD *)a2 + 8);
    long long v37 = *((_OWORD *)a2 + 10);
    *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
    *(_OWORD *)(a1 + 160) = v37;
    *(_OWORD *)(a1 + 112) = v35;
    *(_OWORD *)(a1 + 128) = v36;
    long long v38 = *((_OWORD *)a2 + 11);
    long long v39 = *((_OWORD *)a2 + 12);
    long long v40 = *((_OWORD *)a2 + 13);
    *(void *)(a1 + 224) = a2[28];
    *(_OWORD *)(a1 + 192) = v39;
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 176) = v38;
  }
  uint64_t v53 = (_DWORD *)(a1 + 232);
  long long v54 = (int *)(a2 + 29);
  uint64_t v55 = a2[39];
  if (*(void *)(a1 + 312))
  {
    if (v55)
    {
      int v56 = *v54;
      *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
      *uint64_t v53 = v56;
      uint64_t v57 = a2[30];
      *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
      *(void *)(a1 + 240) = v57;
      *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
      *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
      *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
      *(void *)(a1 + 264) = a2[33];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
      *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
      *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
      *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
      *(void *)(a1 + 288) = a2[36];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
      *(void *)(a1 + 304) = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 312) = a2[39];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
      *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
      *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
      *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
      *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
      *(void *)(a1 + 344) = a2[43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = a2[44];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100B40A2C(a1 + 232);
      long long v60 = *(_OWORD *)(a2 + 35);
      long long v62 = *(_OWORD *)v54;
      long long v61 = *(_OWORD *)(a2 + 31);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
      *(_OWORD *)(a1 + 280) = v60;
      *(_OWORD *)uint64_t v53 = v62;
      *(_OWORD *)(a1 + 248) = v61;
      long long v63 = *(_OWORD *)(a2 + 43);
      long long v65 = *(_OWORD *)(a2 + 37);
      long long v64 = *(_OWORD *)(a2 + 39);
      *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
      *(_OWORD *)(a1 + 344) = v63;
      *(_OWORD *)(a1 + 296) = v65;
      *(_OWORD *)(a1 + 312) = v64;
    }
  }
  else if (v55)
  {
    int v58 = *v54;
    *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
    *uint64_t v53 = v58;
    uint64_t v59 = a2[30];
    *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
    *(void *)(a1 + 240) = v59;
    *(_DWORD *)(a1 + 252) = *((_DWORD *)a2 + 63);
    *(_DWORD *)(a1 + 256) = *((_DWORD *)a2 + 64);
    *(_DWORD *)(a1 + 260) = *((_DWORD *)a2 + 65);
    *(void *)(a1 + 264) = a2[33];
    *(_DWORD *)(a1 + 272) = *((_DWORD *)a2 + 68);
    *(_DWORD *)(a1 + 276) = *((_DWORD *)a2 + 69);
    *(_DWORD *)(a1 + 280) = *((_DWORD *)a2 + 70);
    *(_DWORD *)(a1 + 284) = *((_DWORD *)a2 + 71);
    *(void *)(a1 + 288) = a2[36];
    *(_DWORD *)(a1 + 296) = *((_DWORD *)a2 + 74);
    *(void *)(a1 + 304) = a2[38];
    *(void *)(a1 + 312) = a2[39];
    *(_DWORD *)(a1 + 320) = *((_DWORD *)a2 + 80);
    *(_DWORD *)(a1 + 324) = *((_DWORD *)a2 + 81);
    *(_DWORD *)(a1 + 328) = *((_DWORD *)a2 + 82);
    *(_DWORD *)(a1 + 332) = *((_DWORD *)a2 + 83);
    *(_DWORD *)(a1 + 336) = *((_DWORD *)a2 + 84);
    *(void *)(a1 + 344) = a2[43];
    *(void *)(a1 + 352) = a2[44];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v66 = *(_OWORD *)v54;
    long long v67 = *(_OWORD *)(a2 + 31);
    long long v68 = *(_OWORD *)(a2 + 35);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 280) = v68;
    *(_OWORD *)uint64_t v53 = v66;
    *(_OWORD *)(a1 + 248) = v67;
    long long v69 = *(_OWORD *)(a2 + 37);
    long long v70 = *(_OWORD *)(a2 + 39);
    long long v71 = *(_OWORD *)(a2 + 43);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
    *(_OWORD *)(a1 + 344) = v71;
    *(_OWORD *)(a1 + 296) = v69;
    *(_OWORD *)(a1 + 312) = v70;
  }
  *(_DWORD *)(a1 + 360) = *((_DWORD *)a2 + 90);
  *(void *)(a1 + 368) = a2[46];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = a2[47];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B409D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100B40A2C(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for CRLImagePresetData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x180uLL);
}

uint64_t assignWithTake for CRLImagePresetData(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 96)) {
    goto LABEL_7;
  }
  if (!*(void *)(a2 + 96))
  {
    sub_100B409D8(a1);
LABEL_7:
    long long v6 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v6;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    long long v7 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v7;
    long long v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    long long v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    long long v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    long long v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    long long v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    goto LABEL_16;
  }
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 36) = *(void *)(a2 + 36);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 144);
  uint64_t v5 = *(void *)(a1 + 144);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if (v5)
  {
    if (v4)
    {
      *(void *)(a1 + 144) = v4;
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_100A19AFC(a1 + 144);
  }
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
LABEL_10:
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 200))
  {
LABEL_14:
    long long v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    goto LABEL_15;
  }
  uint64_t v13 = *(void *)(a2 + 200);
  if (!v13)
  {
    sub_100A19B30(a1 + 192);
    goto LABEL_14;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  swift_bridgeObjectRelease();
LABEL_15:
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
LABEL_16:
  uint64_t v15 = (_OWORD *)(a1 + 232);
  uint64_t v16 = (_OWORD *)(a2 + 232);
  if (!*(void *)(a1 + 312))
  {
LABEL_20:
    long long v17 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v17;
    long long v18 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v18;
    long long v19 = *(_OWORD *)(a2 + 248);
    *uint64_t v15 = *v16;
    *(_OWORD *)(a1 + 248) = v19;
    long long v20 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v20;
    goto LABEL_21;
  }
  if (!*(void *)(a2 + 312))
  {
    sub_100B40A2C(a1 + 232);
    goto LABEL_20;
  }
  *(_DWORD *)uint64_t v15 = *(_DWORD *)v16;
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 252) = *(void *)(a2 + 252);
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_DWORD *)(a1 + 336) = *(_DWORD *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRelease();
LABEL_21:
  *(_DWORD *)(a1 + 360) = *(_DWORD *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLImagePresetData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 384)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 368);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLImagePresetData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 384) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 368) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 384) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLImagePresetData()
{
  return &type metadata for CRLImagePresetData;
}

uint64_t sub_100B40EC8()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x746144616964656DLL;
  }
}

uint64_t sub_100B40F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B41B70(a1, a2);
  *a3 = result;
  return result;
}

void sub_100B40F34(void *a1@<X8>)
{
  *a1 = &off_101502F40;
}

uint64_t sub_100B40F44(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B41904();
  unint64_t v5 = sub_100B4195C();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100B40F9C(uint64_t a1)
{
  unint64_t v2 = sub_100B4195C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B40FD8(uint64_t a1)
{
  unint64_t v2 = sub_100B4195C();

  return CodingKey.debugDescription.getter(a1, v2);
}

id sub_100B41014()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_10051B3EC((uint64_t)&__dst[232], (uint64_t)v10, (uint64_t *)&unk_101683E20);
  sub_10051B3EC((uint64_t)v10, (uint64_t)&v13, (uint64_t *)&unk_101683E20);
  if (sub_10068F2EC((uint64_t)&v13) == 1) {
    return 0;
  }
  long long v25 = v17;
  long long v26 = v18;
  v27[0] = v19;
  v27[1] = v20;
  long long v21 = v13;
  long long v22 = v14;
  long long v23 = v15;
  long long v24 = v16;
  sub_10068F4B8();
  v28[2] = v15;
  v28[3] = v16;
  v28[4] = v17;
  uint64_t v29 = v18;
  v28[0] = v13;
  v28[1] = v14;
  v11[0] = v13;
  v11[1] = v14;
  v11[3] = v16;
  v11[4] = v17;
  _OWORD v11[2] = v15;
  uint64_t v12 = v18;
  sub_10068F4F8((uint64_t)v28);
  unint64_t v2 = sub_1007B0B84((uint64_t)v11);
  double v3 = *((float *)&v26 + 2);
  double v4 = *((float *)&v26 + 3);
  double v5 = *(float *)v27;
  double v6 = *((float *)v27 + 1);
  sub_10051B3EC((uint64_t)v27 + 8, (uint64_t)v30, &qword_101679B98);
  sub_10051B3EC((uint64_t)v30, (uint64_t)&v31, &qword_101679B98);
  if (v32) {
    id v7 = [objc_allocWithZone((Class)CRLCurvedShadow) initWithOffset:v2 angle:1 radius:v4 curve:v3 opacity:v5 color:v31 enabled:v6];
  }
  else {
    id v7 = [objc_allocWithZone((Class)CRLDropShadow) initWithAngle:v2 offset:1 radius:v3 opacity:v4 color:v5 enabled:v6];
  }
  id v1 = v7;

  return v1;
}

uint64_t sub_100B411F0(void *a1)
{
  double v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101693238);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B4195C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  memcpy(v11, v3, sizeof(v11));
  char v12 = 0;
  sub_100B422C8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    v11[0] = v3[47];
    char v12 = 1;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100B413A0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100B413A8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 376) = a1;
  return result;
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *sub_100B413D4())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t sub_100B413F4(uint64_t *__src, void *a2)
{
  memcpy(v7, __src, sizeof(v7));
  uint64_t v4 = __src[47];
  memcpy(__dst, a2, sizeof(__dst));
  uint64_t v5 = a2[47];
  if ((sub_100F3AB04((uint64_t)v7, (uint64_t)__dst) & 1) == 0) {
    return 0;
  }

  return sub_100ED60AC(v4, v5);
}

void *sub_100B41490@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100B41C6C(a1, v5);
  if (!v2) {
    return memcpy(a2, v5, 0x180uLL);
  }
  return result;
}

uint64_t sub_100B414E4(void *a1)
{
  return sub_100B411F0(a1);
}

uint64_t sub_100B414FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2CD4();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B41550(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2CD4();

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B415A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1009F2E04();
  unint64_t v7 = sub_100B4231C();

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B41614(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1009F2CD4();

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100B41660()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100B416B0()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100B416F8(uint64_t a1)
{
  unint64_t v2 = sub_100B41AC4();

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

unint64_t sub_100B41748()
{
  unint64_t result = qword_1016931C0;
  if (!qword_1016931C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931C0);
  }
  return result;
}

unint64_t sub_100B417A4()
{
  unint64_t result = qword_1016931C8;
  if (!qword_1016931C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931C8);
  }
  return result;
}

unint64_t sub_100B417FC()
{
  unint64_t result = qword_1016931D0;
  if (!qword_1016931D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931D0);
  }
  return result;
}

unint64_t sub_100B41854()
{
  unint64_t result = qword_1016931D8;
  if (!qword_1016931D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931D8);
  }
  return result;
}

unint64_t sub_100B418AC()
{
  unint64_t result = qword_1016931E0;
  if (!qword_1016931E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931E0);
  }
  return result;
}

unint64_t sub_100B41904()
{
  unint64_t result = qword_1016931E8;
  if (!qword_1016931E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931E8);
  }
  return result;
}

unint64_t sub_100B4195C()
{
  unint64_t result = qword_1016931F0;
  if (!qword_1016931F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931F0);
  }
  return result;
}

unint64_t sub_100B419B4()
{
  unint64_t result = qword_1016931F8;
  if (!qword_1016931F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016931F8);
  }
  return result;
}

unint64_t sub_100B41A0C()
{
  unint64_t result = qword_101693200;
  if (!qword_101693200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693200);
  }
  return result;
}

unint64_t sub_100B41A64()
{
  unint64_t result = qword_101693208;
  if (!qword_101693208)
  {
    sub_100522D34(&qword_101693210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693208);
  }
  return result;
}

unint64_t sub_100B41AC4()
{
  unint64_t result = qword_101693218;
  if (!qword_101693218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693218);
  }
  return result;
}

unint64_t sub_100B41B1C()
{
  unint64_t result = qword_101693220;
  if (!qword_101693220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693220);
  }
  return result;
}

uint64_t sub_100B41B70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144616964656DLL && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_100B41C6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v13 = sub_1005057FC(&qword_101693228);
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v6);
  uint64_t v8 = (char *)&v14[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100B4195C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    long long v9 = a2;
    v20[399] = 0;
    sub_100B41F38();
    uint64_t v10 = v13;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    memcpy(v18, v19, sizeof(v18));
    memcpy(v20, v19, 0x178uLL);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    v20[398] = 1;
    sub_100B41F8C((uint64_t)v18);
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v10);
    uint64_t v11 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    memcpy(v14, v18, 0x178uLL);
    v14[47] = v11;
    sub_100B421AC((uint64_t)v14);
    swift_bridgeObjectRelease();
    sub_100B4209C((uint64_t)v18);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    memcpy(v15, v20, sizeof(v15));
    uint64_t v16 = v11;
    sub_10089B624((uint64_t)v15);
    return memcpy(v9, v14, 0x180uLL);
  }
}

unint64_t sub_100B41F38()
{
  unint64_t result = qword_101693230;
  if (!qword_101693230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693230);
  }
  return result;
}

uint64_t sub_100B41F8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 248);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 256);
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 312);
  long long v10 = *(_OWORD *)(a1 + 296);
  sub_10051A1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051A364(v12, v11, v2, v3, v4, v5, v6, v7, v10, *((uint64_t *)&v10 + 1), v9);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100B4209C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 248);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 256);
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 312);
  long long v10 = *(_OWORD *)(a1 + 296);
  sub_100519F40(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051A0B8(v12, v11, v2, v3, v4, v5, v6, v7, v10, *((uint64_t *)&v10 + 1), v9);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B421AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 248);
  uint64_t v11 = *(void *)(a1 + 240);
  uint64_t v12 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 256);
  uint64_t v4 = *(void *)(a1 + 264);
  uint64_t v5 = *(void *)(a1 + 272);
  uint64_t v6 = *(void *)(a1 + 280);
  uint64_t v7 = *(void *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 312);
  long long v10 = *(_OWORD *)(a1 + 296);
  sub_10051A1EC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200));
  sub_10051A364(v12, v11, v2, v3, v4, v5, v6, v7, v10, *((uint64_t *)&v10 + 1), v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_100B422C8()
{
  unint64_t result = qword_101693240;
  if (!qword_101693240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693240);
  }
  return result;
}

unint64_t sub_100B4231C()
{
  unint64_t result = qword_101693248;
  if (!qword_101693248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693248);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLImagePresetData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B4243CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLImagePresetData.CodingKeys()
{
  return &type metadata for CRLImagePresetData.CodingKeys;
}

unint64_t sub_100B42478()
{
  unint64_t result = qword_101693250;
  if (!qword_101693250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693250);
  }
  return result;
}

void *sub_100B424D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 24))();
  int v3 = v2;
  if (v2)
  {
    id v4 = [v2 title];

    if (v4)
    {
      int v3 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v3;
}

uint64_t sub_100B42560(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(*(uint64_t (**)(void))(a2 + 32))();
  uint64_t v3 = sub_100B425BC((uint64_t)v2);

  return v3;
}

uint64_t sub_100B425BC(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10050F848(v1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
  uint64_t v6 = 0;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = v4;
    unint64_t v8 = v5;
    sub_10050BF48(0, &qword_101693260);
    sub_10050BF48(0, (unint64_t *)&unk_10168E1E0);
    uint64_t v6 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    sub_100514260(v7, v8);
  }
  return v6;
}

uint64_t static PHPickerViewController.crl_makePicker(delegate:allowMultiSelect:filter:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return sub_100B42B80(a1, a3, a4, v4, ObjectType, a2);
}

id PHPickerViewController.crl_loadFileRepresentations(for:supportedTypeIdentifiers:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for PHPickerResult();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    v25[1] = a2;
    uint64_t v26 = a3;
    uint64_t v27 = a4;
    long long v28 = v4;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    uint64_t v29 = v16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64));
    uint64_t v18 = *(void *)(v15 + 56);
    do
    {
      v29(v13, v17, v9);
      PHPickerResult.itemProvider.getter();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v13, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v17 += v18;
      --v14;
    }
    while (v14);
    a4 = v27;
    long long v19 = v28;
    a3 = v26;
  }
  else
  {
    long long v19 = v4;
  }
  sub_10050BF48(0, (unint64_t *)&unk_10169FAE0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v21 = Array._bridgeToObjectiveC()().super.isa;
  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100B42AD0;
  void aBlock[3] = &unk_1015251C0;
  long long v22 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v23 = [v19 crl_loadFileRepresentationsForResultItemProviders:isa, v21, v22];
  _Block_release(v22);

  return v23;
}

uint64_t sub_100B42AD0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    type metadata accessor for URL();
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(a2, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B42B80(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v27[0] = a3;
  v27[1] = a6;
  uint64_t v7 = sub_1005057FC(&qword_101674600);
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for PHPickerConfiguration();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  long long v20 = (char *)v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  long long v24 = (char *)v27 - v23;
  PHPickerConfiguration.init()();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v11);
  PHPickerConfiguration.preferredAssetRepresentationMode.setter();
  if (a2) {
    PHPickerConfiguration.selectionLimit.setter();
  }
  sub_100B42E14(v27[0], (uint64_t)v10);
  PHPickerConfiguration.filter.setter();
  sub_10050BF48(0, &qword_101674418);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v20, v24, v16);
  uint64_t v25 = PHPickerViewController.init(configuration:)();
  swift_unknownObjectRetain();
  PHPickerViewController.delegate.setter();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  return v25;
}

uint64_t sub_100B42DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B42E0C()
{
  return swift_release();
}

uint64_t sub_100B42E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101674600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100B42F2C()
{
  return sub_100B433B4(type metadata accessor for CRLShadowView);
}

uint64_t type metadata accessor for CRLShadowView()
{
  return self;
}

id sub_100B42F8C(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for CRLShadowLayer();
  return [super a3];
}

void sub_100B42FD8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v25.receiver = a1;
  v25.super_class = (Class)type metadata accessor for CRLShadowLayer();
  uint64_t v12 = *a7;
  id v13 = v25.receiver;
  [super setValue:a2 forKey:a3];
  [v13 bounds];
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;
  double v21 = v20;
  [v13 cornerRadius];
  id v23 = [self bezierPathWithContinuousCornerRoundedRect:v15 cornerRadius:v17 v19, v21, v22];
  id v24 = [v23 CGPath];

  [v13 setShadowPath:v24];
}

id sub_100B43350(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4();
  return [super initWithCoder:a3];
}

id sub_100B4339C()
{
  return sub_100B433B4(type metadata accessor for CRLShadowLayer);
}

id sub_100B433B4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLShadowLayer()
{
  return self;
}

void sub_100B4374C(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v3 - 8, v4);
  objc_super v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_previewItemURL];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)&v1[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_fileRep] = a1;
  uint64_t v9 = v1;
  id v10 = a1;
  sub_100A27890();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  double v15 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform21CRLFileRepPlaceHolder_previewItemTitle];
  *double v15 = v11;
  v15[1] = v13;
  id v16 = [v10 layout];
  id v17 = [v16 info];

  if (!v17) {
    goto LABEL_10;
  }
  type metadata accessor for CRLFileItem();
  if (!swift_dynamicCastClass())
  {
    swift_unknownObjectRelease();
LABEL_10:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"item", 4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLFileRep.swift", 81, 2, 78);
    __break(1u);
    return;
  }
  if (v14)
  {
    uint64_t v18 = v14;
  }
  else
  {
    uint64_t v12 = 1701603686;
    uint64_t v18 = 0xE400000000000000;
  }
  swift_bridgeObjectRetain();
  id v19 = sub_100FA2D30((uint64_t)v6, v12, v18);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1005C6D24((uint64_t)v6, v7);
  swift_endAccess();

  double v20 = (objc_class *)type metadata accessor for CRLFileRepPlaceHolder();
  v22.receiver = v9;
  v22.super_class = v20;
  [super init];
  if (v19)
  {
    [v19 setAssociatedLifetimeObject:v10];
  }
  sub_1005CCBB8((uint64_t)v6);
}

id sub_100B43A50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFileRepPlaceHolder();
  return [super dealloc];
}

uint64_t sub_100B43AE8()
{
  return type metadata accessor for CRLFileRepPlaceHolder();
}

uint64_t type metadata accessor for CRLFileRepPlaceHolder()
{
  uint64_t result = qword_1016932E8;
  if (!qword_1016932E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B43B3C()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100B43BE4(double a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self animationWithKeyPath:v3];

  [v4 setDuration:a1];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:isa];

  [v4 setRemovedOnCompletion:0];
  [v4 setFillMode:kCAFillModeForwards];
  id v6 = String._bridgeToObjectiveC()();
  [v1 addAnimation:v4 forKey:v6];
}

void sub_100B43D18(double a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self animationWithKeyPath:v3];

  [v4 setDuration:a1];
  Class isa = Double._bridgeToObjectiveC()().super.super.isa;
  [v4 setFromValue:isa];

  [v4 setRemovedOnCompletion:1];
  [v1 opacity];
  Class v6 = Float._bridgeToObjectiveC()().super.super.isa;
  [v4 setToValue:v6];

  NSString v7 = String._bridgeToObjectiveC()();
  [v1 addAnimation:v4 forKey:v7];

  id v8 = String._bridgeToObjectiveC()();
  [v1 removeAnimationForKey:v8];
}

void sub_100B43E90(void *a1, void *a2, void *a3)
{
  *(void *)(v3
            + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_icc) = a1;
  id v6 = a1;
  id v7 = [v6 layerHost];
  if (!v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = (uint64_t)v7;
  id v9 = a3;
  id v10 = sub_10067999C(v8, v9);
  objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController());
  uint64_t v11 = v10;
  id v12 = v6;
  id v13 = v9;
  uint64_t v14 = v11;
  id v15 = a2;
  id v16 = sub_100E7D9F8(v12, a2, v13, v14);
  uint64_t v17 = OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController;
  uint64_t v18 = *(void **)&v14[OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController];
  *(void *)&v14[OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController] = v16;

  uint64_t v19 = *(void *)&v14[v17];
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  double v20 = *(void **)(v19 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_textBuilder);
  if (!v20)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v21 = v14;
  id v22 = v20;
  id v23 = sub_100563854();

  uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects];
  *(void *)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_observedObjects] = v23;
  objc_super v25 = *(void **)&v21[OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_changeNotifier];
  if (v25)
  {
    uint64_t v26 = v21;
    id v27 = v25;
    sub_100667E18(v24, v27, (uint64_t)v26);

    long long v28 = v26;
    id v29 = v27;
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_100667E38(v30, v29, (uint64_t)v28);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

double *sub_100B44090(void *a1, void *a2)
{
  sub_100B447A4();
  uint64_t v5 = v4;
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = sub_100B44CFC(v5, (uint64_t)v6, (uint64_t)v7);
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_100B44108(uint64_t a1, uint64_t a2)
{
  sub_100B447A4();
  v6[2] = a1;
  v6[3] = a2;
  return sub_100875C48((uint64_t)sub_100B44C88, (uint64_t)v6, v4);
}

void sub_100B44168()
{
  sub_100B447A4();
  uint64_t v1 = v0;
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = v0 + 32;
    uint64_t v5 = _swiftEmptyArrayStorage;
    while (v3 < *(void *)(v1 + 16))
    {
      sub_1005498A4(v4, (uint64_t)&v11);
      uint64_t v6 = v12;
      uint64_t v7 = v13;
      sub_10050F848(&v11, v12);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 32))(v6, v7))
      {
        sub_10053974C(&v11, (uint64_t)v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB8E4(0, *((void *)v5 + 2) + 1, 1);
        }
        uint64_t v5 = v14;
        unint64_t v9 = *((void *)v14 + 2);
        unint64_t v8 = *((void *)v14 + 3);
        if (v9 >= v8 >> 1)
        {
          sub_1006BB8E4(v8 > 1, v9 + 1, 1);
          uint64_t v5 = v14;
        }
        *((void *)v5 + 2) = v9 + 1;
        sub_10053974C(v10, (uint64_t)&v5[5 * v9 + 4]);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v11);
      }
      ++v3;
      v4 += 40;
      if (v2 == v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100B442D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100B44AC4((uint64_t)&v14);
  if (v15)
  {
    sub_10053974C(&v14, (uint64_t)v16);
    uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC8Freeform28CRLMiniFormatterStateManager_editorController);
    if (type metadata accessor for CRLWPEditor()) {
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    }
    else {
      uint64_t ObjCClassFromMetadata = 0;
    }
    id v10 = [v7 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
    uint64_t v11 = swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (v11
      && (uint64_t v12 = v17,
          uint64_t v13 = v18,
          sub_10050F848(v16, v17),
          ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8))(a1, a2, v12, v13) & 1) == 0))
    {
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    else
    {
      sub_1005498A4((uint64_t)v16, a3);
    }
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  }
  else
  {
    uint64_t result = sub_100522F00((uint64_t)&v14, &qword_1016792F8);
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100B44418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_100B44AC4((uint64_t)&v9);
  if (v10)
  {
    sub_10053974C(&v9, (uint64_t)v11);
    uint64_t v6 = v12;
    uint64_t v7 = v13;
    sub_10050F848(v11, v12);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6, v7))
    {
      sub_1005498A4((uint64_t)v11, a3);
    }
    else
    {
      *(void *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v11);
  }
  else
  {
    uint64_t result = sub_100522F00((uint64_t)&v9, &qword_1016792F8);
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void sub_100B444F4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1
                 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (v2)
  {
    uint64_t v3 = *(void **)(v2
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    if (v3)
    {
      sub_1005498A4(a1, (uint64_t)v13);
      id v4 = v3;
      sub_1005057FC((uint64_t *)&unk_1016787C8);
      sub_1009A08B0();
      if (swift_dynamicCast())
      {
        id v5 = [v4 topViewController];
        if (v5
          && (uint64_t v6 = v5,
              id v7 = v12,
              id v8 = v6,
              char v9 = static NSObject.== infix(_:_:)(),
              v8,
              v8,
              v7,
              (v9 & 1) != 0))
        {
          [v4 dismissViewControllerAnimated:1 completion:0];
        }
        else
        {
          id v10 = [v4 viewControllers];
          unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v10) = sub_100ED5B20((uint64_t)v12, v11);
          swift_bridgeObjectRelease();
          if (v10)
          {
          }
        }
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_100B446A8()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_icc) layerHost];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  if (([v1 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {
LABEL_7:
    swift_unknownObjectRelease();
    return 0;
  }
  id v3 = [v2 asiOSCVC];
  swift_unknownObjectRelease();
  id result = [v3 delegate];
  if (result)
  {
    id v5 = result;
    if ([result respondsToSelector:"viewControllerForMiniFormatterForCanvasViewController:"])
    {
      id v6 = [v5 viewControllerForMiniFormatterForCanvasViewController:v3];

      swift_unknownObjectRelease();
      return v6;
    }

    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_100B447A4()
{
  sub_1005057FC((uint64_t *)&unk_1016787E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10117E810;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController;
  id v3 = *(char **)(v0
                + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (!v3)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return;
  }
  uint64_t v4 = v1;
  *(void *)(v1 + 56) = type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryViewController();
  *(void *)(v4 + 64) = &off_1015311D0;
  *(void *)(v4 + 32) = v3;
  uint64_t v24 = v4;
  id v5 = *(void **)&v3[OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedAuxiliaryViewController];
  if (v5)
  {
    sub_1009A08B0();
    id v6 = v3;
    id v7 = v5;
    sub_1005057FC(&qword_1016787A8);
    if (swift_dynamicCast())
    {
      if (*((void *)&v21 + 1))
      {
        swift_bridgeObjectRelease();
        sub_10053974C(&v20, (uint64_t)v23);
        uint64_t v8 = swift_allocObject();
        *(_OWORD *)(v8 + 16) = xmmword_10117E810;
        sub_10053974C(v23, v8 + 32);
        return;
      }
    }
    else
    {
      uint64_t v22 = 0;
      long long v20 = 0u;
      long long v21 = 0u;
    }
  }
  else
  {
    uint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
    char v9 = v3;
  }
  sub_100522F00((uint64_t)&v20, &qword_1016787B0);
  uint64_t v10 = *(void *)(v0 + v2);
  if (!v10) {
    goto LABEL_29;
  }
  unint64_t v11 = *(void **)(v10
                 + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
  if (!v11) {
    return;
  }
  id v12 = [v11 viewControllers];
  sub_1009A08B0();
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v20 = _swiftEmptyArrayStorage;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
LABEL_12:
      if (v14 >= 1)
      {
        for (uint64_t i = 0; i != v14; ++i)
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v13 + 8 * i + 32);
          }
          id v17 = v16;
          sub_1005057FC(&qword_1016787A8);
          if (swift_dynamicCast())
          {
            _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v23);
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v18 = (double *)v20;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = _swiftEmptyArrayStorage;
LABEL_24:
  uint64_t v19 = sub_10065C1A0((unint64_t)v18);
  swift_release();
  if (v19) {
    sub_1006E235C((uint64_t)v19);
  }
}

void sub_100B44AC4(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1
                 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController);
  if (v3)
  {
    uint64_t v4 = *(void **)(v3
                  + OBJC_IVAR____TtC8Freeform53CRLiOSMiniFormatterTextEditingAccessoryViewController_presentedNavigationController);
    if (v4
      && [v4 visibleViewController]
      && (sub_1009A08B0(), sub_1005057FC((uint64_t *)&unk_1016787C8), (swift_dynamicCast() & 1) != 0))
    {
      if (*((void *)&v6 + 1))
      {
        sub_10053974C(&v5, a1);
        return;
      }
    }
    else
    {
      uint64_t v7 = 0;
      long long v5 = 0u;
      long long v6 = 0u;
    }
    sub_100522F00((uint64_t)&v5, &qword_1016792F8);
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    __break(1u);
  }
}

void sub_100B44BA4()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_textEditingAccessoryViewController));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform51CRLiOSMiniFormatterTextEditingAccessoryStateManager_icc);
}

id sub_100B44BE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryStateManager();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniFormatterTextEditingAccessoryStateManager()
{
  return self;
}

uint64_t sub_100B44C88(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  sub_10050F848(a1, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4, v5) & 1;
}

double *sub_100B44CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = _swiftEmptyArrayStorage;
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v8 = a1 + 32;
    char v9 = _swiftEmptyArrayStorage;
    do
    {
      sub_1005498A4(v8, (uint64_t)&v15);
      uint64_t v10 = v16;
      uint64_t v11 = v17;
      sub_10050F848(&v15, v16);
      if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24))(a2, a3, v10, v11))
      {
        sub_10053974C(&v15, (uint64_t)v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1006BB8E4(0, *((void *)v9 + 2) + 1, 1);
        }
        char v9 = v18;
        unint64_t v13 = *((void *)v18 + 2);
        unint64_t v12 = *((void *)v18 + 3);
        if (v13 >= v12 >> 1)
        {
          sub_1006BB8E4(v12 > 1, v13 + 1, 1);
          char v9 = v18;
        }
        *((void *)v9 + 2) = v13 + 1;
        sub_10053974C(v14, (uint64_t)&v9[5 * v13 + 4]);
      }
      else
      {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v15);
      }
      v8 += 40;
      --v5;
    }
    while (v5);
    return v18;
  }
  return result;
}

uint64_t sub_100B44E58()
{
  type metadata accessor for CRLCloudKitShareNameHelper();
  swift_allocObject();
  uint64_t result = sub_100B45538();
  qword_101693330 = result;
  return result;
}

uint64_t sub_100B44E98(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CharacterSet();
  uint64_t v76 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v77 = (char *)v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1005057FC(&qword_101687FD0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  char v74 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)v72 - v12;
  uint64_t v14 = type metadata accessor for PersonNameComponents();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v75 = (char *)v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)v72 - v21;
  __chkstk_darwin(v20, v23);
  objc_super v25 = (char *)v72 - v24;
  id v26 = [objc_allocWithZone((Class)NSPersonNameComponentsFormatter) init];
  [v26 setStyle:a1 & 1];
  id v27 = [v2 userIdentity];
  id v28 = [v27 nameComponents];

  uint64_t v78 = v4;
  if (v28)
  {
    static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();

    id v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v29(v13, v22, v14);
    uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
    v30(v13, 0, 1, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
    {
      id v73 = v30;
      v29(v25, v13, v14);
      Class isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
      id v63 = [v26 stringFromPersonNameComponents:isa];

      uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v66 = v65;

      uint64_t v79 = v64;
      uint64_t v80 = v66;
      long long v67 = v77;
      static CharacterSet.whitespaces.getter();
      sub_10052E310();
      uint64_t v58 = StringProtocol.trimmingCharacters(in:)();
      unint64_t v69 = v68;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v67, v78);
      swift_bridgeObjectRelease();
      if ((v69 & 0x2000000000000000) != 0) {
        uint64_t v70 = HIBYTE(v69) & 0xF;
      }
      else {
        uint64_t v70 = v58 & 0xFFFFFFFFFFFFLL;
      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v25, v14);
      if (v70)
      {

        return v58;
      }
      uint64_t v31 = v15;
      swift_bridgeObjectRelease();
      uint64_t v32 = v26;
      uint64_t v30 = v73;
      goto LABEL_6;
    }
    uint64_t v31 = v15;
  }
  else
  {
    uint64_t v31 = v15;
    uint64_t v30 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
    v30(v13, 1, 1, v14);
  }
  uint64_t v32 = v26;
  sub_100B47E00((uint64_t)v13);
LABEL_6:
  uint64_t v33 = (uint64_t)sub_100B463F4();
  if (!v34) {
    goto LABEL_22;
  }
  uint64_t v35 = HIBYTE(v34) & 0xF;
  if ((v34 & 0x2000000000000000) == 0) {
    uint64_t v35 = v33 & 0xFFFFFFFFFFFFLL;
  }
  if (!v35)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  long long v36 = sub_100B47568(v33, v34);
  swift_bridgeObjectRelease();
  if (!v36)
  {
LABEL_22:

    return 0;
  }
  id v37 = [v36 namePrefix];
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v72[7] = v39;
  id v73 = (void (*)(char *, void, uint64_t, uint64_t))v38;

  id v40 = [v36 givenName];
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v72[5] = v42;
  v72[6] = v41;

  id v43 = [v36 middleName];
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v72[3] = v45;
  v72[4] = v44;

  id v46 = [v36 familyName];
  uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v72[1] = v48;
  v72[2] = v47;

  id v49 = [v36 nameSuffix];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v50 = [v36 nickname];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  v30(v74, 1, 1, v14);
  long long v51 = v75;
  PersonNameComponents.init(namePrefix:givenName:middleName:familyName:nameSuffix:nickname:phoneticRepresentation:)();
  Class v52 = PersonNameComponents._bridgeToObjectiveC()().super.isa;
  id v53 = [v32 stringFromPersonNameComponents:v52];

  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v56 = v55;

  uint64_t v79 = v54;
  uint64_t v80 = v56;
  uint64_t v57 = v77;
  static CharacterSet.whitespaces.getter();
  sub_10052E310();
  uint64_t v58 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v76 + 8))(v57, v78);
  swift_bridgeObjectRelease();

  if ((v60 & 0x2000000000000000) != 0) {
    uint64_t v61 = HIBYTE(v60) & 0xF;
  }
  else {
    uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v51, v14);
  if (!v61)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v58;
}

uint64_t sub_100B45538()
{
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5, v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8, v8);
  *(void *)(v0 + 16) = sub_100A39270((uint64_t)_swiftEmptyArrayStorage);
  sub_10050BF48(0, (unint64_t *)&qword_1016725C0);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10077EFF4((unint64_t *)&qword_101676560, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1005057FC(&qword_101693440);
  sub_100636834((unint64_t *)&qword_101676568, &qword_101693440);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  uint64_t v9 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v10 = v16;
  *(void *)(v16 + 24) = v9;
  id v11 = [self defaultCenter];
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_100B47F2C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1005E5680;
  void aBlock[3] = &unk_1015252E8;
  unint64_t v13 = _Block_copy(aBlock);
  swift_release();
  id v14 = [v11 addObserverForName:CNContactStoreDidChangeNotification object:0 queue:0 usingBlock:v13];
  _Block_release(v13);
  swift_unknownObjectRelease();

  return v10;
}

uint64_t sub_100B458A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v14 = *(id *)(result + 24);
    swift_release();
    aBlock[4] = sub_100B47F4C;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101525310;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_10077EFF4((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v17 = v8;
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v17);
    return swift_release();
  }
  return result;
}

uint64_t sub_100B45B70()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v0 = (id)static OS_os_log.shareState;
  uint64_t v1 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v0, (uint64_t)&_mh_execute_header, v1, (uint64_t)"Received CNContactStoreDidChange notification, clearing cache", 61, 2, (uint64_t)_swiftEmptyArrayStorage);

  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_beginAccess();
    *(void *)(v3 + 16) = &_swiftEmptyDictionarySingleton;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100B45C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v13 = 1;
  uint64_t v6 = *(NSObject **)(v2 + 24);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = &v13;
  v7[3] = v3;
  v7[4] = a1;
  v7[5] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100B48A80;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_1006591F0;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_1006D9628;
  void aBlock[3] = &unk_1015253D8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v13;
    swift_release();
    return v11;
  }
  return result;
}

void sub_100B45E00(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_100955F50(a3, a4);
    if (v10)
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      id v12 = (id)v11;
    }
    else
    {
      uint64_t v11 = 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = 1;
  }
  uint64_t v13 = *a1;
  *a1 = (void *)v11;
  sub_100522AD8(v13);
}

uint64_t sub_100B45EB4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  id v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = *(void *)(v4 + 24);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a1;
  aBlock[4] = sub_100B48A34;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100679958;
  void aBlock[3] = &unk_101525360;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  v22[1] = _swiftEmptyArrayStorage;
  sub_10077EFF4((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_100636834((unint64_t *)&qword_1016747F0, (uint64_t *)&unk_1016725D0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return swift_release();
}

uint64_t sub_100B4617C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  id v8 = a4;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_100978480((uint64_t)a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 16) = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_100B46238()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCloudKitShareNameHelper()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CRLCloudKitShareNameHelperCacheEntry(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CRLCloudKitShareNameHelperCacheEntry(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLCloudKitShareNameHelperCacheEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCloudKitShareNameHelperCacheEntry()
{
  return &type metadata for CRLCloudKitShareNameHelperCacheEntry;
}

id sub_100B463F4()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v0 userIdentity];
  id v7 = [v6 lookupInfo];

  if (v7)
  {
    id v8 = [v7 emailAddress];

    if (v8)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      v13[0] = v9;
      v13[1] = v11;
      static CharacterSet.whitespaces.getter();
      sub_10052E310();
      id v7 = (id)StringProtocol.trimmingCharacters(in:)();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_100B4657C(void *a1, void *a2, uint64_t a3)
{
  sub_10050F848(a1, a1[3]);
  uint64_t v5 = _bridgeAnythingToObjectiveC<A>(_:)();
  sub_10050F848(a2, a2[3]);
  uint64_t v6 = _bridgeAnythingToObjectiveC<A>(_:)();
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, v5, v6);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_100B4660C(void *a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(void *, void *))
{
  if (a3)
  {
    uint64_t v15 = sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    uint64_t v13 = v15;
    v14[0] = a2;
    v12[0] = a1;
  }
  else
  {
    uint64_t v15 = sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    uint64_t v13 = v15;
    v14[0] = a1;
    v12[0] = a2;
  }
  id v8 = a1;
  id v9 = a2;
  uint64_t v10 = a5(v14, v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v12);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v14);
  return v10;
}

uint64_t sub_100B466C0(void **a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_100B4660C(*a1, *a2, *(unsigned char *)v4, a4, *(uint64_t (**)(void *, void *))(v4 + 16));
}

uint64_t sub_100B466D4()
{
  return *v0;
}

uint64_t sub_100B466DC(uint64_t result)
{
  *uint64_t v1 = result & 1;
  return result;
}

Swift::Int sub_100B466E8()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  SortOrder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t sub_100B46748()
{
  Hasher._combine(_:)(*(void *)(v0 + 8));

  return SortOrder.hash(into:)();
}

Swift::Int sub_100B46798()
{
  Swift::UInt v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  SortOrder.hash(into:)();
  return Hasher._finalize()();
}

uint64_t sub_100B467F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*((void *)a1 + 1) == *((void *)a2 + 1)) {
    return static SortOrder.== infix(_:_:)(*a1, *a2);
  }
  else {
    return 0;
  }
}

void sub_100B46818(unint64_t a1)
{
  unint64_t v5 = (unint64_t)sub_100B47B14(a1);
  uint64_t v6 = (double **)[v1 currentUserParticipant];
  if (v6)
  {
    Swift::UInt v1 = v6;
    id v7 = [v6 role];

    if (v7 == (id)1)
    {
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v8 != 2) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v8 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v8 != 2)
        {
LABEL_5:
          uint64_t v3 = v8 - 1;
          if (v8 == 1)
          {
            id v9 = [self mainBundle];
            NSString v10 = String._bridgeToObjectiveC()();
            NSString v11 = String._bridgeToObjectiveC()();
            id v12 = (double **)[v9 localizedStringForKey:v10 value:v11 table:0];

            static String._unconditionallyBridgeFromObjectiveC(_:)();
            if (v5 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (!v28) {
                goto LABEL_37;
              }
            }
            else if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_37;
            }
            if ((v5 & 0xC000000000000001) == 0)
            {
              if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v29 = *(id *)(v5 + 32);
LABEL_32:
                uint64_t v30 = v29;
                swift_bridgeObjectRelease();
                uint64_t v31 = sub_100B44E98(0);
                uint64_t v33 = v32;

                if (!v33) {
                  goto LABEL_93;
                }
                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v34 = swift_allocObject();
                *(_OWORD *)(v34 + 16) = xmmword_10117E810;
                *(void *)(v34 + 56) = &type metadata for String;
                *(void *)(v34 + 64) = sub_100528BE4();
                *(void *)(v34 + 32) = v31;
                *(void *)(v34 + 40) = v33;
LABEL_92:
                String.init(format:_:)();
                goto LABEL_93;
              }
              __break(1u);
              goto LABEL_103;
            }
LABEL_101:
            id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_32;
          }
          if (v8 < 3)
          {
            swift_bridgeObjectRelease();
            if (!(a1 >> 62))
            {
              uint64_t v35 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
              uint64_t v36 = v35 - 1;
              if (!__OFSUB__(v35, 1))
              {
LABEL_36:
                id v37 = [self mainBundle];
                v38._countAndFlagsBits = 0xD000000000000015;
                v91._object = (void *)0x80000001012740E0;
                v38._object = (void *)0x8000000101274200;
                v39._countAndFlagsBits = 0;
                v39._object = (void *)0xE000000000000000;
                v91._countAndFlagsBits = 0xD000000000000062;
                NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v91);

                sub_1005057FC((uint64_t *)&unk_101672B40);
                uint64_t v40 = swift_allocObject();
                *(_OWORD *)(v40 + 16) = xmmword_10117E810;
                *(void *)(v40 + 56) = &type metadata for Int;
                *(void *)(v40 + 64) = &protocol witness table for Int;
                *(void *)(v40 + 32) = v36;
                static String.localizedStringWithFormat(_:_:)();
LABEL_37:
                swift_bridgeObjectRelease();
LABEL_93:
                swift_bridgeObjectRelease();
                return;
              }
              goto LABEL_109;
            }
LABEL_107:
            swift_bridgeObjectRetain();
            uint64_t v88 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            uint64_t v36 = v88 - 1;
            if (!__OFSUB__(v88, 1)) {
              goto LABEL_36;
            }
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          id v18 = [self mainBundle];
          v19._countAndFlagsBits = 0xD000000000000014;
          v90._countAndFlagsBits = 0xD0000000000000A0;
          v90._object = (void *)0x8000000101274150;
          v19._object = (void *)0x8000000101274220;
          v20._countAndFlagsBits = 0;
          v20._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v90);

          if ((v5 & 0xC000000000000001) == 0)
          {
            if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v21 = *(id *)(v5 + 32);
              goto LABEL_26;
            }
            __break(1u);
            goto LABEL_107;
          }
LABEL_105:
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_26:
          uint64_t v22 = v21;
          uint64_t v23 = sub_100B44E98(1);
          uint64_t v25 = v24;

          if (v25)
          {
            swift_bridgeObjectRelease();
            sub_1005057FC((uint64_t *)&unk_101672B40);
            uint64_t v26 = swift_allocObject();
            *(_OWORD *)(v26 + 16) = xmmword_10117D8C0;
            *(void *)(v26 + 56) = &type metadata for String;
            unint64_t v27 = sub_100528BE4();
            *(void *)(v26 + 32) = v23;
            *(void *)(v26 + 40) = v25;
            *(void *)(v26 + 96) = &type metadata for Int;
            *(void *)(v26 + 104) = &protocol witness table for Int;
            *(void *)(v26 + 64) = v27;
            *(void *)(v26 + 72) = v3;
            static String.localizedStringWithFormat(_:_:)();
          }
          goto LABEL_37;
        }
      }
      id v72 = [self mainBundle];
      NSString v73 = String._bridgeToObjectiveC()();
      NSString v74 = String._bridgeToObjectiveC()();
      id v12 = (double **)[v72 localizedStringForKey:v73 value:v74 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = (id *)v75;

      unint64_t v2 = v5 & 0xC000000000000001;
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v76 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_84:
        uint64_t v77 = v76;
        uint64_t v78 = sub_100B44E98(1);
        uint64_t v80 = v79;

        if (!v80) {
          goto LABEL_37;
        }
        if (v2)
        {
          id v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
          {
LABEL_110:
            __break(1u);
            return;
          }
          id v81 = *(id *)(v5 + 40);
        }
        uint64_t v82 = v81;
        swift_bridgeObjectRelease();
        uint64_t v83 = sub_100B44E98(1);
        uint64_t v85 = v84;

        if (!v85)
        {
          swift_bridgeObjectRelease();
          goto LABEL_93;
        }
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v86 = swift_allocObject();
        *(_OWORD *)(v86 + 16) = xmmword_10117D8C0;
        *(void *)(v86 + 56) = &type metadata for String;
        unint64_t v87 = sub_100528BE4();
        *(void *)(v86 + 32) = v78;
        *(void *)(v86 + 40) = v80;
        *(void *)(v86 + 96) = &type metadata for String;
        *(void *)(v86 + 104) = v87;
        *(void *)(v86 + 64) = v87;
        *(void *)(v86 + 72) = v83;
        *(void *)(v86 + 80) = v85;
        goto LABEL_92;
      }
      if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v76 = *(id *)(v5 + 32);
        goto LABEL_84;
      }
      __break(1u);
LABEL_97:
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_98;
      }
      goto LABEL_72;
    }
  }
  unint64_t v89 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    if ((a1 & 0x8000000000000000) != 0) {
      Swift::UInt v1 = (double **)a1;
    }
    else {
      Swift::UInt v1 = (double **)(a1 & 0xFFFFFFFFFFFFFF8);
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13)
    {
LABEL_11:
      if (v13 < 1)
      {
        __break(1u);
        goto LABEL_66;
      }
      for (uint64_t i = 0; i != v13; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(a1 + 8 * i + 32);
        }
        uint64_t v16 = v15;
        if ([v15 role] == (id)1)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          Swift::UInt v1 = (double **)&v89;
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v17 = v89;
      if ((v89 & 0x8000000000000000) != 0) {
        goto LABEL_63;
      }
      goto LABEL_43;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_63;
  }
LABEL_43:
  if ((v17 & 0x4000000000000000) != 0)
  {
LABEL_63:
    swift_bridgeObjectRetain();
    Swift::UInt v1 = (double **)_CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v1) {
      goto LABEL_64;
    }
    goto LABEL_45;
  }
  if (!*(void *)(v17 + 16))
  {
LABEL_64:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_45:
  if ((v17 & 0xC000000000000001) != 0)
  {
LABEL_66:
    uint64_t v41 = (double **)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_48;
  }
  if (!*(void *)(v17 + 16))
  {
    __break(1u);
LABEL_68:
    swift_bridgeObjectRetain();
    uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v42 != 2) {
      goto LABEL_50;
    }
    goto LABEL_69;
  }
  uint64_t v41 = (double **)*(id *)(v17 + 32);
LABEL_48:
  Swift::UInt v1 = v41;
  swift_release();
  if (v5 >> 62) {
    goto LABEL_68;
  }
  uint64_t v42 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v42 != 2)
  {
LABEL_50:
    if (v42 == 1)
    {
      swift_bridgeObjectRelease();
      sub_100B44E98(0);
LABEL_61:

      return;
    }
    if (v42 < 3)
    {
      swift_bridgeObjectRelease();
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v52 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v53 = v52 - 1;
      if (__OFSUB__(v52, 1))
      {
        __break(1u);
        goto LABEL_101;
      }
      id v54 = [self mainBundle];
      v55._countAndFlagsBits = 0xD000000000000010;
      v93._object = (void *)0x80000001012740E0;
      v55._object = (void *)0x80000001012740C0;
      v56._countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      v93._countAndFlagsBits = 0xD000000000000062;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v93);

      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_10117E810;
      *(void *)(v57 + 56) = &type metadata for Int;
      *(void *)(v57 + 64) = &protocol witness table for Int;
      *(void *)(v57 + 32) = v53;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
    id v43 = [self mainBundle];
    v92._countAndFlagsBits = 0xD0000000000000A0;
    v92._object = (void *)0x8000000101274150;
    v44._countAndFlagsBits = 0x756C252026204025;
    v44._object = (void *)0xEF73726568744F20;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v92);

    uint64_t v46 = sub_100B44E98(1);
    uint64_t v48 = v47;
    if (v47)
    {
      uint64_t v49 = v46;
      swift_bridgeObjectRelease();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_10117D8C0;
      *(void *)(v50 + 56) = &type metadata for String;
      unint64_t v51 = sub_100528BE4();
      *(void *)(v50 + 32) = v49;
      *(void *)(v50 + 40) = v48;
      *(void *)(v50 + 96) = &type metadata for Int;
      *(void *)(v50 + 104) = &protocol witness table for Int;
      *(void *)(v50 + 64) = v51;
      *(void *)(v50 + 72) = v42 - 1;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
LABEL_60:
      swift_bridgeObjectRelease();
      goto LABEL_61;
    }
LABEL_62:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_69:
  id v58 = [self mainBundle];
  NSString v59 = String._bridgeToObjectiveC()();
  NSString v60 = String._bridgeToObjectiveC()();
  id v61 = [v58 localizedStringForKey:v59 value:v60 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v62 = sub_100B44E98(1);
  if (!v63) {
    goto LABEL_62;
  }
  uint64_t v3 = v62;
  unint64_t v2 = v63;
  id v12 = v1;
  uint64_t v64 = (id *)sub_100B47C70(v5);
  swift_bridgeObjectRelease();

  if ((unint64_t)v64 >> 62) {
    goto LABEL_97;
  }
  if (!*(void *)(((unint64_t)v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_98:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_93;
  }
LABEL_72:
  if (((unint64_t)v64 & 0xC000000000000001) != 0)
  {
LABEL_103:
    id v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_75;
  }
  if (!*(void *)(((unint64_t)v64 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_105;
  }
  id v65 = v64[4];
LABEL_75:
  uint64_t v66 = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_100B44E98(1);
  uint64_t v69 = v68;

  if (v69)
  {
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_10117D8C0;
    *(void *)(v70 + 56) = &type metadata for String;
    unint64_t v71 = sub_100528BE4();
    *(void *)(v70 + 32) = v3;
    *(void *)(v70 + 40) = v2;
    *(void *)(v70 + 96) = &type metadata for String;
    *(void *)(v70 + 104) = v71;
    *(void *)(v70 + 64) = v71;
    *(void *)(v70 + 72) = v67;
    *(void *)(v70 + 80) = v69;
    String.init(format:_:)();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

void *sub_100B47568(uint64_t a1, uint64_t a2)
{
  if (qword_10166F948 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)sub_100B45C7C(a1, a2);
  if (v4 == (void *)1)
  {
    unint64_t v5 = self;
    id v6 = [v5 descriptorForRequiredKeysForStyle:0];
    id v7 = CNContactEmailAddressesKey;
    id v8 = [v5 descriptorForRequiredKeysForNameOrder];
    id v9 = self;
    id v10 = [v9 descriptorForAllComparatorKeys];
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10117FBE0;
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v7;
    *(void *)(v11 + 48) = v8;
    *(void *)(v11 + 56) = v10;
    specialized Array._endMutation()();
    uint64_t v35 = v7;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v33 = a1;
    NSString v12 = String._bridgeToObjectiveC()();
    id v13 = [v9 predicateForContactsMatchingEmailAddress:v12];

    id v14 = [v9 comparatorForNameSortOrder:1];
    id v15 = (void *)swift_allocObject();
    void v15[2] = v14;
    id v16 = [objc_allocWithZone((Class)CNContactStore) init];
    sub_1005057FC(&qword_101693420);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v36[0] = 0;
    uint64_t v34 = v13;
    id v18 = [v16 unifiedContactsMatchingPredicate:v13 keysToFetch:isa error:v36];

    id v19 = v36[0];
    if (!v18)
    {
      id v23 = v36[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_10166F9C8 == -1)
      {
LABEL_12:
        swift_beginAccess();
        uint64_t v24 = (void *)static OS_os_log.crlDefault;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v26 = sub_100528BE4();
        *(void *)(inited + 64) = v26;
        uint64_t v27 = v33;
        *(void *)(inited + 32) = v33;
        *(void *)(inited + 40) = a2;
        swift_getErrorValue();
        id v28 = v24;
        swift_bridgeObjectRetain();
        uint64_t v29 = Error.localizedDescription.getter();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v26;
        *(void *)(inited + 72) = v29;
        *(void *)(inited + 80) = v30;
        uint64_t v31 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v28, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Error getting contacts for email (%@): %@", 41, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        swift_errorRelease();
        uint64_t v4 = 0;
LABEL_16:
        sub_100B45EB4(v4, v27, a2);

        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        return v4;
      }
LABEL_20:
      swift_once();
      goto LABEL_12;
    }
    sub_10050BF48(0, (unint64_t *)&qword_10167C580);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v20 = v19;

    LOBYTE(v36[0]) = 0;
    v36[1] = (id)1;
    void v36[2] = sub_100B47E98;
    v36[3] = v15;
    sub_1005057FC(&qword_101693428);
    sub_100636834(&qword_101693430, &qword_101693428);
    sub_100B47EA0();
    unint64_t v21 = Sequence.sorted<A>(using:)();
    swift_bridgeObjectRelease();
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v4) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v4 = *(void **)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_7:
        if ((v21 & 0xC000000000000001) != 0)
        {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_10;
        }
        if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v22 = *(id *)(v21 + 32);
LABEL_10:
          uint64_t v4 = v22;
          swift_bridgeObjectRelease();
LABEL_15:
          uint64_t v27 = v33;
          goto LABEL_16;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  return v4;
}

double *sub_100B47B14(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (double *)swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (double *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(a1 + 8 * i + 32);
      }
      id v6 = v5;
      if (([v5 isCurrentUser] & 1) != 0
        || (sub_100B44E98(0), uint64_t v8 = v7, swift_bridgeObjectRelease(), !v8))
      {
      }
      else
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double *sub_100B47C70(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_10050BF48(0, (unint64_t *)&qword_101693410);
        if (static NSObject.== infix(_:_:)())
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        ++v3;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100B47E00(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101687FD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B47E60()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B47E98(void *a1, void *a2)
{
  return sub_100B4657C(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_100B47EA0()
{
  unint64_t result = qword_101693438;
  if (!qword_101693438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693438);
  }
  return result;
}

uint64_t sub_100B47EF4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B47F2C(uint64_t a1)
{
  return sub_100B458A0(a1, v1);
}

uint64_t sub_100B47F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B47F44()
{
  return swift_release();
}

uint64_t sub_100B47F4C()
{
  return sub_100B45B70();
}

double *sub_100B47F54(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_18;
        }
        uint64_t v7 = CKShareParticipant.participantID.getter();
        uint64_t v9 = v8;
        if (v7 == CKShareParticipant.participantID.getter() && v9 == v10)
        {
          swift_bridgeObjectRelease_n();
LABEL_14:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          goto LABEL_5;
        }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_14;
        }

LABEL_5:
        ++v3;
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v4 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

BOOL sub_100B480FC(void *a1, void *a2)
{
  if (!a1) {
    return !a2;
  }
  if (!a2) {
    return 0;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v4 = a1;
  id v5 = a2;
  id v6 = [v4 recordID];
  id v7 = [v5 recordID];
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) == 0) {
    goto LABEL_30;
  }
  id v9 = [v4 owner];
  id v10 = [v5 owner];
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0) {
    goto LABEL_30;
  }
  NSString v12 = &selRef_alignCenter_;
  id v13 = [v4 permission];
  if (v13 != [v5 permission]) {
    goto LABEL_30;
  }
  id v14 = [v4 publicPermission];
  if (v14 != [v5 publicPermission]) {
    goto LABEL_30;
  }
  id v15 = [v4 recordChangeTag];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  id v21 = [v5 recordChangeTag];
  if (!v21)
  {
    if (!v19) {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  id v22 = v21;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  if (!v19)
  {
    if (!v25) {
      goto LABEL_23;
    }
LABEL_21:

LABEL_46:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!v25) {
    goto LABEL_21;
  }
  if (v17 == v23 && v19 == v25)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v26 & 1) == 0)
  {
LABEL_30:

    return 0;
  }
LABEL_23:
  id v27 = v4;
  static CKShare.SystemFieldKey.title.getter();
  uint64_t v28 = CKRecord.subscript.getter();

  swift_bridgeObjectRelease();
  if (v28)
  {
    sub_1005057FC((uint64_t *)&unk_101672F30);
    int v29 = swift_dynamicCast();
    if (v29) {
      uint64_t v30 = v77;
    }
    else {
      uint64_t v30 = 0;
    }
    if (v29) {
      unint64_t v31 = v78;
    }
    else {
      unint64_t v31 = 0;
    }
  }
  else
  {
    uint64_t v30 = 0;
    unint64_t v31 = 0;
  }
  id v32 = v5;
  static CKShare.SystemFieldKey.title.getter();
  uint64_t v33 = CKRecord.subscript.getter();

  swift_bridgeObjectRelease();
  if (!v33)
  {
    if (!v31) {
      goto LABEL_50;
    }
    goto LABEL_45;
  }
  sub_1005057FC((uint64_t *)&unk_101672F30);
  int v34 = swift_dynamicCast();
  if (v34) {
    uint64_t v35 = v77;
  }
  else {
    uint64_t v35 = 0;
  }
  if (v34) {
    unint64_t v36 = v78;
  }
  else {
    unint64_t v36 = 0;
  }
  if (!v31)
  {
    if (!v36) {
      goto LABEL_50;
    }
    goto LABEL_45;
  }
  if (!v36)
  {
LABEL_45:

    goto LABEL_46;
  }
  if (v30 == v35 && v31 == v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_50;
  }
  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_50:
    id v38 = v27;
    static CKShare.SystemFieldKey.thumbnailImageData.getter();
    uint64_t v39 = CKRecord.subscript.getter();

    swift_bridgeObjectRelease();
    unint64_t v40 = 0xF000000000000000;
    if (v39)
    {
      sub_1005057FC((uint64_t *)&unk_101672F30);
      int v41 = swift_dynamicCast();
      if (v41) {
        uint64_t v42 = v77;
      }
      else {
        uint64_t v42 = 0;
      }
      if (v41) {
        unint64_t v40 = v78;
      }
    }
    else
    {
      uint64_t v42 = 0;
    }
    id v43 = v32;
    static CKShare.SystemFieldKey.thumbnailImageData.getter();
    uint64_t v44 = CKRecord.subscript.getter();

    swift_bridgeObjectRelease();
    if (v44)
    {
      sub_1005057FC((uint64_t *)&unk_101672F30);
      int v45 = swift_dynamicCast();
      if (v45) {
        uint64_t v46 = v77;
      }
      else {
        uint64_t v46 = 0;
      }
      if (v45) {
        unint64_t v47 = v78;
      }
      else {
        unint64_t v47 = 0xF000000000000000;
      }
      if (v40 >> 60 == 15)
      {
        unint64_t v48 = v47 >> 60;
        unint64_t v47 = v78;
        if (v48 > 0xE)
        {
LABEL_73:
          uint64_t v50 = &selRef_alignCenter_;
          id v51 = [v38 participants];
          sub_10050BF48(0, (unint64_t *)&qword_101693410);
          unint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v52 >> 62) {
            goto LABEL_104;
          }
          uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
          while (1)
          {
            swift_bridgeObjectRelease();
            id v54 = [v43 v50[75]];
            unint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            if (v55 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (v53 != v56) {
              goto LABEL_97;
            }
            id v57 = [v38 v50[75]];
            unint64_t v58 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v73 = v38;
            id v76 = v43;
            if (v58 >> 62)
            {
              swift_bridgeObjectRetain();
              id v38 = (id)_CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (!v38)
              {
LABEL_107:

                swift_bridgeObjectRelease();
                return 1;
              }
            }
            else
            {
              id v38 = *(id *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (!v38) {
                goto LABEL_107;
              }
            }
            id v74 = v38;
            unint64_t v75 = v58 & 0xC000000000000001;
            uint64_t v59 = 4;
            while (1)
            {
              id v60 = v75 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v58 + 8 * v59);
              id v61 = v60;
              uint64_t v62 = v59 - 3;
              if (__OFADD__(v59 - 4, 1)) {
                break;
              }
              id v38 = v50;
              id v63 = [v76 v50[75]];
              unint64_t v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              id v65 = v61;
              uint64_t v66 = (id *)sub_100B47F54(v64);
              swift_bridgeObjectRelease();

              if ((unint64_t)v66 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v50 = (char **)_CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                if (!v50)
                {
LABEL_99:

                  swift_bridgeObjectRelease();
                  goto LABEL_46;
                }
              }
              else
              {
                uint64_t v50 = *(char ***)(((unint64_t)v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
                if (!v50) {
                  goto LABEL_99;
                }
              }
              if (((unint64_t)v66 & 0xC000000000000001) != 0)
              {
                id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (!*(void *)(((unint64_t)v66 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_103;
                }
                id v67 = v66[4];
              }
              uint64_t v68 = v67;
              swift_bridgeObjectRelease();
              id v69 = [v65 acceptanceStatus];
              if (v69 != [v68 acceptanceStatus])
              {

                goto LABEL_46;
              }
              id v43 = (id)v58;
              id v70 = [v65 v12[384]];
              unint64_t v71 = v12;
              id v72 = [v68 v12[384]];

              if (v70 != v72)
              {

                goto LABEL_46;
              }
              ++v59;
              NSString v12 = v71;
              uint64_t v50 = (char **)v38;
              unint64_t v58 = (unint64_t)v43;
              if ((id)v62 == v74) {
                goto LABEL_107;
              }
            }
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            swift_bridgeObjectRetain();
            uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
        }
      }
      else if (v47 >> 60 != 15)
      {
        sub_100510D4C(v42, v40);
        char v49 = sub_1008D44A8(v42, v40, v46, v47);
        sub_100514260(v46, v47);
        sub_100514260(v42, v40);
        sub_100514260(v42, v40);
        if (v49) {
          goto LABEL_73;
        }
LABEL_97:

        return 0;
      }
    }
    else
    {
      if (v40 >> 60 == 15) {
        goto LABEL_73;
      }
      uint64_t v46 = 0;
      unint64_t v47 = 0xF000000000000000;
    }
    sub_100514260(v42, v40);
    sub_100514260(v46, v47);
    goto LABEL_97;
  }

  return 0;
}

uint64_t sub_100B489EC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100B48A34()
{
  return sub_100B4617C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100B48A40()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100B48A80()
{
  sub_100B45E00(*(void ***)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100B48A8C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t destroy for CRLContactNameSortComparator()
{
  return swift_release();
}

uint64_t initializeWithCopy for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CRLContactNameSortComparator(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLContactNameSortComparator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLContactNameSortComparator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLContactNameSortComparator()
{
  return &type metadata for CRLContactNameSortComparator;
}

unint64_t sub_100B48C10()
{
  unint64_t result = qword_101693448;
  if (!qword_101693448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693448);
  }
  return result;
}

unint64_t sub_100B48C68()
{
  unint64_t result = qword_101693450;
  if (!qword_101693450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693450);
  }
  return result;
}

double *sub_100B48CD8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1006BB9E4(0, v1, 0);
  unint64_t result = (double *)sub_10058EAB4(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v21 = v1;
  int v22 = v4;
  uint64_t v23 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    char v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v5);
    uint64_t v12 = v11[1];
    uint64_t v24 = *v11;
    double v14 = _swiftEmptyArrayStorage[2];
    double v13 = _swiftEmptyArrayStorage[3];
    unint64_t result = (double *)swift_bridgeObjectRetain();
    if (*(void *)&v14 >= *(void *)&v13 >> 1) {
      unint64_t result = (double *)sub_1006BB9E4(*(void *)&v13 > 1uLL, *(void *)&v14 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v14 + 1;
    id v15 = &_swiftEmptyArrayStorage[4 * *(void *)&v14];
    v15[4] = 2.85762095e161;
    v15[5] = -3.91910665e202;
    *((void *)v15 + 6) = v24;
    *((void *)v15 + 7) = v12;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v16 = *(void *)(v23 + 8 * v10);
    if ((v16 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v22;
    if (*(_DWORD *)(a1 + 36) != v22) {
      goto LABEL_27;
    }
    unint64_t v17 = v16 & (-2 << (v5 & 0x3F));
    if (v17)
    {
      int64_t v8 = __clz(__rbit64(v17)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v21;
    }
    else
    {
      unint64_t v18 = v10 + 1;
      unint64_t v19 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v21;
      if (v10 + 1 < v19)
      {
        unint64_t v20 = *(void *)(v23 + 8 * v18);
        if (v20)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v20)) + (v18 << 6);
        }
        else
        {
          while (v19 - 2 != v10)
          {
            unint64_t v20 = *(void *)(a1 + 80 + 8 * v10++);
            if (v20)
            {
              unint64_t v18 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v6;
    uint64_t v5 = v8;
    if (v6 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

double sub_100B48F04()
{
  *(void *)&double result = 1060439283;
  xmmword_101693460 = xmmword_1011A9770;
  return result;
}

uint64_t sub_100B48F18(char a1, double a2)
{
  *(void *)(v3 + 72) = v2;
  *(unsigned char *)(v3 + 112) = a1;
  *(double *)(v3 + 64) = a2;
  type metadata accessor for MainActor();
  *(void *)(v3 + 80) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 88) = v5;
  *(void *)(v3 + 96) = v4;
  return _swift_task_switch(sub_100B48FB8, v5, v4);
}

uint64_t sub_100B48FB8()
{
  uint64_t v1 = *(void *)(v0 + 72) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations;
  swift_beginAccess();
  uint64_t v34 = *(void *)v1 + 64;
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(*(void *)v1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(*(void *)v1 + 64);
  int64_t v35 = (unint64_t)(63 - v3) >> 6;
  uint64_t v37 = *(void *)v1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v6 << 6);
      goto LABEL_23;
    }
    int64_t v10 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_47;
    }
    if (v10 >= v35) {
      break;
    }
    unint64_t v11 = *(void *)(v34 + 8 * v10);
    ++v6;
    if (!v11)
    {
      int64_t v6 = v10 + 1;
      if (v10 + 1 >= v35) {
        break;
      }
      unint64_t v11 = *(void *)(v34 + 8 * v6);
      if (!v11)
      {
        int64_t v6 = v10 + 2;
        if (v10 + 2 >= v35) {
          break;
        }
        unint64_t v11 = *(void *)(v34 + 8 * v6);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v35) {
            break;
          }
          unint64_t v11 = *(void *)(v34 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v6 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                goto LABEL_49;
              }
              if (v6 >= v35) {
                goto LABEL_40;
              }
              unint64_t v11 = *(void *)(v34 + 8 * v6);
              ++v12;
              if (v11) {
                goto LABEL_22;
              }
            }
          }
          int64_t v6 = v12;
        }
      }
    }
LABEL_22:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v6 << 6);
LABEL_23:
    uint64_t v13 = 16 * v9;
    double v14 = (uint64_t *)(*(void *)(v37 + 48) + v13);
    uint64_t v15 = v14[1];
    uint64_t v40 = *v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v37 + 56) + v13);
    uint64_t v17 = *v16;
    if (!v16[1])
    {
      swift_bridgeObjectRetain();
      swift_retain();
LABEL_29:
      unint64_t v38 = v4;
      int64_t v39 = v6;
      AnimationResource.repeat(duration:)();
      uint64_t v18 = Entity.playAnimation(_:transitionDuration:startsPaused:)();
      swift_beginAccess();
      swift_retain();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = *(void **)v1;
      int v41 = *(void **)v1;
      uint64_t v21 = v1;
      *(void *)uint64_t v1 = 0x8000000000000000;
      unint64_t v23 = sub_100955F50(v40, v15);
      uint64_t v24 = v20[2];
      BOOL v25 = (v22 & 1) == 0;
      uint64_t result = v24 + v25;
      if (__OFADD__(v24, v25))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        return result;
      }
      char v26 = v22;
      if (v20[3] < result)
      {
        sub_100968840(result, isUniquelyReferenced_nonNull_native);
        unint64_t v20 = v41;
        uint64_t result = sub_100955F50(v40, v15);
        if ((v26 & 1) != (v27 & 1))
        {
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v23 = result;
        if ((v26 & 1) == 0) {
          goto LABEL_36;
        }
LABEL_4:
        uint64_t v7 = (void *)(v20[7] + 16 * v23);
        swift_release();
        swift_release();
        *uint64_t v7 = v17;
        v7[1] = v18;
LABEL_5:
        uint64_t v1 = v21;
        unint64_t v4 = v38;
        int64_t v6 = v39;
        *(void *)uint64_t v1 = v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
        swift_release();
        swift_release();
        goto LABEL_6;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v22) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_100980CFC();
        unint64_t v20 = v41;
        if (v26) {
          goto LABEL_4;
        }
      }
LABEL_36:
      v20[(v23 >> 6) + 8] |= 1 << v23;
      uint64_t v28 = (uint64_t *)(v20[6] + 16 * v23);
      *uint64_t v28 = v40;
      v28[1] = v15;
      int v29 = (void *)(v20[7] + 16 * v23);
      *int v29 = v17;
      v29[1] = v18;
      uint64_t v30 = v20[2];
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (v31) {
        goto LABEL_48;
      }
      v20[2] = v32;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if ((AnimationPlaybackController.isValid.getter() & 1) == 0) {
      goto LABEL_29;
    }
    swift_bridgeObjectRelease();
    if (dispatch thunk of AnimationPlaybackController.isPaused.getter()) {
      dispatch thunk of AnimationPlaybackController.resume()();
    }
    swift_release();
LABEL_6:
    uint64_t result = swift_release();
  }
LABEL_40:
  swift_release();
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v36 + 104) = v33;
  *uint64_t v33 = v36;
  v33[1] = sub_100B49470;
  return sub_100B4AD40();
}

uint64_t sub_100B49470()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_100B49590, v3, v2);
}

uint64_t sub_100B49590()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B495F0()
{
  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100B49688, v3, v2);
}

uint64_t sub_100B49688()
{
  uint64_t v1 = *(void *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)v1 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(*(void *)v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(*(void *)v1 + 64);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v2 + 56) + 16 * v11 + 8))
    {
      swift_retain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        dispatch thunk of AnimationPlaybackController.pause()();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v12 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_28;
        }
        if (v9 >= v7) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_20;
        }
      }
    }
    int64_t v9 = v14;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100B4989C;
  return sub_100B4AD40();
}

uint64_t sub_100B4989C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100B499BC, v3, v2);
}

uint64_t sub_100B499BC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B49A1C()
{
  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100B49AB4, v3, v2);
}

uint64_t sub_100B49AB4()
{
  uint64_t v1 = *(void *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)v1 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(*(void *)v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(*(void *)v1 + 64);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v2 + 56) + 16 * v11 + 8))
    {
      swift_retain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        dispatch thunk of AnimationPlaybackController.resume()();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v12 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_28;
        }
        if (v9 >= v7) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_20;
        }
      }
    }
    int64_t v9 = v14;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100B49CC8;
  return sub_100B4AD40();
}

uint64_t sub_100B49CC8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100B4DC4C, v3, v2);
}

uint64_t sub_100B49DE8()
{
  v1[8] = v0;
  type metadata accessor for MainActor();
  v1[9] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[10] = v3;
  v1[11] = v2;
  return _swift_task_switch(sub_100B49E80, v3, v2);
}

uint64_t sub_100B49E80()
{
  uint64_t v1 = v0 + 40;
  uint64_t v2 = *(void *)(v0 + 64) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations;
  swift_beginAccess();
  uint64_t v37 = *(void *)v2 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(*(void *)v2 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(*(void *)v2 + 64);
  int64_t v38 = (unint64_t)(63 - v4) >> 6;
  uint64_t v39 = *(void *)v2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = v9 | (v7 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_46;
    }
    if (v12 >= v38) {
      break;
    }
    unint64_t v13 = *(void *)(v37 + 8 * v12);
    ++v7;
    if (!v13)
    {
      int64_t v7 = v12 + 1;
      if (v12 + 1 >= v38) {
        break;
      }
      unint64_t v13 = *(void *)(v37 + 8 * v7);
      if (!v13)
      {
        int64_t v7 = v12 + 2;
        if (v12 + 2 >= v38) {
          break;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v7);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v38) {
            break;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              int64_t v7 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_47;
              }
              if (v7 >= v38) {
                goto LABEL_38;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v7);
              ++v14;
              if (v13) {
                goto LABEL_21;
              }
            }
          }
          int64_t v7 = v14;
        }
      }
    }
LABEL_21:
    uint64_t v10 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v7 << 6);
LABEL_22:
    uint64_t v15 = 16 * v11;
    uint64_t v16 = (uint64_t *)(*(void *)(v39 + 48) + v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    unint64_t v19 = (uint64_t *)(*(void *)(v39 + 56) + v15);
    uint64_t v20 = *v19;
    unint64_t v40 = v10;
    int64_t v41 = v7;
    if (v19[1])
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter()) {
        dispatch thunk of AnimationPlaybackController.stop()();
      }
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    uint64_t v21 = v1;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v23 = *(void **)v2;
    uint64_t v42 = *(void **)v2;
    *(void *)uint64_t v2 = 0x8000000000000000;
    unint64_t v25 = sub_100955F50(v18, v17);
    uint64_t v26 = v23[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t result = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      return result;
    }
    char v28 = v24;
    if (v23[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v24) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_100980CFC();
        unint64_t v23 = v42;
        if (v28) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100968840(result, isUniquelyReferenced_nonNull_native);
      unint64_t v23 = v42;
      uint64_t result = sub_100955F50(v18, v17);
      if ((v28 & 1) != (v29 & 1))
      {
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v25 = result;
      if (v28)
      {
LABEL_4:
        unint64_t v8 = (void *)(v23[7] + 16 * v25);
        swift_release();
        swift_release();
        void *v8 = v20;
        v8[1] = 0;
        goto LABEL_5;
      }
    }
    v23[(v25 >> 6) + 8] |= 1 << v25;
    uint64_t v30 = (uint64_t *)(v23[6] + 16 * v25);
    *uint64_t v30 = v18;
    v30[1] = v17;
    BOOL v31 = (void *)(v23[7] + 16 * v25);
    *BOOL v31 = v20;
    v31[1] = 0;
    uint64_t v32 = v23[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_45;
    }
    long long v23[2] = v34;
    swift_bridgeObjectRetain();
LABEL_5:
    uint64_t v1 = v21;
    unint64_t v5 = v40;
    int64_t v7 = v41;
    *(void *)uint64_t v2 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    uint64_t result = swift_release();
  }
LABEL_38:
  swift_release();
  int64_t v35 = (void *)swift_task_alloc();
  *(void *)(v36 + 96) = v35;
  *int64_t v35 = v36;
  v35[1] = sub_100B4A2A8;
  return sub_100B4AD40();
}

uint64_t sub_100B4A2A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100B4A3C8, v3, v2);
}

uint64_t sub_100B4A3C8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B4A428()
{
  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_100B4A4C0, v3, v2);
}

uint64_t sub_100B4A4C0()
{
  uint64_t v1 = *(void *)(v0 + 40) + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)v1 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(*(void *)v1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(*(void *)v1 + 64);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v2 + 56) + 16 * v11 + 8))
    {
      swift_retain();
      swift_retain();
      if (AnimationPlaybackController.isValid.getter())
      {
        AnimationPlaybackController.time.setter();
        dispatch thunk of AnimationPlaybackController.pause()();
      }
      swift_release();
      uint64_t result = swift_release();
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    return result;
  }
  if (v12 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_28;
        }
        if (v9 >= v7) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_20;
        }
      }
    }
    int64_t v9 = v14;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100B49CC8;
  return sub_100B4AD40();
}

uint64_t sub_100B4A6DC(float a1)
{
  *(void *)(v2 + 24) = v1;
  *(float *)(v2 + 96) = a1;
  *(void *)(v2 + 32) = type metadata accessor for MainActor();
  *(void *)(v2 + 40) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v3;
  return _swift_task_switch(sub_100B4A77C, v4, v3);
}

uint64_t sub_100B4A77C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  double v2 = *(float *)(v0 + 96);
  double v3 = *(double *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 48) * v2;
  double v4 = *(double *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration + 56) * v2;
  uint64_t v5 = static MainActor.shared.getter();
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 72) = v6;
  *(void *)(v6 + 16) = v1;
  *(double *)(v6 + 24) = v3;
  *(double *)(v6 + 32) = v4;
  int64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  type metadata accessor for CGImage(0);
  *int64_t v7 = v0;
  v7[1] = sub_100B4A8BC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, v5, &protocol witness table for MainActor, 0xD000000000000011, 0x800000010124DD10, sub_100B4DC3C, v6, v8);
}

uint64_t sub_100B4A8BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100B4AA48;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100B4A9E0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B4A9E0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100B4AA48()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B4AAC0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  if (qword_10166F430 != -1) {
    swift_once();
  }
  uint64_t result = sub_1008D6E7C(a2, a1, a3, a4);
  if ((result & 1) == 0)
  {
    sub_100776FC8();
    swift_allocError();
    *(void *)uint64_t v9 = 0xD000000000000018;
    *(void *)(v9 + 8) = 0x8000000101274450;
    *(unsigned char *)(v9 + 16) = 5;
    sub_1005057FC(&qword_101693770);
    return CheckedContinuation.resume(throwing:)();
  }
  return result;
}

__n128 sub_100B4ABB4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong && (v4 = *(void **)(Strong + 32), uint64_t v5 = v4, swift_release(), v4))
  {
    char v6 = v5[OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10MetalLayer_hasDrawnFrame];
  }
  else
  {
    char v6 = 1;
  }
  __n128 v15 = *(__n128 *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds + 16);
  long long v16 = *(_OWORD *)(v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_100B4CBD0(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_100B48CD8(v9);
  swift_bridgeObjectRelease();
  if (*((void *)v10 + 2))
  {
    sub_1005057FC(&qword_101689028);
    unint64_t v11 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v11 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v17 = v11;
  int64_t v12 = (void *)swift_bridgeObjectRetain();
  sub_100B4C478(v12, 1, &v17);
  swift_bridgeObjectRelease();
  unint64_t v13 = v17;
  __n128 result = v15;
  *(_OWORD *)a1 = v16;
  *(__n128 *)(a1 + 16) = v15;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v13;
  return result;
}

uint64_t sub_100B4AD40()
{
  v1[11] = v0;
  v1[12] = type metadata accessor for MainActor();
  v1[13] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v3;
  v1[15] = v2;
  return _swift_task_switch(sub_100B4ADDC, v3, v2);
}

uint64_t sub_100B4ADDC()
{
  uint64_t v1 = *(void *)(v0 + 88);
  sub_100B4ABB4(v0 + 16);
  *(void *)(v0 + 72) = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 64);
  *(void *)(v0 + 80) = v2;
  uint64_t v3 = v1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription;
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  *(void *)(v3 + 48) = v2;
  sub_1007BA66C(v0 + 72);
  sub_1007BA66C(v0 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10058EEF8(v0 + 72);
  sub_10058EEF8(v0 + 80);
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 128) = Strong;
  if (Strong)
  {
    *(void *)(v0 + 136) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 152) = v7;
    return _swift_task_switch(sub_100B4AF48, v8, v7);
  }
  else
  {
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_100B4AF48()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = v1[6];
  v0[20] = v2;
  v0[21] = v1[7];
  v0[22] = v1[8];
  unint64_t v3 = v1[9];
  v0[23] = v3;
  v0[24] = v1[10];
  v0[25] = v1[11];
  v0[26] = v1[12];
  v0[27] = v1[13];
  v0[28] = v1[14];
  v0[29] = v1[15];
  v0[30] = v1[16];
  if (v3 >> 62 == 1 && v0[11] == v2)
  {
    swift_retain();
    char v6 = (void *)swift_task_alloc();
    v0[31] = v6;
    *char v6 = v0;
    v6[1] = sub_100B4B098;
    return sub_1007712C8();
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[15];
    return _swift_task_switch(sub_100B4B294, v4, v5);
  }
}

uint64_t sub_100B4B098()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_100B4B1B8, v3, v2);
}

uint64_t sub_100B4B1B8()
{
  uint64_t v2 = v0[22];
  unint64_t v1 = v0[23];
  uint64_t v4 = v0[20];
  unint64_t v3 = v0[21];
  swift_release();
  sub_1007708C8(v4, v3, v2, v1);
  swift_release();
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[15];
  return _swift_task_switch(sub_100B4B294, v5, v6);
}

uint64_t sub_100B4B294()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B4B2F4()
{
  float v1 = *(float *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration);
  BoundingBox.boundingRadius.getter();
  float v3 = v2;
  float v4 = (float)((float)(v1 * 0.5) * 3.1416) / 180.0;
  if (v1 <= 0.0) {
    float v4 = 0.0087266;
  }
  float v5 = v3 / sinf(v4);
  sub_1005057FC((uint64_t *)&unk_101693750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 32) = 0;
  *(float *)(inited + 40) = v5;
  sub_100B4CE8C(inited);
  swift_setDeallocating();
  type metadata accessor for AnchorEntity();
  HasTransform.position.setter();
  type metadata accessor for PerspectiveCamera();
  uint64_t v7 = (void (*)(unsigned char *, void))HasPerspectiveCamera.camera.modify();
  PerspectiveCameraComponent.fieldOfViewInDegrees.setter();
  v7(v9, 0);
  HasTransform.orientation.setter();
  sub_100B4CE8C((uint64_t)&off_101504000);
  return HasTransform.position.setter();
}

uint64_t sub_100B4B490()
{
  uint64_t v1 = sub_1005057FC(&qword_101693748);
  __chkstk_darwin(v1 - 8, v2);
  float v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting))
  {
    swift_retain_n();
    __ImageBasedLightComponent.init(environment:intensityExponent:)();
    uint64_t v5 = type metadata accessor for __ImageBasedLightComponent();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    uint64_t v6 = (void (*)(unsigned char *, void))dispatch thunk of Entity.components.modify();
    Entity.ComponentSet.subscript.setter();
    v6(v10, 0);
    return swift_release();
  }
  else
  {
    type metadata accessor for EnvironmentResource();
    static EnvironmentResource.defaultObject()();
    __ImageBasedLightComponent.init(environment:intensityExponent:)();
    uint64_t v8 = type metadata accessor for __ImageBasedLightComponent();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
    uint64_t v9 = (uint64_t (*)(unsigned char *, void))dispatch thunk of Entity.components.modify();
    Entity.ComponentSet.subscript.setter();
    return v9(v10, 0);
  }
}

uint64_t sub_100B4B690()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v9 << 6);
LABEL_21:
    if (*(void *)(*(void *)(v2 + 56) + 16 * v11 + 8))
    {
      swift_retain();
      if (AnimationPlaybackController.isValid.getter())
      {
        char v15 = AnimationPlaybackController.isPlaying.getter();
        uint64_t result = swift_release();
        if (v15)
        {
          uint64_t v16 = 1;
LABEL_26:
          swift_release();
          return v16;
        }
      }
      else
      {
        uint64_t result = swift_release();
      }
    }
  }
  int64_t v12 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v12 >= v7) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v12);
  ++v9;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 1;
  if (v12 + 1 >= v7) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v9 = v12 + 2;
  if (v12 + 2 >= v7) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v9);
  if (v13)
  {
LABEL_20:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v7)
  {
LABEL_25:
    uint64_t v16 = 0;
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

Swift::Int sub_100B4B838()
{
  Hasher.init()();
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  Swift::Int result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v22 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v23 = v22 | (v9 << 6);
      goto LABEL_34;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v24 >= v7) {
      goto LABEL_36;
    }
    unint64_t v25 = *(void *)(v3 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v7) {
        goto LABEL_36;
      }
      unint64_t v25 = *(void *)(v3 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v7) {
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v3 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_33:
    unint64_t v6 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_34:
    BOOL v27 = (Swift::UInt *)(*(void *)(v2 + 56) + 16 * v23);
    Swift::UInt v28 = *v27;
    Swift::UInt v29 = v27[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Hasher._combine(_:)(v28);
    if (v29)
    {
      Hasher._combine(_:)(1u);
      Hasher._combine(_:)(v29);
      swift_retain();
      char v10 = AnimationPlaybackController.isValid.getter();
      Hasher._combine(_:)(v10 & 1);
      char v11 = AnimationPlaybackController.isPlaying.getter();
      Hasher._combine(_:)(v11 & 1);
      char v12 = dispatch thunk of AnimationPlaybackController.isPaused.getter();
      Hasher._combine(_:)(v12 & 1);
      char v13 = AnimationPlaybackController.isStopped.getter();
      Hasher._combine(_:)(v13 & 1);
      AnimationPlaybackController.speed.getter();
      if ((v14 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v15 = v14;
      }
      else {
        Swift::UInt32 v15 = 0;
      }
      Hasher._combine(_:)(v15);
      AnimationPlaybackController.time.getter();
      if ((v16 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v17 = v16;
      }
      else {
        Swift::UInt64 v17 = 0;
      }
      Hasher._combine(_:)(v17);
      AnimationPlaybackController.blendFactor.getter();
      if ((v18 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v19 = v18;
      }
      else {
        Swift::UInt32 v19 = 0;
      }
      Hasher._combine(_:)(v19);
      AnimationPlaybackController.duration.getter();
      if ((v20 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v21 = v20;
      }
      else {
        Swift::UInt64 v21 = 0;
      }
      Hasher._combine(_:)(v21);
      swift_release_n();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    Swift::Int result = swift_release();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v7)
  {
LABEL_36:
    swift_release();
    return Hasher.finalize()();
  }
  unint64_t v25 = *(void *)(v3 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_36;
    }
    unint64_t v25 = *(void *)(v3 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_33;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

Swift::Int sub_100B4BB24()
{
  return Hasher._finalize()();
}

uint64_t sub_100B4BB7C()
{
  return String.hash(into:)();
}

Swift::Int sub_100B4BB98()
{
  return Hasher._finalize()();
}

uint64_t sub_100B4BBEC@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015049D8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_100B4BC40(void *a1@<X8>)
{
  *a1 = 0x617453656B617761;
  a1[1] = 0xEA00000000006574;
}

uint64_t sub_100B4BC60(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v4 - 8, v5);
  int64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata);
  *(void *)(v2 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata) = a1;
  uint64_t v9 = swift_bridgeObjectRetain();
  char v10 = sub_100ED76B4(v9, v8);
  swift_bridgeObjectRelease();
  if (v10)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v7, 1, 1, v12);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v13 = static MainActor.shared.getter();
    Swift::UInt32 v14 = (void *)swift_allocObject();
    long long v14[2] = v13;
    void v14[3] = &protocol witness table for MainActor;
    v14[4] = v2;
    sub_1005912D0((uint64_t)v7, (uint64_t)&unk_101693740, (uint64_t)v14);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_100B4BDF0()
{
  swift_weakDestroy();
  uint64_t v1 = v0 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_uuid;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100B4BF1C()
{
  sub_100B4BDF0();

  return swift_deallocClassInstance();
}

uint64_t sub_100B4BF74()
{
  return _s11ClientSceneCMa();
}

uint64_t _s11ClientSceneCMa()
{
  uint64_t result = qword_1016934A0;
  if (!qword_1016934A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B4BFC8()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *_s11ClientSceneC11MetadataKeyOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B4C154);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11ClientSceneC11MetadataKeyOMa()
{
  return &_s11ClientSceneC11MetadataKeyON;
}

void *_s11ClientSceneC22InternalAnimationStateOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *_s11ClientSceneC22InternalAnimationStateOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *_s11ClientSceneC22InternalAnimationStateOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *_s11ClientSceneC22InternalAnimationStateOMa()
{
  return &_s11ClientSceneC22InternalAnimationStateON;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t _s11ClientSceneC15ImageBasedLightVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 12)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s11ClientSceneC15ImageBasedLightVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s11ClientSceneC15ImageBasedLightVMa()
{
  return &_s11ClientSceneC15ImageBasedLightVN;
}

unint64_t sub_100B4C3DC()
{
  unint64_t result = qword_101693708;
  if (!qword_101693708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693708);
  }
  return result;
}

uint64_t sub_100B4C430()
{
  return sub_100B4DA88(&qword_101693710, (void (*)(uint64_t))_s11ClientSceneCMa);
}

uint64_t sub_100B4C478(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[7];
  uint64_t v46 = a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100955F50(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100980B40();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    Swift::UInt32 v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    Swift::UInt64 v20 = (uint64_t *)(v19[6] + 16 * v11);
    *Swift::UInt64 v20 = v7;
    v20[1] = v6;
    Swift::UInt64 v21 = (void *)(v19[7] + 16 * v11);
    *Swift::UInt64 v21 = v46;
    v21[1] = v8;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    long long v19[2] = v24;
    uint64_t v25 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 11; ; i += 4)
    {
      uint64_t v28 = *(i - 3);
      uint64_t v27 = *(i - 2);
      uint64_t v29 = *(i - 1);
      uint64_t v30 = *i;
      BOOL v31 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_100955F50(v28, v27);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v23 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v23) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_100968518(v36, 1);
        unint64_t v32 = sub_100955F50(v28, v27);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      unint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *unint64_t v40 = v28;
      v40[1] = v27;
      int64_t v41 = (void *)(v39[7] + 16 * v32);
      *int64_t v41 = v29;
      v41[1] = v30;
      uint64_t v42 = v39[2];
      BOOL v23 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v39[2] = v43;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100968518(v14, a2 & 1);
  unint64_t v16 = sub_100955F50(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000101274430;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100B4C818(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v46 = a1[2];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v11 = sub_100955F50(v6, v5);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100980CFC();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    Swift::UInt32 v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    Swift::UInt64 v20 = (uint64_t *)(v19[6] + 16 * v11);
    *Swift::UInt64 v20 = v6;
    v20[1] = v5;
    Swift::UInt64 v21 = (void *)(v19[7] + 16 * v11);
    *Swift::UInt64 v21 = v7;
    v21[1] = v8;
    uint64_t v22 = v19[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    long long v19[2] = v24;
    uint64_t v25 = v46 - 1;
    if (v46 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 11; ; i += 4)
    {
      uint64_t v28 = *(i - 3);
      uint64_t v27 = *(i - 2);
      uint64_t v29 = *(i - 1);
      uint64_t v30 = *i;
      BOOL v31 = (void *)*a3;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v32 = sub_100955F50(v28, v27);
      uint64_t v34 = v31[2];
      BOOL v35 = (v33 & 1) == 0;
      BOOL v23 = __OFADD__(v34, v35);
      uint64_t v36 = v34 + v35;
      if (v23) {
        break;
      }
      char v37 = v33;
      if (v31[3] < v36)
      {
        sub_100968840(v36, 1);
        unint64_t v32 = sub_100955F50(v28, v27);
        if ((v37 & 1) != (v38 & 1)) {
          goto LABEL_25;
        }
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v32 >> 6) + 64) |= 1 << v32;
      unint64_t v40 = (uint64_t *)(v39[6] + 16 * v32);
      *unint64_t v40 = v28;
      v40[1] = v27;
      int64_t v41 = (void *)(v39[7] + 16 * v32);
      *int64_t v41 = v29;
      v41[1] = v30;
      uint64_t v42 = v39[2];
      BOOL v23 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v39[2] = v43;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100968840(v14, a2 & 1);
  unint64_t v16 = sub_100955F50(v6, v5);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v44._object = (void *)0x8000000101274430;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v44);
  _print_unlocked<A, B>(_:_:)();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  String.append(_:)(v45);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100B4CBD0(uint64_t a1)
{
  sub_1005057FC((uint64_t *)&unk_101693760);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v39 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  uint64_t v36 = v6;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v38 = result + 64;
  BOOL v35 = (void *)result;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    unint64_t v16 = (uint64_t *)(*(void *)(v39 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    if (*(void *)(*(void *)(v39 + 56) + 16 * i + 8))
    {
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      char v40 = dispatch thunk of AnimationPlaybackController.isPaused.getter();
      char v19 = dispatch thunk of AnimationPlaybackController.isComplete.getter();
      char v20 = AnimationPlaybackController.isPlaying.getter();
      uint64_t v21 = v17;
      char v22 = AnimationPlaybackController.isStopped.getter();
      AnimationPlaybackController.speed.getter();
      unsigned int v24 = v23;
      swift_release();
      uint64_t result = swift_release();
      uint64_t v3 = v35;
      uint64_t v25 = 256;
      if ((v19 & 1) == 0) {
        uint64_t v25 = 0;
      }
      unint64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL | v40 & 1;
      uint64_t v27 = 0x10000;
      if ((v20 & 1) == 0) {
        uint64_t v27 = 0;
      }
      BOOL v28 = (v22 & 1) == 0;
      uint64_t v17 = v21;
      uint64_t v29 = 0x1000000;
      if (v28) {
        uint64_t v29 = 0;
      }
      unint64_t v30 = v26 | v27 | v29 | ((unint64_t)v24 << 32);
    }
    else
    {
      uint64_t result = swift_bridgeObjectRetain();
      unint64_t v30 = 2;
    }
    *(void *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v31 = (void *)(v3[6] + 16 * i);
    *BOOL v31 = v17;
    v31[1] = v18;
    *(void *)(v3[7] + 8 * i) = v30;
    uint64_t v32 = v3[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    v3[2] = v34;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_34;
    }
    if (v13 >= v37) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v36 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v37) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v36 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v37) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v36 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v37) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v36 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v37) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v36 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100B4CE8C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    unint64_t v3 = 3;
    if ((unint64_t)(v1 - 1) < 3) {
      unint64_t v3 = v1 - 1;
    }
    long long v4 = 0uLL;
    do
    {
      if ((unint64_t)(v1 - 1) > 2)
      {
        __break(1u);
        goto LABEL_10;
      }
      int v5 = *(_DWORD *)(result + 32 + 4 * v2);
      long long v6 = v4;
      *(_DWORD *)((unint64_t)&v6 & 0xFFFFFFFFFFFFFFF3 | (4 * (v2 & 3))) = v5;
      long long v4 = v6;
      ++v2;
    }
    while (v1 != v2);
    if (v3 < 2) {
      goto LABEL_10;
    }
  }
  else
  {
LABEL_10:
    __break(1u);
  }
  return result;
}

double sub_100B4CEFC()
{
  uint64_t v0 = sub_1005057FC(&qword_101693718);
  __chkstk_darwin(v0 - 8, v1);
  unint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for __REAnchoringType.Alignment();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v22 - v11;
  type metadata accessor for Entity();
  HasTransform.orientation.getter();
  long long v22 = v13;
  Scene.__anchoringType.getter();
  uint64_t v14 = type metadata accessor for __REAnchoringType();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14) == 1)
  {
    sub_100B4DA28((uint64_t)v3);
  }
  else if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v3, v14) == enum case for __REAnchoringType.surface(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v3, v14);
    unint64_t v16 = &v3[*(int *)(sub_1005057FC(&qword_101693720) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v3, v4);
    uint64_t v17 = type metadata accessor for __REAnchoringType.Classification();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    static __REAnchoringType.Alignment.vertical.getter();
    sub_100B4DA88((unint64_t *)&unk_101693728, (void (*)(uint64_t))&type metadata accessor for __REAnchoringType.Alignment);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v19 = v23;
    uint64_t v18 = v24;
    char v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v8, v4);
    if (v18 == v19)
    {
      if (qword_10166F950 != -1) {
        swift_once();
      }
      long long v22 = xmmword_101693460;
    }
    v20(v12, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
  }
  return *(double *)&v22;
}

uint64_t sub_100B4D260(uint64_t a1, uint64_t a2, double *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  *(void *)&long long v63 = type metadata accessor for Scene.AnchorCollection();
  *(void *)&long long v61 = *(void *)(v63 - 8);
  __chkstk_darwin(v63, v10);
  id v60 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_weakInit();
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_loadReceipt) = 0;
  uint64_t v12 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_lighting;
  *(void *)uint64_t v12 = 0;
  *(_DWORD *)(v12 + 8) = 0;
  uint64_t v13 = OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_metadata;
  *(void *)(v5 + v13) = sub_100A3B1A0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v14 = a1 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend_uuid;
  uint64_t v15 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_uuid;
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, v14, v16);
  v57[1] = a1;
  swift_weakAssign();
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_scene) = a2;
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_objectEntity) = a3;
  uint64_t v17 = v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_configuration;
  long long v18 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v17 + 32) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v17 + 48) = v18;
  *(void *)(v17 + 64) = *(void *)(a4 + 64);
  long long v19 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)a4;
  *(_OWORD *)(v17 + 16) = v19;
  type metadata accessor for AnchorEntity();
  sub_100B4CE8C((uint64_t)&off_101504030);
  long long v62 = v20;
  swift_retain();
  swift_retain();
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelAnchor) = AnchorEntity.__allocating_init(world:)();
  type metadata accessor for Entity();
  HasTransform.visualBounds(recursive:relativeTo:excludeInactive:)();
  uint64_t v21 = (_OWORD *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
  *uint64_t v21 = v22;
  v21[1] = v23;
  BoundingBox.center.getter();
  HasTransform.position.setter();
  swift_retain();
  HasHierarchy.addChild(_:preservingWorldTransform:)();
  swift_release();
  type metadata accessor for PerspectiveCamera();
  swift_allocObject();
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraEntity) = PerspectiveCamera.init()();
  sub_100B4CE8C((uint64_t)&off_101504060);
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_cameraAnchor) = AnchorEntity.__allocating_init(world:)();
  swift_retain();
  swift_retain();
  uint64_t v24 = a3;
  HasHierarchy.addChild(_:preservingWorldTransform:)();
  swift_release();
  swift_release();
  swift_retain();
  dispatch thunk of Scene.addAnchor(_:)();
  swift_release();
  swift_retain();
  dispatch thunk of Scene.addAnchor(_:)();
  swift_release();
  *(void *)&long long v62 = a2;
  *(double *)&long long v25 = sub_100B4CEFC();
  long long v59 = v25;
  HasTransform.orientation.getter();
  uint64_t v27 = 0;
  while (1)
  {
    long long v64 = v59;
    float v29 = *(float *)((unint64_t)&v64 & 0xFFFFFFFFFFFFFFF3 | (4 * (v27 & 3)));
    long long v65 = v26;
    float v30 = *(float *)((unint64_t)&v65 & 0xFFFFFFFFFFFFFFF3 | (4 * (v27 & 3)));
    BOOL v28 = v29 == v30;
    if (v27 == 3) {
      break;
    }
    while (1)
    {
      ++v27;
      if (v28) {
        break;
      }
      if (v27 == 3) {
        goto LABEL_8;
      }
      BOOL v28 = 0;
    }
  }
  if (v29 != v30) {
LABEL_8:
  }
    HasTransform.orientation.setter();
  swift_allocObject();
  *(void *)(v5 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_environmentEntity) = Entity.init()();
  swift_retain();
  dispatch thunk of Entity.name.setter();
  swift_release();
  swift_retain();
  Entity.turnIntoNinja()();
  swift_release();
  BOOL v31 = v60;
  dispatch thunk of Scene.anchors.getter();
  Scene.AnchorCollection.appendNinja(_:)();
  (*(void (**)(char *, void))(v61 + 8))(v31, v63);
  unint64_t v32 = Entity.availableAnimations.getter();
  unint64_t v33 = v32;
  if (v32 >> 62) {
LABEL_30:
  }
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
  else {
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v58 = v5;
  v57[2] = v24;
  if (!v34)
  {
    swift_bridgeObjectRelease();
    if (!*(void *)&_swiftEmptyArrayStorage[2])
    {
LABEL_27:
      unint64_t v48 = _swiftEmptyDictionarySingleton;
      goto LABEL_28;
    }
LABEL_25:
    sub_1005057FC(&qword_101688EB0);
    unint64_t v48 = (void *)static _DictionaryStorage.allocate(capacity:)();
LABEL_28:
    *(void *)&v68[0] = v48;
    char v49 = (void *)swift_bridgeObjectRetain();
    sub_100B4C818(v49, 1, v68);
    swift_bridgeObjectRelease();
    uint64_t v50 = v58;
    *(void *)(v58 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_animations) = *(void *)&v68[0];
    long long v63 = *(_OWORD *)(v50 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds);
    long long v61 = *(_OWORD *)(v50 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_modelBounds + 16);
    unint64_t v51 = sub_100A3B298((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v52 = sub_100A3B07C((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v53 = v50 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE11ClientScene_sceneDescription;
    long long v54 = v61;
    *(_OWORD *)uint64_t v53 = v63;
    *(_OWORD *)(v53 + 16) = v54;
    *(void *)(v53 + 32) = v51;
    *(unsigned char *)(v53 + 40) = 0;
    *(void *)(v53 + 48) = v52;
    sub_100B4B2F4();
    sub_100B4B490();
    sub_100B4ABB4((uint64_t)v68);
    swift_release();
    swift_release();
    swift_release();
    long long v55 = v68[1];
    *(_OWORD *)uint64_t v53 = v68[0];
    *(_OWORD *)(v53 + 16) = v55;
    *(_OWORD *)(v53 + 32) = v68[2];
    *(void *)(v53 + 48) = v69;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v50;
  }
  id v67 = _swiftEmptyArrayStorage;
  sub_1006BBA04(0, v34 & ~(v34 >> 63), 0);
  if ((v34 & 0x8000000000000000) == 0)
  {
    uint64_t v35 = 0;
    uint64_t v24 = v67;
    *(void *)&long long v63 = v33 & 0xC000000000000001;
    unint64_t v36 = v33;
    do
    {
      if (v34 == v35)
      {
        __break(1u);
        goto LABEL_30;
      }
      if ((void)v63)
      {
        uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v37 = *(void *)(v33 + 8 * v35 + 32);
        swift_retain();
      }
      uint64_t v66 = ObjectIdentifier.hashValue.getter();
      *(void *)&v68[0] = dispatch thunk of CustomStringConvertible.description.getter();
      *((void *)&v68[0] + 1) = v38;
      v39._countAndFlagsBits = 47;
      v39._object = (void *)0xE100000000000000;
      String.append(_:)(v39);
      uint64_t v40 = AnimationResource.name.getter();
      if (v41)
      {
        unint64_t v42 = v41;
      }
      else
      {
        uint64_t v40 = 0x64656D616E6E75;
        unint64_t v42 = 0xE700000000000000;
      }
      unint64_t v43 = v42;
      String.append(_:)(*(Swift::String *)&v40);
      swift_bridgeObjectRelease();
      uint64_t v44 = *((void *)&v68[0] + 1);
      uint64_t v5 = *(void *)&v68[0];
      id v67 = v24;
      unint64_t v46 = *((void *)v24 + 2);
      unint64_t v45 = *((void *)v24 + 3);
      if (v46 >= v45 >> 1)
      {
        sub_1006BBA04(v45 > 1, v46 + 1, 1);
        uint64_t v24 = v67;
      }
      ++v35;
      *((void *)v24 + 2) = v46 + 1;
      unint64_t v47 = &v24[4 * v46];
      *((void *)v47 + 4) = v5;
      *((void *)v47 + 5) = v44;
      *((void *)v47 + 6) = v37;
      v47[7] = 0.0;
      unint64_t v33 = v36;
    }
    while (v34 != v35);
    swift_bridgeObjectRelease();
    if (!*((void *)v24 + 2)) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_100B4DA28(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101693718);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B4DA88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B4DAD0(uint64_t result, uint64_t a2, unint64_t a3)
{
  if (a3 >> 1 == a2) {
    goto LABEL_10;
  }
  if ((uint64_t)(a3 >> 1) <= a2)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v3 = 0;
  long long v4 = 0uLL;
  do
  {
    if ((a3 >> 1) + ~a2 > 3)
    {
      __break(1u);
      goto LABEL_9;
    }
    int v5 = *(_DWORD *)(result + 4 * a2 + 4 * v3);
    uint64_t v6 = v3 + 1;
    long long v7 = v4;
    *(_DWORD *)((unint64_t)&v7 & 0xFFFFFFFFFFFFFFF3 | (4 * (v3 & 3))) = v5;
    long long v4 = v7;
    uint64_t v3 = v6;
  }
  while ((a3 >> 1) - a2 != v6);
  if ((unint64_t)(v6 - 1) < 3) {
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_100B4DB48()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B4DB88()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100528488;
  return sub_100770294();
}

uint64_t sub_100B4DC3C(uint64_t a1)
{
  return sub_100B4AAC0(a1, *(void *)(v1 + 16), *(double *)(v1 + 24), *(double *)(v1 + 32));
}

id sub_100B4DC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  swift_getObjectType();
  id v10 = sub_100B516A8(a1, a2, a3, a4, v9);
  swift_unknownObjectRelease();
  return v10;
}

id sub_100B4DED8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v45 = a5;
  uint64_t v6 = v5;
  uint64_t v49 = a1;
  unint64_t v50 = a2;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v47 = *(void *)(v9 - 8);
  uint64_t v48 = v9;
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  unint64_t v46 = (char *)&v44 - v15;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  long long v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = &v6[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
  *(void *)uint64_t v21 = a3;
  *((void *)v21 + 1) = a4;
  if ((a4 & 0x2000000000000000) != 0) {
    uint64_t v22 = HIBYTE(a4) & 0xF;
  }
  else {
    uint64_t v22 = a3 & 0xFFFFFFFFFFFFLL;
  }
  long long v23 = v6;
  if (v22)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  }
  id v24 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  id v52 = 0;
  id v25 = [v24 initWithError:&v52];
  id v26 = v52;
  if (v25)
  {
    uint64_t v27 = v25;
    *(void *)&v23[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = v25;
    id v28 = v26;
    id v29 = v27;
    id v30 = [v29 URL];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    BOOL v31 = v46;
    URL.appendingPathComponent(_:isDirectory:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v48);
    uint64_t v32 = v44;
    Data.write(to:options:)();
    if (v32)
    {
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      uint64_t v34 = URL.absoluteString.getter();
      uint64_t v36 = v35;
      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v34;
      *(void *)(inited + 40) = v36;
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(data:filename:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 60, (uint64_t)"Failed to create temporary file '%s' for writing asset data", 59, 2u, inited);
      BOOL v31 = v46;
      sub_1005598CC(inited, (uint64_t)"init(data:filename:owner:)", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 60);

      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();
      swift_errorRelease();
    }
    else
    {
    }
    Swift::String v39 = &v23[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
    uint64_t v41 = v47;
    uint64_t v40 = v48;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v23[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url], v31, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v39, 0, 1, v40);
    *(void *)&v23[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = v45;
    *(void *)&v23[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = 0;
    swift_unknownObjectRetain();

    unint64_t v42 = (objc_class *)type metadata accessor for CRLPreinsertionAssetWrapper();
    v51.receiver = v23;
    v51.super_class = v42;
    id v38 = [super init];
    swift_unknownObjectRelease();
    sub_100510084(v49, v50);
  }
  else
  {
    id v37 = v52;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_unknownObjectRelease();
    sub_100510084(v49, v50);
    swift_bridgeObjectRelease();
    id v38 = (id)*((void *)v21 + 1);

    swift_bridgeObjectRelease();
    type metadata accessor for CRLPreinsertionAssetWrapper();
    swift_deallocPartialClassInstance();
  }
  return v38;
}

uint64_t sub_100B4E54C(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLAssetData();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100B4E63C, 0, 0);
}

uint64_t sub_100B4E63C()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (!v2)
  {
LABEL_7:
    uint64_t v9 = swift_task_alloc();
    v0[14] = v9;
    *(void *)(v9 + 16) = v1;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[15] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100B4E8AC;
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[8];
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12, 0, 0, 0xD000000000000012, 0x80000001012746B0, sub_100B51D78, v9, v11);
  }
  sub_1005498A4((uint64_t)v2 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, (uint64_t)(v0 + 2));
  id v3 = v2;
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  int v4 = swift_dynamicCast();
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v7 = v0[10];
  if (v4)
  {
    sub_10077F98C(v0[7] + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v0[10]);
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 56))(v0[10], 1, 1, v5);
  }

  uint64_t v8 = v0[10];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[12] + 48))(v8, 1, v0[11]) == 1)
  {
    sub_100522F00(v8, (uint64_t *)&unk_10167D2B0);
    uint64_t v1 = v0[9];
    goto LABEL_7;
  }
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[8];
  sub_1008A7A50(v8, v13);
  sub_1008A7A50(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100B4E8AC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100B4EA00, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100B4EA00()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B4EA78()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for CRLAssetData();
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_100B4EB0C, 0, 0);
}

uint64_t sub_100B4EB0C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v2)
  {
    id v3 = v2;
    swift_task_dealloc();
    int v4 = (uint64_t (*)(id))v0[1];
    return v4(v3);
  }
  else
  {
    uint64_t v6 = swift_task_alloc();
    v0[5] = v6;
    *(void *)(v6 + 16) = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[6] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100B4EC50;
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v8, 0, 0, 0xD000000000000012, 0x80000001012746B0, sub_100B51888, v6, v9);
  }
}

uint64_t sub_100B4EC50()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100B4EE08;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100B4ED6C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B4ED6C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_getObjectType();
  id v2 = sub_1008D2BA4(v1);
  sub_100671108(v1);
  swift_task_dealloc();
  id v3 = *(uint64_t (**)(id))(v0 + 8);
  return v3(v2);
}

uint64_t sub_100B4EE08()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B4EFDC(const void *a1, void *a2)
{
  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100655250;
  return sub_100B4EA78();
}

uint64_t sub_100B4F084(uint64_t a1, uint64_t a2)
{
  uint64_t v113 = a2;
  uint64_t v119 = a1;
  uint64_t v2 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v2 - 8, v3);
  long long v111 = (void (*)(char *, uint64_t, uint64_t))((char *)v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = sub_1005057FC(&qword_1016937E8);
  __chkstk_darwin(v118, v5);
  int v117 = (void *)((char *)v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7, v8);
  uint64_t v116 = (char *)v96 - v9;
  uint64_t v101 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v101, v10);
  uint64_t v100 = (void *)((char *)v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v106 = *(void *)(v12 - 8);
  uint64_t v107 = v12;
  __chkstk_darwin(v12, v13);
  uint64_t v104 = (char *)v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for DispatchQoS();
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v15);
  uint64_t v102 = (char *)v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_1016937F8);
  uint64_t v115 = *(void *)(v17 - 8);
  uint64_t v18 = *(void *)(v115 + 64);
  __chkstk_darwin(v17, v19);
  uint64_t v114 = (char *)v96 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  long long v23 = (char *)v96 - v22;
  uint64_t v24 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v24 - 8, v25);
  uint64_t v27 = (char *)v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for URL();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28, v31);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char *)v96 - v34;
  __chkstk_darwin(v36, v37);
  Swift::String v39 = (char *)v96 - v38;
  if (static Task<>.isCancelled.getter())
  {
LABEL_6:
    id v45 = [self crl_errorWithCode:4 userInfo:0];
    uint64_t v46 = (uint64_t)v116;
    *(void *)uint64_t v116 = v45;
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = v117;
    sub_100522E9C(v46, (uint64_t)v117, &qword_1016937E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      aBlock[0] = *v47;
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1008A7A50((uint64_t)v47, (uint64_t)v111);
      CheckedContinuation.resume(returning:)();
    }
    return sub_100522F00(v46, &qword_1016937E8);
  }
  uint64_t v99 = v27;
  v96[0] = v35;
  v96[1] = v30;
  v96[2] = v18;
  uint64_t v97 = v23;
  int v98 = (char *)v96 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = v39;
  uint64_t v109 = v29;
  uint64_t v110 = v17;
  uint64_t v40 = v113;
  uint64_t v41 = v113 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url;
  unint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  uint64_t v112 = v28;
  if (v42(v113 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, 1, v28) == 1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_createAssetData()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 99, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_createAssetData()", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 99);
  }
  uint64_t v43 = (uint64_t)v99;
  sub_100522E9C(v41, (uint64_t)v99, &qword_101672E90);
  uint64_t v44 = v112;
  if (v42(v43, 1, v112) == 1)
  {
    sub_100522F00(v43, &qword_101672E90);
    goto LABEL_6;
  }
  long long v111 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 32);
  v111(v108, v43, v44);
  uint64_t v49 = *(void *)(v40 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8);
  uint64_t v99 = *(char **)(v40 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename);
  unint64_t v50 = *(void **)(v40 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner);
  uint64_t v118 = v49;
  swift_bridgeObjectRetain();
  objc_super v51 = (char *)[v50 store];
  uint64_t v52 = *(void *)&v51[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v52 + 16));
  uint64_t v53 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  long long v54 = *(void **)&v51[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v54)
  {
    int v117 = *(void **)&v51[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v55 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v56 = v51;
    id v57 = sub_100EAFDE4((uint64_t)v56);

    uint64_t v58 = *(void **)&v51[v53];
    *(void *)&v51[v53] = v57;
    int v117 = v57;

    long long v54 = 0;
  }
  long long v59 = v97;
  uint64_t v60 = v96[0];
  long long v61 = *(os_unfair_lock_s **)(v52 + 16);
  id v62 = v54;
  os_unfair_lock_unlock(v61);

  uint64_t v63 = v115;
  long long v64 = *(void (**)(char *, uint64_t, uint64_t))(v115 + 16);
  uint64_t v65 = v110;
  v64(v59, v119, v110);
  v64(v114, (uint64_t)v59, v65);
  unint64_t v66 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  uint64_t v119 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v119 + v66, v59, v65);
  id v67 = v108;
  uint64_t v68 = v109 + 16;
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v109 + 16);
  uint64_t v70 = v60;
  uint64_t v71 = v112;
  v69(v60, v108, v112);
  unint64_t v72 = (*(unsigned __int8 *)(v68 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 64);
  uint64_t v116 = (char *)swift_allocObject();
  NSString v73 = (void (*)(unint64_t, char *, uint64_t))v111;
  v111(&v116[v72], v70, v71);
  id v74 = v98;
  v69((uint64_t)v98, v67, v71);
  uint64_t v75 = swift_allocObject();
  v73(v75 + v72, v74, v71);
  id v76 = (char *)v117;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v78 = (void *)Strong;
    uint64_t v113 = *(void *)&v76[OBJC_IVAR____TtC8Freeform19CRLAssetFileManager_writeAssetFileQueue];
    uint64_t v79 = (void *)swift_allocObject();
    uint64_t v80 = v116;
    v79[2] = sub_100B5182C;
    v79[3] = v80;
    uint64_t v81 = v118;
    uint64_t v82 = v119;
    v79[4] = v99;
    v79[5] = v81;
    v79[6] = v76;
    v79[7] = sub_100B5185C;
    v79[8] = v75;
    v79[9] = v78;
    v79[10] = sub_100B51924;
    v79[11] = v82;
    aBlock[4] = sub_100B51AF8;
    aBlock[5] = v79;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = *(void *)"";
    aBlock[2] = sub_100679958;
    void aBlock[3] = &unk_101525740;
    uint64_t v83 = _Block_copy(aBlock);
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v84 = v76;
    swift_retain();
    long long v111 = v78;
    swift_retain();
    uint64_t v85 = v102;
    static DispatchQoS.unspecified.getter();
    uint64_t v120 = _swiftEmptyArrayStorage;
    sub_100522CDC();
    sub_1005057FC((uint64_t *)&unk_1016725D0);
    sub_10056B494();
    uint64_t v86 = v76;
    unint64_t v87 = v104;
    uint64_t v88 = v107;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v83);

    unint64_t v89 = v87;
    id v76 = v86;
    (*(void (**)(char *, uint64_t))(v106 + 8))(v89, v88);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v85, v105);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v90 = (uint64_t)v114;
    uint64_t v91 = v112;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v91 = v112;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"_saveAsset(filename:assetUUIDProvider:assetPersistenceProvider:completion:)", 75, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLAssetFileManager.swift", 91, 2, 422);
    sub_100679060();
    uint64_t v92 = swift_allocError();
    *Swift::String v93 = 0xD000000000000028;
    v93[1] = 0x8000000101274780;
    uint64_t v94 = (uint64_t)v100;
    *uint64_t v100 = v92;
    swift_storeEnumTagMultiPayload();
    uint64_t v95 = (uint64_t)v114;
    sub_100B4FCBC(v94, (uint64_t)v114);
    sub_100522F00(v94, &qword_1016937F0);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v90 = v95;
  }
  (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v90, v110);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v108, v91);
}

uint64_t sub_100B4FCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a1;
  uint64_t v3 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1005057FC(&qword_1016937E8);
  __chkstk_darwin(v55, v7);
  uint64_t v9 = (uint64_t *)((char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (uint64_t *)((char *)&v49 - v12);
  __chkstk_darwin(v14, v15);
  uint64_t v53 = (uint64_t *)((char *)&v49 - v16);
  __chkstk_darwin(v17, v18);
  uint64_t v52 = (uint64_t)&v49 - v19;
  uint64_t v20 = sub_1005057FC(&qword_101693800);
  __chkstk_darwin(v20, v21);
  long long v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v49 - v26;
  uint64_t v28 = sub_1005057FC(&qword_1016937F0);
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (uint64_t *)((char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100522E9C(v54, (uint64_t)v31, &qword_1016937F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v13 = *v31;
    swift_storeEnumTagMultiPayload();
    sub_100522E9C((uint64_t)v13, (uint64_t)v9, &qword_1016937E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = *v9;
      sub_1005057FC(&qword_1016937F8);
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1008A7A50((uint64_t)v9, (uint64_t)v6);
      sub_1005057FC(&qword_1016937F8);
      CheckedContinuation.resume(returning:)();
    }
    uint64_t v46 = &qword_1016937E8;
    uint64_t v47 = (uint64_t)v13;
  }
  else
  {
    uint64_t v54 = a2;
    uint64_t v32 = *(int *)(v20 + 48);
    uint64_t v33 = (uint64_t *)&v27[v32];
    uint64_t v34 = *(int *)(v20 + 64);
    uint64_t v35 = &v27[v34];
    uint64_t v36 = (void *)((char *)v31 + v32);
    unint64_t v50 = v6;
    objc_super v51 = (char *)v31 + v34;
    uint64_t v37 = type metadata accessor for UUID();
    uint64_t v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, void *, uint64_t))(v38 + 32))(v27, v31, v37);
    uint64_t v39 = *v36;
    uint64_t v40 = v36[1];
    *uint64_t v33 = v39;
    v33[1] = v40;
    uint64_t v41 = type metadata accessor for URL();
    uint64_t v42 = *(void *)(v41 - 8);
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v35, v51, v41);
    uint64_t v43 = (uint64_t)&v23[*(int *)(v20 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v23, v27, v37);
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v43, v35, v41);
    swift_bridgeObjectRetain();
    uint64_t v44 = v52;
    sub_100EA51A8(v23, v39, v40, v43, v52);
    swift_storeEnumTagMultiPayload();
    id v45 = v53;
    sub_100522E9C(v44, (uint64_t)v53, &qword_1016937E8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v56 = *v45;
      sub_1005057FC(&qword_1016937F8);
      CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1008A7A50((uint64_t)v45, (uint64_t)v50);
      sub_1005057FC(&qword_1016937F8);
      CheckedContinuation.resume(returning:)();
    }
    sub_100522F00(v44, &qword_1016937E8);
    uint64_t v46 = &qword_101693800;
    uint64_t v47 = (uint64_t)v27;
  }
  return sub_100522F00(v47, v46);
}

id sub_100B50194()
{
  uint64_t v1 = type metadata accessor for UUID();
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
  __chkstk_darwin(v13, v15);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)v64 - v18;
  __chkstk_darwin(v20, v21);
  __n128 v27 = __chkstk_darwin(v22, v23);
  uint64_t v28 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  id v29 = v28;
  if (!v28)
  {
    id v74 = v8;
    uint64_t v75 = v26;
    id v76 = v4;
    uint64_t v77 = (char *)v64 - v24;
    uint64_t v30 = v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url;
    uint64_t v78 = v25;
    uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v25 + 48);
    if (v31(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, 1, v13, v27) == 1)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 124, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 124);
    }
    sub_100522E9C(v30, (uint64_t)v12, &qword_101672E90);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v31)(v12, 1, v13) == 1)
    {
      sub_100522F00((uint64_t)v12, &qword_101672E90);
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 129, (uint64_t)"Preinsertion asset wrapper missing necessary data from init", 59, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"synchronouslyCreateAsset()", 26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLPreinsertionAssetWrapper.swift", 99, 2, 129);
      id v29 = 0;
    }
    else
    {
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v78 + 32);
      uint64_t v68 = v13;
      uint64_t v70 = v32;
      uint64_t v71 = v78 + 32;
      v32(v77, v12, v13);
      uint64_t v33 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename + 8);
      uint64_t v72 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename);
      uint64_t v34 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner);
      v64[0] = swift_getObjectType();
      uint64_t v73 = v33;
      swift_bridgeObjectRetain();
      v64[1] = v34;
      uint64_t v35 = (char *)[v34 store];
      uint64_t v36 = *(void *)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v36 + 16));
      uint64_t v37 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      uint64_t v38 = *(void **)&v35[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      uint64_t v65 = 0;
      uint64_t v69 = (char *)v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v38)
      {
        id v67 = v38;
      }
      else
      {
        id v39 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        uint64_t v40 = v35;
        id v41 = sub_100EAFDE4((uint64_t)v40);

        uint64_t v42 = *(void **)&v35[v37];
        *(void *)&v35[v37] = v41;
        id v67 = v41;

        uint64_t v38 = 0;
      }
      uint64_t v43 = *(os_unfair_lock_s **)(v36 + 16);
      id v44 = v38;
      os_unfair_lock_unlock(v43);

      uint64_t v45 = v78 + 16;
      unint64_t v66 = *(void (**)(char *, char *, uint64_t))(v78 + 16);
      uint64_t v46 = v77;
      uint64_t v47 = v68;
      v66(v19, v77, v68);
      unint64_t v48 = (*(unsigned __int8 *)(v45 + 64) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 64);
      uint64_t v49 = swift_allocObject();
      unint64_t v50 = v70;
      v70((char *)(v49 + v48), v19, v47);
      objc_super v51 = v69;
      v66(v69, v46, v47);
      uint64_t v52 = (void (*)(char *, char *, uint64_t))swift_allocObject();
      v50((char *)v52 + v48, v51, v47);
      uint64_t v53 = v73;
      swift_bridgeObjectRetain();
      uint64_t v55 = v75;
      uint64_t v54 = v76;
      uint64_t v56 = v49;
      id v57 = v67;
      uint64_t v58 = sub_100EAA054((uint64_t)v76, v75, v72, v53, (uint64_t)sub_100B5182C, v56, (void (*)(uint64_t, char *, uint64_t))sub_100B5185C, v52);
      uint64_t v60 = v59;

      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v61 = (uint64_t)v74;
      sub_100EA51A8(v54, v58, v60, v55, (uint64_t)v74);
      id v29 = sub_1008D2BA4(v61);
      sub_100671108(v61);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v77, v47);
      uint64_t v28 = v65;
    }
  }
  id v62 = v28;
  return v29;
}

CGDataProviderRef sub_100B50D4C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v10)
  {
    uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v11);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
    uint64_t v14 = v10;
    uint64_t v15 = v13(v11, v12);

    return (CGDataProviderRef)v15;
  }
  else
  {
    sub_100522E9C(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v4, &qword_101672E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v4, &qword_101672E90);
      return 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      URL._bridgeToObjectiveC()(v18);
      CFURLRef v20 = v19;
      CGDataProviderRef v17 = CGDataProviderCreateWithURL(v19);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    return v17;
  }
}

CGImageSourceRef sub_100B50F88()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (!v10)
  {
    sub_100522E9C(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v4, &qword_101672E90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_100522F00((uint64_t)v4, &qword_101672E90);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      URL._bridgeToObjectiveC()(v16);
      CFURLRef v18 = v17;
      uint64_t v15 = CGDataProviderCreateWithURL(v17);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if (v15) {
        goto LABEL_7;
      }
    }
    return 0;
  }
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
  uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
  sub_10050F848(&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v11);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  uint64_t v14 = v10;
  uint64_t v15 = (CGDataProvider *)v13(v11, v12);

  if (!v15) {
    return 0;
  }
LABEL_7:
  CGImageSourceRef v19 = CGImageSourceCreateWithDataProvider(v15, 0);

  return v19;
}

CGDataProvider *sub_100B511E0()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(char **)(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset);
  if (v10)
  {
    uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v12 = *(void *)&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(&v10[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v11);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
    uint64_t v14 = v10;
    ImageAtIndedouble x = (CGDataProvider *)v13(v11, v12);

    if (!ImageAtIndex) {
      return ImageAtIndex;
    }
    goto LABEL_7;
  }
  sub_100522E9C(v0 + OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url, (uint64_t)v4, &qword_101672E90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_100522F00((uint64_t)v4, &qword_101672E90);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
  URL._bridgeToObjectiveC()(v16);
  CFURLRef v18 = v17;
  ImageAtIndedouble x = CGDataProviderCreateWithURL(v17);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (ImageAtIndex)
  {
LABEL_7:
    CGImageSourceRef v19 = CGImageSourceCreateWithDataProvider(ImageAtIndex, 0);

    if (v19)
    {
      ImageAtIndedouble x = CGImageSourceCreateImageAtIndex(v19, 0, 0);

      return ImageAtIndex;
    }
    return 0;
  }
  return ImageAtIndex;
}

id sub_100B514E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper();
  return [super dealloc];
}

uint64_t sub_100B515A4()
{
  return type metadata accessor for CRLPreinsertionAssetWrapper();
}

uint64_t type metadata accessor for CRLPreinsertionAssetWrapper()
{
  uint64_t result = qword_1016937C8;
  if (!qword_1016937C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B515F8()
{
  sub_100757DF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id sub_100B516A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  if (a3)
  {
    uint64_t v8 = &a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    *(void *)uint64_t v8 = a2;
    *((void *)v8 + 1) = a3;
    uint64_t v9 = a5;
  }
  else
  {
    uint64_t v10 = a5;
    uint64_t v11 = URL.lastPathComponent.getter();
    uint64_t v12 = (uint64_t *)&v10[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
    *uint64_t v12 = v11;
    v12[1] = v13;
  }
  uint64_t v14 = &a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  *(void *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = a4;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = 0;
  *(void *)&a5[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
  swift_unknownObjectRetain();

  v19.receiver = a5;
  v19.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper();
  [super init];
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v17;
}

uint64_t sub_100B5182C()
{
  return sub_100B5199C((uint64_t (*)(unint64_t))sub_100EAAB38);
}

uint64_t sub_100B5185C(uint64_t a1)
{
  return sub_100B51A1C(a1, (uint64_t (*)(uint64_t, unint64_t))sub_100EAAB50);
}

uint64_t sub_100B51888(uint64_t a1)
{
  return sub_100B4F084(a1, *(void *)(v1 + 16));
}

uint64_t sub_100B51890()
{
  uint64_t v1 = sub_1005057FC(&qword_1016937F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B51924(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1005057FC(&qword_1016937F8) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100B4FCBC(a1, v4);
}

uint64_t sub_100B5199C(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  return a1(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_100B51A1C(uint64_t a1, uint64_t (*a2)(uint64_t, unint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  return a2(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_100B51A98()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100B51AF8()
{
  return sub_100EAB018(*(void (**)(__n128))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void (**)(char *))(v0 + 56), *(void (**)(char *, uint64_t, uint64_t))(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_100B51B30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B51B40()
{
  return swift_release();
}

uint64_t sub_100B51B48()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B51B88()
{
  uint64_t v2 = *(const void **)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100528488;
  uint64_t v5 = (uint64_t (*)(const void *, void *))((char *)&dword_101693808 + dword_101693808);
  return v5(v2, v3);
}

id sub_100B51C3C(char *a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__alreadyInsertedAsset] = a1;
  uint64_t v5 = &a1[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
  uint64_t v6 = *((void *)v5 + 3);
  uint64_t v7 = *((void *)v5 + 4);
  sub_10050F848(v5, v6);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v2;
  uint64_t v10 = a1;
  uint64_t v11 = v8(v6, v7);
  uint64_t v12 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__filename];
  *uint64_t v12 = v11;
  v12[1] = v13;
  uint64_t v14 = &v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__url];
  uint64_t v15 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__owner] = a2;
  *(void *)&v9[OBJC_IVAR____TtC8Freeform27CRLPreinsertionAssetWrapper__tempDir] = 0;
  swift_unknownObjectRetain();

  v17.receiver = v9;
  v17.super_class = (Class)type metadata accessor for CRLPreinsertionAssetWrapper();
  return [super init];
}

uint64_t sub_100B51D7C()
{
  uint64_t v1 = v0;
  id v2 = [v0 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  sub_1007BDFBC();

  id v3 = [v0 layout];
  uint64_t v4 = (simd_float4 *)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource);
  __n128 v20 = (__n128)matrix_identity_float4x4.columns[3];
  if (v4[1].i8[0])
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323, (uint64_t)"Unexpected dynamic pose change.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v19) = 2;
    objc_super v17 = "Unexpected dynamic pose change.";
    uint64_t v18 = 31;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323);
  }
  else
  {
    *uint64_t v4 = matrix_identity_float4x4.columns[3];
    v4[1].i8[0] = 0;
    id v5 = sub_1007BCBA0();
    if (v5)
    {
      id v6 = v5;
      [v5 processChangedProperty:50];

      id v3 = v6;
    }
  }

  if ((*(unsigned __int8 *)(*(void *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                           + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) != 4)
    sub_100DE2078(1);
  id v7 = [v1 interactiveCanvasController:v17, v18, v19];
  [v7 layoutIfNeeded];

  id v8 = [self mainBundle];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v8 localizedStringForKey:v9 value:v10 table:v11];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  sub_100B69D84(v13, v15, v20);

  return swift_bridgeObjectRelease();
}

id sub_100B52080(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts] = 0;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_maxErrorRecoveryAttempts] = 10;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_suppressInvalidateForRenderingStateChange] = 0;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate] = 0;
  uint64_t v5 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController;
  id v6 = objc_allocWithZone((Class)type metadata accessor for CRLUSDZKnobController());
  id v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_externallySetAlpha] = 0x3FF0000000000000;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewXConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewYConstraint] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView] = 0;
  *(int64x2_t *)&v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] = vdupq_n_s64(0x4049000000000000uLL);
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_shouldUpdateRenderingStateForSceneCapture] = 0;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] = 0;
  uint64_t v8 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy;
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] = 4;
  if (!a2) {
    goto LABEL_9;
  }
  id v9 = a2;
  if (![v9 isCanvasInteractive])
  {

LABEL_9:
    v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] = 0;
    goto LABEL_10;
  }
  v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] = 1;
  objc_super v17 = &type metadata for CRLFeatureFlags;
  unint64_t v18 = sub_1005396A8();
  v16[0] = 21;
  char v10 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v16);
  if (v10)
  {
    if (qword_10166F438 != -1) {
      swift_once();
    }
    char v11 = byte_10171ADF0;

    if (v11) {
      v7[v8] = 3;
    }
    else {
      v7[v8] = 1;
    }
  }
  else
  {
  }
LABEL_10:
  type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  swift_storeEnumTagMultiPayload();
  id v12 = &v7[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  *(void *)id v12 = 0;
  v12[8] = -64;

  uint64_t v13 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v19.receiver = v7;
  v19.super_class = v13;
  id v14 = [super initWithLayout:a1 canvas:a2];
  sub_100B53A04();
  sub_100B53C64();
  sub_100B672D8();

  return v14;
}

BOOL sub_100B523BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 4) {
    return v3 == 4;
  }
  if (v3 == 4) {
    return 0;
  }
  return v2 == v3;
}

uint64_t sub_100B523F8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v4, v5);
  id v7 = (void **)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v9);
  char v11 = (char *)&v17 - v10;
  sub_100B6F9DC(v2, (uint64_t)&v17 - v10, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_100B6F9DC((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    id v12 = *v7;
    uint64_t v13 = (uint64_t)v7 + *(int *)(sub_1005057FC(&qword_101693A78) + 48);
    type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    if (!swift_getEnumCaseMultiPayload())
    {
      id v14 = (char *)a1 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, v13, v15);
      *a1 = v12;
      swift_storeEnumTagMultiPayload();
      return sub_100B6DB90((uint64_t)v11, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    }
    sub_100B6DB90(v13, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
  }
  sub_100B6F9DC(v2, (uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  return sub_100B6DB90((uint64_t)v11, type metadata accessor for CRLUSDZRep.PosterLoadingState);
}

uint64_t sub_100B525E4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v4, v5);
  id v7 = (void **)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v9);
  char v11 = (char *)&v17 - v10;
  sub_100B6F9DC(v2, (uint64_t)&v17 - v10, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_100B6F9DC((uint64_t)v11, (uint64_t)v7, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    id v12 = *v7;
    uint64_t v13 = (uint64_t)v7 + *(int *)(sub_1005057FC(&qword_101693920) + 48);
    type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    if (!swift_getEnumCaseMultiPayload())
    {
      id v14 = (char *)a1 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14, v13, v15);
      *a1 = v12;
      swift_storeEnumTagMultiPayload();
      return sub_100B6DB90((uint64_t)v11, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
    sub_100B6DB90(v13, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
  }
  sub_100B6F9DC(v2, (uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  return sub_100B6DB90((uint64_t)v11, type metadata accessor for CRLUSDZRep.AssetLoadingState);
}

uint64_t sub_100B527D0()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B6F9DC(v0, (uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      id v11 = [self mainBundle];
      NSString v12 = String._bridgeToObjectiveC()();
      NSString v13 = String._bridgeToObjectiveC()();
      id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v7 = [self mainBundle];
      NSString v8 = String._bridgeToObjectiveC()();
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
    }
  }
  else
  {
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    swift_errorRelease();
  }
  return v6;
}

uint64_t sub_100B52A30(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2 = a1;
  if ((a2 & 0xC0) == 0x40 && (int v3 = *(unsigned __int8 *)(a1 + 48), (v3 & 0x30) == 0x10))
  {
    uint64_t v4 = *(void **)(a1 + 40);
    uint64_t v5 = v3 & 0xFFFFFFCF;
    sub_100B6BEC8(v4, v3 & 0xCF);
    uint64_t v2 = sub_100B52A30(v4, v5);
    sub_100B6BEFC(v4, v5);
  }
  else
  {
    sub_100B6BEC8((id)a1, a2);
  }
  return v2;
}

void sub_100B52AC4()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  *(void *)&double v3 = __chkstk_darwin(v1, v2).n128_u64[0];
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(v0, "hasBeenRemoved", v3) & 1) == 0)
  {
    uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
    swift_beginAccess();
    sub_100B6F9DC(v6, (uint64_t)v5, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        id v10 = *(id *)v5;
        id v11 = (void *)*((void *)v5 + 1);

        id v12 = [v0 layout];
        type metadata accessor for CRLUSDZLayout();
        uint64_t v13 = swift_dynamicCastClassUnconditional();
        id v14 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager);
        *(void *)(v13 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager) = 0;

        if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
        {
          [v0 invalidateKnobs];
          id v15 = [v0 layout];
          [v15 invalidate];
        }
        *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 0;
        break;
      case 2u:

        uint64_t v9 = sub_1005057FC(&qword_101693A78);
        sub_100B6DB90((uint64_t)&v5[*(int *)(v9 + 48)], type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
        break;
      case 3u:
        sub_100B5681C();
        break;
      default:

        id v7 = &v5[*(int *)(sub_1005057FC(&qword_101693908) + 48)];
        uint64_t v8 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
    }
    sub_100B55410();
  }
}

void sub_100B52D24()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView];
  *(void *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView] = 0;

  if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_suppressInvalidateForRenderingStateChange] & 1) == 0
    && v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] == 1)
  {
    id v2 = [v0 interactiveCanvasController];
    [v2 invalidateContentLayersForRep:v0];

    [v0 setNeedsDisplay];
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v3 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v5 = v3;
    id v6 = [v0 debugDescription];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v10 = sub_100528BE4();
    *(void *)(inited + 64) = v10;
    *(void *)(inited + 32) = v7;
    *(void *)(inited + 40) = v9;
    id v11 = &v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    id v12 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    LOBYTE(v7) = v11[8];
    sub_100B6BEC8(v12, v7);
    uint64_t v13 = sub_100B52F48((uint64_t)v12, v7);
    uint64_t v15 = v14;
    sub_100B6BEFC(v12, v7);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v10;
    *(void *)(inited + 72) = v13;
    *(void *)(inited + 80) = v15;
    uint64_t v16 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v5, (uint64_t)&_mh_execute_header, v16, (uint64_t)"(USDZRep) [%{public}@] rendering state: %{public}@", 50, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_100B52F48(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0xD000000000000011;
  switch(a2 >> 6)
  {
    case 1:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      uint64_t v14 = *(void **)(a1 + 32);
      uint64_t v13 = *(void **)(a1 + 40);
      unsigned int v15 = *(unsigned __int8 *)(a1 + 48);
      int v16 = (v15 >> 4) & 3;
      if (v16)
      {
        if (v16 == 1)
        {
          int v17 = v15 & 0xCF;
          LODWORD(v83) = v17;
          unint64_t v85 = 0;
          unint64_t v86 = 0xE000000000000000;
          swift_unknownObjectRetain();
          id v82 = v14;
          sub_100B6BEC8(v13, v17);
          _StringGuts.grow(_:)(55);
          v18._object = (void *)0x8000000101274E40;
          v18._countAndFlagsBits = 0xD000000000000013;
          String.append(_:)(v18);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(ObjectType, v12);
          UUID.uuidString.getter();
          String.index(_:offsetBy:)();
          String.subscript.getter();
          __n128 v20 = v13;
          uint64_t v84 = v11;
          swift_bridgeObjectRelease();
          uint64_t v21 = static String._fromSubstring(_:)();
          uint64_t v23 = v22;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
          v24._countAndFlagsBits = v21;
          v24._object = v23;
          String.append(_:)(v24);
          swift_bridgeObjectRelease();
          v25._countAndFlagsBits = 0xD000000000000012;
          v25._object = (void *)0x8000000101274E60;
          String.append(_:)(v25);
          id v26 = v82;
          id v27 = [v82 description];
          uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v30 = v29;

          v31._countAndFlagsBits = v28;
          v31._object = v30;
          String.append(_:)(v31);
          swift_bridgeObjectRelease();
          v32._countAndFlagsBits = 0x6E69776F6873202CLL;
          v32._object = (void *)0xEB00000000203A67;
          String.append(_:)(v32);
          unsigned __int8 v33 = v83;
          v34._countAndFlagsBits = sub_100B52F48(v20, v83);
          String.append(_:)(v34);
          swift_bridgeObjectRelease();
          v35._countAndFlagsBits = 41;
          v35._object = (void *)0xE100000000000000;
          String.append(_:)(v35);
          sub_100B6BEFC(v20, v33);
          swift_unknownObjectRelease();

          return v85;
        }
        swift_unknownObjectRetain();
        sub_100B6F904(v14, v13, v15);
        id v52 = [v14 layer];
        _s10MetalLayerCMa();
        uint64_t v53 = swift_dynamicCastClass();
        id v82 = v14;
        uint64_t v83 = v13;
        if (!v53)
        {

          unint64_t v85 = 0;
          unint64_t v86 = 0xE000000000000000;
          _StringGuts.grow(_:)(33);
          swift_bridgeObjectRelease();
          unint64_t v85 = 0xD000000000000013;
          unint64_t v86 = 0x8000000101274E40;
          uint64_t v67 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v67, v12);
          UUID.uuidString.getter();
          String.index(_:offsetBy:)();
          String.subscript.getter();
          swift_bridgeObjectRelease();
          uint64_t v68 = static String._fromSubstring(_:)();
          uint64_t v70 = v69;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
          v71._countAndFlagsBits = v68;
          v71._object = v70;
          String.append(_:)(v71);
          swift_bridgeObjectRelease();
          v72._countAndFlagsBits = 0x3A726579616C202CLL;
          v72._object = (void *)0xE900000000000020;
          String.append(_:)(v72);
          id v73 = v82;
          id v74 = [v82 layer];
          id v75 = [v74 description];
          uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v78 = v77;

          v79._countAndFlagsBits = v76;
          v79._object = v78;
          String.append(_:)(v79);

          swift_bridgeObjectRelease();
          v80._countAndFlagsBits = 41;
          v80._object = (void *)0xE100000000000000;
          String.append(_:)(v80);
          sub_100B6F970(v73, v83, v15);
          goto LABEL_18;
        }
        uint64_t v54 = (void *)v53;
        unint64_t v85 = 0;
        unint64_t v86 = 0xE000000000000000;
        id v81 = v52;
        _StringGuts.grow(_:)(39);
        swift_bridgeObjectRelease();
        unint64_t v85 = 0xD000000000000013;
        unint64_t v86 = 0x8000000101274E40;
        uint64_t v55 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v55, v12);
        UUID.uuidString.getter();
        uint64_t v84 = v11;
        String.index(_:offsetBy:)();
        String.subscript.getter();
        swift_bridgeObjectRelease();
        uint64_t v56 = static String._fromSubstring(_:)();
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        v59._countAndFlagsBits = v56;
        v59._object = v58;
        String.append(_:)(v59);
        swift_bridgeObjectRelease();
        v60._countAndFlagsBits = 0x206C6174656D202CLL;
        v60._object = (void *)0xEF203A726579616CLL;
        String.append(_:)(v60);
        id v61 = [v54 description];
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        long long v64 = v63;

        v65._countAndFlagsBits = v62;
        v65._object = v64;
        String.append(_:)(v65);
        swift_bridgeObjectRelease();
        v66._countAndFlagsBits = 41;
        v66._object = (void *)0xE100000000000000;
        String.append(_:)(v66);

        id v51 = v82;
      }
      else
      {
        unint64_t v85 = 0;
        unint64_t v86 = 0xE000000000000000;
        swift_unknownObjectRetain();
        sub_100B6F904(v14, v13, v15);
        _StringGuts.grow(_:)(32);
        swift_bridgeObjectRelease();
        unint64_t v85 = 0xD000000000000013;
        unint64_t v86 = 0x8000000101274E40;
        uint64_t v39 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v39, v12);
        UUID.uuidString.getter();
        uint64_t v84 = v11;
        String.index(_:offsetBy:)();
        String.subscript.getter();
        uint64_t v83 = v13;
        swift_bridgeObjectRelease();
        uint64_t v40 = static String._fromSubstring(_:)();
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
        v43._countAndFlagsBits = v40;
        v43._object = v42;
        String.append(_:)(v43);
        swift_bridgeObjectRelease();
        v44._countAndFlagsBits = 0x203A77656976202CLL;
        v44._object = (void *)0xE800000000000000;
        String.append(_:)(v44);
        id v45 = [v14 description];
        uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v48 = v47;

        v49._countAndFlagsBits = v46;
        v49._object = v48;
        String.append(_:)(v49);
        swift_bridgeObjectRelease();
        v50._countAndFlagsBits = 41;
        v50._object = (void *)0xE100000000000000;
        String.append(_:)(v50);
        id v51 = v14;
      }
      sub_100B6F970(v51, v83, v15);
LABEL_18:
      swift_unknownObjectRelease();
      return v85;
    case 2:
      unint64_t v85 = 0x6D49726574736F70;
      unint64_t v86 = 0xEB00000000656761;
      if (a2) {
        uint64_t v36 = 0x6E6E6970732B2820;
      }
      else {
        uint64_t v36 = 0;
      }
      if (a2) {
        unint64_t v37 = 0xEB00000000297265;
      }
      else {
        unint64_t v37 = 0xE000000000000000;
      }
      unint64_t v38 = v37;
      String.append(_:)(*(Swift::String *)&v36);
      swift_bridgeObjectRelease();
      return v85;
    case 3:
      return 1701736302;
    default:
      return result;
  }
}

uint64_t sub_100B53810()
{
  uint64_t v1 = v0;
  LODWORD(v2) = [v0 isSelected];
  if (v2)
  {
    id v2 = sub_100B666F0();
    if (v2)
    {
      double v3 = v2;
      id v4 = [v2 boardItems];
      type metadata accessor for CRLBoardItem(0);
      sub_100B70710((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
      uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1005057FC((uint64_t *)&unk_101676C10);
      unint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_101177E70;
      id v7 = [v1 info];
      type metadata accessor for CRLUSDZItem();
      *(void *)(inited + 32) = swift_dynamicCastClassUnconditional();
      specialized Array._endMutation()();
      if (inited >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v10) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((inited & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        sub_100508DCC(inited);
        uint64_t v9 = v8;
        goto LABEL_8;
      }
      uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_8:
      swift_bridgeObjectRelease();
      char v11 = sub_100A3D424(v5, (uint64_t)v9);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v11)
      {
        if (byte_101670308 == 1) {
          LOBYTE(v2) = sub_100B67994();
        }
        else {
          LOBYTE(v2) = 1;
        }
      }
      else
      {
        LOBYTE(v2) = 0;
      }
    }
  }
  return v2 & 1;
}

void sub_100B53A04()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  *(void *)&double v3 = __chkstk_darwin(v1, v2).n128_u64[0];
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((objc_msgSend(v0, "hasBeenRemoved", v3) & 1) == 0)
  {
    uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
    swift_beginAccess();
    sub_100B6F9DC(v6, (uint64_t)v5, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        id v10 = *(id *)v5;
        char v11 = (void *)*((void *)v5 + 1);

        id v12 = [v0 layout];
        type metadata accessor for CRLUSDZLayout();
        uint64_t v13 = swift_dynamicCastClassUnconditional();
        uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager);
        *(void *)(v13 + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_cachedHitTestManager) = 0;

        if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
        {
          [v0 invalidateKnobs];
          id v15 = [v0 layout];
          [v15 invalidate];
        }
        *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 0;
        break;
      case 2u:

        uint64_t v9 = sub_1005057FC(&qword_101693A78);
        sub_100B6DB90((uint64_t)&v5[*(int *)(v9 + 48)], type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
        break;
      case 3u:
        sub_100B5681C();
        break;
      default:

        id v7 = &v5[*(int *)(sub_1005057FC(&qword_101693908) + 48)];
        uint64_t v8 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
        break;
    }
    sub_100B55410();
  }
}

void sub_100B53C64()
{
  uint64_t v1 = v0;
  *(void *)&long long v235 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  __chkstk_darwin(v235, v2);
  uint64_t v4 = (char *)&v221 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v221 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  id v10 = *(char **)(v9 - 8);
  uint64_t v238 = v9;
  uint64_t v239 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v234 = (char *)&v221 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v221 - v15;
  __chkstk_darwin(v17, v18);
  __n128 v20 = (char *)&v221 - v19;
  __chkstk_darwin(v21, v22);
  Swift::String v24 = (char *)&v221 - v23;
  __chkstk_darwin(v25, v26);
  uint64_t v28 = (char *)&v221 - v27;
  uint64_t v29 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v29, v30);
  long long v233 = (uint64_t *)((char *)&v221 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v32, v33);
  long long v236 = (uint64_t *)((char *)&v221 - v34);
  *(void *)&double v37 = __chkstk_darwin(v35, v36).n128_u64[0];
  uint64_t v39 = (id *)((char *)&v221 - v38);
  if ((objc_msgSend(v1, "hasBeenRemoved", v37) & 1) == 0)
  {
    uint64_t v237 = v1;
    uint64_t v40 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess();
    sub_100B6F9DC(v40, (uint64_t)v39, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t v232 = v29;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:

        int v43 = *((unsigned __int8 *)v39 + 8);
        uint64_t v44 = sub_1005057FC(&qword_101693910);
        id v45 = (char *)v39 + *(int *)(v44 + 64);
        if (v43 == 1)
        {
          uint64_t v46 = v238;
          uint64_t v47 = (void (**)(char *, uint64_t))v239;
          switch(v237[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy])
          {
            case 1:
              sub_100B5C118();
              break;
            case 2:
              sub_100B5AF84();
              break;
            case 3:
              sub_100B5C9A4();
              break;
            case 4:
              break;
            default:
              sub_100B5B848();
              break;
          }
          v47[1](v45, v46);
          goto LABEL_62;
        }
        (*((void (**)(char *, uint64_t))v239 + 1))((char *)v39 + *(int *)(v44 + 64), v238);
        return;
      case 2u:
        id v231 = *v39;
        unint64_t v48 = (int *)sub_1005057FC(&qword_101693918);
        Swift::String v49 = (char *)v39 + v48[12];
        long long v50 = *(_OWORD *)((char *)v39 + v48[16]);
        id v51 = (uint64_t *)((char *)v39 + v48[20]);
        uint64_t v52 = v51[4];
        unint64_t v53 = v51[5];
        uint64_t v54 = v51[6];
        if (v53 >> 62)
        {
          uint64_t v230 = v49;
          uint64_t v55 = *v51;
          unint64_t v56 = v51[1];
          uint64_t v57 = v51[2];
          uint64_t v58 = v51[3];
          if (v53 >> 62 == 1)
          {
            unint64_t v225 = v53;
            uint64_t v226 = v52;
            swift_unknownObjectRelease();
            uint64_t v229 = v57;
            if (v57 == 4)
            {
              uint64_t v224 = v58;
              if (v56 == 1)
              {
                uint64_t v59 = v54;
                uint64_t v227 = v55;
                uint64_t v61 = v238;
                Swift::String v60 = (void (**)(char *, uint64_t))v239;
                uint64_t v62 = v239 + 16;
                uint64_t v63 = v234;
                uint64_t v222 = (void (*)(char *, char *, uint64_t))*((void *)v239 + 2);
                v222(v234, v230, v238);
                uint64_t v64 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts;
                if (*(uint64_t *)&v237[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts] <= 9)
                {
                  char v65 = byte_101670308;
                  byte_101670308 = 1;
                  if ((v65 & 1) == 0)
                  {
                    if (qword_10166FB00 != -1) {
                      swift_once();
                    }
                    swift_beginAccess();
                    Swift::String v66 = (void *)static OS_os_log.crlThreeDimensionalObjects;
                    sub_1005057FC((uint64_t *)&unk_101672B40);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = xmmword_10117E810;
                    char v68 = byte_101670308;
                    *(void *)(inited + 56) = &type metadata for Bool;
                    *(void *)(inited + 64) = &protocol witness table for Bool;
                    *(unsigned char *)(inited + 32) = v68;
                    id v69 = v66;
                    uint64_t v70 = static os_log_type_t.error.getter();
                    sub_100BAC898((uint64_t)v69, (uint64_t)&_mh_execute_header, v70, (uint64_t)"Last connection jetsamed set to: %d.", 36, 2, inited);
                    swift_setDeallocating();
                    sub_1005057FC(&qword_101672B50);
                    swift_arrayDestroy();
                  }
                  id v71 = v237;
                  uint64_t v72 = *(void *)&v237[v64];
                  BOOL v73 = __OFADD__(v72, 1);
                  uint64_t v74 = v72 + 1;
                  if (v73)
                  {
                    __break(1u);
                  }
                  else
                  {
                    long long v236 = v62;
                    *(void *)&v237[v64] = v74;
                    if (qword_10166FB00 == -1)
                    {
LABEL_18:
                      swift_beginAccess();
                      id v75 = (void *)static OS_os_log.crlThreeDimensionalObjects;
                      sub_1005057FC((uint64_t *)&unk_101672B40);
                      uint64_t v76 = swift_initStackObject();
                      *(_OWORD *)(v76 + 16) = xmmword_10117E810;
                      id v77 = v75;
                      id v78 = [v71 debugDescription];
                      uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v81 = v80;

                      *(void *)(v76 + 56) = &type metadata for String;
                      *(void *)(v76 + 64) = sub_100528BE4();
                      *(void *)(v76 + 32) = v79;
                      *(void *)(v76 + 40) = v81;
                      uint64_t v82 = static os_log_type_t.error.getter();
                      sub_100BAC898((uint64_t)v77, (uint64_t)&_mh_execute_header, v82, (uint64_t)"(USDZRep) [%{public}@] extension disconnected, falling back to low memory mode...", 81, 2, v76);
                      swift_setDeallocating();
                      sub_1005057FC(&qword_101672B50);
                      char v83 = 1;
                      swift_arrayDestroy();

                      id v84 = v231;
                      uint64_t v85 = (uint64_t)v233;
                      *long long v233 = v231;
                      LODWORD(v77) = byte_101670308;
                      id v86 = v84;
                      if (v77 == 1) {
                        char v83 = sub_100B67994();
                      }
                      uint64_t v87 = v85 + *(int *)(sub_1005057FC(&qword_101693910) + 64);
                      *(unsigned char *)(v85 + 8) = v83 & 1;
                      uint64_t v88 = v238;
                      v222((char *)v87, v63, v238);
                      swift_storeEnumTagMultiPayload();
                      swift_beginAccess();
                      sub_100B70DFC(v85, v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                      uint64_t v89 = swift_endAccess();
                      sub_100B53C64(v89);
                      sub_100B6DB90(v85, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                      sub_100767658(v227, 1uLL, v229, v224, v226, v225);

                      uint64_t v90 = (void (*)(char *, uint64_t))*((void *)v239 + 1);
                      v90(v63, v88);
                      v90(v230, v88);
                      goto LABEL_62;
                    }
                  }
                  swift_once();
                  goto LABEL_18;
                }
                v60[1](v63, v61);
                uint64_t v55 = v227;
                uint64_t v54 = v59;
                unint64_t v56 = 1;
              }
              unint64_t v228 = v56;
              uint64_t v223 = v54;
              uint64_t v234 = (char *)v40;
              sub_100767448(v55, v56, 4);
              id v179 = v237;
              uint64_t v180 = v55;
              if (qword_10166FB00 != -1) {
                swift_once();
              }
              swift_beginAccess();
              unint64_t v181 = (void *)static OS_os_log.crlThreeDimensionalObjects;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v182 = swift_initStackObject();
              *(_OWORD *)(v182 + 16) = xmmword_10117D8C0;
              id v183 = v181;
              id v184 = [v179 debugDescription];
              uint64_t v185 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v187 = v186;

              *(void *)(v182 + 56) = &type metadata for String;
              unint64_t v188 = sub_100528BE4();
              *(void *)(v182 + 64) = v188;
              *(void *)(v182 + 32) = v185;
              *(void *)(v182 + 40) = v187;
              uint64_t v189 = v180;
              uint64_t v240 = v180;
              unint64_t v190 = v228;
              unint64_t v241 = v228;
              sub_1007CEB50();
              uint64_t v191 = Error.localizedDescription.getter();
              *(void *)(v182 + 96) = &type metadata for String;
              *(void *)(v182 + 104) = v188;
              *(void *)(v182 + 72) = v191;
              *(void *)(v182 + 80) = v192;
              uint64_t v193 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v183, (uint64_t)&_mh_execute_header, v193, (uint64_t)"(USDZRep) [%{public}@] extension error: %{public}@", 50, 2, v182);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              uint64_t v194 = sub_1005057FC(&qword_101693920);
              uint64_t v195 = (uint64_t)v236;
              uint64_t v196 = (void *)((char *)v236 + *(int *)(v194 + 48));
              id v197 = v231;
              *long long v236 = v231;
              uint64_t v198 = swift_allocError();
              *uint64_t v199 = v189;
              v199[1] = v190;
              *uint64_t v196 = v198;
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v200 = (uint64_t)v234;
              swift_beginAccess();
              id v201 = v197;
              sub_100B70DFC(v195, v200, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              uint64_t v202 = swift_endAccess();
              sub_100B53C64(v202);
              sub_100B6DB90(v195, type metadata accessor for CRLUSDZRep.AssetLoadingState);

              sub_100767658(v189, v190, v229, v224, v226, v225);
            }
            else
            {
              unint64_t v144 = v56;
              uint64_t v227 = v55;
              uint64_t v234 = (char *)v40;
              id v145 = v237;
              if (qword_10166FB00 != -1) {
                swift_once();
              }
              swift_beginAccess();
              uint64_t v146 = (void *)static OS_os_log.crlThreeDimensionalObjects;
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t v147 = swift_initStackObject();
              *(_OWORD *)(v147 + 16) = xmmword_10117D8C0;
              id v148 = v146;
              id v149 = [v145 debugDescription];
              uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v152 = v151;

              *(void *)(v147 + 56) = &type metadata for String;
              unint64_t v153 = sub_100528BE4();
              *(void *)(v147 + 64) = v153;
              *(void *)(v147 + 32) = v150;
              *(void *)(v147 + 40) = v152;
              uint64_t v154 = v227;
              uint64_t v240 = v227;
              unint64_t v228 = v144;
              unint64_t v241 = v144;
              char v155 = v229;
              char v242 = v229;
              sub_100776FC8();
              uint64_t v156 = Error.localizedDescription.getter();
              *(void *)(v147 + 96) = &type metadata for String;
              *(void *)(v147 + 104) = v153;
              *(void *)(v147 + 72) = v156;
              *(void *)(v147 + 80) = v157;
              uint64_t v158 = static os_log_type_t.error.getter();
              sub_100BAC898((uint64_t)v148, (uint64_t)&_mh_execute_header, v158, (uint64_t)"(USDZRep) [%{public}@] renderer error: %{public}@", 49, 2, v147);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();

              uint64_t v159 = sub_1005057FC(&qword_101693920);
              uint64_t v160 = (uint64_t)v236;
              uint64_t v161 = (void *)((char *)v236 + *(int *)(v159 + 48));
              id v162 = v231;
              *long long v236 = v231;
              uint64_t v163 = swift_allocError();
              unint64_t v164 = v228;
              *(void *)uint64_t v165 = v154;
              *(void *)(v165 + 8) = v164;
              *(unsigned char *)(v165 + 16) = v155;
              *uint64_t v161 = v163;
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v166 = (uint64_t)v234;
              swift_beginAccess();
              id v167 = v162;
              sub_100B70DFC(v160, v166, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              uint64_t v168 = swift_endAccess();
              sub_100B53C64(v168);
              sub_100B6DB90(v160, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            }
            (*((void (**)(char *, uint64_t))v239 + 1))(v230, v238);
            goto LABEL_62;
          }
          unint64_t v141 = v57 | v56;
          if (v53 != 0x8000000000000000 || v141 | v55 | v58 | v52 | v54)
          {
            uint64_t v169 = v54;
            uint64_t v171 = v238;
            unint64_t v170 = (void (**)(char *, char *, uint64_t))v239;
            unint64_t v172 = v230;
            if (v53 == 0x8000000000000000 && v55 == 1 && !(v169 | v52 | v141 | v58))
            {
              swift_unknownObjectRelease();
              v170[4](v24, v172, v171);
              if (byte_101670308 == 1 && (sub_100B67994() & 1) == 0)
              {
                uint64_t v209 = sub_1005057FC(&qword_101693910);
                uint64_t v210 = (uint64_t)v236;
                uint64_t v211 = (char *)v236 + *(int *)(v209 + 64);
                id v212 = v231;
                *long long v236 = v231;
                *(unsigned char *)(v210 + 8) = 0;
                v170[2](v211, v24, v171);
                swift_storeEnumTagMultiPayload();
                swift_beginAccess();
                id v213 = v212;
                sub_100B70DFC(v210, v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                uint64_t v214 = swift_endAccess();
                sub_100B53C64(v214);
                sub_100B6DB90(v210, type metadata accessor for CRLUSDZRep.AssetLoadingState);

                ((void (*)(char *, uint64_t))v170[1])(v24, v171);
              }
              else
              {
                ((void (*)(char *, uint64_t))v170[1])(v24, v171);
              }
            }
            else
            {
              swift_unknownObjectRelease();
              v170[4](v20, v172, v171);
              if ((byte_101670308 & 1) != 0 && (sub_100B67994() & 1) == 0)
              {
                uint64_t v215 = sub_1005057FC(&qword_101693910);
                uint64_t v216 = (uint64_t)v236;
                uint64_t v217 = (char *)v236 + *(int *)(v215 + 64);
                id v218 = v231;
                *long long v236 = v231;
                *(unsigned char *)(v216 + 8) = 0;
                v170[2](v217, v20, v171);
                swift_storeEnumTagMultiPayload();
                swift_beginAccess();
                id v219 = v218;
                sub_100B70DFC(v216, v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                uint64_t v220 = swift_endAccess();
                sub_100B53C64(v220);
                sub_100B6DB90(v216, type metadata accessor for CRLUSDZRep.AssetLoadingState);

                ((void (*)(char *, uint64_t))v170[1])(v20, v171);
              }
              else
              {
                ((void (*)(char *, uint64_t))v170[1])(v20, v171);
              }
            }
          }
          else
          {
            swift_unknownObjectRelease();
            uint64_t v143 = v238;
            uint64_t v142 = (void (**)(char *, char *, uint64_t))v239;
            (*((void (**)(char *, char *, uint64_t))v239 + 4))(v28, v230, v238);
            if (byte_101670308 == 1 && (sub_100B67994() & 1) == 0)
            {
              uint64_t v203 = sub_1005057FC(&qword_101693910);
              uint64_t v204 = (uint64_t)v236;
              unint64_t v205 = (char *)v236 + *(int *)(v203 + 64);
              id v206 = v231;
              *long long v236 = v231;
              *(unsigned char *)(v204 + 8) = 0;
              v142[2](v205, v28, v143);
              swift_storeEnumTagMultiPayload();
              swift_beginAccess();
              id v207 = v206;
              sub_100B70DFC(v204, v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              uint64_t v208 = swift_endAccess();
              sub_100B53C64(v208);
              sub_100B6DB90(v204, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            }
            else
            {
              sub_100B5D2B4();
            }
            ((void (*)(char *, uint64_t))v142[1])(v28, v143);
          }
        }
        else
        {
          long long v235 = v50;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v132 = (void (**)(char *, char *, uint64_t))v239;
          unint64_t v133 = v49;
          uint64_t v134 = v238;
          (*((void (**)(char *, char *, uint64_t))v239 + 4))(v16, v133, v238);
          id v135 = v237;
          if ((byte_101670308 & 1) != 0 && (sub_100B67994() & 1) == 0)
          {
            uint64_t v173 = sub_1005057FC(&qword_101693910);
            uint64_t v174 = (uint64_t)v236;
            unint64_t v175 = (char *)v236 + *(int *)(v173 + 64);
            id v176 = v231;
            *long long v236 = v231;
            *(unsigned char *)(v174 + 8) = 0;
            v132[2](v175, v16, v134);
            swift_storeEnumTagMultiPayload();
            swift_beginAccess();
            id v177 = v176;
            sub_100B70DFC(v174, v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            uint64_t v178 = swift_endAccess();
            sub_100B53C64(v178);
            sub_100B6DB90(v174, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v136 = swift_allocObject();
            *(void *)(v136 + 16) = v135;
            uint64_t v137 = type metadata accessor for TaskPriority();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v8, 1, 1, v137);
            type metadata accessor for MainActor();
            id v138 = v135;
            swift_unknownObjectRetain();
            swift_retain();
            uint64_t v139 = static MainActor.shared.getter();
            uint64_t v140 = swift_allocObject();
            *(void *)(v140 + 16) = v139;
            *(void *)(v140 + 24) = &protocol witness table for MainActor;
            *(void *)(v140 + 32) = v138;
            *(_OWORD *)(v140 + 40) = v235;
            *(void *)(v140 + 56) = &unk_101693CC8;
            *(void *)(v140 + 64) = v136;
            sub_1005912D0((uint64_t)v8, (uint64_t)&unk_101693CD0, v140);
            swift_release();
            swift_release();
            swift_unknownObjectRelease();
          }
          ((void (*)(char *, uint64_t))v132[1])(v16, v134);
        }
LABEL_62:
        sub_100B55410();
        return;
      case 3u:
        uint64_t v234 = (char *)v40;

        uint64_t v91 = sub_1005057FC(&qword_101693920);
        sub_100B711AC((uint64_t)v39 + *(int *)(v91 + 48), (uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
        uint64_t v239 = v4;
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v92 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        uint64_t v238 = sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v93 = swift_initStackObject();
        long long v235 = xmmword_10117D8C0;
        *(_OWORD *)(v93 + 16) = xmmword_10117D8C0;
        id v94 = v92;
        uint64_t v95 = v237;
        id v96 = [v237 debugDescription];
        uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v99 = v98;

        *(void *)(v93 + 56) = &type metadata for String;
        unint64_t v100 = sub_100528BE4();
        *(void *)(v93 + 64) = v100;
        *(void *)(v93 + 32) = v97;
        *(void *)(v93 + 40) = v99;
        uint64_t v101 = sub_100B527D0();
        *(void *)(v93 + 96) = &type metadata for String;
        *(void *)(v93 + 104) = v100;
        *(void *)(v93 + 72) = v101;
        *(void *)(v93 + 80) = v102;
        uint64_t v103 = static os_log_type_t.error.getter();
        sub_100BAC898((uint64_t)v94, (uint64_t)&_mh_execute_header, v103, (uint64_t)"(USDZRep) [%{public}@] error: %{public}@", 40, 2, v93);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v104 = v95;
        uint64_t v105 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts;
        uint64_t v106 = *(void *)&v95[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts];
        if (v106 <= 10)
        {
          *(void *)&v95[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_errorRecoveryAttempts] = v106 + 1;
          uint64_t v119 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          uint64_t v120 = swift_initStackObject();
          *(_OWORD *)(v120 + 16) = v235;
          id v121 = v119;
          id v122 = [v95 debugDescription];
          uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v125 = v124;

          *(void *)(v120 + 32) = v123;
          int v126 = v237;
          *(void *)(v120 + 56) = &type metadata for String;
          *(void *)(v120 + 64) = v100;
          *(void *)(v120 + 40) = v125;
          uint64_t v127 = *(void *)&v126[v105];
          *(void *)(v120 + 96) = &type metadata for Int;
          *(void *)(v120 + 104) = &protocol witness table for Int;
          *(void *)(v120 + 72) = v127;
          uint64_t v128 = static os_log_type_t.debug.getter();
          sub_100BAC898((uint64_t)v121, (uint64_t)&_mh_execute_header, v128, (uint64_t)"(USDZRep) [%{public}@] recovering from error with full reset (attempts: %{public}lld)", 85, 2, v120);
          swift_setDeallocating();
          swift_arrayDestroy();

          uint64_t v129 = (uint64_t)v236;
          swift_storeEnumTagMultiPayload();
          uint64_t v130 = (uint64_t)v234;
          swift_beginAccess();
          sub_100B70DFC(v129, v130, type metadata accessor for CRLUSDZRep.AssetLoadingState);
          uint64_t v131 = swift_endAccess();
          sub_100B53C64(v131);
          sub_100B6DB90(v129, type metadata accessor for CRLUSDZRep.AssetLoadingState);
          uint64_t v118 = (uint64_t)v239;
        }
        else
        {
          uint64_t v107 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          uint64_t v108 = swift_initStackObject();
          *(_OWORD *)(v108 + 16) = v235;
          id v109 = v107;
          id v110 = [v104 debugDescription];
          uint64_t v111 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v113 = v112;

          *(void *)(v108 + 56) = &type metadata for String;
          *(void *)(v108 + 64) = v100;
          *(void *)(v108 + 32) = v111;
          *(void *)(v108 + 40) = v113;
          uint64_t v114 = (uint64_t)v239;
          uint64_t v115 = sub_100B527D0();
          *(void *)(v108 + 96) = &type metadata for String;
          *(void *)(v108 + 104) = v100;
          *(void *)(v108 + 72) = v115;
          *(void *)(v108 + 80) = v116;
          uint64_t v117 = static os_log_type_t.error.getter();
          sub_100BAC898((uint64_t)v109, (uint64_t)&_mh_execute_header, v117, (uint64_t)"(USDZRep) [%{public}@] out of recovery attempts, giving up", 58, 2, v108);
          swift_setDeallocating();
          swift_arrayDestroy();

          uint64_t v118 = v114;
        }
        sub_100B6DB90(v118, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
        goto LABEL_62;
      case 4u:
        sub_100B58704();
        goto LABEL_62;
      default:

        id v41 = (char *)v39 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
        uint64_t v42 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        goto LABEL_62;
    }
  }
}

void sub_100B55410()
{
  uint64_t v1 = v0;
  uint64_t v216 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v216, v2);
  uint64_t v217 = (id *)((char *)&v200 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (id *)((char *)&v200 - v6);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (id *)((char *)&v200 - v10);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (id *)((char *)&v200 - v14);
  uint64_t v218 = sub_1005057FC(&qword_101693CB8);
  __chkstk_darwin(v218, v16);
  uint64_t v18 = (char *)&v200 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v200 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v200 - v25;
  *(void *)&double v29 = __chkstk_darwin(v27, v28).n128_u64[0];
  uint64_t v31 = (char *)&v200 - v30;
  if ((objc_msgSend(v1, "hasBeenRemoved", v29) & 1) == 0)
  {
    uint64_t v211 = v22;
    id v212 = v26;
    id v213 = v11;
    uint64_t v214 = v19;
    uint64_t v210 = v15;
    uint64_t v32 = v217;
    uint64_t v33 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy];
    uint64_t v34 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess();
    sub_100B6F9DC(v34, (uint64_t)v31, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    uint64_t v215 = v1;
    uint64_t v35 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess();
    uint64_t v36 = (uint64_t)&v18[*(int *)(v218 + 48)];
    double v37 = (id *)&v18[*(int *)(v218 + 64)];
    *uint64_t v18 = v33;
    uint64_t v38 = (uint64_t)v31;
    uint64_t v39 = v36;
    sub_100B711AC(v38, v36, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    sub_100B6F9DC(v35, (uint64_t)v37, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t v40 = v32;
    id v41 = v7;
    uint64_t v43 = (uint64_t)v212;
    uint64_t v42 = v213;
    uint64_t v44 = (uint64_t)v211;
    switch(v33)
    {
      case 1:
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v46 = v215;
        if (EnumCaseMultiPayload != 2) {
          goto LABEL_57;
        }
        uint64_t v218 = (uint64_t)v37;
        sub_100B6F9DC((uint64_t)v37, (uint64_t)v42, type metadata accessor for CRLUSDZRep.AssetLoadingState);

        uint64_t v59 = sub_1005057FC(&qword_101693918);
        Swift::String v60 = (char *)v42 + *(int *)(v59 + 48);
        uint64_t v61 = (uint64_t *)((char *)v42 + *(int *)(v59 + 80));
        unint64_t v62 = v61[5];
        if (v62 >> 62)
        {
          sub_100767658(*v61, v61[1], v61[2], v61[3], v61[4], v61[5]);
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            sub_100B6F9DC(v39, v43, type metadata accessor for CRLUSDZRep.PosterLoadingState);

            uint64_t v63 = v39;
            uint64_t v64 = *(void **)(v43 + 8);
            uint64_t v46 = v215;
            if (v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_shouldUpdateRenderingStateForSceneCapture] == 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              char v65 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
              Swift::String v66 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
              *(void *)char v65 = v64;
              unsigned __int8 v67 = v65[8];
              unsigned char v65[8] = 0x80;
              id v68 = v64;
              sub_100B6BEFC(v66, v67);
              sub_100B52D24();

              uint64_t v69 = type metadata accessor for URL();
              (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8))(v60, v69);
              sub_100B6DB90(v218, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              uint64_t v70 = type metadata accessor for CRLUSDZRep.PosterLoadingState;
              uint64_t v71 = v63;
              goto LABEL_62;
            }

            uint64_t v39 = v63;
          }
          _s15AppExRepBackendCMa(0);
          uint64_t v167 = swift_dynamicCastClass();
          if (v167)
          {
            uint64_t v168 = v167;
            swift_unknownObjectRetain();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v62 & 1) == 0)
            {
              swift_unknownObjectRelease_n();
LABEL_55:
              uint64_t v169 = type metadata accessor for URL();
              (*(void (**)(char *, uint64_t))(*(void *)(v169 - 8) + 8))(v60, v169);
              uint64_t v46 = v215;
              goto LABEL_56;
            }
            uint64_t v183 = v39;
            id v184 = *(void **)(v168 + OBJC_IVAR____TtCOO8Freeform15CRLUSDRendering6CoreRE15AppExRepBackend_metalLayer);
            uint64_t v46 = v215;
            uint64_t v185 = &v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            uint64_t v186 = *(void **)&v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            char v187 = v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
            swift_unknownObjectRetain();
            id v188 = v184;
            sub_100B6BEC8(v186, v187);
            uint64_t v189 = (void *)sub_100B6FA44(v168, v188, (uint64_t)v186, v187);
            unsigned __int8 v191 = v190;
            sub_100B6BEFC(v186, v187);
            swift_unknownObjectRelease();
            uint64_t v192 = *(void **)v185;
            *(void *)uint64_t v185 = v189;
            unsigned __int8 v193 = v185[8];
            v185[8] = v191;
            sub_100B6BEC8(v189, v191);
            sub_100B6BEFC(v192, v193);
            sub_100B52D24();
            sub_100B6BEFC(v189, v191);

            swift_unknownObjectRelease_n();
            uint64_t v194 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t))(*(void *)(v194 - 8) + 8))(v60, v194);
            sub_100B6DB90(v218, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            uint64_t v70 = type metadata accessor for CRLUSDZRep.PosterLoadingState;
            uint64_t v71 = v183;
LABEL_62:
            sub_100B6DB90(v71, v70);
            goto LABEL_63;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_unknownObjectRelease();
        goto LABEL_55;
      case 2:
        int v72 = swift_getEnumCaseMultiPayload();
        uint64_t v46 = v215;
        if (v72 != 2) {
          goto LABEL_57;
        }
        uint64_t v216 = v39;
        uint64_t v218 = (uint64_t)v37;
        sub_100B6F9DC((uint64_t)v37, (uint64_t)v41, type metadata accessor for CRLUSDZRep.AssetLoadingState);

        uint64_t v73 = sub_1005057FC(&qword_101693918);
        uint64_t v74 = (char *)v41 + *(int *)(v73 + 48);
        id v75 = (uint64_t *)((char *)v41 + *(int *)(v73 + 80));
        uint64_t v76 = *v75;
        unint64_t v77 = v75[1];
        uint64_t v78 = v75[2];
        uint64_t v79 = v75[3];
        uint64_t v80 = v75[4];
        unint64_t v81 = v75[5];
        _s13ARViewBackendCMa(0);
        uint64_t v82 = swift_dynamicCastClass();
        if (v82 && !(v81 >> 62))
        {
          char v83 = (void *)v82;
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v84 = v83[9];
          if (v84 >> 62 == 1)
          {
            uint64_t v85 = v83[15];
            uint64_t v210 = (id *)v83[16];
            uint64_t v202 = v85;
            uint64_t v86 = v83[14];
            uint64_t v217 = (id *)v83[13];
            uint64_t v87 = v83[12];
            id v213 = (id *)v74;
            uint64_t v214 = v87;
            uint64_t v88 = (char *)v83[11];
            uint64_t v211 = (char *)v83[10];
            id v212 = v88;
            unint64_t v89 = v83[7];
            uint64_t v208 = v83[8];
            char v90 = v208;
            uint64_t v209 = v86;
            unint64_t v201 = v89;
            uint64_t v207 = v83[6];
            uint64_t v91 = v207;
            uint64_t v92 = *(void **)(v89 + 88);
            uint64_t v93 = &v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            id v204 = *(id *)&v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            id v205 = v92;
            int v203 = v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
            unint64_t v206 = v84;
            swift_unknownObjectRetain();
            uint64_t v94 = v91;
            unint64_t v95 = v201;
            uint64_t v74 = (char *)v213;
            sub_100B71214(v94, v201, v90, v84);
            unint64_t v96 = v95;
            swift_retain();
            id v97 = v205;
            id v98 = v204;
            unsigned __int8 v99 = v203;
            sub_100B6BEC8(v204, v203);
            unint64_t v100 = (void *)sub_100B6FCAC((uint64_t)v83, v97, (uint64_t)v98, v99);
            unsigned __int8 v102 = v101;
            sub_100B6BEFC(v98, v99);

            swift_unknownObjectRelease();
            uint64_t v103 = *(void **)v93;
            *(void *)uint64_t v93 = v100;
            unsigned __int8 v104 = v93[8];
            v93[8] = v102;
            sub_100B6BEC8(v100, v102);
            sub_100B6BEFC(v103, v104);
            uint64_t v46 = v215;
            sub_100B52D24();
            sub_100B6BEFC(v100, v102);
            swift_unknownObjectRelease_n();
            swift_release();
            sub_100B712BC(v207, v96, v208, v206);
          }
          else
          {
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRenderingStateIfNeeded()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 770, (uint64_t)"USD renderer state mismatch - expected to find view.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRenderingStateIfNeeded()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 770);
            swift_unknownObjectRelease_n();
            uint64_t v46 = v215;
          }
          uint64_t v148 = v218;
          uint64_t v149 = v216;
          uint64_t v150 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t))(*(void *)(v150 - 8) + 8))(v74, v150);
          sub_100B6DB90(v148, type metadata accessor for CRLUSDZRep.AssetLoadingState);
          uint64_t v70 = type metadata accessor for CRLUSDZRep.PosterLoadingState;
          uint64_t v71 = v149;
          goto LABEL_62;
        }
        sub_100767658(v76, v77, v78, v79, v80, v81);
        swift_unknownObjectRelease();
        uint64_t v126 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t))(*(void *)(v126 - 8) + 8))(v74, v126);
        uint64_t v46 = v215;
        uint64_t v39 = v216;
LABEL_56:
        double v37 = (id *)v218;
        goto LABEL_57;
      case 3:
        int v105 = swift_getEnumCaseMultiPayload();
        uint64_t v46 = v215;
        if (v105 != 1) {
          goto LABEL_57;
        }
        sub_100B6F9DC(v39, v44, type metadata accessor for CRLUSDZRep.PosterLoadingState);

        uint64_t v106 = v39;
        uint64_t v107 = *(void **)(v44 + 8);
        if (swift_getEnumCaseMultiPayload() == 2)
        {

          uint64_t v108 = sub_1005057FC(&qword_101693918);
          id v109 = (char *)v37 + *(int *)(v108 + 48);
          swift_unknownObjectRelease();
          id v110 = (uint64_t *)((char *)v37 + *(int *)(v108 + 80));
          sub_100767658(*v110, v110[1], v110[2], v110[3], v110[4], v110[5]);
          uint64_t v111 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          uint64_t v112 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          *(void *)uint64_t v111 = v107;
          LOBYTE(v108) = v111[8];
          v111[8] = 0x80;
          id v113 = v107;
          sub_100B6BEFC(v112, v108);
          sub_100B52D24();

          uint64_t v114 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t))(*(void *)(v114 - 8) + 8))(v109, v114);
          goto LABEL_61;
        }

        uint64_t v39 = v106;
        goto LABEL_57;
      case 4:
        int v115 = swift_getEnumCaseMultiPayload();
        uint64_t v46 = v215;
        uint64_t v116 = v210;
        switch(v115)
        {
          case 1:
            uint64_t v127 = *(void **)(v39 + 8);

            if (swift_getEnumCaseMultiPayload() != 2) {
              goto LABEL_46;
            }
            sub_100B6F9DC((uint64_t)v37, (uint64_t)v116, type metadata accessor for CRLUSDZRep.AssetLoadingState);

            uint64_t v128 = sub_1005057FC(&qword_101693918);
            uint64_t v129 = (char *)v116 + *(int *)(v128 + 48);
            swift_unknownObjectRelease();
            uint64_t v130 = (uint64_t *)((char *)v116 + *(int *)(v128 + 80));
            uint64_t v131 = *v130;
            unint64_t v132 = v130[1];
            uint64_t v133 = v130[2];
            uint64_t v134 = v130[3];
            uint64_t v135 = v130[4];
            unint64_t v136 = v130[5];
            uint64_t v137 = v130[6];
            if (v136 >> 62 == 2)
            {
              if ((unint64_t v138 = v133 | v132 | v134 | v135, !v137) && v136 == 0x8000000000000000 && v131 == 1 && !v138
                || !v137 && v136 == 0x8000000000000000 && v131 == 2 && !v138)
              {
                uint64_t v139 = type metadata accessor for URL();
                (*(void (**)(char *, uint64_t))(*(void *)(v139 - 8) + 8))(v129, v139);
                sub_100B6DB90((uint64_t)v37, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                if (byte_101670308 == 1) {
                  char v140 = sub_100B67994();
                }
                else {
                  char v140 = 1;
                }
                uint64_t v195 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
                uint64_t v196 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
                *(void *)uint64_t v195 = v127;
                unsigned __int8 v197 = v195[8];
                v195[8] = v140 & 1 | 0x80;
                id v198 = v127;
                sub_100B6BEFC(v196, v197);
                sub_100B52D24();

                goto LABEL_63;
              }
            }
            sub_100767658(v131, v132, v133, v134, v135, v136);
            uint64_t v151 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t))(*(void *)(v151 - 8) + 8))(v129, v151);
LABEL_46:
            uint64_t v152 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            unint64_t v153 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            *(void *)uint64_t v152 = v127;
            unsigned __int8 v154 = v152[8];
            v152[8] = 0x80;
            id v155 = v127;
            sub_100B6BEFC(v153, v154);
            sub_100B52D24();

            break;
          case 2:

            uint64_t v141 = v39 + *(int *)(sub_1005057FC(&qword_101693A78) + 48);
            id v142 = sub_100B5E4DC(v46);
            unsigned __int8 v144 = v143;
            id v145 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            uint64_t v146 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            *(void *)id v145 = v142;
            unsigned __int8 v147 = v145[8];
            v145[8] = v143;
            sub_100B6BEC8(v142, v143);
            sub_100B6BEFC(v146, v147);
            sub_100B52D24();
            sub_100B6BEFC(v142, v144);
            sub_100B6DB90(v141, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
            goto LABEL_59;
          case 3:
            goto LABEL_24;
          default:

            uint64_t v117 = v39 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
            uint64_t v118 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v118 - 8) + 8))(v117, v118);
LABEL_24:
            sub_100B6DB90((uint64_t)v37, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            id v119 = sub_100B5E4DC(v46);
            unsigned __int8 v121 = v120;
            id v122 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            uint64_t v123 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
            *(void *)id v122 = v119;
            unsigned __int8 v124 = v122[8];
            v122[8] = v120;
            sub_100B6BEC8(v119, v120);
            sub_100B6BEFC(v123, v124);
            sub_100B52D24();
            sub_100B6BEFC(v119, v121);
            goto LABEL_63;
        }
        goto LABEL_59;
      default:
        int v45 = swift_getEnumCaseMultiPayload();
        uint64_t v46 = v215;
        if (v45 != 2) {
          goto LABEL_57;
        }
        uint64_t v216 = v39;
        uint64_t v47 = (uint64_t)v37;
        sub_100B6F9DC((uint64_t)v37, (uint64_t)v40, type metadata accessor for CRLUSDZRep.AssetLoadingState);

        unint64_t v48 = (int *)sub_1005057FC(&qword_101693918);
        Swift::String v49 = (char *)v40 + v48[12];
        long long v50 = *(id *)((char *)v40 + v48[16]);
        id v51 = (uint64_t *)((char *)v40 + v48[20]);
        uint64_t v52 = *v51;
        unint64_t v53 = v51[1];
        uint64_t v54 = v51[2];
        uint64_t v55 = v51[3];
        uint64_t v57 = v51[4];
        unint64_t v56 = v51[5];
        if (object_getClass(v50) == (Class)_TtCOO8Freeform15CRLUSDRendering6CoreRE10RepBackend
          && v50
          && !(v56 >> 62))
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v56)
          {
            uint64_t v156 = (void *)v50[4];
            if (v156)
            {
              uint64_t v46 = v215;
              uint64_t v157 = &v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
              uint64_t v158 = *(void **)&v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
              char v159 = v215[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
              swift_unknownObjectRetain();
              id v160 = v156;
              sub_100B6BEC8(v158, v159);
              uint64_t v161 = (void *)sub_100B6FB78((uint64_t)v50, v160, (uint64_t)v158, v159);
              unsigned __int8 v163 = v162;
              sub_100B6BEFC(v158, v159);
              swift_unknownObjectRelease();
              unint64_t v164 = *(void **)v157;
              *(void *)uint64_t v157 = v161;
              unsigned __int8 v165 = v157[8];
              v157[8] = v163;
              sub_100B6BEC8(v161, v163);
              sub_100B6BEFC(v164, v165);
              sub_100B52D24();
              sub_100B6BEFC(v161, v163);

              swift_unknownObjectRelease_n();
              uint64_t v166 = type metadata accessor for URL();
              (*(void (**)(char *, uint64_t))(*(void *)(v166 - 8) + 8))(v49, v166);
              sub_100B6DB90(v47, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              uint64_t v70 = type metadata accessor for CRLUSDZRep.PosterLoadingState;
              uint64_t v71 = v216;
              goto LABEL_62;
            }
            sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateRenderingStateIfNeeded()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 787, (uint64_t)"USD renderer configuration mismatch - expected to find metal layer.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
            sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateRenderingStateIfNeeded()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 787);
            swift_unknownObjectRelease_n();
            uint64_t v199 = type metadata accessor for URL();
            (*(void (**)(char *, uint64_t))(*(void *)(v199 - 8) + 8))(v49, v199);
            sub_100B6DB90(v47, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            sub_100B6DB90(v216, type metadata accessor for CRLUSDZRep.PosterLoadingState);
            uint64_t v46 = v215;
LABEL_63:
            if (v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive] == 1) {
              [v46 invalidateKnobs];
            }
            return;
          }
          swift_unknownObjectRelease_n();
        }
        else
        {
          sub_100767658(v52, v53, v54, v55, v57, v56);
          swift_unknownObjectRelease();
        }
        uint64_t v125 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t))(*(void *)(v125 - 8) + 8))(v49, v125);
        uint64_t v46 = v215;
        uint64_t v39 = v216;
        double v37 = (id *)v47;
LABEL_57:
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          unint64_t v170 = *(void **)(v39 + 8);

          id v171 = v170;
          char v172 = sub_100B53810();
          uint64_t v173 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          uint64_t v174 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          *(void *)uint64_t v173 = v171;
          unsigned __int8 v175 = v173[8];
          v173[8] = v172 & 1 | 0x80;
          id v176 = v171;
          sub_100B6BEFC(v174, v175);
          sub_100B52D24();

LABEL_59:
          uint64_t v70 = type metadata accessor for CRLUSDZRep.AssetLoadingState;
          uint64_t v71 = (uint64_t)v37;
        }
        else
        {
          id v177 = sub_100B5E4DC(v46);
          unsigned __int8 v179 = v178;
          uint64_t v180 = &v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          unint64_t v181 = *(void **)&v46[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
          *(void *)uint64_t v180 = v177;
          uint64_t v106 = v39;
          unsigned __int8 v182 = v180[8];
          v180[8] = v178;
          sub_100B6BEC8(v177, v178);
          sub_100B6BEFC(v181, v182);
          sub_100B52D24();
          sub_100B6BEFC(v177, v179);
          sub_100B6DB90((uint64_t)v37, type metadata accessor for CRLUSDZRep.AssetLoadingState);
LABEL_61:
          uint64_t v70 = type metadata accessor for CRLUSDZRep.PosterLoadingState;
          uint64_t v71 = v106;
        }
        goto LABEL_62;
    }
  }
}

void sub_100B5681C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v150 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v11);
  char v159 = (char *)v150 - v12;
  __chkstk_darwin(v13, v14);
  unint64_t v157 = (unint64_t)v150 - v15;
  uint64_t v16 = (objc_class *)type metadata accessor for UUID();
  unsigned __int8 v163 = (char *)*((void *)v16 - 1);
  Class v164 = v16;
  uint64_t v17 = *((void *)v163 + 8);
  __chkstk_darwin(v16, v18);
  uint64_t v19 = (char *)v150 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v21);
  uint64_t v156 = (char *)v150 - v22;
  __chkstk_darwin(v23, v24);
  unsigned __int8 v162 = (char *)v150 - v25;
  uint64_t v26 = (void *)type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v26, v27);
  double v29 = (void *)((char *)v150 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v30, v31);
  id v155 = (void *)((char *)v150 - v32);
  __chkstk_darwin(v33, v34);
  Class v158 = (Class)((char *)v150 - v35);
  __chkstk_darwin(v36, v37);
  uint64_t v39 = (char *)v150 - v38;
  uint64_t v40 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
  swift_beginAccess();
  uint64_t v161 = v40;
  sub_100B6F9DC(v40, (uint64_t)v39, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  id v160 = v26;
  LODWORD(v40) = swift_getEnumCaseMultiPayload();
  sub_100B6DB90((uint64_t)v39, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  if (v40 == 3)
  {
    id v41 = [v1 info];
    type metadata accessor for CRLUSDZItem();
    id v154 = v41;
    uint64_t v42 = (void *)swift_dynamicCastClassUnconditional();
    uint64_t v43 = (char *)sub_10072E910();
    unint64_t v153 = v1;
    if (v43)
    {
      uint64_t v152 = (uint64_t)v42;
      char v159 = v43;
      uint64_t v44 = &v43[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      uint64_t v45 = *(void *)&v43[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v46 = *(void *)&v43[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v43[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v45);
      uint64_t v47 = v162;
      (*(void (**)(uint64_t, uint64_t))(v46 + 24))(v45, v46);
      uint64_t v48 = *((void *)v44 + 3);
      uint64_t v49 = *((void *)v44 + 4);
      sub_10050F848(v44, v48);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v49 + 64))(v48, v49))
      {
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        long long v50 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        id v155 = (uint64_t *)sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v52 = v50;
        uint64_t v53 = UUID.uuidString.getter();
        uint64_t v55 = v54;
        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v157 = sub_100528BE4();
        *(void *)(inited + 64) = v157;
        *(void *)(inited + 32) = v53;
        *(void *)(inited + 40) = v55;
        uint64_t v56 = static os_log_type_t.default.getter();
        sub_100BAC898((uint64_t)v52, (uint64_t)&_mh_execute_header, v56, (uint64_t)"USDZ poster asset needs download. Adding download observer to assetUUID %{public}@", 82, 2, inited);
        swift_setDeallocating();
        uint64_t v152 = sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v57 = v156;
        UUID.init()();
        uint64_t v58 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v59 = v163;
        Swift::String v60 = (void (*)(char *, char *, Class))*((void *)v163 + 2);
        v150[1] = v163 + 16;
        uint64_t v151 = v60;
        Class v61 = v164;
        ((void (*)(char *, char *))v60)(v19, v57);
        unint64_t v62 = (v59[80] + 24) & ~(unint64_t)v59[80];
        uint64_t v63 = swift_allocObject();
        *(void *)(v63 + 16) = v58;
        (*((void (**)(unint64_t, char *, Class))v59 + 4))(v63 + v62, v19, v61);
        uint64_t v64 = *((void *)v44 + 3);
        uint64_t v65 = *((void *)v44 + 4);
        sub_10050F848(v44, v64);
        Swift::String v66 = *(void (**)(char *, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v65 + 72);
        swift_retain();
        v66(v57, 6, sub_100B70F34, v63, v64, v65);
        swift_release();
        swift_release();
        uint64_t v67 = sub_1005057FC(&qword_101693908);
        Class v69 = v158;
        id v68 = v159;
        uint64_t v70 = (char *)v158 + *(int *)(v67 + 48);
        *(void *)Class v158 = v159;
        v151(v70, v57, v164);
        swift_storeEnumTagMultiPayload();
        uint64_t v71 = v161;
        swift_beginAccess();
        id v160 = v68;
        sub_100B70DFC((uint64_t)v69, v71, type metadata accessor for CRLUSDZRep.PosterLoadingState);
        swift_endAccess();
        sub_100B52AC4();
        sub_100B6DB90((uint64_t)v69, type metadata accessor for CRLUSDZRep.PosterLoadingState);
        if (qword_10166FBD8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        int v72 = (void *)static OS_os_log.assetManagement;
        uint64_t v73 = swift_initStackObject();
        *(_OWORD *)(v73 + 16) = xmmword_10117D8C0;
        id v74 = v72;
        id v75 = v162;
        uint64_t v76 = UUID.uuidString.getter();
        unint64_t v77 = v157;
        *(void *)(v73 + 56) = &type metadata for String;
        *(void *)(v73 + 64) = v77;
        *(void *)(v73 + 32) = v76;
        *(void *)(v73 + 40) = v78;
        uint64_t v79 = UUID.uuidString.getter();
        *(void *)(v73 + 96) = &type metadata for String;
        *(void *)(v73 + 104) = v77;
        *(void *)(v73 + 72) = v79;
        *(void *)(v73 + 80) = v80;
        uint64_t v81 = static os_log_type_t.info.getter();
        sub_100BAC898((uint64_t)v74, (uint64_t)&_mh_execute_header, v81, (uint64_t)"Triggering poster asset download for asset UUID %{public}@, observerID %{public}@", 81, 2, v73);
        swift_setDeallocating();
        swift_arrayDestroy();

        uint64_t v82 = *((void *)v44 + 3);
        uint64_t v83 = *((void *)v44 + 4);
        sub_10050F848(v44, v82);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v83 + 64))(v82, v83))
        {
          uint64_t v84 = *((void *)v44 + 3);
          uint64_t v85 = *((void *)v44 + 4);
          sub_10050F848(v44, v84);
          (*(void (**)(uint64_t, uint64_t))(v85 + 88))(v84, v85);
        }
        swift_unknownObjectRelease();

        Class v86 = v164;
        uint64_t v87 = (void (*)(char *, Class))*((void *)v163 + 1);
        v87(v57, v164);
        v87(v75, v86);
      }
      else
      {
        uint64_t v105 = *((void *)v44 + 3);
        uint64_t v106 = *((void *)v44 + 4);
        sub_10050F848(v44, v105);
        uint64_t v107 = (CGDataProvider *)(*(uint64_t (**)(uint64_t, uint64_t))(v106 + 40))(v105, v106);
        if (v107
          && (uint64_t v108 = v107, v109 = CGImageSourceCreateWithDataProvider(v107, 0), v108, v109)
          && (ImageAtIndedouble x = CGImageSourceCreateImageAtIndex(v109, 0, 0), v109, ImageAtIndex))
        {
          Class v112 = v158;
          id v111 = v159;
          *(void *)Class v158 = v159;
          *((void *)v112 + 1) = ImageAtIndex;
          swift_storeEnumTagMultiPayload();
          uint64_t v113 = v161;
          swift_beginAccess();
          id v114 = v111;
          int v115 = ImageAtIndex;
          sub_100B70DFC((uint64_t)v112, v113, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_endAccess();
          sub_100B52AC4();
          sub_100B6DB90((uint64_t)v112, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v116 = (void *)v152;
          swift_beginAccess();
          swift_retain();
          sub_1005057FC((uint64_t *)&unk_10167D2A0);
          CRRegister.wrappedValue.getter();
          swift_endAccess();
          swift_release();
          uint64_t v117 = v157;
          sub_100B6F9DC((uint64_t)v5, v157, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          sub_100B6DB90((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
          uint64_t v118 = (char *)[v116 store];
          uint64_t v119 = *(void *)&v118[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
          os_unfair_lock_lock(*(os_unfair_lock_t *)(v119 + 16));
          uint64_t v120 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
          unsigned __int8 v121 = *(void **)&v118[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
          if (v121)
          {
            id v122 = *(id *)&v118[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
          }
          else
          {
            Class v158 = (Class)type metadata accessor for CRLAssetManager();
            unint64_t v136 = (char *)objc_allocWithZone(v158);
            swift_unknownObjectWeakInit();
            uint64_t v137 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
            type metadata accessor for CRLUnfairLock();
            uint64_t v138 = swift_allocObject();
            uint64_t v139 = v118;
            char v140 = v136;
            uint64_t v141 = (_DWORD *)swift_slowAlloc();
            *uint64_t v141 = 0;
            *(void *)(v138 + 16) = v141;
            atomic_thread_fence(memory_order_acq_rel);
            *(void *)&v136[v137] = v138;
            uint64_t v117 = v157;
            uint64_t v47 = v162;
            *(void *)&v140[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
            uint64_t v142 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
            *(void *)&v140[v142] = [self mapTableWithKeyOptions:517 valueOptions:0];
            *(void *)&v140[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
            swift_unknownObjectWeakAssign();

            v165.receiver = v140;
            v165.super_class = v158;
            id v143 = [super init];

            unsigned __int8 v144 = *(void **)&v118[v120];
            *(void *)&v118[v120] = v143;
            id v122 = v143;

            unsigned __int8 v121 = 0;
          }
          sub_1005057FC(&qword_101693A78);
          id v145 = v155;
          uint64_t v146 = *(os_unfair_lock_s **)(v119 + 16);
          id v147 = v121;
          os_unfair_lock_unlock(v146);

          uint64_t v148 = sub_100F453C8(v117, v152, v122);
          sub_100B6DB90(v117, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
          uint64_t *v145 = v148;
          type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v149 = v161;
          swift_beginAccess();
          sub_100B70DFC((uint64_t)v145, v149, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_endAccess();
          sub_100B52AC4();
          sub_100B6DB90((uint64_t)v145, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_unknownObjectRelease();
        }
        (*((void (**)(char *, Class))v163 + 1))(v47, v164);
      }
    }
    else
    {
      swift_beginAccess();
      swift_retain();
      sub_1005057FC((uint64_t *)&unk_10167D2A0);
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      uint64_t v99 = (uint64_t)v159;
      sub_100B6F9DC((uint64_t)v5, (uint64_t)v159, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100B6DB90((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
      unint64_t v100 = (char *)[v42 store];
      uint64_t v101 = *(void *)&v100[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v101 + 16));
      uint64_t v102 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      uint64_t v103 = *(void **)&v100[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v103)
      {
        id v104 = *(id *)&v100[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        Class v164 = (Class)type metadata accessor for CRLAssetManager();
        uint64_t v123 = (char *)objc_allocWithZone(v164);
        unsigned __int8 v163 = &v123[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit();
        uint64_t v124 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        type metadata accessor for CRLUnfairLock();
        uint64_t v125 = swift_allocObject();
        unsigned __int8 v162 = v100;
        uint64_t v126 = v123;
        uint64_t v127 = (_DWORD *)swift_slowAlloc();
        *uint64_t v127 = 0;
        *(void *)(v125 + 16) = v127;
        atomic_thread_fence(memory_order_acq_rel);
        *(void *)&v123[v124] = v125;
        uint64_t v99 = (uint64_t)v159;
        *(void *)&v126[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        uint64_t v128 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(void *)&v126[v128] = [self mapTableWithKeyOptions:517 valueOptions:0];
        *(void *)&v126[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        uint64_t v129 = v162;
        swift_unknownObjectWeakAssign();

        v166.receiver = v126;
        v166.super_class = v164;
        [super init];

        uint64_t v131 = *(void **)&v100[v102];
        *(void *)&v100[v102] = v130;
        id v104 = v130;

        uint64_t v103 = 0;
      }
      sub_1005057FC(&qword_101693A78);
      unint64_t v132 = *(os_unfair_lock_s **)(v101 + 16);
      id v133 = v103;
      os_unfair_lock_unlock(v132);

      uint64_t v134 = sub_100F453C8(v99, v42, v104);
      sub_100B6DB90(v99, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      *double v29 = v134;
      type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v135 = v161;
      swift_beginAccess();
      sub_100B70DFC((uint64_t)v29, v135, type metadata accessor for CRLUSDZRep.PosterLoadingState);
      swift_endAccess();
      sub_100B52AC4();
      sub_100B6DB90((uint64_t)v29, type metadata accessor for CRLUSDZRep.PosterLoadingState);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v88 = v1;
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v89 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v90 = swift_initStackObject();
    *(_OWORD *)(v90 + 16) = xmmword_10117E810;
    id v91 = v89;
    id v92 = [v88 info];
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100B6F9DC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100B6DB90((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_unknownObjectRelease();
    uint64_t v94 = v163;
    Class v93 = v164;
    (*((void (**)(char *, char *, Class))v163 + 2))(v19, v9, v164);
    sub_100B6DB90((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v95 = UUID.uuidString.getter();
    uint64_t v97 = v96;
    (*((void (**)(char *, Class))v94 + 1))(v19, v93);
    *(void *)(v90 + 56) = &type metadata for String;
    *(void *)(v90 + 64) = sub_100528BE4();
    *(void *)(v90 + 32) = v95;
    *(void *)(v90 + 40) = v97;
    uint64_t v98 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v91, (uint64_t)&_mh_execute_header, v98, (uint64_t)"Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v90);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_100B57A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B57AFC, v8, v7);
}

uint64_t sub_100B57AFC()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (char *)v0[3];
  swift_release();
  sub_100B57B74(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100B57B74(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v99 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v100 = (uint64_t)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for UUID();
  uint64_t v106 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v10);
  uint64_t v103 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v94 - v14;
  uint64_t v16 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v16, v17);
  uint64_t v96 = (uint64_t *)((char *)&v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (void **)((char *)&v94 - v21);
  __chkstk_darwin(v23, v24);
  uint64_t v26 = (char *)&v94 - v25;
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v27 = (void *)static OS_os_log.assetManagement;
  uint64_t v101 = sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  *(void *)(inited + 56) = &type metadata for Int;
  *(void *)(inited + 64) = &protocol witness table for Int;
  *(void *)(inited + 32) = a1;
  id v29 = v27;
  uint64_t v97 = a1;
  id v30 = v29;
  uint64_t v31 = UUID.uuidString.getter();
  uint64_t v98 = a2;
  uint64_t v33 = v32;
  *(void *)(inited + 96) = &type metadata for String;
  unint64_t v102 = sub_100528BE4();
  *(void *)(inited + 104) = v102;
  *(void *)(inited + 72) = v31;
  *(void *)(inited + 80) = v33;
  uint64_t v34 = static os_log_type_t.info.getter();
  sub_100BAC898((uint64_t)v30, (uint64_t)&_mh_execute_header, v34, (uint64_t)"posterDownloadComplete with status %d, observerID %{public}@", 60, 2, inited);
  swift_setDeallocating();
  uint64_t v35 = sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v36 = v105;
  uint64_t v37 = (uint64_t)v105 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v37, (uint64_t)v26, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  sub_100B523F8(v22);
  sub_100B6DB90((uint64_t)v26, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  uint64_t v38 = v36;
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v40 = (char *)*v22;
    id v41 = (char *)v22 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
    uint64_t v42 = v106;
    uint64_t v39 = v104;
    (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v15, v41, v104);
    sub_100B70710((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v95 = *(void (**)(char *, uint64_t))(v42 + 8);
    v95(v15, v39);
    if ((v43 & 1) == 0)
    {

      goto LABEL_9;
    }
    uint64_t v44 = v40;
    uint64_t v45 = (char *)[v38 info];
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    uint64_t v46 = v97;
    if ((unint64_t)(v97 - 2) < 2)
    {
      uint64_t v47 = sub_1005057FC(&qword_101693A78);
      uint64_t v48 = (uint64_t)v96;
      uint64_t v49 = (char *)v96 + *(int *)(v47 + 48);
      *uint64_t v96 = (uint64_t)v44;
      (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v49, v98, v39);
      type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      long long v50 = v44;
      uint64_t v51 = v37;
      id v52 = v50;
      sub_100B70DFC(v48, v51, type metadata accessor for CRLUSDZRep.PosterLoadingState);
      swift_endAccess();
      sub_100B52AC4();
      sub_100B6DB90(v48, type metadata accessor for CRLUSDZRep.PosterLoadingState);

      swift_unknownObjectRelease();
      return;
    }
    if (!v97)
    {

      swift_unknownObjectRelease();
      return;
    }
    uint64_t v99 = v45;
    uint64_t v100 = v37;
    uint64_t v106 = v16;
    if (v97 != (char *)1)
    {
      type metadata accessor for CRLAssetDownloadObserverStatus(0);
      uint64_t v107 = v46;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      return;
    }
    Swift::String v66 = (char *)sub_10072E910();
    if (v66)
    {
      uint64_t v67 = v66;
      id v68 = &v66[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      uint64_t v69 = *((void *)v68 + 3);
      uint64_t v70 = *((void *)v68 + 4);
      sub_10050F848(v68, v69);
      uint64_t v71 = (CGDataProvider *)(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 40))(v69, v70);
      if (v71 && (int v72 = v71, v73 = CGImageSourceCreateWithDataProvider(v71, 0), v72, v73))
      {
        ImageAtIndedouble x = CGImageSourceCreateImageAtIndex(v73, 0, 0);

        if (ImageAtIndex)
        {
          uint64_t v75 = (uint64_t)v96;
          *uint64_t v96 = (uint64_t)v44;
          *(void *)(v75 + 8) = ImageAtIndex;
          swift_storeEnumTagMultiPayload();
          uint64_t v76 = v100;
          swift_beginAccess();
          unint64_t v77 = v44;
          uint64_t v78 = ImageAtIndex;
          sub_100B70DFC(v75, v76, type metadata accessor for CRLUSDZRep.PosterLoadingState);
          swift_endAccess();
          sub_100B52AC4();
          sub_100B6DB90(v75, type metadata accessor for CRLUSDZRep.PosterLoadingState);

LABEL_24:
          swift_unknownObjectRelease();
          return;
        }
      }
      else
      {
      }
    }
    uint64_t v98 = v35;
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v79 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    uint64_t v80 = swift_initStackObject();
    *(_OWORD *)(v80 + 16) = xmmword_10117E810;
    uint64_t v81 = *(void *)&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v82 = *(void *)&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    uint64_t v101 = (uint64_t)v44;
    sub_10050F848(&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v81);
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v82 + 24);
    uint64_t v97 = v79;
    uint64_t v84 = v103;
    v83(v81, v82);
    uint64_t v85 = UUID.uuidString.getter();
    uint64_t v87 = v86;
    v95(v84, v104);
    unint64_t v88 = v102;
    *(void *)(v80 + 56) = &type metadata for String;
    *(void *)(v80 + 64) = v88;
    *(void *)(v80 + 32) = v85;
    *(void *)(v80 + 40) = v87;
    uint64_t v89 = static os_log_type_t.default.getter();
    uint64_t v90 = v97;
    sub_100BAC898((uint64_t)v97, (uint64_t)&_mh_execute_header, v89, (uint64_t)"Asset downloaded but poster image missing for asset %{public}@", 62, 2, v80);
    swift_setDeallocating();
    swift_arrayDestroy();

    sub_1005057FC(&qword_101693A78);
    uint64_t v91 = (uint64_t)v96;
    id v92 = (void *)v101;
    *uint64_t v96 = v101;
    type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v93 = v100;
    swift_beginAccess();
    unint64_t v77 = v92;
    sub_100B70DFC(v91, v93, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    swift_endAccess();
    sub_100B52AC4();
    sub_100B6DB90(v91, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    goto LABEL_24;
  }
  sub_100B6DB90((uint64_t)v22, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  uint64_t v39 = v104;
LABEL_9:
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v53 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  uint64_t v54 = swift_initStackObject();
  *(_OWORD *)(v54 + 16) = xmmword_10117E810;
  id v55 = v53;
  id v56 = [v38 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  uint64_t v57 = (uint64_t)v99;
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  uint64_t v58 = v100;
  sub_100B6F9DC(v57, v100, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90(v57, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v59 = v106;
  Swift::String v60 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v103, v58, v39);
  sub_100B6DB90(v58, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v61 = UUID.uuidString.getter();
  uint64_t v63 = v62;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v39);
  unint64_t v64 = v102;
  *(void *)(v54 + 56) = &type metadata for String;
  *(void *)(v54 + 64) = v64;
  *(void *)(v54 + 32) = v61;
  *(void *)(v54 + 40) = v63;
  uint64_t v65 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v65, (uint64_t)"Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v54);
  swift_setDeallocating();
  swift_arrayDestroy();
}

void sub_100B58704()
{
  uint64_t v1 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v202 = (char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  unint64_t v206 = (void (*)(char *, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))((char *)&v184 - v6);
  uint64_t v207 = (void *)type metadata accessor for URL();
  id v209 = (id)*(v207 - 1);
  __chkstk_darwin(v207, v7);
  unint64_t v201 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v200 = (char *)&v184 - v11;
  __chkstk_darwin(v12, v13);
  id v204 = (char *)&v184 - v14;
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15, v18);
  __chkstk_darwin(v19, v20);
  uint64_t v210 = (char *)&v184 - v21;
  __chkstk_darwin(v22, v23);
  uint64_t v25 = (char *)&v184 - v24;
  uint64_t v26 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v26 - 8, v27);
  id v29 = (char *)&v184 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v203, v30);
  uint64_t v32 = (char *)&v184 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v208 = (char *)&v184 - v35;
  __chkstk_darwin(v36, v37);
  uint64_t v211 = (uint64_t)&v184 - v38;
  uint64_t v39 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v39, v40);
  __chkstk_darwin(v41, v42);
  __chkstk_darwin(v43, v44);
  __chkstk_darwin(v45, v46);
  id v52 = (char *)&v184 - v51;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy) != 4)
  {
    uint64_t v194 = v50;
    uint64_t v192 = v49;
    uint64_t v196 = v48;
    uint64_t v199 = (char *)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v205 = v25;
    uint64_t v53 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    uint64_t v54 = v47;
    swift_beginAccess();
    uint64_t v198 = v53;
    sub_100B6F9DC(v53, (uint64_t)v52, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t v197 = v54;
    LODWORD(v53) = swift_getEnumCaseMultiPayload();
    sub_100B6DB90((uint64_t)v52, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (v53 == 4)
    {
      uint64_t v191 = v15;
      uint64_t v193 = v16;
      id v195 = v0;
      id v55 = [v0 info];
      type metadata accessor for CRLUSDZItem();
      id v190 = v55;
      id v56 = (char *)swift_dynamicCastClassUnconditional();
      uint64_t v189 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
      swift_beginAccess();
      swift_retain();
      uint64_t v188 = sub_1005057FC((uint64_t *)&unk_10167D2A0);
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      sub_100B6F9DC((uint64_t)v29, v211, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100B6DB90((uint64_t)v29, type metadata accessor for CRLUSDZAssetDataStruct);
      uint64_t v57 = (char *)[v56 store];
      uint64_t v58 = *(void *)&v57[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
      os_unfair_lock_lock(*(os_unfair_lock_t *)(v58 + 16));
      uint64_t v59 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
      Swift::String v60 = *(void **)&v57[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      if (v60)
      {
        id v61 = *(id *)&v57[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
      }
      else
      {
        Class v187 = (Class)type metadata accessor for CRLAssetManager();
        int v72 = (char *)objc_allocWithZone(v187);
        uint64_t v186 = &v72[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
        swift_unknownObjectWeakInit();
        uint64_t v184 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
        type metadata accessor for CRLUnfairLock();
        uint64_t v73 = swift_allocObject();
        uint64_t v185 = v57;
        id v74 = v72;
        uint64_t v75 = (_DWORD *)swift_slowAlloc();
        *uint64_t v75 = 0;
        *(void *)(v73 + 16) = v75;
        atomic_thread_fence(memory_order_acq_rel);
        *(void *)&v72[v184] = v73;
        *(void *)&v74[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
        uint64_t v76 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
        *(void *)&v74[v76] = [self mapTableWithKeyOptions:517 valueOptions:0];
        *(void *)&v74[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
        unint64_t v77 = v185;
        swift_unknownObjectWeakAssign();

        v212.receiver = v74;
        v212.super_class = v187;
        id v78 = [super init];

        uint64_t v79 = *(void **)&v57[v59];
        *(void *)&v57[v59] = v78;
        id v61 = v78;

        Swift::String v60 = 0;
      }
      uint64_t v80 = *(os_unfair_lock_s **)(v58 + 16);
      id v81 = v60;
      os_unfair_lock_unlock(v80);

      uint64_t v82 = sub_100F453C8(v211, v56, v61);
      uint64_t v83 = (void *)(v82 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage);
      uint64_t v84 = *(void *)(v82 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
      uint64_t v85 = *(void *)(v82 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
      sub_10050F848((void *)(v82 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v84);
      (*(void (**)(uint64_t, uint64_t))(v85 + 24))(v84, v85);
      uint64_t v86 = v83[3];
      uint64_t v87 = v83[4];
      sub_10050F848(v83, v86);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v87 + 64))(v86, v87))
      {
        uint64_t v207 = v83;
        uint64_t v208 = (char *)v82;
        UUID.init()();
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v88 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117DF40;
        id v209 = v88;
        id v90 = [v195 debugDescription];
        uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v93 = v92;

        *(void *)(inited + 56) = &type metadata for String;
        unint64_t v94 = sub_100528BE4();
        *(void *)(inited + 64) = v94;
        *(void *)(inited + 32) = v91;
        *(void *)(inited + 40) = v93;
        uint64_t v95 = UUID.uuidString.getter();
        *(void *)(inited + 96) = &type metadata for String;
        *(void *)(inited + 104) = v94;
        *(void *)(inited + 72) = v95;
        *(void *)(inited + 80) = v96;
        uint64_t v97 = v210;
        uint64_t v98 = UUID.uuidString.getter();
        *(void *)(inited + 136) = &type metadata for String;
        *(void *)(inited + 144) = v94;
        *(void *)(inited + 112) = v98;
        *(void *)(inited + 120) = v99;
        uint64_t v100 = static os_log_type_t.debug.getter();
        id v101 = v209;
        sub_100BAC898((uint64_t)v209, (uint64_t)&_mh_execute_header, v100, (uint64_t)"(USDZRep) [%{public}@] USDZ asset needs download. Adding download observer to assetUUID %{public}@ observerUUID %{public}@", 122, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        uint64_t v102 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v103 = v193;
        id v209 = *(id *)(v193 + 16);
        uint64_t v104 = v199;
        uint64_t v105 = v191;
        ((void (*)(char *, char *, uint64_t))v209)(v199, v97, v191);
        unint64_t v106 = (*(unsigned __int8 *)(v103 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
        uint64_t v107 = swift_allocObject();
        *(void *)(v107 + 16) = v102;
        (*(void (**)(unint64_t, char *, uint64_t))(v103 + 32))(v107 + v106, v104, v105);
        uint64_t v108 = v207;
        uint64_t v109 = v207[3];
        uint64_t v110 = v207[4];
        sub_10050F848(v207, v109);
        unint64_t v206 = *(void (**)(char *, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v110 + 72);
        swift_retain();
        v206(v210, 6, sub_100B70CD8, v107, v109, v110);
        uint64_t v111 = v105;
        Class v112 = v210;
        swift_release();
        swift_release();
        uint64_t v113 = sub_1005057FC(&qword_101693908);
        uint64_t v114 = (uint64_t)v196;
        int v115 = (char *)v196 + *(int *)(v113 + 48);
        uint64_t v117 = v208;
        uint64_t v116 = (void (*)(char *, char *, uint64_t))v209;
        *uint64_t v196 = v208;
        v116(v115, v112, v111);
        swift_storeEnumTagMultiPayload();
        uint64_t v118 = v198;
        swift_beginAccess();
        id v119 = v117;
        sub_100B70DFC(v114, v118, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v120 = swift_endAccess();
        sub_100B53C64(v120);
        sub_100B6DB90(v114, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v121 = v108[3];
        uint64_t v122 = v108[4];
        sub_10050F848(v108, v121);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v122 + 64))(v121, v122))
        {
          uint64_t v123 = v108[3];
          uint64_t v124 = v108[4];
          sub_10050F848(v108, v123);
          (*(void (**)(uint64_t, uint64_t))(v124 + 88))(v123, v124);
        }

        swift_unknownObjectRelease();
        uint64_t v125 = *(void (**)(char *, uint64_t))(v193 + 8);
        v125(v112, v111);
        v125(v205, v111);
        goto LABEL_34;
      }
      uint64_t v126 = (char *)v82;
      swift_beginAccess();
      swift_retain();
      CRRegister.wrappedValue.getter();
      swift_endAccess();
      swift_release();
      sub_100B6F9DC((uint64_t)v29, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100B6DB90((uint64_t)v29, type metadata accessor for CRLUSDZAssetDataStruct);
      uint64_t v127 = *(char **)&v56[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store];
      uint64_t v128 = *(void *)&v127[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
      uint64_t v129 = *(os_unfair_lock_s **)(v128 + 16);
      id v130 = v127;
      os_unfair_lock_lock(v129);
      uint64_t v131 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
      unint64_t v132 = *(void **)&v130[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      if (v132)
      {
        id v133 = *(id *)&v130[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
      }
      else
      {
        id v134 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
        uint64_t v135 = v130;
        id v136 = sub_100EAFDE4((uint64_t)v135);

        uint64_t v137 = *(void **)&v130[v131];
        *(void *)&v130[v131] = v136;
        id v133 = v136;

        unint64_t v132 = 0;
      }
      uint64_t v138 = v207;
      uint64_t v139 = *(os_unfair_lock_s **)(v128 + 16);
      id v140 = v132;
      os_unfair_lock_unlock(v139);
      uint64_t v141 = (char *)v206;
      uint64_t v142 = (uint64_t)v208;
      sub_100EA7CA0((uint64_t)v208, 0, 3, 0, 0, (char *)v206);

      sub_100B6DB90(v142, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      id v143 = (void (**)(char *, char *, void *))v209;
      unsigned __int8 v144 = (unsigned int (*)(uint64_t, uint64_t, void *))*((void *)v209 + 6);
      if (v144((uint64_t)v141, 1, v138) == 1)
      {
        uint64_t v207 = v83;
        uint64_t v208 = v126;
        sub_100522F00((uint64_t)v141, &qword_101672E90);
        id v145 = [self mainBundle];
        swift_bridgeObjectRetain();
        NSString v146 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v147 = [v145 URLForResource:v146 withExtension:0];

        if (v147)
        {
          uint64_t v148 = v201;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v149 = (void (**)(uint64_t, void, uint64_t, void *))v209;
          uint64_t v150 = (void (*)(char *, char *, void *))*((void *)v209 + 4);
          uint64_t v151 = (uint64_t)v202;
          v150(v202, v148, v138);
          v149[7](v151, 0, 1, v138);
          if (v144(v151, 1, v138) != 1)
          {
            uint64_t v152 = v200;
            v150(v200, (char *)v151, v138);
            unint64_t v153 = v208;
            *uint64_t v192 = v208;
            id v154 = v153;
            if (byte_101670308 == 1) {
              char v155 = sub_100B67994();
            }
            else {
              char v155 = 1;
            }
            uint64_t v156 = v205;
            uint64_t v157 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
            uint64_t v158 = (uint64_t)v192;
LABEL_33:
            *(unsigned char *)(v158 + 8) = v155 & 1;
            unint64_t v181 = (void (**)(void, void *))v209;
            (*((void (**)(uint64_t, char *, void *))v209 + 2))(v158 + v157, v152, v138);
            swift_storeEnumTagMultiPayload();
            uint64_t v182 = v198;
            swift_beginAccess();
            sub_100B70DFC(v158, v182, type metadata accessor for CRLUSDZRep.AssetLoadingState);
            uint64_t v183 = swift_endAccess();
            sub_100B53C64(v183);
            sub_100B6DB90(v158, type metadata accessor for CRLUSDZRep.AssetLoadingState);

            swift_unknownObjectRelease();
            ((void (**)(char *, void *))v181)[1](v152, v138);
            (*(void (**)(char *, uint64_t))(v193 + 8))(v156, v191);
LABEL_34:
            sub_100B6DB90(v211, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
            return;
          }
        }
        else
        {
          uint64_t v151 = (uint64_t)v202;
          (*((void (**)(char *, uint64_t, uint64_t, void *))v209 + 7))(v202, 1, 1, v138);
        }
        sub_100522F00(v151, &qword_101672E90);
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        char v159 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v160 = swift_initStackObject();
        *(_OWORD *)(v160 + 16) = xmmword_10117D8C0;
        id v161 = v159;
        id v162 = [v195 debugDescription];
        uint64_t v163 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v165 = v164;

        *(void *)(v160 + 56) = &type metadata for String;
        unint64_t v166 = sub_100528BE4();
        *(void *)(v160 + 64) = v166;
        *(void *)(v160 + 32) = v163;
        *(void *)(v160 + 40) = v165;
        uint64_t v167 = v207[3];
        uint64_t v168 = v207[4];
        sub_10050F848(v207, v167);
        uint64_t v169 = v199;
        (*(void (**)(uint64_t, uint64_t))(v168 + 24))(v167, v168);
        uint64_t v170 = UUID.uuidString.getter();
        uint64_t v172 = v171;
        uint64_t v210 = *(char **)(v193 + 8);
        uint64_t v173 = v169;
        uint64_t v174 = v191;
        ((void (*)(char *, uint64_t))v210)(v173, v191);
        *(void *)(v160 + 96) = &type metadata for String;
        *(void *)(v160 + 104) = v166;
        *(void *)(v160 + 72) = v170;
        *(void *)(v160 + 80) = v172;
        uint64_t v175 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v161, (uint64_t)&_mh_execute_header, v175, (uint64_t)"(USDZRep) [%{public}@] Asset downloaded but URL missing for asset %{public}@", 76, 2, v160);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        sub_1005057FC(&qword_101693920);
        uint64_t v176 = (uint64_t)v196;
        id v177 = v208;
        *uint64_t v196 = v208;
        type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v178 = v198;
        swift_beginAccess();
        id v179 = v177;
        sub_100B70DFC(v176, v178, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v180 = swift_endAccess();
        sub_100B53C64(v180);
        sub_100B6DB90(v176, type metadata accessor for CRLUSDZRep.AssetLoadingState);

        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v210)(v205, v174);
        goto LABEL_34;
      }
      uint64_t v152 = v204;
      v143[4](v204, v141, v138);
      *uint64_t v194 = v126;
      id v154 = v126;
      if (byte_101670308 == 1) {
        char v155 = sub_100B67994();
      }
      else {
        char v155 = 1;
      }
      uint64_t v156 = v205;
      uint64_t v157 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
      uint64_t v158 = (uint64_t)v194;
      goto LABEL_33;
    }
    uint64_t v62 = v0;
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v63 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t v64 = swift_initStackObject();
    *(_OWORD *)(v64 + 16) = xmmword_10117E810;
    id v65 = v63;
    id v66 = [v62 info];
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100B6F9DC((uint64_t)v29, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100B6DB90((uint64_t)v29, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_unknownObjectRelease();
    uint64_t v67 = v199;
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v199, v32, v15);
    sub_100B6DB90((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v68 = UUID.uuidString.getter();
    uint64_t v70 = v69;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v67, v15);
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_100528BE4();
    *(void *)(v64 + 32) = v68;
    *(void *)(v64 + 40) = v70;
    uint64_t v71 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v65, (uint64_t)&_mh_execute_header, v71, (uint64_t)"Unexpected USDZ asset loading state for asset %{public}@", 56, 2, v64);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

uint64_t sub_100B59C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8, v11);
  uint64_t v12 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (void *)result;
    uint64_t v18 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v15, 1, 1, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
    type metadata accessor for MainActor();
    id v19 = v17;
    uint64_t v20 = static MainActor.shared.getter();
    uint64_t v21 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v24 = a5;
    uint64_t v22 = (v21 + 48) & ~v21;
    uint64_t v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = v20;
    *((void *)v23 + 3) = &protocol witness table for MainActor;
    *((void *)v23 + 4) = v19;
    *((void *)v23 + 5) = a1;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v22], (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
    sub_1005912D0((uint64_t)v15, v24, (uint64_t)v23);

    return swift_release();
  }
  return result;
}

uint64_t sub_100B59E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B59F10, v8, v7);
}

uint64_t sub_100B59F10()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[3];
  swift_release();
  sub_100B59F88(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100B59F88(uint64_t a1, uint64_t a2)
{
  uint64_t v154 = a2;
  uint64_t v152 = a1;
  uint64_t v3 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v156 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v155 = (uint64_t)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v151 = (uint64_t)&v141 - v11;
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  id v147 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v149 = *(void *)(v15 - 8);
  uint64_t v150 = v15;
  __chkstk_darwin(v15, v16);
  uint64_t v148 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  char v159 = *(void (***)(char *, char *, uint64_t))(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v157 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  unint64_t v153 = (char *)&v141 - v23;
  uint64_t v24 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (void (***)(char *, char *, uint64_t))((char *)&v141 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (void (***)(char *, char *, uint64_t))((char *)&v141 - v30);
  __chkstk_darwin(v32, v33);
  uint64_t v35 = (char **)((char *)&v141 - v34);
  __chkstk_darwin(v36, v37);
  uint64_t v39 = (char *)&v141 - v38;
  id v40 = v2;
  uint64_t v41 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v41, (uint64_t)v39, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_100B525E4(v35);
  sub_100B6DB90((uint64_t)v39, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v158 = v18;
  if (EnumCaseMultiPayload)
  {
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))v159;
    sub_100B6DB90((uint64_t)v35, type metadata accessor for CRLUSDZRep.AssetLoadingState);
LABEL_7:
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v59 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v61 = v59;
    id v62 = [v40 debugDescription];
    uint64_t v63 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v65 = v64;

    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v66 = sub_100528BE4();
    *(void *)(inited + 64) = v66;
    *(void *)(inited + 32) = v63;
    *(void *)(inited + 40) = v65;
    id v67 = [v40 info];
    type metadata accessor for CRLUSDZItem();
    swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    uint64_t v68 = (uint64_t)v156;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    uint64_t v69 = v155;
    sub_100B6F9DC(v68, v155, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100B6DB90(v68, type metadata accessor for CRLUSDZAssetDataStruct);
    swift_unknownObjectRelease();
    uint64_t v71 = v157;
    uint64_t v70 = v158;
    v43[2](v157, v69, v158);
    sub_100B6DB90(v69, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v72 = UUID.uuidString.getter();
    uint64_t v74 = v73;
    ((void (*)(char *, uint64_t))v43[1])(v71, v70);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v66;
    *(void *)(inited + 72) = v72;
    *(void *)(inited + 80) = v74;
    uint64_t v75 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v61, (uint64_t)&_mh_execute_header, v75, (uint64_t)"(USDZRep) [%{public}@] Unexpected USDZ asset loading state for asset %{public}@", 79, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    return;
  }
  uint64_t v142 = v31;
  id v143 = v27;
  uint64_t v144 = v24;
  uint64_t v145 = v41;
  id v146 = v2;
  uint64_t v44 = *v35;
  uint64_t v45 = (char *)v35 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
  uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))v159;
  uint64_t v47 = v153;
  v159[4](v153, v45, v18);
  sub_100B70710((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v48 = v154;
  char v49 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v43 = v46;
  long long v50 = v46[1];
  ((void (*)(char *, uint64_t))v50)(v47, v18);
  if ((v49 & 1) == 0)
  {

    id v40 = v146;
    goto LABEL_7;
  }
  id v51 = [v146 info];
  type metadata accessor for CRLUSDZItem();
  uint64_t v52 = swift_dynamicCastClassUnconditional();
  uint64_t v53 = v152;
  if ((unint64_t)(v152 - 2) < 2)
  {
    uint64_t v54 = sub_1005057FC(&qword_101693920);
    uint64_t v55 = (uint64_t)v143;
    id v56 = (char *)v143 + *(int *)(v54 + 48);
    *id v143 = (void (**)(char *, char *, uint64_t))v44;
    v43[2](v56, v48, v158);
    type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = v145;
    swift_beginAccess();
    uint64_t v58 = v44;
    sub_100B70DFC(v55, v57, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess();
    sub_100B53C64();
    sub_100B6DB90(v55, type metadata accessor for CRLUSDZRep.AssetLoadingState);

LABEL_12:
    swift_unknownObjectRelease();
    return;
  }
  if (!v152)
  {

    goto LABEL_12;
  }
  unint64_t v153 = (char *)v50;
  char v159 = (void (**)(char *, char *, uint64_t))v44;
  if (v152 == 1)
  {
    uint64_t v76 = v52;
    uint64_t v77 = (uint64_t)v51;
    swift_beginAccess();
    swift_retain();
    sub_1005057FC((uint64_t *)&unk_10167D2A0);
    uint64_t v78 = (uint64_t)v156;
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    sub_100B6F9DC(v78, v151, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    sub_100B6DB90(v78, type metadata accessor for CRLUSDZAssetDataStruct);
    uint64_t v79 = *(char **)(v76 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store);
    uint64_t v80 = *(void *)&v79[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
    id v81 = *(os_unfair_lock_s **)(v80 + 16);
    uint64_t v82 = v79;
    os_unfair_lock_lock(v81);
    uint64_t v83 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
    uint64_t v84 = *(void **)&v82[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    uint64_t v85 = v149;
    if (v84)
    {
      id v86 = *(id *)&v82[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
    }
    else
    {
      id v87 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
      unint64_t v88 = v82;
      id v89 = sub_100EAFDE4((uint64_t)v88);

      id v90 = *(void **)&v82[v83];
      *(void *)&v82[v83] = v89;
      id v86 = v89;

      uint64_t v84 = 0;
    }
    uint64_t v91 = *(os_unfair_lock_s **)(v80 + 16);
    id v92 = v84;
    os_unfair_lock_unlock(v91);
    uint64_t v93 = v147;
    uint64_t v94 = v151;
    sub_100EA7CA0(v151, 0, 3, 0, 0, v147);

    sub_100B6DB90(v94, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    uint64_t v95 = v150;
    int v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v85 + 48))(v93, 1, v150);
    uint64_t v155 = v77;
    if (v96 == 1)
    {
      sub_100522F00((uint64_t)v93, &qword_101672E90);
      if (qword_10166FB00 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v97 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v98 = swift_initStackObject();
      *(_OWORD *)(v98 + 16) = xmmword_10117D8C0;
      uint64_t v156 = v97;
      id v99 = [v146 debugDescription];
      uint64_t v100 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v102 = v101;

      *(void *)(v98 + 56) = &type metadata for String;
      unint64_t v103 = sub_100528BE4();
      *(void *)(v98 + 64) = v103;
      *(void *)(v98 + 32) = v100;
      *(void *)(v98 + 40) = v102;
      uint64_t v104 = v159;
      uint64_t v105 = *(uint64_t *)((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
      uint64_t v106 = *(uint64_t *)((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
      sub_10050F848((void (**)(char *, char *, uint64_t))((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v105);
      uint64_t v107 = v157;
      (*(void (**)(uint64_t, uint64_t))(v106 + 24))(v105, v106);
      uint64_t v108 = UUID.uuidString.getter();
      uint64_t v110 = v109;
      ((void (*)(char *, uint64_t))v153)(v107, v158);
      *(void *)(v98 + 96) = &type metadata for String;
      *(void *)(v98 + 104) = v103;
      *(void *)(v98 + 72) = v108;
      *(void *)(v98 + 80) = v110;
      uint64_t v111 = static os_log_type_t.debug.getter();
      id v112 = v156;
      sub_100BAC898((uint64_t)v156, (uint64_t)&_mh_execute_header, v111, (uint64_t)"(USDZRep) [%{public}@] Asset downloaded but URL missing for asset %{public}@", 76, 2, v98);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      sub_1005057FC(&qword_101693920);
      uint64_t v113 = (uint64_t)v143;
      *id v143 = v104;
      type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v114 = v145;
      swift_beginAccess();
      int v115 = v104;
      sub_100B70DFC(v113, v114, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess();
      sub_100B53C64();
      sub_100B6DB90(v113, type metadata accessor for CRLUSDZRep.AssetLoadingState);

      swift_unknownObjectRelease();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v148, v93, v95);
      if (qword_10166FB00 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v116 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v117 = swift_initStackObject();
      *(_OWORD *)(v117 + 16) = xmmword_10117DF40;
      uint64_t v156 = v116;
      id v118 = [v146 debugDescription];
      uint64_t v119 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v121 = v120;

      *(void *)(v117 + 56) = &type metadata for String;
      unint64_t v122 = sub_100528BE4();
      *(void *)(v117 + 64) = v122;
      *(void *)(v117 + 32) = v119;
      *(void *)(v117 + 40) = v121;
      uint64_t v123 = v159;
      uint64_t v124 = *(uint64_t *)((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24);
      uint64_t v125 = *(uint64_t *)((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32);
      sub_10050F848((void (**)(char *, char *, uint64_t))((char *)v159 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage), v124);
      uint64_t v126 = v157;
      (*(void (**)(uint64_t, uint64_t))(v125 + 24))(v124, v125);
      uint64_t v127 = UUID.uuidString.getter();
      uint64_t v129 = v128;
      ((void (*)(char *, uint64_t))v153)(v126, v158);
      *(void *)(v117 + 96) = &type metadata for String;
      *(void *)(v117 + 104) = v122;
      *(void *)(v117 + 72) = v127;
      *(void *)(v117 + 80) = v129;
      uint64_t v130 = UUID.uuidString.getter();
      *(void *)(v117 + 136) = &type metadata for String;
      *(void *)(v117 + 144) = v122;
      *(void *)(v117 + 112) = v130;
      *(void *)(v117 + 120) = v131;
      uint64_t v132 = static os_log_type_t.debug.getter();
      id v133 = v156;
      sub_100BAC898((uint64_t)v156, (uint64_t)&_mh_execute_header, v132, (uint64_t)"(USDZRep) [%{public}@] USDZ asset downloaded %@, observerUUID %@", 64, 2, v117);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v134 = (uint64_t)v142;
      *uint64_t v142 = v123;
      char v159 = v123;
      if (byte_101670308 == 1) {
        char v135 = sub_100B67994();
      }
      else {
        char v135 = 1;
      }
      uint64_t v136 = v145;
      uint64_t v137 = v148;
      uint64_t v138 = v134 + *(int *)(sub_1005057FC(&qword_101693910) + 64);
      *(unsigned char *)(v134 + 8) = v135 & 1;
      uint64_t v140 = v149;
      uint64_t v139 = v150;
      (*(void (**)(uint64_t, char *, uint64_t))(v149 + 16))(v138, v137, v150);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      sub_100B70DFC(v134, v136, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess();
      sub_100B53C64();
      sub_100B6DB90(v134, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v140 + 8))(v137, v139);
    }
  }
  else
  {
    type metadata accessor for CRLAssetDownloadObserverStatus(0);
    uint64_t v160 = v53;
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
}

void sub_100B5AF84()
{
  uint64_t v1 = v0;
  uint64_t v71 = type metadata accessor for UUID();
  uint64_t v70 = *(void (***)(char *, char *, uint64_t))(v71 - 8);
  __chkstk_darwin(v71, v2);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (void (**)(char *, char *, uint64_t))((char *)&v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v1;
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] == 2)
  {
    uint64_t v26 = &v72[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess();
    sub_100B6F9DC((uint64_t)v26, (uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t v69 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = v16;
      uint64_t v27 = v25;
      uint64_t v28 = v21;
      uint64_t v29 = *(void **)v20;
      char v30 = v20[8];
      uint64_t v31 = &v20[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
      if (v30)
      {
        unint64_t v66 = v29;
        uint64_t v71 = (uint64_t)v26;
        uint64_t v32 = *(void (**)(void, char *, uint64_t))(v22 + 32);
        uint64_t v70 = v27;
        uint64_t v67 = v28;
        v32(v27, v31, v28);
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v33 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v35 = v33;
        id v36 = v72;
        id v37 = [v72 debugDescription];
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v39;

        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v38;
        *(void *)(inited + 40) = v40;
        uint64_t v41 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v35, (uint64_t)&_mh_execute_header, v41, (uint64_t)"(USDZRep) [%{public}@] loadInProcessRenderer()", 46, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        _s13ARViewBackendCMa(0);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 24) = 0;
        swift_unknownObjectWeakInit();
        id v43 = v36;
        UUID.init()();
        *(void *)(v42 + 24) = &off_101525938;
        swift_unknownObjectWeakAssign();

        *(void *)(v42 + 32) = 0;
        *(void *)(v42 + 48) = 0;
        *(void *)(v42 + 56) = 0;
        *(void *)(v42 + 64) = 0;
        *(void *)(v42 + 72) = 0xC000000000000000;
        *(_OWORD *)(v42 + 80) = 0u;
        *(_OWORD *)(v42 + 96) = 0u;
        *(_OWORD *)(v42 + 112) = 0u;
        *(void *)(v42 + 128) = 0;
        uint64_t v44 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v45 = (uint64_t)v68;
        uint64_t v46 = (char *)v68 + v44[12];
        uint64_t v47 = (void *)((char *)v68 + v44[16]);
        uint64_t v48 = (char *)v68 + v44[20];
        char v49 = v66;
        *uint64_t v68 = v66;
        long long v50 = v70;
        uint64_t v51 = v67;
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v46, (char *)v70, v67);
        *uint64_t v47 = v42;
        v47[1] = (uint64_t)&off_1015361D0;
        *(_OWORD *)uint64_t v48 = 0u;
        *((_OWORD *)v48 + 1) = 0u;
        *((void *)v48 + 4) = 0;
        *(_OWORD *)(v48 + 40) = xmmword_10118D180;
        swift_storeEnumTagMultiPayload();
        uint64_t v52 = v71;
        swift_beginAccess();
        id v53 = v49;
        swift_retain();
        sub_100B70DFC(v45, v52, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v54 = swift_endAccess();
        sub_100B53C64(v54);
        sub_100B6DB90(v45, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release();

        (*(void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v22 + 8))(v50, v51);
        return;
      }

      (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v28);
    }
    else
    {
      sub_100B6DB90((uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v55 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v56 = swift_initStackObject();
  *(_OWORD *)(v56 + 16) = xmmword_10117E810;
  id v57 = v55;
  id v58 = [v72 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v59 = v70;
  uint64_t v60 = v71;
  v70[2](v4, v12, v71);
  sub_100B6DB90((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v61 = UUID.uuidString.getter();
  uint64_t v63 = v62;
  ((void (*)(char *, uint64_t))v59[1])(v4, v60);
  *(void *)(v56 + 56) = &type metadata for String;
  *(void *)(v56 + 64) = sub_100528BE4();
  *(void *)(v56 + 32) = v61;
  *(void *)(v56 + 40) = v63;
  uint64_t v64 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v57, (uint64_t)&_mh_execute_header, v64, (uint64_t)"Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v56);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100B5B848()
{
  uint64_t v70 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v2);
  uint64_t v4 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v63 - v23;
  uint64_t v25 = type metadata accessor for URL();
  __chkstk_darwin(v25, v26);
  if (!*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy))
  {
    uint64_t v65 = v20;
    uint64_t v68 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v69 = v28;
    uint64_t v29 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess();
    uint64_t v66 = v29;
    sub_100B6F9DC(v29, (uint64_t)v24, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v67 = v25;
      char v30 = *(void **)v24;
      char v31 = v24[8];
      uint64_t v32 = &v24[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
      if (v31)
      {
        uint64_t v64 = v30;
        uint64_t v33 = v69;
        (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v32, v67);
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v34 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v36 = v34;
        id v37 = [v0 debugDescription];
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v39;

        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v38;
        *(void *)(inited + 40) = v40;
        uint64_t v41 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v41, (uint64_t)"(USDZRep) [%{public}@] loadInProcessCoreRERenderer()", 52, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v16, 1, 1, v70);
        _s10RepBackendCMa();
        swift_allocObject();
        v0;
        uint64_t v42 = sub_10076FBEC((uint64_t)v16, (uint64_t)v0, (uint64_t)&off_101525938, 2);
        id v43 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v44 = (uint64_t)v65;
        uint64_t v45 = (char *)v65 + v43[12];
        uint64_t v46 = (void *)((char *)v65 + v43[16]);
        uint64_t v47 = (char *)v65 + v43[20];
        uint64_t v48 = v64;
        *uint64_t v65 = v64;
        char v49 = v68;
        uint64_t v50 = v67;
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v45, v68, v67);
        *uint64_t v46 = v42;
        v46[1] = (uint64_t)&off_101512CD0;
        *(_OWORD *)uint64_t v47 = 0u;
        *((_OWORD *)v47 + 1) = 0u;
        *((void *)v47 + 4) = 0;
        *(_OWORD *)(v47 + 40) = xmmword_10118D180;
        swift_storeEnumTagMultiPayload();
        uint64_t v51 = v66;
        swift_beginAccess();
        id v52 = v48;
        swift_retain();
        sub_100B70DFC(v44, v51, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v53 = swift_endAccess();
        sub_100B53C64(v53);
        sub_100B6DB90(v44, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release();

        (*(void (**)(char *, uint64_t))(v33 + 8))(v49, v50);
        return;
      }

      (*(void (**)(char *, uint64_t))(v69 + 8))(v32, v67);
    }
    else
    {
      sub_100B6DB90((uint64_t)v24, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v54 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v55 = swift_initStackObject();
  *(_OWORD *)(v55 + 16) = xmmword_10117E810;
  id v56 = v54;
  id v57 = [v0 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v58 = v70;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v12, v70);
  sub_100B6DB90((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v59 = UUID.uuidString.getter();
  uint64_t v61 = v60;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v58);
  *(void *)(v55 + 56) = &type metadata for String;
  *(void *)(v55 + 64) = sub_100528BE4();
  *(void *)(v55 + 32) = v59;
  *(void *)(v55 + 40) = v61;
  uint64_t v62 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v56, (uint64_t)&_mh_execute_header, v62, (uint64_t)"Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v55);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100B5C118()
{
  uint64_t v67 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v2);
  uint64_t v4 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy) == 1)
  {
    uint64_t v65 = v16;
    uint64_t v66 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v25 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess();
    uint64_t v63 = v25;
    sub_100B6F9DC(v25, (uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v64 = v21;
      id v62 = *(id *)v20;
      int v26 = v20[8];
      uint64_t v27 = &v20[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
      if (byte_101670308 == 1)
      {
        int v28 = sub_100B67994();
        uint64_t v29 = v65;
        if (((v26 ^ v28) & 1) == 0)
        {
LABEL_5:
          (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v66, v27, v64);
          if (qword_10166FB00 != -1) {
            swift_once();
          }
          swift_beginAccess();
          char v30 = (void *)static OS_os_log.crlThreeDimensionalObjects;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v32 = v30;
          id v33 = [v0 debugDescription];
          uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v36 = v35;

          *(void *)(inited + 56) = &type metadata for String;
          *(void *)(inited + 64) = sub_100528BE4();
          *(void *)(inited + 32) = v34;
          *(void *)(inited + 40) = v36;
          uint64_t v37 = static os_log_type_t.debug.getter();
          sub_100BAC898((uint64_t)v32, (uint64_t)&_mh_execute_header, v37, (uint64_t)"(USDZRep) [%{public}@] loadOutOfProcessCoreRERenderer()", 55, 2, inited);
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();

          if (byte_101670308) {
            uint64_t v38 = 8;
          }
          else {
            uint64_t v38 = 0;
          }
          id v39 = objc_allocWithZone((Class)_s15AppExRepBackendCMa(0));
          id v40 = v0;
          id v41 = sub_10076B144((uint64_t)v0, (uint64_t)&off_101525938, v38);

          uint64_t v42 = (int *)sub_1005057FC(&qword_101693918);
          id v43 = (char *)v29 + v42[12];
          uint64_t v44 = (void *)((char *)v29 + v42[16]);
          uint64_t v45 = (char *)v29 + v42[20];
          id v46 = v62;
          *uint64_t v29 = v62;
          uint64_t v47 = v66;
          uint64_t v48 = v64;
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v43, v66, v64);
          *uint64_t v44 = v41;
          v44[1] = &off_101512748;
          *(_OWORD *)uint64_t v45 = 0u;
          *((_OWORD *)v45 + 1) = 0u;
          *((void *)v45 + 4) = 0;
          *(_OWORD *)(v45 + 40) = xmmword_10118D180;
          swift_storeEnumTagMultiPayload();
          uint64_t v49 = v63;
          swift_beginAccess();
          id v50 = v46;
          id v51 = v41;
          sub_100B70DFC((uint64_t)v29, v49, type metadata accessor for CRLUSDZRep.AssetLoadingState);
          uint64_t v52 = swift_endAccess();
          sub_100B53C64(v52);
          sub_100B6DB90((uint64_t)v29, type metadata accessor for CRLUSDZRep.AssetLoadingState);

          (*(void (**)(char *, uint64_t))(v22 + 8))(v47, v48);
          return;
        }
      }
      else
      {
        uint64_t v29 = v65;
        if (v26) {
          goto LABEL_5;
        }
      }

      (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v64);
    }
    else
    {
      sub_100B6DB90((uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v53 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v54 = swift_initStackObject();
  *(_OWORD *)(v54 + 16) = xmmword_10117E810;
  id v55 = v53;
  id v56 = [v0 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v57 = v67;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v12, v67);
  sub_100B6DB90((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v58 = UUID.uuidString.getter();
  uint64_t v60 = v59;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v57);
  *(void *)(v54 + 56) = &type metadata for String;
  *(void *)(v54 + 64) = sub_100528BE4();
  *(void *)(v54 + 32) = v58;
  *(void *)(v54 + 40) = v60;
  uint64_t v61 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v55, (uint64_t)&_mh_execute_header, v61, (uint64_t)"Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v54);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100B5C9A4()
{
  uint64_t v1 = v0;
  uint64_t v71 = type metadata accessor for UUID();
  uint64_t v70 = *(void (***)(char *, char *, uint64_t))(v71 - 8);
  __chkstk_darwin(v71, v2);
  uint64_t v4 = (char *)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v67 - v19;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (void (**)(char *, char *, uint64_t))((char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = v1;
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] == 3)
  {
    int v26 = &v72[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
    swift_beginAccess();
    sub_100B6F9DC((uint64_t)v26, (uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t v69 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = v16;
      uint64_t v27 = v25;
      uint64_t v28 = v21;
      uint64_t v29 = v22;
      char v30 = *(void **)v20;
      char v31 = v20[8];
      id v32 = &v20[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
      if (v31)
      {
        uint64_t v67 = v30;
        uint64_t v71 = (uint64_t)v26;
        id v33 = *(void (**)(void, char *, uint64_t))(v29 + 32);
        uint64_t v70 = v27;
        v33(v27, v32, v28);
        if (qword_10166FB00 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t v34 = (void *)static OS_os_log.crlThreeDimensionalObjects;
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10117E810;
        id v36 = v34;
        id v37 = v72;
        id v38 = [v72 debugDescription];
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v41 = v40;

        *(void *)(inited + 56) = &type metadata for String;
        *(void *)(inited + 64) = sub_100528BE4();
        *(void *)(inited + 32) = v39;
        *(void *)(inited + 40) = v41;
        uint64_t v42 = static os_log_type_t.debug.getter();
        sub_100BAC898((uint64_t)v36, (uint64_t)&_mh_execute_header, v42, (uint64_t)"(USDZRep) [%{public}@] loadQLRenderer()", 39, 2, inited);
        swift_setDeallocating();
        sub_1005057FC(&qword_101672B50);
        swift_arrayDestroy();

        _s17QLSnapshotBackendCMa(0);
        id v43 = (int64x2_t *)swift_allocObject();
        v43[1] = vdupq_n_s64(0x408F400000000000uLL);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))((uint64_t)v43->i64 + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_modelURL, 1, 1, v28);
        uint64_t v44 = &v43->i8[OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate];
        *(uint64_t *)((char *)&v43->i64[1] + OBJC_IVAR____TtCO8Freeform15CRLUSDRendering17QLSnapshotBackend_delegate) = 0;
        swift_unknownObjectWeakInit();
        id v45 = v37;
        UUID.init()();
        *((void *)v44 + 1) = &off_101525938;
        swift_unknownObjectWeakAssign();

        _s17QLSnapshotBackendC12BackendStateOMa(0);
        swift_storeEnumTagMultiPayload();
        id v46 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v47 = (uint64_t)v68;
        uint64_t v48 = (char *)v68 + v46[12];
        uint64_t v49 = (int64x2_t **)((char *)v68 + v46[16]);
        id v50 = (char *)v68 + v46[20];
        id v51 = v67;
        *uint64_t v68 = v67;
        uint64_t v52 = v70;
        (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v48, (char *)v70, v28);
        *uint64_t v49 = v43;
        v49[1] = (int64x2_t *)&off_101515C20;
        *(_OWORD *)id v50 = 0u;
        *((_OWORD *)v50 + 1) = 0u;
        *((void *)v50 + 4) = 0;
        *(_OWORD *)(v50 + 40) = xmmword_10118D180;
        swift_storeEnumTagMultiPayload();
        uint64_t v53 = v71;
        swift_beginAccess();
        uint64_t v54 = v28;
        id v55 = v51;
        swift_retain();
        sub_100B70DFC(v47, v53, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        uint64_t v56 = swift_endAccess();
        sub_100B53C64(v56);
        sub_100B6DB90(v47, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_release();

        (*(void (**)(void (**)(char *, char *, uint64_t), uint64_t))(v29 + 8))(v52, v54);
        return;
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v28);
    }
    else
    {
      sub_100B6DB90((uint64_t)v20, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v57 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t v58 = swift_initStackObject();
  *(_OWORD *)(v58 + 16) = xmmword_10117E810;
  id v59 = v57;
  id v60 = [v72 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v61 = v70;
  uint64_t v62 = v71;
  v70[2](v4, v12, v71);
  sub_100B6DB90((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v63 = UUID.uuidString.getter();
  uint64_t v65 = v64;
  ((void (*)(char *, uint64_t))v61[1])(v4, v62);
  *(void *)(v58 + 56) = &type metadata for String;
  *(void *)(v58 + 64) = sub_100528BE4();
  *(void *)(v58 + 32) = v63;
  *(void *)(v58 + 40) = v65;
  uint64_t v66 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v59, (uint64_t)&_mh_execute_header, v66, (uint64_t)"Cannot load USD renderer with unexpected loading state for asset %{public}@", 75, 2, v58);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();
}

void sub_100B5D2B4()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (id *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9, v12);
  uint64_t v13 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v36 - v16;
  uint64_t v18 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v18, (uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {

    uint64_t v19 = (int *)sub_1005057FC(&qword_101693918);
    uint64_t v20 = (char *)v8 + v19[12];
    uint64_t v21 = v19[16];
    uint64_t v22 = (uint64_t *)((char *)v8 + v19[20]);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    uint64_t v26 = v22[3];
    uint64_t v27 = v22[4];
    unint64_t v28 = v22[5];
    long long v36 = *(_OWORD *)((char *)v8 + v21);
    sub_100767658(v23, v24, v25, v26, v27, v28);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v29(v17, v20, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v17, v9);
    unint64_t v30 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v0;
    v29((char *)(v31 + v30), v13, v9);
    uint64_t v32 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v4, 1, 1, v32);
    type metadata accessor for MainActor();
    id v33 = v0;
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v34 = static MainActor.shared.getter();
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    *(void *)(v35 + 24) = &protocol witness table for MainActor;
    *(void *)(v35 + 32) = v33;
    *(_OWORD *)(v35 + 40) = v36;
    *(void *)(v35 + 56) = &unk_101693C80;
    *(void *)(v35 + 64) = v31;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101693C88, v35);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
  }
  else
  {
    sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"loadSceneInRenderer()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1267, (uint64_t)"Unexpected loading state for USD scene loading.", 47, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"loadSceneInRenderer()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1267);
  }
}

uint64_t sub_100B5D6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  sub_1005057FC(&qword_101672E90);
  v4[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v4[19] = v5;
  v4[20] = *(void *)(v5 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for CRLUSDRendering.SceneRequest(0);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[25] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[26] = v7;
  v4[27] = v6;
  return _swift_task_switch(sub_100B5D864, v7, v6);
}

uint64_t sub_100B5D864()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[20];
  uint64_t v49 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = (void *)v0[16];
  uint64_t v4 = v0[17];
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  id v8 = [v3 debugDescription];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(USDZRep) [%{public}@] loadSceneInRenderer()", 44, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  v13(v49, v4, v2);
  id v14 = [v3 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  sub_1007BC9F0();
  long long v47 = v15;

  [v3 layerFrameInScaledCanvas];
  CGRect v53 = CGRectIntegral(v52);
  CGFloat width = v53.size.width;
  CGFloat height = v53.size.height;
  [v3 layerFrameInScaledCanvas:v53.origin.x, v53.origin.y];
  sub_100B667C0(v18, v19);
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  id v24 = [v3 canvas];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 contentsScale];
    double v27 = v26;
  }
  else
  {
    double v27 = 2.0;
  }
  uint64_t v29 = v0[20];
  uint64_t v28 = v0[21];
  uint64_t v31 = v0[18];
  uint64_t v30 = v0[19];
  v13(v0[23], v28, v30);
  v13(v31, v28, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v31, 0, 1, v30);
  uint64_t v32 = URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)();
  uint64_t v34 = v33;
  uint64_t v36 = v0[23];
  uint64_t v35 = v0[24];
  id v37 = (int *)v0[22];
  uint64_t v38 = v0[18];
  uint64_t v50 = v0[15];
  (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
  sub_100522F00(v38, &qword_101672E90);
  uint64_t v39 = (uint64_t *)(v36 + v37[5]);
  *uint64_t v39 = v32;
  v39[1] = v34;
  uint64_t v40 = v36 + v37[6];
  *(_DWORD *)uint64_t v40 = 1103626240;
  *(_OWORD *)(v40 + 16) = v47;
  *(CGFloat *)(v40 + 32) = width;
  *(CGFloat *)(v40 + 40) = height;
  *(void *)(v40 + 48) = v21;
  *(void *)(v40 + 56) = v23;
  *(double *)(v40 + 64) = v27;
  uint64_t v41 = (_OWORD *)(v36 + v37[7]);
  *uint64_t v41 = 0u;
  v41[1] = 0u;
  sub_100B711AC(v36, v35, type metadata accessor for CRLUSDRendering.SceneRequest);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v48 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 + 16) + **(int **)(v50 + 16));
  id v43 = (void *)swift_task_alloc();
  v0[28] = v43;
  *id v43 = v0;
  v43[1] = sub_100B5DD8C;
  uint64_t v44 = v0[24];
  uint64_t v45 = v0[15];
  return v48(v44, ObjectType, v45);
}

uint64_t sub_100B5DD8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  uint64_t v4 = *(void *)(v2 + 208);
  if (v0) {
    uint64_t v5 = sub_100B5DF7C;
  }
  else {
    uint64_t v5 = sub_100B5DEC8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B5DEC8()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  sub_100B6DB90(v1, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B5DF7C()
{
  uint64_t v1 = *(void *)(v0 + 192);
  swift_release();
  sub_100B6DB90(v1, type metadata accessor for CRLUSDRendering.SceneRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B5E02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  type metadata accessor for MainActor();
  v3[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[15] = v5;
  v3[16] = v4;
  return _swift_task_switch(sub_100B5E0C8, v5, v4);
}

uint64_t sub_100B5E0C8()
{
  uint64_t v1 = *(void **)(v0 + 104);
  id v2 = [v1 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  sub_1007BC9F0();
  long long v20 = v3;

  [v1 layerFrameInScaledCanvas];
  CGRect v25 = CGRectIntegral(v24);
  CGFloat width = v25.size.width;
  CGFloat height = v25.size.height;
  [v1 layerFrameInScaledCanvas:v25.origin.x, v25.origin.y];
  sub_100B667C0(v6, v7);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  id v12 = [v1 canvas];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 contentsScale];
    double v15 = v14;
  }
  else
  {
    double v15 = 2.0;
  }
  uint64_t v22 = *(void *)(v0 + 96);
  uint64_t ObjectType = swift_getObjectType();
  *(_DWORD *)(v0 + 16) = 1103626240;
  *(_OWORD *)(v0 + 32) = v20;
  *(CGFloat *)(v0 + 48) = width;
  *(CGFloat *)(v0 + 56) = height;
  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 72) = v11;
  *(double *)(v0 + 80) = v15;
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 24) + **(int **)(v22 + 24));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v17;
  *uint64_t v17 = v0;
  v17[1] = sub_100B5E2D8;
  uint64_t v18 = *(void *)(v0 + 96);
  return v21(v0 + 16, ObjectType, v18);
}

uint64_t sub_100B5E2D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_100B5E478;
  }
  else {
    uint64_t v5 = sub_100B5E414;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B5E414()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B5E478()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_100B5E4DC(char *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v58 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC((uint64_t *)&unk_10168A0C0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v50 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v50 - v20;
  id v59 = (char *)sub_100B66314();
  uint64_t v22 = (id *)&a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  unsigned int v23 = a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if (v23 > 0x3F) {
    goto LABEL_13;
  }
  CGRect v53 = a1;
  uint64_t v54 = v6;
  unsigned int v57 = v23;
  uint64_t v56 = v17;
  uint64_t v51 = v5;
  CGRect v52 = &a1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  id v24 = *v22;
  CGRect v25 = *(char **)((char *)*v22 + OBJC_IVAR____TtC8Freeform33CRLUndownloadedAssetDrawingHelper_asset);
  double v26 = &qword_101690000;
  id v55 = *v22;
  if (v25)
  {
    uint64_t v28 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
    uint64_t v27 = *(void *)&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
    sub_10050F848(&v25[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v28);
    uint64_t v50 = v13;
    uint64_t v29 = v9;
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 24);
    sub_100B6BEC8(v24, v57);
    uint64_t v31 = v25;
    uint64_t v32 = v27;
    double v26 = &qword_101690000;
    v30(v28, v32);
    uint64_t v9 = v29;
    uint64_t v13 = v50;

    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v33(v21, 0, 1, v2);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v33(v21, 1, 1, v2);
    id v34 = v24;
  }
  uint64_t v35 = &v59[v26[137]];
  uint64_t v36 = *((void *)v35 + 3);
  uint64_t v37 = *((void *)v35 + 4);
  sub_10050F848(v35, v36);
  uint64_t v38 = (uint64_t)v56;
  (*(void (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37);
  v33((char *)v38, 0, 1, v2);
  uint64_t v39 = (uint64_t)&v9[*(int *)(v54 + 48)];
  sub_100522E9C((uint64_t)v21, (uint64_t)v9, (uint64_t *)&unk_101674520);
  sub_100522E9C(v38, v39, (uint64_t *)&unk_101674520);
  uint64_t v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  if (v40((uint64_t)v9, 1, v2) != 1)
  {
    sub_100522E9C((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_101674520);
    if (v40(v39, 1, v2) != 1)
    {
      uint64_t v42 = v58;
      id v43 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v51, v39, v2);
      sub_100B70710((unint64_t *)&qword_10167BDC0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v44 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_100B6BEFC(v55, v57);
      uint64_t v45 = *(void (**)(char *, uint64_t))(v42 + 8);
      v45(v43, v2);
      sub_100522F00(v38, (uint64_t *)&unk_101674520);
      sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
      v45(v13, v2);
      sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
      uint64_t v41 = v52;
      a1 = v53;
      if (v44) {
        goto LABEL_12;
      }
LABEL_13:
      id v47 = objc_allocWithZone((Class)type metadata accessor for CRLUndownloadedAssetDrawingHelper());
      uint64_t v48 = a1;
      return sub_100F9BC38(v48, v59);
    }
    sub_100B6BEFC(v55, v57);
    sub_100522F00(v38, (uint64_t *)&unk_101674520);
    sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v13, v2);
LABEL_10:
    sub_100522F00((uint64_t)v9, (uint64_t *)&unk_10168A0C0);
    a1 = v53;
    goto LABEL_13;
  }
  sub_100B6BEFC(v55, v57);
  sub_100522F00(v38, (uint64_t *)&unk_101674520);
  sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101674520);
  if (v40(v39, 1, v2) != 1) {
    goto LABEL_10;
  }
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101674520);
  uint64_t v41 = v52;
LABEL_12:

  id v46 = *(id *)v41;
  sub_100B6BEC8(*(id *)v41, v41[8]);
  return v46;
}

uint64_t sub_100B5EA58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[25] = a7;
  v8[26] = a8;
  v8[23] = a5;
  v8[24] = a6;
  v8[22] = a4;
  uint64_t v9 = type metadata accessor for URL();
  v8[27] = v9;
  v8[28] = *(void *)(v9 - 8);
  v8[29] = swift_task_alloc();
  v8[30] = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v8[31] = swift_task_alloc();
  unsigned char v8[32] = swift_task_alloc();
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[35] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[36] = v11;
  v8[37] = v10;
  return _swift_task_switch(sub_100B5EBAC, v11, v10);
}

uint64_t sub_100B5EBAC()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[22];
  uint64_t v3 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  v0[38] = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_100B6F9DC(v4, v1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    uint64_t v15 = v0[34];
    swift_release();
    sub_100B6DB90(v15, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    goto LABEL_5;
  }
  uint64_t v5 = (void **)v0[34];
  uint64_t v6 = v0[27];
  uint64_t v7 = v0[28];
  uint64_t v8 = v0[23];
  uint64_t v9 = *v5;
  v0[39] = *v5;
  uint64_t v10 = (int *)sub_1005057FC(&qword_101693918);
  v0[40] = v10;
  uint64_t v11 = (char *)v5 + v10[12];
  uint64_t v12 = *(uint64_t *)((char *)v5 + v10[16]);
  uint64_t v13 = (uint64_t *)((char *)v5 + v10[20]);
  sub_100767658(*v13, v13[1], v13[2], v13[3], v13[4], v13[5]);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v0[41] = v14;
  v0[42] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v14(v11, v6);
  if (v12 != v8)
  {

    swift_unknownObjectRelease();
    swift_release();
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t))(v0[25] + *(int *)v0[25]);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[43] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_100B5EE24;
  uint64_t v20 = v0[23];
  uint64_t v19 = v0[24];
  return v21(v20, v19);
}

uint64_t sub_100B5EE24()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 352) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 296);
  uint64_t v4 = *(void *)(v2 + 288);
  if (v0) {
    uint64_t v5 = sub_100B5F010;
  }
  else {
    uint64_t v5 = sub_100B5EF60;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B5EF60()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B5F010()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 176);
  swift_release();
  sub_100B6F9DC(v3 + v1, v2, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v5 = *(int **)(v0 + 320);
    uint64_t v6 = *(void **)(v0 + 264);
    uint64_t v7 = *(void ***)(v0 + 248);
    uint64_t v9 = *(void *)(v0 + 224);
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *v7;
    uint64_t v12 = (char *)v7 + v5[12];
    uint64_t v13 = (uint64_t *)((char *)v7 + v5[20]);
    long long v35 = *(_OWORD *)((char *)v7 + v5[16]);
    sub_100767658(*v13, v13[1], v13[2], v13[3], v13[4], v13[5]);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v8, v12, v10);
    uint64_t v14 = (char *)v6 + v5[12];
    uint64_t v15 = v5[16];
    *uint64_t v6 = v11;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, v8, v10);
    *(_OWORD *)((char *)v6 + v15) = v35;
    *(void *)(v0 + 160) = v4;
    id v34 = v11;
    swift_unknownObjectRetain();
    swift_errorRetain();
    sub_1005057FC(&qword_101672BD0);
    if (swift_dynamicCast())
    {
      uint64_t v16 = *(void *)(v0 + 112);
      uint64_t v17 = *(void *)(v0 + 120);
      uint64_t v18 = *(unsigned __int8 *)(v0 + 128);
    }
    else
    {
      *(void *)(v0 + 168) = *(void *)(v0 + 352);
      swift_errorRetain();
      if (swift_dynamicCast())
      {
        uint64_t v16 = *(void *)(v0 + 136);
        uint64_t v17 = *(void *)(v0 + 144);
        uint64_t v18 = 4;
      }
      else
      {
        swift_getErrorValue();
        uint64_t v16 = Error.localizedDescription.getter();
        uint64_t v18 = 5;
      }
    }
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    CGRect v25 = *(void **)(v0 + 312);
    uint64_t v26 = *(void *)(v0 + 264);
    uint64_t v27 = *(void *)(v0 + 232);
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v29 = *(void *)(v0 + 176) + *(void *)(v0 + 304);
    uint64_t v30 = v26 + *(int *)(*(void *)(v0 + 320) + 80);
    *(void *)uint64_t v30 = v16;
    *(void *)(v30 + 8) = v17;
    *(void *)(v30 + 24) = 0;
    *(void *)(v30 + 32) = 0;
    *(void *)(v30 + 16) = v18;
    *(_OWORD *)(v30 + 40) = xmmword_101177E80;
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_100B70DFC(v26, v29, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess();
    sub_100B53C64();
    sub_100B6DB90(v26, type metadata accessor for CRLUSDZRep.AssetLoadingState);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_errorRelease();

    v33(v27, v28);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 352);
    uint64_t v20 = *(void **)(v0 + 312);
    uint64_t v21 = *(void **)(v0 + 256);
    uint64_t v36 = *(void *)(v0 + 248);
    uint64_t v22 = *(void *)(v0 + 176) + *(void *)(v0 + 304);
    unsigned int v23 = (void *)((char *)v21 + *(int *)(sub_1005057FC(&qword_101693920) + 48));
    *uint64_t v21 = v20;
    *unsigned int v23 = v19;
    type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    swift_errorRetain();
    id v24 = v20;
    sub_100B70DFC((uint64_t)v21, v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess();
    sub_100B53C64();
    sub_100B6DB90((uint64_t)v21, type metadata accessor for CRLUSDZRep.AssetLoadingState);

    swift_errorRelease();
    swift_unknownObjectRelease();
    sub_100B6DB90(v36, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

void sub_100B5F45C()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v5 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v5 & 0xC0) == 0x40)
  {
    uint64_t v6 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    uint64_t v7 = type metadata accessor for TaskPriority();
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    long long v14 = v6[1];
    v8(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain_n();
    sub_100B6BEC8(v6, v5);
    uint64_t v9 = v0;
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    *(void *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v14;
    *(void *)(v11 + 56) = &unk_101693C68;
    *(void *)(v11 + 64) = 0;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101693C70, v11);
    swift_release();
    swift_unknownObjectRelease();
    sub_100B6BEFC(v6, v5);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    *(void *)&long long v14 = static OS_os_log.default.getter();
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898(v14, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Incorrect renderingState to start playback.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v13 = (void *)v14;
  }
}

uint64_t sub_100B5F684(uint64_t a1, uint64_t a2)
{
  v2[2] = type metadata accessor for MainActor();
  v2[3] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (uint64_t (*)(void, void, uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  unsigned __int8 v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *unsigned __int8 v5 = v2;
  v5[1] = sub_100765B7C;
  return v7(0, 0, ObjectType, a2);
}

void sub_100B5F7B0(char a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v7 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v7 & 0xC0) == 0x40)
  {
    uint64_t v8 = *(_OWORD **)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = type metadata accessor for TaskPriority();
    long long v16 = v8[1];
    *(unsigned char *)(v9 + 16) = a1 & 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain_n();
    sub_100B6BEC8(v8, v7);
    uint64_t v11 = v1;
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    *(void *)(v13 + 24) = &protocol witness table for MainActor;
    *(void *)(v13 + 32) = v11;
    *(_OWORD *)(v13 + 40) = v16;
    *(void *)(v13 + 56) = &unk_101693C58;
    *(void *)(v13 + 64) = v9;
    sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101693C60, v13);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    sub_100B6BEFC(v8, v7);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    *(void *)&long long v16 = static OS_os_log.default.getter();
    uint64_t v14 = static os_log_type_t.default.getter();
    sub_100BAC898(v16, (uint64_t)&_mh_execute_header, v14, (uint64_t)"Incorrect renderingState to stop playback.", 42, 2, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v15 = (void *)v16;
  }
}

uint64_t sub_100B5FA0C(uint64_t a1, uint64_t a2, char a3)
{
  v3[2] = type metadata accessor for MainActor();
  v3[3] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  unsigned __int8 v7 = (void *)swift_task_alloc();
  v3[4] = v7;
  *unsigned __int8 v7 = v3;
  if (a3)
  {
    v7[1] = sub_100B5FB68;
    uint64_t v8 = 4;
  }
  else
  {
    v7[1] = sub_100B5FCC4;
    uint64_t v8 = 5;
  }
  return v10(0, v8, ObjectType, a2);
}

uint64_t sub_100B5FB68()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100B5FE20;
  }
  else {
    uint64_t v4 = sub_100766E28;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100B5FCC4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1006548D4;
  }
  else {
    uint64_t v4 = sub_10076EE48;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100B5FE20()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100B5FE84()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v5 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v5 & 0xC0) == 0x40)
  {
    uint64_t v6 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    uint64_t v7 = type metadata accessor for TaskPriority();
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    long long v14 = v6[1];
    v8(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain_n();
    sub_100B6BEC8(v6, v5);
    uint64_t v9 = v0;
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    *(void *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v14;
    *(void *)(v11 + 56) = &unk_101693C40;
    *(void *)(v11 + 64) = 0;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101693C48, v11);
    swift_release();
    swift_unknownObjectRelease();
    sub_100B6BEFC(v6, v5);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    *(void *)&long long v14 = static OS_os_log.default.getter();
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898(v14, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Incorrect renderingState to resume playback.", 44, 2, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v13 = (void *)v14;
  }
}

uint64_t sub_100B600AC(uint64_t a1, uint64_t a2)
{
  v2[2] = type metadata accessor for MainActor();
  v2[3] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  unsigned __int8 v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *unsigned __int8 v5 = v2;
  v5[1] = sub_100765B7C;
  return v7(0, 3, ObjectType, a2);
}

void sub_100B601D8()
{
  uint64_t v1 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v5 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v5 & 0xC0) == 0x40)
  {
    uint64_t v6 = *(_OWORD **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    uint64_t v7 = type metadata accessor for TaskPriority();
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    long long v14 = v6[1];
    v8(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_unknownObjectRetain_n();
    sub_100B6BEC8(v6, v5);
    uint64_t v9 = v0;
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    *(void *)(v11 + 32) = v9;
    *(_OWORD *)(v11 + 40) = v14;
    *(void *)(v11 + 56) = &unk_101693C20;
    *(void *)(v11 + 64) = 0;
    sub_1005912D0((uint64_t)v4, (uint64_t)&unk_101693C30, v11);
    swift_release();
    swift_unknownObjectRelease();
    sub_100B6BEFC(v6, v5);
  }
  else
  {
    sub_10050BF48(0, (unint64_t *)&qword_10167B170);
    *(void *)&long long v14 = static OS_os_log.default.getter();
    uint64_t v12 = static os_log_type_t.default.getter();
    sub_100BAC898(v14, (uint64_t)&_mh_execute_header, v12, (uint64_t)"Incorrect renderingState to pause playback.", 43, 2, (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v13 = (void *)v14;
  }
}

uint64_t sub_100B60400(uint64_t a1, uint64_t a2)
{
  v2[2] = type metadata accessor for MainActor();
  v2[3] = static MainActor.shared.getter();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  unsigned __int8 v5 = (void *)swift_task_alloc();
  v2[4] = v5;
  *unsigned __int8 v5 = v2;
  v5[1] = sub_100B6052C;
  return v7(0, 2, ObjectType, a2);
}

uint64_t sub_100B6052C()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100766E8C;
  }
  else {
    uint64_t v4 = sub_10076EE48;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100B60A28(uint64_t a1)
{
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v4)
  {
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
    {
      unsigned __int8 v5 = (unint64_t *)(v3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_currentKnobs);
      swift_beginAccess();
      unint64_t v6 = *v5;
      swift_bridgeObjectRetain();
      char v7 = sub_100ED5DB0(a1, v6);
      swift_bridgeObjectRelease();
      if (v7) {
        return 1;
      }
    }
  }
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  return (uint64_t)[super directlyManagesVisibilityOfKnob:a1];
}

void sub_100B60B88(char a1)
{
  id v3 = [v1 interactiveCanvasController];
  if (!v3) {
    return;
  }
  id v11 = v3;
  id v4 = [v3 layerHost];
  if (!v4) {
    goto LABEL_11;
  }
  id v5 = [v4 miniFormatterPresenter];
  swift_unknownObjectRelease();
  if (!v5) {
    goto LABEL_11;
  }
  id v6 = [v1 interactiveCanvasController];
  if (v6)
  {
    char v7 = v6;
    id v8 = [v6 editorController];

    if (v8)
    {
      id v9 = [v8 selectionPath];

      if (v9)
      {
        [v5 presentMiniFormatterForSelectionPath:v9];
        if (a1)
        {
          uint64_t v10 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
          if ((*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter) & 1) == 0)
          {
            [v1 performSelector:"hideMiniFormatterIfNecessary" withObject:0 afterDelay:3.25];
            *((unsigned char *)v1 + v10) = 1;
          }
        }
        swift_unknownObjectRelease();

LABEL_11:

        return;
      }
    }
  }

  swift_unknownObjectRelease();
}

void sub_100B60D3C()
{
  id v1 = [v0 interactiveCanvasController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 layerHost];

    if (v3)
    {
      id v4 = [v3 miniFormatterPresenter];
      swift_unknownObjectRelease();
      if (v4)
      {
        uint64_t v5 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
        if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter) == 1)
        {
          [self cancelPreviousPerformRequestsWithTarget:v0 selector:"hideMiniFormatterIfNecessary" object:0];
          *((unsigned char *)v0 + v5) = 0;
        }
        id v6 = [v0 interactiveCanvasController];
        if (!v6
          || (char v7 = v6, v8 = [v6 layerHost], v7, !v8)
          || (id v9 = [v8 miniFormatterPresenter],
              swift_unknownObjectRelease(),
              !v9)
          || (unsigned __int8 v10 = [v9 isPresentingSecondLayerPopover],
              swift_unknownObjectRelease(),
              (v10 & 1) == 0))
        {
          [v4 dismissMiniFormatterForRep:v0];
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_100B60F10()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1, v2);
  id v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  id v8 = (id *)((char *)&v25 - v7);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v14, (uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  }
  uint64_t v30 = v0;

  uint64_t v15 = sub_1005057FC(&qword_101693918);
  long long v16 = (char *)v8 + *(int *)(v15 + 48);
  swift_unknownObjectRelease();
  uint64_t v17 = (uint64_t *)((char *)v8 + *(int *)(v15 + 80));
  uint64_t v18 = *v17;
  unint64_t v28 = v17[1];
  uint64_t v29 = v18;
  uint64_t v19 = v17[2];
  uint64_t v20 = v17[4];
  uint64_t v26 = v17[3];
  uint64_t v27 = v19;
  unint64_t v21 = v17[5];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v16, v9);
  if (v21 >> 62)
  {
    sub_100767658(v29, v28, v27, v26, v20, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v22 = &v4[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
    uint64_t v23 = v30;
    *(void *)id v4 = sub_100B66314();
    v4[8] = 0;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v13, v9);
    swift_storeEnumTagMultiPayload();
    swift_beginAccess();
    sub_100B70DFC((uint64_t)v4, v14, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    swift_endAccess();
    sub_100B53C64();
    sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    *(unsigned char *)(v23 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended) = 1;
  }
  return result;
}

void sub_100B6128C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (void **)((char *)&v24 - v8);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_rendererHasBeenSuspended) == 1)
  {
    uint64_t v16 = v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess();
    sub_100B6F9DC(v16, (uint64_t)v9, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = v11;
      uint64_t v17 = *v9;
      uint64_t v18 = sub_1005057FC(&qword_101693910);
      uint64_t v19 = (char *)v9 + *(int *)(v18 + 64);
      uint64_t v25 = v18;
      uint64_t v26 = v19;
      uint64_t v20 = (void *)sub_100B66314();
      type metadata accessor for CRLAsset();
      char v21 = static NSObject.== infix(_:_:)();

      uint64_t v22 = v27;
      if (v21)
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v14, v26, v10);
        uint64_t v23 = &v5[*(int *)(v25 + 64)];
        *(void *)uint64_t v5 = sub_100B66314();
        v5[8] = 1;
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v23, v14, v10);
        swift_storeEnumTagMultiPayload();
        swift_beginAccess();
        sub_100B70DFC((uint64_t)v5, v16, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        swift_endAccess();
        sub_100B53C64();
        sub_100B6DB90((uint64_t)v5, type metadata accessor for CRLUSDZRep.AssetLoadingState);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v10);
        *(unsigned char *)(v1 + v15) = 0;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v10);
      }
    }
    else
    {
      sub_100B6DB90((uint64_t)v9, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    }
  }
}

void sub_100B61650()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
  {
    id v1 = [v0 interactiveCanvasController];
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 editorController];
      if (v3
        && (v4 = v3, id v5 = [v3 selectionPath], v4, v5))
      {
        id v6 = [v2 selectionModelTranslator];
        if (v6)
        {
          uint64_t v7 = v6;
          id v8 = [v6 boardItemsForSelectionPath:v5];

          type metadata accessor for CRLBoardItem(0);
          sub_100B70710((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
          uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v33 = v5;
          if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
          {
LABEL_66:
            if (_CocoaArrayWrapper.endIndex.getter())
            {
              sub_100509DA0((unint64_t)_swiftEmptyArrayStorage);
              goto LABEL_8;
            }
          }
          uint64_t v10 = &_swiftEmptySetSingleton;
LABEL_8:
          v39[1] = v10;
          if ((v9 & 0xC000000000000001) != 0)
          {
            __CocoaSet.makeIterator()();
            Set.Iterator.init(_cocoa:)();
            uint64_t v9 = (uint64_t)v39[2];
            long long v35 = v39[3];
            uint64_t v11 = (uint64_t)v39[4];
            id v12 = v39[5];
            unint64_t v13 = (unint64_t)v39[6];
          }
          else
          {
            id v12 = 0;
            uint64_t v14 = -1 << *(unsigned char *)(v9 + 32);
            long long v35 = (void *)(v9 + 56);
            uint64_t v11 = ~v14;
            uint64_t v15 = -v14;
            if (v15 < 64) {
              uint64_t v16 = ~(-1 << v15);
            }
            else {
              uint64_t v16 = -1;
            }
            unint64_t v13 = v16 & *(void *)(v9 + 56);
          }
          uint64_t v32 = v11;
          int64_t v34 = (unint64_t)(v11 + 64) >> 6;
          uint64_t v36 = v9;
          while (1)
          {
            if (v9 < 0)
            {
              if (!__CocoaSet.Iterator.next()()) {
                goto LABEL_59;
              }
              swift_unknownObjectRetain();
              swift_dynamicCast();
              id v20 = v39[0];
              swift_unknownObjectRelease();
              uint64_t v19 = (char *)v12;
              uint64_t v17 = v13;
            }
            else
            {
              if (v13)
              {
                uint64_t v17 = (v13 - 1) & v13;
                unint64_t v18 = __clz(__rbit64(v13)) | ((void)v12 << 6);
                uint64_t v19 = (char *)v12;
              }
              else
              {
                uint64_t v21 = (uint64_t)v12 + 1;
                if (__OFADD__(v12, 1))
                {
                  __break(1u);
                  goto LABEL_66;
                }
                if (v21 >= v34) {
                  goto LABEL_59;
                }
                unint64_t v22 = v35[v21];
                uint64_t v19 = (char *)v12 + 1;
                if (!v22)
                {
                  uint64_t v19 = (char *)v12 + 2;
                  if ((uint64_t)v12 + 2 >= v34) {
                    goto LABEL_59;
                  }
                  unint64_t v22 = v35[(void)v19];
                  if (!v22)
                  {
                    uint64_t v19 = (char *)v12 + 3;
                    if ((uint64_t)v12 + 3 >= v34) {
                      goto LABEL_59;
                    }
                    unint64_t v22 = v35[(void)v19];
                    if (!v22)
                    {
                      uint64_t v19 = (char *)v12 + 4;
                      if ((uint64_t)v12 + 4 >= v34) {
                        goto LABEL_59;
                      }
                      unint64_t v22 = v35[(void)v19];
                      if (!v22)
                      {
                        uint64_t v23 = (char *)v12 + 5;
                        while ((char *)v34 != v23)
                        {
                          unint64_t v22 = v35[(void)v23++];
                          if (v22)
                          {
                            uint64_t v19 = v23 - 1;
                            goto LABEL_40;
                          }
                        }
LABEL_59:
                        sub_10052E1EC();

                        return;
                      }
                    }
                  }
                }
LABEL_40:
                uint64_t v17 = (v22 - 1) & v22;
                unint64_t v18 = __clz(__rbit64(v22)) + ((void)v19 << 6);
              }
              id v20 = *(id *)(*(void *)(v9 + 48) + 8 * v18);
            }
            if (!v20) {
              goto LABEL_59;
            }
            id v24 = [v2 repForInfo:v20];
            if (v24)
            {
              sub_100CB7074(v39, v24);
            }
            type metadata accessor for CRLGroupItem();
            if (swift_dynamicCastClass()) {
              break;
            }
LABEL_21:

            id v12 = v19;
            unint64_t v13 = v17;
          }
          uint64_t v38 = v17;
          id v37 = v20;
          unint64_t v25 = (unint64_t)sub_1005430E4();
          unint64_t v26 = v25;
          if (v25 >> 62)
          {
            uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
            if (v27) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v27)
            {
LABEL_48:
              if (v27 < 1)
              {
                __break(1u);
                goto LABEL_61;
              }
              for (uint64_t i = 0; i != v27; ++i)
              {
                if ((v26 & 0xC000000000000001) != 0) {
                  id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v29 = *(id *)(v26 + 8 * i + 32);
                }
                uint64_t v30 = v29;
                id v31 = [v2 repForInfo:v29, v32, v33];
                if (v31)
                {
                  sub_100CB7074(v39, v31);
                }
                else
                {
                }
              }
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v9 = v36;
          uint64_t v17 = v38;
          goto LABEL_21;
        }
      }
      else
      {
        id v5 = v2;
      }
    }
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
LABEL_61:
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_100509DA0((unint64_t)_swiftEmptyArrayStorage);
      }
    }
  }
}

void sub_100B61BD0()
{
  id v1 = [v0 repForSelecting];
  if (!v1 || (uint64_t v2 = v1, v3 = [v1 isSelected], v2, (v3 & 1) == 0))
  {
    sub_100B61650();
    uint64_t v5 = v4;
    if ((v4 & 0xC000000000000001) != 0)
    {
      __CocoaSet.makeIterator()();
      sub_10050BF48(0, (unint64_t *)&qword_101678790);
      sub_10055A7A4();
      Set.Iterator.init(_cocoa:)();
      uint64_t v5 = v26;
      uint64_t v24 = v27;
      uint64_t v6 = v28;
      uint64_t v7 = v29;
      unint64_t v8 = v30;
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
      uint64_t v24 = v4 + 56;
      uint64_t v6 = ~v9;
      uint64_t v10 = -v9;
      if (v10 < 64) {
        uint64_t v11 = ~(-1 << v10);
      }
      else {
        uint64_t v11 = -1;
      }
      unint64_t v8 = v11 & *(void *)(v4 + 56);
    }
    int64_t v12 = (unint64_t)(v6 + 64) >> 6;
    while (1)
    {
      while (1)
      {
        uint64_t v13 = v7;
        if (v5 < 0)
        {
          if (!__CocoaSet.Iterator.next()()) {
            goto LABEL_36;
          }
          sub_10050BF48(0, (unint64_t *)&qword_101678790);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v16 = v25;
          swift_unknownObjectRelease();
          if (!v25) {
            goto LABEL_36;
          }
        }
        else
        {
          if (v8)
          {
            unint64_t v14 = __clz(__rbit64(v8));
            v8 &= v8 - 1;
            unint64_t v15 = v14 | (v7 << 6);
          }
          else
          {
            int64_t v17 = v7 + 1;
            if (__OFADD__(v7, 1))
            {
              __break(1u);
              return;
            }
            if (v17 >= v12) {
              goto LABEL_36;
            }
            unint64_t v18 = *(void *)(v24 + 8 * v17);
            ++v7;
            if (!v18)
            {
              uint64_t v7 = v13 + 2;
              if (v13 + 2 >= v12) {
                goto LABEL_36;
              }
              unint64_t v18 = *(void *)(v24 + 8 * v7);
              if (!v18)
              {
                uint64_t v7 = v13 + 3;
                if (v13 + 3 >= v12) {
                  goto LABEL_36;
                }
                unint64_t v18 = *(void *)(v24 + 8 * v7);
                if (!v18)
                {
                  uint64_t v7 = v13 + 4;
                  if (v13 + 4 >= v12) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = *(void *)(v24 + 8 * v7);
                  if (!v18)
                  {
                    uint64_t v19 = v13 + 5;
                    while (v12 != v19)
                    {
                      unint64_t v18 = *(void *)(v24 + 8 * v19++);
                      if (v18)
                      {
                        uint64_t v7 = v19 - 1;
                        goto LABEL_31;
                      }
                    }
LABEL_36:
                    sub_10052E1EC();
                    return;
                  }
                }
              }
            }
LABEL_31:
            unint64_t v8 = (v18 - 1) & v18;
            unint64_t v15 = __clz(__rbit64(v18)) + (v7 << 6);
          }
          id v16 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
          if (!v16) {
            goto LABEL_36;
          }
        }
        id v20 = [v16 repForSelecting];
        if (v20) {
          break;
        }
LABEL_11:
      }
      uint64_t v21 = v20;
      type metadata accessor for CRLUSDZRep(0);
      if (swift_dynamicCastClass())
      {

        goto LABEL_11;
      }
      [v21 frameInUnscaledCanvas];
      unsigned __int8 v22 = [v23 intersectsUnscaledRect:];

      if (v22) {
        goto LABEL_36;
      }
    }
  }
}

uint64_t sub_100B61F48()
{
  id v1 = [v0 interactiveCanvasController];
  if (v1)
  {
    uint64_t v2 = v1;
    if ([v1 isInDynamicOperation]
      && [v0 isSelected]
      && (id v3 = [v2 tmCoordinator],
          id v4 = [v3 controllingTM],
          v3,
          v4)
      && (id v5 = [v4 tracker], swift_unknownObjectRelease(), v5))
    {
      uint64_t v6 = &OBJC_PROTOCOL___CRLCanvasRepRotateTracking;
      unsigned __int8 v7 = [v5 conformsToProtocol:v6];

      swift_unknownObjectRelease();
      if (v7) {
        return 1;
      }
    }
    else
    {
    }
  }
  return 0;
}

id sub_100B620A4()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_cachedContentPlatformView);
  id v3 = v2;
  if (!v2)
  {
    uint64_t v4 = v0;
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState);
    unsigned int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
    if (v6 >> 6 == 2)
    {
      id v20 = objc_allocWithZone((Class)UIImage);
      sub_100B6BEC8((id)v5, v6);
      id v21 = [v20 initWithCGImage:(id)v5];
      id v3 = [objc_allocWithZone((Class)UIImageView) initWithImage:v21];

      [v3 setContentMode:2];
      if (v6)
      {
        unsigned __int8 v22 = sub_100B62704();
        sub_1009A11D0();

        id v23 = sub_100B62704();
        id v24 = [v23 superview];

        if (!v24
          || (sub_10050BF48(0, (unint64_t *)&qword_1016725F0),
              id v25 = v3,
              id v26 = v24,
              char v27 = static NSObject.== infix(_:_:)(),
              v26,
              v26,
              v25,
              (v27 & 1) == 0))
        {
          uint64_t v28 = sub_100B62704();
          [v28 removeFromSuperview];

          uint64_t v29 = sub_100B62704();
          [v3 addSubview:v29];

          sub_100B62544();
        }
        unint64_t v30 = sub_100B62704();
        [v30 setHidden:0];
      }
      id v31 = *(void **)(v4 + v1);
      *(void *)(v4 + v1) = v3;
      id v32 = v3;

      sub_100B6BEFC((id)v5, v6);
      goto LABEL_15;
    }
    if (v6 >> 6 == 1)
    {
      id v3 = *(id *)(v5 + 32);
      unsigned int v7 = *(unsigned __int8 *)(v5 + 48);
      int v8 = (v7 >> 4) & 3;
      if (!v8)
      {
        [v3 setAutoresizingMask:0];
        goto LABEL_16;
      }
      if (v8 == 1)
      {
        if ((v7 & 0xC0) == 0x80)
        {
          uint64_t v9 = *(void **)(v5 + 40);
          unsigned __int8 v10 = v7 & 0xCF;
          unsigned __int8 v36 = v7 & 0xCF;
          sub_100B6BEC8((id)v5, v6);
          id v11 = v3;
          sub_100B6BEC8(v9, v10);
          [v11 frame];
          double v13 = v12;
          double v15 = v14;
          id v3 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, v12, v14];
          id v16 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v9];
          id v17 = [objc_allocWithZone((Class)UIImageView) initWithImage:v16];

          [v11 setAlpha:0.0];
          [v11 setFrame:0.0, 0.0, v13, v15];
          [v17 setFrame:0.0, 0.0, v13, v15];
          [v3 addSubview:v11];
          [v3 addSubview:v17];
          [v11 setAutoresizingMask:18];
          [v17 setAutoresizingMask:18];
          unint64_t v18 = *(void **)(v4 + v1);
          *(void *)(v4 + v1) = v3;
          id v19 = v3;

          sub_100B6BEFC(v9, v36);
        }
        else
        {
          sub_100B6BEC8(*(id *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState), *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8));
          id v35 = v3;
          [v35 setAlpha:0.0];
          [v35 setAutoresizingMask:0];
        }
LABEL_15:
        sub_100B6BEFC((id)v5, v6);
        goto LABEL_16;
      }
    }
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"contentPlatformView", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1794, (uint64_t)"Unexpectedly returning nil from contentPlatformView.", 52, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"contentPlatformView", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 1794);
    id v3 = 0;
  }
LABEL_16:
  id v33 = v2;
  return v3;
}

void sub_100B62544()
{
  uint64_t v1 = sub_100B62704();
  id v17 = [v1 superview];

  if (v17)
  {
    id v2 = [v0 canvas];
    if (v2)
    {
      id v3 = v2;
      [v2 viewScale];
      double v5 = v4;

      [v0 boundsForStandardKnobs];
      double v10 = sub_100065738(v6, v7, v8, v9);
      double v12 = sub_1000646A4(v10, v11, v5);
      double v14 = v13;
      double v15 = sub_100B62704();
      [v15 setFrame:v12 - *(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] * 0.5, v14 - *(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize + 8] * 0.5];

      id v16 = v15;
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSpinnerViewConstraints()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2026, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSpinnerViewConstraints()", 30, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2026);
      id v16 = (char *)v17;
    }
  }
}

char *sub_100B62704()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView];
  if (v2)
  {
    id v3 = *(char **)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep____lazy_storage___spinnerView];
  }
  else
  {
    double v4 = v0;
    double v5 = sub_100064070();
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    id v12 = objc_allocWithZone((Class)type metadata accessor for CRLIndeterminateRoundSpinnerView());
    double v13 = sub_1009A0950((uint64_t)v0, (uint64_t)"handleSpinnerTapWithSender:", v5, v7, v9, v11);
    [v13 setHidden:1];
    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    double v14 = *(void **)&v4[v1];
    *(void *)&v4[v1] = v13;
    id v3 = v13;

    id v2 = 0;
  }
  id v15 = v2;
  return v3;
}

void sub_100B62864()
{
  id v1 = [v0 canvas];
  if (v1)
  {
    id v2 = v1;
    [v1 viewScale];
    double v4 = v3;

    [v0 boundsForStandardKnobs];
    CGFloat Width = CGRectGetWidth(v10);
    double v6 = (double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize];
    if (*(double *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewSize] + 10.0 >= v4 * Width
      || ([v0 boundsForStandardKnobs], v6[1] + 10.0 >= v4 * CGRectGetHeight(v11)))
    {
      double v7 = sub_100B62704();
      [v7 setHidden:1];

      v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 1;
    }
    else
    {
      sub_100B62544();
      if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] == 1)
      {
        v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_spinnerViewHiddenBecauseTooSmall] = 0;
        if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] & 1) == 0
          && (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] & 1) == 0)
        {
          double v8 = sub_100B62704();
          [v8 setHidden:0];
        }
      }
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"updateSpinnerView()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2080, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"updateSpinnerView()", 19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2080);
  }
}

void sub_100B62AD8()
{
  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isZooming] = 0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [super handleFadeInForZoom];
  if ((v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC1) == 0x81)
  {
    id v1 = sub_100B62704();
    id v2 = [v1 layer];

    if (v2)
    {
      id v3 = v2;
      sub_100B43D18(0.15);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136);
    }
  }
}

void sub_100B62C78()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8) & 0xC1) == 0x81)
  {
    id v1 = sub_100B62704();
    unsigned int v2 = [v1 isHidden];

    if (v2)
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2144, (uint64_t)"Trying to fade out while spinner view is hidden.", 48, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2144);
    }
    id v3 = sub_100B62704();
    id v4 = [v3 layer];

    if (v4)
    {
      id v5 = v4;
      sub_100B43BE4(0.15);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2146, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerOut()", 16, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2146);
    }
  }
}

double *sub_100B62F70()
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v2 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState;
  unsigned __int8 v3 = *(unsigned char *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
  if ((v3 & 0xC0) == 0x40)
  {
    id v4 = *(void **)v2;
    unsigned int v5 = *(unsigned __int8 *)(*(void *)v2 + 48);
    if ((v5 & 0x30) == 0x20)
    {
      double v6 = (void *)v4[4];
      double v7 = (void *)v4[5];
      sub_100B6F904(v6, v7, v5);
      sub_100B6F904(v6, v7, v5);
      sub_100B6BEC8(v4, v3);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      sub_100B6F970(v6, v7, v5);
      sub_100B6BEFC(v4, v3);
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

void sub_100B63088(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v3, v4);
  double v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v15.receiver = v1;
  v15.super_class = v7;
  [super processChangedProperty:a1];
  if (a1 == 40)
  {
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState;
    swift_beginAccess();
    sub_100B70DFC((uint64_t)v6, v8, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    swift_endAccess();
    sub_100B52AC4();
    sub_100B6DB90((uint64_t)v6, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  }
  id v9 = [v1 layout];
  [v9 invalidateFrame];

  id v10 = [v1 layout];
  [v10 invalidateExteriorWrap];

  [v1 invalidateKnobPositions];
  [v1 setNeedsDisplay];
  id v11 = [v1 canvas];
  if (v11)
  {
    id v12 = v11;
    id v13 = [v1 layout];
    [v12 canvasInvalidatedForLayout:v13];
  }
}

void sub_100B632C0(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  double v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v42.receiver = v1;
  v42.super_class = v7;
  [super updateRenderableGeometryFromLayout:a1];
  if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] & 1) == 0)
  {
    uint64_t v8 = sub_100B62704();
    unsigned __int8 v9 = [v8 isHidden];

    if ((v9 & 1) == 0) {
      sub_100B62544();
    }
  }
  id v10 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
  unsigned __int8 v11 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
  if ((v11 & 0xC0) == 0x40)
  {
    id v12 = *(void **)v10;
    uint64_t v13 = *(void *)(*(void *)v10 + 16);
    uint64_t v14 = *(void *)(*(void *)v10 + 24);
    unsigned int v15 = *(unsigned __int8 *)(*(void *)v10 + 48);
    if ((v15 & 0x30) == 0x20)
    {
      id v17 = (void *)v12[4];
      uint64_t v40 = (void *)v12[5];
      id v16 = v40;
      sub_100B6BEC8(v12, v11);
      swift_unknownObjectRetain();
      sub_100B6F904(v17, v16, v15);
      [v1 layerFrameInScaledCanvasRelativeToParent];
      double v19 = v18;
      double v21 = v20;
      double v23 = v22;
      double v25 = v24;
      [v1 i_layerTransform];
      [v17 setIfDifferentFrame:&v41 orTransform:v19, v21, v23, v25];
      uint64_t v26 = swift_allocObject();
      uint64_t v39 = v14;
      uint64_t v27 = v26;
      *(void *)(v26 + 16) = v1;
      uint64_t v28 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v6, 1, 1, v28);
      type metadata accessor for MainActor();
      uint64_t v29 = v1;
      swift_unknownObjectRetain();
      unint64_t v30 = v29;
      swift_retain();
      uint64_t v31 = static MainActor.shared.getter();
      id v32 = (void *)swift_allocObject();
      v32[2] = v31;
      v32[3] = &protocol witness table for MainActor;
      v32[4] = v30;
      v32[5] = v13;
      v32[6] = v39;
      v32[7] = &unk_101693D08;
      v32[8] = v27;
      sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101693D10, (uint64_t)v32);
      swift_release();
      swift_release();
      sub_100B6F970(v17, v40, v15);
    }
    else
    {
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v1;
      uint64_t v34 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v6, 1, 1, v34);
      type metadata accessor for MainActor();
      swift_unknownObjectRetain();
      id v35 = v1;
      sub_100B6BEC8(v12, v11);
      swift_unknownObjectRetain();
      unsigned __int8 v36 = v35;
      swift_retain();
      uint64_t v37 = static MainActor.shared.getter();
      uint64_t v38 = (void *)swift_allocObject();
      v38[2] = v37;
      v38[3] = &protocol witness table for MainActor;
      v38[4] = v36;
      v38[5] = v13;
      v38[6] = v14;
      v38[7] = &unk_101693CF8;
      v38[8] = v33;
      sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101693D00, (uint64_t)v38);
      swift_release();
      swift_release();
    }
    swift_unknownObjectRelease();
    sub_100B6BEFC(v12, v11);
  }
}

uint64_t sub_100B636B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  type metadata accessor for MainActor();
  v3[14] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[15] = v5;
  v3[16] = v4;
  return _swift_task_switch(sub_100B63754, v5, v4);
}

uint64_t sub_100B63754()
{
  id v1 = *(void **)(v0 + 104);
  id v2 = [v1 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  sub_1007BC9F0();
  long long v20 = v3;

  [v1 layerFrameInScaledCanvas];
  CGRect v25 = CGRectIntegral(v24);
  CGFloat width = v25.size.width;
  CGFloat height = v25.size.height;
  [v1 layerFrameInScaledCanvas:v25.origin.x, v25.origin.y];
  sub_100B667C0(v6, v7);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  id v12 = [v1 canvas];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 contentsScale];
    double v15 = v14;
  }
  else
  {
    double v15 = 2.0;
  }
  uint64_t v22 = *(void *)(v0 + 96);
  uint64_t ObjectType = swift_getObjectType();
  *(_DWORD *)(v0 + 16) = 1103626240;
  *(_OWORD *)(v0 + 32) = v20;
  *(CGFloat *)(v0 + 48) = width;
  *(CGFloat *)(v0 + 56) = height;
  *(void *)(v0 + 64) = v9;
  *(void *)(v0 + 72) = v11;
  *(double *)(v0 + 80) = v15;
  double v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 + 24) + **(int **)(v22 + 24));
  id v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v17;
  *id v17 = v0;
  v17[1] = sub_100B63964;
  uint64_t v18 = *(void *)(v0 + 96);
  return v21(v0 + 16, ObjectType, v18);
}

uint64_t sub_100B63964()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_100B71B38;
  }
  else {
    uint64_t v5 = sub_100B71B34;
  }
  return _swift_task_switch(v5, v4, v3);
}

void sub_100B63BBC(CGFloat *a1)
{
  CGFloat v2 = *a1;
  CGFloat v3 = a1[1];
  CGFloat v4 = a1[2];
  CGFloat v5 = a1[3];
  CGFloat v6 = a1[4];
  CGFloat v7 = a1[5];
  id v8 = [v1 layout];
  id v9 = [v8 originalPureGeometry];

  if (!v9)
  {
    __break(1u);
    goto LABEL_5;
  }
  [v9 fullTransform];
  long long v18 = *(_OWORD *)&t1.c;
  long long v20 = *(_OWORD *)&t1.a;
  long long v17 = *(_OWORD *)&t1.tx;

  *(_OWORD *)&t1.a = v20;
  *(_OWORD *)&t1.c = v18;
  *(_OWORD *)&t1.tdouble x = v17;
  t2.a = v2;
  t2.b = v3;
  t2.c = v4;
  t2.d = v5;
  t2.tdouble x = v6;
  t2.tdouble y = v7;
  CGAffineTransformConcat(&v22, &t1, &t2);
  long long v19 = *(_OWORD *)&v22.c;
  long long v21 = *(_OWORD *)&v22.a;
  tdouble x = v22.tx;
  tdouble y = v22.ty;
  id v12 = [v1 layout];
  type metadata accessor for CRLUSDZLayout();
  uint64_t v13 = (void *)swift_dynamicCastClassUnconditional();
  double v14 = self;
  *(_OWORD *)&t1.a = v21;
  *(_OWORD *)&t1.c = v19;
  t1.tdouble x = tx;
  t1.tdouble y = ty;
  id v15 = [v14 geometryFromFullTransform:&t1];
  id v16 = [v13 computeInfoGeometryFromPureLayoutGeometry:v15];

  if (!v16) {
LABEL_5:
  }
    __break(1u);
}

void sub_100B63E38()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1, v2);
  CGFloat v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  id v8 = (char *)&v32 - v7;
  uint64_t v34 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v10);
  uint64_t v33 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v35.receiver = v0;
  v35.super_class = v12;
  [super becameSelected];
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v15 = v13;
  id v16 = [v0 debugDescription];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v17;
  *(void *)(inited + 40) = v19;
  uint64_t v20 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v20, (uint64_t)"(USDZRep) [%{public}@] becameSelected()", 39, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v21 = (uint64_t)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v21, (uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    goto LABEL_7;
  }
  CGAffineTransform v22 = *(void **)v8;
  int v23 = v8[8];
  uint64_t v24 = sub_1005057FC(&qword_101693910);
  CGRect v25 = &v8[*(int *)(v24 + 64)];
  if (v23 == 1)
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v25, v34);
LABEL_7:
    sub_100B53C64();
    return;
  }
  uint64_t v26 = v24;
  uint64_t v27 = v33;
  uint64_t v28 = v25;
  uint64_t v29 = v34;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v33, v28, v34);
  unint64_t v30 = &v4[*(int *)(v26 + 64)];
  *(void *)CGFloat v4 = v22;
  v4[8] = 1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v30, v27, v29);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v31 = v22;
  sub_100B70DFC((uint64_t)v4, v21, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess();
  sub_100B53C64();
  sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v27, v29);
}

void sub_100B64294()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v2, v3);
  uint64_t v34 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5, v6);
  id v8 = (void **)((char *)&v33 - v7);
  uint64_t v35 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v10);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v36.receiver = v0;
  v36.super_class = v13;
  [super becameNotSelected];
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  double v14 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v16 = v14;
  id v17 = [v1 debugDescription];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v20;
  uint64_t v21 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v16, (uint64_t)&_mh_execute_header, v21, (uint64_t)"(USDZRep) [%{public}@] becameNotSelected()", 42, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  sub_100B5F7B0(1);
  sub_100DE1C38(0);
  uint64_t v22 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v22, (uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    goto LABEL_8;
  }
  int v23 = *v8;
  uint64_t v24 = sub_1005057FC(&qword_101693918);
  CGRect v25 = (char *)v8 + *(int *)(v24 + 48);
  swift_unknownObjectRelease();
  uint64_t v26 = (uint64_t *)((char *)v8 + *(int *)(v24 + 80));
  sub_100767658(*v26, v26[1], v26[2], v26[3], v26[4], v26[5]);
  uint64_t v27 = v35;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v25, v35);
  if (byte_101670308 != 1 || (sub_100B67994() & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v27);

LABEL_8:
    sub_100B53C64();
    goto LABEL_9;
  }
  uint64_t v29 = sub_1005057FC(&qword_101693910);
  uint64_t v30 = (uint64_t)v34;
  id v31 = (char *)v34 + *(int *)(v29 + 64);
  *uint64_t v34 = v23;
  *(unsigned char *)(v30 + 8) = 0;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v31, v12, v27);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v32 = v23;
  sub_100B70DFC(v30, v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess();
  sub_100B53C64();
  sub_100B6DB90(v30, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_100B55410();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v27);
LABEL_9:
  *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused) = 0;
  uint64_t v28 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter) == 1)
  {
    [self cancelPreviousPerformRequestsWithTarget:v1 selector:"hideMiniFormatterIfNecessary" object:0];
    *((unsigned char *)v1 + v28) = 0;
  }
}

void sub_100B647AC()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v38.receiver = v0;
  v38.super_class = v5;
  [super prepareForPencilKitSnapshotting];
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v6 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v8 = v6;
  id v9 = [v0 debugDescription];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v10;
  *(void *)(inited + 40) = v12;
  uint64_t v13 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v8, (uint64_t)&_mh_execute_header, v13, (uint64_t)"(USDZRep) [%{public}@] prepareForPencilKitSnapshotting()", 56, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy] != 4)
  {
    uint64_t v14 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
    swift_beginAccess();
    sub_100B6F9DC(v14, (uint64_t)v4, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v15 = (void *)*((void *)v4 + 1);

      id v16 = &v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
      unsigned __int8 v17 = v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
      if ((v17 & 0xC0) == 0x40)
      {
        uint64_t v18 = *(void *)v16;
        unsigned int v19 = *(unsigned __int8 *)(*(void *)v16 + 48);
        if ((v19 & 0x30) == 0)
        {
          uint64_t v21 = *(void **)(v18 + 32);
          uint64_t v20 = *(void **)(v18 + 40);
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = *(_OWORD *)(v18 + 16);
          *(void *)(v22 + 32) = v21;
          *(void *)(v22 + 40) = v15;
          *(unsigned char *)(v22 + 48) = -112;
          *(void *)id v16 = v22;
          v16[8] = 64;
          swift_unknownObjectRetain();
          sub_100B6F904(v21, v20, v19);
          swift_unknownObjectRetain();
          sub_100B6F904(v21, v20, v19);
          sub_100B6BEC8((id)v18, v17);
          id v23 = v15;
          swift_retain();
          sub_100B6BEFC((id)v18, v17);
          sub_100B52D24();
          swift_release();
          sub_100B6F970(v21, v20, v19);
          swift_unknownObjectRelease();
          sub_100B6BEFC((id)v18, v17);
        }
      }
      id v24 = [v0 layout];
      [v24 invalidateFrame];

      id v25 = [v0 layout];
      [v25 invalidateExteriorWrap];

      [v0 invalidateKnobPositions];
      [v0 setNeedsDisplay];
      id v26 = [v0 canvas];
      if (v26)
      {
        uint64_t v27 = v26;
        id v28 = [v0 layout];
        [v27 canvasInvalidatedForLayout:v28];
      }
      id v29 = [v0 interactiveCanvasController];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = [v29 layerHost];

        if (v31)
        {
          id v32 = [v31 canvasLayer];
          swift_unknownObjectRelease();
          if (v32)
          {
            [v32 setNeedsLayout];
          }
        }
      }
      id v33 = [v0 interactiveCanvasController];
      if (v33
        && (uint64_t v34 = v33, v35 = [v33 layerHost], v34, v35)
        && (id v36 = [v35 canvasLayer], swift_unknownObjectRelease(),
                                                                                        v36))
      {
        [v36 layoutIfNeeded];
      }
      else
      {
      }
    }
    else
    {
      sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    }
  }
}

id sub_100B64D00(char a1, CGFloat a2, CGFloat a3)
{
  uint64_t v4 = v3;
  *(void *)&v28.size.CGFloat height = &type metadata for CRLFeatureFlags;
  unint64_t v29 = sub_1005396A8();
  LOBYTE(v28.origin.x) = 21;
  char v8 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v28);
  if ((v8 & 1) == 0)
  {
    v27.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
    return [v27 containsPoint:a1 & 1 withPrecision:a2 v26.receiver, v26.super_class, v4, v27.super_class];
  }
  id v9 = [v4 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  id v10 = sub_1007BE314();
  id v11 = v10;

  if (v10)
  {
    id v12 = [v11 containsPoint:a1 & 1 withPrecision:a2, a3];

    return v12;
  }
  id v14 = [v4 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  sub_10072F00C((uint64_t)v30);
  swift_unknownObjectRelease();
  sub_10051B3EC((uint64_t)v30, (uint64_t)&v28, (uint64_t *)&unk_101676320);
  if ((v29 & 1) != 0
    || (CGFloat x = v28.origin.x, y = v28.origin.y, width = v28.size.width, height = v28.size.height, CGRectIsEmpty(v28)))
  {
    v26.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
    return [super containsPoint:a1 & 1 withPrecision:a2 v4 v26.super_class v27.receiver v27.super_class];
  }
  id v20 = [v4 layout];
  id result = [(id)swift_dynamicCastClassUnconditional() geometry];
  if (result)
  {
    uint64_t v21 = result;
    [result size];

    double v22 = sub_100064070();
    sub_100066AC4(v22, v23, v24, v25, x, y, width, height);
    v31.CGFloat x = a2;
    v31.CGFloat y = a3;
    return (id)CGRectContainsPoint(v32, v31);
  }
  __break(1u);
  return result;
}

id sub_100B65010(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v27.receiver = v1;
  v27.super_class = v7;
  [super didUpdateRenderable:a1];
  if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC0) == 0x40)
  {
    uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    unsigned int v10 = *(unsigned __int8 *)(v9 + 48);
    if ((v10 & 0x30) == 0x10)
    {
      id v11 = *(void **)(v9 + 32);
      id v12 = *(void **)(v9 + 40);
      long long v26 = *(_OWORD *)(v9 + 16);
      swift_unknownObjectRetain();
      sub_100B6F904(v11, v12, v10);
      sub_100B6BEFC(v12, v10 & 0xCF);
      if (qword_10166FB00 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v13 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117E810;
      id v15 = v13;
      id v16 = [v1 debugDescription];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      *(void *)(inited + 56) = &type metadata for String;
      *(void *)(inited + 64) = sub_100528BE4();
      *(void *)(inited + 32) = v17;
      *(void *)(inited + 40) = v19;
      uint64_t v20 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v15, (uint64_t)&_mh_execute_header, v20, (uint64_t)"(USDZRep) [%{public}@] showing pending view content, triggering another canvas layout...", 88, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      uint64_t v21 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v6, 1, 1, v21);
      type metadata accessor for MainActor();
      swift_unknownObjectRetain();
      id v22 = v11;
      double v23 = v1;
      uint64_t v24 = static MainActor.shared.getter();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = &protocol witness table for MainActor;
      *(void *)(v25 + 32) = v22;
      *(void *)(v25 + 40) = v23;
      *(_OWORD *)(v25 + 48) = v26;
      sub_1005912D0((uint64_t)v6, (uint64_t)&unk_101693CE8, v25);
      swift_unknownObjectRelease();

      return (id)swift_release();
    }
  }
  return result;
}

uint64_t sub_100B65318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[9] = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v7[10] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v7[11] = v8;
  v7[12] = *(void *)(v8 - 8);
  v7[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[14] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[15] = v10;
  v7[16] = v9;
  return _swift_task_switch(sub_100B65440, v10, v9);
}

uint64_t sub_100B65440()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_101686300 + dword_101686300);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100B65508;
  return v3(50000000000000000, 0, 0, 0, 1);
}

uint64_t sub_100B65508()
{
  uint64_t v3 = (void *)*v1;
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v4 = v2[13];
  uint64_t v5 = v2[12];
  uint64_t v6 = v2[11];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[15];
    uint64_t v8 = v3[16];
    uint64_t v9 = sub_100B71B44;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[15];
    uint64_t v8 = v3[16];
    uint64_t v9 = sub_100B6569C;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100B6569C()
{
  uint64_t v1 = v0[6];
  swift_release();
  uint64_t v2 = v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState;
  unsigned __int8 v3 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8);
  if ((v3 & 0xC0) == 0x40)
  {
    uint64_t v4 = *(void **)v2;
    unsigned int v5 = *(unsigned __int8 *)(*(void *)v2 + 48);
    if ((v5 & 0x30) == 0x10)
    {
      uint64_t v6 = v4[2];
      uint64_t v8 = (void *)v4[4];
      uint64_t v7 = (void *)v4[5];
      sub_100B6BEC8(*(id *)v2, v3);
      swift_unknownObjectRetain();
      sub_100B6F904(v8, v7, v5);
      sub_100B6BEFC(v7, v5 & 0xCF);
      sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
      char v9 = static NSObject.== infix(_:_:)();

      sub_100B6BEFC(v4, v3);
      if ((v9 & 1) == 0)
      {
LABEL_8:
        swift_unknownObjectRelease();
        goto LABEL_11;
      }
      uint64_t v10 = v0[10];
      uint64_t v11 = v0[6] + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
      swift_beginAccess();
      sub_100B6F9DC(v11, v10, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v13 = (id *)v0[10];
      if (EnumCaseMultiPayload == 2)
      {

        uint64_t v14 = sub_1005057FC(&qword_101693918);
        id v15 = (char *)v13 + *(int *)(v14 + 48);
        swift_unknownObjectRelease();
        id v16 = (uint64_t *)((char *)v13 + *(int *)(v14 + 80));
        unint64_t v17 = v16[5];
        if (!(v17 >> 62))
        {
          uint64_t v18 = v0[7];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v19 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v15, v19);
          if (v6 == v18)
          {
            uint64_t v24 = (void *)v0[5];
            uint64_t v23 = v0[6];
            uint64_t v25 = swift_allocObject();
            *(_OWORD *)(v25 + 16) = *(_OWORD *)(v0 + 7);
            *(void *)(v25 + 32) = v24;
            *(void *)(v25 + 40) = 0;
            *(unsigned char *)(v25 + 48) = 0;
            id v26 = *(id *)v2;
            *(void *)uint64_t v2 = v25;
            unsigned __int8 v27 = *(unsigned char *)(v2 + 8);
            *(unsigned char *)(v2 + 8) = 64;
            swift_unknownObjectRetain();
            id v28 = v24;
            swift_retain();
            sub_100B6BEFC(v26, v27);
            sub_100B52D24();
            swift_release();
            [v28 setAlpha:*(double *)(v23 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_externallySetAlpha)];
          }
          goto LABEL_8;
        }
        sub_100767658(*v16, v16[1], v16[2], v16[3], v16[4], v17);
        swift_unknownObjectRelease();
        uint64_t v20 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v15, v20);
      }
      else
      {
        swift_unknownObjectRelease();
        sub_100B6DB90((uint64_t)v13, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      }
    }
  }
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

void sub_100B65A98(void *a1, uint64_t a2, const char **a3, char a4, void (*a5)(void))
{
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  uint64_t v8 = *a3;
  char v9 = (char *)v11.receiver;
  [super v8];
  sub_100B55410();
  uint64_t v10 = *(void *)(*(void *)&v9[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                  + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v10 && (*(unsigned char *)(v10 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) & 1) != 0) {
    a5(a4 & 1);
  }
}

id sub_100B65B44()
{
  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 1;
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = (*(unsigned char *)(v1
                                                                                               + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFB) != 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [super dynamicResizeDidBegin];
  sub_100B55410();
  sub_100B62C78();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v3 && *(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1) {
    sub_100DE2078(0);
  }
  return v2;
}

void sub_100B65C64(uint64_t a1)
{
  id v2 = v1;
  v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isResizing] = 0;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [super dynamicResizeDidEndWithTracker:a1];
  id v4 = [v2 layout];
  [v4 invalidateExteriorWrap];

  sub_100B55410();
  if ((v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] & 0xC1) == 0x81)
  {
    objc_super v5 = sub_100B62704();
    id v6 = [v5 layer];

    if (v6)
    {
      id v7 = v6;
      sub_100B43D18(0.15);
    }
    else
    {
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"fadeSpinnerIn()", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2136);
    }
  }
  uint64_t v8 = *(void *)(*(void *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v8
    && *(unsigned char *)(v8 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1
    && v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] == 1)
  {
    sub_100DE1F64(1);
  }
}

void sub_100B65EB8()
{
  uint64_t v1 = v0;
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [super willBeginZooming];
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] = (*(unsigned char *)(v2
                                                                                               + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) & 0xFB) != 0;
  uint64_t v3 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v3)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1) {
      sub_100DE2078(0);
    }
  }
}

void sub_100B65FAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [super didEndZooming];
  uint64_t v1 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController]
                 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v1
    && *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1
    && v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobsWereVisibleBeforeDynamicOperation] == 1)
  {
    sub_100DE1F64(1);
  }
}

void sub_100B66114(void *a1, uint64_t a2, const char **a3, void (*a4)(id))
{
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  id v6 = *a3;
  id v7 = v9.receiver;
  [super v6];
  a4(v8);
}

id sub_100B662AC(void *a1, uint64_t a2, SEL *a3, void (*a4)(void))
{
  id v5 = [a1 *a3];
  a4(0);
  id v6 = (void *)swift_dynamicCastClassUnconditional();

  return v6;
}

uint64_t sub_100B66314()
{
  uint64_t v1 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v1 - 8, v2);
  objc_super v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for CRLAssetData();
  *(void *)&double v7 = __chkstk_darwin(v5 - 8, v6).n128_u64[0];
  objc_super v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v0 info:v7];
  type metadata accessor for CRLUSDZItem();
  objc_super v11 = (void *)swift_dynamicCastClassUnconditional();
  id v12 = [v0 info];
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v13 = (char *)[v11 store];
  uint64_t v14 = *(void *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  uint64_t v15 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  id v16 = *(void **)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v16)
  {
    id v17 = *(id *)&v13[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v33 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v18 = (char *)objc_allocWithZone(v33);
    uint64_t v34 = v11;
    uint64_t v19 = v18;
    swift_unknownObjectWeakInit();
    uint64_t v20 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v21 = swift_allocObject();
    id v22 = v13;
    uint64_t v23 = v19;
    id v35 = v10;
    uint64_t v24 = v23;
    uint64_t v25 = (_DWORD *)swift_slowAlloc();
    *uint64_t v25 = 0;
    *(void *)(v21 + 16) = v25;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v19[v20] = v21;
    objc_super v11 = v34;
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v26 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v24[v26] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v36.receiver = v24;
    v36.super_class = v33;
    id v27 = [super init];

    id v28 = *(void **)&v13[v15];
    *(void *)&v13[v15] = v27;
    id v17 = v27;

    id v16 = 0;
  }
  uint64_t v29 = *(os_unfair_lock_s **)(v14 + 16);
  id v30 = v16;
  os_unfair_lock_unlock(v29);

  uint64_t v31 = sub_100F453C8(v9, v11, v17);
  swift_unknownObjectRelease();

  sub_100B6DB90((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return v31;
}

void *sub_100B666F0()
{
  id v1 = [v0 interactiveCanvasController];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 editorController];

    if (v3)
    {
      if (type metadata accessor for CRLUSDZEditor()) {
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t ObjCClassFromMetadata = 0;
      }
      id v5 = [v3 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
      uint64_t v2 = (void *)swift_dynamicCastClass();

      if (!v2) {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_100B667C0(double a1, double a2)
{
  id v5 = [v2 canvas];
  double v6 = 1.0;
  double v7 = 1.0;
  if (v5)
  {
    uint64_t v8 = v5;
    [v5 viewScale];
    double v7 = v9;
  }
  double v10 = 1.0 / v7 * a1;
  id v11 = [v2 canvas];
  if (v11)
  {
    id v12 = v11;
    [v11 viewScale];
    double v6 = v13;
  }
  double v14 = 1.0 / v6 * a2;
  if (v10 * v14 >= 262144.0)
  {
    double v16 = sub_10006727C(v10, v14, 4194304.0);
    sub_10006538C(v16);
  }
  else
  {
    double v15 = sub_100067200(v10, v14, 512.0, 512.0);
    sub_1000674B8(v15);
  }
}

uint64_t sub_100B66924()
{
  id v1 = v0;
  Class v110 = (Class)type metadata accessor for CRLUSDZRep.PosterLoadingState(0);
  __chkstk_darwin(v110, v2);
  objc_super v4 = (id *)((char *)v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v99 - v7;
  uint64_t v9 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v107 = (uint64_t)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v109 = (char *)v99 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v104 = v19;
  uint64_t v105 = (char *)v99 - v18;
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v99 - v22;
  uint64_t v24 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v24, v25);
  id v27 = (id *)((char *)v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v28, v29);
  uint64_t v31 = (char *)v99 - v30;
  uint64_t v32 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess();
  sub_100B6F9DC(v32, (uint64_t)v31, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  sub_100B525E4(v27);
  sub_100B6DB90((uint64_t)v31, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v108 = v13;
  if (EnumCaseMultiPayload)
  {
    sub_100B6DB90((uint64_t)v27, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  }
  else
  {

    uint64_t v34 = (char *)v27 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
    id v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v106 = v12;
    uint64_t v102 = v35;
    unint64_t v103 = (char *)(v13 + 32);
    v35(v23, v34, v12);
    id v36 = [v1 info];
    type metadata accessor for CRLUSDZItem();
    uint64_t v37 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store));
    swift_unknownObjectRelease();
    uint64_t v38 = *(void *)&v37[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v38 + 16));
    uint64_t v39 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
    uint64_t v40 = *(void **)&v37[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    long long v41 = v23;
    if (v40)
    {
      id v42 = *(id *)&v37[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
    }
    else
    {
      Class v100 = (Class)type metadata accessor for CRLAssetManager();
      id v43 = (char *)objc_allocWithZone(v100);
      uint64_t v101 = v23;
      char v44 = v43;
      v99[1] = &v43[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
      swift_unknownObjectWeakInit();
      v99[0] = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
      type metadata accessor for CRLUnfairLock();
      uint64_t v45 = swift_allocObject();
      id v46 = v37;
      id v47 = v44;
      uint64_t v48 = (_DWORD *)swift_slowAlloc();
      *uint64_t v48 = 0;
      *(void *)(v45 + 16) = v48;
      atomic_thread_fence(memory_order_acq_rel);
      *(void *)&v44[v99[0]] = v45;
      *(void *)&v47[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
      uint64_t v49 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
      *(void *)&v47[v49] = [self mapTableWithKeyOptions:517 valueOptions:0];
      *(void *)&v47[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
      swift_unknownObjectWeakAssign();

      v111.receiver = v47;
      v111.super_class = v100;
      id v50 = [super init];

      uint64_t v51 = *(void **)&v37[v39];
      *(void *)&v37[v39] = v50;
      id v42 = v50;

      long long v41 = v101;
      uint64_t v40 = 0;
    }
    CGRect v52 = *(os_unfair_lock_s **)(v38 + 16);
    id v53 = v40;
    os_unfair_lock_unlock(v52);

    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    uint64_t v12 = v106;
    uint64_t v55 = v108;
    if (Strong)
    {
      uint64_t v56 = Strong;
      uint64_t v57 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v107, 1, 1, v57);
      uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
      uint64_t v101 = v1;
      id v59 = v105;
      v58(v105, v41, v12);
      id v60 = v4;
      uint64_t v61 = v8;
      id v62 = v42;
      uint64_t v63 = v41;
      unint64_t v64 = (*(unsigned __int8 *)(v55 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
      uint64_t v65 = (void *)swift_allocObject();
      v65[2] = 0;
      v65[3] = 0;
      v65[4] = v56;
      uint64_t v66 = (char *)v65 + v64;
      long long v41 = v63;
      id v42 = v62;
      uint64_t v8 = v61;
      objc_super v4 = v60;
      uint64_t v67 = v59;
      id v1 = v101;
      v102(v66, v67, v12);
      sub_1005912D0(v107, (uint64_t)&unk_101693C18, (uint64_t)v65);
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v12);
  }
  uint64_t v68 = (uint64_t)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_posterLoadingState];
  swift_beginAccess();
  sub_100B6F9DC(v68, (uint64_t)v8, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  sub_100B523F8(v4);
  sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  if (swift_getEnumCaseMultiPayload()) {
    return sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.PosterLoadingState);
  }

  uint64_t v70 = (char *)v4 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
  uint64_t v71 = v108;
  uint64_t v72 = *(void (**)(char *, char *))(v108 + 32);
  uint64_t v106 = v12;
  v72(v109, v70);
  id v73 = [v1 info];
  type metadata accessor for CRLUSDZItem();
  uint64_t v74 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                  + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_store));
  swift_unknownObjectRelease();
  uint64_t v75 = *(void *)&v74[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManagerLock];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v75 + 16));
  uint64_t v76 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager;
  uint64_t v77 = *(void **)&v74[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  if (v77)
  {
    id v78 = *(id *)&v74[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetManager];
  }
  else
  {
    Class v110 = (Class)type metadata accessor for CRLAssetManager();
    uint64_t v79 = (char *)objc_allocWithZone(v110);
    unint64_t v103 = &v79[OBJC_IVAR____TtC8Freeform15CRLAssetManager_store];
    swift_unknownObjectWeakInit();
    uint64_t v80 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_lock;
    type metadata accessor for CRLUnfairLock();
    uint64_t v81 = swift_allocObject();
    uint64_t v82 = v74;
    uint64_t v83 = v72;
    uint64_t v84 = v79;
    uint64_t v85 = (_DWORD *)swift_slowAlloc();
    *uint64_t v85 = 0;
    *(void *)(v81 + 16) = v85;
    atomic_thread_fence(memory_order_acq_rel);
    *(void *)&v79[v80] = v81;
    uint64_t v71 = v108;
    *(void *)&v84[OBJC_IVAR____TtC8Freeform15CRLAssetManager_assets] = _swiftEmptyDictionarySingleton;
    uint64_t v86 = OBJC_IVAR____TtC8Freeform15CRLAssetManager_owners;
    *(void *)&v84[v86] = [self mapTableWithKeyOptions:517 valueOptions:0];
    *(void *)&v84[OBJC_IVAR____TtC8Freeform15CRLAssetManager_garbageCollectionWorkItem] = 0;
    swift_unknownObjectWeakAssign();

    v112.receiver = v84;
    uint64_t v72 = v83;
    v112.super_class = v110;
    id v87 = [super init];

    unint64_t v88 = *(void **)&v74[v76];
    *(void *)&v74[v76] = v87;
    id v78 = v87;

    uint64_t v77 = 0;
  }
  id v89 = *(os_unfair_lock_s **)(v75 + 16);
  id v90 = v77;
  os_unfair_lock_unlock(v89);

  uint64_t v91 = swift_unknownObjectWeakLoadStrong();
  uint64_t v92 = v106;
  if (v91)
  {
    uint64_t v93 = v91;
    uint64_t v94 = type metadata accessor for TaskPriority();
    uint64_t v95 = v107;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v107, 1, 1, v94);
    int v96 = v105;
    (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v105, v109, v92);
    unint64_t v97 = (*(unsigned __int8 *)(v71 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
    uint64_t v98 = (void *)swift_allocObject();
    v98[2] = 0;
    v98[3] = 0;
    v98[4] = v93;
    ((void (*)(char *, char *, uint64_t))v72)((char *)v98 + v97, v96, v92);
    sub_1005912D0(v95, (uint64_t)&unk_101693C10, (uint64_t)v98);
    swift_release();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v71 + 8))(v109, v92);
}

void sub_100B672D8()
{
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive) == 1)
  {
    id v1 = [v0 interactiveCanvasController];
    if (v1)
    {
      uint64_t v2 = v1;
      *((unsigned char *)v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers) = 1;
      id v4 = [self defaultCenter];
      [v4 addObserver:v0 selector:"canvasWillScroll:" name:@"CRLCanvasWillScrollNotification" object:v2];
      [v4 addObserver:v0 selector:"canvasDidScroll:" name:@"CRLCanvasDidScrollNotification" object:v2];
      [v4 addObserver:v0 selector:"canvasWillScroll:" name:@"CRLCanvasWillZoomNotification" object:v2];
      id v3 = [v2 editorController];
      [v4 addObserver:v0 selector:"selectionPathDidChangeWithNotification:" name:@"CRLEditorControllerSelectionPathDidChangeNotification" object:v3];

      [v4 addObserver:v0 selector:"applicationDidEnterBackground" name:UIApplicationDidEnterBackgroundNotification object:0];
      [v4 addObserver:v0 selector:"resumeRendering" name:UIApplicationWillEnterForegroundNotification object:0];
      [v4 addObserver:v0 selector:"interruptRendering" name:UIApplicationProtectedDataWillBecomeUnavailable object:0];
    }
  }
}

void sub_100B674E4()
{
  if (v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] == 1)
  {
    v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_didAddNotificationCenterAddObservers] = 0;
    id v1 = [self defaultCenter];
    id v2 = [v0 interactiveCanvasController];
    [v1 removeObserver:v0 name:@"CRLCanvasWillScrollNotification" object:v2];
    [v1 removeObserver:v0 name:@"CRLCanvasDidScrollNotification" object:v2];
    [v1 removeObserver:v0 name:@"CRLCanvasWillZoomNotification" object:v2];
    if (v2 && (id v3 = [v2 editorController]) != 0)
    {
      uint64_t v5 = v3;
      sub_10050BF48(0, (unint64_t *)&unk_101693C00);
      uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
    }
    else
    {
      uint64_t v4 = 0;
    }
    [v1 removeObserver:v0 name:@"CRLEditorControllerSelectionPathDidChangeNotification" object:v4];
    swift_unknownObjectRelease();
    [v1 removeObserver:v0 name:UIApplicationDidEnterBackgroundNotification object:0];
    [v1 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];
    [v1 removeObserver:v0 name:UIApplicationProtectedDataDidBecomeAvailable object:0];
  }
}

uint64_t sub_100B676C4()
{
  uint64_t v1 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (void **)((char *)v22 - v7);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  swift_beginAccess();
  sub_100B6F9DC(v14, (uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_100B6DB90((uint64_t)v8, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  }
  v22[1] = v0;
  uint64_t v15 = *v8;
  uint64_t v16 = sub_1005057FC(&qword_101693918);
  uint64_t v17 = (char *)v8 + *(int *)(v16 + 48);
  swift_unknownObjectRelease();
  uint64_t v18 = (uint64_t *)((char *)v8 + *(int *)(v16 + 80));
  sub_100767658(*v18, v18[1], v18[2], v18[3], v18[4], v18[5]);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v17, v9);
  uint64_t v19 = &v4[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
  *(void *)uint64_t v4 = v15;
  v4[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v13, v9);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v20 = v15;
  sub_100B70DFC((uint64_t)v4, v14, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess();
  sub_100B53C64();
  sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100B67994()
{
  uint64_t v1 = v0;
  if (![v0 isSelectedIgnoringLocking]) {
    goto LABEL_6;
  }
  id v2 = [v0 interactiveCanvasController];
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  id v4 = [v2 infosForCurrentSelectionPath];
  uint64_t v5 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v5 + 16) != 1)
  {
    swift_bridgeObjectRelease();

LABEL_6:
    char v7 = 0;
    return v7 & 1;
  }
  id v6 = [v1 info];
  type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  sub_100B70710(&qword_101693BF8, (void (*)(uint64_t))type metadata accessor for CRLUSDZItem);
  AnyHashable.init<A>(_:)();
  char v7 = sub_1006E6200((uint64_t)v9, v5);
  swift_bridgeObjectRelease();

  sub_10050BFE0((uint64_t)v9);
  return v7 & 1;
}

void sub_100B67B70(CGContext *a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  [(CGContext *)&v11 drawInContext:a1];
  if (([v1 directlyManagesContentPlatformView] & 1) == 0)
  {
    uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState];
    unsigned __int8 v4 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8];
    sub_100B6BEC8(v3, v4);
    uint64_t v5 = (void *)sub_100B52A30((uint64_t)v3, v4);
    unsigned __int8 v7 = v6;
    sub_100B6BEFC(v3, v4);
    if (v7 >> 6)
    {
      if (v7 >> 6 != 2)
      {
LABEL_9:
        sub_100B6BEFC(v5, v7);
        return;
      }
      char v8 = v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_isInteractive];
      uint64_t v9 = v5;
      if (v8)
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2785, (uint64_t)"Should only try to draw the poster image if canvas is not interactive.", 70, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"draw(in:)", 9, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2785);
      }
      sub_100B67D70(v9, a1);
    }
    else
    {
      id v10 = v5;
      sub_100F9BFA8(a1);
    }
    sub_100B6BEFC(v5, v7);
    goto LABEL_9;
  }
}

void sub_100B67D70(CGImage *a1, CGContextRef c)
{
  uint64_t v3 = v2;
  CGContextSaveGState(c);
  [v3 naturalBounds];
  CGFloat Height = CGRectGetHeight(v18);
  CGContextTranslateCTM(c, 0.0, Height);
  CGContextScaleCTM(c, 1.0, -1.0);
  [v3 naturalBounds];
  CGFloat v8 = v7;
  [v3 naturalBounds];
  CGFloat v10 = v9;
  CGFloat Width = (double)(uint64_t)CGImageGetWidth(a1);
  CGFloat v12 = (double)(uint64_t)CGImageGetHeight(a1);
  [v3 naturalBounds];
  double v13 = CGRectGetWidth(v19);
  v20.origin.CGFloat x = v8;
  v20.origin.CGFloat y = v10;
  v20.size.CGFloat width = Width;
  v20.size.CGFloat height = v12;
  CGFloat v14 = v13 / CGRectGetWidth(v20);
  [v3 naturalBounds];
  double v15 = CGRectGetHeight(v21);
  v22.origin.CGFloat x = v8;
  v22.origin.CGFloat y = v10;
  v22.size.CGFloat width = Width;
  v22.size.CGFloat height = v12;
  CGFloat v16 = v15 / CGRectGetHeight(v22);
  CGContextSaveGState(c);
  CGContextScaleCTM(c, v14, v16);
  CGContextRef.draw(_:in:byTiling:)();
  CGContextRestoreGState(c);

  CGContextRestoreGState(c);
}

uint64_t sub_100B67ED4()
{
  v1[8] = v0;
  v1[9] = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v3;
  v1[14] = v2;
  return _swift_task_switch(sub_100B67FAC, v3, v2);
}

uint64_t sub_100B67FAC()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  v0[15] = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_100B6F9DC(v4, v1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = (void *)v0[11];
    v0[16] = *v5;
    unsigned __int8 v6 = (int *)sub_1005057FC(&qword_101693918);
    double v7 = (char *)v5 + v6[12];
    CGFloat v8 = (void *)((char *)v5 + v6[16]);
    v0[17] = *v8;
    uint64_t v9 = v8[1];
    CGFloat v10 = (void *)((char *)v5 + v6[20]);
    sub_100767658(*v10, v10[1], v10[2], v10[3], v10[4], v10[5]);
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
    uint64_t ObjectType = swift_getObjectType();
    CGRect v18 = (uint64_t (*)(uint64_t, uint64_t, __n128))(*(void *)(v9 + 48) + **(int **)(v9 + 48));
    double v13 = (void *)swift_task_alloc();
    v0[18] = v13;
    *double v13 = v0;
    v13[1] = sub_100B6829C;
    v14.n128_u32[0] = 1.0;
    return v18(ObjectType, v9, v14);
  }
  else
  {
    uint64_t v16 = v0[11];
    swift_release();
    sub_100B6DB90(v16, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"generatePosterImage()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2836, (uint64_t)"Attempted to generate poster image with invalid rendering state.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"generatePosterImage()", 21, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 2836);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17(0);
  }
}

uint64_t sub_100B6829C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v4[13];
    uint64_t v6 = v4[14];
    double v7 = sub_100B68450;
  }
  else
  {
    v4[20] = a1;
    uint64_t v5 = v4[13];
    uint64_t v6 = v4[14];
    double v7 = sub_100B683C4;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100B683C4()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 160);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100B68450()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)v0[16];
  uint64_t v3 = v0[15];
  uint64_t v4 = (void *)v0[10];
  uint64_t v5 = v0[8];
  swift_release();
  uint64_t v6 = (void *)((char *)v4 + *(int *)(sub_1005057FC(&qword_101693920) + 48));
  *uint64_t v4 = v2;
  *uint64_t v6 = v1;
  type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  id v7 = v2;
  swift_errorRetain();
  sub_100B70DFC((uint64_t)v4, v5 + v3, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  swift_endAccess();
  sub_100B53C64();
  sub_100B6DB90((uint64_t)v4, type metadata accessor for CRLUSDZRep.AssetLoadingState);

  swift_errorRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  CGFloat v8 = (uint64_t (*)(void))v0[1];
  return v8(0);
}

id sub_100B685C4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLUSDZRep(0);
  return [super dealloc];
}

uint64_t sub_100B686D8()
{
  return type metadata accessor for CRLUSDZRep(0);
}

uint64_t type metadata accessor for CRLUSDZRep(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016938F0);
}

uint64_t sub_100B68700()
{
  uint64_t result = type metadata accessor for CRLUSDZRep.PosterLoadingState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for CRLUSDZRep.AssetLoadingState(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLUSDZRep.PosterLoadingState(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101693AF0);
}

uint64_t type metadata accessor for CRLUSDZRep.AssetLoadingState(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101693998);
}

uint64_t sub_100B68880(void *a1, uint64_t a2)
{
  id v68 = a1;
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v4);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v12, v13);
  double v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (id *)((char *)&v60 - v18);
  __chkstk_darwin(v20, v21);
  uint64_t v66 = v2;
  uint64_t v22 = (uint64_t)v2 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
  uint64_t v24 = (char *)&v60 - v23;
  swift_beginAccess();
  sub_100B6F9DC(v22, (uint64_t)v24, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v61 = v15;
    id v62 = (uint64_t *)a2;
    unint64_t v64 = v24;
    sub_100B6F9DC((uint64_t)v24, (uint64_t)v19, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    id v63 = *v19;
    uint64_t v25 = v11;
    uint64_t v26 = (int *)sub_1005057FC(&qword_101693918);
    uint64_t v27 = v7;
    uint64_t v28 = v8;
    uint64_t v29 = (char *)v19 + v26[12];
    uint64_t v30 = (uint64_t *)((char *)v19 + v26[16]);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    Class v33 = (uint64_t *)((char *)v19 + v26[20]);
    uint64_t v34 = v28;
    sub_100767658(*v33, v33[1], v33[2], v33[3], v33[4], v33[5]);
    id v35 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    uint64_t v65 = v25;
    id v36 = v29;
    uint64_t v37 = v27;
    v35(v25, v36, v27);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(ObjectType, v32);
    LOBYTE(v25) = static UUID.== infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v6, v69);
    if (v25)
    {
      uint64_t v39 = (uint64_t)v61;
      uint64_t v40 = (char *)v61 + v26[12];
      uint64_t v41 = v37;
      id v42 = (void *)((char *)v61 + v26[16]);
      uint64_t v43 = (uint64_t)v61 + v26[20];
      id v44 = v63;
      *uint64_t v61 = v63;
      uint64_t v45 = *(void (**)(char *, char *))(v34 + 16);
      uint64_t v69 = v41;
      v45(v40, v65);
      *id v42 = v31;
      v42[1] = v32;
      id v46 = v62;
      sub_10076E5A4((uint64_t)v62, v43);
      swift_storeEnumTagMultiPayload();
      swift_beginAccess();
      id v68 = v44;
      swift_unknownObjectRetain();
      sub_100B6F8CC(v46);
      sub_100B70DFC(v39, v22, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      swift_endAccess();
      id v47 = v66;
      sub_100B53C64();
      sub_100B6DB90(v39, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      if (qword_10166FB00 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v48 = (void *)static OS_os_log.crlThreeDimensionalObjects;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      id v50 = v48;
      id v51 = [v47 debugDescription];
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v55 = sub_100528BE4();
      *(void *)(inited + 64) = v55;
      *(void *)(inited + 32) = v52;
      *(void *)(inited + 40) = v54;
      sub_10076E5A4((uint64_t)v46, (uint64_t)v70);
      sub_100B6F8CC(v46);
      uint64_t v56 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v55;
      *(void *)(inited + 72) = v56;
      *(void *)(inited + 80) = v57;
      uint64_t v58 = static os_log_type_t.debug.getter();
      sub_100BAC898((uint64_t)v50, (uint64_t)&_mh_execute_header, v58, (uint64_t)"(USDZRep) [%{public}@] renderer state changed %{public}@", 56, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v65, v69);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v65, v27);

      swift_unknownObjectRelease();
    }
    uint64_t v24 = v64;
  }
  return sub_100B6DB90((uint64_t)v24, type metadata accessor for CRLUSDZRep.AssetLoadingState);
}

uint64_t sub_100B68EB8(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  type metadata accessor for MainActor();
  v3[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B68F54, v5, v4);
}

uint64_t sub_100B68F54()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v1 = v0[3];
  swift_release();
  sub_100B68880(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_100B68FD0(void *a1)
{
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v89 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v4);
  uint64_t v85 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101693BE8);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v77 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v77 - v20;
  uint64_t v90 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v90, v22);
  uint64_t v86 = (id *)((char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24, v25);
  unint64_t v88 = (char *)&v77 - v26;
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (id *)((char *)&v77 - v29);
  uint64_t v31 = (objc_class *)type metadata accessor for CRLUSDZRep(0);
  v94.receiver = v1;
  v94.super_class = v31;
  id v87 = a1;
  [super addKnobsToArray:a1];
  uint64_t v92 = &type metadata for CRLFeatureFlags;
  unint64_t v93 = sub_1005396A8();
  v91[0] = 21;
  char v32 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v91);
  if ((v32 & 1) != 0 && *((unsigned char *)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingStrategy) != 3)
  {
    uint64_t v33 = (uint64_t)v1 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState;
    swift_beginAccess();
    sub_100B6F9DC(v33, (uint64_t)v30, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_100B6DB90((uint64_t)v30, type metadata accessor for CRLUSDZRep.AssetLoadingState);
      return;
    }
    uint64_t v83 = v33;

    uint64_t v34 = sub_1005057FC(&qword_101693918);
    uint64_t v84 = (char *)v30 + *(int *)(v34 + 48);
    swift_unknownObjectRelease();
    id v35 = (uint64_t *)((char *)v30 + *(int *)(v34 + 80));
    unint64_t v36 = v35[5];
    if (v36 >> 62)
    {
      sub_100767658(*v35, v35[1], v35[2], v35[3], v35[4], v36);
      uint64_t v42 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v84, v42);
      return;
    }
    uint64_t v80 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v37 = type metadata accessor for URL();
    uint64_t v38 = *(void *)(v37 - 8);
    id v78 = *(void (**)(char *))(v38 + 8);
    uint64_t v79 = v37;
    uint64_t v77 = v38 + 8;
    v78(v84);
    id v39 = [v1 interactiveCanvasController];
    if (v39)
    {
      uint64_t v40 = v39;
      unsigned int v41 = [v39 documentIsSharedReadOnly];
    }
    else
    {
      unsigned int v41 = 0;
    }
    char v43 = sub_100B67994();
    unsigned int v82 = v41;
    if ((v43 & 1) == 0)
    {
      LODWORD(v84) = 0;
      goto LABEL_19;
    }
    id v44 = [v1 interactiveCanvasController];
    if (v44)
    {
      uint64_t v45 = v44;
      id v46 = [v44 layerHost];

      if (v46)
      {
        if ([v46 respondsToSelector:"asiOSCVC"])
        {
          id v47 = [v46 asiOSCVC];
          unsigned int v48 = [v47 isCurrentlyInQuickSelectMode];
          swift_unknownObjectRelease();

          int v49 = v48 ^ 1;
LABEL_18:
          LODWORD(v84) = v49;
LABEL_19:
          id v81 = v1;
          id v50 = (char *)sub_100B66314();
          uint64_t v52 = *(void *)&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
          uint64_t v51 = *(void *)&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
          sub_10050F848(&v50[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v52);
          (*(void (**)(uint64_t, uint64_t))(v51 + 16))(v52, v51);
          NSString v53 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v54 = [v53 crl_pathUTI];

          if (v54)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            UTType.init(_:)();
            uint64_t v55 = v89;
          }
          else
          {
            uint64_t v55 = v89;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v21, 1, 1, v3);
          }

          static UTType.realityFile.getter();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v17, 0, 1, v3);
          uint64_t v56 = (uint64_t)&v9[*(int *)(v6 + 48)];
          sub_100522E9C((uint64_t)v21, (uint64_t)v9, (uint64_t *)&unk_101676160);
          sub_100522E9C((uint64_t)v17, v56, (uint64_t *)&unk_101676160);
          uint64_t v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
          if (v57((uint64_t)v9, 1, v3) == 1)
          {
            sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676160);
            sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676160);
            if (v57(v56, 1, v3) == 1)
            {
              sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101676160);
              if (!v84) {
                return;
              }
              char v58 = 1;
              goto LABEL_31;
            }
          }
          else
          {
            sub_100522E9C((uint64_t)v9, (uint64_t)v13, (uint64_t *)&unk_101676160);
            if (v57(v56, 1, v3) != 1)
            {
              uint64_t v60 = v89;
              uint64_t v61 = v85;
              (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v85, v56, v3);
              sub_100B70710((unint64_t *)&qword_101693BF0, (void (*)(uint64_t))&type metadata accessor for UTType);
              char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
              id v62 = *(void (**)(char *, uint64_t))(v60 + 8);
              v62(v61, v3);
              id v59 = (uint64_t *)&unk_101676160;
              sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676160);
              sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676160);
              v62(v13, v3);
LABEL_30:
              char v63 = (char)v84;
              sub_100522F00((uint64_t)v9, v59);
              if ((v63 & 1) == 0) {
                return;
              }
LABEL_31:
              if (v82)
              {
                unsigned int v64 = 0;
                id v65 = v81;
                uint64_t v66 = (uint64_t)v88;
              }
              else
              {
                id v65 = v81;
                uint64_t v66 = (uint64_t)v88;
                unsigned int v64 = [v81 isLocked] ^ 1;
              }
              sub_100B6F9DC(v83, v66, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              if (swift_getEnumCaseMultiPayload() == 2)
              {
                uint64_t v67 = v86;
                sub_100B6F9DC(v66, (uint64_t)v86, type metadata accessor for CRLUSDZRep.AssetLoadingState);

                uint64_t v68 = v80;
                uint64_t v69 = (char *)v67 + *(int *)(v80 + 48);
                swift_unknownObjectRelease();
                uint64_t v70 = (uint64_t *)((char *)v67 + *(int *)(v68 + 80));
                unint64_t v71 = v70[5];
                if (!(v71 >> 62))
                {
                  uint64_t v72 = *(void *)(v70[4] + 16);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v78)(v69, v79);
                  sub_100B6DB90(v66, type metadata accessor for CRLUSDZRep.AssetLoadingState);
                  if (!((v72 == 0) | v58 & 1))
                  {
                    if (v64) {
                      unsigned __int8 v73 = 2;
                    }
                    else {
                      unsigned __int8 v73 = 1;
                    }
                    goto LABEL_45;
                  }
                  if (!v64) {
                    return;
                  }
LABEL_41:
                  unsigned __int8 v73 = 0;
LABEL_45:
                  uint64_t v74 = v87;
                  sub_100DE3040(v65, v73);
                  unint64_t v75 = swift_bridgeObjectRetain();
                  sub_100590C68(v75);
                  swift_bridgeObjectRelease();
                  Class isa = Array._bridgeToObjectiveC()().super.isa;
                  swift_bridgeObjectRelease();
                  [v74 addObjectsFromArray:isa];

                  return;
                }
                sub_100767658(*v70, v70[1], v70[2], v70[3], v70[4], v71);
                ((void (*)(char *, uint64_t))v78)(v69, v79);
              }
              sub_100B6DB90(v66, type metadata accessor for CRLUSDZRep.AssetLoadingState);
              if ((v64 & 1) == 0) {
                return;
              }
              goto LABEL_41;
            }
            sub_100522F00((uint64_t)v17, (uint64_t *)&unk_101676160);
            sub_100522F00((uint64_t)v21, (uint64_t *)&unk_101676160);
            (*(void (**)(char *, uint64_t))(v89 + 8))(v13, v3);
          }
          char v58 = 0;
          id v59 = &qword_101693BE8;
          goto LABEL_30;
        }
        swift_unknownObjectRelease();
      }
    }
    int v49 = 1;
    goto LABEL_18;
  }
}

void sub_100B69AA8(char *a1)
{
  uint64_t v2 = v1;
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  if (static NSObject.== infix(_:_:)())
  {
    __n128 v25 = *(__n128 *)&a1[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession];
    id v4 = [self mainBundle];
    NSString v5 = String._bridgeToObjectiveC()();
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v4 localizedStringForKey:v5 value:v6 table:v7];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    sub_100B69D84(v9, v11, v25);
    swift_bridgeObjectRelease();
    if (qword_10166FB00 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v12 = (void *)static OS_os_log.crlThreeDimensionalObjects;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    id v14 = v12;
    id v15 = [v2 debugDescription];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v19 = sub_100528BE4();
    *(void *)(inited + 64) = v19;
    *(void *)(inited + 32) = v16;
    *(void *)(inited + 40) = v18;
    id v20 = [a1 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v19;
    *(void *)(inited + 72) = v21;
    *(void *)(inited + 80) = v23;
    uint64_t v24 = static os_log_type_t.debug.getter();
    sub_100BAC898((uint64_t)v14, (uint64_t)&_mh_execute_header, v24, (uint64_t)"(USDZRep) [%{public}@] committed rotation (%@)", 46, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();
  }
}

void sub_100B69D84(uint64_t a1, uint64_t a2, __n128 a3)
{
  __n128 v19 = a3;
  uint64_t v6 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v3 interactiveCanvasController];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 editorController];

    if (v12)
    {
      if (type metadata accessor for CRLUSDZEditor()) {
        uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      }
      else {
        uint64_t ObjCClassFromMetadata = 0;
      }
      [v12 mostSpecificCurrentEditorOfClass:ObjCClassFromMetadata];
      uint64_t v14 = swift_dynamicCastClass();

      if (v14)
      {
        *((unsigned char *)v3 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 1;
        uint64_t v15 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
        type metadata accessor for MainActor();
        id v16 = v3;
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v17 = static MainActor.shared.getter();
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v17;
        *(void *)(v18 + 24) = &protocol witness table for MainActor;
        *(void *)(v18 + 32) = v16;
        *(void *)(v18 + 40) = v14;
        *(__n128 *)(v18 + 48) = v19;
        *(void *)(v18 + 64) = a1;
        *(void *)(v18 + 72) = a2;
        sub_1006D9104((uint64_t)v9, (uint64_t)&unk_101693D88, v18);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_100B69FB4(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7, unint64_t a8)
{
  v8[3].n128_u64[0] = a7;
  v8[3].n128_u64[1] = a8;
  v8[1] = a1;
  v8[2].n128_u64[0] = a5;
  v8[2].n128_u64[1] = a6;
  sub_1005057FC(&qword_101693D90);
  uint64_t v9 = swift_task_alloc();
  v8[4].n128_u64[0] = v9;
  type metadata accessor for CRLAssetData();
  v8[4].n128_u64[1] = swift_task_alloc();
  v8[5].n128_u64[0] = type metadata accessor for MainActor();
  v8[5].n128_u64[1] = static MainActor.shared.getter();
  id v10 = (void *)swift_task_alloc();
  v8[6].n128_u64[0] = (unint64_t)v10;
  *id v10 = v8;
  v10[1] = sub_100B6A0DC;
  return sub_100B6A898(v9);
}

uint64_t sub_100B6A0DC()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[14] = v4;
  v2[15] = v3;
  if (v0) {
    NSString v5 = sub_100B6A790;
  }
  else {
    NSString v5 = sub_100B6A23C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B6A23C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101693DA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    sub_100522F00(v1, &qword_101693D90);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    unint64_t v5 = *(void *)(v0 + 56);
    uint64_t v6 = *(void **)(v0 + 32);
    uint64_t v7 = (double *)(v1 + *(int *)(v2 + 48));
    double v8 = *v7;
    double v9 = v7[1];
    double v10 = v7[2];
    double v11 = v7[3];
    sub_100B711AC(v1, *(void *)(v0 + 72), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    *(void *)(v0 + 128) = [v6 info];
    type metadata accessor for CRLUSDZItem();
    unint64_t v12 = swift_dynamicCastClassUnconditional();
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100B6A448;
    unint64_t v14 = *(void *)(v0 + 72);
    __n128 v15 = *(__n128 *)(v0 + 16);
    unint64_t v16 = *(void *)(v0 + 48);
    return sub_1007E2534(v14, v12, v16, v5, v15, v8, v9, v10, v11);
  }
}

uint64_t sub_100B6A448()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    unint64_t v5 = sub_100B6A804;
  }
  else {
    unint64_t v5 = sub_100B6A5A0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B6A5A0()
{
  uint64_t v1 = (void *)v0[4];
  swift_release();
  id v2 = [v1 layout];
  type metadata accessor for CRLUSDZLayout();
  uint64_t v3 = swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource;
  if (*(unsigned char *)(v3 + 16))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidEnd()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 334, (uint64_t)"Unexpected dynamic pose end.", 28, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidEnd()", 25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 334);
  }
  else
  {
    *(void *)uint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    *(unsigned char *)(v3 + 16) = 1;
  }
  uint64_t v4 = v0[4];

  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController);
  sub_100DE1D0C();
  uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (v6) {
    char v7 = *(unsigned char *)(v6 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying);
  }
  else {
    char v7 = 0;
  }
  uint64_t v8 = v0[9];
  uint64_t v9 = v0[4];
  sub_100DE1F64(v7);
  sub_100B6DB90(v8, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  *(unsigned char *)(v9 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_hideKnobsDueToBoundsUpdate) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  double v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100B6A790()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B6A804()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_release();
  sub_100B6DB90(v1, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B6A898(uint64_t a1)
{
  v2[37] = a1;
  v2[38] = v1;
  v2[39] = type metadata accessor for CRLUSDZAssetDataStruct(0);
  v2[40] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_10167D2B0);
  v2[41] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLAssetData();
  v2[42] = v3;
  v2[43] = *(void *)(v3 - 8);
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  sub_1005057FC(&qword_101693D90);
  v2[47] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[48] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[49] = v5;
  v2[50] = v4;
  return _swift_task_switch(sub_100B6AA38, v5, v4);
}

uint64_t sub_100B6AA38()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v29 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v4 = *(void **)(v0 + 304);
  uint64_t v27 = *(void *)(v0 + 312);
  uint64_t v28 = *(void *)(v0 + 328);
  swift_beginAccess();
  uint64_t v5 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  id v7 = v5;
  id v8 = [v4 debugDescription];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v9;
  *(void *)(inited + 40) = v11;
  uint64_t v12 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v12, (uint64_t)"(USDZRep) [%{public}@] calculatePosterImageAndBoundingRect()", 60, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101693DA0);
  *(void *)(v0 + 408) = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
  *(void *)(v0 + 416) = v15;
  *(void *)(v0 + 424) = (v14 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v26 = v15;
  v15(v1, 1, 1, v13);
  id v16 = [v4 info];
  *(void *)(v0 + 432) = type metadata accessor for CRLUSDZItem();
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100522E9C(v3 + *(int *)(v27 + 20), v28, (uint64_t *)&unk_10167D2B0);
  sub_100B6DB90(v3, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v28, 1, v29) == 1)
  {
    sub_100522F00(*(void *)(v0 + 328), (uint64_t *)&unk_10167D2B0);
  }
  else
  {
    uint64_t v17 = *(void **)(v0 + 304);
    sub_100B711AC(*(void *)(v0 + 328), *(void *)(v0 + 368), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v18 = [v17 info];
    swift_dynamicCastClassUnconditional();
    sub_10072F00C(v0 + 168);
    swift_unknownObjectRelease();
    sub_10051B3EC(v0 + 168, v0 + 128, (uint64_t *)&unk_101676320);
    if (*(unsigned char *)(v0 + 160) == 1)
    {
      sub_100B6DB90(*(void *)(v0 + 368), (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 368);
      uint64_t v19 = *(void *)(v0 + 376);
      long long v21 = *(_OWORD *)(v0 + 144);
      *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 128);
      *(_OWORD *)(v0 + 224) = v21;
      sub_100522F00(v19, &qword_101693D90);
      uint64_t v22 = (_OWORD *)(v19 + *(int *)(v13 + 48));
      sub_100B711AC(v20, v19, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      long long v23 = *(_OWORD *)(v0 + 224);
      *uint64_t v22 = *(_OWORD *)(v0 + 208);
      v22[1] = v23;
      v26(v19, 0, 1, v13);
    }
  }
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100B6AEFC;
  return sub_100B67ED4();
}

uint64_t sub_100B6AEFC(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  uint64_t v4 = *(void *)(v2 + 392);
  return _swift_task_switch(sub_100B6B024, v4, v3);
}

uint64_t sub_100B6B024()
{
  uint64_t v1 = *(void *)(v0 + 448);
  if (v1)
  {
    *(void *)(v0 + 456) = [*(id *)(v0 + 304) info];
    uint64_t v2 = swift_dynamicCastClassUnconditional();
    id v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016922E8 + dword_1016922E8);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100B6B24C;
    return v8(v1, v2);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 296);
    swift_release();
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3058, (uint64_t)"Unable to generate poster image.", 32, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3058);
    sub_10051B3EC(v5, v6, &qword_101693D90);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100B6B24C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 472) = a1;
  *(void *)(v4 + 480) = v1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v5 = *(void *)(v3 + 400);
  uint64_t v6 = *(void *)(v3 + 392);
  if (v1) {
    id v7 = sub_100B6B814;
  }
  else {
    id v7 = sub_100B6B3AC;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100B6B3AC()
{
  uint64_t v1 = *(void *)(v0 + 472);
  swift_release();
  sub_1005498A4(v1 + OBJC_IVAR____TtC8Freeform8CRLAsset_storage, v0 + 88);
  sub_1005057FC(&qword_101693DB0);
  type metadata accessor for CRLAssetBackedAssetStorage();
  int v2 = swift_dynamicCast();
  uint64_t v3 = *(void **)(v0 + 472);
  if (v2)
  {
    uint64_t v5 = *(void *)(v0 + 352);
    uint64_t v4 = *(void *)(v0 + 360);
    uint64_t v6 = *(void **)(v0 + 304);
    sub_100B6F9DC(*(void *)(v0 + 288) + OBJC_IVAR____TtC8Freeform26CRLAssetBackedAssetStorage_assetData, v5, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    swift_release();
    sub_100B711AC(v5, v4, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    id v7 = [v6 layout];
    type metadata accessor for CRLUSDZLayout();
    swift_dynamicCastClassUnconditional();
    id v8 = sub_1007BCC70(v3);

    if (v8)
    {
      [v8 visibleBounds];
      CGFloat x = v44.origin.x;
      CGFloat y = v44.origin.y;
      CGFloat width = v44.size.width;
      CGFloat height = v44.size.height;
      v45.origin.CGFloat x = CGRectNull.origin.x;
      v45.origin.CGFloat y = CGRectNull.origin.y;
      v45.size.CGFloat width = CGRectNull.size.width;
      v45.size.CGFloat height = CGRectNull.size.height;
      BOOL v13 = CGRectEqualToRect(v44, v45);
      uint64_t v14 = *(void **)(v0 + 472);
      __n128 v15 = *(void **)(v0 + 448);
      id v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
      uint64_t v17 = *(void *)(v0 + 408);
      uint64_t v18 = *(void *)(v0 + 376);
      uint64_t v19 = *(void *)(v0 + 360);
      if (v13)
      {
        uint64_t v42 = *(void *)(v0 + 296);
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3073, (uint64_t)"Unable to calculate bounding rect of object from given pose values.", 67, 2u, (uint64_t)_swiftEmptyArrayStorage);
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"calculatePosterImageAndBoundingRect()", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZRep.swift", 81, 2, 3073);

        sub_100B6DB90(v19, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        sub_100522F00(v18, &qword_101693D90);
        v16(v42, 1, 1, v17);
      }
      else
      {
        uint64_t v30 = *(void *)(v0 + 296);
        [*(id *)(v0 + 304) naturalBounds];
        sub_100066B80(x, y, width, height);
        uint64_t v32 = v31;
        uint64_t v34 = v33;
        uint64_t v36 = v35;
        uint64_t v38 = v37;

        sub_100522F00(v18, &qword_101693D90);
        id v39 = (void *)(v30 + *(int *)(v17 + 48));
        sub_100B711AC(v19, v30, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
        *id v39 = v32;
        v39[1] = v34;
        v39[2] = v36;
        v39[3] = v38;
        v16(v30, 0, 1, v17);
      }
    }
    else
    {
      uint64_t v24 = *(void **)(v0 + 448);
      __n128 v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
      uint64_t v26 = *(void *)(v0 + 408);
      uint64_t v27 = *(void *)(v0 + 376);
      uint64_t v28 = *(void *)(v0 + 360);
      uint64_t v29 = *(void *)(v0 + 296);

      sub_100B6DB90(v28, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
      sub_100522F00(v27, &qword_101693D90);
      v25(v29, 1, 1, v26);
    }
  }
  else
  {
    uint64_t v20 = *(void **)(v0 + 448);
    long long v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v22 = *(void *)(v0 + 408);
    uint64_t v23 = *(void *)(v0 + 296);
    sub_100522F00(*(void *)(v0 + 376), &qword_101693D90);

    v21(v23, 1, 1, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_100B6B814()
{
  uint64_t v1 = (void *)v0[56];
  uint64_t v2 = v0[47];
  swift_release();

  sub_100522F00(v2, &qword_101693D90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100B6B95C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLUSDZAssetDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[0] = type metadata accessor for CRLAssetData();
  *(void *)&double v7 = __chkstk_darwin(v38[0], v6).n128_u64[0];
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v0 info:v7];
  type metadata accessor for CRLUSDZItem();
  uint64_t v11 = **(void **)(swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData);
  (*(void (**)(void))(v11 + 408))();
  uint64_t v12 = sub_10088BE6C();
  uint64_t v14 = v13;
  swift_unknownObjectRelease();
  __n128 v15 = sub_100F61B70(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v17 = *((void *)v15 + 2);
  unint64_t v16 = *((void *)v15 + 3);
  if (v17 >= v16 >> 1) {
    __n128 v15 = sub_100F61B70((double *)(v16 > 1), v17 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v17 + 1;
  uint64_t v18 = &v15[2 * v17];
  *((void *)v18 + 4) = v12;
  *((void *)v18 + 5) = v14;
  id v19 = [v1 info];
  uint64_t v20 = *(uint64_t (**)(uint64_t))(**(void **)(swift_dynamicCastClassUnconditional()
                                                        + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData)
                                          + 360);
  uint64_t v21 = swift_retain();
  uint64_t v22 = v20(v21);
  uint64_t v24 = v23;
  swift_unknownObjectRelease();
  swift_release();
  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = &selRef_i_join;
  }
  else
  {
    unint64_t v26 = *((void *)v15 + 2);
    unint64_t v25 = *((void *)v15 + 3);
    if (v26 >= v25 >> 1) {
      __n128 v15 = sub_100F61B70((double *)(v25 > 1), v26 + 1, 1, v15);
    }
    uint64_t v27 = &selRef_i_join;
    *((void *)v15 + 2) = v26 + 1;
    uint64_t v28 = &v15[2 * v26];
    *((void *)v28 + 4) = v22;
    *((void *)v28 + 5) = v24;
  }
  id v29 = [v1 v27[246]];
  swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  swift_retain();
  sub_1005057FC((uint64_t *)&unk_10167D2A0);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  swift_release();
  sub_100B6F9DC((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B6DB90((uint64_t)v5, type metadata accessor for CRLUSDZAssetDataStruct);
  swift_unknownObjectRelease();
  uint64_t v30 = &v9[*(int *)(v38[0] + 20)];
  uint64_t v32 = *(void *)v30;
  uint64_t v31 = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  sub_100B6DB90((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  unint64_t v34 = *((void *)v15 + 2);
  unint64_t v33 = *((void *)v15 + 3);
  if (v34 >= v33 >> 1) {
    __n128 v15 = sub_100F61B70((double *)(v33 > 1), v34 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v34 + 1;
  uint64_t v35 = &v15[2 * v34];
  *((void *)v35 + 4) = v32;
  *((void *)v35 + 5) = v31;
  v38[1] = v15;
  sub_1005057FC((uint64_t *)&unk_1016773F0);
  sub_10056547C();
  uint64_t v36 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t initializeBufferWithCopyOfBuffer for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100B6BEC8(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_100B6BEC8(id result, unsigned __int8 a2)
{
  int v2 = a2 >> 6;
  if (v2 == 2) {
    return result;
  }
  if (v2 != 1)
  {
    if (a2 >> 6) {
      return result;
    }
    return result;
  }
  return (id)swift_retain();
}

void destroy for CRLUSDZRep.RenderingState(uint64_t a1)
{
}

void sub_100B6BEFC(id a1, unsigned __int8 a2)
{
  int v2 = a2 >> 6;
  if (v2 == 2)
  {
LABEL_4:

    return;
  }
  if (v2 != 1)
  {
    if (a2 >> 6) {
      return;
    }
    goto LABEL_4;
  }
  swift_release();
}

uint64_t assignWithCopy for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_100B6BEC8(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_100B6BEFC(v5, v6);
  return a1;
}

uint64_t assignWithTake for CRLUSDZRep.RenderingState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_100B6BEFC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.RenderingState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.RenderingState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100B6C05C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_100B6C078(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)uint64_t result = a2 - 3;
    *(unsigned char *)(result + 8) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingState()
{
  return &type metadata for CRLUSDZRep.RenderingState;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100B6C160);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 4;
  unsigned int v9 = v7 - 4;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x100B6C248);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_100B6C270(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 4) {
    return v1 - 3;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100B6C284(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingStrategy()
{
  return &type metadata for CRLUSDZRep.RenderingStrategy;
}

char *sub_100B6C2A4(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    a1 = &v13[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        unsigned int v7 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v8 = v7;
        uint64_t v9 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
        id v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v40 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        id v41 = v40;
        uint64_t v42 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
        uint64_t v43 = &a1[v42];
        CGRect v44 = &a2[v42];
        uint64_t v45 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        __n128 v15 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v16 = v15;
        unint64_t v17 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v18 = v17[12];
        id v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        uint64_t v21 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        *(_OWORD *)&a1[v17[16]] = *(_OWORD *)&a2[v17[16]];
        uint64_t v22 = v17[20];
        uint64_t v23 = (uint64_t *)&a1[v22];
        uint64_t v24 = (uint64_t *)&a2[v22];
        uint64_t v25 = *v24;
        unint64_t v26 = v24[1];
        uint64_t v27 = v24[2];
        uint64_t v28 = v24[3];
        uint64_t v29 = v24[4];
        unint64_t v30 = v24[5];
        uint64_t v31 = v24[6];
        swift_unknownObjectRetain();
        sub_1007673E8(v25, v26, v27, v28, v29, v30);
        *uint64_t v23 = v25;
        v23[1] = v26;
        long long v23[2] = v27;
        v23[3] = v28;
        v23[4] = v29;
        v23[5] = v30;
        v23[6] = v31;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v32 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v33 = v32;
        uint64_t v34 = *(int *)(sub_1005057FC(&qword_101693920) + 48);
        uint64_t v35 = &a1[v34];
        uint64_t v36 = &a2[v34];
        uint64_t v37 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          uint64_t v46 = *(void *)v36;
          swift_errorRetain();
          *(void *)uint64_t v35 = v46;
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          uint64_t v39 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101693A40);
}

uint64_t sub_100B6C6A0(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:

      unsigned int v3 = (char *)a1 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
      goto LABEL_10;
    case 1:

      unsigned int v3 = (char *)a1 + *(int *)(sub_1005057FC(&qword_101693910) + 64);
      uint64_t v4 = type metadata accessor for URL();
      goto LABEL_11;
    case 2:

      uint64_t v5 = sub_1005057FC(&qword_101693918);
      uint64_t v6 = (char *)a1 + *(int *)(v5 + 48);
      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      swift_unknownObjectRelease();
      id v8 = (uint64_t *)((char *)a1 + *(int *)(v5 + 80));
      uint64_t v9 = *v8;
      unint64_t v10 = v8[1];
      uint64_t v11 = v8[2];
      uint64_t v12 = v8[3];
      uint64_t v13 = v8[4];
      unint64_t v14 = v8[5];
      return sub_100767658(v9, v10, v11, v12, v13, v14);
    case 3:

      unsigned int v3 = (char *)a1 + *(int *)(sub_1005057FC(&qword_101693920) + 48);
      type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2 || result == 1)
      {
        return swift_errorRelease();
      }
      else if (!result)
      {
LABEL_10:
        uint64_t v4 = type metadata accessor for UUID();
LABEL_11:
        __n128 v15 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);
        return v15(v3, v4);
      }
      return result;
    default:
      return result;
  }
}

char *sub_100B6C8A8(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v7 = v6;
      uint64_t v8 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
      uint64_t v9 = &a1[v8];
      unint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      goto LABEL_13;
    case 1u:
      uint64_t v12 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      id v13 = v12;
      uint64_t v14 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
      __n128 v15 = &a1[v14];
      id v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      goto LABEL_13;
    case 2u:
      uint64_t v18 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v19 = v18;
      uint64_t v20 = (int *)sub_1005057FC(&qword_101693918);
      uint64_t v21 = v20[12];
      uint64_t v22 = &a1[v21];
      uint64_t v23 = &a2[v21];
      uint64_t v24 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      *(_OWORD *)&a1[v20[16]] = *(_OWORD *)&a2[v20[16]];
      uint64_t v25 = v20[20];
      unint64_t v26 = (uint64_t *)&a1[v25];
      uint64_t v27 = (uint64_t *)&a2[v25];
      uint64_t v28 = *v27;
      unint64_t v29 = v27[1];
      uint64_t v30 = v27[2];
      uint64_t v31 = v27[3];
      uint64_t v32 = v27[4];
      unint64_t v33 = v27[5];
      uint64_t v34 = v27[6];
      swift_unknownObjectRetain();
      sub_1007673E8(v28, v29, v30, v31, v32, v33);
      *unint64_t v26 = v28;
      v26[1] = v29;
      v26[2] = v30;
      v26[3] = v31;
      v26[4] = v32;
      v26[5] = v33;
      v26[6] = v34;
      goto LABEL_13;
    case 3u:
      uint64_t v35 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v36 = v35;
      uint64_t v37 = *(int *)(sub_1005057FC(&qword_101693920) + 48);
      uint64_t v38 = &a1[v37];
      uint64_t v39 = &a2[v37];
      uint64_t v40 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        uint64_t v43 = *(void *)v39;
        swift_errorRetain();
        *(void *)uint64_t v38 = v43;
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v42 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
        swift_storeEnumTagMultiPayload();
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_100B6CC34(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v7 = v6;
        uint64_t v8 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
        uint64_t v9 = &a1[v8];
        unint64_t v10 = &a2[v8];
        uint64_t v11 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        goto LABEL_14;
      case 1u:
        uint64_t v12 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        id v13 = v12;
        uint64_t v14 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
        __n128 v15 = &a1[v14];
        id v16 = &a2[v14];
        uint64_t v17 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        goto LABEL_14;
      case 2u:
        uint64_t v18 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v19 = v18;
        uint64_t v20 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v21 = v20[12];
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        uint64_t v24 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *(_OWORD *)&a1[v20[16]] = *(_OWORD *)&a2[v20[16]];
        uint64_t v25 = v20[20];
        unint64_t v26 = (uint64_t *)&a1[v25];
        uint64_t v27 = (uint64_t *)&a2[v25];
        uint64_t v28 = *v27;
        unint64_t v29 = v27[1];
        uint64_t v30 = v27[2];
        uint64_t v31 = v27[3];
        uint64_t v32 = v27[4];
        unint64_t v33 = v27[5];
        uint64_t v34 = v27[6];
        swift_unknownObjectRetain();
        sub_1007673E8(v28, v29, v30, v31, v32, v33);
        *unint64_t v26 = v28;
        v26[1] = v29;
        v26[2] = v30;
        v26[3] = v31;
        v26[4] = v32;
        v26[5] = v33;
        v26[6] = v34;
        goto LABEL_14;
      case 3u:
        uint64_t v35 = *(void **)a2;
        *(void *)a1 = *(void *)a2;
        id v36 = v35;
        uint64_t v37 = *(int *)(sub_1005057FC(&qword_101693920) + 48);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          uint64_t v43 = *(void *)v39;
          swift_errorRetain();
          *(void *)uint64_t v38 = v43;
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          uint64_t v42 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
          swift_storeEnumTagMultiPayload();
        }
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_100B6CFE4(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(void *)a1 = *(void *)a2;
      uint64_t v6 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
      id v7 = &a1[v6];
      uint64_t v8 = &a2[v6];
      uint64_t v9 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_9;
    case 1u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      uint64_t v10 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_9;
    case 2u:
      *(void *)a1 = *(void *)a2;
      uint64_t v14 = (int *)sub_1005057FC(&qword_101693918);
      uint64_t v15 = v14[12];
      id v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)&a1[v14[16]] = *(_OWORD *)&a2[v14[16]];
      uint64_t v19 = v14[20];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      *((void *)v20 + 6) = *((void *)v21 + 6);
      long long v22 = *((_OWORD *)v21 + 2);
      long long v23 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
      *((_OWORD *)v20 + 2) = v22;
      *(_OWORD *)uint64_t v20 = v23;
      goto LABEL_9;
    case 3u:
      *(void *)a1 = *(void *)a2;
      uint64_t v24 = *(int *)(sub_1005057FC(&qword_101693920) + 48);
      uint64_t v25 = &a1[v24];
      unint64_t v26 = &a2[v24];
      uint64_t v27 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        uint64_t v28 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
        swift_storeEnumTagMultiPayload();
      }
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_100B6D2C8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        uint64_t v6 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
        id v7 = &a1[v6];
        uint64_t v8 = &a2[v6];
        uint64_t v9 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_10;
      case 1u:
        *(void *)a1 = *(void *)a2;
        a1[8] = a2[8];
        uint64_t v10 = *(int *)(sub_1005057FC(&qword_101693910) + 64);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        uint64_t v13 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_10;
      case 2u:
        *(void *)a1 = *(void *)a2;
        uint64_t v14 = (int *)sub_1005057FC(&qword_101693918);
        uint64_t v15 = v14[12];
        id v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        uint64_t v18 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)&a1[v14[16]] = *(_OWORD *)&a2[v14[16]];
        uint64_t v19 = v14[20];
        uint64_t v20 = &a1[v19];
        uint64_t v21 = &a2[v19];
        *((void *)v20 + 6) = *((void *)v21 + 6);
        long long v22 = *((_OWORD *)v21 + 2);
        long long v23 = *(_OWORD *)v21;
        *((_OWORD *)v20 + 1) = *((_OWORD *)v21 + 1);
        *((_OWORD *)v20 + 2) = v22;
        *(_OWORD *)uint64_t v20 = v23;
        goto LABEL_10;
      case 3u:
        *(void *)a1 = *(void *)a2;
        uint64_t v24 = *(int *)(sub_1005057FC(&qword_101693920) + 48);
        uint64_t v25 = &a1[v24];
        unint64_t v26 = &a2[v24];
        uint64_t v27 = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          uint64_t v28 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
          swift_storeEnumTagMultiPayload();
        }
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100B6D5D0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v8;
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      uint64_t v3 = *(void *)(result - 8) + 64;
      swift_getTupleTypeLayout3();
      uint64_t v10 = &v7;
      v5[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[5] = v3;
      v5[6] = &unk_1011A9AB8;
      v5[7] = &unk_1011A9AD0;
      swift_getTupleTypeLayout();
      uint64_t v11 = &v6;
      uint64_t result = type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError(319);
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v12 = v5;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100B6D75C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *a2;
      swift_errorRetain();
      *a1 = v10;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100B6D8AC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    return swift_errorRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for UUID();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100B6D954(void *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *a2;
    swift_errorRetain();
    *a1 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_100B6DA60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100B6DB90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_100B6DBF4(void *a1, const void *a2, uint64_t a3)
{
  return sub_100B6ED28(a1, a2, a3, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
}

uint64_t sub_100B6DC0C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_100B6DCA0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = &v14[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v15 = *a2;
        *(void *)a1 = *a2;
        id v16 = v15;
        uint64_t v17 = *(int *)(sub_1005057FC(&qword_101693A78) + 48);
        uint64_t v18 = &a1[v17];
        uint64_t v19 = (uint64_t *)((char *)a2 + v17);
        uint64_t v20 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
        int v21 = swift_getEnumCaseMultiPayload();
        if (v21 == 1)
        {
          uint64_t v27 = *v19;
          swift_errorRetain();
          *(void *)uint64_t v18 = v27;
          swift_storeEnumTagMultiPayload();
        }
        else if (v21)
        {
          memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          uint64_t v22 = type metadata accessor for UUID();
          (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_14;
      case 1:
        long long v23 = *a2;
        uint64_t v24 = a2[1];
        *(void *)a1 = v23;
        *((void *)a1 + 1) = v24;
        uint64_t v25 = v23;
        unint64_t v26 = v24;
        goto LABEL_14;
      case 0:
        uint64_t v8 = *a2;
        *(void *)a1 = *a2;
        uint64_t v9 = v8;
        uint64_t v10 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101693B98);
}

void sub_100B6DF00(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {

    uint64_t v3 = a1 + *(int *)(sub_1005057FC(&qword_101693A78) + 48);
    type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    int v4 = swift_getEnumCaseMultiPayload();
    if (v4 != 1)
    {
      if (v4) {
        return;
      }
      goto LABEL_7;
    }
    swift_errorRelease();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload) {
        return;
      }

      uint64_t v3 = a1 + *(int *)(sub_1005057FC(&qword_101693908) + 48);
LABEL_7:
      uint64_t v5 = type metadata accessor for UUID();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v3, v5);
      return;
    }

    uint64_t v7 = *(void **)(a1 + 8);
  }
}

void **sub_100B6E02C(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v13 = *a2;
      *a1 = *a2;
      id v14 = v13;
      uint64_t v15 = *(int *)(sub_1005057FC(&qword_101693A78) + 48);
      id v16 = (void **)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1)
      {
        uint64_t v25 = *v17;
        swift_errorRetain();
        *id v16 = v25;
        swift_storeEnumTagMultiPayload();
      }
      else if (v19)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v20 = type metadata accessor for UUID();
        (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_12;
    case 1:
      int v21 = *a2;
      uint64_t v22 = a2[1];
      *a1 = v21;
      a1[1] = v22;
      id v23 = v21;
      id v24 = v22;
      goto LABEL_12;
    case 0:
      uint64_t v7 = *a2;
      *a1 = *a2;
      id v8 = v7;
      uint64_t v9 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void **sub_100B6E228(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v13 = *a2;
        *a1 = *a2;
        id v14 = v13;
        uint64_t v15 = *(int *)(sub_1005057FC(&qword_101693A78) + 48);
        id v16 = (void **)((char *)a1 + v15);
        uint64_t v17 = (uint64_t *)((char *)a2 + v15);
        uint64_t v18 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 1)
        {
          uint64_t v25 = *v17;
          swift_errorRetain();
          *id v16 = v25;
          swift_storeEnumTagMultiPayload();
        }
        else if (v19)
        {
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          uint64_t v20 = type metadata accessor for UUID();
          (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_13;
      case 1:
        int v21 = *a2;
        *a1 = *a2;
        uint64_t v22 = a2[1];
        a1[1] = v22;
        id v23 = v21;
        id v24 = v22;
        goto LABEL_13;
      case 0:
        uint64_t v7 = *a2;
        *a1 = *a2;
        id v8 = v7;
        uint64_t v9 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100B6E450(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v11 = *(int *)(sub_1005057FC(&qword_101693A78) + 48);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
    id v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100B6E5F0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v11 = *(int *)(sub_1005057FC(&qword_101693A78) + 48);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(sub_1005057FC(&qword_101693908) + 48);
      id v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100B6E7B4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    uint64_t v6 = &unk_1011A9AB8;
    uint64_t result = type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v7 = &v3;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100B6E8B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *a2;
      swift_errorRetain();
      *a1 = v10;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100B6E9D8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_errorRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for UUID();
    char v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100B6EA78(void *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *a2;
    swift_errorRetain();
    *a1 = v8;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *sub_100B6EB58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100B6EC5C(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100B6ED10(void *a1, const void *a2, uint64_t a3)
{
  return sub_100B6ED28(a1, a2, a3, type metadata accessor for CRLUSDZRep.PosterLoadingState.LoadingError);
}

void *sub_100B6ED28(void *a1, const void *a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (a1 != a2)
  {
    sub_100B6DB90((uint64_t)a1, a4);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100B6EDF0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100B6EE80()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  int v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CRLUSDZRep.AssetLoadingState(0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = 0xE100000000000000;
  uint64_t v11 = 117;
  switch(v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState + 8] >> 6)
  {
    case 1:
      int v12 = (*(unsigned __int8 *)(*(void *)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_renderingState] + 48) >> 4) & 3;
      unint64_t v13 = 0xE200000000000000;
      uint64_t v14 = 22128;
      if (v12 != 1)
      {
        uint64_t v14 = 77;
        unint64_t v13 = 0xE100000000000000;
      }
      if (v12) {
        uint64_t v11 = v14;
      }
      else {
        uint64_t v11 = 86;
      }
      if (v12) {
        unint64_t v10 = v13;
      }
      else {
        unint64_t v10 = 0xE100000000000000;
      }
      break;
    case 2:
      uint64_t v11 = 80;
      break;
    case 3:
      uint64_t v11 = 110;
      break;
    default:
      break;
  }
  uint64_t v15 = (uint64_t)&v0[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_assetLoadingState];
  swift_beginAccess();
  sub_100B6F9DC(v15, (uint64_t)v9, type metadata accessor for CRLUSDZRep.AssetLoadingState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = *(char **)v9;
      LODWORD(v104) = v9[8];
      uint64_t v105 = 0;
      unint64_t v106 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      swift_bridgeObjectRelease();
      uint64_t v105 = v11;
      unint64_t v106 = v10;
      v31._countAndFlagsBits = 3825967;
      v31._object = (void *)0xE300000000000000;
      String.append(_:)(v31);
      uint64_t v32 = &v30[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      unint64_t v33 = v30;
      uint64_t v34 = *(void *)&v30[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v35 = *((void *)v32 + 4);
      sub_10050F848(v32, v34);
      (*(void (**)(uint64_t, uint64_t))(v35 + 24))(v34, v35);
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v36 = static String._fromSubstring(_:)();
      uint64_t v38 = v37;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      v39._countAndFlagsBits = v36;
      v39._object = v38;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._countAndFlagsBits = 0x526C2F64276C642FLL;
      v40._object = (void *)0xE90000000000003ALL;
      String.append(_:)(v40);
      if (v104) {
        uint64_t v41 = 89;
      }
      else {
        uint64_t v41 = 78;
      }
      uint64_t v42 = &v9[*(int *)(sub_1005057FC(&qword_101693910) + 64)];
      v43._countAndFlagsBits = v41;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);

      goto LABEL_39;
    case 2u:
      CGRect v44 = *(char **)v9;
      uint64_t v45 = sub_1005057FC(&qword_101693918);
      uint64_t v46 = &v9[*(int *)(v45 + 64)];
      uint64_t v48 = *(void *)v46;
      uint64_t v47 = *((void *)v46 + 1);
      int v49 = (uint64_t *)&v9[*(int *)(v45 + 80)];
      uint64_t v50 = *v49;
      unint64_t v95 = v49[1];
      uint64_t v94 = v49[2];
      uint64_t v99 = v49[3];
      uint64_t v100 = v47;
      uint64_t v97 = v49[4];
      uint64_t v98 = v50;
      unint64_t v52 = v49[5];
      uint64_t v51 = v49[6];
      unint64_t v101 = v52;
      uint64_t v102 = v45;
      uint64_t v96 = v51;
      uint64_t v105 = v11;
      unint64_t v106 = v10;
      v53._countAndFlagsBits = 3825967;
      v53._object = (void *)0xE300000000000000;
      String.append(_:)(v53);
      id v104 = v44;
      uint64_t v55 = *(void *)&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v54 = *(void *)&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 32];
      sub_10050F848(&v44[OBJC_IVAR____TtC8Freeform8CRLAsset_storage], v55);
      (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v55, v54);
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v56 = static String._fromSubstring(_:)();
      char v58 = v57;
      swift_bridgeObjectRelease();
      id v59 = *(void (**)(char *, uint64_t))(v2 + 8);
      v59(v5, v1);
      v60._countAndFlagsBits = v56;
      v60._object = v58;
      String.append(_:)(v60);
      swift_bridgeObjectRelease();
      v61._countAndFlagsBits = 3830319;
      v61._object = (void *)0xE300000000000000;
      String.append(_:)(v61);
      uint64_t ObjectType = swift_getObjectType();
      char v63 = *(void (**)(uint64_t))(v100 + 8);
      uint64_t v103 = v48;
      v63(ObjectType);
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v64 = static String._fromSubstring(_:)();
      uint64_t v66 = v65;
      swift_bridgeObjectRelease();
      v59(v5, v1);
      v67._countAndFlagsBits = v64;
      v67._object = v66;
      String.append(_:)(v67);
      swift_bridgeObjectRelease();
      v68._countAndFlagsBits = 47;
      v68._object = (void *)0xE100000000000000;
      String.append(_:)(v68);
      if (v101 >> 62)
      {
        if (v101 >> 62 == 1)
        {
          sub_100767658(v98, v95, v94, v99, v97, v101);
          unint64_t v69 = 0xE300000000000000;
          uint64_t v70 = 7500389;
        }
        else
        {
          unint64_t v85 = v94 | v95;
          uint64_t v86 = v97 | v96;
          unint64_t v69 = 0xE300000000000000;
          if (v101 != 0x8000000000000000 || v85 | v98 | v99 | v86)
          {
            BOOL v87 = v101 == 0x8000000000000000;
            uint64_t v88 = v85 | v99 | v86;
            BOOL v90 = v98 == 1 && v88 == 0;
            if (v87 && v90) {
              uint64_t v70 = 7431538;
            }
            else {
              uint64_t v70 = 1684107116;
            }
            if (!v87 || !v90) {
              unint64_t v69 = 0xE400000000000000;
            }
          }
          else
          {
            uint64_t v70 = 7563620;
          }
        }
      }
      else
      {
        sub_100767658(v98, v95, v94, v99, v97, v101);
        unint64_t v69 = 0xE400000000000000;
        uint64_t v70 = 1684956530;
      }
      uint64_t v42 = &v9[*(int *)(v102 + 48)];
      unint64_t v91 = v69;
      String.append(_:)(*(Swift::String *)&v70);

      swift_unknownObjectRelease();
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v29 = v105;
      uint64_t v92 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8))(v42, v92);
      break;
    case 3u:
      unint64_t v71 = *(char **)v9;
      uint64_t v72 = (uint64_t)&v9[*(int *)(sub_1005057FC(&qword_101693920) + 48)];
      uint64_t v105 = v11;
      unint64_t v106 = v10;
      v73._countAndFlagsBits = 3825967;
      v73._object = (void *)0xE300000000000000;
      String.append(_:)(v73);
      uint64_t v74 = &v71[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      unint64_t v75 = v71;
      uint64_t v76 = *(void *)&v71[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v77 = *((void *)v74 + 4);
      sub_10050F848(v74, v76);
      (*(void (**)(uint64_t, uint64_t))(v77 + 24))(v76, v77);
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v78 = static String._fromSubstring(_:)();
      uint64_t v80 = v79;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
      v81._countAndFlagsBits = v78;
      v81._object = v80;
      String.append(_:)(v81);
      swift_bridgeObjectRelease();
      v82._countAndFlagsBits = 1920099631;
      v82._object = (void *)0xE400000000000000;
      String.append(_:)(v82);

      uint64_t v29 = v105;
      sub_100B6DB90(v72, type metadata accessor for CRLUSDZRep.AssetLoadingState.LoadingError);
      break;
    case 4u:
      swift_bridgeObjectRelease();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v83 = swift_allocObject();
      *(_OWORD *)(v83 + 16) = xmmword_10117E810;
      *(void *)(v83 + 56) = type metadata accessor for CRLUSDZRep(0);
      *(void *)(v83 + 64) = sub_100B70710(&qword_101693BE0, (void (*)(uint64_t))type metadata accessor for CRLUSDZRep);
      *(void *)(v83 + 32) = v0;
      uint64_t v84 = v0;
      uint64_t v29 = String.init(format:_:)();
      break;
    default:
      id v16 = *(char **)v9;
      uint64_t v17 = &v9[*(int *)(sub_1005057FC(&qword_101693908) + 48)];
      uint64_t v105 = v11;
      unint64_t v106 = v10;
      v18._countAndFlagsBits = 3825967;
      v18._object = (void *)0xE300000000000000;
      String.append(_:)(v18);
      int v19 = &v16[OBJC_IVAR____TtC8Freeform8CRLAsset_storage];
      uint64_t v20 = v16;
      uint64_t v21 = *(void *)&v16[OBJC_IVAR____TtC8Freeform8CRLAsset_storage + 24];
      uint64_t v22 = *((void *)v19 + 4);
      sub_10050F848(v19, v21);
      (*(void (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      UUID.uuidString.getter();
      String.index(_:offsetBy:)();
      String.subscript.getter();
      swift_bridgeObjectRelease();
      uint64_t v23 = static String._fromSubstring(_:)();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      unint64_t v26 = *(void (**)(char *, uint64_t))(v2 + 8);
      v26(v5, v1);
      v27._countAndFlagsBits = v23;
      v27._object = v25;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      v28._countAndFlagsBits = 7103535;
      v28._object = (void *)0xE300000000000000;
      String.append(_:)(v28);

      uint64_t v29 = v105;
      v26(v17, v1);
      break;
  }
  return v29;
}

uint64_t sub_100B6F8C0()
{
  return sub_100B52F48(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t *sub_100B6F8CC(uint64_t *a1)
{
  return a1;
}

id sub_100B6F904(id result, void *a2, unsigned int a3)
{
  int v4 = (a3 >> 4) & 3;
  if (v4 == 2)
  {
LABEL_4:
    return result;
  }
  if (v4 != 1)
  {
    if (v4) {
      return result;
    }
    goto LABEL_4;
  }
  unsigned __int8 v6 = a3 & 0xCF;
  id v7 = result;
  return sub_100B6BEC8(a2, v6);
}

void sub_100B6F970(void *a1, void *a2, unsigned int a3)
{
  int v4 = (a3 >> 4) & 3;
  if (v4 == 2)
  {
LABEL_4:

    return;
  }
  if (v4 != 1)
  {
    if (v4) {
      return;
    }
    goto LABEL_4;
  }
  unsigned __int8 v6 = a3 & 0xCF;

  sub_100B6BEFC(a2, v6);
}

uint64_t sub_100B6F9DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B6FA44(uint64_t a1, id a2, uint64_t a3, char a4)
{
  if ((a4 & 0xC0) != 0x40) {
    goto LABEL_8;
  }
  uint64_t v6 = a3;
  unsigned int v7 = *(unsigned __int8 *)(a3 + 48);
  if ((v7 & 0x30) != 0x20 || *(void *)(a3 + 16) != a1) {
    goto LABEL_8;
  }
  unint64_t v10 = *(void **)(a3 + 32);
  uint64_t v9 = *(void **)(a3 + 40);
  swift_unknownObjectRetain();
  sub_100B6F904(v10, v9, v7);
  id v11 = [v10 layer];
  sub_100B6F970(v10, v9, v7);
  swift_unknownObjectRelease();

  if (v11 == a2)
  {
    swift_retain();
  }
  else
  {
LABEL_8:
    id v12 = [objc_allocWithZone((Class)CRLCanvasRenderable) initWithCALayer:a2];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = &off_101512748;
    *(void *)(v6 + 32) = v12;
    *(void *)(v6 + 40) = 0;
    *(unsigned char *)(v6 + 48) = 32;
    swift_unknownObjectRetain();
  }
  return v6;
}

uint64_t sub_100B6FB78(uint64_t a1, id a2, uint64_t a3, char a4)
{
  if ((a4 & 0xC0) != 0x40) {
    goto LABEL_8;
  }
  uint64_t v6 = a3;
  unsigned int v7 = *(unsigned __int8 *)(a3 + 48);
  if ((v7 & 0x30) != 0x20 || *(void *)(a3 + 16) != a1) {
    goto LABEL_8;
  }
  unint64_t v10 = *(void **)(a3 + 32);
  uint64_t v9 = *(void **)(a3 + 40);
  swift_unknownObjectRetain();
  sub_100B6F904(v10, v9, v7);
  id v11 = [v10 layer];
  sub_100B6F970(v10, v9, v7);
  swift_unknownObjectRelease();

  if (v11 == a2)
  {
    swift_retain();
  }
  else
  {
LABEL_8:
    id v12 = [objc_allocWithZone((Class)CRLCanvasRenderable) initWithCALayer:a2];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = a1;
    *(void *)(v6 + 24) = &off_101512CD0;
    *(void *)(v6 + 32) = v12;
    *(void *)(v6 + 40) = 0;
    *(unsigned char *)(v6 + 48) = 32;
    swift_unknownObjectRetain();
  }
  return v6;
}

uint64_t sub_100B6FCAC(uint64_t a1, void *a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a4 & 0xC0) != 0x40) {
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void **)(a3 + 32);
  unsigned int v10 = *(unsigned __int8 *)(a3 + 48);
  int v11 = (v10 >> 4) & 3;
  if (v11)
  {
    if (v11 != 1) {
      goto LABEL_8;
    }
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    id v12 = v9;
    char v13 = static NSObject.== infix(_:_:)();

    if ((v13 & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v14 = *(void **)(a3 + 40);
    sub_10050BF48(0, (unint64_t *)&qword_1016725F0);
    id v15 = v9;
    char v16 = static NSObject.== infix(_:_:)();
    sub_100B6F970(v9, v14, v10);
    if ((v16 & 1) == 0)
    {
LABEL_8:
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a1;
      *(void *)(v17 + 24) = &off_1015361D0;
      *(void *)(v17 + 32) = a2;
      *(void *)(v17 + 40) = a3;
      *(unsigned char *)(v17 + 48) = a4 | 0x10;
      swift_retain();
      id v18 = a2;
      goto LABEL_9;
    }
  }
  uint64_t v17 = a3;
  if (v8 != a1) {
    goto LABEL_8;
  }
LABEL_9:
  sub_100B6BEC8((id)a3, a4);
  return v17;
}

id sub_100B6FE0C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (!v5)
  {
LABEL_5:
    unsigned int v10 = *(void **)(a3 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_rotationKnob);
    if (v10)
    {
      sub_10050BF48(0, (unint64_t *)&qword_101672E50);
      id v6 = v10;
      if (static NSObject.== infix(_:_:)())
      {
        int v11 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLUSDZRotationKnobTracker());
        id v12 = a2;
        id v9 = sub_100B70634(v12, (uint64_t)v6, v11);

        goto LABEL_8;
      }
    }
    return 0;
  }
  sub_10050BF48(0, (unint64_t *)&qword_101672E50);
  id v6 = v5;
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {

    goto LABEL_5;
  }
  unsigned int v7 = (objc_class *)type metadata accessor for CRLUSDZPlayPauseKnobTracker();
  id v8 = objc_allocWithZone(v7);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = &off_101525928;
  *(void *)&long long v15 = a2;
  sub_10053974C(&v15, (uint64_t)v8 + OBJC_IVAR____TtC8Freeform27CRLUSDZPlayPauseKnobTracker_delegate);
  v14.receiver = v8;
  v14.super_class = v7;
  [super initWithRep:a2 knob:v6];
LABEL_8:

  return v9;
}

void sub_100B6FF8C(void *a1)
{
  uint64_t v2 = v1;
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  int v4 = (void *)static OS_os_log.crlThreeDimensionalObjects;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
  id v6 = v4;
  id v7 = [v2 debugDescription];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  *(void *)(inited + 56) = &type metadata for String;
  unint64_t v11 = sub_100528BE4();
  *(void *)(inited + 64) = v11;
  *(void *)(inited + 32) = v8;
  *(void *)(inited + 40) = v10;
  id v12 = [a1 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = v15;
  uint64_t v16 = static os_log_type_t.debug.getter();
  sub_100BAC898((uint64_t)v6, (uint64_t)&_mh_execute_header, v16, (uint64_t)"(USDZRep) [%{public}@] begin rotation (%@)", 42, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v17 = [v2 layout];
  type metadata accessor for CRLUSDZLayout();
  swift_dynamicCastClassUnconditional();
  sub_1007BDFBC();

  uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  uint64_t v19 = OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState;
  if ((*(unsigned __int8 *)(v18 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) == 4)
  {
    uint64_t v20 = *(void *)(v18 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    if (v20 && *(unsigned char *)(v20 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1)
    {
      sub_100DE1F64(1);
      sub_100B60B88(1);
    }
    else
    {
      switch(*(unsigned char *)(v18 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState))
      {
        case 1:
        case 2:
          [self cancelPreviousPerformRequestsWithTarget:v18 selector:"hideWithImmediately:" object:0];
          break;
        case 3:
          [self cancelPreviousPerformRequestsWithTarget:v18 selector:"hideWithImmediately:" object:0];
          *(unsigned char *)(v18 + v19) = 2;
          break;
        default:
          sub_100DE25CC(0);
          break;
      }
    }
  }
}

void sub_100B7027C(uint64_t a1)
{
  uint64_t v2 = v1;
  id v4 = [v2 layout];
  type metadata accessor for CRLUSDZLayout();
  uint64_t v5 = swift_dynamicCastClassUnconditional() + OBJC_IVAR____TtC8Freeform13CRLUSDZLayout_orientationSource;
  if (*(unsigned char *)(v5 + 16))
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323, (uint64_t)"Unexpected dynamic pose change.", 31, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v13) = 2;
    unint64_t v11 = "Unexpected dynamic pose change.";
    uint64_t v12 = 31;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"dynamicPoseChangeDidUpdateToValue(_:)", 37, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUSDZLayout.swift", 84, 2, 323);
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession + 8);
    *(void *)uint64_t v5 = *(void *)(a1
                              + OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession);
    *(void *)(v5 + 8) = v6;
    *(unsigned char *)(v5 + 16) = 0;
    id v7 = sub_1007BCBA0();
    if (v7)
    {
      id v8 = v7;
      [v7 processChangedProperty:50];

      id v4 = v8;
    }
  }

  uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController];
  if ((*(unsigned __int8 *)(v9 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) != 4)
  {
    sub_100DE2078(1);
    uint64_t v10 = *(void *)(v9 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
    if (v10)
    {
      if (*(unsigned char *)(v10 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) == 1) {
        sub_100B60D3C();
      }
    }
  }
  id v14 = [v2 interactiveCanvasController:v11, v12, v13];
  [v14 layoutIfNeeded];
}

void sub_100B70484(char a1)
{
  if (a1)
  {
    uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused];
    if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] == 1) {
      sub_100B5FE84();
    }
    else {
      sub_100B5F45C();
    }
    uint64_t v4 = OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter;
    if ((v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] & 1) == 0)
    {
      [v1 performSelector:"hideMiniFormatterIfNecessary" withObject:0 afterDelay:3.25];
      v1[v4] = 1;
    }
    goto LABEL_9;
  }
  sub_100B601D8();
  v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_animationIsPaused] = 1;
  uint64_t v3 = &v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter];
  if (v1[OBJC_IVAR____TtC8Freeform10CRLUSDZRep_waitingToHideMiniFormatter] == 1)
  {
    [self cancelPreviousPerformRequestsWithTarget:v1 selector:"hideMiniFormatterIfNecessary" object:0];
LABEL_9:
    *uint64_t v3 = 0;
  }
  sub_100DE1F64(a1 & 1);
}

uint64_t sub_100B7057C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform10CRLUSDZRep_knobController);
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_playPauseKnob);
  if (!v2 || *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform20CRLUSDZPlayPauseKnob_isPlaying) != 1) {
    return 0;
  }
  if ((*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8Freeform21CRLUSDZKnobController_visibilityState) | 4) == 4)
  {
    uint64_t v3 = 1;
    sub_100DE1F64(1);
    sub_100B60B88(1);
  }
  else
  {
    sub_100DE2078(0);
    sub_100B60D3C();
    return 1;
  }
  return v3;
}

id sub_100B70634(void *a1, uint64_t a2, char *a3)
{
  uint64_t v6 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingUnscaledCanvasPosition];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  id v7 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_lastUnscaledCanvasPosition];
  *(void *)id v7 = 0;
  *((void *)v7 + 1) = 0;
  id v8 = &a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_totalRotationDeltaForRotateSession];
  *(void *)id v8 = 0;
  *((void *)v8 + 1) = 0;
  *(_OWORD *)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_startingOrientationForRotateSession] = xmmword_10117FB70;
  *(_OWORD *)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_currentOrientationForRotateSession] = xmmword_10117FB70;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = &off_101525900;
  *(void *)&long long v11 = a1;
  sub_10053974C(&v11, (uint64_t)&a3[OBJC_IVAR____TtC8Freeform26CRLUSDZRotationKnobTracker_delegate]);
  v10.receiver = a3;
  v10.super_class = (Class)type metadata accessor for CRLUSDZRotationKnobTracker();
  return [super initWithRep:a1 knob:a2];
}

uint64_t sub_100B70710(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B7075C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100528D08;
  return sub_100AE3FB8(a1, v5, v6, v7, v8);
}

uint64_t sub_100B70860(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100B5EA58(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100B70940(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100528488;
  return sub_100B5EA58(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100B70A1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100B70A2C(uint64_t a1, uint64_t a2)
{
  char v6 = *(unsigned char *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100528488;
  return sub_100B5FA0C(a1, a2, v6);
}

uint64_t sub_100B70AE0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B70BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100528D08;
  return sub_100B5D6FC(a1, a2, v7, v8);
}

uint64_t sub_100B70C9C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B70CD8(uint64_t a1)
{
  return sub_100B70F54(a1, (uint64_t)&unk_101525B20, (uint64_t)&unk_101693CA0);
}

uint64_t sub_100B70CFC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100B59E74(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100B70DFC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B70E68()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B70F34(uint64_t a1)
{
  return sub_100B70F54(a1, (uint64_t)&unk_101525B70, (uint64_t)&unk_101693CB0);
}

uint64_t sub_100B70F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  return sub_100B59C48(a1, *(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t sub_100B70FD8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B710AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100B57A60(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_100B711AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B71214(uint64_t result, unint64_t a2, char a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  if (a4 >> 62 == 2)
  {
    return sub_100767448(result, a2, a3);
  }
  else if (v4 == 1)
  {
    swift_retain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  else if (!v4)
  {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100B712BC(uint64_t result, unint64_t a2, char a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 62;
  if (a4 >> 62 == 2)
  {
    return sub_1007676B8(result, a2, a3);
  }
  else if (v4 == 1)
  {
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else if (!v4)
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100B71364()
{
  swift_unknownObjectRelease();
  sub_100B6F970(*(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned __int8 *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100B713A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B713E0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100528D08;
  return sub_100B5E02C(a1, a2, v6);
}

uint64_t sub_100B71490()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100B714E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100B65318(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_100B715B4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100528D08;
  return sub_100B636B8(a1, a2, v6);
}

uint64_t sub_100B71668()
{
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100B716B8()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 15);
}

uint64_t sub_100B71708(uint64_t a1)
{
  uint64_t v4 = v1[1].n128_i64[0];
  uint64_t v5 = v1[1].n128_i64[1];
  unint64_t v6 = v1[2].n128_u64[0];
  unint64_t v7 = v1[2].n128_u64[1];
  __n128 v12 = v1[3];
  unint64_t v9 = v1[4].n128_u64[0];
  unint64_t v8 = v1[4].n128_u64[1];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100528D08;
  return sub_100B69FB4(v12, a1, v4, v5, v6, v7, v9, v8);
}

void destroy for CRLUSDZRep.PlatformContent(uint64_t a1)
{
}

uint64_t _s8Freeform10CRLUSDZRepC15PlatformContentOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  sub_100B6F904(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRLUSDZRep.PlatformContent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  sub_100B6F904(*(id *)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  unint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned int v8 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100B6F970(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRLUSDZRep.PlatformContent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  unsigned int v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned int v6 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100B6F970(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLUSDZRep.PlatformContent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x1E && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 30);
  }
  unsigned int v3 = ((2 * *(unsigned __int8 *)(a1 + 16)) & 0x1C | (*(unsigned __int8 *)(a1 + 16) >> 4) & 3) ^ 0x1F;
  if (v3 >= 0x1D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLUSDZRep.PlatformContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 30;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 2 * ((((-a2 >> 2) & 7) - 8 * a2) & 0x1F);
    }
  }
  return result;
}

uint64_t sub_100B71990(uint64_t a1)
{
  return (*(unsigned __int8 *)(a1 + 16) >> 4) & 3;
}

uint64_t sub_100B7199C(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0xCFu;
  return result;
}

uint64_t sub_100B719AC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 0xC1 | (16 * (a2 & 3));
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.PlatformContent()
{
  return &type metadata for CRLUSDZRep.PlatformContent;
}

unsigned char *storeEnumTagSinglePayload for CRLUSDZRep.RenderingStrategy.USDRendererKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B71AA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUSDZRep.RenderingStrategy.USDRendererKind()
{
  return &type metadata for CRLUSDZRep.RenderingStrategy.USDRendererKind;
}

unint64_t sub_100B71ADC()
{
  unint64_t result = qword_101693DB8;
  if (!qword_101693DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101693DB8);
  }
  return result;
}

uint64_t sub_100B71B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[29] = a6;
  v7[30] = a7;
  v7[27] = a4;
  v7[28] = a5;
  v7[25] = a2;
  v7[26] = a3;
  v7[24] = a1;
  uint64_t v8 = type metadata accessor for URL();
  v7[31] = v8;
  v7[32] = *(void *)(v8 - 8);
  v7[33] = swift_task_alloc();
  return _swift_task_switch(sub_100B71C14, 0, 0);
}

uint64_t sub_100B71C14()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  unint64_t v1 = v0[25];
  swift_beginAccess();
  id v2 = (id)static OS_os_log.shareState;
  uint64_t v3 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v2, (uint64_t)&_mh_execute_header, v3, (uint64_t)"No share existed. Preparing a new share.", 40, 2, (uint64_t)_swiftEmptyArrayStorage);

  if (v1 >> 60 == 15)
  {
    type metadata accessor for MainActor();
    v0[34] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v5;
    unint64_t v7 = sub_100B71DA8;
  }
  else
  {
    uint64_t v8 = v0[24];
    unint64_t v9 = v0[25];
    v0[38] = v8;
    v0[39] = v9;
    type metadata accessor for MainActor();
    sub_1005FA2A0(v8, v9);
    v0[40] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v6 = v10;
    unint64_t v7 = sub_100B72184;
  }
  return _swift_task_switch(v7, v4, v6);
}

void sub_100B71DA8()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v3 = *(void *)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  swift_retain();
  swift_unknownObjectRelease();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v4 = *(void **)(v3 + 16);
  v0[35] = v4;
  v4;
  swift_release();
  uint64_t v8 = (void (*)(uint64_t, __n128))((char *)&dword_101677050 + dword_101677050);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100B71F08;
  uint64_t v6 = v0[26];
  v7.n128_u64[0] = 2.0;
  v8(v6, v7);
}

uint64_t sub_100B71F08(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v2 + 280);
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = a1;
  swift_task_dealloc();

  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100B72074, 0, 0);
  }
}

uint64_t sub_100B72074()
{
  uint64_t v1 = (UIImage *)[*(id *)(v0 + 296) UIImage];
  id v2 = UIImagePNGRepresentation(v1);

  uint64_t v3 = *(void **)(v0 + 296);
  if (v2)
  {
    uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v6 = v5;
  }
  else
  {

    uint64_t v4 = 0;
    unint64_t v6 = 0xF000000000000000;
  }
  *(void *)(v0 + 304) = v4;
  *(void *)(v0 + 312) = v6;
  uint64_t v7 = *(void *)(v0 + 192);
  unint64_t v8 = *(void *)(v0 + 200);
  type metadata accessor for MainActor();
  sub_1005FA2A0(v7, v8);
  *(void *)(v0 + 320) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B72184, v10, v9);
}

void sub_100B72184()
{
  swift_release();
  id v1 = [self sharedApplication];
  id v2 = [v1 delegate];

  if (!v2)
  {
    __break(1u);
    goto LABEL_7;
  }
  type metadata accessor for CRLiOSAppDelegate();
  uint64_t v3 = *(void *)(swift_dynamicCastClassUnconditional()
                 + OBJC_IVAR____TtC8Freeform17CRLiOSAppDelegate_sharedBoardThumbnailManager);
  swift_retain();
  swift_unknownObjectRelease();
  if (!v3)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v4 = *(void **)(v3 + 16);
  v0[41] = v4;
  v4;
  swift_release();
  unint64_t v5 = (void *)swift_task_alloc();
  v0[42] = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_100B722E0;
  uint64_t v6 = v0[33];
  uint64_t v7 = v0[27];
  uint64_t v8 = v0[28];
  uint64_t v9 = v0[26];
  sub_100617EDC(v6, v9, 2.0, v7, v8, 0, 0, 1);
}

uint64_t sub_100B722E0()
{
  id v2 = *(void **)(*(void *)v1 + 328);
  *(void *)(*(void *)v1 + 344) = v0;
  swift_task_dealloc();

  if (v0) {
    uint64_t v3 = sub_100B72A1C;
  }
  else {
    uint64_t v3 = sub_100B7240C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100B7240C()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = v0[31];
  uint64_t v4 = v0[29];
  id v5 = objc_allocWithZone((Class)CKAsset);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  id v9 = [v5 initWithFileURL:v7];
  v0[44] = v9;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v10 = v9;
  return _swift_task_switch(sub_100B724E0, v4, 0);
}

uint64_t sub_100B724E0()
{
  uint64_t v1 = v0[28];
  Class v2 = sub_100D3EC2C(v0[26]);
  v0[45] = (uint64_t)v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[46] = (uint64_t)v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100B7259C;
  uint64_t v4 = v0[38];
  uint64_t v5 = v0[39];
  uint64_t v6 = v0[27];
  return sub_100749A00((uint64_t)v2, v6, v1, v4, v5);
}

uint64_t sub_100B7259C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 376) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 232);
    uint64_t v6 = sub_100B726DC;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 232);

    *(void *)(v4 + 384) = a1;
    uint64_t v6 = sub_100B727BC;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100B726DC()
{
  uint64_t v1 = *(void **)(v0 + 352);

  return _swift_task_switch(sub_100B72748, 0, 0);
}

uint64_t sub_100B72748()
{
  uint64_t v1 = (void *)v0[44];
  sub_100514260(v0[38], v0[39]);

  swift_task_dealloc();
  Class v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100B727BC()
{
  return _swift_task_switch(sub_100B72824, 0, 0);
}

uint64_t sub_100B72824()
{
  uint64_t v1 = (void *)v0[48];
  uint64_t v3 = v0[38];
  unint64_t v2 = v0[39];
  id v17 = (void *)v0[44];
  uint64_t v4 = (void *)v0[30];
  uint64_t v5 = (void *)static OS_os_log.shareState;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117DF40;
  *(void *)(inited + 56) = sub_10050BF48(0, &qword_101672C00);
  *(void *)(inited + 64) = sub_1005E8BFC((unint64_t *)&qword_101682FE0, &qword_101672C00);
  *(void *)(inited + 32) = v1;
  id v7 = v5;
  id v8 = v1;
  uint64_t v9 = UUID.uuidString.getter();
  uint64_t v11 = v10;
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 104) = sub_100528BE4();
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = v11;
  *(void *)(inited + 136) = sub_10050BF48(0, &qword_1016758D0);
  *(void *)(inited + 144) = sub_1005E8BFC(&qword_101693FA0, &qword_1016758D0);
  *(void *)(inited + 112) = v4;
  id v12 = v4;
  uint64_t v13 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v7, (uint64_t)&_mh_execute_header, v13, (uint64_t)"New share: %@ for boardID: %@ in container %@.", 46, 2, inited);
  sub_100514260(v3, v2);

  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  swift_task_dealloc();
  id v14 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v15 = v0[48];
  return v14(v15);
}

uint64_t sub_100B72A1C()
{
  sub_100514260(v0[38], v0[39]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

id sub_100B72A88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v33 = a5;
  uint64_t v34 = a2;
  uint64_t v32 = a1;
  uint64_t v9 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8, v12);
  uint64_t v13 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v14 - 8, v15);
  id v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLSendACopyHelper();
  swift_allocObject();
  uint64_t v18 = a3;
  uint64_t v19 = sub_1009F6A3C(v18);

  id v20 = [objc_allocWithZone((Class)NSProgress) init];
  [v20 setCancellable:0];
  [v20 publish];
  uint64_t v21 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v17, 1, 1, v21);
  sub_100540CFC(a4, (uint64_t)v13);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v23 = (v11 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (void *)swift_allocObject();
  void v25[2] = 0;
  v25[3] = 0;
  v25[4] = v19;
  sub_1005394E4((uint64_t)v13, (uint64_t)v25 + v22);
  unint64_t v26 = (void *)((char *)v25 + v23);
  uint64_t v27 = v34;
  *unint64_t v26 = v33;
  v26[1] = a6;
  Swift::String v28 = (void *)((char *)v25 + v24);
  *Swift::String v28 = v32;
  v28[1] = v27;
  *(void *)((char *)v25 + ((v24 + 23) & 0xFFFFFFFFFFFFFFF8)) = v20;
  id v29 = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1005912D0((uint64_t)v17, (uint64_t)&unk_101693F80, (uint64_t)v25);
  swift_release();

  swift_release();
  return v20;
}

id sub_100B72D20(uint64_t a1, void *aBlock)
{
  unint64_t v2 = *(uint64_t (**)(void, uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  uint64_t v5 = (void *)v2(sub_1009C3FB4, v4);
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100B72DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100B731A8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_101525E48, (uint64_t)&unk_101693F10);
}

uint64_t sub_100B72DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = v12;
  v7[5] = v13;
  v7[2] = a4;
  v7[3] = a7;
  type metadata accessor for MainActor();
  v7[6] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[7] = v9;
  v7[8] = v8;
  return _swift_task_switch(sub_100B72EA0, v9, v8);
}

void sub_100B72EA0()
{
  sub_100A708BC();
  v0[9] = v1;
  if (v1)
  {
    uint64_t v4 = (void (*)(uint64_t, double))((char *)&dword_101677050 + dword_101677050);
    unint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_100B72F64;
    uint64_t v3 = v0[2];
    v4(v3, 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B72F64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v6 = *(void *)(v4 + 64);
    id v7 = sub_100B730FC;
  }
  else
  {

    *(void *)(v4 + 96) = a1;
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v6 = *(void *)(v4 + 64);
    id v7 = sub_100B73094;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100B73094()
{
  swift_release();
  return _swift_task_switch(sub_100B74980, 0, 0);
}

uint64_t sub_100B730FC()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();

  return _swift_task_switch(sub_100B74984, 0, 0);
}

uint64_t sub_100B7316C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_100B731A8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)&unk_101525E20, (uint64_t)&unk_101693F00);
}

uint64_t sub_100B731A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v40 = a10;
  v34[1] = a9;
  uint64_t v13 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8, v16);
  id v17 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v21 = (char *)v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  sub_100540CFC(a3, (uint64_t)v17);
  unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v24 = (v15 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 0;
  *(void *)(v27 + 24) = 0;
  sub_1005394E4((uint64_t)v17, v27 + v23);
  Swift::String v28 = (void *)(v27 + v24);
  *Swift::String v28 = v35;
  v28[1] = a5;
  id v29 = (void *)(v27 + v25);
  uint64_t v31 = v37;
  uint64_t v30 = v38;
  *id v29 = a6;
  v29[1] = v30;
  uint64_t v32 = (void *)(v27 + v26);
  *uint64_t v32 = v36;
  v32[1] = v31;
  *(void *)(v27 + ((v26 + 23) & 0xFFFFFFFFFFFFFFF8)) = v39;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1005912D0((uint64_t)v21, v40, v27);
  swift_release();
  return 0;
}

uint64_t sub_100B733C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = v12;
  v7[5] = v13;
  v7[2] = a4;
  v7[3] = a7;
  type metadata accessor for MainActor();
  v7[6] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[7] = v9;
  v7[8] = v8;
  return _swift_task_switch(sub_100B7346C, v9, v8);
}

void sub_100B7346C()
{
  sub_100A708BC();
  v0[9] = v1;
  if (v1)
  {
    uint64_t v4 = (void (*)(uint64_t, double))((char *)&dword_101677050 + dword_101677050);
    unint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_100B73530;
    uint64_t v3 = v0[2];
    v4(v3, 2.0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100B73530(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v6 = *(void *)(v4 + 64);
    id v7 = sub_100B73788;
  }
  else
  {

    *(void *)(v4 + 96) = a1;
    uint64_t v5 = *(void *)(v4 + 56);
    uint64_t v6 = *(void *)(v4 + 64);
    id v7 = sub_100B73660;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100B73660()
{
  swift_release();
  return _swift_task_switch(sub_100B736C8, 0, 0);
}

uint64_t sub_100B736C8()
{
  uint64_t v1 = (void *)v0[12];
  unint64_t v2 = (void (*)(uint64_t, unint64_t, void))v0[4];
  id v3 = [v1 PNGRepresentation];
  uint64_t v4 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v2(v4, v6, 0);
  sub_100510084(v4, v6);

  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B73788()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();

  return _swift_task_switch(sub_100B737F8, 0, 0);
}

uint64_t sub_100B737F8()
{
  uint64_t v1 = v0[11];
  unint64_t v2 = (void (*)(void, unint64_t, uint64_t))v0[4];
  swift_errorRetain();
  v2(0, 0xF000000000000000, v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t type metadata accessor for CRLBoardShareItemProviderHelper()
{
  return self;
}

uint64_t sub_100B738B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100B733C8(a1, v13, v6, v7, v8, v9, v10);
}

id sub_100B73A38(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v44 = a7;
  uint64_t v42 = a4;
  uint64_t v12 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8, v15);
  uint64_t v16 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void *)(a2 + OBJC_IVAR____TtC8Freeform15CRLBoardLibrary_boardShareController);
  id v17 = *(void **)(*(void *)(v41 + 112) + 112);
  id v18 = objc_allocWithZone((Class)NSItemProvider);
  id v19 = v17;
  id v20 = [v18 init];
  id v21 = [self standardOptions];
  [v21 setSupportAllowingAddedParticipantsToInviteOthers:1];
  if (a1)
  {
    uint64_t v22 = qword_10166FBE0;
    id v23 = a1;
    if (v22 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v24 = (id)static OS_os_log.shareState;
    uint64_t v25 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v25, (uint64_t)"A share already exists. Creating item provider with existing share.", 67, 2, (uint64_t)_swiftEmptyArrayStorage);

    NSItemProvider.registerCKShare(_:container:allowedSharingOptions:)((CKShare)v23, (CKContainer)v19, (CKAllowedSharingOptions)v21);
  }
  else
  {
    sub_100540CFC(a3, (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    unint64_t v26 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v27 = (v14 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = a5;
    id v40 = v20;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a6;
    uint64_t v38 = a6;
    unint64_t v32 = v44;
    *(void *)(v31 + 24) = v44;
    sub_1005394E4((uint64_t)v16, v31 + v26);
    uint64_t v33 = (void *)(v31 + v27);
    uint64_t v34 = v41;
    uint64_t v35 = v39;
    *uint64_t v33 = v42;
    v33[1] = v35;
    *(void *)(v31 + v28) = v34;
    *(void *)(v31 + v29) = v19;
    id v20 = v40;
    *(void *)(v31 + v30) = v43;
    id v36 = v19;
    sub_1005FA2A0(v38, v32);
    swift_bridgeObjectRetain();
    swift_retain();
    NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)();
    swift_release();
  }

  return v20;
}

id sub_100B73D30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8, v11);
  id v12 = [objc_allocWithZone((Class)NSItemProvider) init];
  sub_10050BF48(0, &qword_101693F18);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  sub_100540CFC(a2, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  sub_1005394E4((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  uint64_t v16 = (void *)(v15 + ((v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = a3;
  v16[1] = a4;
  aBlock[4] = sub_100B74314;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = *(void *)"";
  aBlock[2] = sub_100B72D20;
  void aBlock[3] = &unk_101525E88;
  id v17 = _Block_copy(aBlock);
  id v18 = a1;
  swift_bridgeObjectRetain();
  swift_release();
  [v12 registerObjectOfClass:ObjCClassFromMetadata visibility:0 loadHandler:v17];
  _Block_release(v17);
  return v12;
}

uint64_t sub_100B73F2C()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((((((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  swift_unknownObjectRelease();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100B74078(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + v5 + 8);
  uint64_t v10 = *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_100528D08;
  return sub_100B72DFC(a1, v13, v6, v7, v8, v9, v10);
}

uint64_t sub_100B741FC()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 16, v4);
}

id sub_100B74314(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_100B72A88(a1, a2, v7, v8, v10, v11);
}

uint64_t sub_100B743C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B743D8()
{
  return swift_release();
}

uint64_t sub_100B743E0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B74418()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

uint64_t sub_100B74564(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void *)((char *)v1 + v5);
  uint64_t v11 = *(void *)((char *)v1 + v5 + 8);
  uint64_t v12 = *(void *)((char *)v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100528488;
  return sub_1009F57D0(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100B746D4()
{
  uint64_t v1 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  unint64_t v4 = *(void *)(v0 + 24);
  if (v4 >> 60 != 15) {
    sub_100510084(*(void *)(v0 + 16), v4);
  }
  uint64_t v5 = (v2 + 32) & ~v2;
  unint64_t v6 = (((((v3 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v0 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  type metadata accessor for CRLBoardIdentifierStorage(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100B74828()
{
  uint64_t v2 = *(void *)(type metadata accessor for CRLBoardIdentifier(0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void *)(v0 + v4 + 8);
  uint64_t v11 = *(void *)(v0 + v5);
  uint64_t v12 = *(void *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_1007DF918;
  return sub_100B71B48(v6, v7, v8, v9, v10, v11, v12);
}

void *sub_100B74988(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v32 = (uint64_t)&v30 - v11;
  if (a1)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"copy(clearCRDTMetadata:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 50, (uint64_t)"Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"copy(clearCRDTMetadata:)", 24, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 50);
    uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 632);
    swift_beginAccess();
    sub_100B752B0(v13, (uint64_t)v8);
    sub_1009E3210();
    CRType.copy(renamingReferences:)();
    sub_100B75318((uint64_t)v8);
  }
  else
  {
    uint64_t v14 = (uint64_t)v1 + *(void *)(v4 + 632);
    swift_beginAccess();
    sub_100B752B0(v14, (uint64_t)v12);
  }
  uint64_t v15 = qword_101693FA8;
  uint64_t v16 = *(void *)((char *)v2 + qword_101693FA8);
  char v17 = *((unsigned char *)v2 + qword_101693FA8 + 8);
  uint64_t v18 = qword_101693FB0;
  uint64_t v19 = *(void *)((char *)v2 + qword_101693FB0);
  unint64_t v20 = *(void *)((char *)v2 + qword_101693FB0 + 8);
  uint64_t v21 = v2[5];
  uint64_t v31 = v2[4];
  id v24 = v2 + 2;
  uint64_t v22 = v2[2];
  uint64_t v23 = v24[1];
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v25 + v15;
  *(void *)uint64_t v26 = v16;
  *(unsigned char *)(v26 + 8) = v17;
  unint64_t v27 = (uint64_t *)(v25 + v18);
  *unint64_t v27 = v19;
  v27[1] = v20;
  sub_100B75378(v32, v25 + *(void *)(*(void *)v25 + 632));
  unint64_t v28 = sub_10068B398(v23, v31, v21, v22);
  sub_100510D4C(v19, v20);
  return v28;
}

uint64_t sub_100B74C3C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs) == 1
    && (*(unsigned char *)(v1 + 16) & 4) != 0
    || (uint64_t v3 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap,
        swift_beginAccess(),
        *(void *)(*(void *)v3 + 16))
    && (*(unsigned char *)(v1 + 16) & 2) != 0)
  {
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v5 = 14;
    return swift_willThrow();
  }
  else
  {
    swift_beginAccess();
    sub_100F99CA4(a1);
    return swift_endAccess();
  }
}

uint64_t sub_100B74D3C()
{
  return *(void *)(v0 + qword_101693FA8);
}

uint64_t sub_100B74D54()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_100B74D5C()
{
  return *(_DWORD *)(v0 + 16) & 1;
}

uint64_t sub_100B74D68()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_100B74D70()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_100B74D78(uint64_t a1)
{
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v23[-v9];
  if (*(_UNKNOWN ****)a1 != &off_101694008) {
    goto LABEL_2;
  }
  uint64_t v13 = *(void *)(v1 + qword_101693FA8);
  unint64_t v14 = *(void *)(a1 + qword_101693FA8);
  int v15 = *(unsigned __int8 *)(a1 + qword_101693FA8 + 8);
  if (*(unsigned char *)(v1 + qword_101693FA8 + 8) == 1)
  {
    switch(v13)
    {
      case 1:
        if (v14 != 1) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 2:
        if (v14 != 2) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 3:
        if (v14 != 3) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 4:
        if (v14 != 4) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 5:
        if (v14 != 5) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 6:
        if (v14 != 6) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 7:
        if (v14 != 7) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 8:
        if (v14 != 8) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 9:
        if (v14 != 9) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
      case 10:
        if (v14 <= 9) {
          int v15 = 0;
        }
        if (v15 == 1) {
          goto LABEL_13;
        }
        goto LABEL_2;
      default:
        if (v14) {
          LOBYTE(v15) = 0;
        }
        if (v15) {
          goto LABEL_13;
        }
        goto LABEL_2;
    }
  }
  if (v13 != v14) {
    LOBYTE(v15) = 1;
  }
  if (v15)
  {
LABEL_2:
    char v11 = 0;
  }
  else
  {
LABEL_13:
    uint64_t v16 = v1 + *(void *)(*(void *)v1 + 632);
    swift_beginAccess();
    sub_100B752B0(v16, (uint64_t)v10);
    uint64_t v17 = a1 + *(void *)(*(void *)a1 + 632);
    swift_beginAccess();
    sub_100B752B0(v17, (uint64_t)v6);
    swift_retain();
    LOBYTE(v17) = sub_100FC1F68((uint64_t)v10, (uint64_t)v6);
    sub_100B75318((uint64_t)v6);
    sub_100B75318((uint64_t)v10);
    if (v17)
    {
      uint64_t v18 = v1 + qword_101693FB0;
      uint64_t v19 = *(void *)(v1 + qword_101693FB0);
      unint64_t v20 = *(void *)(v18 + 8);
      uint64_t v21 = *(void *)(a1 + qword_101693FB0);
      unint64_t v22 = *(void *)(a1 + qword_101693FB0 + 8);
      sub_100510D4C(v21, v22);
      char v11 = sub_1008D44A8(v19, v20, v21, v22);
      sub_100510084(v21, v22);
    }
    else
    {
      char v11 = 0;
    }
    swift_release();
  }
  return v11 & 1;
}

uint64_t sub_100B75080(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"serializedItemSpecificData(_:clearCRDTMetadata:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 65, (uint64_t)"Cannot clear CRDT metadata for unknown item's specific data.", 60, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"serializedItemSpecificData(_:clearCRDTMetadata:)", 48, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/BoardItems/CRLUnknownItemData.swift", 89, 2, 65);
  }
  uint64_t v3 = v2 + qword_101693FB0;
  uint64_t v4 = *(void *)(v2 + qword_101693FB0);
  sub_100510D4C(v4, *(void *)(v3 + 8));
  return v4;
}

uint64_t sub_100B75174()
{
  return 0;
}

uint64_t sub_100B75180()
{
  return sub_100510084(*(void *)(v0 + qword_101693FB0), *(void *)(v0 + qword_101693FB0 + 8));
}

uint64_t sub_100B75194()
{
  sub_100B75318(v0 + *(void *)(*(void *)v0 + 632));
  sub_100510084(*(void *)(v0 + qword_101693FB0), *(void *)(v0 + qword_101693FB0 + 8));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLUnknownItemData()
{
  uint64_t result = qword_101693FE0;
  if (!qword_101693FE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B75264()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100B752B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B75318(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101683E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100B75378(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101683E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100B75408(double a1, double a2)
{
  id v4 = [objc_allocWithZone((Class)UIBezierPath) init];
  double v5 = a1 + -5.75;
  double v6 = a2 + -5.75;
  double v7 = a1 + 5.75;
  double v8 = a2 + 5.75;
  [v4 moveToPoint:v5, v6];
  [v4 addLineToPoint:v7, v8];
  [v4 moveToPoint:v5, v8];
  [v4 addLineToPoint:v7, v6];
  [v4 closePath];
  id v9 = [v4 CGPath];
  id v10 = [self bezierPathWithCGPath:v9];

  if (v10) {
  else
  }
    __break(1u);
}

uint64_t sub_100B75534(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 112) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = swift_getObjectType();
  *(void *)(v3 + 40) = type metadata accessor for MainActor();
  *(void *)(v3 + 48) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = v4;
  return _swift_task_switch(sub_100B755E0, v5, v4);
}

uint64_t sub_100B755E0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  char v2 = *(unsigned char *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 80) = v5;
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v3;
  *(unsigned char *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100B75724;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, v4, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x8000000101276250, sub_100B76E5C, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100B75724()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100B7585C;
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_100618D48;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B7585C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B758E8(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 112) = a1;
  *(void *)(v2 + 24) = swift_getObjectType();
  *(void *)(v2 + 32) = type metadata accessor for MainActor();
  *(void *)(v2 + 40) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = v3;
  return _swift_task_switch(sub_100B75994, v4, v3);
}

uint64_t sub_100B75994()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 112);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  uint64_t v4 = static MainActor.shared.getter();
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 80) = v5;
  swift_unknownObjectWeakInit();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v3;
  *(unsigned char *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100B75AF8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, v4, &protocol witness table for MainActor, 0xD00000000000001BLL, 0x8000000101275F70, sub_100B76E18, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100B75AF8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100B75CA0;
  }
  else
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_100B75C30;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B75C30()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B75CA0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B75D3C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B75D74()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100B75DAC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = 0;
  *(void *)(v11 + 24) = 0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
    uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v52 = a1;
    uint64_t v15 = (v14 + 24) & ~v14;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v11;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v16 + v15, (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
    uint64_t v57 = sub_100B76F40;
    uint64_t v58 = v16;
    aBlock = _NSConcreteStackBlock;
    unint64_t v54 = *(void *)"";
    uint64_t v55 = sub_100679958;
    uint64_t v56 = &unk_101526000;
    uint64_t v17 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v13 presentViewController:a3 animated:a4 & 1 completion:v17];
    _Block_release(v17);
    id v18 = [a3 presentationController];

    if (v18)
    {
      swift_release();

      return;
    }
    aBlock = 0;
    unint64_t v54 = 0xE000000000000000;
    id v31 = v13;
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    aBlock = (void **)0xD000000000000022;
    unint64_t v54 = 0x8000000101276270;
    id v32 = [a3 description];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    v36._countAndFlagsBits = v33;
    v36._object = v35;
    String.append(_:)(v36);
    swift_bridgeObjectRelease();
    v37._countAndFlagsBits = 544108320;
    v37._object = (void *)0xE400000000000000;
    String.append(_:)(v37);
    id v38 = v31;
    id v39 = [v38 description];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v42 = v41;

    v43._countAndFlagsBits = v40;
    v43._object = v42;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    unint64_t v44 = aBlock;
    unint64_t v45 = v54;

    sub_100A98254();
    uint64_t v46 = swift_allocError();
    *(void *)uint64_t v47 = v44;
    *(void *)(v47 + 8) = v45;
    *(void *)(v47 + 16) = 0xD000000000000078;
    *(void *)(v47 + 24) = 0x80000001012762A0;
    *(unsigned char *)(v47 + 32) = 0;
    sub_100B76348(v52, v46, 1, v11);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_presentAsync(_:animated:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 74, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_presentAsync(_:animated:)", 29, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 74);
    swift_beginAccess();
    uint64_t v19 = (void *)swift_unknownObjectWeakLoadStrong();
    _StringGuts.grow(_:)(42);
    swift_bridgeObjectRelease();
    unint64_t v59 = 0xD000000000000022;
    unint64_t v60 = 0x8000000101276270;
    id v20 = [a3 description];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = 544108320;
    v25._object = (void *)0xE400000000000000;
    String.append(_:)(v25);
    if (v19)
    {
      id v26 = v19;
      id v27 = [v26 description];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;
    }
    else
    {
      uint64_t v30 = (void *)0xE500000000000000;
      uint64_t v28 = 0x3E6C696E3CLL;
    }
    v48._countAndFlagsBits = v28;
    v48._object = v30;
    String.append(_:)(v48);
    swift_bridgeObjectRelease();
    unint64_t v49 = v60;

    sub_100A98254();
    uint64_t v50 = swift_allocError();
    *(void *)uint64_t v51 = v59;
    *(void *)(v51 + 8) = v49;
    *(void *)(v51 + 16) = 0xD000000000000078;
    *(void *)(v51 + 24) = 0x80000001012762A0;
    *(unsigned char *)(v51 + 32) = 0;
    sub_100B76348(a1, v50, 1, v11);
  }
  swift_errorRelease();
  swift_release();
}

uint64_t sub_100B76348(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_beginAccess();
  if (*(void *)(a4 + 24))
  {
    _StringGuts.grow(_:)(328);
    v6._countAndFlagsBits = 0xD000000000000101;
    v6._object = (void *)0x8000000101276320;
    String.append(_:)(v6);
    swift_beginAccess();
    sub_1005057FC(&qword_101674580);
    _print_unlocked<A, B>(_:_:)();
    v7._object = (void *)0x80000001012761D0;
    v7._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v7);
    id v8 = [self packedBacktraceString];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    v12._countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0xE000000000000000;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 70, (uint64_t)"%@", 2, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 70);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    return swift_arrayDestroy();
  }
  else
  {
    id v15 = [self packedBacktraceString];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_beginAccess();
    *(void *)(a4 + 16) = v16;
    *(void *)(a4 + 24) = v18;
    swift_bridgeObjectRelease();
    if (a3)
    {
      swift_errorRetain();
      sub_1005057FC(&qword_10167F0F0);
      return CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1005057FC(&qword_10167F0F0);
      return CheckedContinuation.resume(returning:)();
    }
  }
}

uint64_t sub_100B76628(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  swift_beginAccess();
  if (*(void *)(a4 + 24))
  {
    _StringGuts.grow(_:)(328);
    v6._countAndFlagsBits = 0xD000000000000101;
    v6._object = (void *)0x80000001012760C0;
    String.append(_:)(v6);
    swift_beginAccess();
    sub_1005057FC(&qword_101674580);
    _print_unlocked<A, B>(_:_:)();
    v7._object = (void *)0x80000001012761D0;
    v7._countAndFlagsBits = 0xD000000000000043;
    String.append(_:)(v7);
    id v8 = [self packedBacktraceString];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    v12._countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    *(void *)(inited + 56) = &type metadata for String;
    *(void *)(inited + 64) = sub_100528BE4();
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0xE000000000000000;
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 129, (uint64_t)"%@", 2, 2u, inited);
    sub_1005598CC(inited, (uint64_t)"bughunt_safelyResume(continuation:with:)", 40, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 129);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    return swift_arrayDestroy();
  }
  else
  {
    id v15 = [self packedBacktraceString];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    swift_beginAccess();
    *(void *)(a4 + 16) = v16;
    *(void *)(a4 + 24) = v18;
    swift_bridgeObjectRelease();
    if (a3)
    {
      swift_errorRetain();
      sub_1005057FC(&qword_10167F0F0);
      return CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_1005057FC(&qword_10167F0F0);
      return CheckedContinuation.resume(returning:)();
    }
  }
}

void sub_100B76908(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7, v10);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v12 = Strong;
    id v13 = [Strong presentationController];

    if (v13)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
      unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = a3;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v15 + v14, (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      unint64_t v44 = sub_100B76E2C;
      uint64_t v45 = v15;
      aBlock = _NSConcreteStackBlock;
      unint64_t v41 = *(void *)"";
      uint64_t v42 = sub_100679958;
      Swift::String v43 = &unk_101525FB0;
      uint64_t v16 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      [v12 dismissViewControllerAnimated:a4 & 1 completion:v16];
      _Block_release(v16);
    }
    else
    {
      aBlock = 0;
      unint64_t v41 = 0xE000000000000000;
      id v24 = v12;
      _StringGuts.grow(_:)(89);
      v25._countAndFlagsBits = 0xD00000000000002FLL;
      v25._object = (void *)0x8000000101275FF0;
      String.append(_:)(v25);
      id v12 = v24;
      id v26 = [v12 description];
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;

      v30._countAndFlagsBits = v27;
      v30._object = v29;
      String.append(_:)(v30);
      swift_bridgeObjectRelease();
      v31._object = (void *)0x8000000101276020;
      v31._countAndFlagsBits = 0xD000000000000028;
      String.append(_:)(v31);

      sub_100A98254();
      uint64_t v32 = swift_allocError();
      *(void *)uint64_t v33 = 0;
      *(void *)(v33 + 8) = 0xE000000000000000;
      *(void *)(v33 + 16) = 0xD000000000000065;
      *(void *)(v33 + 24) = 0x8000000101276050;
      *(unsigned char *)(v33 + 32) = 1;
      sub_100B76628(a1, v32, 1, a3);
      swift_errorRelease();
    }
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_dismissAsync(animated:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 134, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_dismissAsync(animated:)", 27, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/UIViewController_Extensions.swift", 94, 2, 134);
    swift_beginAccess();
    uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(89);
    v18._countAndFlagsBits = 0xD00000000000002FLL;
    v18._object = (void *)0x8000000101275FF0;
    String.append(_:)(v18);
    if (v17)
    {
      id v19 = v17;
      id v20 = [v19 description];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v23 = (void *)0xE500000000000000;
      uint64_t v21 = 0x3E6C696E3CLL;
    }
    v34._countAndFlagsBits = v21;
    v34._object = v23;
    String.append(_:)(v34);
    swift_bridgeObjectRelease();
    v35._object = (void *)0x8000000101276020;
    v35._countAndFlagsBits = 0xD000000000000028;
    String.append(_:)(v35);
    unint64_t v36 = v47;

    sub_100A98254();
    uint64_t v37 = swift_allocError();
    *(void *)uint64_t v38 = v46;
    *(void *)(v38 + 8) = v36;
    *(void *)(v38 + 16) = 0xD000000000000065;
    *(void *)(v38 + 24) = 0x8000000101276050;
    *(unsigned char *)(v38 + 32) = 1;
    sub_100B76628(a1, v37, 1, a3);
    swift_errorRelease();
  }
}

void sub_100B76E18(uint64_t a1)
{
  sub_100B76908(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100B76E2C()
{
  return sub_100B76F58((uint64_t (*)(uint64_t, void, void, uint64_t))sub_100B76628);
}

uint64_t sub_100B76E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B76E54()
{
  return swift_release();
}

void sub_100B76E5C(uint64_t a1)
{
  sub_100B75DAC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100B76E70()
{
  uint64_t v1 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B76F40()
{
  return sub_100B76F58((uint64_t (*)(uint64_t, void, void, uint64_t))sub_100B76348);
}

uint64_t sub_100B76F58(uint64_t (*a1)(uint64_t, void, void, uint64_t))
{
  uint64_t v2 = *(void *)(sub_1005057FC(&qword_10167F0F0) - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v4, 0, 0, v3);
}

uint64_t sub_100B76FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (a5 == 2)
  {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s34CRLViewControllerPresentationErrorOwxx(uint64_t a1)
{
  return sub_100B77050(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t sub_100B77050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result = a2;
  if (a5 < 2u)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (a5 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s34CRLViewControllerPresentationErrorOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_100B76FDC(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t _s34CRLViewControllerPresentationErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_100B76FDC(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_100B77050(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s34CRLViewControllerPresentationErrorOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  unsigned __int8 v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_100B77050(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t _s34CRLViewControllerPresentationErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s34CRLViewControllerPresentationErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100B77264(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_100B7726C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *_s34CRLViewControllerPresentationErrorOMa()
{
  return &_s34CRLViewControllerPresentationErrorON;
}

uint64_t sub_100B77290()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_syncObserver);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  sub_100B78A6C(v0 + OBJC_IVAR____TtC8Freeform30CRLBoardCloudFetchSyncObserver_boardIdentifier, type metadata accessor for CRLBoardIdentifier);
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100B77394()
{
  return type metadata accessor for CRLBoardCloudFetchSyncObserver(0);
}

uint64_t type metadata accessor for CRLBoardCloudFetchSyncObserver(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101694308);
}

uint64_t sub_100B773BC()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100B77464(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1005057FC(&qword_1016943A0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_1005057FC(&qword_101672EB0);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_100B77674(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016943A0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Date();
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v4);
    if (!result)
    {
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v4);
    }
  }
  return result;
}

void *sub_100B77788(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016943A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_1005057FC(&qword_101672EB0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_100B7795C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016943A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 16))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 24))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(sub_1005057FC(&qword_101672EB0) - 8) + 64);
      goto LABEL_8;
    }
    sub_100522F00((uint64_t)a1, &qword_1016943A0);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

void *sub_100B77CA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016943A0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_1005057FC(&qword_101672EB0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_100B77E74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_1016943A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 32))(a1, a2, v15);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          (*(void (**)(void *, void *, uint64_t))(v16 + 40))(a1, a2, v15);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v16 + 8))(a1, v15);
      }
      size_t v14 = *(void *)(*(void *)(sub_1005057FC(&qword_101672EB0) - 8) + 64);
      goto LABEL_8;
    }
    sub_100522F00((uint64_t)a1, &qword_1016943A0);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = sub_1005057FC(&qword_101672EB0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_100B781B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B781CC);
}

uint64_t sub_100B781CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016943A0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5) {
    return v5 - 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100B7823C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B78250);
}

uint64_t sub_100B78250(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1005057FC(&qword_1016943A0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100B782D8(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_1016943A0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 4, v2);
}

uint64_t sub_100B78344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016943A0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 4, v4);
}

uint64_t type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101694418);
}

void sub_100B783D8()
{
  sub_1005E873C();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_100B78450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1005057FC(&qword_101694428);
  __chkstk_darwin(v8, v9);
  uint64_t v41 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672EB0);
  __chkstk_darwin(v11 - 8, v12);
  size_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v16);
  int v18 = (char *)&v40 - v17;
  uint64_t Sync = type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(0);
  __chkstk_darwin(Sync - 8, v20);
  unint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1005057FC(&qword_101694430);
  __chkstk_darwin(v23 - 8, v24);
  id v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (uint64_t)&v26[*(int *)(v27 + 56)];
  sub_100B789B0(a1, (uint64_t)v26);
  sub_100B789B0(a2, v28);
  uint64_t v29 = sub_1005057FC(&qword_1016943A0);
  Swift::String v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48);
  switch(v30((uint64_t)v26, 4, v29))
  {
    case 1u:
      if (v30(v28, 4, v29) == 1) {
        goto LABEL_11;
      }
      goto LABEL_12;
    case 2u:
      if (v30(v28, 4, v29) != 2) {
        goto LABEL_12;
      }
      goto LABEL_11;
    case 3u:
      if (v30(v28, 4, v29) != 3) {
        goto LABEL_12;
      }
      goto LABEL_11;
    case 4u:
      if (v30(v28, 4, v29) == 4) {
        goto LABEL_11;
      }
      goto LABEL_12;
    default:
      sub_100B789B0((uint64_t)v26, (uint64_t)v22);
      if (v30(v28, 4, v29))
      {
        sub_100522F00((uint64_t)v22, &qword_101672EB0);
LABEL_12:
        sub_100522F00((uint64_t)v26, &qword_101694430);
        return 0;
      }
      sub_1007240AC(v28, (uint64_t)v18);
      uint64_t v32 = v41 + *(int *)(v8 + 48);
      uint64_t v33 = (uint64_t)v22;
      uint64_t v34 = v41;
      sub_1007240AC(v33, v41);
      sub_100541258((uint64_t)v18, v32);
      uint64_t v36 = v42;
      uint64_t v35 = v43;
      uint64_t v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
      if (v37(v34, 1, v43) == 1)
      {
        sub_100522F00((uint64_t)v18, &qword_101672EB0);
        if (v37(v32, 1, v35) == 1)
        {
          sub_100522F00(v34, &qword_101672EB0);
LABEL_11:
          sub_100B78A6C((uint64_t)v26, type metadata accessor for CRLBoardCloudFetchSyncObserver.Result);
          return 1;
        }
        goto LABEL_19;
      }
      sub_100541258(v34, (uint64_t)v14);
      if (v37(v32, 1, v35) == 1)
      {
        sub_100522F00((uint64_t)v18, &qword_101672EB0);
        (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
LABEL_19:
        sub_100522F00(v34, &qword_101694428);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v7, v32, v35);
      sub_100B78A14();
      char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v39 = *(void (**)(char *, uint64_t))(v36 + 8);
      v39(v7, v35);
      sub_100522F00((uint64_t)v18, &qword_101672EB0);
      v39(v14, v35);
      sub_100522F00(v34, &qword_101672EB0);
      if (v38) {
        goto LABEL_11;
      }
LABEL_21:
      sub_100B78A6C((uint64_t)v26, type metadata accessor for CRLBoardCloudFetchSyncObserver.Result);
      return 0;
  }
}

uint64_t sub_100B789B0(uint64_t a1, uint64_t a2)
{
  uint64_t Sync = type metadata accessor for CRLBoardCloudFetchSyncObserver.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Sync - 8) + 16))(a2, a1, Sync);
  return a2;
}

unint64_t sub_100B78A14()
{
  unint64_t result = qword_101681800;
  if (!qword_101681800)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101681800);
  }
  return result;
}

uint64_t sub_100B78A6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_UNKNOWN **sub_100B78ACC()
{
  return &off_10150AF08;
}

_UNKNOWN **sub_100B78AD8()
{
  return &off_101534738;
}

_UNKNOWN **sub_100B78AE4()
{
  return &off_101517F00;
}

_UNKNOWN **sub_100B78AF0()
{
  return &off_101526AC8;
}

uint64_t sub_100B78AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for CRLCanvasLayerAnimation();
  uint64_t v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005CFBF0(v3, (uint64_t)v19);
  uint64_t v17 = &type metadata for CRLSpringLayerAnimation.Def;
  unint64_t v18 = sub_100860DAC();
  *(void *)&long long v16 = swift_allocObject();
  sub_100823384(a1, v16 + 16);
  v10[88] = 0;
  *((_OWORD *)v10 + 6) = 0u;
  *((_OWORD *)v10 + 7) = 0u;
  unsigned char v10[128] = 1;
  *(_OWORD *)(v10 + 136) = 0u;
  *(_OWORD *)(v10 + 152) = 0u;
  v10[168] = 1;
  *((void *)v10 + 22) = 0;
  v10[184] = 1;
  *((void *)v10 + 24) = 0;
  v10[200] = 1;
  UUID.init()();
  swift_unknownObjectWeakInit();
  uint64_t v11 = &v10[v7[15]];
  uint64_t v12 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(&v10[v7[16]], 1, 1, v12);
  sub_1005CFBF0((uint64_t)v19, (uint64_t)v10);
  sub_10053974C(&v16, (uint64_t)&v10[v7[14]]);
  id v14 = v20;
  sub_1005CFCF0((uint64_t)v19);
  swift_unknownObjectWeakAssign();

  sub_1005CFDAC((uint64_t)v10, a2);
  uint64_t result = type metadata accessor for CRLCanvasLayerAnimationProvider();
  *(void *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_100B78CE8()
{
  unint64_t v1 = (id *)(v0 + 56);
  switch(*(unsigned char *)(v0 + 312))
  {
    case 0:
    case 0x22:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      if (*(void *)(v0 + 112)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 88);
      }
      break;
    case 1:
    case 0x23:
      if (*(void *)(v0 + 80)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v1);
      }
      break;
    case 0x12:
    case 0x14:
    case 0x1C:
    case 0x1E:

      break;
    case 0x13:
    case 0x15:
    case 0x1D:
    case 0x1F:

      break;
    case 0x20:
    case 0x24:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 0x21:
    case 0x25:
      goto LABEL_17;
    case 0x3A:

      break;
    case 0x3F:

      if (*(void *)(v0 + 176)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 152);
      }
      goto LABEL_17;
    case 0x40:

      if (*(void *)(v0 + 144)) {
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 120);
      }
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 332, 7);
}

void *sub_100B78F38(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v31 - v11;
  uint64_t v13 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v13, v14);
  long long v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  id v20 = (char *)v31 - v19;
  uint64_t v21 = (uint64_t)v2 + *(void *)(v4 + 632);
  swift_beginAccess();
  if (a1)
  {
    v31[1] = v5;
    sub_100522E9C(v21, (uint64_t)v16, (uint64_t *)&unk_101683E10);
    sub_100523288((unint64_t *)&qword_1016737D8, (uint64_t *)&unk_101683E10);
    CRType.copy(renamingReferences:)();
    sub_100522F00((uint64_t)v16, (uint64_t *)&unk_101683E10);
    uint64_t v22 = (uint64_t)v2 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v22, (uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7DC28(&qword_101688D78, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100B7E440((uint64_t)v8, type metadata accessor for CRLURLItemCRDTData);
  }
  else
  {
    sub_100522E9C(v21, (uint64_t)v20, (uint64_t *)&unk_101683E10);
    uint64_t v23 = (uint64_t)v2 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v23, (uint64_t)v12, type metadata accessor for CRLURLItemCRDTData);
  }
  uint64_t v24 = v2[4];
  uint64_t v25 = v2[5];
  uint64_t v28 = v2 + 2;
  uint64_t v26 = v2[2];
  uint64_t v27 = v28[1];
  uint64_t v29 = swift_allocObject();
  sub_100B7E5E4((uint64_t)v12, v29 + qword_10171B9D8, type metadata accessor for CRLURLItemCRDTData);
  sub_100B75378((uint64_t)v20, v29 + *(void *)(*(void *)v29 + 632));
  return sub_10068B398(v27, v24, v25, v26);
}

uint64_t sub_100B792AC(uint64_t a1)
{
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v4);
  uint64_t v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v11, v12);
  uint64_t v40 = (uint64_t)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v38 - v16;
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)v38 - v20;
  uint64_t v42 = a1;
  uint64_t v22 = a1 + OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap;
  swift_beginAccess();
  if (*(void *)(*(void *)v22 + 16))
  {
    v38[2] = v1;
    v38[0] = v41 + qword_10171B9D8;
    swift_beginAccess();
    v38[1] = sub_1005057FC(&qword_101682E40);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    sub_100A68AF0((uint64_t)v17, (uint64_t)v6);
    uint64_t v23 = v3;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v25 = v39;
    v24(v10, v6, v39);
    uint64_t v26 = *(int *)(v7 + 20);
    uint64_t v28 = *(void *)&v17[v26];
    uint64_t v27 = *(void *)&v17[v26 + 8];
    uint64_t v29 = *(void *)&v17[*(int *)(v7 + 24)];
    Swift::String v30 = &v10[v26];
    *(void *)Swift::String v30 = v28;
    *((void *)v30 + 1) = v27;
    *(void *)&v10[*(int *)(v7 + 24)] = v29;
    Swift::String v31 = *(void (**)(char *, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v6, v25);
    uint64_t v32 = *(int *)(v11 + 20);
    uint64_t v33 = &v17[v32];
    uint64_t v34 = &v21[v32];
    uint64_t v35 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v34, v33, v35);
    uint64_t v36 = *(void *)&v17[*(int *)(v11 + 24)];
    sub_100B7E5E4((uint64_t)v10, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    *(void *)&v21[*(int *)(v11 + 24)] = v36;
    swift_bridgeObjectRetain();
    sub_100B7E440((uint64_t)v17, type metadata accessor for CRLURLItemAtomicDataStruct);
    sub_100B7E3D8((uint64_t)v21, (uint64_t)v17, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_beginAccess();
    sub_100B7E3D8((uint64_t)v17, v40, type metadata accessor for CRLURLItemAtomicDataStruct);
    CRRegister.wrappedValue.setter();
    sub_100B7E440((uint64_t)v17, type metadata accessor for CRLURLItemAtomicDataStruct);
    swift_endAccess();
    sub_100B7E440((uint64_t)v21, type metadata accessor for CRLURLItemAtomicDataStruct);
  }
  swift_beginAccess();
  sub_100F99CA4(v42);
  return swift_endAccess();
}

uint64_t sub_100B796B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v35 = a3;
  uint64_t v5 = sub_1005057FC(&qword_101682E40);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v32 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLURLItemCRDTData(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v18);
  uint64_t v20 = (char *)&v30 - v19;
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)&v30 - v23;
  sub_100B7E3D8(a1, (uint64_t)&v30 - v23, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  uint64_t v25 = &v24[*(int *)(v13 + 20)];
  uint64_t v26 = type metadata accessor for URL();
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v25, a2, v26);
  *(void *)&v24[*(int *)(v13 + 24)] = _swiftEmptyDictionarySingleton;
  sub_100B7E3D8((uint64_t)v24, (uint64_t)v20, type metadata accessor for CRLURLItemAtomicDataStruct);
  *(void *)&v12[*(int *)(v9 + 28)] = _swiftEmptyDictionarySingleton;
  sub_100B7E3D8((uint64_t)v20, (uint64_t)v16, type metadata accessor for CRLURLItemAtomicDataStruct);
  sub_100B7DC28((unint64_t *)&unk_101694880, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
  uint64_t v28 = v32;
  CRRegister.init(_:)();
  sub_100B7E440((uint64_t)v20, type metadata accessor for CRLURLItemAtomicDataStruct);
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v12, v28, v34);
  sub_100B7E5E4((uint64_t)v12, v35, type metadata accessor for CRLURLItemCRDTData);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v26);
  sub_100B7E440(v31, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  return sub_100B7E440((uint64_t)v24, type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B79A0C()
{
  qword_10171B9C0 = 97;
  *(void *)algn_10171B9C8 = 0xE100000000000000;
  uint64_t result = swift_getKeyPath();
  qword_10171B9D0 = result;
  return result;
}

uint64_t sub_100B79A4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if (qword_101670198 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for UUID();
    uint64_t v17 = sub_100556B74(v16, (uint64_t)qword_10171CB50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v10, v17, v16);
    uint64_t v18 = &v10[*(int *)(v7 + 20)];
    *(void *)uint64_t v18 = 0;
    *((void *)v18 + 1) = 0xE000000000000000;
    *(void *)&v10[*(int *)(v7 + 24)] = _swiftEmptyDictionarySingleton;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v14, v2);
    sub_100B796B4((uint64_t)v10, (uint64_t)v6, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v14, v2);
  }
  return result;
}

uint64_t sub_100B79CC8()
{
  if (qword_10166F958 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10171B9C0;
  swift_bridgeObjectRetain();
  swift_retain();
  return v0;
}

uint64_t sub_100B79D48(uint64_t a1)
{
  uint64_t v2 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return static CRStruct_1.fieldKeys.getter(a1, v2);
}

uint64_t sub_100B79DB8(uint64_t a1)
{
  uint64_t v2 = sub_100B7DC28(&qword_101688D78, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRType.context.getter(a1, v2);
}

uint64_t sub_100B79E24()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.actionUndoingDifference(from:)();
}

uint64_t sub_100B79EA8()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.apply(_:)();
}

uint64_t sub_100B79F24()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.hasDelta(from:)();
}

uint64_t sub_100B79FA0()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.delta(_:from:)();
}

uint64_t sub_100B7A034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.canMerge(delta:)(a1, a2, v4);
}

uint64_t sub_100B7A0B0()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.merge(delta:)();
}

uint64_t sub_100B7A12C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B7A1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B7A234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.observableDifference(from:with:)(a1, a2, a3, v6);
}

uint64_t sub_100B7A2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.visitReferences(_:)(a1, a2, v4);
}

BOOL sub_100B7A344()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.needToFinalizeTimestamps()();
}

uint64_t sub_100B7A3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.finalizeTimestamps(_:)(a1, a2, v4);
}

uint64_t sub_100B7A42C()
{
  sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.merge(_:)();
}

uint64_t sub_100B7A4A8()
{
  return CRDT.serializedData(_:version:)();
}

uint64_t sub_100B7A528()
{
  return CRDT.init(serializedData:)();
}

uint64_t sub_100B7A5B8()
{
  return CRStruct_1.init(from:)();
}

uint64_t sub_100B7A638()
{
  return CRStruct_1.encode(to:)();
}

uint64_t sub_100B7A6B0(uint64_t a1)
{
  uint64_t v2 = sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);

  return CRStruct_1.minEncodingVersion.getter(a1, v2);
}

BOOL sub_100B7A72C(char *a1, char *a2)
{
  return qword_1011AA598[*a1] == qword_1011AA598[*a2];
}

Swift::Int sub_100B7A750()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011AA598[v1]);
  return Hasher._finalize()();
}

void sub_100B7A7A0()
{
  Hasher._combine(_:)(qword_1011AA598[*v0]);
}

Swift::Int sub_100B7A7D8()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_1011AA598[v1]);
  return Hasher._finalize()();
}

void sub_100B7A824(void *a1@<X8>)
{
  *a1 = qword_1011AA598[*v1];
}

unint64_t sub_100B7A83C()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 == 1) {
    unint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_100B7A898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B7E4A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B7A8C0()
{
  return qword_1011AA598[*v0];
}

void sub_100B7A8D8(void *a1@<X8>)
{
  *a1 = &off_101503460;
}

uint64_t sub_100B7A8E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100B7DDFC();
  unint64_t v5 = sub_100B7DE54();

  return static CodingKey<>.intCases.getter(a1, a2, v4, v5);
}

uint64_t sub_100B7A940(uint64_t a1)
{
  unint64_t v2 = sub_100B7DE54();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B7A97C(uint64_t a1)
{
  unint64_t v2 = sub_100B7DE54();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B7A9B8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016949F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100B7DE54();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  type metadata accessor for CRLAssetData();
  sub_100B7DC28(&qword_1016737B0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
    char v14 = 1;
    type metadata accessor for URL();
    sub_100B7DC28(&qword_101687A68, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v13 = *(void *)(v3 + *(int *)(v10 + 24));
    v12[15] = 2;
    sub_1005057FC((uint64_t *)&unk_101687A40);
    sub_1005573B0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_100B7AC0C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v29 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v8, v9);
  uint64_t v31 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1005057FC(&qword_1016949E8);
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32, v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v14, v15);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v33 = (uint64_t)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v18;
  *(void *)(v33 + v18) = _swiftEmptyDictionarySingleton;
  uint64_t v19 = a1[3];
  uint64_t v35 = a1;
  sub_10050F848(a1, v19);
  sub_100B7DE54();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v35);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v7;
    uint64_t v27 = v14;
    uint64_t v21 = v30;
    char v39 = 0;
    sub_100B7DC28(&qword_1016737A0, (void (*)(uint64_t))type metadata accessor for CRLAssetData);
    uint64_t v22 = (uint64_t)v31;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v23 = v33;
    sub_100B7E5E4(v22, v33, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
    char v38 = 1;
    sub_100B7DC28(&qword_101687A38, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23 + *(int *)(v27 + 20), v20, v4);
    sub_1005057FC((uint64_t *)&unk_101687A40);
    char v37 = 2;
    sub_100557304();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v32);
    uint64_t v24 = v36;
    uint64_t v25 = v34;
    swift_bridgeObjectRelease();
    *(void *)(v23 + v25) = v24;
    sub_100B7E3D8(v23, v28, type metadata accessor for CRLURLItemAtomicDataStruct);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v35);
    return sub_100B7E440(v23, type metadata accessor for CRLURLItemAtomicDataStruct);
  }
}

uint64_t sub_100B7B0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(int *)(v6 + 20);
  uint64_t v8 = *(void *)(a1 + v7);
  uint64_t v9 = *(void *)(a1 + v7 + 8);
  uint64_t v10 = (void *)(a2 + v7);
  BOOL v11 = v8 == *v10 && v9 == v10[1];
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || (sub_100ED60AC(*(void *)(a1 + *(int *)(v6 + 24)), *(void *)(a2 + *(int *)(v6 + 24))) & 1) == 0
    || (static URL.== infix(_:_:)() & 1) == 0)
  {
    return 0;
  }
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = *(void *)(a2 + v12);

  return sub_100ED60AC(v13, v14);
}

uint64_t sub_100B7B1B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B7AC0C(a1, a2);
}

uint64_t sub_100B7B1CC(void *a1)
{
  return sub_100B7A9B8(a1);
}

uint64_t sub_100B7B1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_1016949F8, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B7B268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_1016949F8, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);

  return CRExtendableValueStruct.copy(renamingReferences:)(a1, a2, v4);
}

uint64_t sub_100B7B2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100B7DC28((unint64_t *)&unk_101694880, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
  uint64_t v7 = sub_100B7DC28(&qword_101694A00, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);

  return CRValue<>.observableDifference(from:with:)(a1, a2, a3, v6, v7);
}

uint64_t sub_100B7B3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100B7DC28(&qword_1016949F8, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);

  return CRExtendableValueStruct.visitReferences(_:)(a1, a2, v4);
}

uint64_t sub_100B7B434()
{
  return CRValueStruct.init(from:)();
}

uint64_t sub_100B7B4B4()
{
  return CRValueStruct.encode(to:)();
}

uint64_t sub_100B7B52C(uint64_t a1)
{
  uint64_t v2 = sub_100B7DC28(&qword_1016949A0, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);

  return CRValueStruct.minEncodingVersion.getter(a1, v2);
}

uint64_t sub_100B7B5A8()
{
  return 6;
}

void sub_100B7B5B4(_UNKNOWN ****a1)
{
  uint64_t v2 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*a1 == &off_101694560)
  {
    uint64_t v6 = (uint64_t)a1 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v6, (uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    swift_beginAccess();
    sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    swift_retain();
    CRStruct_1.merge(_:)();
    swift_endAccess();
    swift_release();
    sub_100B7E440((uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
  }
}

uint64_t sub_100B7B744(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v25[-v9];
  uint64_t v11 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = &v25[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15, v16);
  uint64_t v18 = &v25[-v17];
  if (*(_UNKNOWN ****)a1 != &off_101694560) {
    goto LABEL_5;
  }
  uint64_t v19 = v1 + *(void *)(*(void *)v1 + 632);
  swift_beginAccess();
  sub_100522E9C(v19, (uint64_t)v18, (uint64_t *)&unk_101683E10);
  uint64_t v20 = a1 + *(void *)(*(void *)a1 + 632);
  swift_beginAccess();
  sub_100522E9C(v20, (uint64_t)v14, (uint64_t *)&unk_101683E10);
  swift_retain();
  LOBYTE(v20) = sub_100FC1F68((uint64_t)v18, (uint64_t)v14);
  sub_100522F00((uint64_t)v14, (uint64_t *)&unk_101683E10);
  sub_100522F00((uint64_t)v18, (uint64_t *)&unk_101683E10);
  if ((v20 & 1) == 0)
  {
    swift_release();
LABEL_5:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v21 = v1 + qword_10171B9D8;
  swift_beginAccess();
  sub_100B7E3D8(v21, (uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
  uint64_t v22 = a1 + qword_10171B9D8;
  swift_beginAccess();
  sub_100B7E3D8(v22, (uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
  char v23 = sub_100B7E24C();
  swift_release();
  sub_100B7E440((uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
  sub_100B7E440((uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
  return v23 & 1;
}

uint64_t sub_100B7BA00(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = v2 + qword_10171B9D8;
  swift_beginAccess();
  if (a2)
  {
    sub_100B7E3D8(v12, (uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7DC28(&qword_101688D78, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    CRType.copy(renamingReferences:)();
    sub_100B7E440((uint64_t)v7, type metadata accessor for CRLURLItemCRDTData);
  }
  else
  {
    sub_100B7E3D8(v12, (uint64_t)v11, type metadata accessor for CRLURLItemCRDTData);
  }
  if (qword_10166EE10 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for CRCodableVersion();
  sub_100556B74(v13, (uint64_t)qword_10171A2D8);
  sub_100B7DC28(&qword_10168B248, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
  uint64_t v14 = CRDT.serializedData(_:version:)();
  sub_100B7E440((uint64_t)v11, type metadata accessor for CRLURLItemCRDTData);
  return v14;
}

uint64_t sub_100B7BC54(_UNKNOWN ****a1)
{
  uint64_t v3 = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v3, v4);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7, v8);
  uint64_t v10 = &v15[-v9];
  if (*a1 == &off_101694560)
  {
    uint64_t v11 = v1 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v11, (uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
    uint64_t v12 = (uint64_t)a1 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v12, (uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    char v13 = CRStruct_1.hasDelta(from:)();
    sub_100B7E440((uint64_t)v6, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7E440((uint64_t)v10, type metadata accessor for CRLURLItemCRDTData);
    return v13 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100B7BE74(uint64_t a1, uint64_t a2)
{
  v27[1] = a2;
  v27[0] = type metadata accessor for CRLURLItemCRDTData(0);
  __chkstk_darwin(v27[0], v3);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)v27 - v8;
  uint64_t v10 = sub_1005057FC(&qword_101694A08);
  __chkstk_darwin(v10 - 8, v11);
  char v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v27 - v16;
  uint64_t v18 = swift_dynamicCastClass();
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = v2 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v20, (uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    uint64_t v21 = v19 + qword_10171B9D8;
    swift_beginAccess();
    sub_100B7E3D8(v21, (uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    swift_retain();
    CRStruct_1.delta(_:from:)();
    sub_100B7E440((uint64_t)v5, type metadata accessor for CRLURLItemCRDTData);
    sub_100B7E440((uint64_t)v9, type metadata accessor for CRLURLItemCRDTData);
    sub_100522E9C((uint64_t)v17, (uint64_t)v13, &qword_101694A08);
    uint64_t v22 = sub_1005057FC(&qword_1016949C0);
    uint64_t v23 = *(void *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22) == 1)
    {
      sub_100522F00((uint64_t)v17, &qword_101694A08);
      swift_release();
      sub_100522F00((uint64_t)v13, &qword_101694A08);
      return 0;
    }
    else
    {
      if (qword_10166EE10 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for CRCodableVersion();
      sub_100556B74(v25, (uint64_t)qword_10171A2D8);
      sub_100523288(&qword_1016949B8, &qword_1016949C0);
      uint64_t v24 = PartialCRDT.deltaSerializedData(_:version:)();
      swift_release();
      sub_100522F00((uint64_t)v17, &qword_101694A08);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v22);
    }
    return v24;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_100B7C2CC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v39 = *v3;
  uint64_t v5 = sub_1005057FC((uint64_t *)&unk_101683E10);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1005057FC(&qword_1016949C0);
  uint64_t v40 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100510D4C(a1, a2);
  sub_100523288(&qword_1016949B8, &qword_1016949C0);
  LOBYTE(a2) = v13;
  uint64_t v18 = v41;
  PartialCRDT.init(serializedData:)();
  if (!v18)
  {
    uint64_t v36 = v12;
    char v37 = v8;
    uint64_t v41 = v9;
    swift_beginAccess();
    type metadata accessor for CRLURLItemCRDTData(0);
    sub_100B7DC28(&qword_101688D60, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
    LODWORD(a2) = CRStruct_1.merge(delta:)();
    swift_endAccess();
    if ((a2 & 1) == 0)
    {
      uint64_t v33 = v16;
      uint64_t v34 = v13;
      int v35 = a2;
      if (qword_10166FBA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v19 = (void *)static OS_os_log.realTimeSync;
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
      uint64_t v21 = (uint64_t)v3 + *(void *)(*v3 + 632);
      swift_beginAccess();
      uint64_t v22 = v21;
      uint64_t v23 = (uint64_t)v37;
      sub_100522E9C(v22, (uint64_t)v37, (uint64_t *)&unk_101683E10);
      id v24 = v19;
      sub_1005057FC(&qword_101674550);
      uint64_t v25 = v36;
      CRRegister.wrappedValue.getter();
      sub_100522F00(v23, (uint64_t *)&unk_101683E10);
      a2 = UUID.uuidString.getter();
      uint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v25, v41);
      *(void *)(inited + 56) = &type metadata for String;
      unint64_t v28 = sub_100528BE4();
      *(void *)(inited + 64) = v28;
      *(void *)(inited + 32) = a2;
      *(void *)(inited + 40) = v27;
      uint64_t v42 = v3;
      swift_retain();
      uint64_t v29 = String.init<A>(describing:)();
      *(void *)(inited + 96) = &type metadata for String;
      *(void *)(inited + 104) = v28;
      *(void *)(inited + 72) = v29;
      *(void *)(inited + 80) = v30;
      uint64_t v31 = static os_log_type_t.error.getter();
      sub_100BAC898((uint64_t)v24, (uint64_t)&_mh_execute_header, v31, (uint64_t)"Delta failed to apply for %{public}@%{public}@", 46, 2, inited);
      swift_setDeallocating();
      sub_1005057FC(&qword_101672B50);
      swift_arrayDestroy();

      LOBYTE(a2) = v35;
      uint64_t v13 = v34;
      uint64_t v16 = v33;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v13);
  }
  return a2 & 1;
}

unint64_t sub_100B7C79C()
{
  uint64_t v0 = type metadata accessor for CRLAssetData();
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005057FC(&qword_1016737C8);
  uint64_t v8 = (int *)(sub_1005057FC(&qword_10169A0F0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  unint64_t v11 = v10 + v9;
  unint64_t v12 = v10 + v9 + v8[14];
  strcpy((char *)(v10 + v9), "linkMetadata");
  *(unsigned char *)(v11 + 13) = 0;
  *(_WORD *)(v11 + 14) = -5120;
  swift_beginAccess();
  sub_1005057FC(&qword_101682E40);
  CRRegister.wrappedValue.getter();
  swift_endAccess();
  sub_100B7E3D8((uint64_t)v7, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  sub_100B7E440((uint64_t)v7, type metadata accessor for CRLURLItemAtomicDataStruct);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v12, v3, v13);
  sub_100B7E440((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for CRLAssetData);
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  return sub_100A394EC(v10);
}

uint64_t sub_100B7CA24()
{
  return sub_100B7E440(v0 + qword_10171B9D8, type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7CA5C()
{
  sub_100522F00(v0 + *(void *)(*(void *)v0 + 632), (uint64_t *)&unk_101683E10);
  sub_100B7E440(v0 + qword_10171B9D8, type metadata accessor for CRLURLItemCRDTData);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLURLItemData(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101694538);
}

uint64_t sub_100B7CB18()
{
  uint64_t result = type metadata accessor for CRLURLItemCRDTData(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRLURLItemCRDTData(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101694868);
}

uint64_t *sub_100B7CBC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101682E40);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100B7CC9C(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC(&qword_101682E40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B7CD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100B7CD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B7CE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100B7CEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B7CF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7CF44);
}

uint64_t sub_100B7CF44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101682E40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100B7D008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7D01C);
}

uint64_t sub_100B7D01C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1005057FC(&qword_101682E40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_100B7D0DC()
{
  sub_100B7D174();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100B7D174()
{
  if (!qword_101694878)
  {
    type metadata accessor for CRLURLItemAtomicDataStruct(255);
    sub_100B7DC28((unint64_t *)&unk_101694880, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
    unint64_t v0 = type metadata accessor for CRRegister();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101694878);
    }
  }
}

uint64_t type metadata accessor for CRLURLItemAtomicDataStruct(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101694908);
}

uint64_t *sub_100B7D228(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for CRLAssetData();
    uint64_t v9 = *(int *)(v8 + 20);
    unint64_t v10 = (uint64_t *)((char *)a1 + v9);
    unint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *unint64_t v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + *(int *)(v8 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 24));
    uint64_t v13 = *(int *)(a3 + 20);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100B7D394(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for CRLAssetData();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B7D478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100B7D594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  unint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B7D6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  *(_OWORD *)(a1 + *(int *)(v7 + 20)) = *(_OWORD *)(a2 + *(int *)(v7 + 20));
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100B7D7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for CRLAssetData();
  uint64_t v8 = *(int *)(v7 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(v7 + 24)) = *(void *)(a2 + *(int *)(v7 + 24));
  swift_bridgeObjectRelease();
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B7D8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7D8D4);
}

uint64_t sub_100B7D8D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CRLAssetData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100B7D9E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7D9FC);
}

uint64_t sub_100B7D9FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for URL();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100B7DB0C()
{
  uint64_t result = type metadata accessor for CRLAssetData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B7DBE0()
{
  return sub_100B7DC28(&qword_101694948, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B7DC28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B7DC70()
{
  return sub_100B7DC28((unint64_t *)&unk_101694880, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B7DCB8()
{
  return sub_100B7DC28(&qword_101694950, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B7DD00()
{
  return sub_100B7DC28(&qword_101694958, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

unint64_t sub_100B7DD4C()
{
  unint64_t result = qword_101694960;
  if (!qword_101694960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694960);
  }
  return result;
}

unint64_t sub_100B7DDA4()
{
  unint64_t result = qword_101694968;
  if (!qword_101694968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694968);
  }
  return result;
}

unint64_t sub_100B7DDFC()
{
  unint64_t result = qword_101694970;
  if (!qword_101694970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694970);
  }
  return result;
}

unint64_t sub_100B7DE54()
{
  unint64_t result = qword_101694978;
  if (!qword_101694978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694978);
  }
  return result;
}

unint64_t sub_100B7DEAC()
{
  unint64_t result = qword_101694980;
  if (!qword_101694980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694980);
  }
  return result;
}

unint64_t sub_100B7DF04()
{
  unint64_t result = qword_101694988;
  if (!qword_101694988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694988);
  }
  return result;
}

uint64_t sub_100B7DF58()
{
  return sub_100523288(&qword_101694990, &qword_101694998);
}

uint64_t sub_100B7DF94()
{
  return sub_100B7DC28(&qword_1016949A0, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B7DFDC()
{
  return sub_100B7DC28(&qword_1016949A8, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E024()
{
  return sub_100B7DC28(&qword_1016949B0, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E06C()
{
  return sub_100B7DC28(&qword_101688D78, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E0B4()
{
  return sub_100523288(&qword_1016949B8, &qword_1016949C0);
}

uint64_t sub_100B7E0F0()
{
  return sub_100B7DC28(&qword_10168B248, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E138()
{
  return sub_100B7DC28(&qword_1016949C8, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E180()
{
  return sub_100523288(&qword_1016949D0, &qword_101682E40);
}

uint64_t sub_100B7E1BC()
{
  return sub_100B7DC28(&qword_1016949D8, (void (*)(uint64_t))type metadata accessor for CRLURLItemCRDTData);
}

uint64_t sub_100B7E204()
{
  return sub_100B7DC28(&qword_1016949E0, (void (*)(uint64_t))type metadata accessor for CRLURLItemAtomicDataStruct);
}

uint64_t sub_100B7E24C()
{
  uint64_t v0 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v16 - v6;
  sub_1005057FC(&qword_101682E40);
  CRRegister.wrappedValue.getter();
  CRRegister.wrappedValue.getter();
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_10;
  }
  uint64_t v8 = type metadata accessor for CRLAssetData();
  uint64_t v9 = *(int *)(v8 + 20);
  uint64_t v10 = *(void *)&v7[v9];
  uint64_t v11 = *(void *)&v7[v9 + 8];
  uint64_t v12 = &v3[v9];
  BOOL v13 = v10 == *(void *)v12 && v11 == *((void *)v12 + 1);
  if (v13 || (char v14 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    if ((sub_100ED60AC(*(void *)&v7[*(int *)(v8 + 24)], *(void *)&v3[*(int *)(v8 + 24)]) & 1) != 0
      && (static URL.== infix(_:_:)() & 1) != 0)
    {
      char v14 = sub_100ED60AC(*(void *)&v7[*(int *)(v0 + 24)], *(void *)&v3[*(int *)(v0 + 24)]);
      goto LABEL_11;
    }
LABEL_10:
    char v14 = 0;
  }
LABEL_11:
  sub_100B7E440((uint64_t)v3, type metadata accessor for CRLURLItemAtomicDataStruct);
  sub_100B7E440((uint64_t)v7, type metadata accessor for CRLURLItemAtomicDataStruct);
  return v14 & 1;
}

uint64_t sub_100B7E3D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B7E440(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B7E4A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001012764D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010123A720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100B7E5E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for CRLURLItemAtomicDataStruct.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B7E718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLURLItemAtomicDataStruct.CodingKeys()
{
  return &type metadata for CRLURLItemAtomicDataStruct.CodingKeys;
}

unint64_t sub_100B7E754()
{
  unint64_t result = qword_101694A10;
  if (!qword_101694A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694A10);
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLTipScenesEntryPointCompact()
{
  return &type metadata for CRLTipScenesEntryPointCompact;
}

uint64_t sub_100B7E7B8@<X0>(uint64_t *a1@<X8>)
{
  sub_1005057FC(&qword_10167A2C0);
  uint64_t result = Tips.Event.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100B7E7F0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

uint64_t sub_100B7E800(uint64_t a1)
{
  return sub_100B7E898(a1, qword_10171B9E0);
}

uint64_t sub_100B7E824(uint64_t a1)
{
  return sub_100B7E898(a1, qword_10171B9F8);
}

uint64_t sub_100B7E848(uint64_t a1)
{
  return sub_100B7E898(a1, qword_10171BA10);
}

uint64_t sub_100B7E874(uint64_t a1)
{
  return sub_100B7E898(a1, qword_10171BA28);
}

uint64_t sub_100B7E898(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  sub_100568B28(v3, a2);
  sub_100556B74(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100B7E93C()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  sub_100568B28(v0, qword_10171BA40);
  sub_100556B74(v0, (uint64_t)qword_10171BA40);
  return Tips.Event.init<>(id:)();
}

uint64_t sub_100B7E9A4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B7E9B4(0, a1);
}

uint64_t sub_100B7E9AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B7E9B4(1, a1);
}

uint64_t sub_100B7E9B4@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1005057FC(&qword_10167A358);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1005057FC(&qword_10167A360);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  BOOL v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100523288(&qword_10167A368, &qword_10167A360);
  static PredicateExpressions.build_Arg<A>(_:)();
  v15[15] = a1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a2[3] = sub_1005057FC(&qword_10167A370);
  a2[4] = sub_1006A14B4();
  sub_1005767BC(a2);
  sub_100523288(&qword_10167A390, &qword_10167A358);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_100B7EBF8@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v52 = *(void *)(v1 - 8);
  uint64_t v53 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_10167A2D8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v50 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.DonationTimeRange();
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1005057FC(&qword_10167A2E0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1005057FC(&qword_10167A2E8);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1005057FC(&qword_10167A2F0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v44 = v22;
  uint64_t v45 = v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1005057FC(&qword_10167A2F8);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v48 = v27;
  uint64_t v49 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v43 = (char *)&v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100523288(&qword_10167A300, &qword_10167A2E0);
  static PredicateExpressions.build_Arg<A>(_:)();
  swift_getKeyPath();
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  static Tips.DonationTimeRange.day.getter();
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  sub_1006A12E0();
  static PredicateExpressions.build_donatedWithin<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_getKeyPath();
  sub_100523288(&qword_10167A318, &qword_10167A2F0);
  uint64_t v32 = v43;
  uint64_t v31 = v44;
  static PredicateExpressions.build_KeyPath<A, B>(root:keyPath:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v31);
  uint64_t v57 = 1;
  uint64_t v33 = v50;
  static PredicateExpressions.build_Arg<A>(_:)();
  int v35 = v51;
  uint64_t v34 = v52;
  uint64_t v36 = v53;
  (*(void (**)(char *, void, uint64_t))(v52 + 104))(v51, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v53);
  uint64_t v37 = sub_1005057FC(&qword_10167A320);
  uint64_t v38 = v54;
  v54[3] = v37;
  void v38[4] = sub_1006A137C();
  sub_1005767BC(v38);
  sub_100523288(&qword_10167A348, &qword_10167A2F8);
  sub_100523288(&qword_10167A350, &qword_10167A2D8);
  uint64_t v39 = v48;
  uint64_t v40 = v55;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v39);
}

uint64_t sub_100B7F2A0()
{
  return sub_100B7F3CC();
}

uint64_t sub_100B7F2C4()
{
  return sub_100B7F4D8();
}

uint64_t sub_100B7F2DC()
{
  return Image.init(_:bundle:)();
}

uint64_t sub_100B7F308@<X0>(uint64_t *a1@<X8>)
{
  sub_1005C7550();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100B7F34C()
{
  unint64_t result = qword_101694A18;
  if (!qword_101694A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694A18);
  }
  return result;
}

unint64_t sub_100B7F3A0(uint64_t a1)
{
  unint64_t result = sub_1005C7550();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100B7F3CC()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100B7F4D8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_10052E310();
  return Text.init<A>(_:)();
}

uint64_t sub_100B7F5C8()
{
  uint64_t v0 = sub_1005057FC(&qword_10167A2C0);
  uint64_t v25 = *(void *)(v0 - 8);
  uint64_t v26 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v27 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_10169FA10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_10166F960 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_100556B74(v3, (uint64_t)qword_10171B9E0);
  swift_beginAccess();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v14(v7, v13, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[2] = static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  if (qword_10166F968 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100556B74(v3, (uint64_t)qword_10171B9F8);
  swift_beginAccess();
  v14(v7, v16, v3);
  Tips.Rule.init<A>(_:_:)();
  v24[1] = static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  if (qword_10166F970 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100556B74(v3, (uint64_t)qword_10171BA10);
  swift_beginAccess();
  v14(v7, v17, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v8);
  uint64_t v18 = v8;
  if (qword_10166F978 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100556B74(v3, (uint64_t)qword_10171BA28);
  swift_beginAccess();
  v14(v7, v19, v3);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  if (qword_10166F980 != -1) {
    swift_once();
  }
  uint64_t v20 = v26;
  uint64_t v21 = sub_100556B74(v26, (uint64_t)qword_10171BA40);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v27, v21, v20);
  type metadata accessor for Tips.EmptyDonation();
  sub_1006A1230(&qword_10167A2C8);
  sub_1006A1230(&qword_10167A2D0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v15(v12, v18);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_100B7FC50@<X0>(uint64_t *a1@<X8>)
{
  sub_1005057FC(&qword_10167A2C0);
  uint64_t result = Tips.Event.donations.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100B7FC88@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLRealTimeSyncError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B7FD64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLRealTimeSyncError()
{
  return &type metadata for CRLRealTimeSyncError;
}

unint64_t sub_100B7FDA0()
{
  unint64_t result = qword_101694A20;
  if (!qword_101694A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694A20);
  }
  return result;
}

uint64_t sub_100B7FDF4(uint64_t a1, uint64_t a2, int a3)
{
  int v58 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v57 - v13;
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674520);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v57 - v21;
  uint64_t result = sub_10103405C(a1, (uint64_t)&off_10152A280);
  if (!v3)
  {
    uint64_t v70 = v18;
    uint64_t v72 = v22;
    uint64_t v66 = v10;
    v57[2] = a2;
    unint64_t v71 = v14;
    v57[4] = 0;
    uint64_t v24 = *(void *)(v75 + OBJC_IVAR____TtC8Freeform22CRLCommandDeleteScenes_sceneIDs);
    uint64_t v25 = *(void *)(v24 + 16);
    void v57[3] = v24;
    if (v25)
    {
      uint64_t v64 = OBJC_IVAR____TtC8Freeform8CRLBoard_data;
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      uint64_t v26 = v7 + 16;
      Swift::String v68 = v27;
      uint64_t v28 = v24 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
      uint64_t v61 = *(void *)(v26 + 56);
      uint64_t v29 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 32);
      char v63 = (void (**)(char *, char *, uint64_t))(v26 + 16);
      uint64_t v69 = v26;
      id v65 = (void (**)(char *, uint64_t))(v26 - 8);
      swift_bridgeObjectRetain();
      Swift::String v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 40);
      v57[1] = (v26 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v30 = v71;
      uint64_t v31 = v72;
      uint64_t v62 = a1;
      unint64_t v60 = v29;
      while (1)
      {
        v68(v31, v28, v6);
        uint64_t v32 = *v67;
        (*v67)(v31, 0, 1, v6);
        uint64_t v33 = *v29;
        if ((*v29)(v31, 1, v6) == 1) {
          break;
        }
        unint64_t v59 = v32;
        *(void *)&long long v73 = v28;
        uint64_t v74 = v25;
        uint64_t v34 = *v63;
        (*v63)(v30, v31, v6);
        uint64_t v35 = *(void *)(a1 + v64);
        swift_beginAccess();
        type metadata accessor for CRLBoardCRDTData(0);
        uint64_t v75 = v35;
        swift_retain();
        sub_1005057FC((uint64_t *)&unk_101683E40);
        uint64_t v36 = (uint64_t)v70;
        CROrderedSet.remove(_:)();
        uint64_t v37 = v36;
        if (v33((char *)v36, 1, v6) == 1)
        {
          uint64_t v74 = v6;
          sub_100510824(v36);
          if (qword_10166FAF8 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t v42 = (void *)static OS_os_log.crlScenes;
          sub_1005057FC((uint64_t *)&unk_101672B40);
          uint64_t inited = swift_initStackObject();
          long long v73 = xmmword_10117E810;
          *(_OWORD *)(inited + 16) = xmmword_10117E810;
          id v44 = v42;
          uint64_t v45 = v71;
          uint64_t v46 = UUID.uuidString.getter();
          uint64_t v48 = v47;
          *(void *)(inited + 56) = &type metadata for String;
          unint64_t v49 = sub_100528BE4();
          *(void *)(inited + 64) = v49;
          *(void *)(inited + 32) = v46;
          *(void *)(inited + 40) = v48;
          uint64_t v50 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v44, (uint64_t)&_mh_execute_header, v50, (uint64_t)"Scene attribute lookup failed for UUID %{public}", 48, 2, inited);
          swift_endAccess();
          swift_setDeallocating();
          sub_1005057FC(&qword_101672B50);
          swift_arrayDestroy();
          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v51 = (void *)static OS_os_log.crlScenes;
          uint64_t v52 = swift_initStackObject();
          *(_OWORD *)(v52 + 16) = v73;
          id v53 = v51;
          uint64_t v54 = UUID.uuidString.getter();
          *(void *)(v52 + 56) = &type metadata for String;
          *(void *)(v52 + 64) = v49;
          *(void *)(v52 + 32) = v54;
          *(void *)(v52 + 40) = v55;
          uint64_t v56 = static os_log_type_t.default.getter();
          sub_100BAC898((uint64_t)v53, (uint64_t)&_mh_execute_header, v56, (uint64_t)"Can't delete scene %{public} that doesn't exist.", 48, 2, v52);
          swift_setDeallocating();
          swift_arrayDestroy();

          return ((uint64_t (*)(char *, uint64_t))*v65)(v45, v74);
        }
        uint64_t v38 = v66;
        v34(v66, (char *)v37, v6);
        type metadata accessor for CRLBoardScenesCRDTData(0);
        sub_1005057FC((uint64_t *)&unk_101699FC0);
        CRDictionary.removeValue(forKey:)();
        swift_bridgeObjectRelease();
        sub_1005057FC(&qword_101699FD0);
        CRDictionary.removeValue(forKey:)();
        swift_bridgeObjectRelease();
        uint64_t v39 = *v65;
        uint64_t v40 = v38;
        uint64_t v31 = v72;
        (*v65)(v40, v6);
        swift_endAccess();
        swift_release();
        uint64_t v30 = v71;
        v39(v71, v6);
        uint64_t v28 = v73 + v61;
        uint64_t v25 = v74 - 1;
        a1 = v62;
        uint64_t v29 = v60;
        if (v74 == 1)
        {
          v59(v31, 1, 1, v6);
          break;
        }
      }
    }
    else
    {
      uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      swift_bridgeObjectRetain();
      v41(v72, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    return sub_101023724(a1, (uint64_t)&off_10152A280, v58);
  }
  return result;
}

uint64_t sub_100B80560()
{
  return swift_bridgeObjectRelease();
}

id sub_100B80570()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandDeleteScenes();
  [super dealloc];
}

uint64_t type metadata accessor for CRLCommandDeleteScenes()
{
  return self;
}

uint64_t sub_100B805D8()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v0 localizedStringForKey:v1 value:v2 table:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v5;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.SortStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B8079CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.SortStyle()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.SortStyle;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel()
{
  return &type metadata for CRLBoardLibraryFolderViewModel;
}

void destroy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1)
{
}

uint64_t initializeWithCopy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10053BB6C(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10053BB6C(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10053BBA0(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10053BBA0(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.GroupSection(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_100B809C8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_100B809E4(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_100B809F4(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 3;
    *(unsigned char *)(result + 24) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.GroupSection()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.GroupSection;
}

void *sub_100B80A34(unint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v7 = (void *)a1;
  switch(a4 >> 6)
  {
    case 1:
      uint64_t v7 = (void *)sub_100B810F0(a1);
      break;
    case 2:
      if (!a1)
      {
        id v19 = [self mainBundle];
        NSString v20 = String._bridgeToObjectiveC()();
        NSString v21 = String._bridgeToObjectiveC()();
        id v18 = [v19 localizedStringForKey:v20 value:v21 table:0];

        goto LABEL_14;
      }
      sub_10053BB6C((id)a1, (id)a2, a3, a4);
      id v8 = v7;
      char v9 = sub_100701290();
      id v10 = [self mainBundle];
      if (v9)
      {
        NSString v11 = String._bridgeToObjectiveC()();
        NSString v12 = String._bridgeToObjectiveC()();
        id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_10053BBA0(v7, (id)a2, a3, a4);
        sub_10053BBA0(v7, (id)a2, a3, a4);
      }
      else
      {
        NSString v22 = String._bridgeToObjectiveC()();
        NSString v23 = String._bridgeToObjectiveC()();
        id v24 = [v10 localizedStringForKey:v22 value:v23 table:0];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        sub_1005057FC((uint64_t *)&unk_101672B40);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_10117E810;
        uint64_t v26 = sub_100701F80();
        uint64_t v28 = v27;
        *(void *)(v25 + 56) = &type metadata for String;
        *(void *)(v25 + 64) = sub_100528BE4();
        *(void *)(v25 + 32) = v26;
        *(void *)(v25 + 40) = v28;
        uint64_t v14 = String.init(format:_:)();
        sub_10053BBA0(v7, (id)a2, a3, a4);
        sub_10053BBA0(v7, (id)a2, a3, a4);
        swift_bridgeObjectRelease();
      }
      uint64_t v7 = (void *)v14;
      break;
    case 3:
      uint64_t v7 = 0;
      if (!(a3 | a2 | a1) && a4 == 192)
      {
        id v15 = [self mainBundle];
        NSString v16 = String._bridgeToObjectiveC()();
        NSString v17 = String._bridgeToObjectiveC()();
        id v18 = [v15 localizedStringForKey:v16 value:v17 table:0];

LABEL_14:
        uint64_t v7 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      }
      break;
    default:
      if (a2) {
        swift_bridgeObjectRetain();
      }
      else {
        uint64_t v7 = 0;
      }
      break;
  }
  return v7;
}

uint64_t sub_100B80E8C()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

uint64_t sub_100B81038()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100B81098()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100B810E8()
{
  return sub_100B80E8C();
}

uint64_t sub_100B810F0(char a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 3:
      id v7 = [self mainBundle];
      NSString v8 = String._bridgeToObjectiveC()();
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = [v7 localizedStringForKey:v8 value:v9 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10117E810;
      *(void *)(v11 + 56) = &type metadata for Int;
      *(void *)(v11 + 64) = &protocol witness table for Int;
      *(void *)(v11 + 32) = 7;
      goto LABEL_4;
    case 4:
      id v12 = [self mainBundle];
      NSString v13 = String._bridgeToObjectiveC()();
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10117E810;
      *(void *)(v16 + 56) = &type metadata for Int;
      *(void *)(v16 + 64) = &protocol witness table for Int;
      *(void *)(v16 + 32) = 30;
LABEL_4:
      uint64_t v17 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    case 5:
      Date.init(timeIntervalSinceReferenceDate:)();
      id v19 = &unk_10166F988;
      NSString v20 = qword_101694A58;
      NSString v21 = sub_100B83148;
      goto LABEL_7;
    case 6:
      Date.init(timeIntervalSinceReferenceDate:)();
      id v19 = &unk_10166F990;
      NSString v20 = qword_101694A70;
      NSString v21 = sub_100B83190;
LABEL_7:
      uint64_t v22 = sub_100B829D0((uint64_t)v19, (uint64_t)v20, (uint64_t)v21);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      return v22;
    case 8:
      id v28 = [self mainBundle];
      NSString v29 = String._bridgeToObjectiveC()();
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = [v28 localizedStringForKey:v29 value:v30 table:0];

      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v27;
    default:
      id v23 = [self mainBundle];
      NSString v24 = String._bridgeToObjectiveC()();
      NSString v25 = String._bridgeToObjectiveC()();
      id v26 = [v23 localizedStringForKey:v24 value:v25 table:0];

      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      return v27;
  }
}

void sub_100B8174C(int a1, unint64_t a2, unint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  sub_100B80A34(a2, a3, a4, a5);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  switch(a5 >> 6)
  {
    case 1:
      Hasher._combine(_:)(a2);
      if ((a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        unint64_t v9 = a3;
      }
      else {
        unint64_t v9 = 0;
      }
      Hasher._combine(_:)(v9);
      if (a5) {
        goto LABEL_19;
      }
      Hasher._combine(_:)(1u);
      if ((a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v10 = a4;
      }
      else {
        Swift::UInt64 v10 = 0;
      }
      Hasher._combine(_:)(v10);
      break;
    case 2:
      if (a2)
      {
        uint64_t v11 = *(void **)(a2 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
        id v12 = (char *)(id)a2;
        id v13 = [v11 userIdentity];
        id v14 = [v13 lookupInfo];

        if (v14
          && (id v15 = [v14 emailAddress], v14, v15))
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          Hasher._combine(_:)(1u);
          swift_bridgeObjectRetain();
          String.hash(into:)();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          Hasher._combine(_:)(0);
        }
        id v16 = [*(id *)&v12[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] userIdentity];
        id v17 = [v16 lookupInfo];

        if (v17)
        {
          id v18 = [v17 phoneNumber];

          if (v18)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            Hasher._combine(_:)(1u);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            swift_bridgeObjectRelease();
            sub_10053BBA0((void *)a2, (id)a3, a4, a5);
            goto LABEL_26;
          }
        }
      }
      else
      {
        Hasher._combine(_:)(0);
      }
      Hasher._combine(_:)(0);
      goto LABEL_30;
    case 3:
      if (a4 | a3 | a2 || a5 != 192)
      {
        String.hash(into:)();
      }
      else
      {
        sub_100B80A34(0, 0, 0, 0xC0u);
        String.hash(into:)();
      }
LABEL_26:
      swift_bridgeObjectRelease();
      break;
    default:
      if (a3)
      {
        Hasher._combine(_:)(1u);
        swift_bridgeObjectRetain();
        String.hash(into:)();
LABEL_30:
        sub_10053BBA0((void *)a2, (id)a3, a4, a5);
      }
      else
      {
LABEL_19:
        Hasher._combine(_:)(0);
      }
      break;
  }
}

uint64_t sub_100B81AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100B81C80(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_100B83B48);
}

BOOL sub_100B81AE0(uint64_t a1, uint64_t a2)
{
  return (sub_100B83B48(*(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24), *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24)) & 1) == 0;
}

BOOL sub_100B81B20(uint64_t a1, uint64_t a2)
{
  return (sub_100B83B48(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24)) & 1) == 0;
}

uint64_t sub_100B81B60(uint64_t a1, uint64_t a2)
{
  return sub_100B83B48(*(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24), *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

void *sub_100B81B84()
{
  return sub_100B80A34(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

Swift::Int sub_100B81B94()
{
  unint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 24);
  Hasher.init(_seed:)();
  sub_100B8174C((int)&v6, v1, v2, v3, v4);
  return Hasher._finalize()();
}

void sub_100B81BF8(int a1)
{
  sub_100B8174C(a1, *(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

Swift::Int sub_100B81C08()
{
  unint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unsigned __int8 v4 = *(unsigned char *)(v0 + 24);
  Hasher.init(_seed:)();
  sub_100B8174C((int)&v6, v1, v2, v3, v4);
  return Hasher._finalize()();
}

uint64_t sub_100B81C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100B81C80(a1, a2, a3, a4, (uint64_t (*)(void, void, void, void, void, void, void, void))sub_100B834D0);
}

uint64_t sub_100B81C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, void, void, void, void, void, void, void))
{
  return a5(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned __int8 *)(a2 + 24));
}

unint64_t sub_100B81CB0()
{
  unint64_t result = qword_101694AB8;
  if (!qword_101694AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694AB8);
  }
  return result;
}

unint64_t sub_100B81D08()
{
  unint64_t result = qword_101694AC0;
  if (!qword_101694AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694AC0);
  }
  return result;
}

unint64_t sub_100B81D5C()
{
  unint64_t result = qword_101694AC8;
  if (!qword_101694AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694AC8);
  }
  return result;
}

uint64_t sub_100B81DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CRLBoardIdentifier(0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v110 = (uint64_t)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  id v12 = (char *)&v89 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v109 = (uint64_t)&v89 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v108 = (uint64_t)&v89 - v17;
  uint64_t v100 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v100 - 8);
  __chkstk_darwin(v100, v19);
  NSString v21 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_1005057FC(&qword_10167BE58);
  __chkstk_darwin(v103, v22);
  uint64_t v111 = (uint64_t)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for CRLBoardLibraryViewModel.Folder(0);
  uint64_t v26 = __chkstk_darwin(v24 - 8, v25);
  uint64_t v99 = (uint64_t)&v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v107 = (uint64_t)&v89 - v30;
  __chkstk_darwin(v29, v31);
  uint64_t v106 = (uint64_t)&v89 - v32;
  uint64_t v117 = sub_1005057FC((uint64_t *)&unk_10167BE60);
  __chkstk_darwin(v117, v33);
  uint64_t v35 = (char *)&v89 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v36 = *(void *)(v114 - 8);
  uint64_t v38 = __chkstk_darwin(v114, v37);
  uint64_t v40 = __chkstk_darwin(v38, v39);
  uint64_t v113 = (char *)&v89 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  objc_super v112 = (unsigned __int8 *)&v89 - v44;
  __chkstk_darwin(v43, v45);
  uint64_t v48 = (char *)&v89 - v46;
  uint64_t v118 = *(void *)(a2 + 16);
  if (!v118) {
    return 0;
  }
  id v104 = v12;
  uint64_t v105 = v47;
  uint64_t v97 = v21;
  unint64_t v49 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  sub_100B87F70(a2 + v49, (uint64_t)&v89 - v46, type metadata accessor for CRLBoardLibraryViewModel.Item);
  swift_bridgeObjectRetain();
  uint64_t v116 = a1;
  char v50 = sub_100DDCC28((uint64_t)v48, a1);
  sub_100575C88((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
  if (v50)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v118 == 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v96 = v2;
  uint64_t v102 = v105 + 8;
  uint64_t v94 = (void (**)(uint64_t, uint64_t))(v18 + 8);
  uint64_t v52 = *(void *)(v36 + 72);
  unint64_t v93 = (void (**)(char *))(v18 + 32);
  uint64_t v95 = a2;
  uint64_t v115 = v52;
  uint64_t v53 = a2 + v52 + v49;
  uint64_t v54 = 1;
  uint64_t v55 = (uint64_t)v113;
  uint64_t v98 = v48;
  do
  {
    sub_100B87F70(v53, (uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
    uint64_t v56 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      JUMPOUT(0x100B829B8);
    }
    uint64_t v57 = &v35[*(int *)(v117 + 48)];
    sub_100B87F70((uint64_t)v48, (uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100B87F70(v116, (uint64_t)v57, type metadata accessor for CRLBoardLibraryViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        sub_100B87F70((uint64_t)v35, v55, type metadata accessor for CRLBoardLibraryViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v59 = v106;
          sub_1007A4808(v55, v106, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v60 = v107;
          sub_1007A4808((uint64_t)v57, v107, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v61 = v111;
          uint64_t v62 = v111 + *(int *)(v103 + 48);
          sub_100B87F70(v59, v111, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v101 = v62;
          sub_100B87F70(v60, v62, type metadata accessor for CRLBoardLibraryViewModel.Folder);
          uint64_t v63 = sub_1005057FC(&qword_101670F30);
          uint64_t v64 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48);
          switch(v64(v61, 5, v63))
          {
            case 1u:
              BOOL v84 = v64(v101, 5, v63) == 1;
              goto LABEL_34;
            case 2u:
              BOOL v84 = v64(v101, 5, v63) == 2;
              goto LABEL_34;
            case 3u:
              BOOL v84 = v64(v101, 5, v63) == 3;
              goto LABEL_34;
            case 4u:
              BOOL v84 = v64(v101, 5, v63) == 4;
              goto LABEL_34;
            case 5u:
              BOOL v84 = v64(v101, 5, v63) == 5;
LABEL_34:
              uint64_t v55 = (uint64_t)v113;
              uint64_t v48 = v98;
              if (!v84) {
                goto LABEL_37;
              }
              sub_100575C88(v111, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              char v67 = 1;
              goto LABEL_38;
            default:
              uint64_t v65 = v99;
              sub_100B87F70(v111, v99, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v92 = *(int *)(v63 + 48);
              uint64_t v66 = *(void *)(v65 + v92 + 8);
              uint64_t v91 = *(void *)(v65 + v92);
              if (!v64(v101, 5, v63))
              {
                uint64_t v90 = v66;
                uint64_t v85 = *(void *)(v101 + v92);
                uint64_t v92 = *(void *)(v101 + v92 + 8);
                uint64_t v86 = v97;
                uint64_t v87 = v100;
                (*v93)(v97);
                LODWORD(v101) = static UUID.== infix(_:_:)();
                uint64_t v88 = *v94;
                (*v94)(v65, v87);
                if ((v101 & 1) == 0)
                {
                  v88((uint64_t)v86, v87);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_100575C88(v111, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  char v67 = 0;
                  uint64_t v55 = (uint64_t)v113;
                  uint64_t v48 = v98;
                  goto LABEL_38;
                }
                BOOL v84 = v91 == v85;
                uint64_t v48 = v98;
                if (v84 && v90 == v92)
                {
                  swift_bridgeObjectRelease_n();
                  v88((uint64_t)v97, v100);
                  goto LABEL_49;
                }
                LODWORD(v101) = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v88((uint64_t)v97, v100);
                if (v101)
                {
LABEL_49:
                  sub_100575C88(v111, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  char v67 = 1;
                }
                else
                {
                  sub_100575C88(v111, type metadata accessor for CRLBoardLibraryViewModel.Folder);
                  char v67 = 0;
                }
                uint64_t v55 = (uint64_t)v113;
                goto LABEL_38;
              }
              swift_bridgeObjectRelease();
              (*v94)(v65, v100);
              uint64_t v55 = (uint64_t)v113;
              uint64_t v48 = v98;
LABEL_37:
              sub_100522F00(v111, &qword_10167BE58);
              char v67 = 0;
LABEL_38:
              Swift::String v82 = type metadata accessor for CRLBoardLibraryViewModel.Folder;
              sub_100575C88(v107, type metadata accessor for CRLBoardLibraryViewModel.Folder);
              uint64_t v83 = v106;
              break;
          }
          goto LABEL_39;
        }
        sub_100575C88(v55, type metadata accessor for CRLBoardLibraryViewModel.Folder);
      }
      else
      {
        uint64_t v68 = v105;
        sub_100B87F70((uint64_t)v35, v105, type metadata accessor for CRLBoardLibraryViewModel.Item);
        sub_1005057FC(&qword_101677100);
        swift_bridgeObjectRelease();
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v69 = v68;
          uint64_t v70 = v108;
          sub_1007A4808(v69, v108, type metadata accessor for CRLBoardIdentifier);
          uint64_t v71 = (uint64_t)v57;
          uint64_t v72 = v109;
          sub_1007A4808(v71, v109, type metadata accessor for CRLBoardIdentifier);
          char v73 = static UUID.== infix(_:_:)();
          uint64_t v74 = v70;
          uint64_t v75 = (uint64_t)v104;
          sub_100B87F70(v74, (uint64_t)v104, type metadata accessor for CRLBoardIdentifier);
          uint64_t v76 = v72;
          uint64_t v77 = v110;
          sub_100B87F70(v76, v110, type metadata accessor for CRLBoardIdentifier);
          if (v73)
          {
            uint64_t v78 = *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20);
            uint64_t v79 = *(void *)(v75 + v78);
            uint64_t v80 = *(void *)(v75 + v78 + 8);
            Swift::String v81 = (void *)(v77 + v78);
            if (v79 == *v81 && v80 == v81[1]) {
              char v67 = 1;
            }
            else {
              char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
            }
          }
          else
          {
            char v67 = 0;
          }
          uint64_t v55 = (uint64_t)v113;
          Swift::String v82 = type metadata accessor for CRLBoardIdentifier;
          sub_100575C88(v110, type metadata accessor for CRLBoardIdentifier);
          sub_100575C88((uint64_t)v104, type metadata accessor for CRLBoardIdentifier);
          sub_100575C88(v109, type metadata accessor for CRLBoardIdentifier);
          uint64_t v83 = v108;
LABEL_39:
          sub_100575C88(v83, v82);
          goto LABEL_40;
        }
        sub_100575C88(v68, type metadata accessor for CRLBoardIdentifier);
        uint64_t v55 = (uint64_t)v113;
      }
LABEL_9:
      sub_100522F00((uint64_t)v35, (uint64_t *)&unk_10167BE60);
      sub_100575C88((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
      goto LABEL_10;
    }
    sub_100B87F70((uint64_t)v35, (uint64_t)v112, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (swift_getEnumCaseMultiPayload()) {
      goto LABEL_9;
    }
    char v67 = *v112 == *v57;
LABEL_40:
    sub_100575C88((uint64_t)v35, type metadata accessor for CRLBoardLibraryViewModel.Item);
    sub_100575C88((uint64_t)v48, type metadata accessor for CRLBoardLibraryViewModel.Item);
    if (v67) {
      goto LABEL_3;
    }
LABEL_10:
    ++v54;
    v53 += v115;
  }
  while (v56 != v118);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100B829D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a3;
  uint64_t v43 = a2;
  uint64_t v44 = sub_1005057FC(&qword_101679DB0);
  __chkstk_darwin(v44, v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v42 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v41 = (char *)&v40 - v12;
  uint64_t v13 = sub_1005057FC(&qword_1016741B8);
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  NSString v21 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Date.FormatStyle();
  uint64_t v23 = a1;
  uint64_t v24 = *(void *)(v22 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = (void *)__chkstk_darwin(v26, v29);
  uint64_t v32 = (char *)&v40 - v31;
  if (*v30 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_100556B74(v22, v43);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v32, v33, v22);
  if (qword_10166F998 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100556B74(v13, (uint64_t)qword_101694A88);
  sub_100522E9C(v34, (uint64_t)v16, &qword_1016741B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_100522F00((uint64_t)v16, &qword_1016741B8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v16, v17);
    Date.FormatStyle.locale(_:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v22);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v32, v28, v22);
  }
  uint64_t v36 = v45;
  uint64_t v35 = v46;
  if (qword_10166F9A0 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_100556B74(v44, (uint64_t)qword_101694AA0);
  sub_100522E9C(v37, (uint64_t)v6, &qword_101679DB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v6, 1, v35) == 1)
  {
    sub_100522F00((uint64_t)v6, &qword_101679DB0);
  }
  else
  {
    uint64_t v38 = v41;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v41, v6, v35);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v42, v38, v35);
    Date.FormatStyle.timeZone.setter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  sub_100B87F28(&qword_101694AD0, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v32, v22);
  return v47;
}

Swift::Int sub_100B82F2C(unsigned __int8 a1, Swift::UInt64 a2, char a3, double a4)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v8 = *(void *)&a4;
  }
  else {
    Swift::UInt64 v8 = 0;
  }
  Hasher._combine(_:)(v8);
  if (a3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = a2;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    Hasher._combine(_:)(v9);
  }
  return Hasher._finalize()();
}

Swift::Int sub_100B82FD0()
{
  return sub_100B82F2C(*(unsigned char *)v0, *(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(double *)(v0 + 8));
}

void sub_100B82FE4()
{
  Swift::UInt64 v2 = *((void *)v0 + 1);
  Swift::UInt64 v1 = *((void *)v0 + 2);
  int v3 = v0[24];
  Hasher._combine(_:)(*v0);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  if (v3 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v1;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    Hasher._combine(_:)(v5);
  }
}

Swift::Int sub_100B83054()
{
  Swift::UInt v1 = *v0;
  Swift::UInt64 v3 = *((void *)v0 + 1);
  Swift::UInt64 v2 = *((void *)v0 + 2);
  int v4 = v0[24];
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v3;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if (v4 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
  }
  return Hasher._finalize()();
}

uint64_t sub_100B830F0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || a1[1] != a2[1]) {
    return 0;
  }
  char v4 = *((unsigned char *)a2 + 24);
  if ((_BYTE)a1[3])
  {
    if (*((unsigned char *)a2 + 24)) {
      return 1;
    }
  }
  else
  {
    if (a1[2] != a2[2]) {
      char v4 = 1;
    }
    if ((v4 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100B83148(uint64_t a1)
{
  return sub_100B831D8(a1, (uint64_t (*)(void))&type metadata accessor for Date.FormatStyle.Symbol.Month, qword_101694A58, (void (*)(uint64_t))&static Date.FormatStyle.Symbol.Month.wide.getter, (void (*)(char *))&Date.FormatStyle.month(_:));
}

uint64_t sub_100B83190(uint64_t a1)
{
  return sub_100B831D8(a1, (uint64_t (*)(void))&type metadata accessor for Date.FormatStyle.Symbol.Year, qword_101694A70, (void (*)(uint64_t))&static Date.FormatStyle.Symbol.Year.defaultDigits.getter, (void (*)(char *))&Date.FormatStyle.year(_:));
}

uint64_t sub_100B831D8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, void (*a4)(uint64_t), void (*a5)(char *))
{
  uint64_t v9 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v11 = a2(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = type metadata accessor for Date.FormatStyle();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  NSString v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100568B28(v19, a3);
  sub_100556B74(v16, (uint64_t)a3);
  uint64_t v22 = static ParseableFormatStyle<>.dateTime.getter();
  a4(v22);
  a5(v15);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  static FormatStyleCapitalizationContext.beginningOfSentence.getter();
  return Date.FormatStyle.capitalizationContext.setter();
}

uint64_t sub_100B833E0(uint64_t a1)
{
  return sub_100B83430(a1, &qword_1016741B8, qword_101694A88, (uint64_t (*)(void))&type metadata accessor for Locale);
}

uint64_t sub_100B83408(uint64_t a1)
{
  return sub_100B83430(a1, &qword_101679DB0, qword_101694AA0, (uint64_t (*)(void))&type metadata accessor for TimeZone);
}

uint64_t sub_100B83430(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = sub_1005057FC(a2);
  sub_100568B28(v6, a3);
  uint64_t v7 = sub_100556B74(v6, (uint64_t)a3);
  uint64_t v8 = a4(0);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t sub_100B834D0(unint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5, unint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  uint64_t v16 = sub_100B80A34(a1, a2, a3, a4);
  uint64_t v18 = v17;
  uint64_t v55 = a7;
  if (v16 == sub_100B80A34(a5, a6, a7, a8) && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
LABEL_5:
    switch(a4 >> 6)
    {
      case 1:
        if ((a8 & 0xC0) != 0x40) {
          goto LABEL_75;
        }
        char v21 = 0;
        if (a5 != a1 || *(double *)&a2 != *(double *)&a6) {
          return v21 & 1;
        }
        if (a4)
        {
          if (a8) {
            goto LABEL_46;
          }
        }
        else if ((a8 & 1) == 0 && *(double *)&a3 == *(double *)&a7)
        {
          goto LABEL_46;
        }
        goto LABEL_75;
      case 2:
        if ((a8 & 0xC0) != 0x80) {
          goto LABEL_75;
        }
        uint64_t v23 = &selRef_alignCenter_;
        if (a1)
        {
          uint64_t v24 = *(void **)(a1 + OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant);
          sub_10053BB6C((id)a5, (id)a6, a7, a8);
          sub_10053BB6C((id)a1, (id)a2, a3, a4);
          id v25 = [v24 userIdentity];
          id v26 = [v25 lookupInfo];

          if (!a5)
          {
            if (v26) {
              goto LABEL_43;
            }
            goto LABEL_45;
          }
          uint64_t v27 = (char *)a5;
          uint64_t v23 = &selRef_alignCenter_;
        }
        else
        {
          uint64_t v27 = (char *)(id)a5;
          id v26 = 0;
          if (!a5) {
            goto LABEL_45;
          }
        }
        id v28 = [*(id *)&v27[OBJC_IVAR____TtC8Freeform27CRLCollaborationParticipant_ckShareParticipant] v23[140]];
        id v29 = [v28 lookupInfo];

        if (v26)
        {
          if (v29)
          {
            id v54 = v29;
            id v53 = v26;
            id v30 = [v53 emailAddress];
            if (v30)
            {
              uint64_t v31 = v30;
              uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v33 = v32;
            }
            else
            {
              uint64_t v51 = 0;
              uint64_t v33 = 0;
            }
            id v35 = [v54 emailAddress];
            if (v35)
            {
              uint64_t v36 = v35;
              uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v38 = v37;

              if (v33)
              {
                if (v38)
                {
                  if (v51 != v49 || v33 != v38)
                  {
                    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v40) {
                      goto LABEL_63;
                    }
LABEL_61:
                    sub_10053BBA0((void *)a1, (id)a2, a3, a4);
                    sub_10053BBA0((void *)a5, (id)a6, v55, a8);
LABEL_74:

                    goto LABEL_75;
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
LABEL_63:
                  id v41 = [v53 phoneNumber];
                  if (v41)
                  {
                    uint64_t v42 = v41;
                    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v52 = v43;
                  }
                  else
                  {
                    uint64_t v50 = 0;
                    uint64_t v52 = 0;
                  }
                  id v44 = [v54 phoneNumber];
                  if (v44)
                  {
                    uint64_t v45 = v44;
                    uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v48 = v47;

                    if (v52)
                    {
                      if (v48)
                      {
                        if (v50 == v46 && v52 == v48) {
                          char v21 = 1;
                        }
                        else {
                          char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        }
                        swift_bridgeObjectRetain();
                        sub_10053BBA0((void *)a1, (id)a2, a3, a4);
                        sub_10053BBA0((void *)a5, (id)a6, v55, a8);
                        swift_bridgeObjectRelease_n();
                        swift_bridgeObjectRelease();

                        return v21 & 1;
                      }
                      goto LABEL_73;
                    }
                  }
                  else
                  {
                    if (v52)
                    {
LABEL_73:
                      swift_bridgeObjectRetain();
                      sub_10053BBA0((void *)a1, (id)a2, a3, a4);
                      sub_10053BBA0((void *)a5, (id)a6, v55, a8);
                      swift_bridgeObjectRelease_n();
                      goto LABEL_74;
                    }
                    uint64_t v48 = 0;
                  }
                  sub_10053BBA0((void *)a1, (id)a2, a3, a4);
                  sub_10053BBA0((void *)a5, (id)a6, v55, a8);

                  if (v48)
                  {
                    swift_bridgeObjectRelease();
                    goto LABEL_75;
                  }
                  goto LABEL_46;
                }
              }
              else if (!v38)
              {
                goto LABEL_63;
              }
            }
            else if (!v33)
            {
              goto LABEL_63;
            }
            swift_bridgeObjectRelease();
            goto LABEL_61;
          }
LABEL_43:
          id v34 = v26;
          sub_10053BBA0((void *)a1, (id)a2, a3, a4);
          sub_10053BBA0((void *)a5, (id)a6, v55, a8);

          goto LABEL_75;
        }
        id v26 = v29;
LABEL_45:
        sub_10053BBA0((void *)a1, (id)a2, a3, a4);
        sub_10053BBA0((void *)a5, (id)a6, v55, a8);

        if (v26)
        {
LABEL_75:
          char v21 = 0;
          return v21 & 1;
        }
LABEL_46:
        char v21 = 1;
        return v21 & 1;
      case 3:
        if (a3 | a2 | a1 || a4 != 192)
        {
          if (a8 == 192 && a5 == 1 && !(a7 | a6)) {
            goto LABEL_46;
          }
        }
        else if (a8 >= 0xC0u && !(a7 | a6 | a5) && a8 == 192)
        {
          goto LABEL_46;
        }
        goto LABEL_75;
      default:
        if (a8 > 0x3Fu) {
          goto LABEL_75;
        }
        char v21 = (a2 | a6) == 0;
        if (*(double *)&a2 == 0.0 || *(double *)&a6 == 0.0) {
          return v21 & 1;
        }
        if (a1 == a5 && a2 == a6) {
          goto LABEL_46;
        }
        return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v21 = 0;
  if (v20) {
    goto LABEL_5;
  }
  return v21 & 1;
}

uint64_t sub_100B83B48(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, unint64_t a6, uint64_t a7, int a8)
{
  int v60 = a8;
  uint64_t v56 = a7;
  unint64_t v57 = a5;
  unint64_t v58 = a6;
  uint64_t v59 = a3;
  uint64_t v10 = type metadata accessor for Calendar.Component();
  uint64_t v55 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v19);
  char v21 = (char *)&v53 - v20;
  uint64_t v22 = type metadata accessor for Calendar();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v28 = v25 >> 6;
  if (!(v25 >> 6)) {
    goto LABEL_26;
  }
  if (v28 == 2)
  {
    unsigned __int8 v29 = v60;
    if ((v60 & 0xC0) != 0x80)
    {
LABEL_15:
      LODWORD(v27) = 0;
      uint64_t v40 = v59;
      if (v29 < 0x40u) {
        return v27 & 1;
      }
      goto LABEL_16;
    }
    if (a1)
    {
      uint64_t v33 = (void *)a1;
      uint64_t v34 = v59;
      id v35 = (id)v57;
      if (!v57)
      {
LABEL_26:
        LOBYTE(v27) = 1;
        return v27 & 1;
      }
      id v36 = (id)v58;
      uint64_t v37 = v56;
      unsigned __int8 v38 = v25;
      unsigned __int8 v39 = v60;
      sub_10053BB6C((id)v57, (id)v58, v56, v60);
      sub_10053BB6C(v33, (id)a2, v34, v38);
      sub_10053BB6C(v33, (id)a2, v34, v38);
      sub_10053BB6C(v35, v36, v37, v39);
      if (sub_100701290())
      {
        sub_10053BBA0(v33, (id)a2, v34, v38);
        sub_10053BBA0(v35, v36, v37, v39);
        sub_10053BBA0(v35, v36, v37, v39);
        sub_10053BBA0(v33, (id)a2, v34, v38);
        goto LABEL_26;
      }
      unsigned __int8 v44 = v38;
      if ((sub_100701290() & 1) == 0)
      {
        uint64_t v47 = sub_100701F80();
        uint64_t v49 = v48;
        if (v47 == sub_100701F80() && v49 == v50) {
          LOBYTE(v27) = 0;
        }
        else {
          LOBYTE(v27) = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v51 = v56;
        unsigned __int8 v52 = v60;
        sub_10053BBA0(v35, v36, v56, v60);
        sub_10053BBA0(v33, (id)a2, v34, v44);
        sub_10053BBA0(v35, v36, v51, v52);
        sub_10053BBA0(v33, (id)a2, v34, v44);
        return v27 & 1;
      }
      sub_10053BBA0(v33, (id)a2, v34, v38);
      unsigned __int8 v45 = v60;
      sub_10053BBA0(v35, v36, v37, v60);
      sub_10053BBA0(v35, v36, v37, v45);
      id v41 = v33;
      uint64_t v42 = (void *)a2;
      uint64_t v43 = v34;
      unsigned __int8 v25 = v38;
    }
    else
    {
      id v41 = 0;
      uint64_t v42 = (void *)a2;
      uint64_t v43 = v59;
    }
    sub_10053BBA0(v41, v42, v43, v25);
    goto LABEL_31;
  }
  if (v28 == 1)
  {
    unsigned __int8 v29 = v60;
    if ((v60 & 0xC0) == 0x40)
    {
      static Calendar.current.getter();
      Date.init(timeIntervalSinceReferenceDate:)();
      Date.init(timeIntervalSinceReferenceDate:)();
      uint64_t v30 = v55;
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v13, enum case for Calendar.Component.day(_:), v10);
      uint64_t v31 = Calendar.compare(_:to:toGranularity:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v54 + 8);
      v32(v17, v14);
      v32(v21, v14);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
      LOBYTE(v27) = v31 == -1;
      return v27 & 1;
    }
    goto LABEL_15;
  }
  unsigned __int8 v29 = v60;
  if (v60 < 0x40u) {
    goto LABEL_31;
  }
  uint64_t v40 = v59;
  LODWORD(v27) = 1;
  if (v59 | a2 | a1 || v25 != 192)
  {
LABEL_16:
    if (v29 >= 0xC0u)
    {
      if (!(v56 | v58 | v57) && v29 == 192) {
        goto LABEL_31;
      }
      if (v29 == 192 && v57 == 1 && !(v56 | v58)) {
        goto LABEL_26;
      }
    }
    if (!v27 || v25 != 192 || a1 != 1 || v40 | a2) {
      goto LABEL_26;
    }
LABEL_31:
    LOBYTE(v27) = 0;
  }
  return v27 & 1;
}

double sub_100B84118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v488 = a3;
  uint64_t v485 = a2;
  uint64_t v479 = a1;
  uint64_t v3 = sub_1005057FC(&qword_101679DB0);
  __chkstk_darwin(v3 - 8, v4);
  v484 = (char *)&v404 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1005057FC(&qword_101679E08);
  __chkstk_darwin(v6 - 8, v7);
  v483 = (char *)&v404 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v487 = type metadata accessor for DateComponents();
  uint64_t v491 = *(void *)(v487 - 8);
  uint64_t v10 = __chkstk_darwin(v487, v9);
  v446 = (char *)&v404 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  v447 = (char *)&v404 - v14;
  __chkstk_darwin(v13, v15);
  v486 = (char *)&v404 - v16;
  uint64_t v17 = sub_1005057FC(&qword_101672EB0);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v421 = (uint64_t)&v404 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v420 = (uint64_t)&v404 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v423 = (uint64_t)&v404 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  __int16 v424 = (char *)&v404 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  v430 = (char *)&v404 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  v433 = (char *)&v404 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v418 = (uint64_t)&v404 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v417 = (uint64_t)&v404 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v422 = (uint64_t)&v404 - v44;
  uint64_t v46 = __chkstk_darwin(v43, v45);
  char v425 = (char *)&v404 - v47;
  uint64_t v49 = __chkstk_darwin(v46, v48);
  char v426 = (char *)&v404 - v50;
  uint64_t v52 = __chkstk_darwin(v49, v51);
  v431 = (char *)&v404 - v53;
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v436 = (uint64_t)&v404 - v56;
  uint64_t v58 = __chkstk_darwin(v55, v57);
  v435 = (char *)&v404 - v59;
  uint64_t v61 = __chkstk_darwin(v58, v60);
  uint64_t v448 = (uint64_t)&v404 - v62;
  uint64_t v64 = __chkstk_darwin(v61, v63);
  uint64_t v456 = (uint64_t)&v404 - v65;
  uint64_t v67 = __chkstk_darwin(v64, v66);
  v457 = (char *)&v404 - v68;
  uint64_t v70 = __chkstk_darwin(v67, v69);
  uint64_t v439 = (uint64_t)&v404 - v71;
  uint64_t v73 = __chkstk_darwin(v70, v72);
  v438 = (char *)&v404 - v74;
  uint64_t v76 = __chkstk_darwin(v73, v75);
  uint64_t v460 = (uint64_t)&v404 - v77;
  uint64_t v79 = __chkstk_darwin(v76, v78);
  uint64_t v462 = (uint64_t)&v404 - v80;
  uint64_t v82 = __chkstk_darwin(v79, v81);
  v465 = (char *)&v404 - v83;
  uint64_t v85 = __chkstk_darwin(v82, v84);
  uint64_t v455 = (uint64_t)&v404 - v86;
  uint64_t v88 = __chkstk_darwin(v85, v87);
  v454 = (char *)&v404 - v89;
  uint64_t v91 = __chkstk_darwin(v88, v90);
  uint64_t v464 = (uint64_t)&v404 - v92;
  uint64_t v94 = __chkstk_darwin(v91, v93);
  uint64_t v470 = (uint64_t)&v404 - v95;
  uint64_t v97 = __chkstk_darwin(v94, v96);
  *(void *)&long long v474 = (char *)&v404 - v98;
  uint64_t v100 = __chkstk_darwin(v97, v99);
  uint64_t v473 = (uint64_t)&v404 - v101;
  uint64_t v103 = __chkstk_darwin(v100, v102);
  v472 = (char *)&v404 - v104;
  uint64_t v106 = __chkstk_darwin(v103, v105);
  uint64_t v468 = (uint64_t)&v404 - v107;
  uint64_t v109 = __chkstk_darwin(v106, v108);
  v467 = (char *)&v404 - v110;
  uint64_t v112 = __chkstk_darwin(v109, v111);
  uint64_t v477 = (uint64_t)&v404 - v113;
  uint64_t v115 = __chkstk_darwin(v112, v114);
  v478 = (char *)&v404 - v116;
  uint64_t v118 = __chkstk_darwin(v115, v117);
  v481 = (char *)&v404 - v119;
  __chkstk_darwin(v118, v120);
  unint64_t v122 = (char *)&v404 - v121;
  uint64_t v123 = type metadata accessor for Date();
  uint64_t v490 = *(void *)(v123 - 8);
  uint64_t v125 = __chkstk_darwin(v123, v124);
  char v419 = (char *)&v404 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __chkstk_darwin(v125, v127);
  uint64_t v428 = (char *)&v404 - v129;
  uint64_t v131 = __chkstk_darwin(v128, v130);
  v432 = (char *)&v404 - v132;
  uint64_t v134 = __chkstk_darwin(v131, v133);
  char v416 = (char *)&v404 - v135;
  uint64_t v137 = __chkstk_darwin(v134, v136);
  v427 = (char *)&v404 - v138;
  uint64_t v140 = __chkstk_darwin(v137, v139);
  v429 = (char *)&v404 - v141;
  uint64_t v143 = __chkstk_darwin(v140, v142);
  v434 = (char *)&v404 - v144;
  uint64_t v146 = __chkstk_darwin(v143, v145);
  v458 = (char *)&v404 - v147;
  uint64_t v149 = __chkstk_darwin(v146, v148);
  v459 = (char *)&v404 - v150;
  uint64_t v152 = __chkstk_darwin(v149, v151);
  v437 = (char *)&v404 - v153;
  uint64_t v155 = __chkstk_darwin(v152, v154);
  v463 = (char *)&v404 - v156;
  uint64_t v158 = __chkstk_darwin(v155, v157);
  v461 = (char *)&v404 - v159;
  uint64_t v161 = __chkstk_darwin(v158, v160);
  v453 = (char *)&v404 - v162;
  uint64_t v164 = __chkstk_darwin(v161, v163);
  v475 = (char *)&v404 - v165;
  uint64_t v167 = __chkstk_darwin(v164, v166);
  v476 = (char *)&v404 - v168;
  uint64_t v170 = __chkstk_darwin(v167, v169);
  v471 = (char *)&v404 - v171;
  uint64_t v173 = __chkstk_darwin(v170, v172);
  v466 = (char *)&v404 - v174;
  uint64_t v176 = __chkstk_darwin(v173, v175);
  v482 = (char *)&v404 - v177;
  __chkstk_darwin(v176, v178);
  v489 = (char *)&v404 - v179;
  uint64_t v180 = sub_1005057FC(&qword_101672F48);
  uint64_t v181 = type metadata accessor for Calendar.Component();
  uint64_t v182 = *(void *)(v181 - 8);
  uint64_t v183 = *(void *)(v182 + 72);
  uint64_t v184 = *(unsigned __int8 *)(v182 + 80);
  uint64_t v185 = (v184 + 32) & ~v184;
  uint64_t v451 = v180;
  uint64_t v450 = v184 | 7;
  uint64_t v186 = swift_allocObject();
  *(_OWORD *)(v186 + 16) = xmmword_10117DF40;
  uint64_t v443 = v185;
  uint64_t v187 = v186 + v185;
  uint64_t v188 = *(void (**)(uint64_t))(v182 + 104);
  unsigned int v442 = enum case for Calendar.Component.year(_:);
  v188(v187);
  uint64_t v452 = v183;
  unsigned int v449 = enum case for Calendar.Component.month(_:);
  v188(v187 + v183);
  uint64_t v440 = 2 * v183;
  uint64_t v444 = v182 + 104;
  v441 = v188;
  ((void (*)(uint64_t, void, uint64_t))v188)(v187 + 2 * v183, enum case for Calendar.Component.day(_:), v181);
  sub_100508274(v186);
  swift_setDeallocating();
  uint64_t v445 = v181;
  swift_arrayDestroy();
  uint64_t v189 = v487;
  swift_deallocClassInstance();
  id v190 = v486;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  Calendar.date(from:)();
  uint64_t v191 = *(void (**)(char *, uint64_t))(v491 + 8);
  v491 += 8;
  v191(v190, v189);
  uint64_t v193 = v490 + 48;
  uint64_t v192 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48);
  if (v192(v122, 1, v123) == 1) {
    goto LABEL_2;
  }
  v469 = v192;
  uint64_t v480 = v193;
  id v195 = *(void (**)(char *, char *, uint64_t))(v490 + 32);
  uint64_t v415 = v490 + 32;
  v195(v489, v122, v123);
  uint64_t v196 = type metadata accessor for Calendar();
  uint64_t v197 = *(void *)(v196 - 8);
  uint64_t v198 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v197 + 56);
  uint64_t v409 = v196;
  char v410 = v198;
  uint64_t v413 = v197 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v198)(v483, 1, 1);
  uint64_t v199 = type metadata accessor for TimeZone();
  uint64_t v200 = *(void *)(v199 - 8);
  unint64_t v201 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v200 + 56);
  uint64_t v414 = v199;
  __int16 v412 = v201;
  uint64_t v411 = v200 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v201)(v484, 1, 1);
  uint64_t v202 = v190;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v203 = v481;
  id v204 = v469;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v191(v202, v189);
  if (v204(v203, 1, v123) == 1)
  {
    (*(void (**)(char *, uint64_t))(v490 + 8))(v489, v123);
    uint64_t v194 = (uint64_t)v203;
    goto LABEL_5;
  }
  __int16 v406 = v191;
  uint64_t v207 = v482;
  char v405 = (void (*)(char *, uint64_t, char *))v195;
  v195(v482, v203, v123);
  uint64_t v208 = v490;
  uint64_t v209 = v490 + 16;
  uint64_t v210 = (uint64_t)v478;
  char v407 = *(void (**)(char *, char *, uint64_t))(v490 + 16);
  v407(v478, v207, v123);
  uint64_t v211 = *(void (**)(uint64_t, void, uint64_t, char *))(v208 + 56);
  v481 = (char *)(v208 + 56);
  char v408 = v211;
  v211(v210, 0, 1, (char *)v123);
  Date.timeIntervalSinceReferenceDate.getter();
  double v213 = v212;
  uint64_t v214 = v477;
  sub_100522E9C(v210, v477, &qword_101672EB0);
  uint64_t v215 = (unsigned int (*)(uint64_t, uint64_t, char *))v204;
  if (v204((char *)v214, 1, v123) == 1)
  {
    sub_100522F00(v214, &qword_101672EB0);
    double v216 = INFINITY;
  }
  else
  {
    Date.timeIntervalSinceReferenceDate.getter();
    double v216 = v217;
    (*(void (**)(uint64_t, uint64_t))(v490 + 8))(v214, v123);
  }
  uint64_t v218 = (char *)v123;
  uint64_t v219 = v414;
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v221 = v489;
  uint64_t v222 = v482;
  if (v213 <= v220)
  {
    double v223 = v220;
    sub_100522F00(v210, &qword_101672EB0);
    if (v223 < v216)
    {
      uint64_t v224 = v466;
      unint64_t v225 = (void (*)(char *, char *, char *))v407;
      v407(v466, v221, (uint64_t)v218);
      uint64_t v226 = (uint64_t)v467;
      v225(v467, v222, v218);
      uint64_t v227 = v224;
      v408(v226, 0, 1, v218);
      Date.timeIntervalSinceReferenceDate.getter();
      double v205 = v228;
      uint64_t v229 = v468;
      sub_100522E9C(v226, v468, &qword_101672EB0);
      if (v215(v229, 1, v218) == 1)
      {
        sub_100522F00(v226, &qword_101672EB0);
        uint64_t v246 = *(void (**)(char *, char *))(v490 + 8);
        v246(v227, v218);
        sub_100522F00(v229, &qword_101672EB0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter();
        sub_100522F00(v226, &qword_101672EB0);
        uint64_t v246 = *(void (**)(char *, char *))(v490 + 8);
        v246(v227, v218);
        v246((char *)v229, v218);
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_100522F00(v210, &qword_101672EB0);
  }
  sub_100B87F28(&qword_101694AD8, (void (*)(uint64_t))&type metadata accessor for Date);
  if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
  {
    long long v235 = v471;
    v407(v471, v222, (uint64_t)v218);
    uint64_t v236 = (uint64_t)v472;
    v408((uint64_t)v472, 1, 1, v218);
    Date.timeIntervalSinceReferenceDate.getter();
    double v205 = v237;
    uint64_t v238 = v473;
    sub_100522E9C(v236, v473, &qword_101672EB0);
    if (v215(v238, 1, v218) == 1)
    {
      sub_100522F00(v236, &qword_101672EB0);
      uint64_t v246 = *(void (**)(char *, char *))(v490 + 8);
      v246(v235, v218);
      sub_100522F00(v238, &qword_101672EB0);
    }
    else
    {
      Date.timeIntervalSinceReferenceDate.getter();
      sub_100522F00(v236, &qword_101672EB0);
      uint64_t v246 = *(void (**)(char *, char *))(v490 + 8);
      v246(v235, v218);
      v246((char *)v238, v218);
    }
LABEL_25:
    v246(v222, v218);
    v246(v221, v218);
    return v205;
  }
  uint64_t v404 = v209;
  uint64_t v230 = v215;
  id v231 = v221;
  v410(v483, 1, 1, v409);
  v412(v484, 1, 1, v219);
  uint64_t v232 = v486;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v233 = v474;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v406(v232, v487);
  if (v230(v233, 1, v218) == 1)
  {
    uint64_t v234 = *(void (**)(char *, char *))(v490 + 8);
    v234(v482, v218);
    v234(v231, v218);
    uint64_t v194 = v233;
    goto LABEL_5;
  }
  v405(v476, v233, v218);
  uint64_t v239 = v475;
  uint64_t v240 = (void (*)(uint64_t, char *, char *))v407;
  v407(v475, v231, (uint64_t)v218);
  uint64_t v241 = v470;
  v240(v470, v239, v218);
  v408(v241, 0, 1, v218);
  Date.timeIntervalSinceReferenceDate.getter();
  double v243 = v242;
  uint64_t v244 = v464;
  sub_100522E9C(v241, v464, &qword_101672EB0);
  if (v230(v244, 1, v218) == 1)
  {
    sub_100522F00(v244, &qword_101672EB0);
    double v245 = INFINITY;
  }
  else
  {
    Date.timeIntervalSinceReferenceDate.getter();
    double v245 = v247;
    (*(void (**)(uint64_t, char *))(v490 + 8))(v244, v218);
  }
  uint64_t v248 = v414;
  unint64_t v122 = v465;
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v250 = v482;
  if (v243 <= v249)
  {
    double v252 = v249;
    sub_100522F00(v470, &qword_101672EB0);
    uint64_t v251 = v484;
    if (v252 < v245)
    {
      uint64_t v253 = v453;
      uint64_t v254 = v476;
      uint64_t v255 = (void (*)(char *, char *, char *))v407;
      v407(v453, v476, (uint64_t)v218);
      uint64_t v256 = (uint64_t)v454;
      v255(v454, v475, v218);
      v408(v256, 0, 1, v218);
      Date.timeIntervalSinceReferenceDate.getter();
      double v205 = v257;
      uint64_t v258 = v455;
      sub_100522E9C(v256, v455, &qword_101672EB0);
      if (v469((char *)v258, 1, (uint64_t)v218) == 1)
      {
        sub_100522F00(v256, &qword_101672EB0);
        uint64_t v297 = *(void (**)(char *, char *))(v490 + 8);
        v297(v253, v218);
        sub_100522F00(v258, &qword_101672EB0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter();
        sub_100522F00(v256, &qword_101672EB0);
        uint64_t v297 = *(void (**)(char *, char *))(v490 + 8);
        v297(v253, v218);
        v297((char *)v258, v218);
      }
      uint64_t v298 = v489;
      v297(v475, v218);
      v297(v254, v218);
      v297(v250, v218);
      v297(v298, v218);
      return v205;
    }
  }
  else
  {
    sub_100522F00(v470, &qword_101672EB0);
    uint64_t v251 = v484;
  }
  v410(v483, 1, 1, v409);
  v412(v251, 1, 1, v248);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v259 = v476;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v406(v232, v487);
  long long v260 = (unsigned int (*)(uint64_t, uint64_t, char *))v469;
  if (v469(v122, 1, (uint64_t)v218) == 1)
  {
    uint64_t v261 = *(void (**)(char *, char *))(v490 + 8);
    v261(v475, v218);
    v261(v259, v218);
    v261(v250, v218);
    v261(v489, v218);
LABEL_2:
    uint64_t v194 = (uint64_t)v122;
LABEL_5:
    sub_100522F00(v194, &qword_101672EB0);
    return -INFINITY;
  }
  int v262 = v461;
  v405(v461, (uint64_t)v122, v218);
  int v263 = v463;
  unint64_t v264 = v259;
  unint64_t v265 = v262;
  uint64_t v266 = (void (*)(uint64_t, char *, char *))v407;
  v407(v463, v264, (uint64_t)v218);
  uint64_t v267 = v462;
  v266(v462, v263, v218);
  v408(v267, 0, 1, v218);
  Date.timeIntervalSinceReferenceDate.getter();
  double v269 = v268;
  uint64_t v270 = v460;
  sub_100522E9C(v267, v460, &qword_101672EB0);
  if (v260(v270, 1, v218) == 1)
  {
    sub_100522F00(v270, &qword_101672EB0);
    double v271 = INFINITY;
  }
  else
  {
    Date.timeIntervalSinceReferenceDate.getter();
    double v271 = v272;
    (*(void (**)(uint64_t, char *))(v490 + 8))(v270, v218);
  }
  uint64_t v273 = v414;
  uint64_t v274 = v412;
  Date.timeIntervalSinceReferenceDate.getter();
  if (v269 <= v275)
  {
    double v276 = v275;
    sub_100522F00(v462, &qword_101672EB0);
    if (v276 < v271)
    {
      uint64_t v277 = v437;
      uint64_t v278 = (void (*)(char *, char *, char *))v407;
      v407(v437, v265, (uint64_t)v218);
      uint64_t v279 = (uint64_t)v438;
      v278(v438, v463, v218);
      v408(v279, 0, 1, v218);
      Date.timeIntervalSinceReferenceDate.getter();
      double v205 = v280;
      uint64_t v281 = v439;
      sub_100522E9C(v279, v439, &qword_101672EB0);
      if (v469((char *)v281, 1, (uint64_t)v218) == 1)
      {
        sub_100522F00(v279, &qword_101672EB0);
        char v334 = *(void (**)(char *, char *))(v490 + 8);
        v334(v277, v218);
        sub_100522F00(v281, &qword_101672EB0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter();
        sub_100522F00(v279, &qword_101672EB0);
        char v334 = *(void (**)(char *, char *))(v490 + 8);
        v334(v277, v218);
        v334((char *)v281, v218);
      }
      __int16 v335 = v476;
      char v336 = v489;
      v334(v463, v218);
      v334(v461, v218);
      v334(v475, v218);
      v334(v335, v218);
      v334(v250, v218);
      v334(v336, v218);
      return v205;
    }
  }
  else
  {
    sub_100522F00(v462, &qword_101672EB0);
  }
  v410(v483, 1, 1, v409);
  v274(v484, 1, 1, v273);
  uint64_t v282 = v486;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v283 = v457;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v406(v282, v487);
  uint64_t v284 = (uint64_t (*)(uint64_t, uint64_t, char *))v469;
  if (v469(v283, 1, (uint64_t)v218) == 1)
  {
    uint64_t v285 = (uint64_t)v283;
    uint64_t v286 = *(void (**)(char *, char *))(v490 + 8);
    v286(v463, v218);
    v286(v265, v218);
    v286(v475, v218);
    v286(v476, v218);
    v286(v250, v218);
    v286(v489, v218);
    uint64_t v194 = v285;
    goto LABEL_5;
  }
  v405(v459, (uint64_t)v283, v218);
  uint64_t v287 = v458;
  uint64_t v288 = v265;
  uint64_t v289 = (void (*)(uint64_t, char *, char *))v407;
  v407(v458, v288, (uint64_t)v218);
  uint64_t v290 = v456;
  v289(v456, v287, v218);
  v408(v290, 0, 1, v218);
  Date.timeIntervalSinceReferenceDate.getter();
  double v292 = v291;
  uint64_t v293 = v448;
  sub_100522E9C(v290, v448, &qword_101672EB0);
  int v294 = v284(v293, 1, v218);
  uint64_t v295 = v489;
  if (v294 == 1)
  {
    sub_100522F00(v293, &qword_101672EB0);
    double v296 = INFINITY;
  }
  else
  {
    Date.timeIntervalSinceReferenceDate.getter();
    double v296 = v299;
    (*(void (**)(uint64_t, char *))(v490 + 8))(v293, v218);
  }
  Date.timeIntervalSinceReferenceDate.getter();
  if (v292 <= v300)
  {
    double v301 = v300;
    sub_100522F00(v456, &qword_101672EB0);
    if (v301 < v296)
    {
      uint64_t v302 = v434;
      uint64_t v303 = (void (*)(char *, char *, char *))v407;
      v407(v434, v459, (uint64_t)v218);
      uint64_t v304 = (uint64_t)v435;
      v303(v435, v458, v218);
      v408(v304, 0, 1, v218);
      Date.timeIntervalSinceReferenceDate.getter();
      double v205 = v305;
      uint64_t v306 = v436;
      sub_100522E9C(v304, v436, &qword_101672EB0);
      if (v469((char *)v306, 1, (uint64_t)v218) == 1)
      {
        sub_100522F00(v304, &qword_101672EB0);
        uint64_t v337 = *(void (**)(char *, char *))(v490 + 8);
        v337(v302, v218);
        sub_100522F00(v306, &qword_101672EB0);
      }
      else
      {
        Date.timeIntervalSinceReferenceDate.getter();
        sub_100522F00(v304, &qword_101672EB0);
        uint64_t v337 = *(void (**)(char *, char *))(v490 + 8);
        v337(v302, v218);
        v337((char *)v306, v218);
      }
      uint64_t v338 = v476;
      v337(v458, v218);
      v337(v459, v218);
      v337(v463, v218);
      v337(v461, v218);
      v337(v475, v218);
      v337(v338, v218);
      v337(v482, v218);
      v337(v295, v218);
      return v205;
    }
  }
  else
  {
    sub_100522F00(v456, &qword_101672EB0);
  }
  v478 = v218;
  uint64_t v307 = v443;
  uint64_t v477 = v443 + v440;
  uint64_t v308 = swift_allocObject();
  long long v474 = xmmword_10117D8C0;
  *(_OWORD *)(v308 + 16) = xmmword_10117D8C0;
  uint64_t v309 = v445;
  int v310 = v441;
  ((void (*)(uint64_t, void, uint64_t))v441)(v308 + v307, v449, v445);
  uint64_t v311 = v442;
  ((void (*)(uint64_t, void, uint64_t))v310)(v308 + v307 + v452, v442, v309);
  sub_100508274(v308);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v312 = v447;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v313 = swift_allocObject();
  *(_OWORD *)(v313 + 16) = v474;
  ((void (*)(uint64_t, void, uint64_t))v310)(v313 + v307, v449, v309);
  ((void (*)(uint64_t, uint64_t, uint64_t))v310)(v313 + v307 + v452, v311, v309);
  sub_100508274(v313);
  swift_setDeallocating();
  swift_arrayDestroy();
  int v314 = v312;
  swift_deallocClassInstance();
  uint64_t v315 = v446;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  DateComponents.month.getter();
  if ((v316 & 1) != 0
    || (uint64_t v317 = DateComponents.year.getter(), (v318 & 1) != 0)
    || (uint64_t v319 = v317, v320 = DateComponents.year.getter(), (v321 & 1) != 0))
  {
    int v329 = v315;
    uint64_t v330 = v487;
    __int16 v331 = v406;
    v406(v329, v487);
    v331(v314, v330);
    char v332 = *(void (**)(char *, char *))(v490 + 8);
    int v333 = v478;
    v332(v458, v478);
    v332(v459, v333);
    v332(v463, v333);
    v332(v461, v333);
    v332(v475, v333);
    v332(v476, v333);
    v332(v482, v333);
    v332(v489, v333);
    return -INFINITY;
  }
  uint64_t v322 = v478;
  uint64_t v323 = v483;
  uint64_t v324 = v409;
  uint64_t v325 = v410;
  uint64_t v326 = v412;
  if (v319 == v320)
  {
    v410(v483, 1, 1, v409);
    v326(v484, 1, 1, v414);
    uint64_t v327 = v486;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    uint64_t v328 = (uint64_t)v431;
    Calendar.date(from:)();
    v406(v327, v487);
    if (v469((char *)v328, 1, (uint64_t)v322) == 1)
    {
      sub_100522F00(v328, &qword_101672EB0);
    }
    else
    {
      uint64_t v339 = v429;
      v405(v429, v328, v322);
      v410(v323, 1, 1, v324);
      v326(v484, 1, 1, v414);
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
      uint64_t v340 = (uint64_t)v426;
      Calendar.date(byAdding:to:wrappingComponents:)();
      v406(v327, v487);
      if (v469((char *)v340, 1, (uint64_t)v322) != 1)
      {
        uint64_t v361 = v490;
        uint64_t v362 = v427;
        v405(v427, v340, v322);
        uint64_t v363 = (uint64_t)v425;
        v407(v425, v362, (uint64_t)v322);
        v408(v363, 0, 1, v322);
        Date.timeIntervalSinceReferenceDate.getter();
        double v365 = v364;
        uint64_t v366 = v422;
        sub_100522E9C(v363, v422, &qword_101672EB0);
        int v367 = (unsigned int (*)(uint64_t, uint64_t, char *))v469;
        if (v469((char *)v366, 1, (uint64_t)v322) == 1)
        {
          sub_100522F00(v366, &qword_101672EB0);
          double v368 = INFINITY;
        }
        else
        {
          Date.timeIntervalSinceReferenceDate.getter();
          double v368 = v382;
          (*(void (**)(uint64_t, char *))(v361 + 8))(v366, v478);
        }
        Date.timeIntervalSinceReferenceDate.getter();
        if (v365 <= v383)
        {
          double v384 = v383;
          sub_100522F00((uint64_t)v425, &qword_101672EB0);
          if (v384 < v368)
          {
            __int16 v385 = v478;
            char v386 = (void (*)(uint64_t, char *, char *))v407;
            v407(v416, v429, (uint64_t)v478);
            uint64_t v387 = v417;
            v386(v417, v427, v385);
            v408(v387, 0, 1, v385);
            Date.timeIntervalSinceReferenceDate.getter();
            double v205 = v388;
            uint64_t v389 = v387;
            uint64_t v390 = v418;
            sub_100522E9C(v389, v418, &qword_101672EB0);
            if (v367(v390, 1, v385) == 1)
            {
              sub_100522F00(v417, &qword_101672EB0);
              char v399 = *(void (**)(char *, char *))(v361 + 8);
              v399(v416, v478);
              sub_100522F00(v418, &qword_101672EB0);
            }
            else
            {
              uint64_t v398 = v418;
              Date.timeIntervalSinceReferenceDate.getter();
              sub_100522F00(v417, &qword_101672EB0);
              char v399 = *(void (**)(char *, char *))(v361 + 8);
              __int16 v400 = v478;
              v399(v416, v478);
              v399((char *)v398, v400);
            }
            char v401 = v478;
            v399(v427, v478);
            v399(v429, v401);
            uint64_t v402 = v487;
            __int16 v403 = v406;
            v406(v446, v487);
            v403(v447, v402);
            v399(v458, v401);
            v399(v459, v401);
            v399(v463, v401);
            v399(v461, v401);
            v399(v475, v401);
            v399(v476, v401);
            v399(v482, v401);
            v399(v489, v401);
            return v205;
          }
        }
        else
        {
          sub_100522F00((uint64_t)v425, &qword_101672EB0);
        }
        __int16 v391 = *(void (**)(char *, char *))(v361 + 8);
        uint64_t v322 = v478;
        v391(v427, v478);
        v391(v429, v322);
        uint64_t v326 = v412;
        v410(v483, 1, 1, v409);
        goto LABEL_69;
      }
      (*(void (**)(char *, char *))(v490 + 8))(v339, v322);
      sub_100522F00(v340, &qword_101672EB0);
      uint64_t v324 = v409;
    }
    uint64_t v325 = v410;
  }
  v325(v323, 1, 1, v324);
LABEL_69:
  v326(v484, 1, 1, v414);
  uint64_t v341 = v486;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v342 = v433;
  Calendar.date(from:)();
  uint64_t v343 = v487;
  uint64_t v344 = v406;
  v406(v341, v487);
  uint64_t v345 = v322;
  if (v469(v342, 1, (uint64_t)v322) == 1)
  {
    v344(v446, v343);
    v344(v447, v343);
    uint64_t v346 = *(void (**)(char *, char *))(v490 + 8);
    v346(v458, v322);
    v346(v459, v322);
    v346(v463, v322);
    v346(v461, v322);
    v346(v475, v322);
    v346(v476, v322);
    v346(v482, v322);
    v346(v489, v322);
    uint64_t v194 = (uint64_t)v342;
    goto LABEL_5;
  }
  uint64_t v347 = v432;
  v405(v432, (uint64_t)v342, v322);
  v410(v483, 1, 1, v409);
  v326(v484, 1, 1, v414);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  int v348 = v430;
  char v349 = v347;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v344(v341, v343);
  __int16 v350 = (unsigned int (*)(uint64_t, uint64_t, char *))v469;
  unsigned int v351 = v469(v348, 1, (uint64_t)v345);
  int v352 = v482;
  if (v351 == 1)
  {
    char v353 = *(void (**)(char *, char *))(v490 + 8);
    v353(v347, v345);
    v344(v446, v343);
    v344(v447, v343);
    v353(v458, v345);
    v353(v459, v345);
    v353(v463, v345);
    v353(v461, v345);
    v353(v475, v345);
    v353(v476, v345);
    v353(v352, v345);
    v353(v489, v345);
    uint64_t v194 = (uint64_t)v348;
    goto LABEL_5;
  }
  __int16 v354 = v428;
  v405(v428, (uint64_t)v348, v345);
  uint64_t v355 = (uint64_t)v424;
  v407(v424, v354, (uint64_t)v345);
  v408(v355, 0, 1, v345);
  Date.timeIntervalSinceReferenceDate.getter();
  double v357 = v356;
  uint64_t v358 = v423;
  sub_100522E9C(v355, v423, &qword_101672EB0);
  uint64_t v359 = v350;
  if (v350(v358, 1, v345) == 1)
  {
    sub_100522F00(v358, &qword_101672EB0);
    double v360 = INFINITY;
  }
  else
  {
    Date.timeIntervalSinceReferenceDate.getter();
    double v360 = v369;
    (*(void (**)(uint64_t, char *))(v490 + 8))(v358, v345);
  }
  Date.timeIntervalSinceReferenceDate.getter();
  if (v357 > v370)
  {
    int v371 = v352;
    sub_100522F00(v355, &qword_101672EB0);
LABEL_84:
    uint64_t v379 = *(void (**)(char *, char *))(v490 + 8);
    v379(v354, v345);
    v379(v349, v345);
    uint64_t v380 = v487;
    char v381 = v406;
    v406(v446, v487);
    v381(v447, v380);
    v379(v458, v345);
    v379(v459, v345);
    v379(v463, v345);
    v379(v461, v345);
    v379(v475, v345);
    v379(v476, v345);
    v379(v371, v345);
    v379(v489, v345);
    return -INFINITY;
  }
  double v372 = v370;
  int v371 = v352;
  sub_100522F00(v355, &qword_101672EB0);
  if (v372 >= v360) {
    goto LABEL_84;
  }
  uint64_t v373 = v490;
  uint64_t v374 = (void (*)(uint64_t, char *, char *))v407;
  v407(v419, v349, (uint64_t)v345);
  uint64_t v375 = v420;
  v374(v420, v354, v345);
  v408(v375, 0, 1, v345);
  Date.timeIntervalSinceReferenceDate.getter();
  double v205 = v376;
  uint64_t v377 = v375;
  uint64_t v378 = v421;
  sub_100522E9C(v377, v421, &qword_101672EB0);
  if (v359(v378, 1, v345) == 1)
  {
    sub_100522F00(v420, &qword_101672EB0);
    char v393 = *(void (**)(char *, char *))(v373 + 8);
    v393(v419, v478);
    sub_100522F00(v421, &qword_101672EB0);
  }
  else
  {
    uint64_t v392 = v421;
    Date.timeIntervalSinceReferenceDate.getter();
    sub_100522F00(v420, &qword_101672EB0);
    char v393 = *(void (**)(char *, char *))(v373 + 8);
    __int16 v394 = v478;
    v393(v419, v478);
    v393((char *)v392, v394);
  }
  char v395 = v478;
  v393(v428, v478);
  v393(v432, v395);
  uint64_t v396 = v487;
  __int16 v397 = v406;
  v406(v446, v487);
  v397(v447, v396);
  v393(v458, v395);
  v393(v459, v395);
  v393(v463, v395);
  v393(v461, v395);
  v393(v475, v395);
  v393(v476, v395);
  v393(v482, v395);
  v393(v489, v395);
  return v205;
}

double *sub_100B87810(uint64_t a1, uint64_t a2)
{
  uint64_t v88 = a2;
  uint64_t v87 = type metadata accessor for Calendar();
  uint64_t v3 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v4);
  uint64_t v86 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRLBoardLibraryViewModel.Item(0);
  uint64_t v85 = *(void *)(v11 - 8);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v14 = (char *)v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1005057FC((uint64_t *)&unk_101674740);
  uint64_t v17 = __chkstk_darwin(v15, v16);
  uint64_t v84 = (uint64_t)v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)v71 - v21;
  __chkstk_darwin(v20, v23);
  if (*(void *)(a1 + 16))
  {
    uint64_t v90 = *(void *)(a1 + 16);
    uint64_t v82 = (char *)v71 + *(int *)(v15 + 48) - v25;
    uint64_t v83 = (uint64_t)v71 - v25;
    uint64_t v26 = a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    uint64_t v73 = *(void *)(v24 + 72);
    uint64_t v80 = (void (**)(uint64_t, char *, uint64_t))(v7 + 16);
    uint64_t v81 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v79 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    uint64_t v72 = (void (**)(char *, uint64_t))(v7 + 8);
    v71[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v27 = (double *)_swiftEmptyDictionarySingleton;
    long long v78 = xmmword_10117E810;
    uint64_t v75 = v10;
    uint64_t v76 = v6;
    uint64_t v91 = v14;
    uint64_t v77 = v15;
    uint64_t v74 = v22;
    while (1)
    {
      uint64_t v89 = v26;
      uint64_t v29 = v83;
      sub_100522E9C(v26, v83, (uint64_t *)&unk_101674740);
      uint64_t v30 = &v22[*(int *)(v15 + 48)];
      sub_1007A4808(v29, (uint64_t)v22, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v31 = *v81;
      (*v81)(v30, v82, v6);
      uint64_t v32 = (uint64_t)v22;
      uint64_t v33 = v84;
      uint64_t v34 = (char *)(v84 + *(int *)(v15 + 48));
      sub_100B87F70(v32, v84, type metadata accessor for CRLBoardLibraryViewModel.Item);
      (*v80)((uint64_t)v34, v30, v6);
      sub_1007A4808(v33, (uint64_t)v14, type metadata accessor for CRLBoardLibraryViewModel.Item);
      v31(v10, v34, v6);
      uint64_t v35 = (uint64_t)v86;
      static Calendar.current.getter();
      double v36 = sub_100B84118((uint64_t)v10, v88, v35);
      unsigned __int8 v38 = v37;
      unint64_t v39 = *(void *)&v36;
      uint64_t v41 = v40;
      char v43 = v42;
      (*v79)(v35, v87);
      unint64_t v44 = v38;
      uint64_t v45 = *((void *)v27 + 2);
      int v92 = v43 & 1 | 0x40;
      if (v45)
      {
        unint64_t v46 = sub_100957584(v38, v39, v41, v43 & 1 | 0x40u);
        uint64_t v47 = _swiftEmptyArrayStorage;
        if (v48)
        {
          uint64_t v47 = *(double **)(*((void *)v27 + 7) + 8 * v46);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v47 = _swiftEmptyArrayStorage;
      }
      sub_1005057FC(&qword_10169B510);
      unint64_t v49 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = v78;
      sub_100B87F70((uint64_t)v91, v50 + v49, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v93 = v47;
      sub_1006E1A94(v50);
      uint64_t v51 = v93;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v93 = v27;
      unint64_t v53 = v44;
      unint64_t v54 = v44;
      uint64_t v55 = v41;
      unint64_t v57 = sub_100957584(v54, v39, v41, v92);
      uint64_t v58 = *((void *)v27 + 2);
      BOOL v59 = (v56 & 1) == 0;
      uint64_t v60 = v58 + v59;
      uint64_t v61 = v89;
      if (__OFADD__(v58, v59))
      {
        __break(1u);
LABEL_23:
        __break(1u);
      }
      char v62 = v56;
      if (*((void *)v27 + 3) >= v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100983DF0();
        }
        uint64_t v15 = v77;
        char v63 = v92;
        uint64_t v27 = v93;
        if ((v62 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_10096D830(v60, isUniquelyReferenced_nonNull_native);
        char v63 = v92;
        unint64_t v64 = sub_100957584(v53, v39, v55, v92);
        if ((v62 & 1) != (v65 & 1))
        {
          unint64_t result = (double *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
          __break(1u);
          return result;
        }
        unint64_t v57 = v64;
        uint64_t v15 = v77;
        uint64_t v27 = v93;
        if ((v62 & 1) == 0)
        {
LABEL_17:
          *(void *)&v27[(v57 >> 6) + 8] |= 1 << v57;
          uint64_t v66 = *((void *)v27 + 6) + 32 * v57;
          *(void *)uint64_t v66 = v53;
          *(void *)(v66 + 8) = v39;
          *(void *)(v66 + 16) = v55;
          *(unsigned char *)(v66 + 24) = v63;
          *(void *)(*((void *)v27 + 7) + 8 * v57) = v51;
          uint64_t v67 = *((void *)v27 + 2);
          BOOL v68 = __OFADD__(v67, 1);
          uint64_t v69 = v67 + 1;
          if (v68) {
            goto LABEL_23;
          }
          *((void *)v27 + 2) = v69;
          goto LABEL_4;
        }
      }
      uint64_t v28 = *((void *)v27 + 7);
      swift_bridgeObjectRelease();
      *(void *)(v28 + 8 * v57) = v51;
LABEL_4:
      swift_bridgeObjectRelease();
      uint64_t v10 = v75;
      uint64_t v6 = v76;
      (*v72)(v75, v76);
      uint64_t v14 = v91;
      sub_100575C88((uint64_t)v91, type metadata accessor for CRLBoardLibraryViewModel.Item);
      uint64_t v22 = v74;
      sub_100522F00((uint64_t)v74, (uint64_t *)&unk_101674740);
      uint64_t v26 = v61 + v73;
      if (!--v90)
      {
        swift_bridgeObjectRelease();
        return v27;
      }
    }
  }
  return (double *)_swiftEmptyDictionarySingleton;
}

uint64_t sub_100B87F28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B87F70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF8 && a1[25]) {
    return (*(_DWORD *)a1 + 248);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 9;
  int v5 = v3 - 9;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 248;
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF8) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.TimeBucket()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket;
}

unint64_t sub_100B88078()
{
  unint64_t result = qword_101694AE0;
  if (!qword_101694AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694AE0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B88198);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType()
{
  return &type metadata for CRLBoardLibraryFolderViewModel.TimeBucket.BucketType;
}

unint64_t sub_100B881D4()
{
  unint64_t result = qword_101694AE8;
  if (!qword_101694AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694AE8);
  }
  return result;
}

void sub_100B88228(uint64_t a1@<X8>)
{
  id v3 = [v1 activityType];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unsigned int v6 = v5;

  char v7 = sub_1009C383C(v4, v6);
  if (sub_1009C2D88(v7) == 0xD000000000000027 && v8 == 0x8000000101235570)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
LABEL_9:
      uint64_t v20 = sub_100B885FC();
      if (v21 & 1) != 0 || (uint64_t v18 = v20, v22 = sub_100B88420(), (v24))
      {
        uint64_t v16 = 0;
        uint64_t v14 = 0;
        uint64_t v13 = 0;
        uint64_t v18 = 0;
        unint64_t v17 = 0;
        char v19 = 2;
      }
      else
      {
        uint64_t v13 = v22;
        uint64_t v14 = v23;
        char v19 = 0;
        unint64_t v17 = 0xF000000000000000;
        uint64_t v16 = 1;
      }
      goto LABEL_13;
    }
  }
  uint64_t v10 = sub_100B88420();
  if (v12) {
    goto LABEL_9;
  }
  uint64_t v13 = v10;
  uint64_t v14 = v11;
  sub_100B885FC();
  if ((v15 & 1) == 0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"crl_boardViewState", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasController_UserActivity.swift", 113, 2, 26, (uint64_t)"expected nil value, but non-nil found", 37, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"crl_boardViewState", 18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCanvas/CRLInteractiveCanvasController_UserActivity.swift", 113, 2, 26);
  }
  uint64_t v16 = 1;
  unint64_t v17 = 0xF000000000000000;
  uint64_t v18 = 0x3FF0000000000000;
  char v19 = 1;
LABEL_13:
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v14;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v16;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = v17;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v17;
  *(unsigned char *)(a1 + 72) = v19;
}

uint64_t sub_100B88420()
{
  id v1 = [v0 userInfo];
  if (!v1)
  {
    long long v10 = 0u;
    long long v11 = 0u;
LABEL_10:
    sub_10052E2B0((uint64_t)&v10);
    return 0;
  }
  Swift::UInt64 v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10095647C((uint64_t)v9), (v5 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v10);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_10050BFE0((uint64_t)v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v11 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v6 = v9[0];
    unint64_t v7 = v9[1];
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    type metadata accessor for CGPoint(0);
    sub_10060D22C(&qword_101676CC8);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_100510084(v6, v7);
    swift_release();
    return v9[0];
  }
  return 0;
}

uint64_t sub_100B885FC()
{
  id v1 = [v0 userInfo];
  if (!v1)
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_12:
    sub_10052E2B0((uint64_t)&v8);
    return 0;
  }
  Swift::UInt64 v2 = v1;
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  long long v8 = xmmword_101694AF0;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10095647C((uint64_t)v7), (v5 & 1) != 0))
  {
    sub_100522D7C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v8);
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_10050BFE0((uint64_t)v7);
  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1)) {
    goto LABEL_12;
  }
  if (swift_dynamicCast()) {
    return v7[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_100B88734(void *a1)
{
  Swift::UInt64 v2 = v1;
  id v4 = [a1 activityType];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  char v8 = sub_1009C383C(v5, v7);
  if (sub_1009C2D88(v8) == 0xD000000000000033 && v9 == 0x80000001012354F0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    sub_1005057FC(&qword_101677430);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117E810;
    swift_bridgeObjectRetain();
    AnyHashable.init<A>(_:)();
    [v2 viewScale];
    *(void *)(inited + 96) = &type metadata for CGFloat;
    *(void *)(inited + 72) = v12;
    sub_100A393A8(inited);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 addUserInfoEntriesFromDictionary:isa];

    goto LABEL_6;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v10) {
    goto LABEL_5;
  }
LABEL_6:
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  [v2 contentOffset];
  type metadata accessor for CGPoint(0);
  sub_10060D22C(&qword_101676CE8);
  uint64_t v14 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v16 = v15;
  swift_release();
  sub_1005057FC(&qword_101677430);
  uint64_t v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_10117E810;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(void *)(v17 + 96) = &type metadata for Data;
  *(void *)(v17 + 72) = v14;
  *(void *)(v17 + 80) = v16;
  sub_100510D4C(v14, v16);
  sub_100A393A8(v17);
  Class v18 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 addUserInfoEntriesFromDictionary:v18];

  return sub_100510084(v14, v16);
}

id sub_100B88A3C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (char *)objc_allocWithZone(v3);
  uint64_t v7 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  *(void *)&v6[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource] = 0;
  char v8 = &v6[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v9);
  long long v11 = v6;
  [a2 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100B89328();
  swift_dynamicCast();
  uint64_t v12 = *(void **)&v6[v7];
  *(void *)&v6[v7] = v16;

  v15.receiver = v11;
  v15.super_class = v3;
  id v13 = [super init];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  return v13;
}

void sub_100B88DD4(void *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5 = v3;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  id v9 = [a1 getBoardItemForUUID:isa];

  if (!v9) {
    goto LABEL_8;
  }
  type metadata accessor for CRLShapeItem();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_8:
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2, 29, (uint64_t)"Unable to retrieve shape item.", 30, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Unable to retrieve shape item.");
    uint64_t v20 = 29;
LABEL_10:
    sub_1005871AC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2, v20);
    SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:)(v21, v22);
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v11 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  uint64_t v12 = *(void **)(v5 + OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource);
  if (!v12)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commit(with:transaction:undoable:)", 34, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLCommandSetPathSource.swift", 95, 2, 32, (uint64_t)"Should have path source in commit.", 34, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_100586FD4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"Should have path source in commit.");
    uint64_t v20 = 32;
    goto LABEL_10;
  }
  id v13 = (void *)v10;
  id v14 = v12;
  id v15 = v9;
  sub_10103405C((uint64_t)v13, (uint64_t)&off_101518040);
  if (v4)
  {
  }
  else
  {

    unsigned __int8 v23 = a3;
    uint64_t v16 = *(void (**)(void))((swift_isaMask & *v13) + 0x480);
    id v17 = v14;
    v16();
    Class v18 = *(void **)(v5 + v11);
    *(void *)(v5 + v11) = 0;

    id v19 = v15;
    sub_101023724((uint64_t)v13, (uint64_t)&off_101518040, v23);
  }
}

void sub_100B89108()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource);
}

id sub_100B89184()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLCommandSetPathSource();
  return [super dealloc];
}

uint64_t sub_100B8923C()
{
  return type metadata accessor for CRLCommandSetPathSource();
}

uint64_t type metadata accessor for CRLCommandSetPathSource()
{
  uint64_t result = qword_101694B48;
  if (!qword_101694B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B89290()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_100B89328()
{
  unint64_t result = qword_1016800B8;
  if (!qword_1016800B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1016800B8);
  }
  return result;
}

id sub_100B89368(uint64_t a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource;
  *(void *)&v2[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_pathSource] = 0;
  uint64_t v6 = &v2[OBJC_IVAR____TtC8Freeform23CRLCommandSetPathSource_id];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  id v9 = v2;
  [a2 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_100B89328();
  swift_dynamicCast();
  uint64_t v10 = *(void **)&v2[v5];
  *(void *)&v2[v5] = v14;

  v13.receiver = v9;
  v13.super_class = (Class)type metadata accessor for CRLCommandSetPathSource();
  id v11 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  return v11;
}

id sub_100B894C0(char *a1, objc_class *a2, uint64_t a3)
{
  return sub_100B894F4(a1, a2, a3, type metadata accessor for CRLUSDZAssetDataStruct, type metadata accessor for CRLUSDZAssetDataStruct, &qword_101694CB8);
}

id sub_100B894F4(char *a1, objc_class *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t *a6)
{
  Class v41 = a2;
  uint64_t v10 = a4(0);
  __chkstk_darwin(v10 - 8, v11);
  objc_super v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  Class v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"commandToSetItemValue(item:value:keyPath:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardCommandProvider.swift", 95, 2, 37, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"commandToSetItemValue(item:value:keyPath:)", 42, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLCommands/CRLBoardCommandProvider.swift", 95, 2, 37);
    return 0;
  }
  uint64_t v20 = (void *)Strong;
  unsigned __int8 v37 = a6;
  uint64_t v38 = a3;
  unint64_t v39 = v13;
  uint64_t v40 = a5;
  uint64_t v21 = OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData;
  Swift::String v22 = *(void (**)(uint64_t))(**(void **)&a1[OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData] + 256);
  id v23 = *(id *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_mainBoard);
  uint64_t v24 = swift_retain();
  v22(v24);
  swift_release();
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  LOBYTE(v22) = [v23 containsObject:isa];

  if ((v22 & 1) == 0)
  {

    return 0;
  }
  sub_100B8C238((uint64_t)v41, (uint64_t)v39, v40);
  Class v41 = (Class)sub_1005057FC(v37);
  uint64_t v26 = objc_allocWithZone(v41);
  uint64_t v27 = (void *)((char *)v26 + *(void *)((swift_isaMask & *v26) + 0xF0));
  *uint64_t v27 = 0;
  v27[1] = 0xE000000000000000;
  uint64_t v28 = *(void (**)(uint64_t))(**(void **)&a1[v21] + 256);
  unsigned __int8 v37 = a1;
  uint64_t v29 = v38;
  swift_retain();
  uint64_t v30 = v26;
  uint64_t v31 = swift_retain();
  v28(v31);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v30[*(void *)((swift_isaMask & *(void *)v30) + 0xD8)], v18, v14);
  uint64_t v32 = (uint64_t)v39;
  uint64_t v33 = v40;
  sub_100B8C238((uint64_t)v39, (uint64_t)&v30[*(void *)((swift_isaMask & *(void *)v30) + 0xE0)], v40);
  *(void *)&v30[*(void *)((swift_isaMask & *(void *)v30) + 0xE8)] = v29;
  swift_retain();

  v42.receiver = v30;
  v42.super_class = v41;
  id v34 = [super init];

  swift_release();
  sub_100B8C2A0(v32, v33);

  return v34;
}

uint64_t sub_100B89914(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for URL();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  v3[12] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[17] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[18] = v6;
  v3[19] = v5;
  return _swift_task_switch(sub_100B89A94, v6, v5);
}

uint64_t sub_100B89A94()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  sub_1005F7C80(v0[6], v2);
  sub_1005F7C80(v2, v1);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  LODWORD(v2) = v5(v1, 1, v3);
  sub_1005CCBB8(v1);
  if (v2 == 1)
  {
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[12];
    uint64_t v19 = v0[11];
    uint64_t v20 = v0[16];
    uint64_t v9 = v0[8];
    uint64_t v8 = v0[9];
    swift_beginAccess();
    swift_retain();
    sub_1005057FC(&qword_101682E40);
    CRRegister.wrappedValue.getter();
    swift_endAccess();
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, v7 + *(int *)(v19 + 20), v9);
    sub_100B8C2A0(v7, type metadata accessor for CRLURLItemAtomicDataStruct);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v9);
    sub_1005CCBB8(v20);
    sub_100602000(v6, v20);
  }
  uint64_t v10 = v0[13];
  uint64_t v11 = v0[8];
  sub_1005F7C80(v0[16], v10);
  if (v5(v10, 1, v11) == 1)
  {
    uint64_t v12 = v0[13];
    swift_release();
    sub_1005CCBB8(v12);
    sub_100B8C1E4();
    swift_allocError();
    *objc_super v13 = 0;
    swift_willThrow();
    sub_1005CCBB8(v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    (*(void (**)(void, void, void))(v0[9] + 32))(v0[10], v0[13], v0[8]);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[20] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100B89DE8;
    uint64_t v17 = v0[10];
    uint64_t v18 = v0[5];
    return sub_100B8A0E4(v18, v17, 1);
  }
}

uint64_t sub_100B89DE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 152);
  uint64_t v4 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v5 = sub_100B8A000;
  }
  else {
    uint64_t v5 = sub_100B89F24;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B89F24()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_1005CCBB8(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100B8A000()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1005CCBB8(v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100B8A0E4(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 256) = a2;
  *(void *)(v4 + 264) = v3;
  *(unsigned char *)(v4 + 432) = a3;
  *(void *)(v4 + 248) = a1;
  uint64_t v7 = type metadata accessor for CancellationError();
  *(void *)(v4 + 272) = v7;
  *(void *)(v4 + 280) = *(void *)(v7 - 8);
  *(void *)(v4 + 288) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v4 + 296) = v8;
  *(void *)(v4 + 304) = *(void *)(v8 - 8);
  *(void *)(v4 + 312) = swift_task_alloc();
  type metadata accessor for CRLURLItemAtomicDataStruct(0);
  *(void *)(v4 + 320) = swift_task_alloc();
  uint64_t v9 = swift_task_alloc();
  *(void *)(v4 + 328) = v9;
  *(void *)(v4 + 336) = type metadata accessor for MainActor();
  *(void *)(v4 + 344) = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v4 + 352) = v10;
  *uint64_t v10 = v4;
  v10[1] = sub_100B8A2BC;
  return sub_100B8ADFC(v9, a2, a1);
}

uint64_t sub_100B8A2BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 360) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0)
  {
    *(void *)(v2 + 368) = v3;
    *(void *)(v2 + 376) = v4;
    uint64_t v5 = sub_100B8A58C;
  }
  else
  {
    uint64_t v5 = sub_100B8A420;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100B8A420()
{
  uint64_t v1 = (objc_class *)v0[41];
  uint64_t v3 = v0[38];
  uint64_t v2 = v0[39];
  uint64_t v4 = v0[37];
  uint64_t v5 = v0[31];
  swift_release();
  uint64_t v6 = *(void (**)(uint64_t))(**(void **)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 256);
  uint64_t v7 = swift_retain();
  v6(v7);
  swift_release();
  sub_100B8BBBC(v1);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100B8C2A0((uint64_t)v1, type metadata accessor for CRLURLItemAtomicDataStruct);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100B8A58C()
{
  v0[30] = v0[45];
  swift_errorRetain();
  sub_1005057FC(&qword_101672BD0);
  if (swift_dynamicCast())
  {
    swift_release();
    swift_errorRelease();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    uint64_t v2 = v0[35];
    uint64_t v1 = v0[36];
    uint64_t v3 = v0[34];
    swift_beginAccess();
    id v4 = (id)static OS_os_log.crlDefault;
    uint64_t v5 = static os_log_type_t.info.getter();
    sub_100BAC898((uint64_t)v4, (uint64_t)&_mh_execute_header, v5, (uint64_t)"Task cancelled. Not an error.", 29, 2, (uint64_t)_swiftEmptyArrayStorage);

    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    swift_errorRelease();
    if (qword_10166F9C8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v8 = (void *)static OS_os_log.crlDefault;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    swift_getErrorValue();
    uint64_t v10 = v0[20];
    uint64_t v11 = v0[21];
    id v12 = v8;
    uint64_t v13 = Error.publicDescription.getter(v10, v11);
    uint64_t v15 = v14;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v16 = sub_100528BE4();
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v15;
    swift_getErrorValue();
    uint64_t v17 = Error.fullDescription.getter(v0[26]);
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v16;
    *(void *)(inited + 72) = v17;
    *(void *)(inited + 80) = v18;
    uint64_t v19 = static os_log_type_t.error.getter();
    sub_100BAC898((uint64_t)v12, (uint64_t)&_mh_execute_header, v19, (uint64_t)"Error loading URL metadata: %{public}@ <%@>", 43, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    v0[48] = static MainActor.shared.getter();
    uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[49] = v21;
    v0[50] = v20;
    return _swift_task_switch(sub_100B8A918, v21, v20);
  }
}

uint64_t sub_100B8A918()
{
  id v1 = sub_100D53FA4();
  v0[51] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100B8A9C4;
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[31];
  return sub_100B8B508(v3, (uint64_t)v1, v4);
}

uint64_t sub_100B8A9C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 400);
  uint64_t v4 = *(void *)(v2 + 392);
  if (v0) {
    uint64_t v5 = sub_100B8ACF0;
  }
  else {
    uint64_t v5 = sub_100B8AB00;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B8AB00()
{
  id v1 = (void *)v0[51];
  uint64_t v3 = v0[39];
  uint64_t v2 = (objc_class *)v0[40];
  uint64_t v4 = v0[38];
  uint64_t v11 = v0[37];
  uint64_t v5 = v0[31];
  swift_release();
  uint64_t v6 = *(void (**)(uint64_t))(**(void **)(v5 + OBJC_IVAR____TtC8Freeform16CRLBoardItemBase_itemData) + 256);
  uint64_t v7 = swift_retain();
  v6(v7);
  swift_release();
  sub_100B8BBBC(v2);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v11);
  sub_100B8C2A0((uint64_t)v2, type metadata accessor for CRLURLItemAtomicDataStruct);
  uint64_t v8 = v0[46];
  uint64_t v9 = v0[47];
  return _swift_task_switch(sub_100B8AC4C, v8, v9);
}

uint64_t sub_100B8AC4C()
{
  swift_release();
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B8ACF0()
{
  id v1 = (void *)v0[51];
  swift_release();

  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  return _swift_task_switch(sub_100B8AD5C, v2, v3);
}

uint64_t sub_100B8AD5C()
{
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B8ADFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for URL();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v7;
  v4[11] = v6;
  return _swift_task_switch(sub_100B8AEF4, v7, v6);
}

uint64_t sub_100B8AEF4()
{
  id v1 = (char *)v0[8];
  (*(void (**)(char *, void, void))(v0[7] + 16))(v1, v0[3], v0[6]);
  id v2 = objc_allocWithZone((Class)type metadata accessor for CRLRemoteURLMetadataProvider(0));
  uint64_t v3 = sub_100E0C9B8(v1);
  v0[12] = v3;
  v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100B8B028;
  return sub_100E0B158();
}

uint64_t sub_100B8B028(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 80);
    uint64_t v5 = *(void *)(v3 + 88);
    uint64_t v6 = sub_100B8B414;
  }
  else
  {

    uint64_t v4 = *(void *)(v3 + 80);
    uint64_t v5 = *(void *)(v3 + 88);
    uint64_t v6 = sub_100B8B144;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100B8B144()
{
  uint64_t v1 = *(void *)(v0 + 120);
  static Task<>.checkCancellation()();
  if (v1)
  {
    id v2 = *(void **)(v0 + 112);

    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100B8B250;
    uint64_t v6 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 32);
    uint64_t v8 = *(void *)(v0 + 16);
    return sub_100B8B508(v8, v6, v7);
  }
}

uint64_t sub_100B8B250()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_100B8B48C;
  }
  else {
    uint64_t v5 = sub_100B8B38C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B8B38C()
{
  uint64_t v1 = *(void **)(v0 + 96);

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B8B414()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B8B48C()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[12];
  swift_release();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100B8B508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  type metadata accessor for CRLAssetData();
  v3[8] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v3[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[14] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[15] = v6;
  v3[16] = v5;
  return _swift_task_switch(sub_100B8B66C, v6, v5);
}

uint64_t sub_100B8B66C()
{
  id v1 = [*(id *)(v0 + 48) URL];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    *(void *)(v0 + 136) = v7;
    *(void *)(v0 + 144) = (v4 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v7(v6, v3, v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v5) != 1)
    {
      uint64_t v8 = *(void *)(v0 + 56);
      v7(*(void *)(v0 + 104), *(void *)(v0 + 72), *(void *)(v0 + 80));
      type metadata accessor for CRLBoardItemImporterHelper();
      uint64_t inited = swift_initStackObject();
      *(void *)(v0 + 152) = inited;
      *(void *)(inited + 16) = v8;
      swift_unknownObjectRetain();
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_100B8B8C8;
      uint64_t v11 = *(void *)(v0 + 64);
      uint64_t v12 = *(void *)(v0 + 48);
      return sub_100DC9DEC(v11, v12);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 88) + 56))(*(void *)(v0 + 72), 1, 1, *(void *)(v0 + 80));
  }
  uint64_t v14 = *(void *)(v0 + 72);
  swift_release();
  sub_1005CCBB8(v14);
  sub_100B8C1E4();
  swift_allocError();
  *uint64_t v15 = 0;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100B8B8C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 120);
  if (v0) {
    uint64_t v5 = sub_100B8BB04;
  }
  else {
    uint64_t v5 = sub_100B8BA04;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100B8BA04()
{
  id v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[17];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[5];
  swift_release();
  swift_release();
  sub_1008A7A50(v4, v5);
  uint64_t v6 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  v1(v5 + *(int *)(v6 + 20), v2, v3);
  *(void *)(v5 + *(int *)(v6 + 24)) = _swiftEmptyDictionarySingleton;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B8BB04()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_100B8BBBC(objc_class *a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v14 = (char *)*(id *)(Strong + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);

    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      uint64_t v6 = (char *)*(id *)(v4 + OBJC_IVAR____TtC8Freeform21CRLEditingCoordinator_commandController);

      id v7 = *(id *)&v6[OBJC_IVAR____TtC8Freeform20CRLCommandController_board];
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      uint64_t v9 = (char *)[v7 getBoardItemForUUID:isa];

      if (v9)
      {
        type metadata accessor for CRLURLItem();
        uint64_t v10 = (char *)swift_dynamicCastClass();
        if (v10)
        {
          uint64_t v11 = sub_100B8BD50(a1, v10);
          if (v11)
          {
            uint64_t v12 = v11;
            sub_10078BED8(v11, 0, 0, 4, 0);

            uint64_t v13 = v9;
            uint64_t v14 = v12;
          }
          else
          {
            uint64_t v13 = v14;
            uint64_t v14 = v9;
          }
        }
        else
        {
          uint64_t v13 = v9;
        }
      }
    }
  }
}

char *sub_100B8BD50(objc_class *a1, char *a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  id v5 = sub_100B894F4(a2, a1, KeyPath, type metadata accessor for CRLURLItemAtomicDataStruct, type metadata accessor for CRLURLItemAtomicDataStruct, &qword_101694CA8);
  swift_release();
  if (!v5) {
    return 0;
  }
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101177E70;
  *(void *)(v6 + 32) = v5;
  uint64_t v22 = v6;
  specialized Array._endMutation()();
  id v7 = objc_allocWithZone((Class)type metadata accessor for CRLCommandGroup());
  id v8 = v5;
  uint64_t v9 = (char *)[v7 init];
  uint64_t v10 = (uint64_t *)&v9[OBJC_IVAR____TtC8Freeform15CRLCommandGroup_commands];
  swift_beginAccess();
  *uint64_t v10 = v22;
  swift_bridgeObjectRelease();
  uint64_t v11 = self;
  uint64_t v12 = v9;
  id v13 = [v11 mainBundle];
  NSString v14 = String._bridgeToObjectiveC()();
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v13 localizedStringForKey:v14 value:v15 table:v16];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *(void *)v12) + 0x110))(v18, v20);
  return v9;
}

uint64_t sub_100B8C050()
{
  return swift_release();
}

uint64_t sub_100B8C118(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLURLItemAtomicDataStruct(0);
  __chkstk_darwin(v2 - 8, v3);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B8C238(a1, (uint64_t)v5, type metadata accessor for CRLURLItemAtomicDataStruct);
  return sub_100948B44((uint64_t)v5);
}

uint64_t type metadata accessor for CRLURLItemCommandProvider()
{
  return self;
}

unint64_t sub_100B8C1E4()
{
  unint64_t result = qword_101694CB0;
  if (!qword_101694CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694CB0);
  }
  return result;
}

uint64_t sub_100B8C238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B8C2A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for CRLURLItemCommandProvider.ProviderError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B8C3CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLURLItemCommandProvider.ProviderError()
{
  return &type metadata for CRLURLItemCommandProvider.ProviderError;
}

unint64_t sub_100B8C408()
{
  unint64_t result = qword_101694CC0;
  if (!qword_101694CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694CC0);
  }
  return result;
}

uint64_t sub_100B8C45C()
{
  uint64_t v0 = sub_1005057FC(&qword_101672BB0);
  __chkstk_darwin(v0 - 8, v1);
  int v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CRLCalculateResultAttributionHandler();
  uint64_t inited = swift_initStaticObject();
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
  type metadata accessor for MainActor();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = &protocol witness table for MainActor;
  sub_100591324((uint64_t)v3, (uint64_t)&unk_101694D78, v7);
  uint64_t result = swift_release();
  qword_10171BA58 = inited;
  return result;
}

uint64_t sub_100B8C580(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_100B8C618, v3, v2);
}

uint64_t sub_100B8C618()
{
  type metadata accessor for StocksKitCurrencyCache();
  *(void *)(v0 + 48) = static StocksKitCurrencyCache.shared.getter();
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of StocksKitCurrencyCache.refresh()
                         + async function pointer to dispatch thunk of StocksKitCurrencyCache.refresh());
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100B8C6D0;
  return v3();
}

uint64_t sub_100B8C6D0(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 48);
  *(unsigned char *)(*v1 + 64) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 32);
  return _swift_task_switch(sub_100B8C818, v5, v4);
}

uint64_t sub_100B8C818()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100B8C880()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRLCalculateResultAttributionHandler()
{
  return self;
}

uint64_t sub_100B8C8E4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100B8C91C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100528488;
  return sub_100B8C580(a1);
}

uint64_t sub_100B8C9C8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ColorScheme();
  __n128 v4 = __chkstk_darwin(v2, v3);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  return EnvironmentValues.colorScheme.setter();
}

uint64_t sub_100B8CA90()
{
  v1[2] = v0;
  v1[3] = sub_1005057FC(&qword_101694D88);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ColorScheme();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = sub_1005057FC(&qword_101694D90);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  sub_1005057FC(&qword_101684320);
  v1[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v4;
  v1[14] = v3;
  return _swift_task_switch(sub_100B8CC2C, v4, v3);
}

uint64_t sub_100B8CC2C()
{
  if (*(void *)(v0[2] + 16))
  {
    swift_release();
    uint64_t v1 = *(void *)(v0[2] + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    type metadata accessor for StocksKitCurrencyCache();
    v0[15] = static StocksKitCurrencyCache.shared.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100B8CD78;
    uint64_t v5 = v0[11];
    return StocksKitCurrencyCache.provider.getter(v5);
  }
}

uint64_t sub_100B8CD78()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 120);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100B8CEB8, v4, v3);
}

uint64_t sub_100B8CEB8()
{
  uint64_t v1 = v0[11];
  swift_release();
  uint64_t v2 = type metadata accessor for StocksKitCurrencyCache.Provider();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[11];
  if (v4 == 1)
  {
    sub_100522F00(v0[11], &qword_101684320);
  }
  else
  {
    uint64_t v6 = StocksKitCurrencyCache.Provider.logo.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)v0[10];
      uint64_t v8 = v0[7];
      uint64_t v9 = v0[8];
      uint64_t v10 = v0[5];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[3];
      id v13 = (uint64_t *)v0[4];
      uint64_t v21 = v0[9];
      uint64_t v22 = v0[2];
      (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v8, enum case for ColorScheme.light(_:), v10);
      uint64_t KeyPath = swift_getKeyPath();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 + *(int *)(v12 + 28), v8, v10);
      *id v13 = KeyPath;
      sub_100522E9C((uint64_t)v13, (uint64_t)v7 + *(int *)(v9 + 36), &qword_101694D88);
      *uint64_t v7 = v6;
      swift_retain();
      sub_100522F00((uint64_t)v13, &qword_101694D88);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      sub_100522E9C((uint64_t)v7, v21, &qword_101694D90);
      sub_1005057FC(&qword_101694D98);
      swift_allocObject();
      ImageRenderer.init(content:)();
      id v15 = [self mainScreen];
      [v15 scale];

      ImageRenderer.scale.setter();
      uint64_t v16 = ImageRenderer.uiImage.getter();
      swift_release();
      swift_release();
      sub_100522F00((uint64_t)v7, &qword_101694D90);
      id v17 = *(void **)(v22 + 16);
      *(void *)(v22 + 16) = v16;
    }
  }
  uint64_t v18 = *(void *)(v0[2] + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(v18);
}

uint64_t sub_100B8D19C()
{
  v1[2] = v0;
  v1[3] = sub_1005057FC(&qword_101694D88);
  v1[4] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ColorScheme();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = sub_1005057FC(&qword_101694D90);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  sub_1005057FC(&qword_101684320);
  v1[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v4;
  v1[14] = v3;
  return _swift_task_switch(sub_100B8D338, v4, v3);
}

uint64_t sub_100B8D338()
{
  if (*(void *)(v0[2] + 24))
  {
    swift_release();
    uint64_t v1 = *(void *)(v0[2] + 24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
    return v2(v1);
  }
  else
  {
    type metadata accessor for StocksKitCurrencyCache();
    v0[15] = static StocksKitCurrencyCache.shared.getter();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100B8D484;
    uint64_t v5 = v0[11];
    return StocksKitCurrencyCache.provider.getter(v5);
  }
}

uint64_t sub_100B8D484()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 120);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100B8D5C4, v4, v3);
}

uint64_t sub_100B8D5C4()
{
  uint64_t v1 = v0[11];
  swift_release();
  uint64_t v2 = type metadata accessor for StocksKitCurrencyCache.Provider();
  uint64_t v3 = *(void *)(v2 - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = v0[11];
  if (v4 == 1)
  {
    sub_100522F00(v0[11], &qword_101684320);
  }
  else
  {
    uint64_t v6 = StocksKitCurrencyCache.Provider.logo.getter();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)v0[10];
      uint64_t v8 = v0[7];
      uint64_t v9 = v0[8];
      uint64_t v10 = v0[5];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[3];
      id v13 = (uint64_t *)v0[4];
      uint64_t v21 = v0[9];
      uint64_t v22 = v0[2];
      (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v8, enum case for ColorScheme.dark(_:), v10);
      uint64_t KeyPath = swift_getKeyPath();
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v13 + *(int *)(v12 + 28), v8, v10);
      *id v13 = KeyPath;
      sub_100522E9C((uint64_t)v13, (uint64_t)v7 + *(int *)(v9 + 36), &qword_101694D88);
      *uint64_t v7 = v6;
      swift_retain();
      sub_100522F00((uint64_t)v13, &qword_101694D88);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
      sub_100522E9C((uint64_t)v7, v21, &qword_101694D90);
      sub_1005057FC(&qword_101694D98);
      swift_allocObject();
      ImageRenderer.init(content:)();
      id v15 = [self mainScreen];
      [v15 scale];

      ImageRenderer.scale.setter();
      uint64_t v16 = ImageRenderer.uiImage.getter();
      swift_release();
      swift_release();
      sub_100522F00((uint64_t)v7, &qword_101694D90);
      id v17 = *(void **)(v22 + 24);
      *(void *)(v22 + 24) = v16;
    }
  }
  uint64_t v18 = *(void *)(v0[2] + 24);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(uint64_t))v0[1];
  return v19(v18);
}

uint64_t sub_100B8D8A8()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t type metadata accessor for CRLMemoryReadChannel()
{
  return self;
}

void sub_100B8DBC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchData();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform20CRLMemoryReadChannel_data);
  unint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC8Freeform20CRLMemoryReadChannel_data + 8);
  switch(v14 >> 62)
  {
    case 1uLL:
      LODWORD(v15) = HIDWORD(v13) - v13;
      if (__OFSUB__(HIDWORD(v13), v13)) {
        goto LABEL_26;
      }
      uint64_t v15 = (int)v15;
LABEL_6:
      if (v15 > a1 && a2 > 0) {
        goto LABEL_15;
      }
LABEL_11:
      static DispatchData.empty.getter();
      uint64_t v20 = (void *)DispatchData._bridgeToObjectiveC()();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      (*(void (**)(uint64_t, uint64_t, void *, void))(a4 + 16))(a4, 1, v20, 0);

      return;
    case 2uLL:
      uint64_t v17 = *(void *)(v13 + 16);
      uint64_t v16 = *(void *)(v13 + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_6;
      }
      goto LABEL_27;
    case 3uLL:
      if ((a1 & 0x8000000000000000) == 0 || a2 <= 0) {
        goto LABEL_11;
      }
      uint64_t v15 = 0;
LABEL_15:
      BOOL v18 = __OFSUB__(v15, a1);
      uint64_t v21 = v15 - a1;
      if (v18)
      {
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (v21 >= a2) {
        uint64_t v21 = a2;
      }
      if (__OFADD__(a1, v21)) {
        goto LABEL_24;
      }
      if (a1 + v21 < a1)
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x100B8DE0CLL);
      }
      uint64_t v22 = Data.subdata(in:)();
      unint64_t v24 = v23;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100510084(v22, v24);
      id v28 = [(objc_class *)isa crl_dispatchData];

      (*(void (**)(uint64_t, uint64_t, id, void))(a4 + 16))(a4, 1, v28, 0);
      uint64_t v26 = v28;

      return;
    default:
      uint64_t v15 = BYTE6(v14);
      goto LABEL_6;
  }
}

uint64_t sub_100B8DE1C()
{
  uint64_t v0 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v17[0] - 8);
  __chkstk_darwin(v17[0], v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = type metadata accessor for LocalizedStringResource();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v15 = type metadata accessor for TypeDisplayRepresentation();
  sub_100568B28(v15, qword_10171BA60);
  sub_100556B74(v15, (uint64_t)qword_10171BA60);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, void))(v4 + 104))(v7, enum case for LocalizedStringResource.BundleDescription.main(_:), v17[0]);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v3, 1, 1, v12);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

unint64_t sub_100B8E114()
{
  uint64_t v0 = sub_1005057FC(&qword_10167D138);
  __chkstk_darwin(v0 - 8, v1);
  objc_super v42 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1005057FC(&qword_101673B40);
  __chkstk_darwin(v3 - 8, v4);
  Class v41 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v33 = v16;
  uint64_t v44 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  sub_1005057FC(&qword_101694E50);
  BOOL v18 = (int *)(sub_1005057FC(&qword_10168D0C0) - 8);
  uint64_t v19 = *(void *)v18;
  uint64_t v39 = *(void *)(*(void *)v18 + 72);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v40 = v21;
  *(_OWORD *)(v21 + 16) = xmmword_10117D8C0;
  unint64_t v22 = v21 + v20;
  unint64_t v35 = v21 + v20 + v18[14];
  *(unsigned char *)(v21 + v20) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v32 = v13;
  static Locale.current.getter();
  unsigned int v36 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v23 = *(void (**)(void))(v6 + 104);
  uint64_t v37 = v6 + 104;
  uint64_t v38 = (void (*)(char *, void, uint64_t))v23;
  v23(v9);
  unint64_t v24 = v9;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  v44 += 56;
  id v34 = v25;
  uint64_t v26 = v41;
  v25(v41, 1, 1, v16);
  uint64_t v27 = type metadata accessor for DisplayRepresentation.Image();
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  uint64_t v29 = v42;
  v28(v42, 1, 1, v27);
  DisplayRepresentation.init(title:subtitle:image:)();
  uint64_t v30 = (unsigned char *)(v22 + v39);
  v39 += v22 + v18[14];
  *uint64_t v30 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v38(v24, v36, v43);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  v34(v26, 1, 1, v33);
  v28(v29, 1, 1, v27);
  DisplayRepresentation.init(title:subtitle:image:)();
  unint64_t result = sub_100A3C6EC(v40);
  qword_10171BA78 = result;
  return result;
}

uint64_t sub_100B8E648(char *a1, char *a2)
{
  return sub_10094E2FC(*a1, *a2);
}

unint64_t sub_100B8E658()
{
  unint64_t result = qword_101694DE0;
  if (!qword_101694DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694DE0);
  }
  return result;
}

Swift::Int sub_100B8E6AC()
{
  return Hasher._finalize()();
}

uint64_t sub_100B8E734()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100B8E7A8()
{
  return Hasher._finalize()();
}

uint64_t sub_100B8E82C@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_101504B10, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100B8E88C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x786F6274786574;
  if (*v1) {
    uint64_t v2 = 0x6F4E796B63697473;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006574;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100B8E8D4()
{
  unint64_t result = qword_101694DE8;
  if (!qword_101694DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694DE8);
  }
  return result;
}

unint64_t sub_100B8E92C()
{
  unint64_t result = qword_101694DF0;
  if (!qword_101694DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694DF0);
  }
  return result;
}

unint64_t sub_100B8E984()
{
  unint64_t result = qword_101694DF8;
  if (!qword_101694DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694DF8);
  }
  return result;
}

unint64_t sub_100B8E9DC()
{
  unint64_t result = qword_101694E00;
  if (!qword_101694E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E00);
  }
  return result;
}

unint64_t sub_100B8EA34()
{
  unint64_t result = qword_101694E08;
  if (!qword_101694E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E08);
  }
  return result;
}

unint64_t sub_100B8EA8C()
{
  unint64_t result = qword_101694E10;
  if (!qword_101694E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E10);
  }
  return result;
}

unint64_t sub_100B8EAE4()
{
  unint64_t result = qword_101694E18;
  if (!qword_101694E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E18);
  }
  return result;
}

uint64_t sub_100B8EB38@<X0>(uint64_t a1@<X8>)
{
  if (qword_10166F9B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TypeDisplayRepresentation();
  uint64_t v3 = sub_100556B74(v2, (uint64_t)qword_10171BA60);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_100B8EBE0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B8EC30()
{
  unint64_t result = qword_101694E20;
  if (!qword_101694E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E20);
  }
  return result;
}

uint64_t sub_100B8EC84(uint64_t a1)
{
  unint64_t v2 = sub_100B8EC30();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100B8ECD4()
{
  unint64_t result = qword_101694E28;
  if (!qword_101694E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E28);
  }
  return result;
}

unint64_t sub_100B8ED2C()
{
  unint64_t result = qword_101694E30;
  if (!qword_101694E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E30);
  }
  return result;
}

unint64_t sub_100B8ED84()
{
  unint64_t result = qword_101694E38;
  if (!qword_101694E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E38);
  }
  return result;
}

uint64_t sub_100B8EDD8()
{
  if (qword_10166F9B8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100B8EE34(uint64_t a1)
{
  unint64_t v2 = sub_100B8EAE4();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

unint64_t sub_100B8EE84()
{
  unint64_t result = qword_101694E40;
  if (!qword_101694E40)
  {
    sub_100522D34(&qword_101694E48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E40);
  }
  return result;
}

void sub_100B8EEE0(void *a1@<X8>)
{
  *a1 = &off_1015035F8;
}

unsigned char *storeEnumTagSinglePayload for CRLSupportedTextContainerEntity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B8EFBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLSupportedTextContainerEntity()
{
  return &type metadata for CRLSupportedTextContainerEntity;
}

const char *sub_100B8EFF4(char a1)
{
  unint64_t result = "AdoptTipsNext";
  switch(a1)
  {
    case 1:
      unint64_t result = "AppAnalytics";
      break;
    case 2:
      unint64_t result = "AppIntents";
      break;
    case 3:
      unint64_t result = "AppIntentsSettings";
      break;
    case 4:
      unint64_t result = "BetterPencilSelection";
      break;
    case 5:
      unint64_t result = "ChangeShape";
      break;
    case 6:
      unint64_t result = "CloudQuotaMessaging";
      break;
    case 7:
      unint64_t result = "DrawingDataDetectors";
      break;
    case 8:
      unint64_t result = "EasierConnectionLines";
      break;
    case 9:
      unint64_t result = "FileImportExport";
      break;
    case 10:
      unint64_t result = "PKDrawingExport";
      break;
    case 11:
      unint64_t result = "Folders";
      break;
    case 12:
      unint64_t result = "Follow";
      break;
    case 13:
      unint64_t result = "GenerativePlayground";
      break;
    case 14:
      unint64_t result = "HandwritingIntelligence";
      break;
    case 15:
      unint64_t result = "MathPaper";
      break;
    case 16:
      unint64_t result = "MagicLists";
      break;
    case 17:
      unint64_t result = "Scenes";
      break;
    case 18:
      unint64_t result = "SendACopy";
      break;
    case 19:
      unint64_t result = "SnapToGrid";
      break;
    case 20:
      unint64_t result = "Stencils";
      break;
    case 21:
      unint64_t result = "ThreeDimensionalObjects";
      break;
    case 22:
      unint64_t result = "ToolPickerItemAPI";
      break;
    case 23:
      unint64_t result = "VerticalTextBoxAlignment";
      break;
    case 24:
      unint64_t result = "AllowMinRequiredVersionForGoodEnoughFidelityToSaveToCloudKit";
      break;
    case 25:
      unint64_t result = "UseSandboxEnvironment";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_100B8F244()
{
  return "Freeform";
}

const char *sub_100B8F258()
{
  return sub_100B8EFF4(*v0);
}

const char *sub_100B8F278()
{
  return "UIKit";
}

const char *sub_100B8F28C()
{
  return "redesigned_text_cursor";
}

const char *sub_100B8F2A0()
{
  return "GenerativePlayground";
}

const char *sub_100B8F2B4()
{
  return "App";
}

const char *sub_100B8F2C8()
{
  return "AppleAccount";
}

const char *sub_100B8F2DC()
{
  return "AABranding";
}

const char *sub_100B8F2F0()
{
  return "PencilAndPaper";
}

const char *sub_100B8F304()
{
  if (*v0) {
    return "DrawingDataDetectors";
  }
  else {
    return "MathPaper";
  }
}

uint64_t sub_100B8F3EC(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v10 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v11 = sub_1005C5D40();
  v9[0] = a3;
  char v6 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v9);
  if (v6)
  {
    uint64_t v10 = &type metadata for CRLFeatureFlags;
    unint64_t v11 = sub_1005396A8();
    v9[0] = a4;
    char v7 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_100B8F4A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v7 = a3;
  uint64_t v8 = a4();
  char v4 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
  return v4 & 1;
}

uint64_t sub_100B8F534(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v7 = &type metadata for CRLFeatureFlags;
  unint64_t v8 = sub_1005396A8();
  v6[0] = a3;
  char v4 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v6);
  return v4 & 1;
}

id sub_100B8F5CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLFeatureFlagGroup();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLFeatureFlagGroup()
{
  return self;
}

id sub_100B8F624()
{
  char v4 = &type metadata for CRLGenerativePlaygroundFeatureFlags;
  unint64_t v5 = sub_1005C6C64();
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3);
  if ((v0 & 1) != 0
    && (char v4 = &type metadata for CRLFeatureFlags,
        unint64_t v5 = sub_1005396A8(),
        v3[0] = 13,
        char v1 = isFeatureEnabled(_:)(),
        _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v3),
        (v1 & 1) != 0))
  {
    return [(id)type metadata accessor for ImagePlaygroundViewController() available];
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100B8F6C4()
{
  unint64_t v5 = &type metadata for CRLPencilAndPaperFeatureFlags;
  unint64_t v6 = sub_1005C5D40();
  v4[0] = 0;
  char v0 = isFeatureEnabled(_:)();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
  uint64_t result = 0;
  if (v0)
  {
    unint64_t v5 = &type metadata for CRLFeatureFlags;
    unint64_t v6 = sub_1005396A8();
    v4[0] = 15;
    char v2 = isFeatureEnabled(_:)();
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v4);
    if (v2)
    {
      if (qword_10166F928 != -1) {
        swift_once();
      }
      int v3 = (unsigned __int8 *)(qword_101692F10
                             + OBJC_IVAR____TtC8Freeform38CRLDeviceManagementRestrictionsManager_isMathPaperSolvingAllowed);
      swift_beginAccess();
      return *v3;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLUIKitFeatureFlags()
{
  return &type metadata for CRLUIKitFeatureFlags;
}

ValueMetadata *type metadata accessor for CRLGenerativePlaygroundFeatureFlags()
{
  return &type metadata for CRLGenerativePlaygroundFeatureFlags;
}

unsigned char *_s8Freeform20CRLUIKitFeatureFlagsOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100B8F878);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLAppleAccountFeatureFlags()
{
  return &type metadata for CRLAppleAccountFeatureFlags;
}

unsigned char *storeEnumTagSinglePayload for CRLPencilAndPaperFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B8F97CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLPencilAndPaperFeatureFlags()
{
  return &type metadata for CRLPencilAndPaperFeatureFlags;
}

uint64_t getEnumTagSinglePayload for CRLFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRLFeatureFlags(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *uint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B8FB10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLFeatureFlags()
{
  return &type metadata for CRLFeatureFlags;
}

unint64_t sub_100B8FB4C()
{
  unint64_t result = qword_101694E80;
  if (!qword_101694E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E80);
  }
  return result;
}

unint64_t sub_100B8FBA4()
{
  unint64_t result = qword_101694E88;
  if (!qword_101694E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E88);
  }
  return result;
}

unint64_t sub_100B8FBFC()
{
  unint64_t result = qword_101694E90;
  if (!qword_101694E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E90);
  }
  return result;
}

unint64_t sub_100B8FC54()
{
  unint64_t result = qword_101694E98;
  if (!qword_101694E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694E98);
  }
  return result;
}

unint64_t sub_100B8FCAC()
{
  unint64_t result = qword_101694EA0;
  if (!qword_101694EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101694EA0);
  }
  return result;
}

uint64_t sub_100B8FD00()
{
  v1[10] = v0;
  sub_1005057FC(&qword_101694F90);
  uint64_t v2 = swift_task_alloc();
  v1[11] = v2;
  int v3 = (void *)swift_task_alloc();
  v1[12] = v3;
  *int v3 = v1;
  v3[1] = sub_100B8FDD0;
  return sub_100B917AC(v2, 0);
}

uint64_t sub_100B8FDD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v3 = sub_100B904A0;
  }
  else
  {
    sub_100522F00(*(void *)(v2 + 88), &qword_101694F90);
    int v3 = sub_100B8FEF4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100B8FEF4()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *char v1 = v0;
  v1[1] = sub_100B8FF84;
  return sub_100B91DD0();
}

uint64_t sub_100B8FF84()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100B900D4, 0, 0);
  }
}

uint64_t sub_100B900D4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = (void *)v0[10];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  sub_10050F848(v2 + 2, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v0[16] = v5;
  if (v1)
  {
LABEL_2:
    swift_task_dealloc();
    unsigned int v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t v8 = v5;
  if (!v5)
  {
    sub_1005F7CE8();
    swift_allocError();
    *unint64_t v20 = 4;
    swift_willThrow();
    goto LABEL_2;
  }
  uint64_t v9 = (void *)v0[10];
  unint64_t v11 = (void *)v9[7];
  uint64_t v10 = (void *)v9[8];
  uint64_t v12 = v9[9];
  uint64_t v13 = (void *)v9[10];
  type metadata accessor for CRLSerializableObjectReader();
  uint64_t inited = (void *)swift_initStackObject();
  v0[17] = inited;
  inited[7] = _swiftEmptyDictionarySingleton;
  type metadata accessor for CRLReadChannelHelper();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v8;
  *(void *)(v15 + 24) = 0;
  inited[2] = v15;
  inited[3] = v13;
  inited[4] = v11;
  inited[5] = v10;
  inited[6] = v12;
  swift_unknownObjectRetain();
  id v16 = v13;
  id v17 = v11;
  id v18 = v10;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[18] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100B902AC;
  return sub_100FA82D4();
}

uint64_t sub_100B902AC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 152) = v2;
  swift_task_dealloc();
  if (v2)
  {
    BOOL v7 = sub_100B90504;
  }
  else
  {
    *(void *)(v6 + 160) = a2;
    *(void *)(v6 + 168) = a1;
    BOOL v7 = sub_100B903E0;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100B903E0()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (id *)v0[17];
  swift_setDeallocating();
  swift_release();

  swift_bridgeObjectRelease();
  [v1 close];
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  return v3(v4, v5);
}

uint64_t sub_100B904A0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B90504()
{
  uint64_t v1 = (void *)v0[16];
  uint64_t v2 = (id *)v0[17];
  swift_setDeallocating();
  swift_release();

  swift_bridgeObjectRelease();
  [v1 close];
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100B905B4()
{
  sub_1005057FC(&qword_101694F90);
  uint64_t v1 = swift_task_alloc();
  v0[2] = v1;
  uint64_t v2 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v0[3] = v2;
  v0[4] = *(void *)(v2 - 8);
  v0[5] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100B906DC;
  return sub_100B917AC(v1, 1);
}

uint64_t sub_100B906DC()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B909C4;
  }
  else {
    uint64_t v2 = sub_100B907F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B907F0()
{
  uint64_t v1 = v0[2];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[4] + 48))(v1, 1, v0[3]) == 1)
  {
    sub_100522F00(v1, &qword_101694F90);
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v2 = 3;
    swift_willThrow();
LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  sub_100B95310(v1, v0[5], type metadata accessor for CRLProto_ObjectMetadata);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100FD2288(v3);
  uint64_t v5 = v0[5];
  if (v6)
  {
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v10 = 11;
    swift_willThrow();
    sub_100B9529C(v5, type metadata accessor for CRLProto_ObjectMetadata);
    goto LABEL_8;
  }
  uint64_t v7 = v4;
  sub_100B9529C(v0[5], type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v7);
}

uint64_t sub_100B909C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B90A34(uint64_t a1)
{
  v1[2] = a1;
  sub_1005057FC((uint64_t *)&unk_101674160);
  v1[3] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for CRLProto_Data(0);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  sub_1005057FC(&qword_101694F90);
  uint64_t v3 = swift_task_alloc();
  v1[7] = v3;
  uint64_t v4 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v1[8] = v4;
  v1[9] = *(void *)(v4 - 8);
  v1[10] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[11] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100B90BEC;
  return sub_100B917AC(v3, 1);
}

uint64_t sub_100B90BEC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B90F68;
  }
  else {
    uint64_t v2 = sub_100B90D00;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B90D00()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 48))(v2, 1, v1) == 1)
  {
    sub_100522F00(v2, &qword_101694F90);
    sub_1005F7CE8();
    swift_allocError();
    *uint64_t v3 = 3;
    swift_willThrow();
  }
  else
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[4];
    uint64_t v6 = v0[5];
    uint64_t v7 = v0[3];
    sub_100B95310(v2, v4, type metadata accessor for CRLProto_ObjectMetadata);
    sub_100522E9C(v4 + *(int *)(v1 + 28), v7, (uint64_t *)&unk_101674160);
    int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
    uint64_t v9 = (_OWORD *)v0[6];
    if (v8 == 1)
    {
      uint64_t v10 = v0[3];
      *uint64_t v9 = xmmword_101180360;
      UnknownStorage.init()();
      sub_100522F00(v10, (uint64_t *)&unk_101674160);
    }
    else
    {
      sub_100B95310(v0[3], (uint64_t)v9, type metadata accessor for CRLProto_Data);
    }
    uint64_t v11 = v0[10];
    uint64_t v12 = (uint64_t *)v0[6];
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    sub_100510D4C(*v12, v14);
    sub_100B9529C((uint64_t)v12, type metadata accessor for CRLProto_Data);
    UUID.init(crl_data:)(v13, v14);
    sub_100B9529C(v11, type metadata accessor for CRLProto_ObjectMetadata);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100B90F68()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B90FF4(uint64_t a1, void *a2, void *a3)
{
  id v38 = a2;
  uint64_t v40 = a1;
  uint64_t v43 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v4);
  objc_super v42 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  __chkstk_darwin(v6, v7);
  Class v41 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v36 = *(void *)(v9 + 64);
  __chkstk_darwin(v37, v10);
  unint64_t v35 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  id v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 0;
  uint64_t v19 = dispatch_group_create();
  dispatch_group_enter(v19);
  unint64_t v20 = (void *)swift_allocObject();
  v20[2] = v18;
  v20[3] = v17;
  uint64_t v39 = v18;
  v20[4] = v19;
  v20[5] = a3;
  uint64_t v52 = sub_100B95410;
  unint64_t v53 = v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  v34[1] = &v50;
  uint64_t v50 = sub_100779760;
  uint64_t v51 = &unk_101526948;
  uint64_t v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  unint64_t v22 = v19;
  id v23 = a3;
  swift_release();
  [v38 readWithHandler:v21];
  _Block_release(v21);
  sub_100656064();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for DispatchQoS.QoSClass.userInitiated(_:), v12);
  unint64_t v24 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  uint64_t v25 = v35;
  uint64_t v26 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v35, v40, v37);
  unint64_t v27 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v28 + v27, v25, v26);
  uint64_t v52 = sub_10077B394;
  unint64_t v53 = (void *)v28;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = *(void *)"";
  uint64_t v50 = sub_100679958;
  uint64_t v51 = &unk_101526998;
  uint64_t v29 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v30 = v41;
  static DispatchQoS.unspecified.getter();
  uint64_t v47 = _swiftEmptyArrayStorage;
  sub_100B955B4((unint64_t *)&qword_1016747E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1005057FC((uint64_t *)&unk_1016725D0);
  sub_10056B494();
  uint64_t v32 = v42;
  uint64_t v31 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v45);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_100B91580(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, void *a7)
{
  uint64_t v14 = (unsigned char *)(a4 + 16);
  swift_beginAccess();
  if ((*(unsigned char *)(a4 + 16) & 1) == 0)
  {
    if (a3)
    {
      swift_beginAccess();
      *uint64_t v14 = 1;
      swift_beginAccess();
      *(void *)(a5 + 16) = a3;
      swift_errorRetain();
      swift_errorRetain();
      swift_errorRelease();
      dispatch_group_leave(a6);
      swift_errorRelease();
    }
    else if (a2)
    {
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 0;
      id v16 = a2;
      dispatch_group_enter(a6);
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = v15;
      v17[3] = a5;
      void v17[4] = a6;
      aBlock[4] = sub_10077B444;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = *(void *)"";
      aBlock[2] = sub_10077A630;
      void aBlock[3] = &unk_1015269E8;
      uint64_t v18 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      uint64_t v19 = a6;
      swift_release();
      [a7 writeData:v16 handler:v18];
      _Block_release(v18);

      swift_release();
    }
    if (a1)
    {
      swift_beginAccess();
      if ((*v14 & 1) == 0)
      {
        swift_beginAccess();
        *uint64_t v14 = 1;
        dispatch_group_leave(a6);
      }
    }
  }
}

uint64_t sub_100B917AC(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 184) = a2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v2;
  sub_1005057FC(&qword_101694F90);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  return _swift_task_switch(sub_100B91854, 0, 0);
}

uint64_t sub_100B91854()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  *(void *)(v0 + 128) = OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  uint64_t v4 = v2 + v3;
  swift_beginAccess();
  sub_100522E9C(v4, v1, &qword_101694F90);
  uint64_t v5 = type metadata accessor for CRLProto_ObjectMetadata(0);
  *(void *)(v0 + 136) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v0 + 144) = v6;
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v1, 1, v5);
  uint64_t v8 = *(void *)(v0 + 120);
  if (v7 != 1)
  {
    uint64_t v14 = *(void *)(v0 + 96);
    sub_100B95310(v8, v14, type metadata accessor for CRLProto_ObjectMetadata);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_7;
  }
  char v9 = *(unsigned char *)(v0 + 184);
  sub_100522F00(v8, &qword_101694F90);
  uint64_t v10 = *(void *)(v0 + 104);
  if ((v9 & 1) == 0 && (*(unsigned char *)(v10 + 72) & 3) == 0)
  {
    (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v6 + 56))(*(void *)(v0 + 96), 1, 1, v5);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v10 + 40);
  uint64_t v12 = *(void *)(v10 + 48);
  sub_10050F848((void *)(v10 + 16), v11);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  *(void *)(v0 + 152) = v13;
  uint64_t v17 = v13;
  if (v13)
  {
    type metadata accessor for CRLReadChannelHelper();
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 160) = inited;
    *(void *)(inited + 16) = v17;
    *(void *)(inited + 24) = 0;
    swift_unknownObjectRetain();
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_100B91B30;
    uint64_t v20 = *(void *)(v0 + 112);
    return sub_100B94528(v20, inited);
  }
  sub_1005F7CE8();
  swift_allocError();
  *uint64_t v21 = 3;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
LABEL_7:
  return v15();
}

uint64_t sub_100B91B30()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B91D48;
  }
  else {
    uint64_t v2 = sub_100B91C44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B91C44()
{
  uint64_t v1 = (void *)v0[19];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13] + v0[16];
  (*(void (**)(uint64_t, void, uint64_t, void))(v0[18] + 56))(v2, 0, 1, v0[17]);
  swift_beginAccess();
  sub_100B9554C(v2, v4);
  swift_endAccess();
  sub_100522E9C(v4, v3, &qword_101694F90);
  [v1 close];
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100B91D48()
{
  [*(id *)(v0 + 152) close];
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B91DD0()
{
  v1[20] = v0;
  v1[21] = sub_1005057FC(&qword_101693800);
  v1[22] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[23] = v2;
  v1[24] = *(void *)(v2 - 8);
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  sub_1005057FC(&qword_101672E90);
  v1[29] = swift_task_alloc();
  sub_1005057FC((uint64_t *)&unk_101674160);
  v1[30] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for CRLProto_Data(0);
  v1[31] = v3;
  v1[32] = *(void *)(v3 - 8);
  v1[33] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v1[34] = v4;
  v1[35] = *(void *)(v4 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CRLProto_ObjectMetadata.AssetInfo(0);
  v1[39] = v5;
  v1[40] = *(void *)(v5 - 8);
  v1[41] = swift_task_alloc();
  sub_1005057FC(&qword_101694F90);
  v1[42] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for CRLProto_ObjectMetadata(0);
  v1[43] = v6;
  v1[44] = *(void *)(v6 - 8);
  v1[45] = swift_task_alloc();
  return _swift_task_switch(sub_100B92134, 0, 0);
}

uint64_t sub_100B92134()
{
  if ((*(unsigned char *)(v0[20] + 72) & 2) != 0)
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[46] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100B92320;
    uint64_t v4 = v0[42];
    return sub_100B917AC(v4, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
}

uint64_t sub_100B92320()
{
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B943DC;
  }
  else {
    uint64_t v2 = sub_100B92460;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B92460()
{
  uint64_t v1 = *(void *)(v0 + 336);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 352) + 48))(v1, 1, *(void *)(v0 + 344)) == 1)
  {
    sub_100522F00(v1, &qword_101694F90);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v38 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
    return v38();
  }
  uint64_t v2 = *(void *)(v0 + 360);
  sub_100B95310(v1, v2, type metadata accessor for CRLProto_ObjectMetadata);
  uint64_t v3 = *(void *)(v2 + 8);
  *(void *)(v0 + 384) = v3;
  if (!*(void *)(v3 + 16))
  {
    uint64_t v14 = *(void *)(v0 + 360);
LABEL_14:
    sub_100B9529C(v14, type metadata accessor for CRLProto_ObjectMetadata);
    goto LABEL_15;
  }
  id v4 = objc_allocWithZone((Class)CRLTemporaryDirectory);
  *(void *)(v0 + 152) = 0;
  id v5 = [v4 initWithError:v0 + 152];
  *(void *)(v0 + 392) = v5;
  uint64_t v6 = *(void **)(v0 + 152);
  if (!v5)
  {
    uint64_t v15 = *(void *)(v0 + 360);
    id v16 = v6;
    _convertNSErrorToError(_:)();

    swift_willThrow();
LABEL_19:
    sub_100B9529C(v15, type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v38 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_20;
  }
  uint64_t v7 = *(char **)(*(void *)(v0 + 160) + 56);
  uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManagerLock];
  char v9 = *(os_unfair_lock_s **)(v8 + 16);
  id v10 = v6;
  os_unfair_lock_lock(v9);
  uint64_t v11 = OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager;
  uint64_t v12 = *(void **)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  if (v12)
  {
    id v13 = *(id *)&v7[OBJC_IVAR____TtC8Freeform17CRLBoardDataStore__assetFileManager];
  }
  else
  {
    id v17 = objc_allocWithZone((Class)type metadata accessor for CRLAssetFileManager());
    uint64_t v18 = v7;
    id v19 = sub_100EAFDE4((uint64_t)v18);

    uint64_t v20 = *(void **)&v7[v11];
    *(void *)&v7[v11] = v19;
    id v13 = v19;

    uint64_t v12 = 0;
  }
  *(void *)(v0 + 400) = v13;
  uint64_t v21 = *(os_unfair_lock_s **)(v8 + 16);
  id v22 = v12;
  os_unfair_lock_unlock(v21);
  uint64_t v23 = *(void *)(v3 + 16);
  *(void *)(v0 + 408) = v23;
  if (!v23)
  {
    uint64_t v36 = *(void **)(v0 + 400);
    uint64_t v37 = *(void *)(v0 + 360);

    uint64_t v14 = v37;
    goto LABEL_14;
  }
  uint64_t v24 = *(void *)(v0 + 320);
  uint64_t v25 = *(void *)(v0 + 328);
  uint64_t v26 = *(void *)(v0 + 312);
  uint64_t v27 = *(void *)(v0 + 248);
  uint64_t v28 = *(void *)(v0 + 256);
  int v29 = *(_DWORD *)(v24 + 80);
  *(_DWORD *)(v0 + 536) = v29;
  *(void *)(v0 + 416) = *(void *)(v24 + 72);
  *(void *)(v0 + 424) = 0;
  uint64_t v30 = *(void *)(v0 + 376);
  uint64_t v31 = *(void *)(v0 + 240);
  uint64_t v32 = *(void *)(v0 + 384) + ((v29 + 32) & ~(unint64_t)v29);
  swift_bridgeObjectRetain();
  sub_1009B0894(v32, v25);
  sub_100522E9C(v25 + *(int *)(v26 + 28), v31, (uint64_t *)&unk_101674160);
  int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v31, 1, v27);
  id v34 = *(_OWORD **)(v0 + 264);
  if (v33 == 1)
  {
    uint64_t v35 = *(void *)(v0 + 240);
    *id v34 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v35, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100B95310(*(void *)(v0 + 240), (uint64_t)v34, type metadata accessor for CRLProto_Data);
  }
  uint64_t v39 = *(uint64_t **)(v0 + 264);
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  sub_100510D4C(*v39, v41);
  sub_100B9529C((uint64_t)v39, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v40, v41);
  *(void *)(v0 + 432) = v30;
  if (v30)
  {
    objc_super v42 = *(void **)(v0 + 400);
    uint64_t v15 = *(void *)(v0 + 360);
    uint64_t v43 = *(void *)(v0 + 328);

    sub_100B9529C(v43, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v45 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v45;
  *uint64_t v45 = v0;
  v45[1] = sub_100B92A38;
  uint64_t v46 = *(void *)(v0 + 304);
  uint64_t v47 = *(void *)(v0 + 232);
  return sub_100EA869C(v47, v46, 0, 0, 3);
}

uint64_t sub_100B92A38()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100B92B60, 0, 0);
}

uint64_t sub_100B92B60()
{
  uint64_t v1 = *(void *)(v0 + 232);
  int v2 = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 192) + 48))(v1, 1, *(void *)(v0 + 184));
  sub_100522F00(v1, &qword_101672E90);
  uint64_t v3 = *(void *)(v0 + 432);
  if (v2 == 1)
  {
    id v4 = *(uint64_t **)(v0 + 328);
    id v5 = *(void **)(v0 + 160);
    uint64_t v6 = v5 + 2;
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v9 = v8;
    uint64_t v10 = v5[5];
    uint64_t v11 = v5[6];
    sub_10050F848(v6, v10);
    uint64_t v12 = *v4;
    uint64_t v13 = v4[1];
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
    swift_bridgeObjectRetain();
    uint64_t v15 = v14(v7, v9, v12, v13, v10, v11);
    *(void *)(v0 + 448) = v15;
    if (v3)
    {
      id v17 = *(void **)(v0 + 392);
      id v16 = *(void **)(v0 + 400);
      uint64_t v18 = *(void *)(v0 + 360);
      uint64_t v19 = *(void *)(v0 + 328);
      uint64_t v20 = *(void *)(v0 + 304);
      uint64_t v22 = *(void *)(v0 + 272);
      uint64_t v21 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      uint64_t v23 = v19;
LABEL_16:
      sub_100B9529C(v23, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
      swift_bridgeObjectRelease();
      sub_100B9529C(v18, type metadata accessor for CRLProto_ObjectMetadata);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_17;
    }
    uint64_t v24 = v15;
    uint64_t v25 = v7;
    swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v26 = *(void **)(v0 + 392);
      uint64_t v27 = *(void *)(v0 + 216);
      uint64_t v28 = *(void *)(v0 + 208);
      uint64_t v71 = *(void *)(v0 + 200);
      uint64_t v29 = *(void *)(v0 + 192);
      uint64_t v69 = *(void *)(v0 + 184);
      uint64_t v70 = *(void *)(v0 + 224);
      swift_bridgeObjectRetain();
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v31 = [v30 pathExtension];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v32 = [v26 URL];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      int v33 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      *(void *)(v0 + 456) = v33;
      *(void *)(v0 + 464) = (v29 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v33(v28, v69);
      URL.appendingPathExtension(_:)();
      swift_bridgeObjectRelease();
      v33(v27, v69);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v71, v70, v69);
      id v34 = objc_allocWithZone((Class)CRLFileIOChannel);
      id v35 = sub_100B95000(v71);
      *(void *)(v0 + 472) = v35;
      id v66 = v35;
      swift_unknownObjectRetain();
      uint64_t v67 = swift_task_alloc();
      *(void *)(v0 + 480) = v67;
      *(void *)(v67 + 16) = v24;
      *(void *)(v67 + 24) = v66;
      BOOL v68 = (void *)swift_task_alloc();
      *(void *)(v0 + 488) = v68;
      *BOOL v68 = v0;
      v68[1] = sub_100B93530;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v68, 0, 0, 0xD000000000000012, 0x800000010124E6C0, sub_100B952FC, v67, (char *)&type metadata for () + 8);
    }
    if (qword_10166FA18 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v36 = (void *)static OS_os_log.crlSerializableObject;
    sub_1005057FC((uint64_t *)&unk_101672B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117D8C0;
    *(void *)(inited + 56) = &type metadata for String;
    unint64_t v38 = sub_100528BE4();
    *(void *)(inited + 32) = v25;
    *(void *)(inited + 40) = v9;
    *(void *)(inited + 96) = &type metadata for String;
    *(void *)(inited + 104) = v38;
    *(void *)(inited + 64) = v38;
    *(void *)(inited + 72) = v12;
    *(void *)(inited + 80) = v13;
    swift_bridgeObjectRetain();
    id v39 = v36;
    uint64_t v40 = static os_log_type_t.default.getter();
    sub_100BAC898((uint64_t)v39, (uint64_t)&_mh_execute_header, v40, (uint64_t)"Skipping reading asset without backing read channel. assetID=%@, assetFilename=%@", 81, 2, inited);
    swift_setDeallocating();
    sub_1005057FC(&qword_101672B50);
    swift_arrayDestroy();

    uint64_t v3 = 0;
  }
  uint64_t v41 = *(void *)(v0 + 408);
  uint64_t v42 = *(void *)(v0 + 328);
  uint64_t v43 = *(void *)(v0 + 424) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 272));
  sub_100B9529C(v42, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  if (v43 == v41)
  {
    swift_bridgeObjectRelease();
    uint64_t v44 = *(void **)(v0 + 400);
    uint64_t v45 = *(void *)(v0 + 360);

    sub_100B9529C(v45, type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
LABEL_17:
    return v46();
  }
  uint64_t v47 = *(void *)(v0 + 416);
  uint64_t v48 = *(void *)(v0 + 424) + 1;
  *(void *)(v0 + 424) = v48;
  uint64_t v49 = *(void *)(v0 + 328);
  uint64_t v50 = *(void *)(v0 + 312);
  uint64_t v51 = *(void *)(v0 + 248);
  uint64_t v52 = *(void *)(v0 + 256);
  uint64_t v53 = *(void *)(v0 + 240);
  sub_1009B0894(*(void *)(v0 + 384)+ ((*(unsigned __int8 *)(v0 + 536) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 536))+ v47 * v48, v49);
  sub_100522E9C(v49 + *(int *)(v50 + 28), v53, (uint64_t *)&unk_101674160);
  int v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v51);
  uint64_t v55 = *(_OWORD **)(v0 + 264);
  if (v54 == 1)
  {
    uint64_t v56 = *(void *)(v0 + 240);
    *uint64_t v55 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v56, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100B95310(*(void *)(v0 + 240), (uint64_t)v55, type metadata accessor for CRLProto_Data);
  }
  unint64_t v57 = *(uint64_t **)(v0 + 264);
  uint64_t v58 = *v57;
  unint64_t v59 = v57[1];
  sub_100510D4C(*v57, v59);
  sub_100B9529C((uint64_t)v57, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v58, v59);
  *(void *)(v0 + 432) = v3;
  if (v3)
  {
    uint64_t v60 = *(void **)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v61 = *(void *)(v0 + 328);

    uint64_t v23 = v61;
    goto LABEL_16;
  }
  char v63 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v63;
  *char v63 = v0;
  v63[1] = sub_100B92A38;
  uint64_t v64 = *(void *)(v0 + 304);
  uint64_t v65 = *(void *)(v0 + 232);
  return sub_100EA869C(v65, v64, 0, 0, 3);
}

uint64_t sub_100B93530()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    int v2 = sub_100B93918;
  }
  else
  {
    swift_task_dealloc();
    int v2 = sub_100B93680;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B93680()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[50];
  uint64_t v3 = (uint64_t *)v0[41];
  uint64_t v4 = v0[28];
  swift_unknownObjectRelease();
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  v1[63] = v5;
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)swift_task_alloc();
  v1[64] = v7;
  v7[2] = v2;
  v7[3] = v4;
  v7[4] = v6;
  void v7[5] = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  v1[65] = v8;
  void *v8 = v1;
  v8[1] = sub_100B937C8;
  uint64_t v10 = v1[21];
  uint64_t v9 = v1[22];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v9, 0, 0, 0xD00000000000001CLL, 0x8000000101277150, sub_100B95304, v7, v10);
}

uint64_t sub_100B937C8()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100B941B4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100B93B3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B93918()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v3 = (void *)v0[56];
  uint64_t v4 = (void *)v0[49];
  uint64_t v13 = v0[41];
  uint64_t v14 = v0[45];
  uint64_t v12 = v0[38];
  uint64_t v5 = v0[35];
  uint64_t v10 = (void *)v0[50];
  uint64_t v11 = v0[34];
  uint64_t v6 = v0[28];
  uint64_t v7 = v0[23];
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  [v1 close];

  v2(v6, v7);
  [v3 close];

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v11);
  sub_100B9529C(v13, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_100B9529C(v14, type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100B93B3C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 296);
  uint64_t v44 = *(void *)(v0 + 304);
  uint64_t v46 = *(void *)(v0 + 528);
  uint64_t v3 = *(void *)(v0 + 288);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 176) + *(int *)(*(void *)(v0 + 168) + 64);
  uint64_t v7 = *(void (**)(uint64_t))(*(void *)(v0 + 280) + 32);
  v7(v3);
  v1(v6, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(v2, v3, v4);
  sub_100A69AC8(v44, v2);
  uint64_t v8 = *(void **)(v0 + 472);
  uint64_t v9 = *(void **)(v0 + 448);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 456);
  if (v46)
  {
    uint64_t v40 = *(void **)(v0 + 392);
    uint64_t v41 = *(void **)(v0 + 400);
    uint64_t v43 = *(void *)(v0 + 360);
    uint64_t v45 = *(void *)(v0 + 328);
    uint64_t v42 = *(void *)(v0 + 304);
    uint64_t v11 = *(void *)(v0 + 272);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 280) + 8);
    v13(*(void *)(v0 + 296), v11);
    swift_bridgeObjectRelease();
    [v8 close];

    v10(v12, v39);
    [v9 close];

    swift_unknownObjectRelease();
    v13(v42, v11);
    sub_100B9529C(v45, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
    sub_100B9529C(v43, type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
LABEL_5:
    return v14();
  }
  uint64_t v15 = *(void *)(v0 + 224);
  uint64_t v16 = *(void *)(v0 + 184);
  (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 296), *(void *)(v0 + 272));
  [v8 close];

  v10(v15, v16);
  [v9 close];
  swift_unknownObjectRelease();
  uint64_t v17 = *(void *)(v0 + 408);
  uint64_t v18 = *(void *)(v0 + 328);
  uint64_t v19 = *(void *)(v0 + 424) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 280) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 272));
  sub_100B9529C(v18, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  if (v19 == v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void **)(v0 + 400);
    uint64_t v21 = *(void *)(v0 + 360);

    sub_100B9529C(v21, type metadata accessor for CRLProto_ObjectMetadata);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_5;
  }
  uint64_t v23 = *(void *)(v0 + 416);
  uint64_t v24 = *(void *)(v0 + 424) + 1;
  *(void *)(v0 + 424) = v24;
  uint64_t v25 = *(void *)(v0 + 328);
  uint64_t v26 = *(void *)(v0 + 312);
  uint64_t v27 = *(void *)(v0 + 248);
  uint64_t v28 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 240);
  sub_1009B0894(*(void *)(v0 + 384)+ ((*(unsigned __int8 *)(v0 + 536) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 536))+ v23 * v24, v25);
  sub_100522E9C(v25 + *(int *)(v26 + 28), v29, (uint64_t *)&unk_101674160);
  int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v27);
  id v31 = *(_OWORD **)(v0 + 264);
  if (v30 == 1)
  {
    uint64_t v32 = *(void *)(v0 + 240);
    *id v31 = xmmword_101180360;
    UnknownStorage.init()();
    sub_100522F00(v32, (uint64_t *)&unk_101674160);
  }
  else
  {
    sub_100B95310(*(void *)(v0 + 240), (uint64_t)v31, type metadata accessor for CRLProto_Data);
  }
  int v33 = *(uint64_t **)(v0 + 264);
  uint64_t v34 = *v33;
  unint64_t v35 = v33[1];
  sub_100510D4C(*v33, v35);
  sub_100B9529C((uint64_t)v33, type metadata accessor for CRLProto_Data);
  UUID.init(crl_data:)(v34, v35);
  *(void *)(v0 + 432) = 0;
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 440) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_100B92A38;
  uint64_t v37 = *(void *)(v0 + 304);
  uint64_t v38 = *(void *)(v0 + 232);
  return sub_100EA869C(v38, v37, 0, 0, 3);
}

uint64_t sub_100B941B4()
{
  uint64_t v1 = (void *)v0[59];
  uint64_t v2 = (void *)v0[56];
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[57];
  uint64_t v9 = (void *)v0[49];
  uint64_t v10 = (void *)v0[50];
  uint64_t v13 = v0[41];
  uint64_t v14 = v0[45];
  uint64_t v4 = v0[35];
  uint64_t v11 = v0[34];
  uint64_t v12 = v0[38];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[23];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  [v1 close];

  v3(v5, v6);
  [v2 close];

  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v12, v11);
  sub_100B9529C(v13, type metadata accessor for CRLProto_ObjectMetadata.AssetInfo);
  sub_100B9529C(v14, type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100B943DC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B94528(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for BinaryDecodingOptions();
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for CRLProto_ObjectMetadata(0);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_100B945E8, 0, 0);
}

uint64_t sub_100B945E8()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = (void *)v0[2];
  uint64_t v2 = v0[3];
  *uint64_t v3 = _swiftEmptyArrayStorage;
  v3[1] = _swiftEmptyArrayStorage;
  UnknownStorage.init()();
  uint64_t v4 = (char *)v3 + *(int *)(v1 + 28);
  uint64_t v5 = type metadata accessor for CRLProto_Data(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v7 = *(void *)(v2 + 24);
  if (__OFADD__(v7, 8))
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 24) = v7 + 8;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[7] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100B94720;
    return sub_1007797F4(v7, 8, 1, ObjectType);
  }
  return result;
}

uint64_t sub_100B94720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = a1;
  v4[9] = a2;
  v4[10] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_100B94A10;
  }
  else {
    uint64_t v5 = sub_100B94838;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100B94838()
{
  unint64_t v1 = v0[9];
  uint64_t v2 = 0;
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v3 = v0[8];
      uint64_t v4 = (int)v3;
      if ((int)v3 > v3 >> 32) {
        goto LABEL_17;
      }
      sub_100510D4C(v3, v1);
      uint64_t v5 = __DataStorage._bytes.getter();
      if (!v5) {
        goto LABEL_20;
      }
      uint64_t v6 = v5;
      uint64_t v7 = __DataStorage._offset.getter();
      uint64_t v8 = v4 - v7;
      if (__OFSUB__(v4, v7)) {
        goto LABEL_19;
      }
      uint64_t v10 = v0[8];
      unint64_t v9 = v0[9];
      __DataStorage._length.getter();
      uint64_t v2 = *(void *)(v6 + v8);
      sub_100510084(v10, v9);
LABEL_10:
      if (v2 < 0)
      {
        __break(1u);
        goto LABEL_16;
      }
LABEL_11:
      uint64_t v17 = v0[3];
      uint64_t v18 = *(void *)(v17 + 24);
      if (__OFADD__(v18, v2))
      {
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __DataStorage._length.getter();
        __break(1u);
LABEL_21:
        __DataStorage._length.getter();
        __break(1u);
        JUMPOUT(0x100B94A00);
      }
      *(void *)(v17 + 24) = v18 + v2;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = (void *)swift_task_alloc();
      v0[11] = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_100B94AA4;
      return sub_1007797F4(v18, v2, 1, ObjectType);
    case 2uLL:
      uint64_t v11 = *(void *)(v0[8] + 16);
      swift_retain();
      swift_retain();
      uint64_t v12 = __DataStorage._bytes.getter();
      if (!v12) {
        goto LABEL_21;
      }
      uint64_t v13 = v12;
      uint64_t v14 = __DataStorage._offset.getter();
      BOOL v15 = __OFSUB__(v11, v14);
      uint64_t v16 = v11 - v14;
      if (v15) {
        goto LABEL_18;
      }
      __DataStorage._length.getter();
      uint64_t v2 = *(void *)(v13 + v16);
      swift_release();
      swift_release();
      goto LABEL_10;
    case 3uLL:
      goto LABEL_11;
    default:
      uint64_t v2 = v0[8];
      goto LABEL_10;
  }
}

uint64_t sub_100B94A10()
{
  swift_release();
  sub_100B9529C(*(void *)(v0 + 16), type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100B94AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_100B94D6C;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_100B94BD8;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100B94BD8()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[8];
  unint64_t v2 = v0[9];
  uint64_t v6 = v0[2];
  BinaryDecodingOptions.init()();
  sub_100B955B4((unint64_t *)&qword_101689D88, (void (*)(uint64_t))type metadata accessor for CRLProto_ObjectMetadata);
  Message.init(serializedData:extensions:partial:options:)();
  sub_100510084(v3, v2);
  swift_release();
  sub_100B9529C(v6, type metadata accessor for CRLProto_ObjectMetadata);
  if (!v1) {
    sub_100B95310(v0[6], v0[2], type metadata accessor for CRLProto_ObjectMetadata);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100B94D6C()
{
  sub_100510084(v0[8], v0[9]);
  swift_release();
  sub_100B9529C(v0[2], type metadata accessor for CRLProto_ObjectMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100B94E0C()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)(v0 + 2));

  sub_100522F00((uint64_t)v0 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata, &qword_101694F90);

  return swift_deallocClassInstance();
}

uint64_t sub_100B94E98()
{
  return type metadata accessor for CRLSerializableObjectReadCoordinator();
}

uint64_t type metadata accessor for CRLSerializableObjectReadCoordinator()
{
  uint64_t result = qword_101694ED8;
  if (!qword_101694ED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B94EEC()
{
  sub_100B94FA8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100B94FA8()
{
  if (!qword_101694EE8)
  {
    type metadata accessor for CRLProto_ObjectMetadata(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101694EE8);
    }
  }
}

id sub_100B95000(uint64_t a1)
{
  unint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [v2 initForStreamWritingURL:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

void *sub_100B9514C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  v21[3] = a6;
  void v21[4] = a7;
  uint64_t v13 = sub_1005767BC(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a1, a6);
  id v14 = (char *)a5 + OBJC_IVAR____TtC8Freeform36CRLSerializableObjectReadCoordinator_metadata;
  uint64_t v15 = type metadata accessor for CRLProto_ObjectMetadata(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  sub_1005498A4((uint64_t)v21, (uint64_t)(a5 + 2));
  a5[7] = a2;
  a5[8] = a3;
  a5[9] = a4;
  uint64_t v16 = (objc_class *)type metadata accessor for CRLUUIDRemapHelper();
  uint64_t v17 = objc_allocWithZone(v16);
  *(void *)&v17[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_objectUUIDMap] = _swiftEmptyDictionarySingleton;
  *(void *)&v17[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_assetUUIDMap] = _swiftEmptyDictionarySingleton;
  v17[OBJC_IVAR____TtC8Freeform18CRLUUIDRemapHelper_shouldResetObjectUUIDs] = (a4 & 4) != 0;
  v20.receiver = v17;
  v20.super_class = v16;
  id v18 = [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
  a5[10] = v18;
  return a5;
}

uint64_t sub_100B9529C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B952FC(uint64_t a1)
{
  return sub_100B90FF4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100B95304(uint64_t a1)
{
  return sub_100EABF8C(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100B95310(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B95378()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100B953B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100B953C0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100B95410(char a1, void *a2, uint64_t a3)
{
  sub_100B91580(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(NSObject **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_100B9541C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100B9542C()
{
  return swift_release();
}

uint64_t sub_100B95434()
{
  uint64_t v1 = sub_1005057FC(&qword_10167F0F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100B95504()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B9554C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101694F90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B955B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100B955FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = *(void *)(a6 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a6);
  return sub_100B9514C((uint64_t)v15, a2, a3, a4, v16, a6, a7);
}

uint64_t sub_100B957E4(uint64_t a1)
{
  v2[31] = a1;
  v2[32] = v1;
  v2[33] = swift_getObjectType();
  uint64_t v3 = type metadata accessor for DispatchData();
  v2[34] = v3;
  v2[35] = *(void *)(v3 - 8);
  v2[36] = swift_task_alloc();
  return _swift_task_switch(sub_100B958B0, 0, 0);
}

uint64_t sub_100B958B0()
{
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = *(char **)(v0 + 256);
  uint64_t v3 = *(void **)&v2[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_store];
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_context];
  *(void *)(v0 + 144) = *(void *)(v0 + 264);
  *(void *)(v0 + 152) = &off_101526A10;
  *(void *)(v0 + 120) = v2;
  type metadata accessor for CRLSerializableObjectWriteCoordinator();
  uint64_t inited = (void *)swift_initStackObject();
  *(void *)(v0 + 296) = inited;
  inited[12] = 0;
  inited[2] = v1;
  inited[3] = &off_101513250;
  sub_10053974C((long long *)(v0 + 120), (uint64_t)(inited + 4));
  inited[9] = v3;
  inited[10] = v4;
  inited[11] = 5;
  uint64_t v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v1;
  id v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v10;
  *id v10 = v0;
  v10[1] = sub_100B959D8;
  return sub_1009AD4AC();
}

uint64_t sub_100B959D8()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100B95E3C;
  }
  else {
    uint64_t v2 = sub_100B95AEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100B95AEC()
{
  uint64_t v1 = v0[36];
  uint64_t v26 = v0[37];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35];
  uint64_t v4 = v0[32];
  sub_1005498A4(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_pasteboardDataManaging, (uint64_t)(v0 + 20));
  unint64_t v29 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_itemMaxSize);
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel);
  id v25 = self;
  uint64_t v6 = v5 + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
  swift_beginAccess();
  id v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v1, v6, v2);
  id v8 = (void *)DispatchData._bridgeToObjectiveC()();
  id v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v1, v2);
  id v10 = [v25 crl_dataFromDispatchData:v8];

  uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v27 = v12;
  uint64_t v28 = v11;

  uint64_t v13 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel)
      + OBJC_IVAR____TtC8Freeform21CRLMemoryWriteChannel_dispatchData;
  swift_beginAccess();
  v7(v1, v13, v2);
  uint64_t v14 = (void *)DispatchData._bridgeToObjectiveC()();
  v9(v1, v2);
  id v15 = [v25 crl_dataFromDispatchData:v14];

  uint64_t v16 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  if (*(void *)(v26 + 96))
  {
    uint64_t v19 = *(void **)(v26 + 96);
  }
  else
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38, (uint64_t)"Reading asset file URL map before writing the object.", 53, 2u, (uint64_t)_swiftEmptyArrayStorage);
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"assetFileURLMap", 15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/Persistence/CRLSerializableObjectWriteCoordinator.swift", 109, 2, 38);
    uint64_t v19 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v20 = v0[37];
  id v21 = objc_allocWithZone((Class)type metadata accessor for CRLPasteboardNativeDataProvider());
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100B97ED0((uint64_t)(v0 + 20), v29, v28, v27, v16, v18, (uint64_t)v19);
  sub_100510084((uint64_t)v16, (unint64_t)v18);
  sub_100510084(v28, v27);
  swift_setDeallocating();
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v20 + 32);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(uint64_t))v0[1];
  return v23(v22);
}

uint64_t sub_100B95E3C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  swift_setDeallocating();
  swift_unknownObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v1 + 32);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100B9605C(void *a1, void *aBlock, void *a3)
{
  v3[2] = a1;
  v3[3] = a3;
  v3[4] = _Block_copy(aBlock);
  id v6 = a1;
  a3;
  id v7 = (void *)swift_task_alloc();
  v3[5] = v7;
  *id v7 = v3;
  v7[1] = sub_100B96120;
  return sub_100B957E4((uint64_t)v6);
}

uint64_t sub_100B96120(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  id v6 = *(void **)(*v2 + 24);
  id v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  if (v3)
  {
    id v10 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);

    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t type metadata accessor for CRLPasteboardObjectWriteAssistant()
{
  return self;
}

id sub_100B963A8()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel);
}

id sub_100B963E0()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel);
}

void sub_100B96418()
{
}

uint64_t sub_100B96474()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100B964BC()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100528488;
  id v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_101695020 + dword_101695020);
  return v6(v2, v3, v4);
}

id sub_100B96578(uint64_t a1, uint64_t a2, void *a3, void *a4, char *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v21[3] = sub_1007D5D18();
  void v21[4] = &off_10152E9B0;
  v21[0] = a1;
  uint64_t v11 = OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_metadataWriteChannel;
  unint64_t v12 = (objc_class *)type metadata accessor for CRLMemoryWriteChannel();
  id v13 = objc_allocWithZone(v12);
  uint64_t v14 = a5;
  *(void *)&a5[v11] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_objectsWriteChannel;
  *(void *)&v14[v15] = [objc_allocWithZone(v12) init];
  sub_1005498A4((uint64_t)v21, (uint64_t)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_pasteboardDataManaging]);
  *(void *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_itemMaxSize] = a2;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_store] = a3;
  *(void *)&v14[OBJC_IVAR____TtC8Freeform33CRLPasteboardObjectWriteAssistant_context] = a4;
  id v16 = a3;
  id v17 = a4;

  v20.receiver = v14;
  v20.super_class = ObjectType;
  id v18 = [super init];
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v21);
  return v18;
}

uint64_t sub_100B9670C()
{
  uint64_t v1 = v0;
  uint64_t v77 = type metadata accessor for URL();
  uint64_t v72 = *(void *)(v77 - 8);
  __chkstk_darwin(v77, v2);
  uint64_t v75 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC(&qword_1016950A0);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (uint64_t *)((char *)&v65 - v10);
  unint64_t v12 = _swiftEmptyArrayStorage;
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize) >= 1)
  {
    uint64_t v13 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes;
    if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes))
    {
      return swift_bridgeObjectRetain();
    }
    else
    {
      long long v78 = _swiftEmptyArrayStorage;
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData);
      unint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData + 8);
      uint64_t v18 = 0;
      switch(v17 >> 62)
      {
        case 1uLL:
          BOOL v19 = __OFSUB__(HIDWORD(v16), v16);
          int v20 = HIDWORD(v16) - v16;
          if (v19) {
            goto LABEL_45;
          }
          uint64_t v18 = v20;
LABEL_9:
          uint64_t v24 = sub_100B96D58(v14, v15, v18);
          swift_bridgeObjectRelease();
          sub_1006E0CB8((uint64_t)v24);
          uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v27 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData);
          unint64_t v28 = *(void *)(v0 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData + 8);
          uint64_t v29 = 0;
          switch(v28 >> 62)
          {
            case 1uLL:
              BOOL v19 = __OFSUB__(HIDWORD(v27), v27);
              int v30 = HIDWORD(v27) - v27;
              if (v19) {
                goto LABEL_47;
              }
              uint64_t v29 = v30;
LABEL_14:
              uint64_t v67 = v13;
              uint64_t v34 = sub_100B96D58(v25, v26, v29);
              swift_bridgeObjectRelease();
              sub_1006E0CB8((uint64_t)v34);
              uint64_t v35 = *(void *)(v0
                              + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_assetPasteboardTypeToURLMap);
              uint64_t v36 = *(void *)(v35 + 64);
              uint64_t v68 = v35 + 64;
              uint64_t v37 = 1 << *(unsigned char *)(v35 + 32);
              uint64_t v38 = -1;
              if (v37 < 64) {
                uint64_t v38 = ~(-1 << v37);
              }
              unint64_t v39 = v38 & v36;
              int64_t v69 = (unint64_t)(v37 + 63) >> 6;
              uint64_t v70 = v72 + 16;
              uint64_t v73 = (void (**)(char *, uint64_t))(v72 + 8);
              uint64_t v74 = (void (**)(char *, char *, uint64_t))(v72 + 32);
              int64_t v66 = v69 - 1;
              uint64_t v71 = v35;
              swift_bridgeObjectRetain();
              int64_t v76 = 0;
              uint64_t v40 = v77;
              if (!v39) {
                goto LABEL_22;
              }
              break;
            case 2uLL:
              uint64_t v33 = v27 + 16;
              uint64_t v31 = *(void *)(v27 + 16);
              uint64_t v32 = *(void *)(v33 + 8);
              uint64_t v29 = v32 - v31;
              if (!__OFSUB__(v32, v31)) {
                goto LABEL_14;
              }
              goto LABEL_48;
            case 3uLL:
              goto LABEL_14;
            default:
              uint64_t v29 = BYTE6(v28);
              goto LABEL_14;
          }
          break;
        case 2uLL:
          uint64_t v23 = v16 + 16;
          uint64_t v21 = *(void *)(v16 + 16);
          uint64_t v22 = *(void *)(v23 + 8);
          uint64_t v18 = v22 - v21;
          if (!__OFSUB__(v22, v21)) {
            goto LABEL_9;
          }
          goto LABEL_46;
        case 3uLL:
          goto LABEL_9;
        default:
          uint64_t v18 = BYTE6(v17);
          goto LABEL_9;
      }
LABEL_20:
      unint64_t v51 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      unint64_t v52 = v51 | (v76 << 6);
LABEL_21:
      uint64_t v53 = v72;
      uint64_t v54 = *(void *)(v71 + 56);
      uint64_t v55 = (void *)(*(void *)(v71 + 48) + 16 * v52);
      uint64_t v56 = v55[1];
      *(void *)id v7 = *v55;
      *((void *)v7 + 1) = v56;
      uint64_t v57 = v54 + *(void *)(v53 + 72) * v52;
      uint64_t v58 = sub_1005057FC(&qword_1016950A8);
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(&v7[*(int *)(v58 + 48)], v57, v77);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v7, 0, 1, v58);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10051B3EC((uint64_t)v7, (uint64_t)v11, &qword_1016950A0);
        uint64_t v63 = sub_1005057FC(&qword_1016950A8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v11, 1, v63) == 1) {
          break;
        }
        uint64_t v41 = v1;
        uint64_t v42 = *v11;
        uint64_t v43 = v11[1];
        uint64_t v44 = (char *)v11 + *(int *)(v63 + 48);
        uint64_t v45 = v75;
        (*v74)(v75, v44, v40);
        URL._bridgeToObjectiveC()(v46);
        uint64_t v48 = v47;
        (*v73)(v45, v40);
        uint64_t v49 = [v48 crl_fileSize];

        if (v49 < 0)
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
          JUMPOUT(0x100B96D38);
        }
        uint64_t v1 = v41;
        uint64_t v50 = sub_100B96D58(v42, v43, v49);
        swift_bridgeObjectRelease();
        sub_1006E0CB8((uint64_t)v50);
        if (v39) {
          goto LABEL_20;
        }
LABEL_22:
        int64_t v59 = v76 + 1;
        if (__OFADD__(v76, 1)) {
          goto LABEL_44;
        }
        if (v59 < v69)
        {
          unint64_t v60 = *(void *)(v68 + 8 * v59);
          if (v60) {
            goto LABEL_25;
          }
          int64_t v61 = v76 + 2;
          ++v76;
          if (v59 + 1 < v69)
          {
            unint64_t v60 = *(void *)(v68 + 8 * v61);
            if (v60) {
              goto LABEL_28;
            }
            int64_t v76 = v59 + 1;
            if (v59 + 2 < v69)
            {
              unint64_t v60 = *(void *)(v68 + 8 * (v59 + 2));
              if (v60)
              {
                v59 += 2;
                goto LABEL_25;
              }
              int64_t v61 = v59 + 3;
              int64_t v76 = v59 + 2;
              if (v59 + 3 < v69)
              {
                unint64_t v60 = *(void *)(v68 + 8 * v61);
                if (v60)
                {
LABEL_28:
                  int64_t v59 = v61;
LABEL_25:
                  unint64_t v39 = (v60 - 1) & v60;
                  unint64_t v52 = __clz(__rbit64(v60)) + (v59 << 6);
                  int64_t v76 = v59;
                  goto LABEL_21;
                }
                while (1)
                {
                  int64_t v59 = v61 + 1;
                  if (__OFADD__(v61, 1)) {
                    goto LABEL_49;
                  }
                  if (v59 >= v69) {
                    break;
                  }
                  unint64_t v60 = *(void *)(v68 + 8 * v59);
                  ++v61;
                  if (v60) {
                    goto LABEL_25;
                  }
                }
                int64_t v76 = v66;
              }
            }
          }
        }
        uint64_t v62 = sub_1005057FC(&qword_1016950A8);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v7, 1, 1, v62);
        unint64_t v39 = 0;
      }
      swift_release();
      unint64_t v12 = v78;
      *(void *)(v1 + v67) = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)v12;
}

double *sub_100B96D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  if (v4 < 1 || a3 < 1) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v7 = a3;
  sub_1005057FC((uint64_t *)&unk_101672610);
  uint64_t v10 = swift_allocObject();
  uint64_t v6 = (double *)v10;
  *(_OWORD *)(v10 + 16) = xmmword_10117E810;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  if (v4 >= v7)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    do
    {
      swift_bridgeObjectRetain();
      v11._countAndFlagsBits = 46;
      v11._object = (void *)0xE100000000000000;
      String.append(_:)(v11);
      v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      unint64_t v14 = *((void *)v6 + 2);
      unint64_t v13 = *((void *)v6 + 3);
      if (v14 >= v13 >> 1) {
        uint64_t v6 = sub_100F61B70((double *)(v13 > 1), v14 + 1, 1, v6);
      }
      *((void *)v6 + 2) = v14 + 1;
      uint64_t v15 = &v6[2 * v14];
      *((void *)v15 + 4) = a1;
      *((void *)v15 + 5) = a2;
      v7 -= v4;
    }
    while (v4 < (uint64_t)v7);
  }
  return v6;
}

uint64_t sub_100B96EB8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  unint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t *)(v2 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_fulfilledPromises);
  swift_beginAccess();
  uint64_t v16 = *v15;
  swift_bridgeObjectRetain();
  char v17 = sub_1006E5D6C((uint64_t)a1, (uint64_t)a2, v16);
  swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    if ((void *)static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v19 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        if ((void *)static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v22 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v24 & 1) == 0)
          {
            v26._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::Bool v27 = String.hasPrefix(_:)(v26);
            swift_bridgeObjectRelease();
            if (v27)
            {
              uint64_t v28 = *(void *)(v3
                              + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_assetPasteboardTypeToURLMap);
              if (*(void *)(v28 + 16))
              {
                swift_bridgeObjectRetain();
                unint64_t v29 = sub_100955F50((uint64_t)a1, (uint64_t)a2);
                if (v30)
                {
                  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v9, *(void *)(v28 + 56) + *(void *)(v11 + 72) * v29, v10);
                  uint64_t v31 = 0;
                }
                else
                {
                  uint64_t v31 = 1;
                }
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v31, 1, v10);
                swift_bridgeObjectRelease();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
                {
                  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
                  uint64_t v18 = sub_100B9762C((uint64_t)v14, a1, a2);
                  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
                  goto LABEL_16;
                }
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
              }
              sub_1005CCBB8((uint64_t)v9);
            }
            else
            {
              sub_1005057FC((uint64_t *)&unk_101672B40);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10117E810;
              *(void *)(inited + 56) = &type metadata for String;
              *(void *)(inited + 64) = sub_100528BE4();
              *(void *)(inited + 32) = a1;
              *(void *)(inited + 40) = a2;
              swift_bridgeObjectRetain();
              sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"fulfillPromises(forPasteboardType:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2, 123, (uint64_t)"Unexpected pasteboard type: %{public}@", 38, 2u, inited);
              sub_1005598CC(inited, (uint64_t)"fulfillPromises(forPasteboardType:)", 35, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CRLKit/CRLPasteboardNativeDataProvider.swift", 98, 2, 123);
              swift_setDeallocating();
              sub_1005057FC(&qword_101672B50);
              swift_arrayDestroy();
            }
            uint64_t v18 = 0;
LABEL_16:
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_100CB8180(&v34, (Swift::Int)a1, (Swift::Int)a2);
            swift_endAccess();
            swift_bridgeObjectRelease();
            return v18;
          }
        }
        uint64_t v23 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData;
LABEL_15:
        uint64_t v18 = sub_100B973B8(*(void *)(v3 + v23), *(void *)(v3 + v23 + 8), (uint64_t)a1, (uint64_t)a2);
        goto LABEL_16;
      }
    }
    uint64_t v23 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData;
    goto LABEL_15;
  }
  return 0;
}

uint64_t sub_100B973B8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_33;
      }
      uint64_t v5 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v5 < 1) {
        return 0;
      }
      uint64_t v30 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
      if (v30 >= v5) {
        uint64_t v8 = v5;
      }
      else {
        uint64_t v8 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
      }
      if (v8 < 0) {
        goto LABEL_29;
      }
      uint64_t v9 = OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_pasteboardDataManaging;
      uint64_t v27 = Data.subdata(in:)();
      uint64_t v11 = v5 - v8;
      if (v5 - v8 >= 1)
      {
        Swift::String v26 = (void *)(v4 + v9);
        uint64_t v12 = 1;
        unint64_t v13 = v10;
        while (1)
        {
          if (v30 >= v11) {
            uint64_t v14 = v11;
          }
          else {
            uint64_t v14 = v30;
          }
          uint64_t v15 = v8 + v14;
          if (__OFADD__(v8, v14)) {
            goto LABEL_30;
          }
          if (v15 < v8) {
            break;
          }
          uint64_t v16 = Data.subdata(in:)();
          uint64_t v18 = v16;
          unint64_t v19 = v17;
          if (v13 >> 60 == 15)
          {
            uint64_t v27 = v16;
            unint64_t v13 = v17;
          }
          else
          {
            swift_bridgeObjectRetain();
            v20._countAndFlagsBits = 46;
            v20._object = (void *)0xE100000000000000;
            String.append(_:)(v20);
            v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v21);
            swift_bridgeObjectRelease();
            uint64_t v22 = v26[3];
            uint64_t v23 = v26[4];
            sub_10050F848(v26, v22);
            (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 16))(v18, v19, a3, a4, v22, v23);
            sub_100510084(v18, v19);
            swift_bridgeObjectRelease();
          }
          if (__OFADD__(v12, 1)) {
            goto LABEL_31;
          }
          BOOL v24 = __OFSUB__(v11, v14);
          v11 -= v14;
          if (v24) {
            goto LABEL_32;
          }
          ++v12;
          uint64_t v8 = v15;
          if (v11 <= 0) {
            goto LABEL_26;
          }
        }
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        JUMPOUT(0x100B9761CLL);
      }
      unint64_t v13 = v10;
LABEL_26:
      uint64_t result = v27;
      if (v13 >> 60 == 15) {
        return 0;
      }
      return result;
    case 2uLL:
      uint64_t v7 = *(void *)(a1 + 16);
      uint64_t v6 = *(void *)(a1 + 24);
      uint64_t v5 = v6 - v7;
      if (!__OFSUB__(v6, v7)) {
        goto LABEL_6;
      }
      goto LABEL_34;
    case 3uLL:
      return 0;
    default:
      uint64_t v5 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100B9762C(uint64_t a1, id a2, id a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100B97E90();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  id v13 = sub_100EA5584((uint64_t)v12);
  uint64_t v14 = *(void *)(v4 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize);
  uint64_t v15 = NSFileHandle.read(upToCount:)();
  uint64_t v18 = v15;
  unint64_t v19 = (void *)v16;
  if (v16 >> 60 == 15)
  {
LABEL_22:
    [v13 closeFile];

    return v18;
  }
  switch(v16 >> 62)
  {
    case 1uLL:
      LODWORD(v20) = HIDWORD(v15) - v15;
      if (__OFSUB__(HIDWORD(v15), v15)) {
        goto LABEL_27;
      }
      uint64_t v20 = (int)v20;
LABEL_9:
      if (v20 < v14) {
        goto LABEL_22;
      }
      break;
    case 2uLL:
      uint64_t v22 = *(void *)(v15 + 16);
      uint64_t v21 = *(void *)(v15 + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_9;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_21;
    default:
      uint64_t v20 = BYTE6(v16);
      goto LABEL_9;
  }
LABEL_10:
  id v42 = a2;
  id v43 = a3;
  uint64_t v38 = v18;
  unint64_t v39 = v19;
  v37[1] = a1;
  uint64_t v40 = (void *)(v4 + OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_pasteboardDataManaging);
  a1 = 1;
  uint64_t v41 = v14;
  while (2)
  {
    uint64_t v24 = NSFileHandle.read(upToCount:)();
    unint64_t v26 = v25;
    if (v25 >> 60 == 15) {
      goto LABEL_24;
    }
    uint64_t v4 = v24;
    switch(v25 >> 62)
    {
      case 1uLL:
        LODWORD(v27) = HIDWORD(v24) - v24;
        if (__OFSUB__(HIDWORD(v24), v24))
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          JUMPOUT(0x100B97B40);
        }
        uint64_t v27 = (int)v27;
LABEL_17:
        if (v27 >= 1)
        {
          id v45 = v42;
          id v46 = v43;
          swift_bridgeObjectRetain();
          v30._countAndFlagsBits = 46;
          v30._object = (void *)0xE100000000000000;
          String.append(_:)(v30);
          uint64_t v44 = a1;
          v31._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v31);
          swift_bridgeObjectRelease();
          id v32 = v45;
          a2 = v46;
          a3 = v13;
          uint64_t v33 = v40[3];
          uint64_t v18 = v40[4];
          Swift::Int v34 = sub_10050F848(v40, v33);
          id v35 = v32;
          unint64_t v19 = v34;
          uint64_t v36 = v33;
          id v13 = a3;
          (*(void (**)(uint64_t, unint64_t, id, id, uint64_t, uint64_t))(v18 + 16))(v4, v26, v35, a2, v36, v18);
          sub_100514260(v4, v26);
          swift_bridgeObjectRelease();
          BOOL v23 = __OFADD__(a1++, 1);
          uint64_t v14 = v41;
          if (!v23) {
            continue;
          }
          __break(1u);
LABEL_21:
          if (v14 > 0) {
            goto LABEL_22;
          }
          goto LABEL_10;
        }
LABEL_23:
        sub_100514260(v24, v25);
LABEL_24:
        [v13 closeFile];

        return v38;
      case 2uLL:
        uint64_t v29 = *(void *)(v24 + 16);
        uint64_t v28 = *(void *)(v24 + 24);
        BOOL v23 = __OFSUB__(v28, v29);
        uint64_t v27 = v28 - v29;
        if (!v23) {
          goto LABEL_17;
        }
        goto LABEL_26;
      case 3uLL:
        goto LABEL_23;
      default:
        uint64_t v27 = BYTE6(v25);
        goto LABEL_17;
    }
  }
}

uint64_t type metadata accessor for CRLPasteboardNativeDataProvider()
{
  return self;
}

id sub_100B97CF0(uint64_t a1, uint64_t a2)
{
  return sub_100B97D30(a1, a2, &OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData);
}

id sub_100B97D10(uint64_t a1, uint64_t a2)
{
  return sub_100B97D30(a1, a2, &OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData);
}

id sub_100B97D30(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t *)(*v3 + *a3);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  Channel = (objc_class *)type metadata accessor for CRLMemoryReadChannel();
  uint64_t v8 = (char *)objc_allocWithZone(Channel);
  uint64_t v9 = (uint64_t *)&v8[OBJC_IVAR____TtC8Freeform20CRLMemoryReadChannel_data];
  *uint64_t v9 = v5;
  v9[1] = v6;
  sub_100510D4C(v5, v6);
  v11.receiver = v8;
  v11.super_class = Channel;
  return [super init];
}

uint64_t sub_100B97DC0()
{
  return 0;
}

unint64_t sub_100B97E90()
{
  unint64_t result = qword_101695098;
  if (!qword_101695098)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101695098);
  }
  return result;
}

uint64_t sub_100B97ED0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, void (**a6)(char *, char *, uint64_t), uint64_t a7)
{
  uint64_t v127 = a5;
  uint64_t v128 = a6;
  uint64_t v126 = a3;
  unint64_t v130 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = sub_1005057FC(&qword_101672E90);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v17);
  unint64_t v19 = (char *)&v100 - v18;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  uint64_t v115 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v25);
  uint64_t v27 = (char *)&v100 - v26;
  uint64_t v121 = type metadata accessor for UUID();
  uint64_t v112 = *(void *)(v121 - 8);
  __chkstk_darwin(v121, v28);
  uint64_t v129 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1005057FC(&qword_1016950B0);
  __chkstk_darwin(v30 - 8, v31);
  unint64_t v122 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v34);
  uint64_t v120 = (uint64_t)&v100 - v35;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider__promisedDataTypes] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_fulfilledPromises] = &_swiftEmptySetSingleton;
  uint64_t v104 = a1;
  sub_1005498A4(a1, (uint64_t)&v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_pasteboardDataManaging]);
  *(void *)&v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_itemMaxSize] = v130;
  uint64_t v36 = (uint64_t *)&v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_metadataData];
  *uint64_t v36 = a3;
  v36[1] = a4;
  unint64_t v37 = a4;
  uint64_t v38 = &v7[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_objectsData];
  uint64_t v39 = (uint64_t)v127;
  unint64_t v40 = (unint64_t)v128;
  *(void *)uint64_t v38 = v127;
  *((void *)v38 + 1) = v40;
  uint64_t v111 = a7;
  uint64_t v41 = *(void *)(a7 + 64);
  uint64_t v105 = a7 + 64;
  char v42 = *(unsigned char *)(a7 + 32);
  id v43 = v27;
  uint64_t v44 = 1 << v42;
  uint64_t v45 = -1;
  if (v44 < 64) {
    uint64_t v45 = ~(-1 << v44);
  }
  unint64_t v130 = v45 & v41;
  uint64_t v102 = v7;
  unint64_t v46 = v37;
  uint64_t v47 = v121;
  sub_100510D4C(v126, v46);
  sub_100510D4C(v39, v40);
  int64_t v123 = 0;
  uint64_t v110 = v112 + 16;
  uint64_t v128 = (void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v119 = (void (**)(char *, uint64_t, uint64_t))(v112 + 32);
  CFStringRef v118 = @"com.apple.freeform.CRLAsset.";
  uint64_t v124 = (void (**)(char *, uint64_t, uint64_t))(v21 + 32);
  uint64_t v125 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v117 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v106 = v21 + 40;
  uint64_t v126 = v21;
  uint64_t v114 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v113 = (void (**)(char *, uint64_t))(v112 + 8);
  int64_t v107 = (unint64_t)(v44 + 63) >> 6;
  int64_t v101 = v107 - 1;
  uint64_t v127 = _swiftEmptyDictionarySingleton;
  uint64_t v109 = v43;
  uint64_t v116 = v19;
  uint64_t v108 = v15;
  while (1)
  {
    if (v130)
    {
      uint64_t v49 = v43;
      unint64_t v50 = __clz(__rbit64(v130));
      v130 &= v130 - 1;
      uint64_t v51 = (uint64_t)v122;
      unint64_t v52 = v50 | (v123 << 6);
LABEL_9:
      uint64_t v53 = v111;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v112 + 16))(v51, *(void *)(v111 + 48) + *(void *)(v112 + 72) * v52, v47);
      uint64_t v54 = v126;
      unint64_t v55 = *(void *)(v53 + 56) + *(void *)(v126 + 72) * v52;
      uint64_t v56 = sub_1005057FC(&qword_1016950B8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v54 + 16))(v51 + *(int *)(v56 + 48), v55, v20);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v51, 0, 1, v56);
      goto LABEL_28;
    }
    uint64_t v51 = (uint64_t)v122;
    int64_t v57 = v123 + 1;
    if (__OFADD__(v123, 1)) {
      goto LABEL_48;
    }
    if (v57 < v107)
    {
      unint64_t v58 = *(void *)(v105 + 8 * v57);
      if (v58) {
        goto LABEL_13;
      }
      int64_t v59 = v123 + 2;
      ++v123;
      if (v57 + 1 < v107)
      {
        unint64_t v58 = *(void *)(v105 + 8 * v59);
        if (v58) {
          goto LABEL_16;
        }
        int64_t v123 = v57 + 1;
        if (v57 + 2 < v107)
        {
          unint64_t v58 = *(void *)(v105 + 8 * (v57 + 2));
          if (v58)
          {
            v57 += 2;
            goto LABEL_13;
          }
          int64_t v59 = v57 + 3;
          int64_t v123 = v57 + 2;
          if (v57 + 3 < v107) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v49 = v43;
    uint64_t v60 = sub_1005057FC(&qword_1016950B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v51, 1, 1, v60);
    unint64_t v130 = 0;
LABEL_28:
    uint64_t v61 = v120;
    sub_10051B3EC(v51, v120, &qword_1016950B0);
    uint64_t v62 = sub_1005057FC(&qword_1016950B8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62) == 1)
    {
      swift_release();
      uint64_t v97 = v102;
      *(void *)&v102[OBJC_IVAR____TtC8Freeform31CRLPasteboardNativeDataProvider_assetPasteboardTypeToURLMap] = v127;

      v133.receiver = v97;
      v133.super_class = ObjectType;
      id v98 = [super init];
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v104);
      return (uint64_t)v98;
    }
    uint64_t v63 = v15;
    uint64_t v64 = v61 + *(int *)(v62 + 48);
    (*v119)(v129, v61, v47);
    uint64_t v65 = *v124;
    id v43 = v49;
    (*v124)(v49, v64, v20);
    uint64_t v66 = UUID.uuidString.getter();
    uint64_t v68 = v67;
    uint64_t v131 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v132 = v69;
    swift_bridgeObjectRetain();
    v70._countAndFlagsBits = v66;
    v70._object = v68;
    String.append(_:)(v70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v131;
    uint64_t v72 = v132;
    uint64_t v73 = (uint64_t)v116;
    (*v128)(v116, v43, v20);
    uint64_t v74 = *v125;
    (*v125)((char *)v73, 0, 1, v20);
    if ((*v117)(v73, 1, v20) != 1)
    {
      uint64_t v81 = v65;
      v65(v115, v73, v20);
      uint64_t v82 = v127;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v131 = (uint64_t)v82;
      unint64_t v85 = sub_100955F50(v71, v72);
      uint64_t v86 = v82[2];
      BOOL v87 = (v84 & 1) == 0;
      uint64_t v88 = v86 + v87;
      if (__OFADD__(v86, v87))
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      char v89 = v84;
      if (v82[3] >= v88)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          int v92 = (void *)v131;
          if ((v84 & 1) == 0) {
            goto LABEL_38;
          }
        }
        else
        {
          sub_100983FB8();
          int v92 = (void *)v131;
          if ((v89 & 1) == 0) {
            goto LABEL_38;
          }
        }
      }
      else
      {
        sub_10096DB5C(v88, isUniquelyReferenced_nonNull_native);
        unint64_t v90 = sub_100955F50(v71, v72);
        if ((v89 & 1) != (v91 & 1)) {
          goto LABEL_51;
        }
        unint64_t v85 = v90;
        int v92 = (void *)v131;
        if ((v89 & 1) == 0)
        {
LABEL_38:
          v92[(v85 >> 6) + 8] |= 1 << v85;
          uint64_t v93 = (uint64_t *)(v92[6] + 16 * v85);
          *uint64_t v93 = v71;
          v93[1] = v72;
          v81((char *)(v92[7] + *(void *)(v126 + 72) * v85), (uint64_t)v115, v20);
          uint64_t v94 = v92[2];
          BOOL v95 = __OFADD__(v94, 1);
          uint64_t v96 = v94 + 1;
          if (v95) {
            goto LABEL_49;
          }
          v92[2] = v96;
          swift_bridgeObjectRetain();
          goto LABEL_43;
        }
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v126 + 40))(v92[7] + *(void *)(v126 + 72) * v85, v115, v20);
LABEL_43:
      uint64_t v127 = (void *)v131;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = v108;
      id v43 = v109;
      goto LABEL_6;
    }
    sub_1005CCBB8(v73);
    uint64_t v75 = v127;
    swift_bridgeObjectRetain();
    unint64_t v76 = sub_100955F50(v71, v72);
    char v78 = v77;
    swift_bridgeObjectRelease();
    if (v78)
    {
      int v79 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v131 = (uint64_t)v75;
      uint64_t v80 = (uint64_t)v75;
      uint64_t v15 = v63;
      if (!v79)
      {
        sub_100983FB8();
        uint64_t v80 = v131;
      }
      swift_bridgeObjectRelease();
      v65(v63, *(void *)(v80 + 56) + *(void *)(v126 + 72) * v76, v20);
      uint64_t v127 = (void *)v80;
      sub_10058BA38(v76, v80);
      swift_bridgeObjectRelease();
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v48 = 1;
      uint64_t v15 = v63;
    }
    v74(v15, v48, 1, v20);
    swift_bridgeObjectRelease();
    sub_1005CCBB8((uint64_t)v15);
LABEL_6:
    (*v114)(v43, v20);
    uint64_t v47 = v121;
    (*v113)(v129, v121);
  }
  unint64_t v58 = *(void *)(v105 + 8 * v59);
  if (v58)
  {
LABEL_16:
    int64_t v57 = v59;
LABEL_13:
    uint64_t v49 = v43;
    unint64_t v130 = (v58 - 1) & v58;
    unint64_t v52 = __clz(__rbit64(v58)) + (v57 << 6);
    int64_t v123 = v57;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v57 = v59 + 1;
    if (__OFADD__(v59, 1)) {
      break;
    }
    if (v57 >= v107)
    {
      int64_t v123 = v101;
      goto LABEL_27;
    }
    unint64_t v58 = *(void *)(v105 + 8 * v57);
    ++v59;
    if (v58) {
      goto LABEL_13;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100B989AC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v23 = a3;
  unint64_t v3 = a2;
  if (a2 >> 62) {
    goto LABEL_11;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v18 = v3 & 0xC000000000000001;
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = v18 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      sub_1005498A4(v23, (uint64_t)v19);
      sub_100B98B60((uint64_t)v19, v20);
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v19);
      uint64_t v10 = v5;
      unint64_t v11 = v3;
      uint64_t v12 = v21;
      uint64_t v13 = v22;
      sub_10050F848(v20, v21);
      uint64_t v14 = v12;
      unint64_t v3 = v11;
      uint64_t v5 = v10;
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v14, v13);
      v19[0] = a1;
      swift_bridgeObjectRetain();
      sub_1006E1FC0(v15);
      uint64_t v16 = v19[0];
      _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v20);
      swift_bridgeObjectRelease();

      a1 = v16;
      if (v9 == v10)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B98B60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for CRLSpringLayerAnimation();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CRLBasicLayerAnimation();
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005498A4(a1, (uint64_t)v27);
  sub_1005057FC((uint64_t *)&unk_101683FD0);
  if (swift_dynamicCast())
  {
    memcpy(v26, v25, 0x12CuLL);
    a2[3] = v9;
    a2[4] = (uint64_t)&off_10150AF08;
    uint64_t v13 = sub_1005767BC(a2);
    sub_100549A68((uint64_t)v26, (uint64_t)v25);
    id v14 = v2;
    UUID.init()();
    swift_unknownObjectWeakInit();
    uint64_t v15 = &v12[*(int *)(v9 + 28)];
    uint64_t v16 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v15, 1, 1, v16);
    v17(&v12[*(int *)(v9 + 32)], 1, 1, v16);
    swift_unknownObjectWeakAssign();

    memcpy(v12, v25, 0x12CuLL);
    sub_100B99F78((uint64_t)v12, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLBasicLayerAnimation);
    return sub_100549AC4((uint64_t)v26);
  }
  else
  {
    memset(v25, 0, 300);
    sub_100522F00((uint64_t)v25, (uint64_t *)&unk_10169AEF0);
    sub_1005498A4(a1, (uint64_t)v27);
    if (swift_dynamicCast())
    {
      memcpy(v26, v25, 0x13CuLL);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_101534738;
      unint64_t v19 = sub_1005767BC(a2);
      sub_100823384((uint64_t)v26, (uint64_t)v25);
      id v20 = v2;
      UUID.init()();
      swift_unknownObjectWeakInit();
      uint64_t v21 = &v8[*(int *)(v5 + 28)];
      uint64_t v22 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
      uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
      v23(v21, 1, 1, v22);
      v23(&v8[*(int *)(v5 + 32)], 1, 1, v22);
      swift_unknownObjectWeakAssign();

      memcpy(v8, v25, 0x13CuLL);
      sub_100B99F78((uint64_t)v8, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CRLSpringLayerAnimation);
      return sub_1006FB684((uint64_t)v26);
    }
    else
    {
      memset(v25, 0, 304);
      v25[38] = 1;
      LODWORD(v25[39]) = 0;
      sub_100522F00((uint64_t)v25, &qword_10167C0C8);
      sub_1005498A4(a1, (uint64_t)v26);
      v25[0] = 0;
      v25[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(36);
      v24._object = (void *)0x8000000101277690;
      v24._countAndFlagsBits = 0xD000000000000022;
      String.append(_:)(v24);
      _print_unlocked<A, B>(_:_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  return result;
}

double sub_100B99010()
{
  uint64_t v1 = v0;
  if (*(unsigned char *)(v0 + 64) == 1)
  {
    sub_1005498A4(v0 + 24, (uint64_t)v9);
    double v2 = 0.0;
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    sub_10050F848((void *)(v1 + 24), *(void *)(v1 + 48));
    double v2 = (*(double (**)(uint64_t))(*(void *)(v3 + 32) + 8))(v4);
    sub_1005498A4(v1 + 24, (uint64_t)v9);
    uint64_t v6 = v10;
    uint64_t v5 = v11;
    sub_1005231B4((uint64_t)v9, v10);
    (*(void (**)(uint64_t, double))(*(void *)(v5 + 32) + 16))(v6, 0.0);
  }
  uint64_t v7 = sub_10050DD7C();
  sub_100B989AC((uint64_t)_swiftEmptyArrayStorage, (unint64_t)v7, (uint64_t)v9);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v9);
  return v2;
}

uint64_t sub_100B99120()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CRLRepAnimation();
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10085FAF8(v1, (uint64_t)&v94);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  sub_10050EAE0((uint64_t)&v94);
  if (!Strong)
  {
    sub_100B32FE4((uint64_t)_swiftEmptyArrayStorage, 0.0);
    return v17;
  }
  sub_100B99F0C(v1, (uint64_t)v5);
  v5[64] = 1;
  sub_1005498A4((uint64_t)(v5 + 24), (uint64_t)&v94);
  uint64_t v7 = sub_10050DD7C();
  uint64_t v8 = sub_100B989AC((uint64_t)_swiftEmptyArrayStorage, (unint64_t)v7, (uint64_t)&v94);
  swift_bridgeObjectRelease();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)&v94);
  sub_100B9AA6C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for CRLRepAnimation);
  swift_bridgeObjectRetain();
  id v64 = Strong;
  id v9 = [Strong allPlatformViews];
  sub_1009ACFF8();
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  *(void *)&long long v94 = _swiftEmptyArrayStorage;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    uint64_t v70 = v1;
    if (result) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v70 = v1;
  if (!v11) {
    goto LABEL_17;
  }
LABEL_4:
  if (v11 < 1) {
    goto LABEL_52;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v14 = *(id *)(v10 + 8 * i + 32);
    }
    uint64_t v15 = v14;
    id v16 = [v14 layer];

    if (v16)
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v1 = v70;
LABEL_18:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v8 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v71 = v18;
  if (!v18)
  {
LABEL_47:

    return v8;
  }
  unint64_t v19 = 0;
  id v20 = (void *)(v1 + 24);
  uint64_t v63 = v90;
  uint64_t v65 = (char *)&v94 + 8;
  uint64_t v66 = &v96;
  uint64_t v21 = 32;
  uint64_t v69 = (void *)(v1 + 24);
  while (v19 < *(void *)(v8 + 16))
  {
    uint64_t v73 = v21;
    sub_1005498A4(v8 + v21, (uint64_t)v100);
    uint64_t v23 = *(void *)(v1 + 48);
    uint64_t v22 = *(void *)(v1 + 56);
    sub_10050F848(v20, v23);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v22 + 56))(&v94, v23, v22);
    if (v99 == 58)
    {
      uint64_t v72 = v8;
      long long v24 = v94;
      long long v25 = v95;
      char v26 = v96;
      uint64_t v27 = v97;
      int v28 = v98;
      id v29 = v97;
      if (!v97)
      {
        long long v67 = v95;
        long long v68 = v94;
        sub_10085FAF8(v1, (uint64_t)&v94);
        id v29 = (id)swift_unknownObjectWeakLoadStrong();
        sub_10050EAE0((uint64_t)&v94);
        if (v29)
        {
          id v30 = [v29 renderableForRep:v64];

          if (v30)
          {
            id v29 = [v30 layer];
          }
          else
          {
            id v29 = 0;
          }
        }
        long long v25 = v67;
        long long v24 = v68;
      }
      if (v28 == 2) {
        unsigned __int8 v52 = 0;
      }
      else {
        unsigned __int8 v52 = v28;
      }
      long long v94 = v24;
      long long v95 = v25;
      char v96 = v26;
      id v97 = v29;
      unsigned __int8 v98 = v52;
      char v99 = 58;
      uint64_t v54 = v101;
      uint64_t v53 = v102;
      sub_1005231B4((uint64_t)v100, v101);
      unint64_t v55 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(v53 + 104);
      id v56 = v29;
      id v57 = v27;
      unint64_t v58 = (void (*)(long long *, void))v55(&v75, v54, v53);
      uint64_t v60 = *(void *)(v59 + 24);
      uint64_t v61 = *(void *)(v59 + 32);
      sub_1005231B4(v59, v60);
      uint64_t v62 = v60;
      id v20 = v69;
      (*(void (**)(long long *, uint64_t, uint64_t))(v61 + 64))(&v94, v62, v61);
      v58(&v75, 0);

      uint64_t v8 = v72;
    }
    else
    {
      sub_10054BD5C((uint64_t)&v94);
      uint64_t v31 = *(void *)(v1 + 48);
      uint64_t v32 = *(void *)(v1 + 56);
      sub_10050F848(v20, v31);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v32 + 56))(&v94, v31, v32);
      if (v99 == 59)
      {
        long long v33 = v94;
        long long v34 = v95;
        sub_1005E9324((uint64_t)v66, (uint64_t)v92);
        sub_1005E9324((uint64_t)v92, (uint64_t)v93);
        if (sub_1005E938C((uint64_t)v93) != 1) {
          goto LABEL_33;
        }
        uint64_t v72 = v8;
        uint64_t v35 = v101;
        uint64_t v36 = v102;
        unint64_t v37 = sub_10050F848(v100, v101);
        uint64_t v38 = *(void *)(v35 - 8);
        __n128 v39 = __chkstk_darwin(v37, v37);
        uint64_t v41 = (char *)&v63 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v38 + 16))(v41, v39);
        char v42 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 64))(v35, v36);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v35);
        if (!v42)
        {
          uint64_t v8 = v72;
          id v20 = v69;
LABEL_33:
          sub_1005498A4((uint64_t)v100, (uint64_t)&v75);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v49 = v73;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_100F68620(v8);
            uint64_t v8 = result;
          }
          if (v19 >= *(void *)(v8 + 16)) {
            goto LABEL_51;
          }
          uint64_t v50 = v8 + v49;
          _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8 + v49);
          uint64_t v51 = &v75;
          goto LABEL_20;
        }
        [v42 transform];
        v87[0] = v75;
        v87[1] = v76;
        v87[2] = v77;
        v87[3] = v78;
        v87[4] = v79;
        v87[5] = v80;
        v87[6] = v81;
        v87[7] = v82;
        sub_100B99F70((uint64_t)v87);
        long long v88 = v33;
        long long v89 = v34;
        sub_1005E9324((uint64_t)v87, (uint64_t)v63);
        long long v83 = v90[6];
        long long v84 = v90[7];
        char v85 = v91;
        long long v79 = v90[2];
        long long v80 = v90[3];
        long long v81 = v90[4];
        long long v82 = v90[5];
        long long v75 = v88;
        long long v76 = v89;
        long long v77 = v90[0];
        long long v78 = v90[1];
        char v86 = 59;
        uint64_t v43 = v101;
        uint64_t v44 = v102;
        sub_1005231B4((uint64_t)v100, v101);
        uint64_t v45 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v44 + 104))(v74, v43, v44);
        uint64_t v47 = *(void *)(v46 + 24);
        uint64_t v48 = *(void *)(v46 + 32);
        sub_1005231B4(v46, v47);
        (*(void (**)(long long *, uint64_t, uint64_t))(v48 + 64))(&v75, v47, v48);
        v45(v74, 0);

        uint64_t v8 = v72;
        id v20 = v69;
      }
      else
      {
        sub_10054BD5C((uint64_t)&v94);
      }
    }
    uint64_t v49 = v73;
    sub_1005498A4((uint64_t)v100, (uint64_t)&v94);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100F68620(v8);
      uint64_t v8 = result;
    }
    uint64_t v1 = v70;
    if (v19 >= *(void *)(v8 + 16)) {
      goto LABEL_50;
    }
    uint64_t v50 = v8 + v49;
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v8 + v49);
    uint64_t v51 = &v94;
LABEL_20:
    sub_10053974C(v51, v50);
    ++v19;
    uint64_t result = _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v100);
    uint64_t v21 = v49 + 40;
    if (v71 == v19) {
      goto LABEL_47;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_100B9996C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = sub_1005057FC(&qword_1016730B0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v7);
  id v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for CRLRepAnimation();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = v0[6];
  uint64_t v19 = v0[7];
  sub_10050F848(v0 + 3, v18);
  char v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 184))(v18, v19);
  sub_100B99F0C(v1, (uint64_t)v17);
  if (v20)
  {
    sub_100B9AA6C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLRepAnimation);
    sub_100B99F0C(v1, (uint64_t)v13);
LABEL_5:
    sub_100B9AA6C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLRepAnimation);
    return 1;
  }
  sub_100B9B2C8((uint64_t)&v17[*(int *)(v10 + 28)], (uint64_t)v9);
  sub_100B9AA6C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLRepAnimation);
  uint64_t v21 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  int v23 = v22(v9, 1, v21);
  sub_100522F00((uint64_t)v9, &qword_1016730B0);
  sub_100B99F0C(v1, (uint64_t)v13);
  if (v23 != 1) {
    goto LABEL_5;
  }
  sub_100B9B2C8((uint64_t)&v13[*(int *)(v10 + 32)], (uint64_t)v5);
  sub_100B9AA6C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for CRLRepAnimation);
  BOOL v24 = v22(v5, 1, v21) != 1;
  sub_100522F00((uint64_t)v5, &qword_1016730B0);
  return v24;
}

uint64_t sub_100B99C18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B9B2C8(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_100B99C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B9B2C8(v2 + *(int *)(a1 + 32), a2);
}

uint64_t sub_100B99C38()
{
  if ((*(unsigned char *)(v0 + 64) & 1) == 0)
  {
    uint64_t v1 = (void *)(v0 + 24);
    uint64_t v2 = *(void *)(v0 + 48);
    uint64_t v3 = *(void *)(v0 + 56);
    sub_10050F848(v1, v2);
    return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 32) + 8))(v2);
  }
  return result;
}

uint64_t sub_100B99C94(double a1)
{
  uint64_t v3 = v1 + 24;
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  sub_1005231B4(v3, v4);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)(v5 + 32) + 16))(v4, a1);
}

uint64_t (*sub_100B99CF0(uint64_t a1))(double *a1)
{
  *(void *)(a1 + 8) = v1;
  double v3 = 0.0;
  if ((*(unsigned char *)(v1 + 64) & 1) == 0)
  {
    uint64_t v4 = (void *)(v1 + 24);
    uint64_t v6 = *(void *)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    sub_10050F848(v4, v6);
    double v3 = (*(double (**)(uint64_t))(*(void *)(v5 + 32) + 8))(v6);
  }
  *(double *)a1 = v3;
  return sub_100B99D78;
}

uint64_t sub_100B99D78(double *a1)
{
  uint64_t v1 = *((void *)a1 + 1);
  double v2 = *a1;
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  sub_1005231B4(v1 + 24, v3);
  return (*(uint64_t (**)(uint64_t, double))(*(void *)(v4 + 32) + 16))(v3, v2);
}

uint64_t sub_100B99DD8()
{
  uint64_t v1 = v0 + 3;
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  sub_10050F848(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 32) + 32))(v2);
}

double sub_100B99E24()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 3;
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  sub_10050F848(v2, v4);
  double v5 = (*(double (**)(uint64_t))(*(void *)(v3 + 32) + 8))(v4);
  uint64_t v7 = v1[6];
  uint64_t v6 = v1[7];
  sub_10050F848(v2, v7);
  return v5 + (*(double (**)(uint64_t))(*(void *)(v6 + 32) + 32))(v7);
}

uint64_t type metadata accessor for CRLRepAnimation()
{
  uint64_t result = qword_101695118;
  if (!qword_101695118) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B99F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLRepAnimation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B99F70(uint64_t result)
{
  *(unsigned char *)(result + 128) = 0;
  return result;
}

uint64_t sub_100B99F78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100B99FE0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    swift_unknownObjectWeakCopyInit();
    *(void *)(a1 + 16) = a2[2];
    long long v7 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 24, (uint64_t)(a2 + 3));
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    uint64_t v8 = *(int *)(a3 + 28);
    id v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_1005057FC(&qword_1016730B0);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
      uint64_t v17 = *(int *)(v11 + 20);
      uint64_t v18 = &v9[v17];
      uint64_t v19 = &v10[v17];
      uint64_t v20 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
      swift_retain();
      v21(v9, 0, 1, v11);
    }
    uint64_t v22 = *(int *)(a3 + 32);
    int v23 = (char *)(a1 + v22);
    BOOL v24 = (char *)a2 + v22;
    if (v13(v24, 1, v11))
    {
      uint64_t v25 = sub_1005057FC(&qword_1016730B0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
      uint64_t v27 = *(int *)(v11 + 20);
      int v28 = &v23[v27];
      id v29 = &v24[v27];
      uint64_t v30 = *((void *)v29 + 1);
      *(void *)int v28 = *(void *)v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
      swift_retain();
      v31(v23, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_100B9A2D0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 24);
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  if (!v6(v4, 1, v5))
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
    swift_release();
  }
  uint64_t v8 = a1 + *(int *)(a2 + 32);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v8, 1, v5);
  if (!result)
  {
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_100B9A438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakCopyInit();
  swift_unknownObjectWeakCopyInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)(a1 + v7);
  id v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_1005057FC(&qword_1016730B0);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    uint64_t v14 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
    uint64_t v15 = *(int *)(v10 + 20);
    uint64_t v16 = &v8[v15];
    uint64_t v17 = &v9[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    swift_retain();
    v19(v8, 0, 1, v10);
  }
  uint64_t v20 = *(int *)(a3 + 32);
  uint64_t v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  if (v12(v22, 1, v10))
  {
    uint64_t v23 = sub_1005057FC(&qword_1016730B0);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v22, v24);
    uint64_t v25 = *(int *)(v10 + 20);
    uint64_t v26 = &v21[v25];
    uint64_t v27 = &v22[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)uint64_t v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    id v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    swift_retain();
    v29(v21, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100B9A6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakCopyAssign();
  swift_unknownObjectWeakCopyAssign();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_10054BB2C((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v15 = *(int *)(v9 + 20);
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v19 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
      swift_retain();
      v19(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100B9AA6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    uint64_t v20 = sub_1005057FC(&qword_1016730B0);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v34 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v7, v8, v34);
  uint64_t v35 = *(int *)(v9 + 20);
  uint64_t v36 = &v7[v35];
  unint64_t v37 = &v8[v35];
  uint64_t v38 = *((void *)v37 + 1);
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = v38;
  swift_retain();
  swift_release();
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 32);
  uint64_t v22 = (char *)(a1 + v21);
  uint64_t v23 = (char *)(a2 + v21);
  int v24 = v11((char *)(a1 + v21), 1, v9);
  int v25 = v11(v23, 1, v9);
  if (!v24)
  {
    if (!v25)
    {
      uint64_t v39 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 24))(v22, v23, v39);
      uint64_t v40 = *(int *)(v9 + 20);
      uint64_t v41 = &v22[v40];
      char v42 = &v23[v40];
      uint64_t v43 = *((void *)v42 + 1);
      *(void *)uint64_t v41 = *(void *)v42;
      *((void *)v41 + 1) = v43;
      swift_retain();
      swift_release();
      return a1;
    }
    sub_100B9AA6C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v32 = sub_1005057FC(&qword_1016730B0);
    memcpy(v22, v23, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
  uint64_t v27 = *(int *)(v9 + 20);
  uint64_t v28 = &v22[v27];
  id v29 = &v23[v27];
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = *(void *)v29;
  *((void *)v28 + 1) = v30;
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  swift_retain();
  v31(v22, 0, 1, v9);
  return a1;
}

uint64_t sub_100B9AA6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100B9AACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakTakeInit();
  swift_unknownObjectWeakTakeInit();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v9 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_1005057FC(&qword_1016730B0);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
    *(_OWORD *)&v7[*(int *)(v9 + 20)] = *(_OWORD *)&v8[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  if (v11(v16, 1, v9))
  {
    uint64_t v17 = sub_1005057FC(&qword_1016730B0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    *(_OWORD *)&v15[*(int *)(v9 + 20)] = *(_OWORD *)&v16[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_100B9AD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_unknownObjectWeakTakeAssign();
  swift_unknownObjectWeakTakeAssign();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for CRLLayerAnimationDisplayLink.Handler();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
      *(_OWORD *)&v7[*(int *)(v9 + 20)] = *(_OWORD *)&v8[*(int *)(v9 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_100B9AA6C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
LABEL_6:
    uint64_t v15 = sub_1005057FC(&qword_1016730B0);
    memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v24 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v7, v8, v24);
  *(_OWORD *)&v7[*(int *)(v9 + 20)] = *(_OWORD *)&v8[*(int *)(v9 + 20)];
  swift_release();
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 32);
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  int v19 = v11((char *)(a1 + v16), 1, v9);
  int v20 = v11(v18, 1, v9);
  if (!v19)
  {
    if (!v20)
    {
      uint64_t v25 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 40))(v17, v18, v25);
      *(_OWORD *)&v17[*(int *)(v9 + 20)] = *(_OWORD *)&v18[*(int *)(v9 + 20)];
      swift_release();
      return a1;
    }
    sub_100B9AA6C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for CRLLayerAnimationDisplayLink.Handler);
    goto LABEL_12;
  }
  if (v20)
  {
LABEL_12:
    uint64_t v22 = sub_1005057FC(&qword_1016730B0);
    memcpy(v17, v18, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v17, v18, v21);
  *(_OWORD *)&v17[*(int *)(v9 + 20)] = *(_OWORD *)&v18[*(int *)(v9 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  return a1;
}

uint64_t sub_100B9B094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B9B0A8);
}

uint64_t sub_100B9B0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 48);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1005057FC(&qword_1016730B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100B9B15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B9B170);
}

uint64_t sub_100B9B170(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 48) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_1016730B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100B9B21C()
{
  sub_10054C810();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100B9B2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_1016730B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100B9B330(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for CRLBoardItem(0);
    sub_100B9E5C4((unint64_t *)&qword_101676C20, (void (*)(uint64_t))type metadata accessor for CRLBoardItem);
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v17;
    uint64_t v16 = v18;
    uint64_t v2 = v19;
    uint64_t v3 = v20;
    unint64_t v4 = v21;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v9 = (v4 - 1) & v4;
    unint64_t v10 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v11 = v3;
    goto LABEL_29;
  }
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v16 + 8 * v13);
      uint64_t v11 = v3 + 1;
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 2;
      if (v3 + 2 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 3;
      if (v3 + 3 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (v14) {
        goto LABEL_28;
      }
      uint64_t v11 = v3 + 4;
      if (v3 + 4 >= v8) {
        goto LABEL_33;
      }
      unint64_t v14 = *(void *)(v16 + 8 * v11);
      if (v14)
      {
LABEL_28:
        uint64_t v9 = (v14 - 1) & v14;
        unint64_t v10 = __clz(__rbit64(v14)) + (v11 << 6);
LABEL_29:
        id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
        if (v12)
        {
          do
          {
            type metadata accessor for CRLConnectionLineItem();
            if (swift_dynamicCastClass()) {
              break;
            }

            uint64_t v3 = v11;
            unint64_t v4 = v9;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!__CocoaSet.Iterator.next()()) {
              break;
            }
            type metadata accessor for CRLBoardItem(0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v12 = v22;
            swift_unknownObjectRelease();
            uint64_t v11 = v3;
            uint64_t v9 = v4;
          }
          while (v22);
        }
        goto LABEL_33;
      }
      uint64_t v11 = v3 + 5;
      if (v3 + 5 < v8)
      {
        unint64_t v14 = *(void *)(v16 + 8 * v11);
        if (!v14)
        {
          uint64_t v15 = v3 + 6;
          while (v8 != v15)
          {
            unint64_t v14 = *(void *)(v16 + 8 * v15++);
            if (v14)
            {
              uint64_t v11 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_10052E1EC();
    return;
  }
  __break(1u);
}

unint64_t sub_100B9B600(char a1)
{
  unint64_t result = 0xD00000000000001ELL;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000022;
      break;
    case 8:
      unint64_t result = 0x73697370696C6C65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B9B700()
{
  id v0 = [self mainBundle];
  NSString v1 = String._bridgeToObjectiveC()();
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v0 localizedStringForKey:v1 value:v2 table:0];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

unint64_t sub_100B9BADC(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C63726963;
      break;
    case 2:
      unint64_t result = 0x656C676E61697274;
      break;
    case 3:
      unint64_t result = 0x6E6F67796C6F70;
      break;
    case 4:
      unint64_t result = 0x657261757173;
      break;
    case 5:
      unint64_t result = 0x646E6F6D616964;
      break;
    case 7:
      unint64_t result = 0x6C656C6C61726170;
      break;
    case 8:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

id sub_100B9BBFC(char a1, double a2, double a3)
{
  id v3 = 0;
  switch(a1)
  {
    case 1:
      id v5 = [self pathSourceForShapeType:5 naturalSize:a2, a3];
      return v5;
    case 2:
      id v5 = [self pathSourceForShapeType:6 naturalSize:a2 a3];
      return v5;
    case 3:
      id v5 = [self pathSourceWithType:1 scalar:5.0 naturalSize:a2 a3];
      return v5;
    case 4:
      id v5 = [self pathSourceForShapeType:3 naturalSize:a2, a3];
      return v5;
    case 5:
      id v5 = [self pathSourceForShapeType:10 naturalSize:a2, a3];
      return v5;
    case 6:
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      v7.super.super.Class isa = NSNumber.init(integerLiteral:)(982).super.super.isa;
      id v8 = [self sharedLibrary];
      id v9 = [v8 shapeWithID:v7.super.super.isa];

      if (v9) {
        goto LABEL_14;
      }
      sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pathSource(withNaturalSize:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLMiniShapePickerSupport.swift", 101, 2, 108, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
      uint64_t v14 = 108;
      goto LABEL_19;
    case 7:
      sub_10050BF48(0, (unint64_t *)&qword_101684330);
      v7.super.super.Class isa = NSNumber.init(integerLiteral:)(950).super.super.isa;
      id v10 = [self sharedLibrary];
      id v9 = [v10 shapeWithID:v7.super.super.isa];

      if (v9)
      {
LABEL_14:
        id v11 = [v9 bezierPathString];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v12 = String.utf8CString.getter();
        swift_bridgeObjectRelease();
        id v13 = [objc_allocWithZone((Class)CRLBezierPath) initWithCString:v12 + 32];
        swift_release();
        if (v13)
        {
          id v3 = [objc_allocWithZone((Class)CRLBezierPathSource) initWithBezierPath:v13];

          return v3;
        }
      }
      else
      {
        sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"pathSource(withNaturalSize:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLMiniShapePickerSupport.swift", 101, 2, 116, (uint64_t)"invalid nil found when unwrapping value", 39, 2u, (uint64_t)_swiftEmptyArrayStorage);
        uint64_t v14 = 116;
LABEL_19:
        sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"pathSource(withNaturalSize:)", 28, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/CrossPlatformUI/CRLMiniShapePickerSupport.swift", 101, 2, v14);
      }

      return 0;
    case 8:
      return v3;
    default:
      return [objc_allocWithZone((Class)CRLScalarPathSource) initWithType:0 scalar:1 naturalSize:(a2 + a3) * 0.075 continuousCurve:a2 a3];
  }
}

uint64_t sub_100B9C088(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t result = 5;
  switch(v1)
  {
    case 0:
      uint64_t result = 4;
      break;
    case 1:
      return result;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 13;
      break;
    case 4:
      uint64_t result = 3;
      break;
    case 5:
      uint64_t result = 10;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_100B9C124(void *a1@<X8>)
{
  *a1 = &off_101502AF8;
}

unint64_t sub_100B9C134()
{
  return sub_100B9BADC(*v0);
}

id sub_100B9C21C()
{
  return sub_100B9D3E4(type metadata accessor for CRLMiniShapePickerHelper);
}

uint64_t type metadata accessor for CRLMiniShapePickerHelper()
{
  return self;
}

char *sub_100B9C2DC(BOOL a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v13 = (char *)objc_allocWithZone(v6);
  *(void *)&v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = 0;
  *(void *)&v13[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = 0;
  uint64_t v14 = sub_100E04BEC(a1, a2, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a2, a3);
  return v14;
}

char *sub_100B9C3A0(char a1, uint64_t a2, double a3, double a4)
{
  id v9 = (double *)&v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize];
  *id v9 = 0.0;
  v9[1] = 0.0;
  v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_didChangeSize] = 0;
  *(void *)&v4[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_pendingResizeAnimator] = 0;
  uint64_t v10 = OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollTargets;
  id v11 = v4;
  *(void *)&v4[v10] = sub_100A3BE78((uint64_t)_swiftEmptyArrayStorage);
  if (a3 != 0.0 && a4 != 0.0)
  {
    sub_10086134C((uint64_t)&_mh_execute_header, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110, (uint64_t)"One dimension of defaultSize should be 0 to indicate autosizing.", 64, 2u, (uint64_t)_swiftEmptyArrayStorage);
    LOBYTE(v30) = 2;
    uint64_t v28 = "One dimension of defaultSize should be 0 to indicate autosizing.";
    uint64_t v29 = 64;
    sub_1005598CC((uint64_t)_swiftEmptyArrayStorage, (uint64_t)"init(defaultSize:showScrollIndicators:content:)", 47, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/Freeform/Source/iOS/Inspectors/CRLiOSAutoSizingHostingController.swift", 108, 2, 110);
  }
  type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy(0);
  swift_allocObject();
  uint64_t v12 = sub_100DFF428();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  static Published.subscript.setter();
  swift_getKeyPath();
  swift_getKeyPath();
  *(double *)uint64_t v34 = a3;
  *(double *)&v34[1] = a4;
  swift_retain();
  static Published.subscript.setter();
  *(void *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostProxy] = v12;
  sub_100B9E5C4(&qword_1016951E0, (void (*)(uint64_t))type metadata accessor for CRLiOSAutoSizingHostingController.HostProxy);
  swift_retain_n();
  uint64_t v13 = ObservedObject.init(wrappedValue:)();
  uint64_t v15 = v14;
  sub_100ABB15C(a2, (uint64_t)v34);
  v34[8] = v13;
  v34[9] = v15;
  char v35 = 0;
  sub_100522E9C((uint64_t)v34, (uint64_t)v33, &qword_1016951E8);
  uint64_t v16 = (char *)objc_allocWithZone((Class)sub_1005057FC(&qword_1016951F0));
  *(void *)&v16[*(void *)(qword_10169D3E0 + (swift_isaMask & *(void *)v16) + 16)] = 0;
  sub_100522E9C((uint64_t)v33, (uint64_t)v32, &qword_1016951E8);
  uint64_t v17 = UIHostingController.init(rootView:)();
  sub_100522F00((uint64_t)v33, &qword_1016951E8);
  *(void *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_hostingController] = v17;
  uint64_t v18 = (double *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_defaultSize];
  *uint64_t v18 = a3;
  v18[1] = a4;
  *id v9 = a3;
  v9[1] = a4;
  sub_100ABB15C(a2, (uint64_t)v33);
  uint64_t v19 = (double (*)())swift_allocObject();
  long long v20 = v33[1];
  *((_OWORD *)v19 + 1) = v33[0];
  *((_OWORD *)v19 + 2) = v20;
  long long v21 = v33[3];
  *((_OWORD *)v19 + 3) = v33[2];
  *((_OWORD *)v19 + 4) = v21;
  uint64_t v22 = (double (**)())&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_calculatePreliminaryFittingSize];
  *uint64_t v22 = sub_100B9E64C;
  v22[1] = v19;
  id v23 = [objc_allocWithZone((Class)UIScrollView) init];
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v23 setAlwaysBounceHorizontal:0];
  [v23 setAlwaysBounceVertical:0];
  if (a1 == 2) {
    BOOL v24 = a4 == 0.0;
  }
  else {
    BOOL v24 = a1;
  }
  if (a1 == 2) {
    a1 = a3 == 0.0;
  }
  [v23 setShowsVerticalScrollIndicator:v24, v28, v29, v30];
  [v23 setShowsHorizontalScrollIndicator:a1 & 1];
  *(void *)&v11[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_scrollView] = v23;
  id v25 = v23;

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for CRLiOSAutoSizingHostingController();
  uint64_t v26 = (char *)objc_msgSendSuper2(&v31, "initWithNibName:bundle:", 0, 0);
  ObservableObject<>.objectWillChange.getter();
  ObservableObjectPublisher.send()();
  swift_release();
  swift_unknownObjectWeakAssign();
  [v26 setPreferredContentSize:*(double *)&v26[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize], *(double *)&v26[OBJC_IVAR____TtC8Freeform33CRLiOSAutoSizingHostingController_lastLayoutSize + 8]];
  swift_release();

  sub_100B9E560(a2);
  sub_100522F00((uint64_t)v34, &qword_1016951E8);
  return v26;
}

void sub_100B9C8F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (v3)
  {
    id v4 = [v3 changeNotifier];
    if (v4)
    {
      id v5 = v4;
      if (*(void *)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems))
      {
        uint64_t v6 = swift_bridgeObjectRetain();
        NSNumber v7 = (void *)sub_100999830(v6);
        swift_bridgeObjectRelease();
        id v8 = [v7 parentContainerItem];
      }
      else
      {
        id v8 = 0;
      }
      sub_1005057FC(&qword_1016951C8);
      uint64_t v9 = Optional._bridgeToObjectiveC()();

      [v5 addObserver:v1 forChangeSource:v9];
      swift_unknownObjectRelease();
    }
  }
  if (*(void *)(v1 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_100B9B330(v10);
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v1 + v2);
    if (!v13) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(void **)(v1 + v2);
    if (!v13) {
      goto LABEL_13;
    }
  }
  id v14 = [v13 changeNotifier];
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1005057FC(&qword_1016951C0);
    [v15 addObserver:v1 forChangeSource:v12];

    swift_unknownObjectRelease();
  }
LABEL_13:
}

void sub_100B9CA8C(char a1)
{
  uint64_t v2 = v1;
  v21.receiver = v2;
  v21.super_class = (Class)type metadata accessor for CRLiOSMiniShapePickerHostingController();
  [super viewDidDisappear:a1 & 1];
  uint64_t v4 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController;
  id v5 = *(void **)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController];
  if (v5)
  {
    [v5 removeDecorator:v2];
    uint64_t v6 = *(void **)&v2[v4];
    if (v6)
    {
      id v7 = [v6 changeNotifier];
      if (v7)
      {
        id v8 = v7;
        if (*(void *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems])
        {
          uint64_t v9 = swift_bridgeObjectRetain();
          uint64_t v10 = (void *)sub_100999830(v9);
          swift_bridgeObjectRelease();
          id v11 = [v10 parentContainerItem];
        }
        else
        {
          id v11 = 0;
        }
        sub_1005057FC(&qword_1016951C8);
        uint64_t v12 = Optional._bridgeToObjectiveC()();

        [v8 removeObserver:v2 forChangeSource:v12];
        swift_unknownObjectRelease();
      }
    }
  }
  uint64_t v13 = OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems;
  if (*(void *)&v2[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems])
  {
    uint64_t v14 = swift_bridgeObjectRetain();
    sub_100B9B330(v14);
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = *(void **)&v2[v4];
    if (!v17) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = *(void **)&v2[v4];
    if (!v17) {
      goto LABEL_14;
    }
  }
  id v18 = [v17 changeNotifier];
  if (v18)
  {
    uint64_t v19 = v18;
    sub_1005057FC(&qword_1016951C0);
    [v19 removeObserver:v2 forChangeSource:Optional._bridgeToObjectiveC()() v16];

    swift_unknownObjectRelease();
  }
LABEL_14:
  *(void *)&v2[v13] = 0;
  swift_bridgeObjectRelease();
  long long v20 = *(void **)&v2[v4];
  *(void *)&v2[v4] = 0;
}

void sub_100B9CCCC(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (!v4) {
    return;
  }
  uint64_t v5 = v2;
  id v7 = [v4 layerHost];
  if (!v7) {
    return;
  }
  id v8 = v7;
  if ([v7 respondsToSelector:"asiOSCVC"])
  {
    id v36 = [v8 asiOSCVC];
    swift_unknownObjectRelease();
    id v9 = [v36 presentedViewController];
    if (!v9)
    {
LABEL_8:

      return;
    }
    uint64_t v10 = v9;
    type metadata accessor for CRLiOSMiniShapePickerHostingController();
    id v11 = (void *)swift_dynamicCastClass();
    if (!v11 || (uint64_t v12 = v11, ([v11 isBeingDismissed] & 1) != 0))
    {

      goto LABEL_8;
    }
    sub_100522D7C(a2, (uint64_t)&v38);
    type metadata accessor for CRLContainerItem(0);
    if (swift_dynamicCast())
    {
      uint64_t v13 = OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems;
      uint64_t v14 = *(double **)&v37[OBJC_IVAR____TtC8Freeform16CRLContainerItem__cachedOrderedItems];
      if (!v14)
      {
        sub_100846AB0();
        uint64_t v14 = *(double **)&v37[v13];
      }
      if (v14) {
        uint64_t v15 = v14;
      }
      else {
        uint64_t v15 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRetain();

      if (*(void *)(v5 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems))
      {
        uint64_t v16 = swift_bridgeObjectRetain();
        sub_100B9E1F0(v16, (unint64_t)v15);
        uint64_t v18 = v17;
        swift_bridgeObjectRelease();
        if ((v18 & 0xC000000000000001) != 0) {
          uint64_t v19 = __CocoaSet.count.getter();
        }
        else {
          uint64_t v19 = *(void *)(v18 + 16);
        }
        swift_release();
        if (v19)
        {
          [v12 dismissViewControllerAnimated:1 completion:0];

          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_100522D7C(a2, (uint64_t)&v38);
    type metadata accessor for CRLConnectionLineItem();
    if (swift_dynamicCast())
    {

      uint64_t v34 = 0;
      id v35 = v12;
      if (a1 >> 62) {
        goto LABEL_45;
      }
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (uint64_t i = v36; v20; uint64_t i = v36)
      {
        uint64_t v22 = 4;
        uint64_t v23 = 0;
        if ((a1 & 0xC000000000000001) != 0)
        {
LABEL_31:
          BOOL v24 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_33;
        }
        while (1)
        {
          BOOL v24 = (char *)*(id *)(a1 + 8 * v22);
LABEL_33:
          id v25 = v24;
          uint64_t v26 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            break;
          }
          uint64_t v27 = OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details;
          uint64_t v28 = (uint64_t *)(*(void *)&v24[OBJC_IVAR____TtC8Freeform15CRLChangeRecord_details]
                          + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
          swift_beginAccess();
          uint64_t v29 = *v28;
          if (*(void *)(v29 + 16))
          {
            uint64_t v30 = sub_1009563E8();
            if (v31) {
              goto LABEL_38;
            }
          }
          uint64_t v38 = 0;
          uint64_t v39 = 0;
          uint64_t v40 = 0;
          uint64_t v41 = 1;
          sub_100522F00((uint64_t)&v38, (uint64_t *)&unk_1016725E0);
          uint64_t v32 = (uint64_t *)(*(void *)&v25[v27] + OBJC_IVAR____TtC8Freeform14CRLPropertyMap_data);
          swift_beginAccess();
          uint64_t v29 = *v32;
          if (!*(void *)(v29 + 16)) {
            goto LABEL_39;
          }
          uint64_t v30 = sub_1009563E8();
          if (v33)
          {
LABEL_38:
            sub_100522E9C(*(void *)(v29 + 56) + 32 * v30, (uint64_t)&v38, &qword_101672BF0);
            sub_100522F00((uint64_t)&v38, (uint64_t *)&unk_1016725E0);
            [v35 dismissViewControllerAnimated:1 completion:0 v34];
          }
          else
          {
LABEL_39:
            uint64_t v38 = 0;
            uint64_t v39 = 0;
            uint64_t v40 = 0;
            uint64_t v41 = 1;
            sub_100522F00((uint64_t)&v38, (uint64_t *)&unk_1016725E0);
          }

          uint64_t i = v36;
          if (v26 == v20) {
            goto LABEL_46;
          }
          uint64_t v23 = ++v22 - 4;
          if ((a1 & 0xC000000000000001) != 0) {
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_45:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      }
LABEL_46:

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

void sub_100B9D204()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
  if (v1)
  {
    id v2 = [v1 layerHost];
    if (v2)
    {
      id v3 = v2;
      if ([v2 respondsToSelector:"asiOSCVC"])
      {
        id v4 = [v3 asiOSCVC];
        swift_unknownObjectRelease();
        id v7 = [v4 presentedViewController];

        if (v7)
        {
          type metadata accessor for CRLiOSMiniShapePickerHostingController();
          uint64_t v5 = (void *)swift_dynamicCastClass();
          if (v5)
          {
            uint64_t v6 = v5;
            if (([v5 isBeingDismissed] & 1) == 0) {
              [v6 dismissViewControllerAnimated:1 completion:0];
            }
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100B9D38C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController);
}

id sub_100B9D3CC()
{
  return sub_100B9D3E4(type metadata accessor for CRLiOSMiniShapePickerHostingController);
}

id sub_100B9D3E4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for CRLiOSMiniShapePickerHostingController()
{
  return self;
}

double sub_100B9D48C(uint64_t a1)
{
  sub_100ABB15C(a1, (uint64_t)&v6);
  id v1 = objc_allocWithZone((Class)sub_1005057FC((uint64_t *)&unk_1016951F8));
  id v2 = (void *)UIHostingController.init(rootView:)();
  dispatch thunk of UIHostingController.sizeThatFits(in:)();
  double v4 = v3;

  return v4;
}

char *sub_100B9D508(void *a1, uint64_t a2, _OWORD *a3)
{
  long long v5 = a3[1];
  v15[0] = *a3;
  v15[1] = v5;
  long long v6 = a3[3];
  void v15[2] = a3[2];
  v15[3] = v6;
  sub_100ABB15C((uint64_t)v15, (uint64_t)v14);
  id v7 = (char *)objc_allocWithZone((Class)type metadata accessor for CRLiOSMiniShapePickerHostingController());
  *(void *)&v7[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = 0;
  *(void *)&v7[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = 0;
  sub_100ABB15C((uint64_t)v14, (uint64_t)v13);
  id v8 = sub_100B9C3A0(0, (uint64_t)v13, 0.0, 0.0);
  sub_100B9E560((uint64_t)v14);
  *(void *)&v8[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_associatedBoardItems] = a2;
  id v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController];
  *(void *)&v9[OBJC_IVAR____TtC8Freeform38CRLiOSMiniShapePickerHostingController_interactiveCanvasController] = a1;
  id v11 = a1;

  sub_100B9C8F0();
  sub_100B9E560((uint64_t)v15);
  return v9;
}

char *sub_100B9D5FC(void *a1, void *a2, double a3, double a4)
{
  v48[3] = sub_10050BF48(0, (unint64_t *)&unk_1016951D0);
  v48[4] = &off_1015278F8;
  v48[0] = a1;
  id v8 = a1;
  id v9 = [a2 interactiveCanvasController];
  if (!v9) {
    goto LABEL_32;
  }
  id v10 = v9;
  id v11 = [v9 layerHost];
  if (!v11) {
    goto LABEL_31;
  }
  uint64_t v12 = v11;
  if (([v11 respondsToSelector:"asiOSCVC"] & 1) == 0)
  {

    swift_unknownObjectRelease();
LABEL_32:
    objc_super v21 = 0;
    goto LABEL_33;
  }
  id v13 = [v12 asiOSCVC];
  swift_unknownObjectRelease();
  id v14 = [a2 anyConnectionLine];
  id v15 = [v14 connectionLineInfo];

  if (!v15)
  {
LABEL_16:

    goto LABEL_32;
  }
  id v16 = [v10 layoutForInfo:v15];
  if (!v16)
  {
LABEL_15:

    goto LABEL_16;
  }
  uint64_t v17 = v16;
  self;
  uint64_t v18 = (void *)swift_dynamicCastObjCClass();
  if (!v18)
  {

    goto LABEL_15;
  }
  id v19 = [v18 connectedFrom];
  if (!v19)
  {

    goto LABEL_32;
  }
  uint64_t v20 = v19;
  if (![v19 info])
  {

    goto LABEL_32;
  }
  type metadata accessor for CRLBoardItem(0);
  objc_super v21 = (char *)swift_dynamicCastClass();
  if (v21)
  {
    [v10 convertUnscaledToBoundsPoint:a3, a4];
    double v23 = v22;
    double v25 = v24;
    sub_1005498A4((uint64_t)v48, (uint64_t)v44);
    uint64_t v47 = &off_101502AF8;
    double v45 = a3;
    double v46 = a4;
    sub_1005057FC((uint64_t *)&unk_101676C10);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10117DF50;
    *(void *)(inited + 32) = v15;
    *(void *)(inited + 40) = v21;
    *(void *)&v43[0] = inited;
    specialized Array._endMutation()();
    if (*(void *)&v43[0] >> 62)
    {
      id v31 = v15;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v32) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v27 = *(void *)((*(void *)&v43[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v28 = v15;
      swift_unknownObjectRetain();
      if (v27)
      {
LABEL_12:
        sub_100508DCC(*(unint64_t *)&v43[0]);
        uint64_t v30 = v29;
LABEL_22:
        swift_bridgeObjectRelease();
        sub_100ABB15C((uint64_t)v44, (uint64_t)v43);
        id v10 = v10;
        char v33 = sub_100B9D508(v10, (uint64_t)v30, v43);
        uint64_t v34 = qword_10166F850;
        objc_super v21 = v33;
        if (v34 != -1) {
          swift_once();
        }
        double v35 = *(double *)&xmmword_10171B760 * 3.0;
        if (qword_10166F860 != -1) {
          swift_once();
        }
        double v36 = *(double *)&qword_10171B778 + *(double *)&qword_10171B778;
        double v37 = v35 + *(double *)&qword_10171B778 + *(double *)&qword_10171B778;
        if (qword_10166F868 != -1)
        {
          swift_once();
          double v36 = *(double *)&qword_10171B778 + *(double *)&qword_10171B778;
        }
        [v21 setPreferredContentSize:v37 + *(double *)&qword_10171B780 + *(double *)&qword_10171B780, *(double *)&qword_10171B780 + *(double *)&qword_10171B780 + *((double *)&xmmword_10171B760 + 1) * 3.0 + v36];

        [v21 setModalPresentationStyle:7];
        id v38 = [v21 popoverPresentationController];
        if (v38)
        {
          uint64_t v39 = v38;
          id v40 = [v13 canvasView];
          [v39 setSourceView:v40];

          [v39 setSourceRect:v23, v25, 1.0, 1.0];
          uint64_t v41 = v21;
          [v39 setDelegate:v41];

          swift_unknownObjectRelease();
          sub_100B9E560((uint64_t)v44);
          goto LABEL_33;
        }
        sub_100B9E560((uint64_t)v44);

        swift_unknownObjectRelease();
LABEL_31:

        goto LABEL_32;
      }
    }
    uint64_t v30 = &_swiftEmptySetSingleton;
    goto LABEL_22;
  }
  swift_unknownObjectRelease();

LABEL_33:
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v48);
  return v21;
}

void sub_100B9DB50(void *a1)
{
  if (!a1) {
    return;
  }
  id v1 = [a1 interactiveCanvasController];
  if (!v1) {
    return;
  }
  id v9 = v1;
  id v2 = [v1 layerHost];
  if (!v2) {
    goto LABEL_16;
  }
  double v3 = v2;
  if ([v2 respondsToSelector:"asiOSCVC"])
  {
    id v4 = [v3 asiOSCVC];
    swift_unknownObjectRelease();
    id v5 = [v4 presentedViewController];
    if (v5)
    {
      id v8 = v5;
      type metadata accessor for CRLiOSMiniShapePickerHostingController();
      long long v6 = (void *)swift_dynamicCastClass();
      if (v6)
      {
        if (([v6 isBeingDismissed] & 1) == 0) {
          [v4 dismissViewControllerAnimated:1 completion:0];
        }

        id v7 = v8;
        goto LABEL_17;
      }
    }
LABEL_16:
    id v7 = v9;
LABEL_17:

    return;
  }

  swift_unknownObjectRelease();
}

void sub_100B9DCB4(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = a3;
  int64_t v6 = 0;
  uint64_t v33 = 0;
  uint64_t v34 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v35 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v36 = a4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v37 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_21;
    }
    int64_t v12 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_50;
    }
    if (v12 >= v35)
    {
LABEL_47:
      swift_retain();
      sub_10052BE64(a1, a2, v33, v5);
      return;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v12);
    ++v6;
    if (!v13)
    {
      int64_t v6 = v12 + 1;
      if (v12 + 1 >= v35) {
        goto LABEL_47;
      }
      unint64_t v13 = *(void *)(v34 + 8 * v6);
      if (!v13)
      {
        int64_t v6 = v12 + 2;
        if (v12 + 2 >= v35) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v34 + 8 * v6);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_21:
    id v15 = *(void **)(*(void *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      id v29 = v15;
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      if (!v16)
      {
LABEL_45:

        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v16 = *(void *)(v36 + 16);
      id v17 = v15;
      swift_bridgeObjectRetain();
      if (!v16) {
        goto LABEL_45;
      }
    }
    int64_t v38 = v6;
    if (v37) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(a4 + 32);
    }
    id v19 = v18;
    type metadata accessor for CRLBoardItem(0);
    char v20 = static NSObject.== infix(_:_:)();

    if (v20)
    {

      swift_bridgeObjectRelease();
      int64_t v6 = v38;
    }
    else
    {
      if (v16 != 1)
      {
        if (v37)
        {
          uint64_t v21 = 1;
          while (1)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v22 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              break;
            }
            char v23 = static NSObject.== infix(_:_:)();
            swift_unknownObjectRelease();
            if (v23) {
              goto LABEL_42;
            }
            ++v21;
            if (v22 == v16) {
              goto LABEL_37;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v24 = 5;
          while (1)
          {
            uint64_t v25 = v24 - 3;
            if (__OFADD__(v24 - 4, 1)) {
              break;
            }
            id v26 = *(id *)(a4 + 8 * v24);
            char v27 = static NSObject.== infix(_:_:)();

            if (v27)
            {
LABEL_42:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              int64_t v6 = v38;
              goto LABEL_5;
            }
            ++v24;
            if (v25 == v16)
            {
LABEL_37:

              swift_bridgeObjectRelease();
              uint64_t v5 = a3;
              goto LABEL_38;
            }
          }
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }

      swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v38;
LABEL_39:
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v33++, 1)) {
        goto LABEL_51;
      }
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v35) {
    goto LABEL_47;
  }
  unint64_t v13 = *(void *)(v34 + 8 * v14);
  if (v13)
  {
    int64_t v6 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v6 >= v35) {
      goto LABEL_47;
    }
    unint64_t v13 = *(void *)(v34 + 8 * v6);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_100B9E024(uint64_t a1, unint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_100B9DCB4((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_100B9DCB4((unint64_t *)v13, v7, a1, a2);
    uint64_t v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

void sub_100B9E1F0(uint64_t a1, unint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_100B9E024(a1, a2);
    return;
  }
  swift_bridgeObjectRetain();
  __CocoaSet.makeIterator()();
  if (!__CocoaSet.Iterator.next()())
  {
LABEL_43:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  type metadata accessor for CRLBoardItem(0);
  uint64_t v3 = a2 & 0xFFFFFFFFFFFFFF8;
  unint64_t v26 = a2 & 0xC000000000000001;
  while (1)
  {
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (!v10) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = *(void *)(v3 + 16);
      swift_bridgeObjectRetain();
      if (!v10) {
        goto LABEL_15;
      }
    }
    if (v26) {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v11 = *(id *)(a2 + 32);
    }
    uint64_t v12 = v11;
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
      swift_bridgeObjectRelease();
LABEL_38:

      goto LABEL_7;
    }
    if (v10 != 1) {
      break;
    }
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    unint64_t v14 = *((void *)&_swiftEmptySetSingleton + 2);
    if (*((void *)&_swiftEmptySetSingleton + 3) <= v14) {
      sub_100CBF18C(v14 + 1);
    }
    Swift::Int v4 = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
    char v5 = (char *)&_swiftEmptySetSingleton + 56;
    uint64_t v6 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
    unint64_t v7 = v4 & ~v6;
    unint64_t v8 = v7 >> 6;
    if (((-1 << v7) & ~*((void *)&_swiftEmptySetSingleton + (v7 >> 6) + 7)) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*((void *)&_swiftEmptySetSingleton + (v7 >> 6) + 7))) | v7 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v15 = 0;
      unint64_t v16 = (unint64_t)(63 - v6) >> 6;
      do
      {
        if (++v8 == v16 && (v15 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v17 = v8 == v16;
        if (v8 == v16) {
          unint64_t v8 = 0;
        }
        v15 |= v17;
        uint64_t v18 = *(void *)&v5[8 * v8];
      }
      while (v18 == -1);
      unint64_t v9 = __clz(__rbit64(~v18)) + (v8 << 6);
    }
    *(void *)&v5[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v9) = v27;
    ++*((void *)&_swiftEmptySetSingleton + 2);
LABEL_7:
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_43;
    }
  }
  if (v26)
  {
    uint64_t v19 = 1;
    while (1)
    {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v20 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      char v21 = static NSObject.== infix(_:_:)();
      swift_unknownObjectRelease();
      if (v21) {
        goto LABEL_37;
      }
      ++v19;
      if (v20 == v10) {
        goto LABEL_36;
      }
    }
LABEL_44:
    __break(1u);
  }
  else
  {
    uint64_t v22 = 5;
    while (1)
    {
      uint64_t v23 = v22 - 3;
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      id v24 = *(id *)(a2 + 8 * v22);
      char v25 = static NSObject.== infix(_:_:)();

      if (v25)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        uint64_t v3 = a2 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_38;
      }
      ++v22;
      if (v23 == v10)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        uint64_t v3 = a2 & 0xFFFFFFFFFFFFFF8;
        goto LABEL_16;
      }
    }
  }
  __break(1u);
}

uint64_t sub_100B9E560(uint64_t a1)
{
  return a1;
}

uint64_t sub_100B9E5C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B9E60C()
{
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0(v0 + 16);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

double sub_100B9E64C()
{
  return sub_100B9D48C(v0 + 16);
}

unsigned char *storeEnumTagSinglePayload for CRLMiniShapePickerShapeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B9E720);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLMiniShapePickerShapeType()
{
  return &type metadata for CRLMiniShapePickerShapeType;
}

unint64_t sub_100B9E75C()
{
  unint64_t result = qword_101695208;
  if (!qword_101695208)
  {
    sub_100522D34(&qword_101695210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695208);
  }
  return result;
}

unint64_t sub_100B9E7BC()
{
  unint64_t result = qword_101695218;
  if (!qword_101695218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695218);
  }
  return result;
}

uint64_t sub_100B9E810(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((URL.isFileURL.getter() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
LABEL_6:
    char v12 = sub_100B9ECC4();
    goto LABEL_7;
  }
  HIBYTE(v14) = 0;
  URL.path.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v10 = [v2 fileExistsAtPath:v9 isDirectory:(char *)&v14 + 7];

  char v11 = HIBYTE(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if (!v10 || (v11 & 1) != 0) {
    goto LABEL_6;
  }
  char v12 = 1;
LABEL_7:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v12 & 1;
}

uint64_t sub_100B9E9B8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v4 = __chkstk_darwin(v1, v3).n128_u64[0];
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = 0;
  id v7 = [v0 URLForDirectory:5 inDomain:1 appropriateForURL:0 create:1 error:&v13 v4];
  id v8 = v13;
  if (v7)
  {
    NSString v9 = v7;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v10 = v8;

    URL.appendingPathComponent(_:isDirectory:)();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v6, v1);
  }
  else
  {
    id v12 = v13;
    _convertNSErrorToError(_:)();

    return swift_willThrow();
  }
}

uint64_t sub_100B9ECC4()
{
  uint64_t v0 = type metadata accessor for URLResourceValues();
  uint64_t v36 = *(void *)(v0 - 8);
  uint64_t v37 = v0;
  __chkstk_darwin(v0, v1);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1005057FC((uint64_t *)&unk_101676160);
  __chkstk_darwin(v4 - 8, v5);
  id v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v38 - 8);
  __chkstk_darwin(v38, v9);
  char v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v13);
  char v15 = (char *)&v33 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v33 - v18;
  sub_1005057FC(&qword_10167BF20);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSURLContentTypeKey;
  char v21 = NSURLContentTypeKey;
  sub_10050858C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  uint64_t v34 = v15;
  int64_t v35 = v11;
  swift_bridgeObjectRelease();
  URLResourceValues.contentType.getter();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v3, v37);
  uint64_t v22 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v38) == 1)
  {
    sub_100B9F140((uint64_t)v7);
LABEL_3:
    char v23 = 0;
    return v23 & 1;
  }
  uint64_t v25 = v8;
  unint64_t v26 = v19;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v19, v7, v22);
  URL.pathExtension.getter();
  Swift::String v27 = String.lowercased()();
  swift_bridgeObjectRelease();
  if (v27._countAndFlagsBits == 7368801 && v27._object == (void *)0xE300000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v19, v22);
    goto LABEL_3;
  }
  char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_9;
  }
  id v29 = v34;
  static UTType.bundle.getter();
  char v30 = UTType.conforms(to:)();
  id v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v29, v22);
  uint64_t v32 = v35;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v35, v26, v22);
  if (v30)
  {
    v31(v32, v22);
    v31(v26, v22);
    char v23 = 1;
  }
  else
  {
    static UTType.package.getter();
    char v23 = UTType.conforms(to:)();
    v31(v29, v22);
    v31(v32, v22);
    v31(v26, v22);
  }
  return v23 & 1;
}

uint64_t sub_100B9F140(uint64_t a1)
{
  uint64_t v2 = sub_1005057FC((uint64_t *)&unk_101676160);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_100B9F2A8(void *a1, void *a2)
{
  *(void *)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = 0;
  uint64_t v3 = (uint64_t *)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage];
  uint64_t v4 = self;
  uint64_t v5 = v2;
  id v6 = [v4 mainBundle];
  NSString v7 = String._bridgeToObjectiveC()();
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 localizedStringForKey:v7 value:v8 table:0];

  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  *uint64_t v3 = v10;
  v3[1] = v12;
  uint64_t v13 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage];
  id v14 = [v4 mainBundle];
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v14 localizedStringForKey:v15 value:v16 table:0];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *uint64_t v13 = v18;
  v13[1] = v20;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo] = a1;
  *(void *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer] = a2;
  id v21 = a1;
  id v22 = a2;
  if (sub_1007C0E1C())
  {
    uint64_t v18 = *v3;
    uint64_t v20 = v3[1];
  }
  swift_bridgeObjectRetain();
  char v23 = (uint64_t *)&v5[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_summary];
  *char v23 = v18;
  v23[1] = v20;

  v38.receiver = v5;
  v38.super_class = (Class)type metadata accessor for CRLiOSPrintOptionsViewController();
  id v24 = [super initWithNibName:0 bundle:0];
  sub_1007C0E1C();
  sub_1007C0F7C();
  sub_100B9F63C(v24, (uint64_t)v37);
  id v25 = objc_allocWithZone((Class)sub_1005057FC(&qword_101695388));
  uint64_t v26 = UIHostingController.init(rootView:)();
  Swift::String v27 = *(void **)&v24[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController];
  *(void *)&v24[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = v26;

  char v28 = v24;
  id v29 = [v4 mainBundle];
  NSString v30 = String._bridgeToObjectiveC()();
  NSString v31 = String._bridgeToObjectiveC()();
  id v32 = [v29 localizedStringForKey:v30 value:v31 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v28 setTitle:v33];

  return v28;
}

void sub_100B9F63C(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  NSString v6 = String._bridgeToObjectiveC()();
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 localizedStringForKey:v6 value:v7 table:0];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v11;
  id v12 = [v4 mainBundle];
  NSString v13 = String._bridgeToObjectiveC()();
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 localizedStringForKey:v13 value:v14 table:0];

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;

  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v18;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  State.init(wrappedValue:)();
  *(unsigned char *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  State.init(wrappedValue:)();

  *(unsigned char *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v20;
}

void sub_100B9F868()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v2 - 8, v3);
  v47.receiver = v0;
  v47.super_class = (Class)type metadata accessor for CRLiOSPrintOptionsViewController();
  [super viewDidLoad];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v5 view];
    if (v6)
    {
      NSString v7 = v6;
      [v6 setTranslatesAutoresizingMaskIntoConstraints:0];

      static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
      dispatch thunk of UIHostingController.sizingOptions.setter();
      [v0 addChildViewController:v5];
      [v5 didMoveToParentViewController:v0];
      id v8 = [v0 view];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v5 view];
        if (v10)
        {
          uint64_t v11 = v10;
          [v9 addSubview:v10];

          sub_1005057FC((uint64_t *)&unk_101676C10);
          uint64_t v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = xmmword_10117FBE0;
          id v13 = [v1 view];
          if (v13)
          {
            NSString v14 = v13;
            id v15 = [v13 leadingAnchor];

            id v16 = [v5 view];
            if (v16)
            {
              uint64_t v17 = v16;
              id v18 = [v16 safeAreaLayoutGuide];

              id v19 = [v18 leadingAnchor];
              id v20 = [v15 constraintEqualToAnchor:v19 constant:-10.0];

              *(void *)(v12 + 32) = v20;
              id v21 = [v1 view];
              if (v21)
              {
                id v22 = v21;
                id v23 = [v21 trailingAnchor];

                id v24 = [v5 view];
                if (v24)
                {
                  id v25 = v24;
                  id v26 = [v24 safeAreaLayoutGuide];

                  id v27 = [v26 trailingAnchor];
                  id v28 = [v23 constraintEqualToAnchor:v27 constant:10.0];

                  *(void *)(v12 + 40) = v28;
                  id v29 = [v1 view];
                  if (v29)
                  {
                    NSString v30 = v29;
                    id v31 = [v29 topAnchor];

                    id v32 = [v5 view];
                    if (v32)
                    {
                      NSString v33 = v32;
                      id v34 = [v32 safeAreaLayoutGuide];

                      id v35 = [v34 topAnchor];
                      id v36 = [v31 constraintEqualToAnchor:v35 constant:-30.0];

                      *(void *)(v12 + 48) = v36;
                      id v37 = [v1 view];
                      if (v37)
                      {
                        objc_super v38 = v37;
                        id v39 = [v37 bottomAnchor];

                        id v40 = [v5 view];
                        if (v40)
                        {
                          uint64_t v41 = v40;
                          char v42 = self;
                          id v43 = [v41 safeAreaLayoutGuide];

                          id v44 = [v43 bottomAnchor];
                          id v45 = [v39 constraintEqualToAnchor:v44 constant:10.0];

                          *(void *)(v12 + 56) = v45;
                          specialized Array._endMutation()();
                          sub_10053BBC0();
                          Class isa = Array._bridgeToObjectiveC()().super.isa;
                          swift_bridgeObjectRelease();
                          [v42 activateConstraints:isa];

                          return;
                        }
LABEL_25:
                        __break(1u);
                        return;
                      }
LABEL_24:
                      __break(1u);
                      goto LABEL_25;
                    }
LABEL_23:
                    __break(1u);
                    goto LABEL_24;
                  }
LABEL_22:
                  __break(1u);
                  goto LABEL_23;
                }
LABEL_21:
                __break(1u);
                goto LABEL_22;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
}

void sub_100B9FDB8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo;
  id v5 = *(id *)&v1[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo];
  sub_1007BEF74(a1);

  uint64_t v6 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer;
  NSString v7 = *(unsigned char **)&v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer];
  v7[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenes] = a1;
  id v8 = &v7[OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter];
  swift_beginAccess();
  v8[49] = a1;
  uint64_t v9 = v7;
  [v9 paperRect];
  Class isa = CGRect._bridgeToObjectiveC()().super.isa;
  NSString v11 = String._bridgeToObjectiveC()();
  [v9 setValue:isa forKey:v11];

  Class v12 = CGRect._bridgeToObjectiveC()().super.isa;
  NSString v13 = String._bridgeToObjectiveC()();
  [v9 setValue:v12 forKey:v13];

  if (sub_1007C0E1C())
  {
    NSString v14 = *(void **)&v2[v6];
    id v15 = *(id *)&v2[v4];
    id v16 = v14;
    id v17 = sub_100A06D6C();

    [v15 setOrientation:v17];
  }
  NSString v18 = String._bridgeToObjectiveC()();
  [v2 willChangeValueForKey:v18];

  id v19 = &OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage;
  if ((a1 & 1) == 0) {
    id v19 = &OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage;
  }
  uint64_t v20 = *(void *)&v2[*v19];
  uint64_t v21 = swift_bridgeObjectRetain();
  id v22 = &v2[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_summary];
  *(void *)id v22 = v20;
  *((void *)v22 + 1) = v21;
  swift_bridgeObjectRelease();
  NSString v23 = String._bridgeToObjectiveC()();
  [v2 didChangeValueForKey:v23];

  id v24 = [self defaultCenter];
  NSString v25 = String._bridgeToObjectiveC()();
  [v24 postNotificationName:v25 object:v2];
}

void sub_100BA0094(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo;
  id v5 = *(id *)(v1 + OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printInfo);
  sub_1007C0390(a1);

  uint64_t v6 = OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer;
  uint64_t v7 = *(void *)(v2 + OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printRenderer);
  *(unsigned char *)(v7 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_printScenesUsingDeviceSize) = a1;
  uint64_t v8 = v7 + OBJC_IVAR____TtC8Freeform23CRLiOSPrintPageRenderer_exporter;
  swift_beginAccess();
  *(unsigned char *)(v8 + 50) = a1;
  if (sub_1007C0E1C())
  {
    uint64_t v9 = *(void **)(v2 + v6);
    id v10 = *(id *)(v2 + v4);
    id v11 = v9;
    id v12 = sub_100A06D6C();

    [v10 setOrientation:v12];
  }
  id v13 = [self defaultCenter];
  NSString v14 = String._bridgeToObjectiveC()();
  [v13 postNotificationName:v14 object:v2];
}

id sub_100BA020C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPrintOptionsViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPrintOptionsViewController()
{
  return self;
}

uint64_t destroy for CRLiOSPrintView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t initializeWithCopy for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectWeakCopyInit();
  return a1;
}

uint64_t assignWithCopy for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

_OWORD *initializeWithTake for CRLiOSPrintView(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  long long v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

uint64_t assignWithTake for CRLiOSPrintView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t getEnumTagSinglePayload for CRLiOSPrintView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CRLiOSPrintView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLiOSPrintView()
{
  return &type metadata for CRLiOSPrintView;
}

uint64_t sub_100BA060C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BA0628@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v5 = sub_1005057FC(&qword_1016952E8);
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5, v6);
  uint64_t v61 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v60 = (char *)v59 - v10;
  uint64_t v11 = sub_1005057FC(&qword_1016952F0);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v62 = (uint64_t)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v15);
  id v17 = (char *)v59 - v16;
  uint64_t v18 = sub_1005057FC(&qword_1016952F8);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v20);
  id v22 = (char *)v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v24);
  id v26 = (char *)v59 - v25;
  __chkstk_darwin(v27, v28);
  NSString v30 = (char *)v59 - v29;
  uint64_t v66 = a1;
  uint64_t v31 = sub_1005057FC(&qword_101695300);
  sub_100523288(&qword_101695308, &qword_101695300);
  v59[1] = v31;
  Section<>.init(content:)();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v30, v26, v18);
  uint64_t v32 = *(void *)(a1 + 8);
  LOBYTE(v67) = *(unsigned char *)a1;
  uint64_t v68 = v32;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  if (v71 == 1)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v33);
    uint64_t v34 = *(void *)(a1 + 24);
    LOBYTE(v67) = *(unsigned char *)(a1 + 16);
    uint64_t v68 = v34;
    State.wrappedValue.getter();
    uint64_t v35 = 56;
    if (v71) {
      uint64_t v35 = 40;
    }
    uint64_t v36 = 48;
    if (v71) {
      uint64_t v36 = 32;
    }
    id v37 = *(void **)(a1 + v35);
    uint64_t v38 = *(void *)(a1 + v36);
    swift_bridgeObjectRetain();
    v39._countAndFlagsBits = v38;
    v39._object = v37;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v39);
    swift_bridgeObjectRelease();
    v40._countAndFlagsBits = 0;
    v40._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v40);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v67 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v68 = v41;
    char v69 = v42 & 1;
    uint64_t v70 = v43;
    __chkstk_darwin(v67, v41);
    id v44 = v61;
    Section<>.init(footer:content:)();
    uint64_t v45 = v63;
    double v46 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    objc_super v47 = v60;
    uint64_t v48 = v44;
    uint64_t v49 = v64;
    v46(v60, v48, v64);
    v46(v17, v47, v49);
    uint64_t v50 = 0;
    uint64_t v51 = v49;
    uint64_t v52 = v45;
  }
  else
  {
    uint64_t v50 = 1;
    uint64_t v52 = v63;
    uint64_t v51 = v64;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v17, v50, 1, v51);
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v53(v22, v30, v18);
  uint64_t v54 = v62;
  sub_100522E9C((uint64_t)v17, v62, &qword_1016952F0);
  unint64_t v55 = v65;
  v53(v65, v22, v18);
  uint64_t v56 = sub_1005057FC(&qword_101695318);
  sub_100522E9C(v54, (uint64_t)&v55[*(int *)(v56 + 48)], &qword_1016952F0);
  sub_100522F00((uint64_t)v17, &qword_1016952F0);
  id v57 = *(void (**)(char *, uint64_t))(v19 + 8);
  v57(v30, v18);
  sub_100522F00(v54, &qword_1016952F0);
  return ((uint64_t (*)(char *, uint64_t))v57)(v22, v18);
}

uint64_t sub_100BA0BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101695320);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v27 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v27 - v18;
  sub_100BA2390(a1, (uint64_t)v31);
  uint64_t v20 = swift_allocObject();
  sub_100BA23CC(v31, (_OWORD *)(v20 + 16));
  uint64_t v30 = a1;
  sub_1005057FC(&qword_101695328);
  sub_100523288(&qword_101695330, &qword_101695328);
  Button.init(action:label:)();
  sub_100BA2390(a1, (uint64_t)v31);
  uint64_t v21 = swift_allocObject();
  sub_100BA23CC(v31, (_OWORD *)(v21 + 16));
  uint64_t v29 = a1;
  Button.init(action:label:)();
  id v22 = *(void (**)(void, void, void))(v4 + 16);
  v22(v11, v19, v3);
  v22(v7, v15, v3);
  uint64_t v23 = v28;
  v22(v28, v11, v3);
  uint64_t v24 = sub_1005057FC(&qword_101695338);
  v22(v23 + *(int *)(v24 + 48), v7, v3);
  uint64_t v25 = *(void (**)(void, void))(v4 + 8);
  v25(v15, v3);
  v25(v19, v3);
  v25(v7, v3);
  return ((uint64_t (*)(char *, uint64_t))v25)(v11, v3);
}

void sub_100BA0ED0()
{
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100B9FDB8(0);
  }
}

uint64_t sub_100BA0F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101695348);
  __chkstk_darwin(v3 - 8, v4);
  Swift::String v40 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v37[-v8];
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v42 = v14;
  uint64_t v43 = v16;
  sub_10052E310();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v42 = static Color.primary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v24 = v23;
  int v38 = v25;
  uint64_t v27 = v26;
  sub_1006A7D28(v17, v19, v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v39 + 8);
  LOBYTE(v42) = *(unsigned char *)v39;
  uint64_t v43 = v28;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  if (v41)
  {
    uint64_t v29 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
  }
  else
  {
    uint64_t v30 = Image.init(systemName:)();
    uint64_t v31 = static Color.accentColor.getter();
    uint64_t v42 = v30;
    uint64_t v43 = v31;
    sub_1005057FC(&qword_101695358);
    sub_100BA2494();
    View.bold(_:)();
    swift_release();
    swift_release();
    uint64_t v32 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 0, 1, v32);
  }
  char v33 = v38 & 1;
  uint64_t v34 = v40;
  sub_100522E9C((uint64_t)v9, (uint64_t)v40, (uint64_t *)&unk_101695348);
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v24;
  *(unsigned char *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v35 = sub_1005057FC(&qword_101695380);
  sub_100522E9C((uint64_t)v34, a2 + *(int *)(v35 + 64), (uint64_t *)&unk_101695348);
  sub_10073F0E0(v22, v24, v33);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101695348);
  sub_100522F00((uint64_t)v34, (uint64_t *)&unk_101695348);
  sub_1006A7D28(v22, v24, v33);
  return swift_bridgeObjectRelease();
}

void sub_100BA12F4()
{
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100B9FDB8(1);
  }
}

uint64_t sub_100BA136C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101695348);
  __chkstk_darwin(v3 - 8, v4);
  Swift::String v40 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v37[-v8];
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v42 = v14;
  uint64_t v43 = v16;
  sub_10052E310();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v42 = static Color.primary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v24 = v23;
  int v38 = v25;
  uint64_t v27 = v26;
  sub_1006A7D28(v17, v19, v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v39 + 8);
  LOBYTE(v42) = *(unsigned char *)v39;
  uint64_t v43 = v28;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  if (v41 == 1)
  {
    uint64_t v29 = Image.init(systemName:)();
    uint64_t v30 = static Color.accentColor.getter();
    uint64_t v42 = v29;
    uint64_t v43 = v30;
    sub_1005057FC(&qword_101695358);
    sub_100BA2494();
    View.bold(_:)();
    swift_release();
    swift_release();
    uint64_t v31 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 1, 1, v32);
  }
  char v33 = v38 & 1;
  uint64_t v34 = v40;
  sub_100522E9C((uint64_t)v9, (uint64_t)v40, (uint64_t *)&unk_101695348);
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v24;
  *(unsigned char *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v35 = sub_1005057FC(&qword_101695380);
  sub_100522E9C((uint64_t)v34, a2 + *(int *)(v35 + 64), (uint64_t *)&unk_101695348);
  sub_10073F0E0(v22, v24, v33);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101695348);
  sub_100522F00((uint64_t)v34, (uint64_t *)&unk_101695348);
  sub_1006A7D28(v22, v24, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BA1720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = sub_1005057FC(&qword_101695320);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v9);
  NSString v11 = (char *)&v27 - v10;
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v27 - v18;
  sub_100BA2390(a1, (uint64_t)v31);
  uint64_t v20 = swift_allocObject();
  sub_100BA23CC(v31, (_OWORD *)(v20 + 16));
  uint64_t v30 = a1;
  sub_1005057FC(&qword_101695328);
  sub_100523288(&qword_101695330, &qword_101695328);
  Button.init(action:label:)();
  sub_100BA2390(a1, (uint64_t)v31);
  uint64_t v21 = swift_allocObject();
  sub_100BA23CC(v31, (_OWORD *)(v21 + 16));
  uint64_t v29 = a1;
  Button.init(action:label:)();
  uint64_t v22 = *(void (**)(void, void, void))(v4 + 16);
  v22(v11, v19, v3);
  v22(v7, v15, v3);
  uint64_t v23 = v28;
  v22(v28, v11, v3);
  uint64_t v24 = sub_1005057FC(&qword_101695338);
  v22(v23 + *(int *)(v24 + 48), v7, v3);
  int v25 = *(void (**)(void, void))(v4 + 8);
  v25(v15, v3);
  v25(v19, v3);
  v25(v7, v3);
  return ((uint64_t (*)(char *, uint64_t))v25)(v11, v3);
}

void sub_100BA1A3C()
{
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100BA0094(1);
  }
}

uint64_t sub_100BA1AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101695348);
  __chkstk_darwin(v3 - 8, v4);
  Swift::String v40 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v37[-v8];
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v42 = v14;
  uint64_t v43 = v16;
  sub_10052E310();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v42 = static Color.primary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v24 = v23;
  int v38 = v25;
  uint64_t v27 = v26;
  sub_1006A7D28(v17, v19, v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v39 + 24);
  LOBYTE(v42) = *(unsigned char *)(v39 + 16);
  uint64_t v43 = v28;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  if (v41 == 1)
  {
    uint64_t v29 = Image.init(systemName:)();
    uint64_t v30 = static Color.accentColor.getter();
    uint64_t v42 = v29;
    uint64_t v43 = v30;
    sub_1005057FC(&qword_101695358);
    sub_100BA2494();
    View.bold(_:)();
    swift_release();
    swift_release();
    uint64_t v31 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 0, 1, v31);
  }
  else
  {
    uint64_t v32 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 1, 1, v32);
  }
  char v33 = v38 & 1;
  uint64_t v34 = v40;
  sub_100522E9C((uint64_t)v9, (uint64_t)v40, (uint64_t *)&unk_101695348);
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v24;
  *(unsigned char *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v35 = sub_1005057FC(&qword_101695380);
  sub_100522E9C((uint64_t)v34, a2 + *(int *)(v35 + 64), (uint64_t *)&unk_101695348);
  sub_10073F0E0(v22, v24, v33);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101695348);
  sub_100522F00((uint64_t)v34, (uint64_t *)&unk_101695348);
  sub_1006A7D28(v22, v24, v33);
  return swift_bridgeObjectRelease();
}

void sub_100BA1E70()
{
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.setter();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100BA0094(0);
  }
}

uint64_t sub_100BA1EE4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = static VerticalAlignment.center.getter();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  sub_1005057FC(&qword_101695340);
  return a2(a1);
}

uint64_t sub_100BA1F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v3 = sub_1005057FC((uint64_t *)&unk_101695348);
  __chkstk_darwin(v3 - 8, v4);
  Swift::String v40 = &v37[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6, v7);
  uint64_t v9 = &v37[-v8];
  id v10 = [self mainBundle];
  NSString v11 = String._bridgeToObjectiveC()();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v10 localizedStringForKey:v11 value:v12 table:0];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  uint64_t v42 = v14;
  uint64_t v43 = v16;
  sub_10052E310();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v42 = static Color.primary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  uint64_t v24 = v23;
  int v38 = v25;
  uint64_t v27 = v26;
  sub_1006A7D28(v17, v19, v21);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v39 + 24);
  LOBYTE(v42) = *(unsigned char *)(v39 + 16);
  uint64_t v43 = v28;
  sub_1005057FC(&qword_101695310);
  State.wrappedValue.getter();
  if (v41)
  {
    uint64_t v29 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
  }
  else
  {
    uint64_t v30 = Image.init(systemName:)();
    uint64_t v31 = static Color.accentColor.getter();
    uint64_t v42 = v30;
    uint64_t v43 = v31;
    sub_1005057FC(&qword_101695358);
    sub_100BA2494();
    View.bold(_:)();
    swift_release();
    swift_release();
    uint64_t v32 = sub_1005057FC(&qword_101695378);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v9, 0, 1, v32);
  }
  char v33 = v38 & 1;
  uint64_t v34 = v40;
  sub_100522E9C((uint64_t)v9, (uint64_t)v40, (uint64_t *)&unk_101695348);
  *(void *)a2 = v22;
  *(void *)(a2 + 8) = v24;
  *(unsigned char *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v35 = sub_1005057FC(&qword_101695380);
  sub_100522E9C((uint64_t)v34, a2 + *(int *)(v35 + 64), (uint64_t *)&unk_101695348);
  sub_10073F0E0(v22, v24, v33);
  swift_bridgeObjectRetain();
  sub_100522F00((uint64_t)v9, (uint64_t *)&unk_101695348);
  sub_100522F00((uint64_t)v34, (uint64_t *)&unk_101695348);
  sub_1006A7D28(v22, v24, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BA22E4()
{
  return List<>.init(content:)();
}

uint64_t sub_100BA2378@<X0>(char *a1@<X8>)
{
  return sub_100BA0628(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BA2380@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA0BB4(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BA2388@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA1720(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BA2390(uint64_t a1, uint64_t a2)
{
  return a2;
}

_OWORD *sub_100BA23CC(_OWORD *a1, _OWORD *a2)
{
  *a2 = *a1;
  a2[1] = a1[1];
  a2[2] = a1[2];
  a2[3] = a1[3];
  swift_unknownObjectWeakTakeInit();
  return a2;
}

void sub_100BA2420()
{
}

uint64_t sub_100BA2428@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA1EE4(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100BA1AB4, a1);
}

void sub_100BA245C()
{
}

uint64_t sub_100BA2464@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA1EE4(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100BA1F44, a1);
}

unint64_t sub_100BA2494()
{
  unint64_t result = qword_101695360;
  if (!qword_101695360)
  {
    sub_100522D34(&qword_101695358);
    sub_100523288(&qword_101695368, &qword_101695370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695360);
  }
  return result;
}

void sub_100BA2538()
{
}

uint64_t sub_100BA2540@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA1EE4(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100BA0F44, a1);
}

uint64_t sub_100BA2574()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_100BA25CC()
{
}

uint64_t sub_100BA25D4@<X0>(uint64_t a1@<X8>)
{
  return sub_100BA1EE4(*(void *)(v1 + 16), (uint64_t (*)(uint64_t))sub_100BA136C, a1);
}

void sub_100BA2604()
{
  *(void *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_hostingController] = 0;
  uint64_t v1 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printScenesSummaryMessage];
  unint64_t v2 = self;
  id v3 = [v2 mainBundle];
  NSString v4 = String._bridgeToObjectiveC()();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 localizedStringForKey:v4 value:v5 table:0];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  *uint64_t v1 = v7;
  v1[1] = v9;
  id v10 = (uint64_t *)&v0[OBJC_IVAR____TtC8Freeform32CRLiOSPrintOptionsViewController_printBoardSummaryMessage];
  id v11 = [v2 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v16;

  *id v10 = v15;
  v10[1] = v17;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100BA2800()
{
  return sub_100523288(&qword_101695390, &qword_101695398);
}

void sub_100BA2A08()
{
  if (qword_10166F9C0 != -1) {
    swift_once();
  }
  id v1 = [objc_allocWithZone((Class)UIView) initWithFrame:*(double *)&qword_1016953A0, *(double *)algn_1016953A8, xmmword_1016953B0];
  [v0 setView:v1];

  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v3 = v2;
  id v4 = [self systemBackgroundColor];
  [v3 setBackgroundColor:v4];

  id v5 = [v0 view];
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v6 = v5;
  id v7 = sub_100BA3810();
  [v6 addSubview:v7];

  id v8 = sub_100BA36D4();
  id v9 = [v0 view];
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v10 = v9;
  [v9 addSubview:v8];

  id v11 = sub_100BA3810();
  [v11 becomeFirstResponder];

  id v12 = [v0 view];
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  NSString v13 = v12;
  id v14 = [v12 layoutMarginsGuide];

  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1011810C0;
  id v16 = [v8 topAnchor];
  id v17 = [v14 topAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17];

  *(void *)(v15 + 32) = v18;
  id v19 = [v8 leadingAnchor];
  id v20 = [v14 leadingAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v15 + 40) = v21;
  id v22 = [v8 trailingAnchor];
  id v23 = [v14 trailingAnchor];
  id v24 = [v22 constraintEqualToAnchor:v23];

  *(void *)(v15 + 48) = v24;
  id v25 = sub_100BA3810();
  id v26 = [v25 topAnchor];

  uint64_t v63 = v8;
  id v27 = [v8 bottomAnchor];
  id v28 = [v26 constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:v27 multiplier:2.0];

  *(void *)(v15 + 56) = v28;
  id v29 = sub_100BA3810();
  id v30 = [v29 leadingAnchor];

  id v31 = [v14 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v15 + 64) = v32;
  id v33 = sub_100BA3810();
  id v34 = [v33 trailingAnchor];

  id v35 = [v14 trailingAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v15 + 72) = v36;
  id v37 = sub_100BA3810();
  id v38 = [v37 heightAnchor];

  id v39 = [v14 heightAnchor];
  id v40 = [v38 constraintLessThanOrEqualToAnchor:v39];

  *(void *)(v15 + 80) = v40;
  id v41 = sub_100BA3810();
  id v42 = [v41 heightAnchor];

  id v43 = [v42 constraintGreaterThanOrEqualToConstant:40.0];
  *(void *)(v15 + 88) = v43;
  id v44 = sub_100BA3810();
  id v45 = [v44 bottomAnchor];

  id v46 = [v0 view];
  if (!v46)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  objc_super v47 = v46;
  id v48 = [v46 safeAreaLayoutGuide];

  id v49 = [v48 bottomAnchor];
  id v50 = [v45 constraintLessThanOrEqualToAnchor:v49];

  *(void *)(v15 + 96) = v50;
  id v51 = sub_100BA3810();
  id v52 = [v51 bottomAnchor];

  id v53 = [v0 view];
  if (!v53)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v54 = v53;
  unint64_t v55 = self;
  id v56 = [v54 keyboardLayoutGuide];

  id v57 = [v56 topAnchor];
  id v58 = [v52 constraintLessThanOrEqualToAnchor:v57 constant:-12.0];

  *(void *)(v15 + 104) = v58;
  id v59 = sub_100BA3810();
  id v60 = [v59 bottomAnchor];

  id v61 = [v14 bottomAnchor];
  id v62 = [v60 constraintLessThanOrEqualToAnchor:v61];

  *(void *)(v15 + 112) = v62;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v55 activateConstraints:isa];
}

id sub_100BA3314(char a1)
{
  id v3 = sub_100BA3810();

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong accessibilityDescriptionEditor:v1 didEndEditingWithReason:v1[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled]];
    swift_unknownObjectRelease();
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  return [super viewWillDisappear:a1 & 1];
}

void sub_100BA3414(char a1)
{
  if (a1)
  {
    id v2 = [self systemGrayColor];
    id v3 = [self configurationWithHierarchicalColor:v2];

    id v4 = v3;
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self systemImageNamed:v5 withConfiguration:v4];

    id v7 = objc_allocWithZone((Class)UIBarButtonItem);
    id v8 = v1;
    id v9 = [v7 initWithImage:v6 style:0 target:v8 action:"triggerClose"];
  }
  else
  {
    id v9 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:0 target:v1 action:"triggerClose"];
  }
  id v10 = self;
  id v19 = v9;
  id v11 = [v10 mainBundle];
  NSString v12 = String._bridgeToObjectiveC()();
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 localizedStringForKey:v12 value:v13 table:0];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setAccessibilityLabel:v15];

  id v16 = [v1 navigationController];
  if (v16)
  {
    id v17 = v16;
    [v16 setNavigationBarHidden:0 animated:0];
  }
  id v18 = [v1 navigationItem];
  [v18 setRightBarButtonItem:v19];
}

id sub_100BA36D4()
{
  id v0 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
  [v0 setFont:v2];

  id v3 = [self secondaryLabelColor];
  [v0 setTextColor:v3];

  [v0 setTextAlignment:4];
  [v0 setNumberOfLines:0];
  return v0;
}

id sub_100BA3810()
{
  uint64_t v1 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView);
  }
  else
  {
    id v4 = sub_100BA3874();
    NSString v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100BA3874()
{
  id v0 = [objc_allocWithZone((Class)UITextView) initWithFrame:0.0 textContainer:0.0];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setText:v1];

  id v2 = self;
  id v3 = [v2 labelColor];
  [v0 setTextColor:v3];

  id v4 = [self preferredFontForTextStyle:UIFontTextStyleBody];
  [v0 setFont:v4];

  id v5 = v0;
  id v6 = [v2 secondarySystemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = [v5 layer];
  [v7 setCornerRadius:15.0];

  [v5 setWritingToolsBehavior:-1];
  sub_1005057FC((uint64_t *)&unk_101687FB0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v9 = NSForegroundColorAttributeName;
  id v10 = [v2 systemGrayColor];
  *(void *)(inited + 64) = sub_10050BF48(0, (unint64_t *)&qword_101687FC0);
  *(void *)(inited + 40) = v10;
  sub_100A38A68(inited);
  id v11 = [v5 font];
  if (v11)
  {
    NSString v12 = v11;
    uint64_t v24 = sub_10050BF48(0, (unint64_t *)&qword_101695490);
    *(void *)&long long v23 = v12;
    sub_100575CE8(&v23, v22);
    NSString v13 = NSFontAttributeName;
    id v14 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_100972E2C(v22, v13, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  id v16 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100515BF8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v16 initWithString:v17 attributes:isa];

  [v5 setAttributedPlaceholder:v19];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v20) = 1132068864;
  [v5 setContentCompressionResistancePriority:0 forAxis:v20];
  return v5;
}

double sub_100BA3C30()
{
  qword_1016953A0 = 0;
  *(void *)algn_1016953A8 = 0;
  double result = 520.0;
  xmmword_1016953B0 = xmmword_1011AB7A0;
  return result;
}

id sub_100BA3C80()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController()
{
  return self;
}

unsigned __int8 *sub_100BA3E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned char *a12)
{
  swift_bridgeObjectRelease();
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCancelled] = 0;
  swift_unknownObjectWeakInit();
  a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = 0;
  *(void *)&a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController____lazy_storage___textView] = 0;
  id v18 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_initialAccessibilityDescription];
  *id v18 = a1;
  v18[1] = a2;
  swift_unknownObjectWeakAssign();
  id v19 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_titleText];
  *id v19 = a3;
  v19[1] = a4;
  double v20 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_subtitleText];
  *double v20 = a5;
  v20[1] = a6;
  id v21 = &a12[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_placeholderText];
  *id v21 = a9;
  v21[1] = a10;
  v29.receiver = a12;
  v29.super_class = (Class)type metadata accessor for CRLiOSEditAccessibilityDescriptionViewController();
  id v22 = [super initWithNibName:0 bundle:0];
  id v23 = [v22 traitCollection];
  id v24 = [v23 horizontalSizeClass];
  if (v24 != (id)1) {
    LOBYTE(v24) = [v23 verticalSizeClass] == (id)1;
  }
  uint64_t v25 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  v22[OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact] = v24;
  sub_100BA3414((char)v24);
  LODWORD(v25) = v22[v25];

  if (v25) {
    uint64_t v26 = 1;
  }
  else {
    uint64_t v26 = 2;
  }
  [v22 setModalPresentationStyle:v26];

  id v27 = v22;
  [v27 setModalInPresentation:0];

  swift_unknownObjectRelease();
  return v27;
}

uint64_t sub_100BA403C(void *a1)
{
  id v3 = [a1 horizontalSizeClass];
  if (v3 != (id)1) {
    LOBYTE(v3) = [a1 verticalSizeClass] == (id)1;
  }
  uint64_t v4 = OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC8Freeform48CRLiOSEditAccessibilityDescriptionViewController_isCompact) = (_BYTE)v3;
  sub_100BA3414((char)v3);
  if (*(unsigned char *)(v1 + v4)) {
    return 1;
  }
  else {
    return 2;
  }
}

uint64_t sub_100BA40A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19)
{
  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data) = xmmword_101190880;
  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData) = xmmword_101190880;
  *(_OWORD *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData) = xmmword_101190880;
  sub_100540CFC(a1, v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier);
  id v28 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CRLBoardIdentifierStorage(0) + 20));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  swift_bridgeObjectRetain();
  sub_100510028(a1);
  id v31 = (void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ownerName);
  *id v31 = v29;
  v31[1] = v30;
  id v32 = (void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
  *id v32 = a2;
  v32[1] = a3;
  v32[2] = a4;
  uint64_t v33 = v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  uint64_t v34 = type metadata accessor for UUID();
  id v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32);
  v35(v33, a5, v34);
  v35(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID, a6, v34);
  id v36 = (void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
  uint64_t v37 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data);
  unint64_t v38 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8);
  *id v36 = a7;
  v36[1] = a8;
  sub_100514260(v37, v38);
  *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_isLocalTombstone) = a11;
  *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_unsyncedChanges) = a12;
  *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareUnsyncedChanges) = a13;
  id v39 = (void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData);
  uint64_t v40 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData);
  unint64_t v41 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData + 8);
  *id v39 = a14;
  v39[1] = a15;
  sub_100514260(v40, v41);
  *(double *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_tombstoneDate) = a9;
  *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_hideFromRecentlyDeleted) = a16;
  id v42 = (void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
  uint64_t v43 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData);
  unint64_t v44 = *(void *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8);
  *id v42 = a17;
  v42[1] = a18;
  sub_100514260(v43, v44);
  *(double *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_lastActivityTime) = a10;
  *(unsigned char *)(v19 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_isDiscardable) = a19;
  return v19;
}

uint64_t sub_100BA4314()
{
  sub_100510028(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_boardIdentifier);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_rootContainerUUID;
  uint64_t v2 = type metadata accessor for UUID();
  id v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_alternateRootContainerUUID, v2);
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data), *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_data + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_syncData + 8));
  sub_100514260(*(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData), *(void *)(v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_ckShareData + 8));

  return swift_deallocClassInstance();
}

uint64_t sub_100BA4444()
{
  return type metadata accessor for CRLBoardDatabaseRow();
}

uint64_t type metadata accessor for CRLBoardDatabaseRow()
{
  uint64_t result = qword_1016954C0;
  if (!qword_1016954C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BA4498()
{
  uint64_t result = type metadata accessor for CRLBoardIdentifierStorage(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLBoardUnsyncedChanges()
{
  return &type metadata for CRLBoardUnsyncedChanges;
}

unint64_t sub_100BA45B8()
{
  unint64_t result = qword_1016956F0;
  if (!qword_1016956F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016956F0);
  }
  return result;
}

unint64_t sub_100BA4610()
{
  unint64_t result = qword_1016956F8;
  if (!qword_1016956F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016956F8);
  }
  return result;
}

unint64_t sub_100BA4668()
{
  unint64_t result = qword_101695700;
  if (!qword_101695700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695700);
  }
  return result;
}

unint64_t sub_100BA46C0()
{
  unint64_t result = qword_101695708;
  if (!qword_101695708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695708);
  }
  return result;
}

uint64_t sub_100BA4714()
{
  return *(void *)(*v0 + OBJC_IVAR____TtC8Freeform19CRLBoardDatabaseRow_minRequiredVersions);
}

uint64_t *OS_os_log.crlAppAnalytics.unsafeMutableAddressor()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAppAnalytics;
}

uint64_t *OS_os_log.crlDefault.unsafeMutableAddressor()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlDefault;
}

uint64_t *OS_os_log.crlStatusHUD.unsafeMutableAddressor()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlStatusHUD;
}

uint64_t *OS_os_log.crlFollow.unsafeMutableAddressor()
{
  if (qword_10166FAE0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlFollow;
}

uint64_t *OS_os_log.boardItemLifecycle.unsafeMutableAddressor()
{
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  return &static OS_os_log.boardItemLifecycle;
}

uint64_t *OS_os_log.crlWarning.unsafeMutableAddressor()
{
  if (qword_10166F9E0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlWarning;
}

uint64_t *OS_os_log.shareState.unsafeMutableAddressor()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  return &static OS_os_log.shareState;
}

uint64_t *OS_os_log.realTimeSync.unsafeMutableAddressor()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  return &static OS_os_log.realTimeSync;
}

uint64_t *OS_os_log.crlSidebar.unsafeMutableAddressor()
{
  if (qword_10166FAC0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlSidebar;
}

uint64_t *OS_os_log.crlCollaboratorCursor.unsafeMutableAddressor()
{
  if (qword_10166FAD0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlCollaboratorCursor;
}

uint64_t *OS_os_log.crlCollaborationParticipant.unsafeMutableAddressor()
{
  if (qword_10166FA20 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlCollaborationParticipant;
}

uint64_t *OS_os_log.crlInsertMedia.unsafeMutableAddressor()
{
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlInsertMedia;
}

uint64_t *OS_os_log.crlRealTimeMessageTransfer.unsafeMutableAddressor()
{
  if (qword_10166FA80 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlRealTimeMessageTransfer;
}

uint64_t *OS_os_log.crlFolderUI.unsafeMutableAddressor()
{
  if (qword_10166FA58 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlFolderUI;
}

uint64_t *OS_os_log.dataSync.unsafeMutableAddressor()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  return &static OS_os_log.dataSync;
}

uint64_t *OS_os_log.crlAnalytics.unsafeMutableAddressor()
{
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAnalytics;
}

uint64_t *OS_os_log.assetManagement.unsafeMutableAddressor()
{
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  return &static OS_os_log.assetManagement;
}

uint64_t *OS_os_log.crlBoardPreviewImageCache.unsafeMutableAddressor()
{
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlBoardPreviewImageCache;
}

uint64_t *OS_os_log.appIntents.unsafeMutableAddressor()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  return &static OS_os_log.appIntents;
}

uint64_t *OS_os_log.crlScenes.unsafeMutableAddressor()
{
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlScenes;
}

uint64_t *OS_os_log.crlAssetDownloadManager.unsafeMutableAddressor()
{
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAssetDownloadManager;
}

uint64_t *OS_os_log.crlError.unsafeMutableAddressor()
{
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlError;
}

uint64_t *OS_os_log.crlSharingExtension.unsafeMutableAddressor()
{
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlSharingExtension;
}

uint64_t *OS_os_log.sceneManagement.unsafeMutableAddressor()
{
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  return &static OS_os_log.sceneManagement;
}

uint64_t *OS_os_log.crlSendACopy.unsafeMutableAddressor()
{
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlSendACopy;
}

uint64_t *OS_os_log.crlCloudKitEnvironment.unsafeMutableAddressor()
{
  if (qword_10166FA98 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlCloudKitEnvironment;
}

uint64_t *OS_os_log.crlTextInput.unsafeMutableAddressor()
{
  if (qword_10166FA00 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlTextInput;
}

uint64_t *OS_os_log.suspendResumeCollaboration.unsafeMutableAddressor()
{
  if (qword_10166FB98 != -1) {
    swift_once();
  }
  return &static OS_os_log.suspendResumeCollaboration;
}

uint64_t *OS_os_log.crlPencilHover.unsafeMutableAddressor()
{
  if (qword_10166FAF0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlPencilHover;
}

uint64_t *OS_os_log.crlThreeDimensionalObjects.unsafeMutableAddressor()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlThreeDimensionalObjects;
}

uint64_t *OS_os_log.crlStorageHierachy.unsafeMutableAddressor()
{
  if (qword_10166FA10 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlStorageHierachy;
}

uint64_t *OS_os_log.commandController.unsafeMutableAddressor()
{
  if (qword_10166FB90 != -1) {
    swift_once();
  }
  return &static OS_os_log.commandController;
}

uint64_t *OS_os_log.crlBoardLibrary.unsafeMutableAddressor()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlBoardLibrary;
}

uint64_t *OS_os_log.boardStore.unsafeMutableAddressor()
{
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  return &static OS_os_log.boardStore;
}

uint64_t *OS_os_log.crlMiniFormatter.unsafeMutableAddressor()
{
  if (qword_10166FB30 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlMiniFormatter;
}

uint64_t *OS_os_log.crlAssert.unsafeMutableAddressor()
{
  if (qword_10166F9D0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAssert;
}

uint64_t *OS_os_log.sideStore.unsafeMutableAddressor()
{
  if (qword_10166FBF0 != -1) {
    swift_once();
  }
  return &static OS_os_log.sideStore;
}

uint64_t *OS_os_log.crlSerializableObject.unsafeMutableAddressor()
{
  if (qword_10166FA18 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlSerializableObject;
}

uint64_t *OS_os_log.crlNetworkReachability.unsafeMutableAddressor()
{
  if (qword_10166FA30 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlNetworkReachability;
}

uint64_t *OS_os_log.crlZoneRefetch.unsafeMutableAddressor()
{
  if (qword_10166FA88 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlZoneRefetch;
}

uint64_t *OS_os_log.crlCloudQuotaMessaging.unsafeMutableAddressor()
{
  if (qword_10166FB10 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlCloudQuotaMessaging;
}

uint64_t *OS_os_log.crlStencilLibrary.unsafeMutableAddressor()
{
  if (qword_10166FA78 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlStencilLibrary;
}

uint64_t *OS_os_log.crlSpotlight.unsafeMutableAddressor()
{
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlSpotlight;
}

uint64_t *OS_os_log.crlLayerAnimation.unsafeMutableAddressor()
{
  if (qword_10166FB20 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlLayerAnimation;
}

uint64_t *OS_os_log.pasteboard.unsafeMutableAddressor()
{
  if (qword_10166FBC0 != -1) {
    swift_once();
  }
  return &static OS_os_log.pasteboard;
}

void sub_100BA548C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B498, &qword_101719A68);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlDefault = (uint64_t)v1;
}

id static OS_os_log.crlDefault.getter()
{
  return sub_100BAC71C(&qword_10166F9C8, (void **)&static OS_os_log.crlDefault);
}

void static OS_os_log.crlDefault.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlDefault.modify())()
{
  if (qword_10166F9C8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA561C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4A0, &qword_101719A70);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAssert = (uint64_t)v1;
}

id static OS_os_log.crlAssert.getter()
{
  return sub_100BAC71C(&qword_10166F9D0, (void **)&static OS_os_log.crlAssert);
}

void static OS_os_log.crlAssert.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAssert.modify())()
{
  if (qword_10166F9D0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA57A8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4A8, &qword_101719A78);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlError = (uint64_t)v1;
}

id static OS_os_log.crlError.getter()
{
  return sub_100BAC71C(&qword_10166F9D8, (void **)&static OS_os_log.crlError);
}

void static OS_os_log.crlError.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlError.modify())()
{
  if (qword_10166F9D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA5934()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4B0, &qword_101719A80);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlWarning = (uint64_t)v1;
}

id static OS_os_log.crlWarning.getter()
{
  return sub_100BAC71C(&qword_10166F9E0, (void **)&static OS_os_log.crlWarning);
}

void static OS_os_log.crlWarning.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlWarning.modify())()
{
  if (qword_10166F9E0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA5AC4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4B8, &qword_101719A88);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAlert = (uint64_t)v1;
}

uint64_t *OS_os_log.crlAlert.unsafeMutableAddressor()
{
  if (qword_10166F9E8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAlert;
}

id static OS_os_log.crlAlert.getter()
{
  return sub_100BAC71C(&qword_10166F9E8, (void **)&static OS_os_log.crlAlert);
}

void static OS_os_log.crlAlert.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAlert.modify())()
{
  if (qword_10166F9E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA5C9C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4C0, &qword_101719A90);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlPerformance = (uint64_t)v1;
}

uint64_t *OS_os_log.crlPerformance.unsafeMutableAddressor()
{
  if (qword_10166F9F0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlPerformance;
}

id static OS_os_log.crlPerformance.getter()
{
  return sub_100BAC71C(&qword_10166F9F0, (void **)&static OS_os_log.crlPerformance);
}

void static OS_os_log.crlPerformance.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlPerformance.modify())()
{
  if (qword_10166F9F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA5E70()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4C8, &qword_101719A98);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlStatusHUD = (uint64_t)v1;
}

id static OS_os_log.crlStatusHUD.getter()
{
  return sub_100BAC71C(&qword_10166F9F8, (void **)&static OS_os_log.crlStatusHUD);
}

void static OS_os_log.crlStatusHUD.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlStatusHUD.modify())()
{
  if (qword_10166F9F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6000()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4D0, &qword_101719AA0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlTextInput = (uint64_t)v1;
}

id static OS_os_log.crlTextInput.getter()
{
  return sub_100BAC71C(&qword_10166FA00, (void **)&static OS_os_log.crlTextInput);
}

void static OS_os_log.crlTextInput.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlTextInput.modify())()
{
  if (qword_10166FA00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6190()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4D8, &qword_101719AA8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlTraceableResource = (uint64_t)v1;
}

uint64_t *OS_os_log.crlTraceableResource.unsafeMutableAddressor()
{
  if (qword_10166FA08 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlTraceableResource;
}

id static OS_os_log.crlTraceableResource.getter()
{
  return sub_100BAC71C(&qword_10166FA08, (void **)&static OS_os_log.crlTraceableResource);
}

void static OS_os_log.crlTraceableResource.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlTraceableResource.modify())()
{
  if (qword_10166FA08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6364()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B560, &qword_101719B30);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlStorageHierachCGFloat y = (uint64_t)v1;
}

id static OS_os_log.crlStorageHierachy.getter()
{
  return sub_100BAC71C(&qword_10166FA10, (void **)&static OS_os_log.crlStorageHierachy);
}

void static OS_os_log.crlStorageHierachy.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlStorageHierachy.modify())()
{
  if (qword_10166FA10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA64EC()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B598, &qword_101719B68);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlSerializableObject = (uint64_t)v1;
}

id static OS_os_log.crlSerializableObject.getter()
{
  return sub_100BAC71C(&qword_10166FA18, (void **)&static OS_os_log.crlSerializableObject);
}

void static OS_os_log.crlSerializableObject.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlSerializableObject.modify())()
{
  if (qword_10166FA18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6674()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5A0, &qword_101719B70);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlCollaborationParticipant = (uint64_t)v1;
}

id static OS_os_log.crlCollaborationParticipant.getter()
{
  return sub_100BAC71C(&qword_10166FA20, (void **)&static OS_os_log.crlCollaborationParticipant);
}

void static OS_os_log.crlCollaborationParticipant.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlCollaborationParticipant.modify())()
{
  if (qword_10166FA20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA67FC()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5A8, &qword_101719B78);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlSpotlight = (uint64_t)v1;
}

id static OS_os_log.crlSpotlight.getter()
{
  return sub_100BAC71C(&qword_10166FA28, (void **)&static OS_os_log.crlSpotlight);
}

void static OS_os_log.crlSpotlight.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlSpotlight.modify())()
{
  if (qword_10166FA28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA698C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5B0, &qword_101719B80);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlNetworkReachabilitCGFloat y = (uint64_t)v1;
}

id static OS_os_log.crlNetworkReachability.getter()
{
  return sub_100BAC71C(&qword_10166FA30, (void **)&static OS_os_log.crlNetworkReachability);
}

void static OS_os_log.crlNetworkReachability.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlNetworkReachability.modify())()
{
  if (qword_10166FA30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6B14()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5B8, &qword_101719B88);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAssetDownloadManager = (uint64_t)v1;
}

id static OS_os_log.crlAssetDownloadManager.getter()
{
  return sub_100BAC71C(&qword_10166FA38, (void **)&static OS_os_log.crlAssetDownloadManager);
}

void static OS_os_log.crlAssetDownloadManager.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAssetDownloadManager.modify())()
{
  if (qword_10166FA38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6C9C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5C0, &qword_101719B90);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAppAnalytics = (uint64_t)v1;
}

id static OS_os_log.crlAppAnalytics.getter()
{
  return sub_100BAC71C(&qword_10166FA40, (void **)&static OS_os_log.crlAppAnalytics);
}

void static OS_os_log.crlAppAnalytics.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAppAnalytics.modify())()
{
  if (qword_10166FA40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6E24()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5C8, &qword_101719B98);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAnalytics = (uint64_t)v1;
}

id static OS_os_log.crlAnalytics.getter()
{
  return sub_100BAC71C(&qword_10166FA48, (void **)&static OS_os_log.crlAnalytics);
}

void static OS_os_log.crlAnalytics.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAnalytics.modify())()
{
  if (qword_10166FA48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA6FB4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5D0, &qword_101719BA0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlKeyboard = (uint64_t)v1;
}

uint64_t *OS_os_log.crlKeyboard.unsafeMutableAddressor()
{
  if (qword_10166FA50 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlKeyboard;
}

id static OS_os_log.crlKeyboard.getter()
{
  return sub_100BAC71C(&qword_10166FA50, (void **)&static OS_os_log.crlKeyboard);
}

void static OS_os_log.crlKeyboard.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlKeyboard.modify())()
{
  if (qword_10166FA50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7190()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5D8, &qword_101719BA8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlFolderUI = (uint64_t)v1;
}

id static OS_os_log.crlFolderUI.getter()
{
  return sub_100BAC71C(&qword_10166FA58, (void **)&static OS_os_log.crlFolderUI);
}

void static OS_os_log.crlFolderUI.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlFolderUI.modify())()
{
  if (qword_10166FA58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7320()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5E8, &qword_101719BB8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlBoardLibrarCGFloat y = (uint64_t)v1;
}

id static OS_os_log.crlBoardLibrary.getter()
{
  return sub_100BAC71C(&qword_10166FA60, (void **)&static OS_os_log.crlBoardLibrary);
}

void static OS_os_log.crlBoardLibrary.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlBoardLibrary.modify())()
{
  if (qword_10166FA60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA74A8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5F0, &qword_101719BC0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlBoardPreviewImageCache = (uint64_t)v1;
}

id static OS_os_log.crlBoardPreviewImageCache.getter()
{
  return sub_100BAC71C(&qword_10166FA68, (void **)&static OS_os_log.crlBoardPreviewImageCache);
}

void static OS_os_log.crlBoardPreviewImageCache.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlBoardPreviewImageCache.modify())()
{
  if (qword_10166FA68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7630()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5F8, &qword_101719BC8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlSharingExtension = (uint64_t)v1;
}

id static OS_os_log.crlSharingExtension.getter()
{
  return sub_100BAC71C(&qword_10166FA70, (void **)&static OS_os_log.crlSharingExtension);
}

void static OS_os_log.crlSharingExtension.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlSharingExtension.modify())()
{
  if (qword_10166FA70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA77B8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B600, &qword_101719BD0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlStencilLibrarCGFloat y = (uint64_t)v1;
}

id static OS_os_log.crlStencilLibrary.getter()
{
  return sub_100BAC71C(&qword_10166FA78, (void **)&static OS_os_log.crlStencilLibrary);
}

void static OS_os_log.crlStencilLibrary.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlStencilLibrary.modify())()
{
  if (qword_10166FA78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7940()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B508, &qword_101719AD8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlRealTimeMessageTransfer = (uint64_t)v1;
}

id static OS_os_log.crlRealTimeMessageTransfer.getter()
{
  return sub_100BAC71C(&qword_10166FA80, (void **)&static OS_os_log.crlRealTimeMessageTransfer);
}

void static OS_os_log.crlRealTimeMessageTransfer.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlRealTimeMessageTransfer.modify())()
{
  if (qword_10166FA80 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7AC8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B510, &qword_101719AE0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlZoneRefetch = (uint64_t)v1;
}

id static OS_os_log.crlZoneRefetch.getter()
{
  return sub_100BAC71C(&qword_10166FA88, (void **)&static OS_os_log.crlZoneRefetch);
}

void static OS_os_log.crlZoneRefetch.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlZoneRefetch.modify())()
{
  if (qword_10166FA88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7C50()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B680, &qword_101719C50);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlSendACopCGFloat y = (uint64_t)v1;
}

id static OS_os_log.crlSendACopy.getter()
{
  return sub_100BAC71C(&qword_10166FA90, (void **)&static OS_os_log.crlSendACopy);
}

void static OS_os_log.crlSendACopy.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlSendACopy.modify())()
{
  if (qword_10166FA90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7DE0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B688, &qword_101719C58);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlCloudKitEnvironment = (uint64_t)v1;
}

id static OS_os_log.crlCloudKitEnvironment.getter()
{
  return sub_100BAC71C(&qword_10166FA98, (void **)&static OS_os_log.crlCloudKitEnvironment);
}

void static OS_os_log.crlCloudKitEnvironment.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlCloudKitEnvironment.modify())()
{
  if (qword_10166FA98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA7F68()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166D8A0, &qword_101719CD8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlGesture = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGesture.unsafeMutableAddressor()
{
  if (qword_10166FAA0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlGesture;
}

id static OS_os_log.crlGesture.getter()
{
  return sub_100BAC71C(&qword_10166FAA0, (void **)&static OS_os_log.crlGesture);
}

void static OS_os_log.crlGesture.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlGesture.modify())()
{
  if (qword_10166FAA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8144()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166D8A8, &qword_101719CE0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlGesturePlus = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGesturePlus.unsafeMutableAddressor()
{
  if (qword_10166FAA8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlGesturePlus;
}

id static OS_os_log.crlGesturePlus.getter()
{
  return sub_100BAC71C(&qword_10166FAA8, (void **)&static OS_os_log.crlGesturePlus);
}

void static OS_os_log.crlGesturePlus.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlGesturePlus.modify())()
{
  if (qword_10166FAA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8318()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166D8B0, &qword_101719CE8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlGestureMonitor = (uint64_t)v1;
}

uint64_t *OS_os_log.crlGestureMonitor.unsafeMutableAddressor()
{
  if (qword_10166FAB0 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlGestureMonitor;
}

id static OS_os_log.crlGestureMonitor.getter()
{
  return sub_100BAC71C(&qword_10166FAB0, (void **)&static OS_os_log.crlGestureMonitor);
}

void static OS_os_log.crlGestureMonitor.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlGestureMonitor.modify())()
{
  if (qword_10166FAB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA84EC()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166E388, &qword_101719D00);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlInteractiveCanvasLayer = (uint64_t)v1;
}

uint64_t *OS_os_log.crlInteractiveCanvasLayer.unsafeMutableAddressor()
{
  if (qword_10166FAB8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlInteractiveCanvasLayer;
}

id static OS_os_log.crlInteractiveCanvasLayer.getter()
{
  return sub_100BAC71C(&qword_10166FAB8, (void **)&static OS_os_log.crlInteractiveCanvasLayer);
}

void static OS_os_log.crlInteractiveCanvasLayer.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlInteractiveCanvasLayer.modify())()
{
  if (qword_10166FAB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA86C0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B608, &qword_101719BD8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlSidebar = (uint64_t)v1;
}

id static OS_os_log.crlSidebar.getter()
{
  return sub_100BAC71C(&qword_10166FAC0, (void **)&static OS_os_log.crlSidebar);
}

void static OS_os_log.crlSidebar.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlSidebar.modify())()
{
  if (qword_10166FAC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8850()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B610, &qword_101719BE0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlInsertMedia = (uint64_t)v1;
}

id static OS_os_log.crlInsertMedia.getter()
{
  return sub_100BAC71C(&qword_10166FAC8, (void **)&static OS_os_log.crlInsertMedia);
}

void static OS_os_log.crlInsertMedia.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlInsertMedia.modify())()
{
  if (qword_10166FAC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA89D8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B618, &qword_101719BE8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlCollaboratorCursor = (uint64_t)v1;
}

id static OS_os_log.crlCollaboratorCursor.getter()
{
  return sub_100BAC71C(&qword_10166FAD0, (void **)&static OS_os_log.crlCollaboratorCursor);
}

void static OS_os_log.crlCollaboratorCursor.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlCollaboratorCursor.modify())()
{
  if (qword_10166FAD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8B60()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B620, &qword_101719BF0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlStateRestoration = (uint64_t)v1;
}

uint64_t *OS_os_log.crlStateRestoration.unsafeMutableAddressor()
{
  if (qword_10166FAD8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlStateRestoration;
}

id static OS_os_log.crlStateRestoration.getter()
{
  return sub_100BAC71C(&qword_10166FAD8, (void **)&static OS_os_log.crlStateRestoration);
}

void static OS_os_log.crlStateRestoration.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlStateRestoration.modify())()
{
  if (qword_10166FAD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8D34()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B630, &qword_101719C00);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlFollow = (uint64_t)v1;
}

id static OS_os_log.crlFollow.getter()
{
  return sub_100BAC71C(&qword_10166FAE0, (void **)&static OS_os_log.crlFollow);
}

void static OS_os_log.crlFollow.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlFollow.modify())()
{
  if (qword_10166FAE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA8EC0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B638, &qword_101719C08);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlJoinLeave = (uint64_t)v1;
}

uint64_t *OS_os_log.crlJoinLeave.unsafeMutableAddressor()
{
  if (qword_10166FAE8 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlJoinLeave;
}

id static OS_os_log.crlJoinLeave.getter()
{
  return sub_100BAC71C(&qword_10166FAE8, (void **)&static OS_os_log.crlJoinLeave);
}

void static OS_os_log.crlJoinLeave.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlJoinLeave.modify())()
{
  if (qword_10166FAE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA909C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B640, &qword_101719C10);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlPencilHover = (uint64_t)v1;
}

id static OS_os_log.crlPencilHover.getter()
{
  return sub_100BAC71C(&qword_10166FAF0, (void **)&static OS_os_log.crlPencilHover);
}

void static OS_os_log.crlPencilHover.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlPencilHover.modify())()
{
  if (qword_10166FAF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9224()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B648, &qword_101719C18);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlScenes = (uint64_t)v1;
}

id static OS_os_log.crlScenes.getter()
{
  return sub_100BAC71C(&qword_10166FAF8, (void **)&static OS_os_log.crlScenes);
}

void static OS_os_log.crlScenes.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlScenes.modify())()
{
  if (qword_10166FAF8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA93B4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B650, &qword_101719C20);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlThreeDimensionalObjects = (uint64_t)v1;
}

id static OS_os_log.crlThreeDimensionalObjects.getter()
{
  return sub_100BAC71C(&qword_10166FB00, (void **)&static OS_os_log.crlThreeDimensionalObjects);
}

void static OS_os_log.crlThreeDimensionalObjects.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlThreeDimensionalObjects.modify())()
{
  if (qword_10166FB00 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA953C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B658, &qword_101719C28);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlChangeShape = (uint64_t)v1;
}

uint64_t *OS_os_log.crlChangeShape.unsafeMutableAddressor()
{
  if (qword_10166FB08 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlChangeShape;
}

id static OS_os_log.crlChangeShape.getter()
{
  return sub_100BAC71C(&qword_10166FB08, (void **)&static OS_os_log.crlChangeShape);
}

void static OS_os_log.crlChangeShape.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlChangeShape.modify())()
{
  if (qword_10166FB08 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9710()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B660, &qword_101719C30);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlCloudQuotaMessaging = (uint64_t)v1;
}

id static OS_os_log.crlCloudQuotaMessaging.getter()
{
  return sub_100BAC71C(&qword_10166FB10, (void **)&static OS_os_log.crlCloudQuotaMessaging);
}

void static OS_os_log.crlCloudQuotaMessaging.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlCloudQuotaMessaging.modify())()
{
  if (qword_10166FB10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9898()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B668, &qword_101719C38);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crl3DBreakthrough = (uint64_t)v1;
}

uint64_t *OS_os_log.crl3DBreakthrough.unsafeMutableAddressor()
{
  if (qword_10166FB18 != -1) {
    swift_once();
  }
  return &static OS_os_log.crl3DBreakthrough;
}

id static OS_os_log.crl3DBreakthrough.getter()
{
  return sub_100BAC71C(&qword_10166FB18, (void **)&static OS_os_log.crl3DBreakthrough);
}

void static OS_os_log.crl3DBreakthrough.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crl3DBreakthrough.modify())()
{
  if (qword_10166FB18 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9A6C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B670, &qword_101719C40);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlLayerAnimation = (uint64_t)v1;
}

id static OS_os_log.crlLayerAnimation.getter()
{
  return sub_100BAC71C(&qword_10166FB20, (void **)&static OS_os_log.crlLayerAnimation);
}

void static OS_os_log.crlLayerAnimation.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlLayerAnimation.modify())()
{
  if (qword_10166FB20 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9BF4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B678, &qword_101719C48);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlAnimationImpl = (uint64_t)v1;
}

uint64_t *OS_os_log.crlAnimationImpl.unsafeMutableAddressor()
{
  if (qword_10166FB28 != -1) {
    swift_once();
  }
  return &static OS_os_log.crlAnimationImpl;
}

id static OS_os_log.crlAnimationImpl.getter()
{
  return sub_100BAC71C(&qword_10166FB28, (void **)&static OS_os_log.crlAnimationImpl);
}

void static OS_os_log.crlAnimationImpl.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlAnimationImpl.modify())()
{
  if (qword_10166FB28 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9DC8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B690, &qword_101719C60);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.crlMiniFormatter = (uint64_t)v1;
}

id static OS_os_log.crlMiniFormatter.getter()
{
  return sub_100BAC71C(&qword_10166FB30, (void **)&static OS_os_log.crlMiniFormatter);
}

void static OS_os_log.crlMiniFormatter.setter(void *a1)
{
}

uint64_t (*static OS_os_log.crlMiniFormatter.modify())()
{
  if (qword_10166FB30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BA9F50()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B558, &qword_101719B28);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.sceneManagement = (uint64_t)v1;
}

id static OS_os_log.sceneManagement.getter()
{
  return sub_100BAC71C(&qword_10166FB38, (void **)&static OS_os_log.sceneManagement);
}

void static OS_os_log.sceneManagement.setter(void *a1)
{
}

uint64_t (*static OS_os_log.sceneManagement.modify())()
{
  if (qword_10166FB38 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAA0E0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B538, &qword_101719B08);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.composition = (uint64_t)v1;
}

uint64_t *OS_os_log.composition.unsafeMutableAddressor()
{
  if (qword_10166FB40 != -1) {
    swift_once();
  }
  return &static OS_os_log.composition;
}

id static OS_os_log.composition.getter()
{
  return sub_100BAC71C(&qword_10166FB40, (void **)&static OS_os_log.composition);
}

void static OS_os_log.composition.setter(void *a1)
{
}

uint64_t (*static OS_os_log.composition.modify())()
{
  if (qword_10166FB40 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAA2B8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4E0, &qword_101719AB0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.CRLViewController = (uint64_t)v1;
}

uint64_t *OS_os_log.CRLViewController.unsafeMutableAddressor()
{
  if (qword_10166FB48 != -1) {
    swift_once();
  }
  return &static OS_os_log.CRLViewController;
}

id static OS_os_log.CRLViewController.getter()
{
  return sub_100BAC71C(&qword_10166FB48, (void **)&static OS_os_log.CRLViewController);
}

void static OS_os_log.CRLViewController.setter(void *a1)
{
}

uint64_t (*static OS_os_log.CRLViewController.modify())()
{
  if (qword_10166FB48 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAA48C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4E8, &qword_101719AB8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.appIntents = (uint64_t)v1;
}

id static OS_os_log.appIntents.getter()
{
  return sub_100BAC71C(&qword_10166FB50, (void **)&static OS_os_log.appIntents);
}

void static OS_os_log.appIntents.setter(void *a1)
{
}

uint64_t (*static OS_os_log.appIntents.modify())()
{
  if (qword_10166FB50 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_100BAA614()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4F0, &qword_101719AC0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.appState = (uint64_t)v1;
}

uint64_t *OS_os_log.appState.unsafeMutableAddressor()
{
  if (qword_10166FB58 != -1) {
    swift_once();
  }
  return &static OS_os_log.appState;
}

id static OS_os_log.appState.getter()
{
  return sub_100BAC71C(&qword_10166FB58, (void **)&static OS_os_log.appState);
}

void static OS_os_log.appState.setter(void *a1)
{
}

uint64_t (*static OS_os_log.appState.modify())()
{
  if (qword_10166FB58 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAA7E4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B548, &qword_101719B18);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.interaction = (uint64_t)v1;
}

uint64_t *OS_os_log.interaction.unsafeMutableAddressor()
{
  if (qword_10166FB60 != -1) {
    swift_once();
  }
  return &static OS_os_log.interaction;
}

id static OS_os_log.interaction.getter()
{
  return sub_100BAC71C(&qword_10166FB60, (void **)&static OS_os_log.interaction);
}

void static OS_os_log.interaction.setter(void *a1)
{
}

uint64_t (*static OS_os_log.interaction.modify())()
{
  if (qword_10166FB60 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAA9BC()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B540, &qword_101719B10);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.contentState = (uint64_t)v1;
}

uint64_t *OS_os_log.contentState.unsafeMutableAddressor()
{
  if (qword_10166FB68 != -1) {
    swift_once();
  }
  return &static OS_os_log.contentState;
}

id static OS_os_log.contentState.getter()
{
  return sub_100BAC71C(&qword_10166FB68, (void **)&static OS_os_log.contentState);
}

void static OS_os_log.contentState.setter(void *a1)
{
}

uint64_t (*static OS_os_log.contentState.modify())()
{
  if (qword_10166FB68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAAB94()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B518, &qword_101719AE8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.boardStore = (uint64_t)v1;
}

id static OS_os_log.boardStore.getter()
{
  return sub_100BAC71C(&qword_10166FB70, (void **)&static OS_os_log.boardStore);
}

void static OS_os_log.boardStore.setter(void *a1)
{
}

uint64_t (*static OS_os_log.boardStore.modify())()
{
  if (qword_10166FB70 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAAD1C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B520, &qword_101719AF0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.fileProviderStore = (uint64_t)v1;
}

uint64_t *OS_os_log.fileProviderStore.unsafeMutableAddressor()
{
  if (qword_10166FB78 != -1) {
    swift_once();
  }
  return &static OS_os_log.fileProviderStore;
}

id static OS_os_log.fileProviderStore.getter()
{
  return sub_100BAC71C(&qword_10166FB78, (void **)&static OS_os_log.fileProviderStore);
}

void static OS_os_log.fileProviderStore.setter(void *a1)
{
}

uint64_t (*static OS_os_log.fileProviderStore.modify())()
{
  if (qword_10166FB78 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAAEF0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B580, &qword_101719B50);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.persistence = (uint64_t)v1;
}

uint64_t *OS_os_log.persistence.unsafeMutableAddressor()
{
  if (qword_10166FB80 != -1) {
    swift_once();
  }
  return &static OS_os_log.persistence;
}

id static OS_os_log.persistence.getter()
{
  return sub_100BAC71C(&qword_10166FB80, (void **)&static OS_os_log.persistence);
}

void static OS_os_log.persistence.setter(void *a1)
{
}

uint64_t (*static OS_os_log.persistence.modify())()
{
  if (qword_10166FB80 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB0C8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B528, &qword_101719AF8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.datauint64_t Sync = (uint64_t)v1;
}

id static OS_os_log.dataSync.getter()
{
  return sub_100BAC71C(&qword_10166FB88, (void **)&static OS_os_log.dataSync);
}

void static OS_os_log.dataSync.setter(void *a1)
{
}

uint64_t (*static OS_os_log.dataSync.modify())()
{
  if (qword_10166FB88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB24C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B530, &qword_101719B00);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.commandController = (uint64_t)v1;
}

id static OS_os_log.commandController.getter()
{
  return sub_100BAC71C(&qword_10166FB90, (void **)&static OS_os_log.commandController);
}

void static OS_os_log.commandController.setter(void *a1)
{
}

uint64_t (*static OS_os_log.commandController.modify())()
{
  if (qword_10166FB90 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB3D4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B4F8, &qword_101719AC8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.suspendResumeCollaboration = (uint64_t)v1;
}

id static OS_os_log.suspendResumeCollaboration.getter()
{
  return sub_100BAC71C(&qword_10166FB98, (void **)&static OS_os_log.suspendResumeCollaboration);
}

void static OS_os_log.suspendResumeCollaboration.setter(void *a1)
{
}

uint64_t (*static OS_os_log.suspendResumeCollaboration.modify())()
{
  if (qword_10166FB98 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB55C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B500, &qword_101719AD0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.realTimeuint64_t Sync = (uint64_t)v1;
}

id static OS_os_log.realTimeSync.getter()
{
  return sub_100BAC71C(&qword_10166FBA0, (void **)&static OS_os_log.realTimeSync);
}

void static OS_os_log.realTimeSync.setter(void *a1)
{
}

uint64_t (*static OS_os_log.realTimeSync.modify())()
{
  if (qword_10166FBA0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB6E4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B550, &qword_101719B20);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.keyboardInput = (uint64_t)v1;
}

uint64_t *OS_os_log.keyboardInput.unsafeMutableAddressor()
{
  if (qword_10166FBA8 != -1) {
    swift_once();
  }
  return &static OS_os_log.keyboardInput;
}

id static OS_os_log.keyboardInput.getter()
{
  return sub_100BAC71C(&qword_10166FBA8, (void **)&static OS_os_log.keyboardInput);
}

void static OS_os_log.keyboardInput.setter(void *a1)
{
}

uint64_t (*static OS_os_log.keyboardInput.modify())()
{
  if (qword_10166FBA8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAB8C0()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B568, &qword_101719B38);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.target_gesture = (uint64_t)v1;
}

uint64_t *OS_os_log.target_gesture.unsafeMutableAddressor()
{
  if (qword_10166FBB0 != -1) {
    swift_once();
  }
  return &static OS_os_log.target_gesture;
}

id static OS_os_log.target_gesture.getter()
{
  return sub_100BAC71C(&qword_10166FBB0, (void **)&static OS_os_log.target_gesture);
}

void static OS_os_log.target_gesture.setter(void *a1)
{
}

uint64_t (*static OS_os_log.target_gesture.modify())()
{
  if (qword_10166FBB0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BABA9C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B570, &qword_101719B40);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.upgrade = (uint64_t)v1;
}

uint64_t *OS_os_log.upgrade.unsafeMutableAddressor()
{
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  return &static OS_os_log.upgrade;
}

id static OS_os_log.upgrade.getter()
{
  return sub_100BAC71C(&qword_10166FBB8, (void **)&static OS_os_log.upgrade);
}

void static OS_os_log.upgrade.setter(void *a1)
{
}

uint64_t (*static OS_os_log.upgrade.modify())()
{
  if (qword_10166FBB8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BABC70()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B578, &qword_101719B48);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.pasteboard = (uint64_t)v1;
}

id static OS_os_log.pasteboard.getter()
{
  return sub_100BAC71C(&qword_10166FBC0, (void **)&static OS_os_log.pasteboard);
}

void static OS_os_log.pasteboard.setter(void *a1)
{
}

uint64_t (*static OS_os_log.pasteboard.modify())()
{
  if (qword_10166FBC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BABDF8()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B588, &qword_101719B58);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.boardItemDataSize = (uint64_t)v1;
}

uint64_t *OS_os_log.boardItemDataSize.unsafeMutableAddressor()
{
  if (qword_10166FBC8 != -1) {
    swift_once();
  }
  return &static OS_os_log.boardItemDataSize;
}

id static OS_os_log.boardItemDataSize.getter()
{
  return sub_100BAC71C(&qword_10166FBC8, (void **)&static OS_os_log.boardItemDataSize);
}

void static OS_os_log.boardItemDataSize.setter(void *a1)
{
}

uint64_t (*static OS_os_log.boardItemDataSize.modify())()
{
  if (qword_10166FBC8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BABFCC()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B590, &qword_101719B60);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.boardItemLifecycle = (uint64_t)v1;
}

id static OS_os_log.boardItemLifecycle.getter()
{
  return sub_100BAC71C(&qword_10166FBD0, (void **)&static OS_os_log.boardItemLifecycle);
}

void static OS_os_log.boardItemLifecycle.setter(void *a1)
{
}

uint64_t (*static OS_os_log.boardItemLifecycle.modify())()
{
  if (qword_10166FBD0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAC154()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B5E0, &qword_101719BB0);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.assetManagement = (uint64_t)v1;
}

id static OS_os_log.assetManagement.getter()
{
  return sub_100BAC71C(&qword_10166FBD8, (void **)&static OS_os_log.assetManagement);
}

void static OS_os_log.assetManagement.setter(void *a1)
{
}

uint64_t (*static OS_os_log.assetManagement.modify())()
{
  if (qword_10166FBD8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAC2E4()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B628, &qword_101719BF8);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.shareState = (uint64_t)v1;
}

id static OS_os_log.shareState.getter()
{
  return sub_100BAC71C(&qword_10166FBE0, (void **)&static OS_os_log.shareState);
}

void static OS_os_log.shareState.setter(void *a1)
{
}

uint64_t (*static OS_os_log.shareState.modify())()
{
  if (qword_10166FBE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAC46C()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B698, &qword_101719C68);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.DrawingDataDetectors = (uint64_t)v1;
}

uint64_t *OS_os_log.DrawingDataDetectors.unsafeMutableAddressor()
{
  if (qword_10166FBE8 != -1) {
    swift_once();
  }
  return &static OS_os_log.DrawingDataDetectors;
}

id static OS_os_log.DrawingDataDetectors.getter()
{
  return sub_100BAC71C(&qword_10166FBE8, (void **)&static OS_os_log.DrawingDataDetectors);
}

void static OS_os_log.DrawingDataDetectors.setter(void *a1)
{
}

uint64_t (*static OS_os_log.DrawingDataDetectors.modify())()
{
  if (qword_10166FBE8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_100BAC640()
{
  swift_beginAccess();
  swift_beginAccess();
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = sub_1004027EC(v0, (id *)&off_10166B6A0, &qword_101719C70);
  swift_endAccess();
  swift_endAccess();

  static OS_os_log.sideStore = (uint64_t)v1;
}

id static OS_os_log.sideStore.getter()
{
  return sub_100BAC71C(&qword_10166FBF0, (void **)&static OS_os_log.sideStore);
}

id sub_100BAC71C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v3 = *a2;

  return v3;
}

void static OS_os_log.sideStore.setter(void *a1)
{
}

void sub_100BAC7A8(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  id v5 = *a3;
  *a3 = a1;
}

uint64_t (*static OS_os_log.sideStore.modify())()
{
  if (qword_10166FBF0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_100BAC898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  switch(*(void *)(a7 + 16))
  {
    case 1:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_10117E810;
      uint64_t v10 = v9 + 32;
      uint64_t v11 = a7 + 32;
      goto LABEL_25;
    case 2:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_10117D8C0;
      sub_1005498A4(a7 + 32, v12 + 32);
      uint64_t v10 = v12 + 72;
      uint64_t v11 = a7 + 72;
      goto LABEL_25;
    case 3:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10117DF40;
      sub_1005498A4(a7 + 32, v13 + 32);
      sub_1005498A4(a7 + 72, v13 + 72);
      uint64_t v10 = v13 + 112;
      uint64_t v11 = a7 + 112;
      goto LABEL_25;
    case 4:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_10117E800;
      sub_1005498A4(a7 + 32, v14 + 32);
      sub_1005498A4(a7 + 72, v14 + 72);
      sub_1005498A4(a7 + 112, v14 + 112);
      uint64_t v10 = v14 + 152;
      uint64_t v11 = a7 + 152;
      goto LABEL_25;
    case 5:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_10118E4B0;
      sub_1005498A4(a7 + 32, v15 + 32);
      sub_1005498A4(a7 + 72, v15 + 72);
      sub_1005498A4(a7 + 112, v15 + 112);
      sub_1005498A4(a7 + 152, v15 + 152);
      uint64_t v10 = v15 + 192;
      uint64_t v11 = a7 + 192;
      goto LABEL_25;
    case 6:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_101186E40;
      sub_1005498A4(a7 + 32, v16 + 32);
      sub_1005498A4(a7 + 72, v16 + 72);
      sub_1005498A4(a7 + 112, v16 + 112);
      sub_1005498A4(a7 + 152, v16 + 152);
      sub_1005498A4(a7 + 192, v16 + 192);
      uint64_t v10 = v16 + 232;
      uint64_t v11 = a7 + 232;
      goto LABEL_25;
    case 7:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1011807B0;
      sub_1005498A4(a7 + 32, v17 + 32);
      sub_1005498A4(a7 + 72, v17 + 72);
      sub_1005498A4(a7 + 112, v17 + 112);
      sub_1005498A4(a7 + 152, v17 + 152);
      sub_1005498A4(a7 + 192, v17 + 192);
      sub_1005498A4(a7 + 232, v17 + 232);
      uint64_t v10 = v17 + 272;
      uint64_t v11 = a7 + 272;
      goto LABEL_25;
    case 8:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1011ABAB0;
      sub_1005498A4(a7 + 32, v18 + 32);
      sub_1005498A4(a7 + 72, v18 + 72);
      sub_1005498A4(a7 + 112, v18 + 112);
      sub_1005498A4(a7 + 152, v18 + 152);
      sub_1005498A4(a7 + 192, v18 + 192);
      sub_1005498A4(a7 + 232, v18 + 232);
      sub_1005498A4(a7 + 272, v18 + 272);
      uint64_t v10 = v18 + 312;
      uint64_t v11 = a7 + 312;
      goto LABEL_25;
    case 9:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1011A8170;
      sub_1005498A4(a7 + 32, v19 + 32);
      sub_1005498A4(a7 + 72, v19 + 72);
      sub_1005498A4(a7 + 112, v19 + 112);
      sub_1005498A4(a7 + 152, v19 + 152);
      sub_1005498A4(a7 + 192, v19 + 192);
      sub_1005498A4(a7 + 232, v19 + 232);
      sub_1005498A4(a7 + 272, v19 + 272);
      sub_1005498A4(a7 + 312, v19 + 312);
      uint64_t v10 = v19 + 352;
      uint64_t v11 = a7 + 352;
      goto LABEL_25;
    case 0xALL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_101192420;
      sub_1005498A4(a7 + 32, v20 + 32);
      sub_1005498A4(a7 + 72, v20 + 72);
      sub_1005498A4(a7 + 112, v20 + 112);
      sub_1005498A4(a7 + 152, v20 + 152);
      sub_1005498A4(a7 + 192, v20 + 192);
      sub_1005498A4(a7 + 232, v20 + 232);
      sub_1005498A4(a7 + 272, v20 + 272);
      sub_1005498A4(a7 + 312, v20 + 312);
      sub_1005498A4(a7 + 352, v20 + 352);
      uint64_t v10 = v20 + 392;
      uint64_t v11 = a7 + 392;
      goto LABEL_25;
    case 0xBLL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1011ABAA0;
      sub_1005498A4(a7 + 32, v21 + 32);
      sub_1005498A4(a7 + 72, v21 + 72);
      sub_1005498A4(a7 + 112, v21 + 112);
      sub_1005498A4(a7 + 152, v21 + 152);
      sub_1005498A4(a7 + 192, v21 + 192);
      sub_1005498A4(a7 + 232, v21 + 232);
      sub_1005498A4(a7 + 272, v21 + 272);
      sub_1005498A4(a7 + 312, v21 + 312);
      sub_1005498A4(a7 + 352, v21 + 352);
      sub_1005498A4(a7 + 392, v21 + 392);
      uint64_t v10 = v21 + 432;
      uint64_t v11 = a7 + 432;
      goto LABEL_25;
    case 0xCLL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1011A4DB0;
      sub_1005498A4(a7 + 32, v22 + 32);
      sub_1005498A4(a7 + 72, v22 + 72);
      sub_1005498A4(a7 + 112, v22 + 112);
      sub_1005498A4(a7 + 152, v22 + 152);
      sub_1005498A4(a7 + 192, v22 + 192);
      sub_1005498A4(a7 + 232, v22 + 232);
      sub_1005498A4(a7 + 272, v22 + 272);
      sub_1005498A4(a7 + 312, v22 + 312);
      sub_1005498A4(a7 + 352, v22 + 352);
      sub_1005498A4(a7 + 392, v22 + 392);
      sub_1005498A4(a7 + 432, v22 + 432);
      uint64_t v10 = v22 + 472;
      uint64_t v11 = a7 + 472;
      goto LABEL_25;
    case 0xDLL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_101196C50;
      sub_1005498A4(a7 + 32, v23 + 32);
      sub_1005498A4(a7 + 72, v23 + 72);
      sub_1005498A4(a7 + 112, v23 + 112);
      sub_1005498A4(a7 + 152, v23 + 152);
      sub_1005498A4(a7 + 192, v23 + 192);
      sub_1005498A4(a7 + 232, v23 + 232);
      sub_1005498A4(a7 + 272, v23 + 272);
      sub_1005498A4(a7 + 312, v23 + 312);
      sub_1005498A4(a7 + 352, v23 + 352);
      sub_1005498A4(a7 + 392, v23 + 392);
      sub_1005498A4(a7 + 432, v23 + 432);
      sub_1005498A4(a7 + 472, v23 + 472);
      uint64_t v10 = v23 + 512;
      uint64_t v11 = a7 + 512;
      goto LABEL_25;
    case 0xELL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_101198A40;
      sub_1005498A4(a7 + 32, v24 + 32);
      sub_1005498A4(a7 + 72, v24 + 72);
      sub_1005498A4(a7 + 112, v24 + 112);
      sub_1005498A4(a7 + 152, v24 + 152);
      sub_1005498A4(a7 + 192, v24 + 192);
      sub_1005498A4(a7 + 232, v24 + 232);
      sub_1005498A4(a7 + 272, v24 + 272);
      sub_1005498A4(a7 + 312, v24 + 312);
      sub_1005498A4(a7 + 352, v24 + 352);
      sub_1005498A4(a7 + 392, v24 + 392);
      sub_1005498A4(a7 + 432, v24 + 432);
      sub_1005498A4(a7 + 472, v24 + 472);
      sub_1005498A4(a7 + 512, v24 + 512);
      uint64_t v10 = v24 + 552;
      uint64_t v11 = a7 + 552;
      goto LABEL_25;
    case 0xFLL:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1011ABA90;
      sub_1005498A4(a7 + 32, v25 + 32);
      sub_1005498A4(a7 + 72, v25 + 72);
      sub_1005498A4(a7 + 112, v25 + 112);
      sub_1005498A4(a7 + 152, v25 + 152);
      sub_1005498A4(a7 + 192, v25 + 192);
      sub_1005498A4(a7 + 232, v25 + 232);
      sub_1005498A4(a7 + 272, v25 + 272);
      sub_1005498A4(a7 + 312, v25 + 312);
      sub_1005498A4(a7 + 352, v25 + 352);
      sub_1005498A4(a7 + 392, v25 + 392);
      sub_1005498A4(a7 + 432, v25 + 432);
      sub_1005498A4(a7 + 472, v25 + 472);
      sub_1005498A4(a7 + 512, v25 + 512);
      sub_1005498A4(a7 + 552, v25 + 552);
      uint64_t v10 = v25 + 592;
      uint64_t v11 = a7 + 592;
      goto LABEL_25;
    case 0x10:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1011ABA80;
      sub_1005498A4(a7 + 32, v26 + 32);
      sub_1005498A4(a7 + 72, v26 + 72);
      sub_1005498A4(a7 + 112, v26 + 112);
      sub_1005498A4(a7 + 152, v26 + 152);
      sub_1005498A4(a7 + 192, v26 + 192);
      sub_1005498A4(a7 + 232, v26 + 232);
      sub_1005498A4(a7 + 272, v26 + 272);
      sub_1005498A4(a7 + 312, v26 + 312);
      sub_1005498A4(a7 + 352, v26 + 352);
      sub_1005498A4(a7 + 392, v26 + 392);
      sub_1005498A4(a7 + 432, v26 + 432);
      sub_1005498A4(a7 + 472, v26 + 472);
      sub_1005498A4(a7 + 512, v26 + 512);
      sub_1005498A4(a7 + 552, v26 + 552);
      sub_1005498A4(a7 + 592, v26 + 592);
      uint64_t v10 = v26 + 632;
      uint64_t v11 = a7 + 632;
      goto LABEL_25;
    case 0x11:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1011ABA70;
      sub_1005498A4(a7 + 32, v27 + 32);
      sub_1005498A4(a7 + 72, v27 + 72);
      sub_1005498A4(a7 + 112, v27 + 112);
      sub_1005498A4(a7 + 152, v27 + 152);
      sub_1005498A4(a7 + 192, v27 + 192);
      sub_1005498A4(a7 + 232, v27 + 232);
      sub_1005498A4(a7 + 272, v27 + 272);
      sub_1005498A4(a7 + 312, v27 + 312);
      sub_1005498A4(a7 + 352, v27 + 352);
      sub_1005498A4(a7 + 392, v27 + 392);
      sub_1005498A4(a7 + 432, v27 + 432);
      sub_1005498A4(a7 + 472, v27 + 472);
      sub_1005498A4(a7 + 512, v27 + 512);
      sub_1005498A4(a7 + 552, v27 + 552);
      sub_1005498A4(a7 + 592, v27 + 592);
      sub_1005498A4(a7 + 632, v27 + 632);
      uint64_t v10 = v27 + 672;
      uint64_t v11 = a7 + 672;
      goto LABEL_25;
    case 0x12:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_10118D660;
      sub_1005498A4(a7 + 32, v28 + 32);
      sub_1005498A4(a7 + 72, v28 + 72);
      sub_1005498A4(a7 + 112, v28 + 112);
      sub_1005498A4(a7 + 152, v28 + 152);
      sub_1005498A4(a7 + 192, v28 + 192);
      sub_1005498A4(a7 + 232, v28 + 232);
      sub_1005498A4(a7 + 272, v28 + 272);
      sub_1005498A4(a7 + 312, v28 + 312);
      sub_1005498A4(a7 + 352, v28 + 352);
      sub_1005498A4(a7 + 392, v28 + 392);
      sub_1005498A4(a7 + 432, v28 + 432);
      sub_1005498A4(a7 + 472, v28 + 472);
      sub_1005498A4(a7 + 512, v28 + 512);
      sub_1005498A4(a7 + 552, v28 + 552);
      sub_1005498A4(a7 + 592, v28 + 592);
      sub_1005498A4(a7 + 632, v28 + 632);
      sub_1005498A4(a7 + 672, v28 + 672);
      uint64_t v10 = v28 + 712;
      uint64_t v11 = a7 + 712;
      goto LABEL_25;
    case 0x13:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_1011ABA60;
      sub_1005498A4(a7 + 32, v29 + 32);
      sub_1005498A4(a7 + 72, v29 + 72);
      sub_1005498A4(a7 + 112, v29 + 112);
      sub_1005498A4(a7 + 152, v29 + 152);
      sub_1005498A4(a7 + 192, v29 + 192);
      sub_1005498A4(a7 + 232, v29 + 232);
      sub_1005498A4(a7 + 272, v29 + 272);
      sub_1005498A4(a7 + 312, v29 + 312);
      sub_1005498A4(a7 + 352, v29 + 352);
      sub_1005498A4(a7 + 392, v29 + 392);
      sub_1005498A4(a7 + 432, v29 + 432);
      sub_1005498A4(a7 + 472, v29 + 472);
      sub_1005498A4(a7 + 512, v29 + 512);
      sub_1005498A4(a7 + 552, v29 + 552);
      sub_1005498A4(a7 + 592, v29 + 592);
      sub_1005498A4(a7 + 632, v29 + 632);
      sub_1005498A4(a7 + 672, v29 + 672);
      sub_1005498A4(a7 + 712, v29 + 712);
      uint64_t v10 = v29 + 752;
      uint64_t v11 = a7 + 752;
      goto LABEL_25;
    case 0x14:
      sub_1005057FC((uint64_t *)&unk_101672B40);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1011ABA50;
      sub_1005498A4(a7 + 32, v30 + 32);
      sub_1005498A4(a7 + 72, v30 + 72);
      sub_1005498A4(a7 + 112, v30 + 112);
      sub_1005498A4(a7 + 152, v30 + 152);
      sub_1005498A4(a7 + 192, v30 + 192);
      sub_1005498A4(a7 + 232, v30 + 232);
      sub_1005498A4(a7 + 272, v30 + 272);
      sub_1005498A4(a7 + 312, v30 + 312);
      sub_1005498A4(a7 + 352, v30 + 352);
      sub_1005498A4(a7 + 392, v30 + 392);
      sub_1005498A4(a7 + 432, v30 + 432);
      sub_1005498A4(a7 + 472, v30 + 472);
      sub_1005498A4(a7 + 512, v30 + 512);
      sub_1005498A4(a7 + 552, v30 + 552);
      sub_1005498A4(a7 + 592, v30 + 592);
      sub_1005498A4(a7 + 632, v30 + 632);
      sub_1005498A4(a7 + 672, v30 + 672);
      sub_1005498A4(a7 + 712, v30 + 712);
      sub_1005498A4(a7 + 752, v30 + 752);
      uint64_t v10 = v30 + 792;
      uint64_t v11 = a7 + 792;
LABEL_25:
      sub_1005498A4(v11, v10);
      os_log(_:dso:log:type:_:)();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      uint64_t result = os_log(_:dso:log:type:_:)();
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRLCommandHistory()
{
  return &type metadata for CRLCommandHistory;
}

uint64_t sub_100BAD960@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *v1;
  if (!*(void *)(*v1 + 16))
  {
    __break(1u);
LABEL_6:
    uint64_t result = sub_100F68544(v3);
    unint64_t v3 = result;
    uint64_t v5 = *(void *)(result + 16);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
LABEL_4:
    uint64_t v6 = v5 - 1;
    uint64_t v7 = *(void *)(type metadata accessor for CRLCommandHistoryItem() - 8);
    uint64_t result = sub_10079731C(v3+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v6, a1);
    *(void *)(v3 + 16) = v6;
    *id v1 = v3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100BADA34@<X0>(uint64_t a1@<X8>)
{
  unint64_t v3 = *(void *)(v1 + 8);
  if (!*(void *)(v3 + 16))
  {
    __break(1u);
LABEL_6:
    uint64_t result = sub_100F68544(v3);
    unint64_t v3 = result;
    uint64_t v5 = *(void *)(result + 16);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
LABEL_4:
    uint64_t v6 = v5 - 1;
    uint64_t v7 = *(void *)(type metadata accessor for CRLCommandHistoryItem() - 8);
    uint64_t result = sub_10079731C(v3+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v6, a1);
    *(void *)(v3 + 16) = v6;
    *(void *)(v1 + 8) = v3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100BADB08(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (***)(char *, char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLCommandHistoryItem();
  __chkstk_darwin(v10, v11);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v22 = (unint64_t *)((char *)&v41 - v19);
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v43 = v18;
    id v46 = v6;
    uint64_t v48 = v5;
    uint64_t v49 = v21;
    uint64_t v50 = v20;
    sub_100BAD960((uint64_t)&v41 - v19);
    uint64_t v47 = sub_10078DC8C(v22, 0);
    unint64_t v2 = v22[2];
    a2 = v22[3];
    uint64_t v23 = qword_10166FB90;
    id v44 = (id)v22[1];
    uint64_t v6 = (void (**)(char *, char *, uint64_t))v44;
    swift_bridgeObjectRetain();
    uint64_t v45 = a1;
    if (v23 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.commandController;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  id v26 = v24;
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Undoing \"%@\"", 12, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v42 = v6;
  uint64_t v28 = v47;
  swift_retain();
  UUID.init()();
  *((void *)v15 + 1) = 0;
  uint64_t v29 = v43;
  uint64_t v30 = *(int *)(v43 + 32);
  *(void *)&v15[v30] = 0;
  id v31 = v46;
  uint64_t v32 = v48;
  v46[2](&v15[*(int *)(v29 + 28)], v9, v48);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_101177E70;
  *(void *)(v33 + 32) = v28;
  uint64_t v51 = v33;
  specialized Array._endMutation()();
  uint64_t v34 = v51;
  ((void (*)(char *, uint64_t))v31[1])(v9, v32);
  *(void *)uint64_t v15 = v34;

  *((void *)v15 + 1) = v44;
  *((void *)v15 + 2) = v2;
  *((void *)v15 + 3) = a2;

  *(void *)&v15[v30] = 0;
  uint64_t v35 = v49;
  sub_100BAE3D0((uint64_t)v15, v49);
  uint64_t v36 = v45;
  unint64_t v37 = *(void *)(v45 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v37 = sub_100F62364(0, *(void *)(v37 + 16) + 1, 1, v37);
  }
  unint64_t v39 = *(void *)(v37 + 16);
  unint64_t v38 = *(void *)(v37 + 24);
  if (v39 >= v38 >> 1) {
    unint64_t v37 = sub_100F62364(v38 > 1, v39 + 1, 1, v37);
  }
  *(void *)(v37 + 16) = v39 + 1;
  sub_10079731C(v35, v37+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v39);
  swift_release();

  *(void *)(v36 + 8) = v37;
  sub_100BAE434((uint64_t)v15);
  return sub_100BAE434((uint64_t)v22);
}

uint64_t sub_100BADF6C(unint64_t *a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (***)(char *, char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CRLCommandHistoryItem();
  __chkstk_darwin(v10, v11);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v41 - v14;
  __chkstk_darwin(v16, v17);
  uint64_t v22 = (unint64_t *)((char *)&v41 - v19);
  if (*(void *)(a1[1] + 16))
  {
    uint64_t v43 = v18;
    id v46 = v6;
    uint64_t v48 = v5;
    uint64_t v49 = v21;
    uint64_t v50 = v20;
    sub_100BADA34((uint64_t)&v41 - v19);
    uint64_t v47 = sub_10078DC8C(v22, 1);
    unint64_t v2 = v22[2];
    a2 = v22[3];
    uint64_t v23 = qword_10166FB90;
    id v44 = (id)v22[1];
    uint64_t v6 = (void (**)(char *, char *, uint64_t))v44;
    swift_bridgeObjectRetain();
    uint64_t v45 = a1;
    if (v23 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  swift_beginAccess();
  uint64_t v24 = (void *)static OS_os_log.commandController;
  sub_1005057FC((uint64_t *)&unk_101672B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10117E810;
  *(void *)(inited + 56) = &type metadata for String;
  *(void *)(inited + 64) = sub_100528BE4();
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  id v26 = v24;
  uint64_t v27 = static os_log_type_t.default.getter();
  sub_100BAC898((uint64_t)v26, (uint64_t)&_mh_execute_header, v27, (uint64_t)"Redoing \"%@\"", 12, 2, inited);
  swift_setDeallocating();
  sub_1005057FC(&qword_101672B50);
  swift_arrayDestroy();

  id v42 = v6;
  uint64_t v28 = v47;
  swift_retain();
  UUID.init()();
  *((void *)v15 + 1) = 0;
  uint64_t v29 = v43;
  uint64_t v30 = *(int *)(v43 + 32);
  *(void *)&v15[v30] = 0;
  id v31 = v46;
  uint64_t v32 = v48;
  v46[2](&v15[*(int *)(v29 + 28)], v9, v48);
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_101177E70;
  *(void *)(v33 + 32) = v28;
  uint64_t v51 = v33;
  specialized Array._endMutation()();
  uint64_t v34 = v51;
  ((void (*)(char *, uint64_t))v31[1])(v9, v32);
  *(void *)uint64_t v15 = v34;

  *((void *)v15 + 1) = v44;
  *((void *)v15 + 2) = v2;
  *((void *)v15 + 3) = a2;

  *(void *)&v15[v30] = 0;
  uint64_t v35 = v49;
  sub_100BAE3D0((uint64_t)v15, v49);
  uint64_t v36 = v45;
  unint64_t v37 = *v45;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v37 = sub_100F62364(0, *(void *)(v37 + 16) + 1, 1, v37);
  }
  unint64_t v39 = *(void *)(v37 + 16);
  unint64_t v38 = *(void *)(v37 + 24);
  if (v39 >= v38 >> 1) {
    unint64_t v37 = sub_100F62364(v38 > 1, v39 + 1, 1, v37);
  }
  *(void *)(v37 + 16) = v39 + 1;
  sub_10079731C(v35, v37+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v39);
  swift_release();

  *uint64_t v36 = v37;
  sub_100BAE434((uint64_t)v15);
  return sub_100BAE434((uint64_t)v22);
}

uint64_t sub_100BAE3D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CRLCommandHistoryItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BAE434(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRLCommandHistoryItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BAE494(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v3 = v1 - 1;
  uint64_t v4 = *(void *)(type metadata accessor for CRLCommandHistoryItem() - 8);
  uint64_t v5 = *(void *)(a1
                 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                 + *(void *)(v4 + 72) * v3
                 + 16);
  swift_bridgeObjectRetain();
  return v5;
}

Class sub_100BAE53C(void *a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  sub_10050BF48(0, (unint64_t *)&unk_101672590);
  id v10 = a2;
  v26.value.super.super.Class isa = (Class)a2;
  v11.super.super.super.super.Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v26).super.super.super.super.isa;
  [(objc_class *)v11.super.super.super.super.isa setContentHorizontalAlignment:3];
  [(objc_class *)v11.super.super.super.super.isa setContentVerticalAlignment:3];
  [(objc_class *)v11.super.super.super.super.isa setImage:a1 forState:0];
  if (a1) {
    id v12 = [a1 crl_imageWithAlpha:0 renderingMode:0.6];
  }
  else {
    id v12 = 0;
  }
  -[objc_class setImage:forState:](v11.super.super.super.super.isa, "setImage:forState:", v12, 1, a3);
  [(objc_class *)v11.super.super.super.super.isa setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v13 = self;
  sub_1005057FC((uint64_t *)&unk_101676C10);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10117DF50;
  id v15 = [(objc_class *)v11.super.super.super.super.isa heightAnchor];
  id v16 = [v15 constraintEqualToConstant:a5];

  *(void *)(v14 + 32) = v16;
  id v17 = [(objc_class *)v11.super.super.super.super.isa widthAnchor];
  id v18 = [v17 constraintEqualToConstant:a5];

  *(void *)(v14 + 40) = v18;
  specialized Array._endMutation()();
  sub_10050BF48(0, (unint64_t *)&qword_101674200);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v13 activateConstraints:isa];

  uint64_t v20 = v11.super.super.super.super.isa;
  if (a4) {
    NSString v21 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v21 = 0;
  }
  [(objc_class *)v11.super.super.super.super.isa setAccessibilityLabel:v21];

  [(objc_class *)v11.super.super.super.super.isa setShowsLargeContentViewer:1];
  uint64_t v22 = v11.super.super.super.super.isa;
  if (a4) {
    NSString v23 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v23 = 0;
  }
  [(objc_class *)v11.super.super.super.super.isa setLargeContentTitle:v23];

  [(objc_class *)v11.super.super.super.super.isa setLargeContentImage:a1];
  id v24 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) init];
  [(objc_class *)v11.super.super.super.super.isa addInteraction:v24];

  return v11.super.super.super.super.isa;
}

void sub_100BAE8EC(void *a1, unsigned __int8 *a2)
{
  if (*a2)
  {
    if ([a1 supportsPencilHoverPreview])
    {
      sub_100744324(a2);
      unsigned __int8 v5 = [a1 isObjectEraser];
      *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = v5;
    }
    else
    {
      *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = 0;
      sub_100744E08();
    }
  }
  else
  {
    sub_100744324(a2);
    *(unsigned char *)(v2 + OBJC_IVAR____TtC8Freeform30CRLiOSPencilToolShapeDecorator_isHoveredWithObjectEraser) = 0;
  }
}

id sub_100BAE9A8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CRLiOSPencilToolShapeDecorator();
  return [super dealloc];
}

uint64_t type metadata accessor for CRLiOSPencilToolShapeDecorator()
{
  return self;
}

unint64_t sub_100BAEB6C()
{
  return 0xD000000000000012;
}

uint64_t sub_100BAEB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BAEEB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100BAEBB4(uint64_t a1)
{
  unint64_t v2 = sub_100BAEDAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAEBF0(uint64_t a1)
{
  unint64_t v2 = sub_100BAEDAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DrawableAddSummaryData.encode(to:)(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101695748);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BAEDAC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v10[1] = a2;
  sub_1005057FC(&qword_101695758);
  sub_100BAF380(&qword_101695760, (void (*)(void))sub_100BAEE00);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

unint64_t sub_100BAEDAC()
{
  unint64_t result = qword_101695750;
  if (!qword_101695750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695750);
  }
  return result;
}

unint64_t sub_100BAEE00()
{
  unint64_t result = qword_101695768;
  if (!qword_101695768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695768);
  }
  return result;
}

void *DrawableAddSummaryData.init(from:)(void *a1)
{
  return sub_100BAEF3C(a1);
}

void *sub_100BAEE6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  unint64_t result = sub_100BAEF3C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100BAEE98(void *a1)
{
  return DrawableAddSummaryData.encode(to:)(a1, *v1);
}

uint64_t sub_100BAEEB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001012784C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void *sub_100BAEF3C(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_101695798);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10050F848(a1, a1[3]);
  sub_100BAEDAC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_1005057FC(&qword_101695758);
    sub_100BAF380(&qword_1016957A0, (void (*)(void))sub_100BAF3F0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    uint64_t v8 = (void *)v10[1];
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  return v8;
}

unint64_t sub_100BAF0E8()
{
  unint64_t result = qword_101695770;
  if (!qword_101695770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695770);
  }
  return result;
}

unint64_t sub_100BAF140()
{
  unint64_t result = qword_101695778;
  if (!qword_101695778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695778);
  }
  return result;
}

ValueMetadata *type metadata accessor for DrawableAddSummaryData()
{
  return &type metadata for DrawableAddSummaryData;
}

unsigned char *storeEnumTagSinglePayload for DrawableAddSummaryData.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BAF240);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DrawableAddSummaryData.CodingKeys()
{
  return &type metadata for DrawableAddSummaryData.CodingKeys;
}

unint64_t sub_100BAF27C()
{
  unint64_t result = qword_101695780;
  if (!qword_101695780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695780);
  }
  return result;
}

unint64_t sub_100BAF2D4()
{
  unint64_t result = qword_101695788;
  if (!qword_101695788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695788);
  }
  return result;
}

unint64_t sub_100BAF32C()
{
  unint64_t result = qword_101695790;
  if (!qword_101695790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695790);
  }
  return result;
}

uint64_t sub_100BAF380(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100522D34(&qword_101695758);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BAF3F0()
{
  unint64_t result = qword_1016957A8;
  if (!qword_1016957A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957A8);
  }
  return result;
}

Freeform::BoardData __swiftcall BoardData.init(boardID:isOwned:)(Swift::String boardID, Swift::Bool isOwned)
{
  Swift::Bool v2 = isOwned;
  result.boardID = boardID;
  result.isOwned = v2;
  return result;
}

uint64_t BoardData.isOwned.getter(uint64_t a1, uint64_t a2, char a3)
{
  return a3 & 1;
}

uint64_t sub_100BAF454()
{
  if (*v0) {
    return 0x64656E774F7369;
  }
  else {
    return 0x44496472616F62;
  }
}

uint64_t sub_100BAF488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BAF76C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BAF4B0(uint64_t a1)
{
  unint64_t v2 = sub_100BAF69C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAF4EC(uint64_t a1)
{
  unint64_t v2 = sub_100BAF69C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardData.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v13 = a4;
  uint64_t v6 = sub_1005057FC(&qword_1016957B0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BAF69C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

unint64_t sub_100BAF69C()
{
  unint64_t result = qword_1016957B8;
  if (!qword_1016957B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957B8);
  }
  return result;
}

uint64_t BoardData.init(from:)(void *a1)
{
  uint64_t result = sub_100BAF860(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_100BAF718@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100BAF860(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_100BAF74C(void *a1)
{
  return BoardData.encode(to:)(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_100BAF76C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496472616F62 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656E774F7369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BAF860(void *a1)
{
  uint64_t v3 = sub_1005057FC(&qword_1016957E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[4];
  sub_10050F848(a1, a1[3]);
  sub_100BAF69C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  else
  {
    v10[15] = 0;
    uint64_t v8 = KeyedDecodingContainer.decode(_:forKey:)();
    v10[14] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_100BAFA50()
{
  unint64_t result = qword_1016957C0;
  if (!qword_1016957C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957C0);
  }
  return result;
}

unint64_t sub_100BAFAA8()
{
  unint64_t result = qword_1016957C8;
  if (!qword_1016957C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957C8);
  }
  return result;
}

uint64_t sub_100BAFB00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BoardData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BoardData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BoardData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardData()
{
  return &type metadata for BoardData;
}

unsigned char *storeEnumTagSinglePayload for BoardData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BAFD34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardData.CodingKeys()
{
  return &type metadata for BoardData.CodingKeys;
}

unint64_t sub_100BAFD70()
{
  unint64_t result = qword_1016957D0;
  if (!qword_1016957D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957D0);
  }
  return result;
}

unint64_t sub_100BAFDC8()
{
  unint64_t result = qword_1016957D8;
  if (!qword_1016957D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957D8);
  }
  return result;
}

unint64_t sub_100BAFE20()
{
  unint64_t result = qword_1016957E0;
  if (!qword_1016957E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957E0);
  }
  return result;
}

uint64_t sub_100BAFE74(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static BoardViewEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t BoardViewEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FBF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardViewEvent.sessionGroup);
}

uint64_t static BoardViewEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FBF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardViewEvent.sessionGroup, a1);
}

void *BoardViewEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static BoardViewEvent.requiresDiagnosticsConsent;
}

uint64_t sub_100BAFF18(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static BoardViewEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t BoardViewEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardViewEvent.timestampGranularity);
}

uint64_t static BoardViewEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardViewEvent.timestampGranularity, a1);
}

uint64_t sub_100BAFFB0()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static BoardViewEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static BoardViewEvent.timeDurationGranularity);
  return static TimeDurationGranularity.seconds.getter();
}

uint64_t BoardViewEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC08, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardViewEvent.timeDurationGranularity);
}

uint64_t static BoardViewEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC08, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardViewEvent.timeDurationGranularity, a1);
}

uint64_t BoardViewEvent.boardData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardViewEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BoardViewEvent(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_101695860);
}

uint64_t BoardViewEvent.boardData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardViewEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardViewEvent.boardData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardViewEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardViewEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardViewEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardViewEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardViewEvent.timedData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardViewEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = type metadata accessor for BoardViewEvent(0);
  uint64_t v5 = a1 + *(int *)(v4 + 20);
  uint64_t v6 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + *(int *)(v4 + 24);
  uint64_t v8 = sub_1005057FC(&qword_1016703A8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104);

  return v9(v7, v2, v8);
}

uint64_t BoardViewEvent.Model.boardData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BoardViewEvent.Model(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BoardViewEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101695900);
}

uint64_t BoardViewEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardViewEvent.Model(0) + 24);
  uint64_t v4 = type metadata accessor for TimedData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardViewEvent.Model.init(eventData:boardData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t v13 = type metadata accessor for BoardViewEvent.Model(0);
  uint64_t v14 = a6 + *(int *)(v13 + 20);
  *(void *)uint64_t v14 = a2;
  *(void *)(v14 + 8) = a3;
  *(unsigned char *)(v14 + 16) = a4;
  uint64_t v15 = a6 + *(int *)(v13 + 24);
  uint64_t v16 = type metadata accessor for TimedData();
  id v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);

  return v17(v15, a5, v16);
}

uint64_t sub_100BB05F8()
{
  return qword_1011AC0C8[*v0];
}

uint64_t sub_100BB0614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB26A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB063C(uint64_t a1)
{
  unint64_t v2 = sub_100BB0908();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB0678(uint64_t a1)
{
  unint64_t v2 = sub_100BB0908();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardViewEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_1016957F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10050F848(a1, a1[3]);
  sub_100BB0908();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v15) = 0;
  type metadata accessor for EventData();
  sub_100633DC8(&qword_1016776F0, (void (*)(uint64_t))&type metadata accessor for EventData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    id v10 = (uint64_t *)(v3 + *(int *)(type metadata accessor for BoardViewEvent.Model(0) + 20));
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    LOBYTE(v10) = *((unsigned char *)v10 + 16);
    uint64_t v15 = v11;
    uint64_t v16 = v12;
    char v17 = (char)v10;
    v14[7] = 1;
    sub_100BAFAA8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v15) = 2;
    type metadata accessor for TimedData();
    sub_100633DC8(&qword_1016776F8, (void (*)(uint64_t))&type metadata accessor for TimedData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100BB0908()
{
  unint64_t result = qword_1016957F8;
  if (!qword_1016957F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016957F8);
  }
  return result;
}

uint64_t BoardViewEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31 = type metadata accessor for TimedData();
  uint64_t v29 = *(void *)(v31 - 8);
  __chkstk_darwin(v31, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v34 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1005057FC(&qword_101695800);
  uint64_t v32 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for BoardViewEvent.Model(0);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB0908();
  uint64_t v36 = v11;
  uint64_t v16 = v37;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  unint64_t v37 = v15;
  uint64_t v18 = v32;
  uint64_t v17 = v33;
  LOBYTE(v38) = 0;
  sub_100633DC8(&qword_101677708, (void (*)(uint64_t))&type metadata accessor for EventData);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v20 = v34;
  uint64_t v34 = (char *)v6;
  v19(v37, v20, v6);
  char v41 = 1;
  sub_100BAFA50();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v21 = v39;
  char v22 = v40;
  uint64_t v28 = v12;
  NSString v23 = &v37[*(int *)(v12 + 20)];
  *(void *)NSString v23 = v38;
  *((void *)v23 + 1) = v21;
  v23[16] = v22;
  LOBYTE(v38) = 2;
  sub_100633DC8(&qword_101677710, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v24 = v31;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v35);
  uint64_t v25 = (uint64_t)v37;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v37[*(int *)(v28 + 24)], v5, v24);
  sub_100BB0E08(v25, v30);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  return sub_100BB0E6C(v25);
}

uint64_t sub_100BB0E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BoardViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BB0E6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BoardViewEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BB0EC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BoardViewEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_100BB0EE0(void *a1)
{
  return BoardViewEvent.Model.encode(to:)(a1);
}

uint64_t sub_100BB0EF8@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FBF8, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardViewEvent.sessionGroup, a1);
}

uint64_t sub_100BB0F30@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC00, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardViewEvent.timestampGranularity, a1);
}

uint64_t sub_100BB0F68@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC08, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardViewEvent.timeDurationGranularity, a1);
}

uint64_t sub_100BB0FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + *(int *)(a1 + 20);
  uint64_t v7 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + *(int *)(a1 + 24);
  uint64_t v9 = sub_1005057FC(&qword_1016703A8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(v8, v4, v9);
}

uint64_t *initializeBufferWithCopyOfBuffer for BoardViewEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101670398);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101670410);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_1016703A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for BoardViewEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_1005057FC(&qword_1016703A8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t initializeWithCopy for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB1778);
}

uint64_t sub_100BB1778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1005057FC(&qword_101670398);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_1005057FC(&qword_101670410);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = sub_1005057FC(&qword_1016703A8);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for BoardViewEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB18E4);
}

uint64_t sub_100BB18E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1005057FC(&qword_101670398);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = sub_1005057FC(&qword_101670410);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = sub_1005057FC(&qword_1016703A8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

void sub_100BB1A48()
{
  sub_100634BF8();
  if (v0 <= 0x3F)
  {
    sub_100BB1B4C();
    if (v1 <= 0x3F)
    {
      sub_100634D2C();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100BB1B4C()
{
  if (!qword_101695870)
  {
    sub_100BAFA50();
    sub_100BAFAA8();
    unint64_t v0 = type metadata accessor for EventProperty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101695870);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for BoardViewEvent.Model(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventData();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    unsigned char v10[16] = v11[16];
    uint64_t v13 = (char *)a1 + v9;
    uint64_t v14 = (char *)a2 + v9;
    uint64_t v15 = type metadata accessor for TimedData();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for BoardViewEvent.Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for TimedData();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  uint64_t v11 = *(void *)(v10 + 8);
  *(void *)uint64_t v9 = *(void *)v10;
  *(void *)(v9 + 8) = v11;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  uint64_t v14 = type metadata accessor for TimedData();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  uint64_t v13 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *(void *)uint64_t v8 = *(void *)(a2 + v7);
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TimedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB2150);
}

uint64_t sub_100BB2150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for BoardViewEvent.Model(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB2294);
}

uint64_t sub_100BB2294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EventData();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TimedData();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_100BB23C4()
{
  uint64_t result = type metadata accessor for EventData();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimedData();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BoardViewEvent.Model.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB2560);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BoardViewEvent.Model.CodingKeys()
{
  return &type metadata for BoardViewEvent.Model.CodingKeys;
}

unint64_t sub_100BB259C()
{
  unint64_t result = qword_101695940;
  if (!qword_101695940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695940);
  }
  return result;
}

unint64_t sub_100BB25F4()
{
  unint64_t result = qword_101695948;
  if (!qword_101695948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695948);
  }
  return result;
}

unint64_t sub_100BB264C()
{
  unint64_t result = qword_101695950;
  if (!qword_101695950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695950);
  }
  return result;
}

uint64_t sub_100BB26A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746144746E657665 && a2 == 0xE900000000000061;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446472616F62 && a2 == 0xE900000000000061 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74614464656D6974 && a2 == 0xE900000000000061)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100BB2814(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for SessionGroup, static BoardEditEvent.sessionGroup, &enum case for SessionGroup.default(_:));
}

uint64_t BoardEditEvent.sessionGroup.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardEditEvent.sessionGroup);
}

uint64_t static BoardEditEvent.sessionGroup.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardEditEvent.sessionGroup, a1);
}

void *BoardEditEvent.requiresDiagnosticsConsent.unsafeMutableAddressor()
{
  return &static BoardEditEvent.requiresDiagnosticsConsent;
}

uint64_t sub_100BB28B8(uint64_t a1)
{
  return sub_100632C84(a1, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, static BoardEditEvent.timestampGranularity, &enum case for TimestampGranularity.hour(_:));
}

uint64_t BoardEditEvent.timestampGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardEditEvent.timestampGranularity);
}

uint64_t static BoardEditEvent.timestampGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardEditEvent.timestampGranularity, a1);
}

uint64_t sub_100BB2950()
{
  uint64_t v0 = type metadata accessor for TimeDurationGranularity();
  sub_100568B28(v0, static BoardEditEvent.timeDurationGranularity);
  sub_100556B74(v0, (uint64_t)static BoardEditEvent.timeDurationGranularity);
  return static TimeDurationGranularity.seconds.getter();
}

uint64_t BoardEditEvent.timeDurationGranularity.unsafeMutableAddressor()
{
  return sub_100632E04(&qword_10166FC20, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardEditEvent.timeDurationGranularity);
}

uint64_t static BoardEditEvent.timeDurationGranularity.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100632E98(&qword_10166FC20, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardEditEvent.timeDurationGranularity, a1);
}

uint64_t BoardEditEvent.boardData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for BoardEditEvent(uint64_t a1)
{
  return sub_100512D5C(a1, (uint64_t *)&unk_1016959E8);
}

uint64_t BoardEditEvent.boardData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 20);
  uint64_t v4 = sub_1005057FC(&qword_101670410);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardEditEvent.boardData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardEditEvent.drawableAddSummaryData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_101670418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardEditEvent.drawableAddSummaryData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 24);
  uint64_t v4 = sub_1005057FC(&qword_101670418);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardEditEvent.drawableAddSummaryData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardEditEvent.inputDeviceData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 28);
  uint64_t v4 = sub_1005057FC(&qword_101670420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardEditEvent.inputDeviceData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 28);
  uint64_t v4 = sub_1005057FC(&qword_101670420);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardEditEvent.inputDeviceData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardEditEvent.boardContentData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 32);
  uint64_t v4 = sub_1005057FC(&qword_101670428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardEditEvent.boardContentData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 32);
  uint64_t v4 = sub_1005057FC(&qword_101670428);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardEditEvent.boardContentData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardEditEvent.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 36);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardEditEvent.timedData.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent(0) + 36);
  uint64_t v4 = sub_1005057FC(&qword_1016703A8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

Freeform::SyncEvent::FetchedRecordZoneChanges::Deletion (__swiftcall *BoardEditEvent.timedData.modify())(CKRecordID recordID, Swift::String recordType)
{
  return SyncEvent.FetchedRecordZoneChanges.Deletion.init(recordID:recordType:);
}

uint64_t BoardEditEvent.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for EventProperty.required<A>(_:);
  uint64_t v3 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  uint64_t v4 = (int *)type metadata accessor for BoardEditEvent(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 104))(v5, v2, v6);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v7, v2, v8);
  uint64_t v9 = a1 + v4[7];
  uint64_t v10 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v9, v2, v10);
  uint64_t v11 = a1 + v4[8];
  uint64_t v12 = enum case for EventProperty.optional<A>(_:);
  uint64_t v13 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  uint64_t v14 = a1 + v4[9];
  uint64_t v15 = sub_1005057FC(&qword_1016703A8);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);

  return v16(v14, v2, v15);
}

uint64_t BoardEditEvent.Model.boardData.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for BoardEditEvent.Model(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for BoardEditEvent.Model(uint64_t a1)
{
  return sub_100512D5C(a1, qword_101695AA0);
}

uint64_t BoardEditEvent.Model.drawableAddSummaryData.getter()
{
  type metadata accessor for BoardEditEvent.Model(0);

  return swift_bridgeObjectRetain();
}

uint64_t BoardEditEvent.Model.inputDeviceData.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BoardEditEvent.Model(0) + 28));
}

uint64_t BoardEditEvent.Model.boardContentData.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for BoardEditEvent.Model(0) + 32));
  uint64_t v2 = *v1;
  sub_10051A320(*v1, v1[1]);
  return v2;
}

uint64_t BoardEditEvent.Model.timedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for BoardEditEvent.Model(0) + 36);
  uint64_t v4 = type metadata accessor for TimedData();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t BoardEditEvent.Model.init(eventData:boardData:drawableAddSummaryData:inputDeviceData:boardContentData:timedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v20 = type metadata accessor for EventData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(a9, a1, v20);
  uint64_t v21 = (int *)type metadata accessor for BoardEditEvent.Model(0);
  uint64_t v22 = a9 + v21[5];
  *(void *)uint64_t v22 = a2;
  *(void *)(v22 + 8) = a3;
  *(unsigned char *)(v22 + 16) = a4;
  *(void *)(a9 + v21[6]) = a5;
  *(unsigned char *)(a9 + v21[7]) = a6;
  NSString v23 = (void *)(a9 + v21[8]);
  *NSString v23 = a7;
  v23[1] = a8;
  long long v23[2] = a10;
  v23[3] = a11;
  uint64_t v24 = a9 + v21[9];
  uint64_t v25 = type metadata accessor for TimedData();
  UIAction_optional v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);

  return v26(v24, a12, v25);
}

unint64_t sub_100BB3550(char a1)
{
  unint64_t result = 0x746144746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461446472616F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x7665447475706E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x74614464656D6974;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100BB3630()
{
  return sub_100BB3550(*v0);
}

uint64_t sub_100BB3638@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB66C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB3660(uint64_t a1)
{
  unint64_t v2 = sub_100BB39FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB369C(uint64_t a1)
{
  unint64_t v2 = sub_100BB39FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BoardEditEvent.Model.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1005057FC(&qword_101695958);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB39FC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v17) = 0;
  type metadata accessor for EventData();
  sub_100633DC8(&qword_1016776F0, (void (*)(uint64_t))&type metadata accessor for EventData);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for BoardEditEvent.Model(0);
    uint64_t v11 = (uint64_t *)(v3 + v10[5]);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    LOBYTE(v11) = *((unsigned char *)v11 + 16);
    *(void *)&long long v17 = v12;
    *((void *)&v17 + 1) = v13;
    LOBYTE(v18) = (_BYTE)v11;
    char v19 = 1;
    sub_100BAFAA8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v17 = *(void *)(v3 + v10[6]);
    char v19 = 2;
    sub_100BAF140();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v17) = *(unsigned char *)(v3 + v10[7]);
    char v19 = 3;
    sub_100BB3A50();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v14 = (long long *)(v3 + v10[8]);
    long long v15 = v14[1];
    long long v17 = *v14;
    long long v18 = v15;
    char v19 = 4;
    sub_100BB3AA4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v17) = 5;
    type metadata accessor for TimedData();
    sub_100633DC8(&qword_1016776F8, (void (*)(uint64_t))&type metadata accessor for TimedData);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

unint64_t sub_100BB39FC()
{
  unint64_t result = qword_101695960;
  if (!qword_101695960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695960);
  }
  return result;
}

unint64_t sub_100BB3A50()
{
  unint64_t result = qword_101695968;
  if (!qword_101695968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695968);
  }
  return result;
}

unint64_t sub_100BB3AA4()
{
  unint64_t result = qword_101695970;
  if (!qword_101695970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695970);
  }
  return result;
}

uint64_t BoardEditEvent.Model.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = type metadata accessor for TimedData();
  uint64_t v28 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v3);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EventData();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  uint64_t v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1005057FC(&qword_101695978);
  uint64_t v31 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)type metadata accessor for BoardEditEvent.Model(0);
  __chkstk_darwin(v12, v13);
  long long v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050F848(a1, a1[3]);
  sub_100BB39FC();
  uint64_t v35 = v11;
  uint64_t v16 = (uint64_t)v36;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    return _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)a1);
  }
  uint64_t v27 = v5;
  uint64_t v36 = a1;
  uint64_t v17 = v32;
  LOBYTE(v37) = 0;
  sub_100633DC8(&qword_101677708, (void (*)(uint64_t))&type metadata accessor for EventData);
  long long v18 = v33;
  uint64_t v19 = v34;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v15, v18, v6);
  char v39 = 1;
  sub_100BAFA50();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v20 = *((void *)&v37 + 1);
  char v21 = v38;
  uint64_t v22 = &v15[v12[5]];
  *(void *)uint64_t v22 = v37;
  *((void *)v22 + 1) = v20;
  v22[16] = v21;
  char v39 = 2;
  sub_100BAF0E8();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)&v15[v12[6]] = v37;
  char v39 = 3;
  sub_100BB4118();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v15[v12[7]] = v37;
  char v39 = 4;
  sub_100BB416C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  NSString v23 = &v15[v12[8]];
  long long v24 = v38;
  *(_OWORD *)NSString v23 = v37;
  *((_OWORD *)v23 + 1) = v24;
  LOBYTE(v37) = 5;
  sub_100633DC8(&qword_101677710, (void (*)(uint64_t))&type metadata accessor for TimedData);
  uint64_t v25 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v19);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v15[v12[9]], v27, v25);
  sub_100BB41C0((uint64_t)v15, v29);
  _s8Freeform26AnyCRLCommandChangeContextVwxx_0((uint64_t)v36);
  return sub_100BB4224((uint64_t)v15);
}

unint64_t sub_100BB4118()
{
  unint64_t result = qword_101695980;
  if (!qword_101695980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695980);
  }
  return result;
}

unint64_t sub_100BB416C()
{
  unint64_t result = qword_101695988;
  if (!qword_101695988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101695988);
  }
  return result;
}

uint64_t sub_100BB41C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BoardEditEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BB4224(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BoardEditEvent.Model(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BB4280@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BoardEditEvent.Model.init(from:)(a1, a2);
}

uint64_t sub_100BB4298(void *a1)
{
  return BoardEditEvent.Model.encode(to:)(a1);
}

uint64_t sub_100BB42B0@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC10, (uint64_t (*)(void))&type metadata accessor for SessionGroup, (uint64_t)static BoardEditEvent.sessionGroup, a1);
}

uint64_t sub_100BB42E8@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC18, (uint64_t (*)(void))&type metadata accessor for TimestampGranularity, (uint64_t)static BoardEditEvent.timestampGranularity, a1);
}

uint64_t sub_100BB4320@<X0>(uint64_t a1@<X8>)
{
  return sub_100633FA8(&qword_10166FC20, (uint64_t (*)(void))&type metadata accessor for TimeDurationGranularity, (uint64_t)static BoardEditEvent.timeDurationGranularity, a1);
}

uint64_t sub_100BB4358@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = enum case for EventProperty.required<A>(_:);
  uint64_t v5 = sub_1005057FC(&qword_101670398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(a2, v4, v5);
  uint64_t v6 = a2 + a1[5];
  uint64_t v7 = sub_1005057FC(&qword_101670410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v6, v4, v7);
  uint64_t v8 = a2 + a1[6];
  uint64_t v9 = sub_1005057FC(&qword_101670418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v8, v4, v9);
  uint64_t v10 = a2 + a1[7];
  uint64_t v11 = sub_1005057FC(&qword_101670420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v10, v4, v11);
  uint64_t v12 = a2 + a1[8];
  uint64_t v13 = enum case for EventProperty.optional<A>(_:);
  uint64_t v14 = sub_1005057FC(&qword_101670428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  uint64_t v15 = a2 + a1[9];
  uint64_t v16 = sub_1005057FC(&qword_1016703A8);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104);

  return v17(v15, v4, v16);
}

uint64_t *initializeBufferWithCopyOfBuffer for BoardEditEvent(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1005057FC(&qword_101670398);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1005057FC(&qword_101670410);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_1005057FC(&qword_101670418);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = a3[7];
    uint64_t v17 = (char *)a1 + v16;
    long long v18 = (char *)a2 + v16;
    uint64_t v19 = sub_1005057FC(&qword_101670420);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    char v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = sub_1005057FC(&qword_101670428);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    uint64_t v24 = a3[9];
    uint64_t v25 = (char *)a1 + v24;
    UIAction_optional v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1005057FC(&qword_1016703A8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}