void sub_10014CC34(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t vars8;

  v4 = [self defaultManager];
  sub_100535854(4, a1, 0, 0, 0, 1, *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), 0, 0);
}

void sub_10014CCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DOCOperationItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  v7 = (void **)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v25 - v8);
  sub_10009B208(a2, (uint64_t)&v29);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    v10 = v28;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (!All)
    {

      return;
    }
    unint64_t v12 = All;
    if (All >> 62)
    {
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_5:
        unint64_t v27 = v12;
        v29 = _swiftEmptyArrayStorage;
        sub_100190F0C(0, v13 & ~(v13 >> 63), 0);
        if (v13 < 0)
        {
          __break(1u);
          return;
        }
        v26 = v10;
        v14 = v29;
        if ((v27 & 0xC000000000000001) != 0)
        {
          for (uint64_t i = 0; i != v13; ++i)
          {
            uint64_t *v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_storeEnumTagMultiPayload();
            v29 = v14;
            unint64_t v17 = v14[2];
            unint64_t v16 = v14[3];
            if (v17 >= v16 >> 1)
            {
              sub_100190F0C(v16 > 1, v17 + 1, 1);
              v14 = v29;
            }
            v14[2] = v17 + 1;
            sub_10010C430((uint64_t)v9, (uint64_t)v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v17);
          }
        }
        else
        {
          v18 = (void **)(v27 + 32);
          do
          {
            v19 = *v18;
            *v7 = *v18;
            swift_storeEnumTagMultiPayload();
            v29 = v14;
            unint64_t v21 = v14[2];
            unint64_t v20 = v14[3];
            id v22 = v19;
            if (v21 >= v20 >> 1)
            {
              sub_100190F0C(v20 > 1, v21 + 1, 1);
              v14 = v29;
            }
            v14[2] = v21 + 1;
            sub_10010C430((uint64_t)v7, (uint64_t)v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v21);
            ++v18;
            --v13;
          }
          while (v13);
        }
        swift_bridgeObjectRelease();
        v10 = v26;
        goto LABEL_20;
      }
    }
    swift_bridgeObjectRelease();
    v14 = _swiftEmptyArrayStorage;
LABEL_20:
    id v23 = [self defaultManager];
    id v24 = *(id *)&v10[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
    sub_100535854(4, (uint64_t)v14, 0, 0, 0, 1, v24, 0, 0);

    swift_bridgeObjectRelease();
  }
}

void sub_10014D03C(unint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)&aBlock);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    uint64_t v3 = v38;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_getObjectType();
        uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
        swift_unknownObjectRelease();
        if (!v5)
        {

          return;
        }
        uint64_t v6 = *(void **)&v3[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
        if (v6)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v7 = swift_dynamicCastClass();
          if (v7)
          {
            uint64_t v8 = *(void **)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
            swift_unknownObjectRetain();
            id v9 = [v8 identifier];
            v10 = (void *)DOCDocumentSourceIdentifierSearch;
            uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v13 = v12;
            if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
            {
              id v23 = v10;

              swift_bridgeObjectRelease_n();
              goto LABEL_22;
            }
            char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
            id v17 = v10;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v16)
            {
LABEL_22:
              id v24 = *(void **)&v3[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
              if (v24)
              {
                uint64_t v25 = swift_allocObject();
                *(void *)(v25 + 16) = v3;
                *(void *)(v25 + 24) = v5;
                v36 = sub_100162A0C;
                uint64_t v37 = v25;
                aBlock = _NSConcreteStackBlock;
                uint64_t v33 = 1107296256;
                v34 = sub_100411BA4;
                v35 = &unk_100692E70;
                v26 = _Block_copy(&aBlock);
                unint64_t v27 = v3;
                id v28 = v5;
                swift_release();
                [v24 getCellFor:v28 :v26];

                swift_unknownObjectRelease();
                _Block_release(v26);
                return;
              }
              goto LABEL_24;
            }
          }
          else
          {
            swift_unknownObjectRetain();
          }
          [v6 beginRenameOf:v5];
LABEL_24:

          swift_unknownObjectRelease();
          return;
        }
        v18 = *(void **)&v3[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
        if (v18)
        {
          uint64_t v19 = swift_allocObject();
          *(void *)(v19 + 16) = v5;
          *(void *)(v19 + 24) = v3;
          v36 = sub_100162A04;
          uint64_t v37 = v19;
          aBlock = _NSConcreteStackBlock;
          uint64_t v33 = 1107296256;
          v34 = sub_100411BA4;
          v35 = &unk_100692E20;
          unint64_t v20 = _Block_copy(&aBlock);
          unint64_t v21 = v3;
          id v22 = v5;
          swift_unknownObjectRetain();
          swift_release();
          [v18 getCellFor:v22 :v20];

          _Block_release(v20);
          swift_unknownObjectRelease();
          return;
        }
        v29 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
        *(void *)(v30 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        *(void *)(v30 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
        *(void *)(v30 + 32) = v5;
        id v31 = v5;
        os_log(_:dso:log:type:_:)();

        goto LABEL_28;
      }
    }

LABEL_28:
    swift_bridgeObjectRelease();
  }
}

void sub_10014D524(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v6 = swift_dynamicCastClass();
    if (v6)
    {
      uint64_t v7 = v6;
      type metadata accessor for DOCInlineRenameController();
      uint64_t v8 = swift_allocObject();
      id v15 = v5;
      id v9 = a3;
      id v10 = a1;
      uint64_t v11 = sub_10020AA64(v7, (uint64_t)v10, (uint64_t)v9, v8);

      uint64_t v12 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
      *(void *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController) = v11;
      swift_retain();
      swift_release();
      if (!*(void *)(v7 + v12)) {
        *(unsigned char *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) = 0;
      }
      if (*(void *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu))
      {
        uint64_t v13 = (void (**)())(v7
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
        uint64_t v14 = *(void *)(v7
                        + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing);
        *uint64_t v13 = sub_100162A14;
        v13[1] = (void (*)())v11;
        sub_1000A7258(v14);
      }
      else
      {
        swift_retain_n();
        sub_100422E2C();

        swift_release_n();
      }
    }
  }
}

void sub_10014D6AC(void *a1, void *a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v6 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x1F8))();
    if (v6)
    {
      uint64_t v7 = (char *)v6;
      uint64_t v8 = a1;
      sub_100094988();
      id v9 = *(void **)&v7[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
      swift_unknownObjectRetain();
    }
    else
    {
      id v10 = a1;
      id v9 = 0;
    }
    uint64_t v11 = *(void *)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy);
    id v12 = objc_allocWithZone((Class)type metadata accessor for DOCRenameViewController());
    swift_unknownObjectRetain();
    id v13 = a2;
    swift_unknownObjectRetain();
    uint64_t v14 = sub_1002EADFC(v13, v11, v9);
    sub_1002E97A4(*(void **)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), 1);

    swift_unknownObjectRelease();
  }
}

void sub_10014D7FC(unint64_t a1, uint64_t a2, void *a3)
{
  sub_10009B208(a2, (uint64_t)aBlock);
  type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v5 = (void *)aBlock[6];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_13:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v7 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v7)
  {
    id v8 = [a3 bundleIdentifier];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      id v13 = [self defaultManager];
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = v7;
      v14[3] = v10;
      v14[4] = v12;
      v14[5] = v5;
      aBlock[4] = sub_10016212C;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B6B50;
      aBlock[3] = &unk_100692010;
      id v15 = _Block_copy(aBlock);
      id v16 = v7;
      id v17 = v5;
      swift_release();
      [v13 fetchURLForItem:v16 completionHandler:v15];
      _Block_release(v15);
    }
    else
    {
    }
  }
  else
  {
  }
}

uint64_t sub_10014DA58(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v34 = a1;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v14 = __chkstk_darwin(v12);
  id v15 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v31 - v17;
  if (a2)
  {
    swift_errorRetain();
    uint64_t v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10059B760;
    *(void *)(v20 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v20 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v20 + 32) = a3;
    id v21 = a3;
    uint64_t v22 = _convertErrorToNSError(_:)();
    *(void *)(v20 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 72) = v22;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    uint64_t v32 = a5;
    uint64_t v33 = a3;
    uint64_t v31 = a4;
    uint64_t v24 = v16;
    sub_1000CBC00(v34, (uint64_t)v11, &qword_1007076B0);
    uint64_t v25 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v12) == 1)
    {
      return sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    }
    else
    {
      v26 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
      v26(v18, v11, v12);
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v15, v18, v12);
      unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v28 = swift_allocObject();
      v26((char *)(v28 + v27), v15, v12);
      v29 = (void *)(v28 + ((v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v30 = v32;
      void *v29 = v31;
      v29[1] = v30;
      swift_bridgeObjectRetain();
      static LaunchUtils.tryOpeningInApp(applicationIdentifier:url:item:urlManagedState:requireOpenIn:alertPresenting:completionBlock:)();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v18, v12);
    }
  }
}

uint64_t sub_10014DE38(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((result & 1) == 0)
  {
    uint64_t v7 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0230;
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v9 = sub_100073F48();
    *(void *)(v8 + 64) = v9;
    *(void *)(v8 + 32) = 0xD000000000000023;
    *(void *)(v8 + 40) = 0x80000001005D6900;
    URL._bridgeToObjectiveC()((NSURL *)0xD000000000000023);
    uint64_t v11 = v10;
    *(void *)(v8 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    uint64_t v12 = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v8 + 72) = v11;
    *(void *)(v8 + 136) = &type metadata for String;
    *(void *)(v8 + 144) = v9;
    *(void *)(v8 + 104) = v12;
    *(void *)(v8 + 112) = a3;
    *(void *)(v8 + 120) = a4;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10014DF8C(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v12, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v13 + 1)) {
    goto LABEL_16;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v11 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v11 + 56) + 32 * v1, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v13 + 1))
  {
LABEL_16:
    sub_1000CBBA4((uint64_t)&v12, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v11 >> 62) {
    goto LABEL_34;
  }
  uint64_t v3 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_32:
    swift_bridgeObjectRelease_n();
    return v3;
  }
  while (1)
  {
    if ((v11 & 0xC000000000000001) != 0)
    {
      uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
    if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      break;
    }
    uint64_t v5 = *(void **)(v11 + 32);
    swift_unknownObjectRetain();
LABEL_14:
    swift_bridgeObjectRelease();
    if ([v5 isFolder])
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = 4;
    while (1)
    {
      uint64_t v7 = v6 - 4;
      if ((v11 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_33;
      }
LABEL_27:
      if ([v8 isTrashed])
      {
        swift_unknownObjectRelease();
      }
      else
      {
        unsigned __int8 v10 = [v8 isAnyParentTrashed];
        swift_unknownObjectRelease();
        if ((v10 & 1) == 0)
        {
          uint64_t v3 = 1;
LABEL_31:
          swift_unknownObjectRelease();
          goto LABEL_32;
        }
      }
      ++v6;
      if (v9 == v3)
      {
        uint64_t v3 = 0;
        goto LABEL_31;
      }
    }
    uint64_t v8 = *(void **)(v11 + 8 * v6);
    swift_unknownObjectRetain();
    uint64_t v9 = v6 - 3;
    if (!__OFADD__(v7, 1)) {
      goto LABEL_27;
    }
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = result;
    if (!result) {
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

void sub_10014E214(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B208(a2, (uint64_t)v21);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    uint64_t v7 = v20;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (All)
    {
      uint64_t v9 = All;
      [*(id *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] copy];
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
      swift_dynamicCast();
      unsigned __int8 v10 = v20;
      [v20 setInteractionMode:3];
      [v10 setForPickingDocuments:0];
      UUID.init()();
      UUID.uuidString.getter();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v10 setSceneIdentifier:v11];

      [v10 setForMovingDocuments:1];
      long long v12 = (objc_class *)type metadata accessor for DOCPickerContext();
      long long v13 = (char *)objc_allocWithZone(v12);
      *(void *)&v13[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
      *(void *)&v13[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
      *(void *)&v13[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = v9;
      v19.receiver = v13;
      v19.super_class = v12;
      uint64_t v14 = v10;
      id v15 = [super init];
      id v16 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentPickerViewController());
      id v17 = DOCDocumentPickerViewController.init(configuration:context:)(v14, v15);
      [*(id *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] presentViewController:v17 animated:1 completion:0];
    }
    else
    {
    }
  }
}

uint64_t sub_10014E4F0(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_22;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_22:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_26;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_25;
        }
LABEL_19:
        if ([v6 isTrashed])
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v8 = [v6 isAnyParentTrashed];
          swift_unknownObjectRelease();
          if ((v8 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_27;
        }
      }
      uint64_t v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_10014E704(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v51 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UTType();
  __chkstk_darwin(v8 - 8);
  v50 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DOCSmartFolderInputFile();
  uint64_t v10 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  v48 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009B208(a2, (uint64_t)v54);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    long long v12 = v53;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (!All)
    {

      return;
    }
    [*(id *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
    swift_dynamicCast();
    long long v13 = v53;
    id v14 = [a3 fpfs_fpItem];
    if (!v14)
    {

      swift_bridgeObjectRelease();
      return;
    }
    id v15 = v14;
    v47 = v13;
    id v16 = self;
    unint64_t v17 = All;
    swift_bridgeObjectRetain();
    id v18 = v15;
    id v19 = [v16 shared];
    id v20 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    id v46 = v18;
    id v21 = sub_100198CE0(v17, v18, v19);
    id v22 = [self defaultManager];
    v39 = v21;
    [v22 scheduleAction:v21];

    id v40 = v12;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23)
      {
LABEL_6:
        uint64_t v45 = type metadata accessor for DOCSmartFolderManager();
        if (v23 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v24 = 0;
        v42 = (void (**)(char *, uint64_t))(v5 + 8);
        unint64_t v43 = All & 0xC000000000000001;
        v41 = (void (**)(char *, uint64_t))(v10 + 8);
        uint64_t v44 = v23;
        uint64_t v25 = v48;
        do
        {
          if (v43) {
            id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v26 = *(id *)(All + 8 * v24 + 32);
          }
          unint64_t v27 = v26;
          ++v24;
          id v28 = [v26 displayName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v29 = [v27 contentType];
          static UTType._unconditionallyBridgeFromObjectiveC(_:)();

          Date.init()();
          DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)();
          uint64_t v30 = (void *)static DOCSmartFolderManager.sharedManager.getter();
          id v31 = v46;
          dispatch thunk of DOCSmartFolderManager.register(savedFile:in:)();

          id v32 = [v47 hostIdentifier];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v33 = v31;
          Date.init()();
          id v34 = objc_allocWithZone((Class)DOCHotFolderEvent);
          NSString v35 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v37 = [v34 initWithAppBundleIdentifier:v35 folderItem:v33 type:1 lastUsedDate:isa frecency:1.0];

          (*v42)(v7, v51);
          v38 = (void *)static DOCSmartFolderManager.sharedManager.getter();
          DOCSmartFolderManager.register(event:)();

          (*v41)(v25, v49);
        }
        while (v44 != v24);
      }
    }

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10014ECB0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1000CBC00(a1, (uint64_t)&v16, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v17 + 1)) {
    goto LABEL_21;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_22:
    char v12 = 0;
    return v12 & 1;
  }
  if (*(void *)(v15 + 16) && (uint64_t v4 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v5 & 1) != 0))
  {
    sub_10009B208(*(void *)(v15 + 56) + 32 * v4, (uint64_t)&v16);
  }
  else
  {
    long long v16 = 0u;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_21:
    sub_1000CBBA4((uint64_t)&v16, (uint64_t *)&unk_100705D60);
    goto LABEL_22;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_22;
  }
  if (v15 >> 62) {
    goto LABEL_26;
  }
  uint64_t v6 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  do
  {
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = v7 - 4;
      if ((v15 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v8, 1)) {
        goto LABEL_25;
      }
LABEL_18:
      unsigned __int8 v11 = [v9 isTrashed];
      swift_unknownObjectRelease();
      if (v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_22;
      }
      ++v7;
      if (v10 == v6) {
        goto LABEL_20;
      }
    }
    uint64_t v9 = *(void **)(v15 + 8 * v7);
    swift_unknownObjectRetain();
    uint64_t v10 = v7 - 3;
    if (!__OFADD__(v8, 1)) {
      goto LABEL_18;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14 <= 0) {
      goto LABEL_29;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  }
  while (v6);
LABEL_20:
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  char v12 = sub_10015AD48(v15, a3);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return v12 & 1;
}

void sub_10014EF04(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_10014EF10(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v13, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_25;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v12 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v12 + 56) + 32 * v1, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_25:
    sub_1000CBBA4((uint64_t)&v13, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v12 >> 62) {
      goto LABEL_29;
    }
    uint64_t v3 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v12 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_28;
        }
LABEL_17:
        if (([v6 isTrashed] & 1) != 0
          || ([v6 isAnyParentTrashed] & 1) != 0
          || (id v8 = objc_msgSend(v6, "fpfs_fpItem"),
              id v9 = [v8 favoriteRank],
              v9,
              v8,
              v9))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v10 = [v6 doc_isCollaborationInvitation];
          swift_unknownObjectRelease();
          if ((v10 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_30;
        }
      }
      uint64_t v6 = *(void **)(v12 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_17;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_10014F178(unint64_t a1, uint64_t a2)
{
}

void sub_10014F184(unint64_t a1, uint64_t a2, SEL *a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v6 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v6)
  {
    id v7 = [self sharedManager];
    [v7 *a3:v6:0];
  }
}

uint64_t sub_10014F2E0(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v13, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v14 + 1)) {
    goto LABEL_24;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v12 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v12 + 56) + 32 * v1, (uint64_t)&v13);
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v14 + 1))
  {
LABEL_24:
    sub_1000CBBA4((uint64_t)&v13, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v12 >> 62) {
      goto LABEL_28;
    }
    uint64_t v3 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v12 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_27;
        }
LABEL_19:
        if (([v6 isTrashed] & 1) != 0
          || ([v6 isAnyParentTrashed] & 1) != 0
          || (id v8 = objc_msgSend(v6, "fpfs_fpItem"),
              id v9 = [v8 favoriteRank],
              v9,
              v8,
              !v9))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v10 = [v6 doc_isCollaborationInvitation];
          swift_unknownObjectRelease();
          if ((v10 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_29;
        }
      }
      uint64_t v6 = *(void **)(v12 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void *sub_10014F548(unint64_t a1, char a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = _swiftEmptyArrayStorage;
  if (v4)
  {
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v4 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v6 = 0;
      int v7 = a2 & 1;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v8 = *(id *)(a1 + 8 * v6 + 32);
        }
        id v9 = v8;
        ++v6;
        [objc_allocWithZone((Class)NSItemProvider) init];
        NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(v9, 2u, 1, v7);

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v4 != v6);
      return _swiftEmptyArrayStorage;
    }
  }
  return result;
}

uint64_t sub_10014F6A4(unint64_t a1, uint64_t a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned __int8 v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v39 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  v38 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock = (void **)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v46 = v4;
  uint64_t v47 = v3;
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  v42 = v10;
  uint64_t v43 = v8;
  if (v12)
  {
    if (v12 < 1) {
      goto LABEL_23;
    }
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a1 + 8 * i + 32);
      }
      long long v16 = v15;
      id v17 = [v15 fileProviderItem:v38];

      if (v17)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    id v18 = aBlock;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v18 = _swiftEmptyArrayStorage;
  }
  id v19 = [self defaultPermission];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v21 = [v19 dataOwnerStateForItems:isa];

  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = _swiftEmptyArrayStorage;
  if (v21 == (id)1) {
    uint64_t v23 = 2;
  }
  else {
    uint64_t v23 = v21 == (id)2;
  }
  uint64_t v24 = self;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v22 + 16;
  *(void *)(v25 + 24) = v18;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_10016288C;
  *(void *)(v26 + 24) = v25;
  v54 = sub_1000879B8;
  v55 = (void *)v26;
  aBlock = _NSConcreteStackBlock;
  uint64_t v51 = 1107296256;
  v52 = sub_100087990;
  v53 = &unk_100692BC8;
  unint64_t v27 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v24 _performAsDataOwner:v23 block:v27];
  _Block_release(v27);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v29 = v39;
    uint64_t v30 = v38;
    uint64_t v31 = v40;
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v38, enum case for DispatchQoS.QoSClass.default(_:), v40);
    id v32 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
    sub_1000CBC00(v41, (uint64_t)v49, (uint64_t *)&unk_100705D60);
    id v33 = (void *)swift_allocObject();
    v33[2] = v21;
    v33[3] = v22;
    v33[4] = v18;
    sub_1000516C4((uint64_t)v49, (uint64_t)(v33 + 5));
    v54 = sub_100162930;
    v55 = v33;
    aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    v52 = sub_1000666D8;
    v53 = &unk_100692C18;
    id v34 = _Block_copy(&aBlock);
    swift_retain();
    NSString v35 = v42;
    static DispatchQoS.unspecified.getter();
    v48 = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    v36 = v44;
    uint64_t v37 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v37);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, v45);
    swift_release();
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

void sub_10014FD78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v61 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  v60 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v9 - 8);
  v58 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v11 - 8);
  v66 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v53 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  v65 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  __chkstk_darwin(v14);
  v55 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a2 + 16;
  if (a1 == 1) {
    uint64_t v17 = 2;
  }
  else {
    uint64_t v17 = a1 == 2;
  }
  id v18 = self;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  id v20 = (void *)swift_allocObject();
  v20[2] = sub_100162950;
  v20[3] = v19;
  v73 = sub_100162A48;
  v74 = v20;
  aBlock = _NSConcreteStackBlock;
  uint64_t v70 = 1107296256;
  v71 = sub_100087990;
  v72 = &unk_100692C90;
  id v21 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v18 _performAsDataOwner:v17 block:v21];
  _Block_release(v21);
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v21)
  {
    __break(1u);
    goto LABEL_23;
  }
  id v22 = [v18 generalPasteboard];
  if ([v22 respondsToSelector:"_changeCountIgnoringPinningActivity"]) {
    id v20 = [v22 _changeCountIgnoringPinningActivity];
  }
  else {
    id v20 = 0;
  }

  aBlock = (void **)_swiftEmptyArrayStorage;
  if (a3 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (v23) {
      goto LABEL_10;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    id v28 = (void **)_swiftEmptyArrayStorage;
    goto LABEL_25;
  }
  uint64_t v23 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_24;
  }
LABEL_10:
  if (v23 < 1)
  {
    __break(1u);
    goto LABEL_43;
  }
  v62 = v20;
  uint64_t v63 = a1;
  uint64_t v64 = a4;
  uint64_t v67 = v19;
  for (uint64_t i = 0; i != v23; ++i)
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v26 = *(id *)(a3 + 8 * i + 32);
    }
    unint64_t v27 = v26;
    if (([v26 isFolder] & 1) != 0
      || ([v27 isCloudItem] & 1) == 0
      || ([v27 isDownloaded] & 1) != 0)
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  id v28 = aBlock;
  uint64_t v19 = v67;
  a1 = v63;
  a4 = v64;
  id v20 = v62;
LABEL_25:
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a3;
  *(void *)(v29 + 24) = a1;
  if (((unint64_t)v28 & 0x8000000000000000) != 0 || ((unint64_t)v28 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (v38 > 0) {
      goto LABEL_28;
    }
  }
  else
  {
    uint64_t v30 = (uint64_t)v28[2];
    swift_bridgeObjectRetain();
    if (v30 > 0)
    {
LABEL_28:
      id v31 = objc_allocWithZone((Class)FPDownloadOperation);
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_release();
      id v33 = [v31 initWithItems:isa];

      id v34 = (void *)swift_allocObject();
      v34[2] = v20;
      v34[3] = sub_1001629A0;
      v34[4] = v29;
      v73 = sub_1001629E0;
      v74 = v34;
      aBlock = _NSConcreteStackBlock;
      uint64_t v70 = 1107296256;
      v71 = sub_1000666D8;
      v72 = &unk_100692D08;
      NSString v35 = _Block_copy(&aBlock);
      id v36 = v33;
      swift_retain();
      sub_1000C0640((uint64_t)sub_1001629E0);
      swift_release();
      [v36 setCompletionBlock:v35];
      _Block_release(v35);

      swift_release();
      id v37 = [self defaultManager];
      [v37 scheduleAction:v36];

      goto LABEL_31;
    }
  }
  swift_release();
  sub_100150804(a3, a1);
LABEL_31:
  sub_1000CBC00(a4, (uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
  if (!v72)
  {
    swift_release();
    sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
LABEL_41:
    swift_release();
    return;
  }
  type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_release();
    goto LABEL_41;
  }
  uint64_t v39 = v68;
  uint64_t v40 = *(void **)&v68[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v41 = swift_dynamicCastClass();
  if (!v41)
  {
    swift_release();
    swift_release();

    return;
  }
  uint64_t v42 = v41;
  uint64_t v67 = v19;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v65, enum case for DOCAnalyticsActionEvent.Action.copy(_:), v54);
  uint64_t v43 = *(void **)&v39[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  swift_bridgeObjectRetain();
  id v44 = v40;
  id v45 = v43;
  DOCAnalyticsActionEvent.FileProvider.init(items:)();
  id v46 = [self mainBundle];
  id v47 = [v46 bundleIdentifier];

  if (v47)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v48 = [*(id *)(v42 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
  DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
  uint64_t v49 = (void **)(v42 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  uint64_t v24 = (char *)*v49;
  if ((unint64_t)*v49 < 3)
  {
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v60, *(unsigned int *)*(&off_100693050 + (void)v24), v61);
    v50 = v55;
    DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
    type metadata accessor for DOCAnalyticsManager();
    uint64_t v51 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendActionEvent(_:)();
    swift_release();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v50, v57);
    goto LABEL_41;
  }
LABEL_43:
  v68 = v24;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
}

void sub_100150744()
{
  id v0 = [self generalPasteboard];
  swift_beginAccess();
  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 setItemProviders:isa];
}

uint64_t sub_100150804(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10014F548(a1, 0);
  if (a2 == 1) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = a2 == 2;
  }
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1001629EC;
  *(void *)(v7 + 24) = v6;
  v11[4] = sub_100162A48;
  v11[5] = v7;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100087990;
  v11[3] = &unk_100692D80;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v5 _performAsDataOwner:v4 block:v8];
  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_100150988()
{
  id v0 = [self generalPasteboard];
  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v0 setItemProviders:isa];
}

void sub_100150A28(id a1, void (*a2)(void))
{
  id v4 = [self generalPasteboard];
  if ([v4 respondsToSelector:"_changeCountIgnoringPinningActivity"])
  {
    id v5 = [v4 _changeCountIgnoringPinningActivity];

    if (v5 != a1) {
      return;
    }
    goto LABEL_3;
  }

  if (!a1) {
LABEL_3:
  }
    a2();
}

BOOL sub_100150ACC(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v6, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v7 + 1)) {
    goto LABEL_12;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v5 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v5 + 56) + 32 * v1, (uint64_t)&v6);
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1))
  {
LABEL_12:
    sub_1000CBBA4((uint64_t)&v6, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return (unint64_t)(v3 - 1) < 0x3E8;
}

void sub_100150C20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009B208(a2, (uint64_t)v11);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (All)
    {
      unint64_t v6 = All;
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = v10;
      if (a3)
      {
        swift_unknownObjectRetain_n();
        uint64_t v8 = v10;
        swift_bridgeObjectRetain();
        sub_100150D68(a3, v6, v8);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        id v9 = v10;
        sub_10015B400(a1, (unint64_t)sub_100162668, v7);
        swift_release();
      }
    }
    else
    {
    }
  }
}

void sub_100150D68(uint64_t a1, unint64_t a2, char *a3)
{
  v83 = a3;
  uint64_t v5 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v12 - 8);
  v76 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v74 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v82 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v77 = *(void *)(v16 - 8);
  uint64_t v78 = v16;
  __chkstk_darwin(v16);
  v75 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for DOCOperationItem();
  uint64_t v18 = *(void *)(v84 - 8);
  uint64_t v19 = __chkstk_darwin(v84);
  id v21 = (void **)((char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19);
  uint64_t v23 = (uint64_t *)((char *)&v68 - v22);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v80 = *(void *)(v24 - 8);
  uint64_t v81 = v24;
  __chkstk_darwin(v24);
  v79 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_getObjectType();
    id v26 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    if (v26)
    {
      v72 = v11;
      id v73 = v26;
      unint64_t v27 = self;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      LODWORD(v27) = [v27 isAnyFPItemAFault:isa];

      if (!v27 || (DOCIsNetworkReachable() & 1) != 0)
      {
        uint64_t v68 = v6;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t v30 = _swiftEmptyArrayStorage;
        uint64_t v70 = v8;
        uint64_t v71 = v5;
        uint64_t v69 = v14;
        if (v29)
        {
          v86 = _swiftEmptyArrayStorage;
          sub_100190F0C(0, v29 & ~(v29 >> 63), 0);
          if (v29 < 0)
          {
            __break(1u);
            goto LABEL_31;
          }
          uint64_t v30 = v86;
          if ((a2 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v29; ++i)
            {
              *uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              swift_storeEnumTagMultiPayload();
              v86 = v30;
              unint64_t v34 = v30[2];
              unint64_t v33 = v30[3];
              if (v34 >= v33 >> 1)
              {
                sub_100190F0C(v33 > 1, v34 + 1, 1);
                uint64_t v30 = v86;
              }
              v30[2] = v34 + 1;
              sub_10010C430((uint64_t)v23, (uint64_t)v30+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v34);
            }
          }
          else
          {
            id v36 = (void **)(a2 + 32);
            do
            {
              unint64_t v37 = a2;
              uint64_t v38 = *v36;
              *id v21 = *v36;
              swift_storeEnumTagMultiPayload();
              v86 = v30;
              unint64_t v40 = v30[2];
              unint64_t v39 = v30[3];
              id v41 = v38;
              if (v40 >= v39 >> 1)
              {
                sub_100190F0C(v39 > 1, v40 + 1, 1);
                uint64_t v30 = v86;
              }
              v30[2] = v40 + 1;
              sub_10010C430((uint64_t)v21, (uint64_t)v30+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v40);
              ++v36;
              --v29;
              a2 = v37;
            }
            while (v29);
          }
        }
        id v42 = [self defaultManager];
        uint64_t v43 = v83;
        id v44 = *(void **)&v83[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = v43;
        id v46 = v73;
        id v47 = v43;
        sub_100535854(2, (uint64_t)v30, v73, 1, 2, 0, v44, (void (*)(void))sub_10016269C, v45);

        swift_release();
        swift_bridgeObjectRelease();
        id v48 = *(void **)&v47[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
        id v49 = [v48 hostIdentifier];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v50 = v46;
        uint64_t v51 = v79;
        Date.init()();
        id v52 = objc_allocWithZone((Class)DOCHotFolderEvent);
        NSString v53 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class v54 = Date._bridgeToObjectiveC()().super.isa;
        id v55 = [v52 initWithAppBundleIdentifier:v53 folderItem:v50 type:2 lastUsedDate:v54 frecency:1.0];

        (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v81);
        type metadata accessor for DOCSmartFolderManager();
        uint64_t v56 = (void *)static DOCSmartFolderManager.sharedManager.getter();
        DOCSmartFolderManager.register(event:)();

        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v57 = swift_dynamicCastClass();
        if (!v57)
        {

          return;
        }
        uint64_t v58 = v57;
        (*(void (**)(char *, void, uint64_t))(v74 + 104))(v82, enum case for DOCAnalyticsActionEvent.Action.duplicateIn(_:), v69);
        swift_bridgeObjectRetain();
        id v59 = v44;
        id v60 = v48;
        DOCAnalyticsActionEvent.FileProvider.init(items:)();
        id v61 = [self mainBundle];
        id v62 = [v61 bundleIdentifier];

        if (v62)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v63 = v68;
        id v64 = [*(id *)(v58 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier:v68];
        DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
        v65 = (uint64_t *)(v58 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess();
        uint64_t v31 = *v65;
        if ((unint64_t)*v65 < 3)
        {
          (*(void (**)(char *, void, uint64_t))(v63 + 104))(v70, *(unsigned int *)*(&off_100693050 + v31), v71);
          v66 = v75;
          DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
          type metadata accessor for DOCAnalyticsManager();
          uint64_t v67 = (void *)static DOCAnalyticsManager.shared.getter();
          DOCAnalyticsManager.sendActionEvent(_:)();

          (*(void (**)(char *, uint64_t))(v77 + 8))(v66, v78);
          return;
        }
LABEL_31:
        uint64_t v85 = v31;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        return;
      }
      DOCAlertUserTheNetworkIsNotReachable();
      id v35 = v73;
    }
  }
}

uint64_t sub_1001516D0(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  uint64_t result = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return result;
  }
  uint64_t v8 = *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t result = swift_dynamicCastClass();
  if (!result) {
    return result;
  }
  uint64_t v9 = (char *)result;
  if (a1 >> 62)
  {
    id v18 = v8;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v10 = result;
    if (result)
    {
LABEL_5:
      if (v10 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v12 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v13 = *(id *)(a1 + 8 * v12 + 32);
          }
          uint64_t v14 = v13;
          ++v12;
          uint64_t v15 = type metadata accessor for URL();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
          id v16 = v8;
          id v17 = v14;
          sub_10015BFE0(v17, (uint64_t)v7, v9, v9, v17);

          sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
        }
        while (v10 != v12);

        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v11 = v8;
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001518E4(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_23;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_23:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_27;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_26;
        }
LABEL_19:
        if (([v6 isTrashed] & 1) != 0
          || ([v6 isAnyParentTrashed] & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v8 = [v6 isAppContainer];
          swift_unknownObjectRelease();
          if ((v8 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_28;
        }
      }
      uint64_t v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_28:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_100151B0C(void *a1, uint64_t a2, void (*a3)(uint64_t))
{
  if (!a1) {
    goto LABEL_9;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  id v6 = a1;
  uint64_t v7 = DOCNode.fpfs_syncFetchFPItem()();
  if (!v7)
  {

    goto LABEL_8;
  }
  unsigned __int8 v8 = (void *)v7;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v10 = v6;
  char v9 = static NSObject.== infix(_:_:)();

  if ((v9 & 1) == 0)
  {
LABEL_8:

LABEL_9:
    a3(0);
    return;
  }
  a3(a2);
}

void sub_100151C2C(unint64_t a1, uint64_t a2, void (*a3)(void))
{
  if (!a1) {
    goto LABEL_10;
  }
  unint64_t v4 = a1;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = 0;
    goto LABEL_10;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v4 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v5 + 16))
    {
      __break(1u);
      return;
    }
    id v7 = *(id *)(v4 + 32);
  }
  id v8 = v7;
  swift_bridgeObjectRelease();
  a1 = (unint64_t)v8;
LABEL_10:
  id v9 = (id)a1;
  a3();
}

Swift::Int sub_100151D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + 16) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return OS_dispatch_semaphore.signal()();
}

void sub_100151D80(uint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)v13);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    char v2 = v12;
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (All)
    {
      unint64_t v4 = All;
      uint64_t v5 = OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController;
      uint64_t v6 = *(void **)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v7 = swift_dynamicCastClass();
      if (!v7)
      {
LABEL_6:
        id v10 = [self defaultManager];
        sub_10053982C(v4, *(void **)&v12[v5], 0, 0);

        type metadata accessor for DOCSmartFolderManager();
        long long v11 = (void *)static DOCSmartFolderManager.sharedManager.getter();
        dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()();

        swift_bridgeObjectRelease();
        return;
      }
      id v8 = (void *)v7;
      id v9 = v6;
      if ([v8 isEditing])
      {

        goto LABEL_6;
      }
      swift_bridgeObjectRetain();
      char v2 = v12;
      sub_10029E82C((char *)v8, v4, v2);

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_100151F04(unint64_t a1, uint64_t a2)
{
  id v4 = [self defaultManager];
  sub_10053982C(a1, *(void **)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController), 0, 0);

  type metadata accessor for DOCSmartFolderManager();
  id v5 = (id)static DOCSmartFolderManager.sharedManager.getter();
  dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()();
}

uint64_t sub_100151FB4(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v19, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_28;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v18 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v18 + 56) + 32 * v1, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1))
  {
LABEL_28:
    sub_1000CBBA4((uint64_t)&v19, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v3 = v18;
  unint64_t v4 = swift_bridgeObjectRetain();
  unint64_t v5 = (unint64_t)sub_100158554(v4);
  swift_bridgeObjectRelease();
  if (v5 >> 62) {
    goto LABEL_34;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v7 = v5 & 0xC000000000000001;
    uint64_t v17 = v3;
    uint64_t v8 = 4;
    while (1)
    {
      uint64_t v9 = v8 - 4;
      if (!v7) {
        break;
      }
      id v10 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v3 = v8 - 3;
      if (__OFADD__(v9, 1)) {
        goto LABEL_32;
      }
LABEL_17:
      unsigned int v11 = [v10 isSharedByCurrentUser:v17];
      if (v5 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      if (!v12)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v15 = 0;
        goto LABEL_36;
      }
      if (v7)
      {
        id v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_33;
        }
        id v13 = *(void **)(v5 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      unsigned int v14 = [v13 isSharedByCurrentUser];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (((v11 ^ v14) & 1) == 0)
      {
        ++v8;
        if (v3 != v6) {
          continue;
        }
      }
      uint64_t v15 = v11 ^ v14 ^ 1;
      goto LABEL_36;
    }
    id v10 = *(void **)(v5 + 8 * v8);
    swift_unknownObjectRetain();
    uint64_t v3 = v8 - 3;
    if (!__OFADD__(v9, 1)) {
      goto LABEL_17;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain_n();
  }
  uint64_t v15 = 1;
LABEL_36:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v15;
}

void sub_100152294(uint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)v8);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (All)
    {
      uint64_t v3 = All;
      id v4 = [self defaultManager];
      id v5 = *(id *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      sub_100539CF8(v3, v5, 0, 0);

      swift_bridgeObjectRelease();
      type metadata accessor for DOCSmartFolderManager();
      uint64_t v6 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()();
    }
    else
    {
    }
  }
}

void sub_1001523AC(unint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)v4);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    sub_10009E6C4(0, &qword_100708700);
    sub_10015244C(a1, 0, v3);
  }
}

unint64_t sub_10015244C(unint64_t result, char a2, void *a3)
{
  unint64_t v6 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11 <= 0) {
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (!result)
    {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      return result;
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v7 = *(void *)(v6 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = v6;
  *(unsigned char *)(v8 + 32) = a2 & 1;
  *(void *)(v8 + 40) = v3;
  *(void *)(v8 + 48) = v7;
  v12[4] = sub_1001616E0;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000666D8;
  v12[3] = &unk_100691B88;
  uint64_t v9 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  id v10 = a3;
  swift_unknownObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
  return swift_unknownObjectRelease();
}

void sub_100152618(unint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)v9);
  type metadata accessor for DOCActionContext();
  if (swift_dynamicCast())
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (!All)
    {
LABEL_8:

      return;
    }
    if (All >> 62)
    {
      if (_CocoaArrayWrapper.endIndex.getter() > 1) {
        goto LABEL_5;
      }
    }
    else if (*(uint64_t *)((All & 0xFFFFFFFFFFFFFF8) + 0x10) > 1)
    {
LABEL_5:
      id v4 = [objc_allocWithZone((Class)DOCTagEditorViewController) init];
      id v5 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v4];
      UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v4 setItems:isa];

      id v7 = *(id *)&v8[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController];
      [v7 presentViewController:v5 animated:1 completion:0];

      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, &qword_100708700);
    sub_10015244C(a1, 1, v8);
    goto LABEL_8;
  }
}

void sub_1001527E4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  id v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v5)
  {
    sub_10009B208(a2, (uint64_t)aBlock);
    type metadata accessor for DOCActionContext();
    if (swift_dynamicCast())
    {
      unint64_t v6 = (void *)aBlock[6];
      id v7 = [self defaultManager];
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v5;
      *(void *)(v8 + 24) = v6;
      aBlock[4] = sub_100162814;
      aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B6B50;
      aBlock[3] = &unk_1006929C0;
      uint64_t v9 = _Block_copy(aBlock);
      id v10 = v5;
      id v11 = v6;
      swift_release();
      [v7 fetchURLForItem:v10 completionHandler:v9];
      _Block_release(v9);
    }
    else
    {
    }
  }
}

uint64_t sub_100152A14(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_22;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_22:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v10 >> 62) {
      goto LABEL_26;
    }
    uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v3)
    {
      uint64_t v4 = 4;
      while (1)
      {
        uint64_t v5 = v4 - 4;
        if ((v10 & 0xC000000000000001) == 0) {
          break;
        }
        unint64_t v6 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v7 = v4 - 3;
        if (__OFADD__(v5, 1)) {
          goto LABEL_25;
        }
LABEL_19:
        if ([v6 isShared])
        {
          unsigned __int8 v8 = [v6 doc_isCollaborationInvitation];
          swift_unknownObjectRelease();
          if ((v8 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v4;
        if (v7 == v3) {
          goto LABEL_27;
        }
      }
      unint64_t v6 = *(void **)(v10 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v7 = v4 - 3;
      if (!__OFADD__(v5, 1)) {
        goto LABEL_19;
      }
LABEL_25:
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_100152C28(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v11, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_20;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v10 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v10 + 56) + 32 * v1, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v12 + 1))
  {
LABEL_20:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (v10 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 4;
    while (1)
    {
      uint64_t v5 = v4 - 4;
      if ((v10 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_23;
      }
LABEL_17:
      *(void *)&long long v11 = v6;
      BOOL v8 = sub_100152E18((void **)&v11);
      swift_unknownObjectRelease();
      if (!v8)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_19;
      }
    }
    uint64_t v6 = *(void *)(v10 + 8 * v4);
    swift_unknownObjectRetain();
    uint64_t v7 = v4 - 3;
    if (!__OFADD__(v5, 1)) {
      goto LABEL_17;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  return 1;
}

BOOL sub_100152E18(void **a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  swift_getObjectType();
  if ([v6 isFolder]
    && (id v7 = objc_msgSend(v6, "fpfs_fpItem")) != 0)
  {
    BOOL v8 = v7;
    uint64_t v9 = self;
    id v45 = 0;
    id v10 = v8;
    id v11 = [v9 providerDomainForItem:v10 cachePolicy:3 error:&v45];
    if (v11)
    {
      long long v12 = v11;
      id v13 = v45;

      if ([v12 supportsPickingFolders])
      {
        id v14 = [v6 providerDomainID];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;

        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {

          swift_bridgeObjectRelease_n();
LABEL_13:
          int v19 = 1;
          return ([v6 isTrashed] & 1) == 0
              && ([v6 isAnyParentTrashed] & 1) == 0
              && ([v6 isAppContainer] & 1) == 0
              && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v19) & 1) == 0
              && [v6 folderType] != (id)2
              && [v6 folderType] != (id)3;
        }
        char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v31 & 1) == 0)
        {
          id v32 = [v6 providerDomainID];
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v35 = v34;

          if (v33 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v35 != v36)
          {
            int v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return ([v6 isTrashed] & 1) == 0
                && ([v6 isAnyParentTrashed] & 1) == 0
                && ([v6 isAppContainer] & 1) == 0
                && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v19) & 1) == 0
                && [v6 folderType] != (id)2
                && [v6 folderType] != (id)3;
          }
          swift_bridgeObjectRelease_n();

          goto LABEL_13;
        }
      }

      goto LABEL_13;
    }
    long long v20 = v10;
    id v21 = v45;
    _convertNSErrorToError(_:)();

    uint64_t v22 = v20;
    swift_willThrow();

    static Logger.DocumentManager.getter();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    int v43 = v24;
    if (!os_log_type_enabled(v23, v24))
    {

      swift_errorRelease();
      swift_unknownObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      goto LABEL_13;
    }
    uint64_t v25 = swift_slowAlloc();
    id v40 = v22;
    uint64_t v26 = v25;
    id v41 = (void *)swift_slowAlloc();
    unint64_t v39 = (void *)swift_slowAlloc();
    id v45 = v39;
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v38 = v26 + 4;
    id v42 = v23;
    uint64_t v27 = DOCNode.nodeDescription.getter();
    uint64_t v44 = sub_10009B0E4(v27, v28, (uint64_t *)&v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2112;
    uint64_t v38 = v26 + 14;
    swift_errorRetain();
    uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v44 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v41 = v29;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v43, "Could not fetch provider domain for %s: %@", (uint8_t *)v26, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    int v19 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    int v19 = 0;
  }
  return ([v6 isTrashed] & 1) == 0
      && ([v6 isAnyParentTrashed] & 1) == 0
      && ([v6 isAppContainer] & 1) == 0
      && ((objc_msgSend(v6, "doc_isCollaborationInvitation") | v19) & 1) == 0
      && [v6 folderType] != (id)2
      && [v6 folderType] != (id)3;
}

void sub_100153418(unint64_t a1)
{
  uint64_t v2 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0030;
  *(void *)(v3 + 56) = sub_1000CBE70((uint64_t *)&unk_100707B20);
  *(void *)(v3 + 64) = sub_100073DF0(&qword_100707EF8, (uint64_t *)&unk_100707B20);
  *(void *)(v3 + 32) = a1;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)FPFetchPublishingURLOperation) initWithItem:v5];
    v9[4] = sub_1001536AC;
    v9[5] = 0;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1001B6B50;
    v9[3] = &unk_100692A38;
    id v7 = _Block_copy(v9);
    [v6 setFetchCompletionBlock:v7];
    _Block_release(v7);
    id v8 = [self defaultManager];
    [v8 scheduleAction:v6];
  }
}

uint64_t sub_1001536AC(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v34 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v11, &qword_1007076B0);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v16(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    id v21 = [self generalPasteboard];
    URL._bridgeToObjectiveC()(v22);
    os_log_type_t v24 = v23;
    static UTType.url.getter();
    UTType.identifier.getter();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v5, v36);
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v21 setValue:v24 forPasteboardType:v25];

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
  uint64_t v17 = (void *)static DOCLog.UI.getter();
  LODWORD(v36) = static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_10059B760;
  sub_1000CBC00(a1, (uint64_t)v9, &qword_1007076B0);
  if (v16(v9, 1, v12) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
    uint64_t v19 = 0;
    unint64_t v20 = 0;
  }
  else
  {
    uint64_t v19 = URL.path.getter();
    unint64_t v20 = v27;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v12);
  }
  *(void *)(v18 + 56) = &type metadata for String;
  unint64_t v28 = sub_100073F48();
  *(void *)(v18 + 64) = v28;
  if (v20) {
    uint64_t v29 = v19;
  }
  else {
    uint64_t v29 = 0;
  }
  unint64_t v30 = 0xE000000000000000;
  if (v20) {
    unint64_t v30 = v20;
  }
  *(void *)(v18 + 32) = v29;
  *(void *)(v18 + 40) = v30;
  if (!v37)
  {
    uint64_t v33 = (uint64_t *)(v18 + 72);
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v28;
    goto LABEL_15;
  }
  swift_getErrorValue();
  uint64_t v31 = Error.localizedDescription.getter();
  uint64_t v33 = (uint64_t *)(v18 + 72);
  *(void *)(v18 + 96) = &type metadata for String;
  *(void *)(v18 + 104) = v28;
  if (!v32)
  {
LABEL_15:
    *uint64_t v33 = 0;
    unint64_t v32 = 0xE000000000000000;
    goto LABEL_16;
  }
  *uint64_t v33 = v31;
LABEL_16:
  *(void *)(v18 + 80) = v32;
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100153AC4(uint64_t a1)
{
  sub_1000CBC00(a1, (uint64_t)&v15, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v16 + 1)) {
    goto LABEL_26;
  }
  sub_1000CBE70((uint64_t *)&unk_100708780);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (*(void *)(v14 + 16) && (uint64_t v1 = sub_100042F50(0x7365646F4E636F64, 0xE800000000000000), (v2 & 1) != 0))
  {
    sub_10009B208(*(void *)(v14 + 56) + 32 * v1, (uint64_t)&v15);
  }
  else
  {
    long long v15 = 0u;
    long long v16 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v16 + 1))
  {
LABEL_26:
    sub_1000CBBA4((uint64_t)&v15, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_100707B20);
  if (swift_dynamicCast())
  {
    if (v14 >> 62) {
      goto LABEL_29;
    }
    uint64_t v3 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v4 = 4;
      uint64_t v5 = NSFileProviderItemCapabilitiesAllowsCopyingPublishingURL;
      while (1)
      {
        uint64_t v6 = v4 - 4;
        if ((v14 & 0xC000000000000001) == 0) {
          break;
        }
        uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v8 = v4 - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_28;
        }
LABEL_19:
        id v9 = [v7 fpfs_fpItem];
        if (v9
          && (v10 = v9, unint64_t v11 = (unint64_t)[v9 capabilities], v10, (v5 & v11) != 0)
          && ([v7 isTrashed] & 1) == 0)
        {
          unsigned __int8 v12 = [v7 isAnyParentTrashed];
          swift_unknownObjectRelease();
          if ((v12 & 1) == 0)
          {
            swift_bridgeObjectRelease_n();
            return 1;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v4;
        if (v8 == v3) {
          goto LABEL_30;
        }
      }
      uint64_t v7 = *(void **)(v14 + 8 * v4);
      swift_unknownObjectRetain();
      uint64_t v8 = v4 - 3;
      if (!__OFADD__(v6, 1)) {
        goto LABEL_19;
      }
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t UIPopoverPresentationController.doc_makeUpdateableWithReloadBlock(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10070A2E0);
  uint64_t v8 = qword_100704E60;
  swift_retain();
  if (v8 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10009D098(v4, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  uint64_t v10 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_getKeyPath();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = a2;
  v13[0] = sub_100045B40;
  v13[1] = v11;
  swift_retain();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();

  return swift_release();
}

void sub_100153EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10070A2E0);
  if (qword_100704E60 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_10009D098(v4, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  uint64_t v9 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_getKeyPath();
  if (a1)
  {
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    *(void *)(v10 + 24) = a2;
    uint64_t v11 = sub_1000D8564;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v10 = 0;
  }
  v12[0] = v11;
  v12[1] = v10;
  sub_1000C0640(a1);
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  sub_1000A7258(a1);
}

Swift::Void __swiftcall UIPopoverPresentationController.doc_reloadableSourceInfoDidChange()()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10070A2E0);
  if (qword_100704E60 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009D098(v0, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  uint64_t v6 = v8;
  if (v8)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_1000A7258((uint64_t)v6);
    sub_1000A7258((uint64_t)v6);
  }
}

uint64_t (*sub_100154258())()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10070A2E0);
  if (qword_100704E60 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009D098(v0, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  uint64_t v6 = v10[0];
  if (!v10[0]) {
    return 0;
  }
  uint64_t v7 = v10[1];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v7;
  return sub_100162A4C;
}

Swift::Void __swiftcall UIPopoverPresentationController.doc_invalidateUpdateableWithReloadBlock()()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10070A2E0);
  if (qword_100704E60 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009D098(v0, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_getKeyPath();
  v6[0] = 0;
  v6[1] = 0;
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
}

uint64_t sub_100154574()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  sub_10001AF94(v0, qword_100707D90);
  sub_10009D098(v0, (uint64_t)qword_100707D90);
  sub_1000CBE70(&qword_10070A2E0);
  return static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)();
}

uint64_t sub_1001545E8@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t result = (uint64_t)sub_100154258();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = v3;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v4;
    *(void *)(result + 24) = v5;
    uint64_t v6 = sub_1000D8564;
  }
  else
  {
    uint64_t v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())result;
  return result;
}

void sub_10015465C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  if (*a1)
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(void *)(v3 + 24) = v2;
    uint64_t v4 = sub_100162A1C;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  sub_1000C0640(v1);
  sub_100153EEC((uint64_t)v4, v3);
}

uint64_t sub_1001546F0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t DOCTestingPolicies.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCPresentationLog()
{
  return self;
}

uint64_t sub_10015475C(char a1, uint64_t a2, void *a3)
{
  _StringGuts.grow(_:)(38);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = a2;
  v6._object = a3;
  String.append(_:)(v6);
  if (a1) {
    sub_100161A24(0xD000000000000024, 0x80000001005D6610);
  }

  return swift_bridgeObjectRelease();
}

void sub_100154804(UIModalPresentationStyle a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v9 = (unsigned char *)(a4 + 16);
  swift_beginAccess();
  char v10 = *(unsigned char *)(a4 + 16);
  _StringGuts.grow(_:)(79);
  v11._countAndFlagsBits = 0xD00000000000004DLL;
  v11._object = (void *)0x80000001005D6640;
  String.append(_:)(v11);
  id v12 = [a5 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v15 = v14;

  v16._countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  sub_10015475C(v10, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(a6) = *(unsigned char *)(a6 + 16);
  _StringGuts.grow(_:)(77);
  v17._countAndFlagsBits = 0xD00000000000004BLL;
  v17._object = (void *)0x80000001005D6690;
  String.append(_:)(v17);
  id v18 = [a5 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  sub_10015475C(a6, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease();
  if (a1 == UIModalPresentationPopover)
  {
    uint64_t v23 = (void (*)(void))a2;
    char v24 = a2 == 0;
    if (a2)
    {
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a2;
      *(void *)(v25 + 24) = a3;
      uint64_t v26 = sub_100162058;
    }
    else
    {
      uint64_t v26 = 0;
    }
    sub_1000C0640(a2);
    sub_1000A7258((uint64_t)v26);
  }
  else
  {
    char v24 = 0;
    uint64_t v23 = (void (*)(void))a2;
  }
  sub_10015475C(v24, 0xD000000000000035, (void *)0x80000001005D66E0);
  swift_beginAccess();
  unsigned char *v9 = 1;
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(a1);
  if ([a5 modalPresentationStyle] == (id)7 && v23)
  {
    swift_retain();
    id v27 = [a5 popoverPresentationController];
    sub_10015475C(v27 == 0, 0xD000000000000042, (void *)0x80000001005D6720);
    if (v27)
    {
      id v28 = v27;
      v23();

      sub_1000A7258((uint64_t)v23);
    }
    else
    {
      sub_1000A7258((uint64_t)v23);
    }
  }
}

id sub_100154B2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  char v7 = *(unsigned char *)(a1 + 16);
  _StringGuts.grow(_:)(66);
  v8._countAndFlagsBits = 0xD000000000000040;
  v8._object = (void *)0x80000001005D6580;
  String.append(_:)(v8);
  id v9 = [a2 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  sub_10015475C((v7 & 1) == 0, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LOBYTE(v10) = *(unsigned char *)(a3 + 16);
  _StringGuts.grow(_:)(60);
  v14._object = (void *)0x80000001005D65D0;
  v14._countAndFlagsBits = 0xD00000000000003ALL;
  String.append(_:)(v14);
  id v15 = [a2 description];
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  sub_10015475C(v10, 0, (void *)0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(unsigned char *)(a3 + 16) = 1;
  return [*(id *)(a4 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController) presentViewController:a2 animated:1 completion:0];
}

id sub_100154D28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v12 = *(void *)(a3 + OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem);
  if (v12)
  {
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = v12;
    swift_unknownObjectRetain_n();
    sub_100154804(UIModalPresentationPopover, (uint64_t)sub_100161FB4, v13, a4, a5, a6);
    swift_unknownObjectRelease();
    swift_release();
  }
  else if (a1)
  {
    Swift::String v17 = (void *)swift_allocObject();
    v17[2] = a1;
    v17[3] = a5;
    v17[4] = a7;
    v17[5] = a8;
    id v18 = a1;
    id v19 = a5;
    swift_unknownObjectRetain();
    id v20 = a8;
    sub_100154804(UIModalPresentationPopover, (uint64_t)sub_100161FA8, (uint64_t)v17, a4, v19, a6);

    swift_release();
  }
  else
  {
    sub_100154804(UIModalPresentationFormSheet, 0, 0, a4, a5, a6);
  }

  return sub_100154B2C(a4, a5, a6, a3);
}

uint64_t sub_100154EB8(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 setSourceView:a2];
  [a2 bounds];
  [a1 setSourceRect:];
  v22[3] = &OBJC_PROTOCOL___UIPopoverPresentationControllerDelegate;
  uint64_t v13 = swift_dynamicCastObjCProtocolConditional();
  if (v13) {
    [a1 setDelegate:v13];
  }
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a4;
  v15[4] = a5;
  sub_1000CBE70(&qword_10070A2E0);
  uint64_t v16 = qword_100704E60;
  swift_retain();
  swift_unknownObjectRetain();
  id v17 = a5;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_10009D098(v9, (uint64_t)qword_100707D90);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v18, v9);
  id v19 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_getKeyPath();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_100162044;
  *(void *)(v20 + 24) = v15;
  v22[1] = sub_1000D8564;
  v22[2] = v20;
  swift_retain();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  swift_release();

  return swift_release_n();
}

void sub_100155164(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v6 = (void *)Strong;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    aBlock[4] = sub_100162050;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6C98;
    aBlock[3] = &unk_100691D68;
    Swift::String v8 = _Block_copy(aBlock);
    id v9 = v6;
    swift_release();
    [a2 getViewFor:a3 waitForNewThumbnail:0 :v8];
    _Block_release(v8);
  }
}

void sub_100155280(void *a1, uint64_t a2, void *a3)
{
  if (a1)
  {
    id v4 = a1;
    [a3 setSourceView:v4];
    [v4 bounds];
    [a3 setSourceRect:];
  }
}

void sub_100155300(char *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  id v9 = *(void **)&a1[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  uint64_t v10 = *(void *)&a1[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
  uint64_t v11 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
  uint64_t v12 = objc_allocWithZone(v11);
  v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v9;
  id v13 = objc_allocWithZone((Class)DOCItemInfoViewController);
  swift_unknownObjectRetain();
  uint64_t v14 = v12;
  id v15 = v9;
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v13 initWithNodes:isa configuration:v15 actionReporting:v10];

  *(void *)&v14[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v17;
  id v18 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v17];
  *(void *)&v14[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v18;
  [v18 _setBuiltinTransitionStyle:1];
  if (a3)
  {
    id v19 = v17;
    [v19 displayTagView];
  }
  v46.receiver = v14;
  v46.super_class = v11;
  id v20 = [super init];

  swift_unknownObjectRelease();
  id v21 = (void *)swift_allocObject();
  v21[2] = a2;
  v21[3] = a4;
  v21[4] = v20;
  v21[5] = a5;
  v21[6] = a1;
  swift_bridgeObjectRetain_n();
  id v22 = v20;
  swift_unknownObjectRetain_n();
  uint64_t v23 = a1;
  id v24 = v22;
  uint64_t v25 = v23;
  id v26 = v24;
  id v27 = v25;
  id v28 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  swift_release();
  if (!v45 && swift_dynamicCastObjCProtocolConditional())
  {
    id v29 = v26;
    unint64_t v30 = (void *)UIViewController.associatedObjectStorage.getter();
    swift_getKeyPath();
    type metadata accessor for DOCPresentationPreheatController();
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = 0x3FE0000000000000;
    swift_unknownObjectWeakInit();
    *(void *)(v31 + 32) = &_swiftEmptyArrayStorage;
    *(unsigned char *)(v31 + 40) = 0;
    swift_unknownObjectWeakAssign();
    uint64_t v45 = v31;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  }
  unint64_t v32 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  if (v45)
  {
    if (*(unsigned char *)(v45 + 40) == 2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      if (v33 >= 2) {
        uint64_t v34 = 2;
      }
      else {
        uint64_t v34 = 7;
      }
      sub_100161C38(v26, v34, a5, v27);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = sub_100161EC4;
      *(void *)(v37 + 24) = v21;
      uint64_t v38 = (char **)(v45 + 32);
      swift_beginAccess();
      unint64_t v39 = *(char **)(v45 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v45 + 32) = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v39 = sub_1000B7F78(0, *((void *)v39 + 2) + 1, 1, v39);
        void *v38 = v39;
      }
      unint64_t v42 = *((void *)v39 + 2);
      unint64_t v41 = *((void *)v39 + 3);
      if (v42 >= v41 >> 1)
      {
        unint64_t v39 = sub_1000B7F78((char *)(v41 > 1), v42 + 1, 1, v39);
        void *v38 = v39;
      }
      *((void *)v39 + 2) = v42 + 1;
      int v43 = &v39[16 * v42];
      *((void *)v43 + 4) = sub_1000D8564;
      *((void *)v43 + 5) = v37;
      swift_endAccess();
      sub_10010FB6C();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v35 >= 2) {
      uint64_t v36 = 2;
    }
    else {
      uint64_t v36 = 7;
    }
    sub_100161C38(v26, v36, a5, v27);
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease_n();
}

void sub_100155854(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 >= 2) {
    uint64_t v9 = 2;
  }
  else {
    uint64_t v9 = 7;
  }

  sub_100161C38(a3, v9, a4, a5);
}

uint64_t sub_1001558F8(uint64_t a1, void *a2)
{
  unint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v34 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  Swift::String v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v38 - 8);
  uint64_t v12 = __chkstk_darwin(v38);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  id v17 = *(void **)(a1 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController);
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    uint64_t v19 = result;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v20 = v17;
    uint64_t v31 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    void *v10 = 250;
    (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchTimeInterval.milliseconds(_:), v7);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    unint64_t v30 = *(void (**)(char *, uint64_t))(v11 + 8);
    v30(v14, v38);
    uint64_t v21 = swift_allocObject();
    id v22 = v32;
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v22;
    aBlock[4] = sub_1001627D8;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100692808;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v20;
    id v25 = v22;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    id v26 = v34;
    uint64_t v27 = v37;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v28 = (void *)v31;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v27);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v35);
    return ((uint64_t (*)(char *, uint64_t))v30)(v16, v38);
  }
  return result;
}

uint64_t sub_100155DA4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v37 = a3;
  uint64_t v38 = a4;
  uint64_t v40 = a2;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v39 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)&v36 - v16;
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v36 = v6;
    uint64_t v38 = (void *)v5;
    sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    id v18 = v39;
    static Logger.Application.getter();
    id v19 = v37;
    swift_errorRetain();
    id v20 = v19;
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v24 = (void *)swift_slowAlloc();
      id v37 = (id)swift_slowAlloc();
      aBlock[0] = (uint64_t)v37;
      *(_DWORD *)uint64_t v23 = 138412546;
      uint64_t v42 = (uint64_t)v20;
      id v25 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v24 = v20;

      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v42 = v40;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v42 = sub_10009B0E4(v26, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to fetch URL for: %@ error: %s", (uint8_t *)v23, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    return (*(uint64_t (**)(char *, void *))(v36 + 8))(v18, v38);
  }
  else
  {
    id v28 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v28(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    unint64_t v29 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v30 = (v13 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v31 = swift_allocObject();
    v28((char *)(v31 + v29), v15, v11);
    unint64_t v32 = v38;
    *(void *)(v31 + v30) = v38;
    aBlock[4] = (uint64_t)sub_100162364;
    aBlock[5] = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    aBlock[3] = (uint64_t)&unk_100692100;
    uint64_t v33 = _Block_copy(aBlock);
    id v34 = v32;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v33);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
}

void sub_1001562E8(uint64_t a1, uint64_t a2)
{
  id v3 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentSharingController());
  URL._bridgeToObjectiveC()(v4);
  uint64_t v6 = v5;
  id v7 = [v3 initWithFileURL:v5];

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationFormSheet);
  [*(id *)(a2 + OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController) presentViewController:v7 animated:1 completion:0];
}

id sub_100156704()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDocumentSharingController();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCDocumentSharingController()
{
  return self;
}

uint64_t sub_100156760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  v7[3] = swift_getObjectType();
  v7[0] = a3;
  swift_retain();
  swift_unknownObjectRetain();
  v4(v5, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10009B1B8((uint64_t)v7);
}

id sub_100156808()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v14._object = (void *)0x80000001005D4DE0;
    v2._countAndFlagsBits = 0x6574656C6544;
    v2._object = (void *)0xE600000000000000;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v14._countAndFlagsBits = 0xD00000000000001BLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v14);

    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10014C4DC;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    aBlock[3] = &unk_100692AD8;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setMenuSortOrder:28];
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
    {
      uint64_t v12 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
      {
LABEL_7:
        [v9 setAvailability:v12];
        [v9 setActionStyle:1];
        [v9 setRequiresFullyFormedItems:0];
        return v9;
      }
    }
    else
    {
      uint64_t v12 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL) {
        goto LABEL_7;
      }
    }
    v12 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100156A98()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v13._object = (void *)0x80000001005D6CA0;
    v2._countAndFlagsBits = 0x7265766F636552;
    v2._object = (void *)0xE700000000000000;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v13._countAndFlagsBits = 0xD000000000000048;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v13);

    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10014C860;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    aBlock[3] = &unk_100692AB0;
    uint64_t v8 = _Block_copy(aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setMenuSortOrder:28];
    [v9 setRequiresFullyFormedItems:0];
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100156CD4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v21._object = (void *)0x80000001005D6D90;
    v2._countAndFlagsBits = 0x656D616E6552;
    v2._object = (void *)0xE600000000000000;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v21._countAndFlagsBits = 0xD000000000000044;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v21);

    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = sub_10014D03C;
    uint64_t v20 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v16 = 1107296256;
    id v17 = sub_100156760;
    id v18 = &unk_100692DA8;
    uint64_t v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setMenuSortOrder:3];
    [v9 setSupportsMultipleItems:0];
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
    {
      uint64_t v12 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
      if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
      {
LABEL_7:
        [v9 setAvailability:v12];
        id v19 = (void (*)(unint64_t, uint64_t))sub_10014D7F8;
        uint64_t v20 = 0;
        aBlock = _NSConcreteStackBlock;
        uint64_t v16 = 1107296256;
        id v17 = sub_100053508;
        id v18 = &unk_100692DD0;
        Swift::String v13 = _Block_copy(&aBlock);
        id v14 = [self predicateWithBlock:v13];
        _Block_release(v13);
        swift_release();
        [v9 setFilteringPredicate:v14];

        return v9;
      }
    }
    else
    {
      uint64_t v12 = 1;
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL) {
        goto LABEL_7;
      }
    }
    v12 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100157004(uint64_t a1)
{
  if (a1 < 2)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      id v11 = result;
      v33._countAndFlagsBits = 0xD00000000000005BLL;
      v33._object = (void *)0x80000001005D6BB0;
      v12._object = (void *)0x80000001005D6B90;
      v12._countAndFlagsBits = 0xD000000000000013;
      v13._countAndFlagsBits = 0x617A696C61636F4CLL;
      v13._object = (void *)0xEB00000000656C62;
      v14._countAndFlagsBits = 1702260557;
      v14._object = (void *)0xE400000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v33);

      object = 0;
LABEL_6:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v15 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      NSString v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unint64_t v30 = sub_10014E214;
      uint64_t v31 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v27 = 1107296256;
      id v28 = sub_100156760;
      unint64_t v29 = &unk_100692A60;
      id v18 = _Block_copy(&aBlock);
      id v19 = [v15 initWithIdentifier:v16 localizedTitle:v17 unresolvedHandler:v18];

      _Block_release(v18);
      swift_release();
      if (object)
      {
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v20 = 0;
      }
      [v19 setLocalizedCompactTitle:v20];

      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [self systemImageNamed:v21];

      [v19 setImage:v22];
      [v19 setMenuSortOrder:14];
      if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet >= 2uLL)
      {
        uint64_t v23 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1;
        if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~(UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1)) == 0)
        {
LABEL_14:
          [v19 setAvailability:v23];
          unint64_t v30 = (void (*)(uint64_t, uint64_t))sub_10014D7F8;
          uint64_t v31 = 0;
          aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          id v28 = sub_100053508;
          unint64_t v29 = &unk_100692A88;
          id v24 = _Block_copy(&aBlock);
          id v25 = [self predicateWithBlock:v24];
          _Block_release(v24);
          swift_release();
          [v19 setFilteringPredicate:v25];

          return v19;
        }
      }
      else
      {
        uint64_t v23 = 1;
        if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL) {
          goto LABEL_14;
        }
      }
      v23 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
      goto LABEL_14;
    }
  }
  else
  {
    v2._countAndFlagsBits = 0xD000000000000023;
    v3._countAndFlagsBits = 0xD00000000000005ELL;
    v2._object = (void *)0x80000001005D6C10;
    v3._object = (void *)0x80000001005D6C40;
    DOCLocalizedDictionaryString(_:comment:)(v2, v3);
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
    *(void *)(v4 + 56) = &type metadata for Int;
    *(void *)(v4 + 64) = &protocol witness table for Int;
    *(void *)(v4 + 32) = a1;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      NSString v6 = result;
      v32._countAndFlagsBits = 0xD00000000000005BLL;
      v32._object = (void *)0x80000001005D6BB0;
      v7._object = (void *)0x80000001005D6B90;
      v7._countAndFlagsBits = 0xD000000000000013;
      v8._countAndFlagsBits = 0x617A696C61636F4CLL;
      v8._object = (void *)0xEB00000000656C62;
      v9._countAndFlagsBits = 1702260557;
      v9._object = (void *)0xE400000000000000;
      object = DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v32)._object;

      goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1001574B8()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._object = (void *)0x80000001005D6AC0;
    v2._countAndFlagsBits = 0x6E694C2079706F43;
    v2._object = (void *)0xE90000000000006BLL;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0xD00000000000004ELL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = sub_100153418;
    uint64_t v19 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    NSString v16 = sub_100156760;
    NSString v17 = &unk_1006929E8;
    Swift::String v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setPerformActionExitsEditMode:0];
    [v9 setSupportsMultipleItems:0];
    [v9 setNavigationSide:2];
    [v9 setAvailability:1];
    [v9 setMenuSortOrder:17];
    id v18 = sub_100153AC4;
    uint64_t v19 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    NSString v16 = sub_100053508;
    NSString v17 = &unk_100692A10;
    Swift::String v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001577D8(uint64_t a1)
{
  swift_getObjectType();
  Swift::String v2 = DOCNode.displayName(withHiddenPathExtension:)(1);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v4 = result;
    v27._object = (void *)0x80000001005D6800;
    v5._object = (void *)0x80000001005D67E0;
    v5._countAndFlagsBits = 0x1000000000000010;
    v6._countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v27._countAndFlagsBits = 0xD000000000000056;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v27);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_100073F48();
    *(Swift::String *)(v8 + 32) = v2;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    id v10 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = sub_1001620D4;
    uint64_t v26 = v9;
    aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_100156760;
    id v24 = &unk_100691F70;
    id v13 = _Block_copy(&aBlock);
    id v14 = [v10 initWithIdentifier:v11 localizedTitle:v12 unresolvedHandler:v13];

    _Block_release(v13);
    swift_release();
    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [self systemImageNamed:v15];

    [v14 setImage:v16];
    [v14 setMenuSortOrder:15];
    [v14 setAvailability:1];
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a1;
    id v25 = sub_1001620DC;
    uint64_t v26 = v17;
    aBlock = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    uint64_t v23 = sub_100053508;
    id v24 = &unk_100691FC0;
    id v18 = _Block_copy(&aBlock);
    uint64_t v19 = self;
    swift_unknownObjectRetain();
    id v20 = [v19 predicateWithBlock:v18];
    _Block_release(v18);
    swift_release();
    [v14 setFilteringPredicate:v20];

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100157B90(void *a1, char a2)
{
  id v4 = [a1 localizedName];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  if (a2)
  {
    uint64_t v22 = (void **)v5;
    uint64_t v23 = v7;
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = 0x6C75616665642820;
    v8._object = (void *)0xEA00000000002974;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  id v10 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  id v11 = a1;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1001622B8;
  uint64_t v27 = v9;
  uint64_t v22 = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_100156760;
  id v25 = &unk_100692088;
  id v14 = _Block_copy(&v22);
  id v15 = [v10 initWithIdentifier:v12 localizedTitle:v13 unresolvedHandler:v14];

  _Block_release(v14);
  swift_release();
  id v16 = [v11 bundleIdentifier];
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = sub_1000E8D28(v16);

    [v15 setImage:v18];
  }
  [v15 setMenuSortOrder:8];
  [v15 setSupportsMultipleItems:0];
  [v15 setAvailability:1];
  uint64_t v26 = sub_10014DF8C;
  uint64_t v27 = 0;
  uint64_t v22 = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  id v24 = sub_100053508;
  id v25 = &unk_1006920B0;
  uint64_t v19 = _Block_copy(&v22);
  id v20 = [self predicateWithBlock:v19];
  _Block_release(v19);
  swift_release();
  [v15 setFilteringPredicate:v20];

  return v15;
}

id sub_100157E88(uint64_t a1, uint64_t a2)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    v15._object = (void *)0x80000001005D6E80;
    v6._countAndFlagsBits = 1852141647;
    v6._object = (void *)0xE400000000000000;
    v7._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v15._countAndFlagsBits = 0xD00000000000004FLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v15);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_retain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = a1;
    aBlock[5] = a2;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004408BC;
    aBlock[3] = &unk_100692F88;
    NSString v12 = _Block_copy(aBlock);
    id v13 = [v9 initWithIdentifier:v10 localizedTitle:v11 resolvedHandler:v12];

    _Block_release(v12);
    swift_release();
    [v13 setSupportsMultipleItems:1];
    [v13 setNavigationSide:3];
    [v13 setAvailability:2];
    [v13 setStyle:2];
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100158084()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v11._object = (void *)0x80000001005D6E40;
    v2._countAndFlagsBits = 0x207265766F636552;
    v2._object = (void *)0xEB000000006C6C41;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v11._countAndFlagsBits = 0xD000000000000030;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v11);

    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_10014CCD4;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    aBlock[3] = &unk_100692F60;
    Swift::String v8 = _Block_copy(aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    [v9 setMenuSortOrder:28];
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10015824C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v20._object = (void *)0x80000001005D4DE0;
    v2._countAndFlagsBits = 0x6574656C6544;
    v2._object = (void *)0xE600000000000000;
    v3._countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    v20._countAndFlagsBits = 0xD00000000000001BLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v20);

    id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = sub_100151D80;
    uint64_t v19 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100156760;
    uint64_t v17 = &unk_100692560;
    Swift::String v8 = _Block_copy(&aBlock);
    id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

    _Block_release(v8);
    swift_release();
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self systemImageNamed:v10];

    [v9 setImage:v11];
    [v9 setAvailability:0];
    [v9 setSupportsMultipleItems:1];
    [v9 setActionStyle:1];
    [v9 setRequiresFullyFormedItems:0];
    id v18 = sub_100151FB4;
    uint64_t v19 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v15 = 1107296256;
    id v16 = sub_100053508;
    uint64_t v17 = &unk_100692588;
    NSString v12 = _Block_copy(&aBlock);
    id v13 = [self predicateWithBlock:v12];
    _Block_release(v12);
    swift_release();
    [v9 setFilteringPredicate:v13];

    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100158554(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
LABEL_16:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4)
    {
LABEL_3:
      unint64_t v5 = 0;
      uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
      uint64_t v9 = v2;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          NSString v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v2 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_13:
            __break(1u);
            return _swiftEmptyArrayStorage;
          }
        }
        else
        {
          if (v5 >= *(void *)(v6 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          NSString v7 = *(void **)(a1 + 8 * v5 + 32);
          swift_unknownObjectRetain();
          uint64_t v2 = v5 + 1;
          if (__OFADD__(v5, 1)) {
            goto LABEL_13;
          }
        }
        if (objc_msgSend(v7, "isShared", v9))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v6 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v5;
        if (v2 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001586C8(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      unint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v7 = v2;
      id v8 = [v4 effectiveParentItemIdentifier];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;
      if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          uint64_t v15 = 0;
          goto LABEL_20;
        }
      }
      ++v3;
      uint64_t v2 = v7;
      if (v6 == v7)
      {
        uint64_t v15 = 1;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  uint64_t v15 = 1;
LABEL_20:
  swift_bridgeObjectRelease();
  return v15;
}

id sub_100158864(int64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v8 = a2;
    swift_retain_n();
    id v9 = v8;
    if (v7)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_20:
    swift_beginAccess();
    *(void *)(a3 + 16) = 0;
    swift_unknownObjectRelease();
    OS_dispatch_semaphore.signal()();

    swift_release();
    return (id)swift_release();
  }
  if (a1 < 0) {
    id v8 = (id)a1;
  }
  else {
    id v8 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  id v21 = a2;
  swift_retain_n();
  id v22 = v21;
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v23 <= 0) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v10 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v10 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_24;
    }
    id v11 = *(id *)(a1 + 32);
  }
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  id v13 = [v12 effectiveParentItemIdentifier];

  id v14 = v13;
  LOBYTE(v12) = sub_1001586C8(a1);

  if ((v12 & 1) == 0)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = 0;
    swift_unknownObjectRelease();
    OS_dispatch_semaphore.signal()();

    swift_release();
    return (id)swift_release();
  }

LABEL_9:
  id result = [self defaultManager];
  id v8 = result;
  if (v10)
  {
LABEL_24:
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v16 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v17 = v16;
    id v18 = [v16 itemID];

    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100162C74;
    *(void *)(v19 + 24) = v6;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_100691F20;
    Swift::String v20 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v8 fetchParentsForItemID:v18 recursively:0 completionHandler:v20];

    _Block_release(v20);
    swift_release();

    return (id)swift_release();
  }
  __break(1u);
  return result;
}

id sub_100158BA8(unint64_t a1, void *a2, int64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  unint64_t v8 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_87;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t v10 = a2;
  swift_retain_n();
  id v11 = v10;
  if (v9 < 1)
  {
LABEL_88:
    swift_beginAccess();
    *(void *)(a3 + 16) = 0;
    swift_unknownObjectRelease();
    OS_dispatch_semaphore.signal()();
    swift_release();

    return (id)swift_release();
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v85 = a1;
    if (v8 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v85 = a1;
    }
    v83 = a2;
    uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v14)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v13 + 32;
      uint64_t v17 = v13 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v19 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v19)
        {
          if (v15 >= v14 - 1) {
            goto LABEL_17;
          }
          Swift::String v20 = (void *)(v17 + 8 * v14--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v21 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v21 & 1) == 0) {
              break;
            }
            --v14;
            --v20;
            if (v15 >= v14) {
              goto LABEL_17;
            }
          }
          uint64_t v18 = *(void *)(v16 + 8 * v15);
          *(void *)(v16 + 8 * v15) = *v20;
          *Swift::String v20 = v18;
        }
        if (++v15 >= v14) {
          goto LABEL_17;
        }
      }
    }
    uint64_t v15 = 0;
LABEL_17:
    specialized Array._endMutation()();
    unint64_t v22 = v85;
    unint64_t v23 = v85 >> 62;
    if (!(v85 >> 62))
    {
      uint64_t v24 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24 < v15) {
        goto LABEL_93;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v24 < v15) {
      goto LABEL_118;
    }
    swift_bridgeObjectRetain();
    uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
    id result = (id)swift_bridgeObjectRelease();
    if (v74 < v15) {
      goto LABEL_119;
    }
    swift_bridgeObjectRetain();
    uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v75 < v24) {
      break;
    }
LABEL_19:
    if (v24 < 0) {
      goto LABEL_94;
    }
    int64_t v81 = a3;
    uint64_t v82 = v7;
    uint64_t v7 = v22 & 0xC000000000000001;
    if ((v22 & 0xC000000000000001) != 0 && v15 != v24)
    {
      if (v15 >= (unint64_t)v24) {
        goto LABEL_97;
      }
      Swift::Int v25 = v15;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v25++);
      }
      while (v24 != v25);
    }
    if (v23)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v3 = v28;
      a3 = v29;
      unint64_t v26 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v31 < 0) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = (void *)((v22 & 0xFFFFFFFFFFFFFF8) + 32);
      unint64_t v26 = (2 * v24) | 1;
      uint64_t v27 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      a3 = v15;
    }
    if (v27 < v15) {
      goto LABEL_95;
    }
    if (v15 && v7)
    {
      for (Swift::Int i = 0; i != v15; ++i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    if (v23)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v15 = v34;
      uint64_t v7 = v35;
      unint64_t v80 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = v22 & 0xFFFFFFFFFFFFFF8;
      unint64_t v80 = (2 * v15) | 1;
      uint64_t v15 = (v22 & 0xFFFFFFFFFFFFFF8) + 32;
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
    }
    unint64_t v37 = (v26 >> 1) - a3;
    uint64_t v38 = v83;
    if (v26 >> 1 != a3)
    {
      if ((uint64_t)(v26 >> 1) <= a3) {
        goto LABEL_100;
      }
      self;
      unint64_t v41 = (void *)swift_dynamicCastObjCClass();
      if (!v41 || (id v42 = [v41 parent]) == 0)
      {
        swift_beginAccess();
        *(void *)(v81 + 16) = 0;
        swift_unknownObjectRelease();
        OS_dispatch_semaphore.signal()();
        swift_release();

        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return (id)swift_unknownObjectRelease();
      }
      int v43 = v42;
      uint64_t v79 = v15;
      swift_unknownObjectRetain();
      uint64_t v44 = &v3[a3];
      a3 = (int64_t)FINode_ptr;
      do
      {
        unint64_t v45 = *v44;
        self;
        objc_super v46 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v47 = [v46 parent];
        if (!v47)
        {
          swift_unknownObjectRelease();
LABEL_61:
          swift_unknownObjectRelease();
          swift_beginAccess();
          *(void *)(v81 + 16) = 0;
          swift_unknownObjectRelease();
          OS_dispatch_semaphore.signal()();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          swift_release();
          goto LABEL_112;
        }
        id v48 = v47;
        uint64_t v3 = (void *)sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        uint64_t v15 = v43;
        id v49 = v48;
        LOBYTE(v48) = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v48 & 1) == 0) {
          goto LABEL_61;
        }
        ++v44;
        --v37;
      }
      while (v37);
      swift_unknownObjectRelease();
      int64_t v50 = v80 >> 1;
      if (v7 == v80 >> 1)
      {
        swift_beginAccess();
        *(void *)(v81 + 16) = v43;
        id v51 = (id)v15;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        id v52 = v83;
        OS_dispatch_semaphore.signal()();
        swift_unknownObjectRelease();

        goto LABEL_111;
      }
      int64_t v55 = v50 - v7;
      if (__OFSUB__(v50, v7)) {
        goto LABEL_102;
      }
      a3 = (int64_t)_swiftEmptyArrayStorage;
      if (v55)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v55 & 0x8000000000000000) == 0)
        {
          if (v7 <= v50) {
            unint64_t v56 = v80 >> 1;
          }
          else {
            unint64_t v56 = v7;
          }
          unint64_t v57 = v56 - v7;
          uint64_t v58 = v79 + 8 * v7;
          a3 = (int64_t)&NSURLLocalizedNameKey_ptr;
          uint64_t v7 = v81;
          while (v57)
          {
            v58 += 8;
            self;
            swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --v57;
            if (!--v55)
            {
              a3 = aBlock[0];
              goto LABEL_73;
            }
          }
          goto LABEL_96;
        }
        __break(1u);
        goto LABEL_114;
      }
      uint64_t v7 = v81;
LABEL_73:
      uint64_t v3 = (void *)swift_allocObject();
      v3[2] = v15;
      v3[3] = sub_10016209C;
      v3[4] = v82;
      if ((unint64_t)a3 >> 62) {
        goto LABEL_103;
      }
      id v59 = *(void **)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v60 = (id)v15;
      swift_retain_n();
      id v61 = v60;
      if (v59)
      {
        swift_bridgeObjectRetain();
LABEL_76:
        unint64_t v45 = a3 & 0xC000000000000001;
        if ((a3 & 0xC000000000000001) != 0)
        {
LABEL_114:
          id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_79;
        }
        if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v62 = *(id *)(a3 + 32);
LABEL_79:
          uint64_t v63 = v62;
          swift_bridgeObjectRelease();
          id v64 = [v63 effectiveParentItemIdentifier];

          id v65 = v64;
          LOBYTE(v64) = sub_1001586C8(a3);

          if (v64)
          {

            goto LABEL_81;
          }
          swift_beginAccess();
          *(void *)(v7 + 16) = 0;
          swift_unknownObjectRelease();
          OS_dispatch_semaphore.signal()();

          swift_unknownObjectRelease();
          goto LABEL_110;
        }
        __break(1u);
LABEL_116:
        id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_84:
        uint64_t v67 = v66;
        id v68 = [v66 itemID];

        uint64_t v69 = swift_allocObject();
        *(void *)(v69 + 16) = sub_1001620A8;
        *(void *)(v69 + 24) = v3;
        aBlock[4] = sub_1001620B4;
        aBlock[5] = v69;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016A350;
        aBlock[3] = &unk_100691EA8;
        uint64_t v70 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v59 fetchParentsForItemID:v68 recursively:0 completionHandler:v70];

        _Block_release(v70);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_release();

LABEL_112:
        swift_release();
        return (id)swift_bridgeObjectRelease();
      }
LABEL_109:
      swift_beginAccess();
      *(void *)(v7 + 16) = 0;
      swift_unknownObjectRelease();
      OS_dispatch_semaphore.signal()();

      swift_unknownObjectRelease();
LABEL_110:
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
      id v52 = v83;
LABEL_111:
      swift_unknownObjectRelease();
      swift_release();

      goto LABEL_112;
    }
    unint64_t v39 = (v80 >> 1) - v7;
    if (__OFSUB__(v80 >> 1, v7)) {
      goto LABEL_99;
    }
    uint64_t v3 = (void *)v33;
    a2 = _swiftEmptyArrayStorage;
    if (!v39)
    {
      uint64_t v7 = v81;
LABEL_59:
      id v54 = v38;
      swift_retain();
      sub_100158864((int64_t)a2, v54, v7);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();

      return (id)swift_release_n();
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v39 & 0x8000000000000000) != 0) {
      goto LABEL_101;
    }
    if (v7 <= (uint64_t)(v80 >> 1)) {
      unint64_t v40 = v80 >> 1;
    }
    else {
      unint64_t v40 = v7;
    }
    unint64_t v8 = v40 - v7;
    a3 = v15 + 8 * v7;
    uint64_t v7 = v81;
    while (v8)
    {
      a3 += 8;
      self;
      a2 = (void *)swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      --v8;
      if (!--v39)
      {
        uint64_t v38 = v83;
        a2 = (void *)aBlock[0];
        goto LABEL_59;
      }
    }
    __break(1u);
LABEL_87:
    uint64_t v71 = a2;
    swift_retain_n();
    v72 = v71;
    swift_bridgeObjectRetain();
    uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v73 < 1) {
      goto LABEL_88;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  if (a3 < 0) {
    id v59 = (void *)a3;
  }
  else {
    id v59 = (void *)(a3 & 0xFFFFFFFFFFFFFF8);
  }
  id v76 = (id)v15;
  swift_retain_n();
  id v77 = v76;
  swift_bridgeObjectRetain();
  uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v78 <= 0) {
    goto LABEL_109;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_76;
  }
  swift_bridgeObjectRelease();
  unint64_t v45 = a3 & 0xC000000000000001;
LABEL_81:
  id result = [self defaultManager];
  id v59 = result;
  if (v45) {
    goto LABEL_116;
  }
  if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v66 = *(id *)(a3 + 32);
    goto LABEL_84;
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
  return result;
}

uint64_t sub_10015983C(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchTime();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (int64_t *)((char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19 >= 1) {
      goto LABEL_3;
    }
    return 0;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    return 0;
  }
LABEL_3:
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  int64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v15 = (uint64_t *)(v14 + 16);
  int64_t v21 = v14;
  sub_100158BA8(a1, v13, v14);
  *uint64_t v12 = 2;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v9);
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  OS_dispatch_semaphore.wait(timeout:)();
  v16(v8, v2);
  char v17 = static DispatchTimeoutResult.== infix(_:_:)();

  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v18 = 0;
  if ((v17 & 1) == 0)
  {
    swift_beginAccess();
    uint64_t v18 = *v15;
    swift_unknownObjectRetain();
  }
  swift_release();
  return v18;
}

id sub_100159B04(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v3 = result;
    v23._countAndFlagsBits = 0xD000000000000028;
    v23._object = (void *)0x80000001005D69D0;
    v4._countAndFlagsBits = 0x746163696C707544;
    v4._object = (void *)0xE900000000000065;
    v5._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5._object = (void *)0xEB00000000656C62;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v23);

    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a1;
    id v8 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_unknownObjectRetain();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    int64_t v21 = sub_100162620;
    uint64_t v22 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100156760;
    Swift::String v20 = &unk_100692358;
    uint64_t v11 = _Block_copy(&aBlock);
    id v12 = [v8 initWithIdentifier:v9 localizedTitle:v10 unresolvedHandler:v11];

    _Block_release(v11);
    swift_release();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [self systemImageNamed:v13];

    [v12 setImage:v14];
    [v12 setAvailability:UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet | 1];
    [v12 setSupportsMultipleItems:1];
    [v12 setMenuSortOrder:6];
    int64_t v21 = sub_1001518E4;
    uint64_t v22 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_100053508;
    Swift::String v20 = &unk_100692380;
    uint64_t v15 = _Block_copy(&aBlock);
    id v16 = [self predicateWithBlock:v15];
    _Block_release(v15);
    swift_release();
    [v12 setFilteringPredicate:v16];

    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100159E40()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v5 = result;
    v29._object = (void *)0x80000001005D69A0;
    v6._countAndFlagsBits = 0x657469726F766146;
    v6._object = (void *)0xE800000000000000;
    v7._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0xD000000000000029;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v29);

    id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_10014EF04;
    uint64_t v28 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    Swift::Int v25 = sub_100156760;
    unint64_t v26 = &unk_1006922E0;
    id v12 = _Block_copy(&aBlock);
    id v13 = [v9 initWithIdentifier:v10 localizedTitle:v11 unresolvedHandler:v12];

    _Block_release(v12);
    swift_release();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14];

    [v13 setImage:v15];
    [v13 setSupportsMultipleItems:0];
    sub_1000CBE70(&qword_100707EF0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    static UTType.folder.getter();
    uint64_t v17 = UTType.identifier.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 setSupportedContentTypes:isa];

    [v13 setMenuSortOrder:16];
    uint64_t v27 = sub_10014EF10;
    uint64_t v28 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    Swift::Int v25 = sub_100053508;
    unint64_t v26 = &unk_100692308;
    int64_t v21 = _Block_copy(&aBlock);
    id v22 = [self predicateWithBlock:v21];
    _Block_release(v21);
    swift_release();
    [v13 setFilteringPredicate:v22];

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10015A230()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v5 = result;
    v29._object = (void *)0x80000001005D6970;
    v6._countAndFlagsBits = 0x69726F7661666E55;
    v6._object = (void *)0xEA00000000006574;
    v7._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v29._countAndFlagsBits = 0xD00000000000002BLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v29);

    id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_10014F178;
    uint64_t v28 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    Swift::Int v25 = sub_100156760;
    unint64_t v26 = &unk_100692290;
    id v12 = _Block_copy(&aBlock);
    id v13 = [v9 initWithIdentifier:v10 localizedTitle:v11 unresolvedHandler:v12];

    _Block_release(v12);
    swift_release();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14];

    [v13 setImage:v15];
    [v13 setSupportsMultipleItems:0];
    sub_1000CBE70(&qword_100707EF0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    static UTType.folder.getter();
    uint64_t v17 = UTType.identifier.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v13 setSupportedContentTypes:isa];

    [v13 setMenuSortOrder:16];
    uint64_t v27 = sub_10014F2E0;
    uint64_t v28 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v24 = 1107296256;
    Swift::Int v25 = sub_100053508;
    unint64_t v26 = &unk_1006922B8;
    int64_t v21 = _Block_copy(&aBlock);
    id v22 = [self predicateWithBlock:v21];
    _Block_release(v21);
    swift_release();
    [v13 setFilteringPredicate:v22];

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10015A634(uint64_t a1)
{
  v2._countAndFlagsBits = 0xD000000000000023;
  v2._object = (void *)0x80000001005D6CF0;
  v3._countAndFlagsBits = 0xD00000000000005FLL;
  v3._object = (void *)0x80000001005D6D20;
  DOCLocalizedDictionaryString(_:comment:)(v2, v3);
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 56) = &type metadata for Int;
  *(void *)(v4 + 64) = &protocol witness table for Int;
  *(void *)(v4 + 32) = a1;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1 < 1)
  {
    uint64_t v9 = 0;
  }
  else
  {
    v5._countAndFlagsBits = 0xD000000000000023;
    v5._object = (void *)0x80000001005D6CF0;
    v6._countAndFlagsBits = 0xD00000000000005FLL;
    v6._object = (void *)0x80000001005D6D20;
    DOCLocalizedDictionaryString(_:comment:)(v5, v6);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    *(void *)(v7 + 56) = &type metadata for Int;
    *(void *)(v7 + 64) = &protocol witness table for Int;
    *(void *)(v7 + 32) = 0;
    static String.localizedStringWithFormat(_:_:)();
    uint64_t v9 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v26 = sub_10014F6A4;
  uint64_t v27 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1004408BC;
  Swift::Int v25 = &unk_100692B00;
  id v13 = _Block_copy(&aBlock);
  id v14 = [v10 initWithIdentifier:v11 localizedTitle:v12 resolvedHandler:v13];

  _Block_release(v13);
  swift_release();
  if (v9)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  [v14 setLocalizedCompactTitle:v15];

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [self systemImageNamed:v16];

  [v14 setImage:v17];
  if (UIDocumentBrowserActionAvailabilityToolbar >= 2uLL)
  {
    uint64_t v18 = UIDocumentBrowserActionAvailabilityToolbar | 1;
    if ((UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet & ~(UIDocumentBrowserActionAvailabilityToolbar | 1)) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v18 = 1;
    if (UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet <= 1uLL)
    {
      if (UIDocumentBrowserActionAvailabilityPreviewQuickActions < 2uLL) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  v18 |= UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
LABEL_13:
  if ((UIDocumentBrowserActionAvailabilityPreviewQuickActions & ~v18) != 0) {
LABEL_14:
  }
    v18 |= UIDocumentBrowserActionAvailabilityPreviewQuickActions;
LABEL_15:
  [v14 setAvailability:v18];
  [v14 setSupportsMultipleItems:1];
  [v14 setMenuSortOrder:12];
  unint64_t v26 = sub_100150ACC;
  uint64_t v27 = 0;
  aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_100053508;
  Swift::Int v25 = &unk_100692B28;
  uint64_t v19 = _Block_copy(&aBlock);
  id v20 = [self predicateWithBlock:v19];
  _Block_release(v19);
  swift_release();
  [v14 setFilteringPredicate:v20];

  return v14;
}

id sub_10015AAA4()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v0 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = sub_1001527E4;
  uint64_t v15 = 0;
  id v10 = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  NSString v12 = sub_100156760;
  id v13 = &unk_100692948;
  Swift::String v3 = _Block_copy(&v10);
  id v4 = [v0 initWithIdentifier:v1 localizedTitle:v2 unresolvedHandler:v3];

  _Block_release(v3);
  swift_release();
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self systemImageNamed:v5];

  [v4 setImage:v6];
  [v4 setSupportsMultipleItems:0];
  [v4 setNavigationSide:2];
  [v4 setAvailability:1];
  [v4 setMenuSortOrder:19];
  id v14 = sub_100152A14;
  uint64_t v15 = 0;
  id v10 = _NSConcreteStackBlock;
  uint64_t v11 = 1107296256;
  NSString v12 = sub_100053508;
  id v13 = &unk_100692970;
  uint64_t v7 = _Block_copy(&v10);
  id v8 = [self predicateWithBlock:v7];
  _Block_release(v7);
  swift_release();
  [v4 setFilteringPredicate:v8];

  return v4;
}

uint64_t sub_10015AD48(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v24 = v3;
      unint64_t v5 = v3 & 0xC000000000000001;
      uint64_t v6 = 4;
      unint64_t v26 = v3 & 0xC000000000000001;
      uint64_t v25 = v4;
      do
      {
        uint64_t v7 = v6 - 4;
        if (v5)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_28;
          }
        }
        else
        {
          swift_unknownObjectRetain();
          uint64_t v8 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        swift_getObjectType();
        if (DOCNode.isFINode.getter() & 1) != 0 && (swift_getObjectType(), (DOCNode.isFINode.getter()))
        {
          self;
          id v9 = [(id)swift_dynamicCastObjCClassUnconditional() parent];
          self;
          swift_dynamicCastObjCClassUnconditional();
          if (!v9)
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            return 0;
          }
          sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
          swift_unknownObjectRetain();
          id v10 = v9;
          unint64_t v5 = v26;
          char v11 = static NSObject.== infix(_:_:)();
          swift_unknownObjectRelease();

          swift_unknownObjectRelease();
          if ((v11 & 1) == 0) {
            goto LABEL_26;
          }
        }
        else if (DOCNode.isFPItem.getter())
        {
          self;
          id v12 = [(id)swift_dynamicCastObjCClassUnconditional() parentItemID];
          uint64_t v13 = FPItemID.identifierString.getter();
          uint64_t v15 = v14;

          id v16 = [a2 fpfs_fpItem];
          if (v16)
          {
            id v17 = v16;
            id v18 = [v16 itemID];

            uint64_t v19 = FPItemID.identifierString.getter();
            uint64_t v21 = v20;

            if (v13 == v19 && v15 == v21)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_26:
              swift_bridgeObjectRelease();
              return 0;
            }
            char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v3 = v24;
            uint64_t v4 = v25;
            unint64_t v5 = v26;
            if (v22) {
              goto LABEL_26;
            }
          }
          else
          {
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v4 = v25;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v6;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

void sub_10015B0AC(int64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    id v7 = *(id *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v7)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_22:
    a2(0);
    swift_release();
    swift_release();
    return;
  }
  if (a1 < 0) {
    id v7 = (id)a1;
  }
  else {
    id v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 <= 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v9 = *(id *)(a1 + 32);
  }
  id v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 effectiveParentItemIdentifier];

  id v18 = v11;
  LOBYTE(v10) = sub_1001586C8(a1);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release();
    swift_release();

    return;
  }

LABEL_9:
  id v7 = [self defaultManager];
  if (v8)
  {
LABEL_27:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v13 = v12;
    id v14 = [v12 itemID:v18];

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_100162A44;
    *(void *)(v15 + 24) = v6;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_1006924C0;
    id v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 fetchParentsForItemID:v14 recursively:0 completionHandler:v16];

    _Block_release(v16);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_10015B400(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_85;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v10 < 1)
  {
LABEL_86:
    ((void (*)(void))a2)(0);
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v77 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v77 = a1;
    }
    uint64_t v74 = (void (*)(void *))a2;
    unint64_t v75 = v8;
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    Swift::Int v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      Swift::Int v14 = 0;
      a2 = v12 + 32;
      uint64_t v15 = v12 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v17 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v17)
        {
          if (v14 >= v13 - 1) {
            goto LABEL_17;
          }
          id v18 = (void *)(v15 + 8 * v13--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v19 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v19 & 1) == 0) {
              break;
            }
            --v13;
            --v18;
            if (v14 >= v13) {
              goto LABEL_17;
            }
          }
          uint64_t v16 = *(void *)(a2 + 8 * v14);
          *(void *)(a2 + 8 * v14) = *v18;
          void *v18 = v16;
        }
        if (++v14 >= v13) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v14 = 0;
LABEL_17:
    specialized Array._endMutation()();
    unint64_t v20 = v77;
    unint64_t v21 = v77 >> 62;
    if (!(v77 >> 62))
    {
      uint64_t v22 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22 < v14) {
        goto LABEL_93;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 < v14) {
      goto LABEL_118;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v67 < v14) {
      goto LABEL_119;
    }
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v68 < v22) {
      break;
    }
LABEL_19:
    if (v22 < 0) {
      goto LABEL_94;
    }
    uint64_t v3 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0 && v14 != v22)
    {
      if (v14 >= (unint64_t)v22) {
        goto LABEL_97;
      }
      Swift::Int v23 = v14;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
        a2 = v23;
      }
      while (v22 != v23);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v24 = v27;
      uint64_t v4 = v28;
      unint64_t v25 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      a2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((a2 & 0x8000000000000000) != 0) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v25 = (2 * v22) | 1;
      uint64_t v26 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v14;
    }
    if (v26 < v14) {
      goto LABEL_95;
    }
    if (v14 && v3)
    {
      for (i = 0; i != v14; uint64_t v3 = i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v32 = v34;
      int64_t v33 = v35;
      unint64_t v73 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = v20 & 0xFFFFFFFFFFFFFF8;
      uint64_t v32 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v73 = (2 * v14) | 1;
      swift_bridgeObjectRetain();
      int64_t v33 = 0;
    }
    a2 = (v25 >> 1) - v4;
    if (v25 >> 1 != v4)
    {
      if ((uint64_t)(v25 >> 1) <= v4) {
        goto LABEL_100;
      }
      uint64_t v72 = v32;
      self;
      unint64_t v40 = (void *)swift_dynamicCastObjCClass();
      if (!v40 || (id v41 = [v40 parent]) == 0)
      {
        v74(0);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      id v42 = v41;
      swift_unknownObjectRetain();
      uint64_t v43 = v24 + 8 * v4;
      do
      {
        self;
        uint64_t v44 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v45 = [v44 parent];
        if (!v45)
        {
          swift_unknownObjectRelease();
LABEL_60:
          swift_unknownObjectRelease();
          v74(0);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        objc_super v46 = v45;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        uint64_t v4 = v42;
        uint64_t v3 = v46;
        char v47 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v47 & 1) == 0) {
          goto LABEL_60;
        }
        v43 += 8;
        --a2;
      }
      while (a2);
      swift_unknownObjectRelease();
      int64_t v48 = v73 >> 1;
      if (v33 == v73 >> 1)
      {
        id v49 = (id)v4;
        v74(v42);
        swift_unknownObjectRelease();

        goto LABEL_111;
      }
      int64_t v50 = v48 - v33;
      if (__OFSUB__(v48, v33)) {
        goto LABEL_102;
      }
      uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v51 = v75;
      if (v50)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v50 & 0x8000000000000000) == 0)
        {
          if (v33 <= v48) {
            unint64_t v52 = v73 >> 1;
          }
          else {
            unint64_t v52 = v33;
          }
          a2 = v52 - v33;
          uint64_t v53 = v72 + 8 * v33;
          uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
          while (a2)
          {
            v53 += 8;
            self;
            swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --a2;
            if (!--v50)
            {
              uint64_t v3 = aBlock[0];
              unint64_t v51 = v75;
              goto LABEL_71;
            }
          }
          goto LABEL_96;
        }
        __break(1u);
        goto LABEL_114;
      }
LABEL_71:
      a2 = swift_allocObject();
      *(void *)(a2 + 16) = v4;
      *(void *)(a2 + 24) = sub_100162670;
      *(void *)(a2 + 32) = v51;
      if ((unint64_t)v3 >> 62) {
        goto LABEL_103;
      }
      id v54 = *(id *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v55 = (id)v4;
      swift_retain_n();
      id v56 = v55;
      if (v54)
      {
        unint64_t v75 = a2;
        swift_bridgeObjectRetain();
LABEL_74:
        a2 = v3 & 0xC000000000000001;
        if ((v3 & 0xC000000000000001) != 0)
        {
LABEL_114:
          id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_77;
        }
        if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v57 = *(id *)(v3 + 32);
LABEL_77:
          uint64_t v58 = v57;
          swift_bridgeObjectRelease();
          id v59 = [v58 effectiveParentItemIdentifier];

          id v60 = v59;
          LOBYTE(v59) = sub_1001586C8(v3);

          if (v59)
          {

            goto LABEL_79;
          }
          v74(0);

          swift_unknownObjectRelease();
          goto LABEL_110;
        }
        __break(1u);
LABEL_116:
        id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_82:
        id v62 = v61;
        id v63 = [v61 itemID];

        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = sub_100162A50;
        *(void *)(v64 + 24) = v75;
        aBlock[4] = sub_100162C64;
        aBlock[5] = v64;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016A350;
        aBlock[3] = &unk_100692448;
        id v65 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v54 fetchParentsForItemID:v63 recursively:0 completionHandler:v65];

        _Block_release(v65);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
LABEL_112:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_109:
      v74(0);

      swift_unknownObjectRelease();
LABEL_110:
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_111:
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_112;
    }
    a2 = v32;
    uint64_t v4 = v31;
    uint64_t v8 = (v73 >> 1) - v33;
    if (__OFSUB__(v73 >> 1, v33)) {
      goto LABEL_99;
    }
    unint64_t v37 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_48:
      swift_retain();
      sub_10015B0AC((int64_t)v37, (void (*)(void))v74, a3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0) {
      goto LABEL_101;
    }
    if (v33 <= (uint64_t)(v73 >> 1)) {
      unint64_t v38 = v73 >> 1;
    }
    else {
      unint64_t v38 = v33;
    }
    unint64_t v9 = v38 - v33;
    unint64_t v39 = a2 + 8 * v33;
    uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (v9)
    {
      v39 += 8;
      self;
      swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      a2 = *(void *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      --v9;
      if (!--v8)
      {
        unint64_t v37 = (void *)aBlock[0];
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_85:
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66 < 1) {
      goto LABEL_86;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  if (v3 < 0) {
    id v54 = (id)v3;
  }
  else {
    id v54 = (id)(v3 & 0xFFFFFFFFFFFFFF8);
  }
  id v69 = (id)v4;
  swift_retain_n();
  id v70 = v69;
  swift_bridgeObjectRetain();
  uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v71 <= 0) {
    goto LABEL_109;
  }
  unint64_t v75 = a2;
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  a2 = v3 & 0xC000000000000001;
LABEL_79:
  id v54 = [self defaultManager];
  if (a2) {
    goto LABEL_116;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v61 = *(id *)(v3 + 32);
    goto LABEL_82;
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
}

uint64_t sub_10015BFE0(void *a1, uint64_t a2, char *a3, void *a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a4;
  *(void *)(result + 24) = a5;
  unint64_t v37 = a3;
  if (*(void *)&a3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    uint64_t v14 = result;
    id v15 = a4;
    id v16 = a5;
    id v17 = a1;
    unint64_t v18 = sub_10007CC5C((uint64_t)v17);
    __chkstk_darwin(v18);
    v32[-2] = v17;
    v32[-1] = a2;
    uint64_t v19 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_100162714, (uint64_t)&v32[-4], v18);

    swift_bridgeObjectRelease();
    if (v19)
    {
      uint64_t v20 = swift_unknownObjectRetain();
      sub_10015C3BC(v20, (uint64_t)v15, v16);
      swift_release();
      return swift_unknownObjectRelease_n();
    }
    else
    {
      uint64_t v34 = a2;
      static Logger.UI.getter();
      id v21 = v17;
      uint64_t v22 = Logger.logObject.getter();
      os_log_type_t v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        v39[0] = v33;
        *(_DWORD *)uint64_t v24 = 136315394;
        uint64_t v38 = sub_10009B0E4(0xD000000000000027, 0x80000001005D6A20, v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v24 + 12) = 2080;
        v32[1] = v24 + 14;
        id v25 = [v21 displayName];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        uint64_t v38 = sub_10009B0E4(v26, v28, v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "%s - Waiting for matching node for %s", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
      uint64_t v29 = v34;
      unint64_t v30 = (void *)swift_allocObject();
      v30[2] = v21;
      v30[3] = sub_10016270C;
      v30[4] = v14;
      id v31 = v21;
      swift_retain();
      sub_1001FFA58(v31, v29, (uint64_t)sub_100162774, (uint64_t)v30, v37);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10015C3BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v10 = swift_unknownObjectRetain();
    sub_10015C664(v10, a2, a3);
    return swift_unknownObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v17 = sub_10009B0E4(0xD00000000000001ELL, 0x80000001005D6A50, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2080;
      uint64_t v17 = (uint64_t)a3;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v15 = String.init<A>(describing:)();
      uint64_t v17 = sub_10009B0E4(v15, v16, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s did not find matching node for node: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_10015C664(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  sub_10013D2A0(v12, (uint64_t)v11);
  uint64_t v13 = *(void *)(*(void *)v11 + 16);
  uint64_t v33 = v8;
  if (v13)
  {
    uint64_t v32 = v11;
    v27[1] = a2;
    unint64_t v28 = a3;
    uint64_t v29 = v6;
    uint64_t v30 = v5;
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v14 = (uint64_t *)(v31 + 64);
    while (1)
    {
      uint64_t v15 = *(v14 - 4);
      uint64_t v16 = *(v14 - 3);
      uint64_t v17 = *(v14 - 2);
      uint64_t v18 = *(v14 - 1);
      uint64_t v19 = *v14;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      char v20 = Array<A>.contains(node:)();
      swift_bridgeObjectRelease();
      if (v20) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 += 5;
      if (!--v13)
      {
        uint64_t v36 = v15;
        uint64_t v37 = v16;
        uint64_t v38 = v17;
        uint64_t v39 = v18;
        uint64_t v40 = v19;
        swift_bridgeObjectRelease();
        uint64_t v6 = v29;
        uint64_t v5 = v30;
        uint64_t v11 = v32;
        uint64_t v8 = v33;
        a3 = v28;
        goto LABEL_6;
      }
    }
    uint64_t v36 = v15;
    uint64_t v37 = v16;
    uint64_t v38 = v17;
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    swift_bridgeObjectRelease();
    sub_10013D304((uint64_t)v32);
    if ((*(unsigned char *)(v19 + 24) & 1) == 0) {
      sub_1001BE97C(&v36, 0);
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    sub_10013D304((uint64_t)v11);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v34 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005D6A70, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v34 = (uint64_t)a3;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v24 = String.init<A>(describing:)();
      uint64_t v34 = sub_10009B0E4(v24, v25, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s can not find section containing node: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v33, v5);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

void sub_10015CA6C(int64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    id v7 = *(id *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v7)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_22:
    a2(0);
    swift_release();
    swift_release();
    return;
  }
  if (a1 < 0) {
    id v7 = (id)a1;
  }
  else {
    id v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 <= 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v9 = *(id *)(a1 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 effectiveParentItemIdentifier];

  id v18 = v11;
  LOBYTE(v10) = sub_1001586C8(a1);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release();
    swift_release();

    return;
  }

LABEL_9:
  id v7 = [self defaultManager];
  if (v8)
  {
LABEL_27:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v13 = v12;
    id v14 = [v12 itemID:v18];

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_100162C78;
    *(void *)(v15 + 24) = v6;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_1006926A0;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 fetchParentsForItemID:v14 recursively:0 completionHandler:v16];

    _Block_release(v16);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_10015CDC0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_85;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v10 < 1)
  {
LABEL_86:
    ((void (*)(void))a2)(0);
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v77 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v77 = a1;
    }
    uint64_t v74 = (void (*)(void *))a2;
    unint64_t v75 = v8;
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    Swift::Int v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      Swift::Int v14 = 0;
      a2 = v12 + 32;
      uint64_t v15 = v12 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v17 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v17)
        {
          if (v14 >= v13 - 1) {
            goto LABEL_17;
          }
          id v18 = (void *)(v15 + 8 * v13--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v19 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v19 & 1) == 0) {
              break;
            }
            --v13;
            --v18;
            if (v14 >= v13) {
              goto LABEL_17;
            }
          }
          uint64_t v16 = *(void *)(a2 + 8 * v14);
          *(void *)(a2 + 8 * v14) = *v18;
          void *v18 = v16;
        }
        if (++v14 >= v13) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v14 = 0;
LABEL_17:
    specialized Array._endMutation()();
    unint64_t v20 = v77;
    unint64_t v21 = v77 >> 62;
    if (!(v77 >> 62))
    {
      uint64_t v22 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22 < v14) {
        goto LABEL_93;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 < v14) {
      goto LABEL_118;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v67 < v14) {
      goto LABEL_119;
    }
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v68 < v22) {
      break;
    }
LABEL_19:
    if (v22 < 0) {
      goto LABEL_94;
    }
    uint64_t v3 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0 && v14 != v22)
    {
      if (v14 >= (unint64_t)v22) {
        goto LABEL_97;
      }
      Swift::Int v23 = v14;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
        a2 = v23;
      }
      while (v22 != v23);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v24 = v27;
      uint64_t v4 = v28;
      unint64_t v25 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      a2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((a2 & 0x8000000000000000) != 0) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v25 = (2 * v22) | 1;
      uint64_t v26 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v14;
    }
    if (v26 < v14) {
      goto LABEL_95;
    }
    if (v14 && v3)
    {
      for (i = 0; i != v14; uint64_t v3 = i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v32 = v34;
      int64_t v33 = v35;
      unint64_t v73 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = v20 & 0xFFFFFFFFFFFFFF8;
      uint64_t v32 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v73 = (2 * v14) | 1;
      swift_bridgeObjectRetain();
      int64_t v33 = 0;
    }
    a2 = (v25 >> 1) - v4;
    if (v25 >> 1 != v4)
    {
      if ((uint64_t)(v25 >> 1) <= v4) {
        goto LABEL_100;
      }
      uint64_t v72 = v32;
      self;
      uint64_t v40 = (void *)swift_dynamicCastObjCClass();
      if (!v40 || (id v41 = [v40 parent]) == 0)
      {
        v74(0);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      id v42 = v41;
      swift_unknownObjectRetain();
      uint64_t v43 = v24 + 8 * v4;
      do
      {
        self;
        uint64_t v44 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v45 = [v44 parent];
        if (!v45)
        {
          swift_unknownObjectRelease();
LABEL_60:
          swift_unknownObjectRelease();
          v74(0);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        objc_super v46 = v45;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        uint64_t v4 = v42;
        uint64_t v3 = v46;
        char v47 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v47 & 1) == 0) {
          goto LABEL_60;
        }
        v43 += 8;
        --a2;
      }
      while (a2);
      swift_unknownObjectRelease();
      int64_t v48 = v73 >> 1;
      if (v33 == v73 >> 1)
      {
        id v49 = (id)v4;
        v74(v42);
        swift_unknownObjectRelease();

        goto LABEL_111;
      }
      int64_t v50 = v48 - v33;
      if (__OFSUB__(v48, v33)) {
        goto LABEL_102;
      }
      uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v51 = v75;
      if (v50)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v50 & 0x8000000000000000) == 0)
        {
          if (v33 <= v48) {
            unint64_t v52 = v73 >> 1;
          }
          else {
            unint64_t v52 = v33;
          }
          a2 = v52 - v33;
          uint64_t v53 = v72 + 8 * v33;
          uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
          while (a2)
          {
            v53 += 8;
            self;
            swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --a2;
            if (!--v50)
            {
              uint64_t v3 = aBlock[0];
              unint64_t v51 = v75;
              goto LABEL_71;
            }
          }
          goto LABEL_96;
        }
        __break(1u);
        goto LABEL_114;
      }
LABEL_71:
      a2 = swift_allocObject();
      *(void *)(a2 + 16) = v4;
      *(void *)(a2 + 24) = sub_100162780;
      *(void *)(a2 + 32) = v51;
      if ((unint64_t)v3 >> 62) {
        goto LABEL_103;
      }
      id v54 = *(id *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v55 = (id)v4;
      swift_retain_n();
      id v56 = v55;
      if (v54)
      {
        unint64_t v75 = a2;
        swift_bridgeObjectRetain();
LABEL_74:
        a2 = v3 & 0xC000000000000001;
        if ((v3 & 0xC000000000000001) != 0)
        {
LABEL_114:
          id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_77;
        }
        if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v57 = *(id *)(v3 + 32);
LABEL_77:
          uint64_t v58 = v57;
          swift_bridgeObjectRelease();
          id v59 = [v58 effectiveParentItemIdentifier];

          id v60 = v59;
          LOBYTE(v59) = sub_1001586C8(v3);

          if (v59)
          {

            goto LABEL_79;
          }
          v74(0);

          swift_unknownObjectRelease();
          goto LABEL_110;
        }
        __break(1u);
LABEL_116:
        id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_82:
        id v62 = v61;
        id v63 = [v61 itemID];

        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = sub_100162A50;
        *(void *)(v64 + 24) = v75;
        aBlock[4] = sub_100162C64;
        aBlock[5] = v64;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016A350;
        aBlock[3] = &unk_100692628;
        id v65 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v54 fetchParentsForItemID:v63 recursively:0 completionHandler:v65];

        _Block_release(v65);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
LABEL_112:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_109:
      v74(0);

      swift_unknownObjectRelease();
LABEL_110:
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_111:
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_112;
    }
    a2 = v32;
    uint64_t v4 = v31;
    uint64_t v8 = (v73 >> 1) - v33;
    if (__OFSUB__(v73 >> 1, v33)) {
      goto LABEL_99;
    }
    uint64_t v37 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_48:
      swift_retain();
      sub_10015CA6C((int64_t)v37, (void (*)(void))v74, a3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0) {
      goto LABEL_101;
    }
    if (v33 <= (uint64_t)(v73 >> 1)) {
      unint64_t v38 = v73 >> 1;
    }
    else {
      unint64_t v38 = v33;
    }
    unint64_t v9 = v38 - v33;
    unint64_t v39 = a2 + 8 * v33;
    uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (v9)
    {
      v39 += 8;
      self;
      swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      a2 = *(void *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      --v9;
      if (!--v8)
      {
        uint64_t v37 = (void *)aBlock[0];
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_85:
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66 < 1) {
      goto LABEL_86;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  if (v3 < 0) {
    id v54 = (id)v3;
  }
  else {
    id v54 = (id)(v3 & 0xFFFFFFFFFFFFFF8);
  }
  id v69 = (id)v4;
  swift_retain_n();
  id v70 = v69;
  swift_bridgeObjectRetain();
  uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v71 <= 0) {
    goto LABEL_109;
  }
  unint64_t v75 = a2;
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  a2 = v3 & 0xC000000000000001;
LABEL_79:
  id v54 = [self defaultManager];
  if (a2) {
    goto LABEL_116;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v61 = *(id *)(v3 + 32);
    goto LABEL_82;
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
}

void sub_10015D9A0(int64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    id v7 = *(id *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v7)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_22:
    a2(0);
    swift_release();
    swift_release();
    return;
  }
  if (a1 < 0) {
    id v7 = (id)a1;
  }
  else {
    id v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 <= 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v9 = *(id *)(a1 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 effectiveParentItemIdentifier];

  id v18 = v11;
  LOBYTE(v10) = sub_1001586C8(a1);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release();
    swift_release();

    return;
  }

LABEL_9:
  id v7 = [self defaultManager];
  if (v8)
  {
LABEL_27:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a1 + 32);
LABEL_12:
    Swift::Int v13 = v12;
    id v14 = [v12 itemID:v18];

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_100162C7C;
    *(void *)(v15 + 24) = v6;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_1006927B8;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 fetchParentsForItemID:v14 recursively:0 completionHandler:v16];

    _Block_release(v16);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_10015DCF4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_85;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v10 < 1)
  {
LABEL_86:
    ((void (*)(void))a2)(0);
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v77 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v77 = a1;
    }
    uint64_t v74 = (void (*)(void *))a2;
    unint64_t v75 = v8;
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    Swift::Int v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
      Swift::Int v14 = 0;
      a2 = v12 + 32;
      uint64_t v15 = v12 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v17 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v17)
        {
          if (v14 >= v13 - 1) {
            goto LABEL_17;
          }
          id v18 = (void *)(v15 + 8 * v13--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v19 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v19 & 1) == 0) {
              break;
            }
            --v13;
            --v18;
            if (v14 >= v13) {
              goto LABEL_17;
            }
          }
          uint64_t v16 = *(void *)(a2 + 8 * v14);
          *(void *)(a2 + 8 * v14) = *v18;
          void *v18 = v16;
        }
        if (++v14 >= v13) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v14 = 0;
LABEL_17:
    specialized Array._endMutation()();
    unint64_t v20 = v77;
    unint64_t v21 = v77 >> 62;
    if (!(v77 >> 62))
    {
      uint64_t v22 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22 < v14) {
        goto LABEL_93;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v22 < v14) {
      goto LABEL_118;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v67 < v14) {
      goto LABEL_119;
    }
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v68 < v22) {
      break;
    }
LABEL_19:
    if (v22 < 0) {
      goto LABEL_94;
    }
    uint64_t v3 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0 && v14 != v22)
    {
      if (v14 >= (unint64_t)v22) {
        goto LABEL_97;
      }
      Swift::Int v23 = v14;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
        a2 = v23;
      }
      while (v22 != v23);
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v24 = v27;
      uint64_t v4 = v28;
      unint64_t v25 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      a2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if ((a2 & 0x8000000000000000) != 0) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v25 = (2 * v22) | 1;
      uint64_t v26 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v14;
    }
    if (v26 < v14) {
      goto LABEL_95;
    }
    if (v14 && v3)
    {
      for (i = 0; i != v14; uint64_t v3 = i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v32 = v34;
      int64_t v33 = v35;
      unint64_t v73 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v31 = v20 & 0xFFFFFFFFFFFFFF8;
      uint64_t v32 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v73 = (2 * v14) | 1;
      swift_bridgeObjectRetain();
      int64_t v33 = 0;
    }
    a2 = (v25 >> 1) - v4;
    if (v25 >> 1 != v4)
    {
      if ((uint64_t)(v25 >> 1) <= v4) {
        goto LABEL_100;
      }
      uint64_t v72 = v32;
      self;
      uint64_t v40 = (void *)swift_dynamicCastObjCClass();
      if (!v40 || (id v41 = [v40 parent]) == 0)
      {
        v74(0);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      id v42 = v41;
      swift_unknownObjectRetain();
      uint64_t v43 = v24 + 8 * v4;
      do
      {
        self;
        uint64_t v44 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v45 = [v44 parent];
        if (!v45)
        {
          swift_unknownObjectRelease();
LABEL_60:
          swift_unknownObjectRelease();
          v74(0);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        objc_super v46 = v45;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        uint64_t v4 = v42;
        uint64_t v3 = v46;
        char v47 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v47 & 1) == 0) {
          goto LABEL_60;
        }
        v43 += 8;
        --a2;
      }
      while (a2);
      swift_unknownObjectRelease();
      int64_t v48 = v73 >> 1;
      if (v33 == v73 >> 1)
      {
        id v49 = (id)v4;
        v74(v42);
        swift_unknownObjectRelease();

        goto LABEL_111;
      }
      int64_t v50 = v48 - v33;
      if (__OFSUB__(v48, v33)) {
        goto LABEL_102;
      }
      uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
      unint64_t v51 = v75;
      if (v50)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v50 & 0x8000000000000000) == 0)
        {
          if (v33 <= v48) {
            unint64_t v52 = v73 >> 1;
          }
          else {
            unint64_t v52 = v33;
          }
          a2 = v52 - v33;
          uint64_t v53 = v72 + 8 * v33;
          uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
          while (a2)
          {
            v53 += 8;
            self;
            swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --a2;
            if (!--v50)
            {
              uint64_t v3 = aBlock[0];
              unint64_t v51 = v75;
              goto LABEL_71;
            }
          }
          goto LABEL_96;
        }
        __break(1u);
        goto LABEL_114;
      }
LABEL_71:
      a2 = swift_allocObject();
      *(void *)(a2 + 16) = v4;
      *(void *)(a2 + 24) = sub_10016278C;
      *(void *)(a2 + 32) = v51;
      if ((unint64_t)v3 >> 62) {
        goto LABEL_103;
      }
      id v54 = *(id *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v55 = (id)v4;
      swift_retain_n();
      id v56 = v55;
      if (v54)
      {
        unint64_t v75 = a2;
        swift_bridgeObjectRetain();
LABEL_74:
        a2 = v3 & 0xC000000000000001;
        if ((v3 & 0xC000000000000001) != 0)
        {
LABEL_114:
          id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_77;
        }
        if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v57 = *(id *)(v3 + 32);
LABEL_77:
          uint64_t v58 = v57;
          swift_bridgeObjectRelease();
          id v59 = [v58 effectiveParentItemIdentifier];

          id v60 = v59;
          LOBYTE(v59) = sub_1001586C8(v3);

          if (v59)
          {

            goto LABEL_79;
          }
          v74(0);

          swift_unknownObjectRelease();
          goto LABEL_110;
        }
        __break(1u);
LABEL_116:
        id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_82:
        id v62 = v61;
        id v63 = [v61 itemID];

        uint64_t v64 = swift_allocObject();
        *(void *)(v64 + 16) = sub_100162A50;
        *(void *)(v64 + 24) = v75;
        aBlock[4] = sub_100162C64;
        aBlock[5] = v64;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016A350;
        aBlock[3] = &unk_100692740;
        id v65 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v54 fetchParentsForItemID:v63 recursively:0 completionHandler:v65];

        _Block_release(v65);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
LABEL_112:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_109:
      v74(0);

      swift_unknownObjectRelease();
LABEL_110:
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_111:
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      goto LABEL_112;
    }
    a2 = v32;
    uint64_t v4 = v31;
    uint64_t v8 = (v73 >> 1) - v33;
    if (__OFSUB__(v73 >> 1, v33)) {
      goto LABEL_99;
    }
    uint64_t v37 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_48:
      swift_retain();
      sub_10015D9A0((int64_t)v37, (void (*)(void))v74, a3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0) {
      goto LABEL_101;
    }
    if (v33 <= (uint64_t)(v73 >> 1)) {
      unint64_t v38 = v73 >> 1;
    }
    else {
      unint64_t v38 = v33;
    }
    unint64_t v9 = v38 - v33;
    unint64_t v39 = a2 + 8 * v33;
    uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (v9)
    {
      v39 += 8;
      self;
      swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      a2 = *(void *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      --v9;
      if (!--v8)
      {
        uint64_t v37 = (void *)aBlock[0];
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_85:
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66 < 1) {
      goto LABEL_86;
    }
  }
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  if (v3 < 0) {
    id v54 = (id)v3;
  }
  else {
    id v54 = (id)(v3 & 0xFFFFFFFFFFFFFF8);
  }
  id v69 = (id)v4;
  swift_retain_n();
  id v70 = v69;
  swift_bridgeObjectRetain();
  uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v71 <= 0) {
    goto LABEL_109;
  }
  unint64_t v75 = a2;
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  a2 = v3 & 0xC000000000000001;
LABEL_79:
  id v54 = [self defaultManager];
  if (a2) {
    goto LABEL_116;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v61 = *(id *)(v3 + 32);
    goto LABEL_82;
  }
  __break(1u);
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
}

void sub_10015E8D4(int64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  if (!((unint64_t)a1 >> 62))
  {
    id v7 = *(id *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    if (v7)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_22:
    a2(0);
    swift_release();
    swift_release();
    return;
  }
  if (a1 < 0) {
    id v7 = (id)a1;
  }
  else {
    id v7 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v17 <= 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v8 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v9 = *(id *)(a1 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = [v10 effectiveParentItemIdentifier];

  id v18 = v11;
  LOBYTE(v10) = sub_1001586C8(a1);

  if ((v10 & 1) == 0)
  {
    a2(0);
    swift_release();
    swift_release();

    return;
  }

LABEL_9:
  id v7 = [self defaultManager];
  if (v8)
  {
LABEL_27:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a1 + 32);
LABEL_12:
    Swift::Int v13 = v12;
    id v14 = [v12 itemID:v18];

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_100162C80;
    *(void *)(v15 + 24) = v6;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_100692920;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v7 fetchParentsForItemID:v14 recursively:0 completionHandler:v16];

    _Block_release(v16);
    swift_release();
    swift_release();

    return;
  }
  __break(1u);
}

void sub_10015EC28(unint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_88;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  if (v10 < 1)
  {
LABEL_89:
    ((void (*)(void))a2)(0);
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v79 = a1;
    if (v9 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v79 = a1;
    }
    unint64_t v75 = a2;
    uint64_t v76 = v8;
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
      Swift::Int v13 = 0;
      uint64_t v14 = v12 + 32;
      uint64_t v15 = v12 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v17 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v17)
        {
          if (v13 >= v8 - 1) {
            goto LABEL_17;
          }
          id v18 = (void *)(v15 + 8 * v8--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v19 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v19 & 1) == 0) {
              break;
            }
            --v8;
            --v18;
            if (v13 >= v8) {
              goto LABEL_17;
            }
          }
          uint64_t v16 = *(void *)(v14 + 8 * v13);
          *(void *)(v14 + 8 * v13) = *v18;
          void *v18 = v16;
        }
        if (++v13 >= v8) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v13 = 0;
LABEL_17:
    specialized Array._endMutation()();
    uint64_t v20 = v79;
    unint64_t v21 = v79 >> 62;
    if (v79 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v22 < v13) {
        goto LABEL_121;
      }
      swift_bridgeObjectRetain();
      uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v68 < v13) {
        goto LABEL_122;
      }
      swift_bridgeObjectRetain();
      uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v69 < v22)
      {
        __break(1u);
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22 < v13) {
        goto LABEL_96;
      }
    }
    if (v22 < 0) {
      goto LABEL_97;
    }
    uint64_t v3 = v20 & 0xC000000000000001;
    if ((v20 & 0xC000000000000001) != 0 && v13 != v22)
    {
      if (v13 >= (unint64_t)v22) {
        goto LABEL_100;
      }
      Swift::Int v23 = v13;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v23++);
      }
      while (v22 != v23);
    }
    if (v21)
    {
      if (v20 < 0) {
        uint64_t v8 = v20;
      }
      else {
        uint64_t v8 = v20 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v77 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v24 = v26;
      uint64_t v4 = v27;
      unint64_t v25 = v28;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v29 < 0) {
        goto LABEL_101;
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v25 = (2 * v22) | 1;
      uint64_t v77 = v20 & 0xFFFFFFFFFFFFFF8;
      uint64_t v8 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v4 = v13;
    }
    if (v8 < v13) {
      goto LABEL_98;
    }
    if (v13 && v3)
    {
      for (i = 0; i != v13; uint64_t v3 = i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v31 = v32;
      uint64_t v9 = v33;
      unint64_t v74 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v8 = v20 & 0xFFFFFFFFFFFFFF8;
      uint64_t v31 = (v20 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v74 = (2 * v13) | 1;
      swift_bridgeObjectRetain();
      uint64_t v9 = 0;
    }
    unint64_t v35 = (v25 >> 1) - v4;
    if (v25 >> 1 != v4) {
      break;
    }
    uint64_t v4 = v8;
    uint64_t v8 = (v74 >> 1) - v9;
    if (__OFSUB__(v74 >> 1, v9)) {
      goto LABEL_102;
    }
    unint64_t v36 = _swiftEmptyArrayStorage;
    if (!v8)
    {
LABEL_51:
      swift_retain();
      sub_10015E8D4((int64_t)v36, (void (*)(void))v75, a3);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0) {
      goto LABEL_104;
    }
    if (v9 <= (uint64_t)(v74 >> 1)) {
      unint64_t v37 = v74 >> 1;
    }
    else {
      unint64_t v37 = v9;
    }
    a2 = (void (*)(void))(v37 - v9);
    uint64_t v38 = v31 + 8 * v9;
    uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (a2)
    {
      v38 += 8;
      self;
      uint64_t v9 = swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      a2 = (void (*)(void))((char *)a2 - 1);
      if (!--v8)
      {
        unint64_t v36 = (void *)aBlock[0];
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_88:
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v67 < 1) {
      goto LABEL_89;
    }
  }
  if ((uint64_t)(v25 >> 1) <= v4)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  uint64_t v73 = v31;
  self;
  unint64_t v39 = (void *)swift_dynamicCastObjCClass();
  if (!v39 || (id v40 = [v39 parent]) == 0)
  {
    ((void (*)(void))v75)(0);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return;
  }
  id v41 = v40;
  swift_unknownObjectRetain();
  uint64_t v42 = v24 + 8 * v4;
  do
  {
    self;
    uint64_t v43 = (void *)swift_dynamicCastObjCClassUnconditional();
    swift_unknownObjectRetain();
    id v44 = [v43 parent];
    if (!v44)
    {
      swift_unknownObjectRelease();
LABEL_63:
      swift_unknownObjectRelease();
      ((void (*)(void))v75)(0);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      return;
    }
    id v45 = v44;
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    uint64_t v4 = v41;
    id v46 = v45;
    uint64_t v3 = static NSObject.== infix(_:_:)();
    swift_unknownObjectRelease();

    if ((v3 & 1) == 0) {
      goto LABEL_63;
    }
    v42 += 8;
    --v35;
  }
  while (v35);
  unint64_t v47 = v77;
  swift_unknownObjectRelease();
  int64_t v48 = v74 >> 1;
  if (v9 == v74 >> 1)
  {
    id v49 = (id)v4;
    int64_t v50 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    v75();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    goto LABEL_114;
  }
  uint64_t v8 = v48 - v9;
  if (__OFSUB__(v48, v9))
  {
LABEL_105:
    __break(1u);
    goto LABEL_106;
  }
  uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v51 = v76;
  if (v8)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_117;
    }
    if (v9 <= v48) {
      unint64_t v52 = v74 >> 1;
    }
    else {
      unint64_t v52 = v9;
    }
    unint64_t v53 = v52 - v9;
    uint64_t v54 = v73 + 8 * v9;
    uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (v53)
    {
      v54 += 8;
      self;
      swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v53;
      if (!--v8)
      {
        uint64_t v3 = aBlock[0];
        uint64_t v51 = v76;
        goto LABEL_74;
      }
    }
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
LABEL_74:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  *(void *)(v8 + 24) = sub_100162808;
  *(void *)(v8 + 32) = v51;
  if (!((unint64_t)v3 >> 62))
  {
    id v55 = *(id *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v56 = (id)v4;
    swift_retain_n();
    id v57 = v56;
    if (v55)
    {
      swift_bridgeObjectRetain();
      goto LABEL_77;
    }
LABEL_112:
    ((void (*)(void))v75)(0);

    swift_unknownObjectRelease();
    goto LABEL_113;
  }
LABEL_106:
  if (v3 < 0) {
    id v55 = (id)v3;
  }
  else {
    id v55 = (id)(v3 & 0xFFFFFFFFFFFFFF8);
  }
  id v70 = (id)v4;
  swift_retain_n();
  id v71 = v70;
  swift_bridgeObjectRetain();
  uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v72 <= 0) {
    goto LABEL_112;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_77:
    unint64_t v47 = v3 & 0xC000000000000001;
    uint64_t v76 = v8;
    if ((v3 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_119;
      }
      id v58 = *(id *)(v3 + 32);
      goto LABEL_80;
    }
LABEL_117:
    id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_80:
    id v59 = v58;
    swift_bridgeObjectRelease();
    id v60 = [v59 effectiveParentItemIdentifier];

    id v61 = v60;
    LOBYTE(v60) = sub_1001586C8(v3);

    if (v60)
    {

      goto LABEL_82;
    }
    ((void (*)(void))v75)(0);

    swift_unknownObjectRelease();
LABEL_113:
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    swift_unknownObjectRelease();
LABEL_114:
    swift_release();
    swift_release();
    goto LABEL_115;
  }
  uint64_t v76 = v8;
  swift_bridgeObjectRelease();
  unint64_t v47 = v3 & 0xC000000000000001;
LABEL_82:
  id v55 = [self defaultManager];
  if (v47)
  {
LABEL_119:
    id v62 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_85;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v62 = *(id *)(v3 + 32);
LABEL_85:
    id v63 = v62;
    id v64 = [v62 itemID];

    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = sub_100162A50;
    *(void *)(v65 + 24) = v76;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v65;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_1006928A8;
    uint64_t v66 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v55 fetchParentsForItemID:v64 recursively:0 completionHandler:v66];

    _Block_release(v66);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_release();
    swift_release();
LABEL_115:
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
}

id sub_10015F81C(int64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a2;
  v10[3] = a3;
  v10[4] = a4;
  v10[5] = a5;
  if (!((unint64_t)a1 >> 62))
  {
    id v11 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_retain_n();
    swift_retain_n();
    if (v11)
    {
      swift_bridgeObjectRetain();
LABEL_4:
      unint64_t v12 = a1 & 0xC000000000000001;
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_25;
        }
        id v13 = *(id *)(a1 + 32);
      }
      uint64_t v14 = v13;
      swift_bridgeObjectRelease();
      id v15 = [v14 effectiveParentItemIdentifier];

      id v16 = v15;
      LOBYTE(v14) = sub_1001586C8(a1);

      if (v14)
      {

        goto LABEL_9;
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      Swift::Int v23 = (void *)static NSError.userCancelledError.getter();
      a2(v23, 1);
      swift_release();
      swift_release();

LABEL_21:
      return (id)swift_release();
    }
LABEL_20:
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    Swift::Int v23 = (void *)static NSError.userCancelledError.getter();
    a2(v23, 1);
    swift_release();
    swift_release();
    goto LABEL_21;
  }
  if (a1 < 0) {
    id v11 = (void *)a1;
  }
  else {
    id v11 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 <= 0) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = a1 & 0xC000000000000001;
LABEL_9:
  id result = [self defaultManager];
  id v11 = result;
  if (v12)
  {
LABEL_25:
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v18 = *(id *)(a1 + 32);
LABEL_12:
    char v19 = v18;
    id v20 = [v18 itemID];

    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_100162A54;
    *(void *)(v21 + 24) = v10;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_100692268;
    uint64_t v22 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v11 fetchParentsForItemID:v20 recursively:0 completionHandler:v22];

    _Block_release(v22);
    swift_release();
    swift_release();

    return (id)swift_release();
  }
  __break(1u);
  return result;
}

void sub_10015FB9C(unint64_t a1, unint64_t a2, int64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  unint64_t v11 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_90;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain_n();
  swift_retain_n();
  if (v12 < 1)
  {
LABEL_91:
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    id v87 = (id)static NSError.userCancelledError.getter();
    ((void (*)(id, uint64_t))a2)(v87, 1);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v89 = a1;
    if (v11 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      a1 = sub_1000BC324(a1);
      unint64_t v89 = a1;
    }
    uint64_t v82 = a4;
    unint64_t v85 = (void (*)(void *, uint64_t))a2;
    uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
    {
      Swift::Int v16 = 0;
      a2 = v14 + 32;
      uint64_t v17 = v14 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v19 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v19)
        {
          if (v16 >= v15 - 1) {
            goto LABEL_17;
          }
          id v20 = (void *)(v17 + 8 * v15--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v21 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v21 & 1) == 0) {
              break;
            }
            --v15;
            --v20;
            if (v16 >= v15) {
              goto LABEL_17;
            }
          }
          uint64_t v18 = *(void *)(a2 + 8 * v16);
          *(void *)(a2 + 8 * v16) = *v20;
          *id v20 = v18;
        }
        if (++v16 >= v15) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v16 = 0;
LABEL_17:
    uint64_t v86 = v10;
    specialized Array._endMutation()();
    uint64_t v10 = v89;
    unint64_t v22 = v89 >> 62;
    if (!(v89 >> 62))
    {
      uint64_t v23 = *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23 < v16) {
        goto LABEL_98;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v23 < v16) {
      goto LABEL_120;
    }
    swift_bridgeObjectRetain();
    uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v77 < v16) {
      goto LABEL_121;
    }
    swift_bridgeObjectRetain();
    uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v78 < v23) {
      break;
    }
LABEL_19:
    if (v23 < 0) {
      goto LABEL_99;
    }
    uint64_t v83 = a3;
    a3 = v10 & 0xC000000000000001;
    if ((v10 & 0xC000000000000001) != 0 && v16 != v23)
    {
      if (v16 >= (unint64_t)v23) {
        goto LABEL_102;
      }
      Swift::Int v24 = v16;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v24++);
      }
      while (v23 != v24);
    }
    if (v22)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v25 = v28;
      int64_t v27 = v29;
      a2 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v31 < 0) {
        goto LABEL_103;
      }
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = (v10 & 0xFFFFFFFFFFFFFF8) + 32;
      a2 = (2 * v23) | 1;
      uint64_t v26 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      int64_t v27 = v16;
    }
    if (v26 < v16) {
      goto LABEL_100;
    }
    if (v16 && a3)
    {
      for (Swift::Int i = 0; i != v16; ++i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    uint64_t v84 = a5;
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v34 = v36;
      a3 = v37;
      unint64_t v35 = v38;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = v10 & 0xFFFFFFFFFFFFFF8;
      uint64_t v34 = (v10 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v35 = (2 * v16) | 1;
      swift_bridgeObjectRetain();
      a3 = 0;
    }
    unint64_t v39 = (a2 >> 1) - v27;
    if (a2 >> 1 != v27)
    {
      if ((uint64_t)(a2 >> 1) <= v27) {
        goto LABEL_105;
      }
      uint64_t v81 = v34;
      self;
      id v44 = (void *)swift_dynamicCastObjCClass();
      if (!v44 || (id v45 = [v44 parent]) == 0)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
        id v56 = (void *)static NSError.userCancelledError.getter();
        v85(v56, 1);
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        return;
      }
      id v46 = v45;
      swift_unknownObjectRetain();
      uint64_t v47 = v25 + 8 * v27;
      do
      {
        self;
        int64_t v48 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v49 = [v48 parent];
        if (!v49)
        {
          swift_unknownObjectRelease();
LABEL_62:
          swift_unknownObjectRelease();
          sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
          id v57 = (void *)static NSError.userCancelledError.getter();
          v85(v57, 1);
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        int64_t v50 = v49;
        sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        Swift::Int v16 = v46;
        id v51 = v50;
        LOBYTE(v50) = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v50 & 1) == 0) {
          goto LABEL_62;
        }
        v47 += 8;
        --v39;
      }
      while (v39);
      swift_unknownObjectRelease();
      int64_t v52 = v35 >> 1;
      if (a3 == v35 >> 1)
      {
        id v53 = (id)v16;
        id v54 = [v53 fpfs_fpItem];
        if (v54)
        {
          id v55 = v54;
          v82();
        }
        else
        {
          sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
          id v55 = (void *)static NSError.userCancelledError.getter();
          v85(v55, 1);
        }

        swift_unknownObjectRelease();
        goto LABEL_113;
      }
      int64_t v58 = v52 - a3;
      a2 = (unint64_t)v85;
      if (__OFSUB__(v52, a3)) {
        goto LABEL_107;
      }
      if (v58)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v58 & 0x8000000000000000) == 0)
        {
          if (a3 <= v52) {
            unint64_t v59 = v35 >> 1;
          }
          else {
            unint64_t v59 = a3;
          }
          unint64_t v60 = v59 - a3;
          uint64_t v61 = v81 + 8 * a3;
          a3 = (int64_t)&NSURLLocalizedNameKey_ptr;
          while (v60)
          {
            v61 += 8;
            self;
            a2 = swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --v60;
            if (!--v58)
            {
              a3 = aBlock[0];
              a2 = (unint64_t)v85;
              goto LABEL_76;
            }
          }
          goto LABEL_101;
        }
        __break(1u);
        goto LABEL_116;
      }
      a3 = (int64_t)_swiftEmptyArrayStorage;
LABEL_76:
      id v62 = (void (*)(void))swift_allocObject();
      *((void *)v62 + 2) = v16;
      *((void *)v62 + 3) = sub_100162594;
      uint64_t v82 = v62;
      *((void *)v62 + 4) = v86;
      if ((unint64_t)a3 >> 62) {
        goto LABEL_108;
      }
      id v63 = *(id *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v64 = (id)v16;
      swift_retain_n();
      id v65 = v64;
      if (v63)
      {
        swift_bridgeObjectRetain();
LABEL_79:
        a2 = a3 & 0xC000000000000001;
        if ((a3 & 0xC000000000000001) != 0)
        {
LABEL_116:
          id v66 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_82;
        }
        if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v66 = *(id *)(a3 + 32);
LABEL_82:
          uint64_t v67 = v66;
          swift_bridgeObjectRelease();
          id v68 = [v67 effectiveParentItemIdentifier];

          id v69 = v68;
          LOBYTE(v68) = sub_1001586C8(a3);

          if (v68)
          {

            goto LABEL_84;
          }
          sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
          unint64_t v75 = (void *)static NSError.userCancelledError.getter();
          v85(v75, 1);

          swift_unknownObjectRelease();
          goto LABEL_112;
        }
        __break(1u);
LABEL_118:
        id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_87:
        id v71 = v70;
        id v72 = [v70 itemID];

        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = sub_100162A50;
        *(void *)(v73 + 24) = v82;
        aBlock[4] = sub_100162C64;
        aBlock[5] = v73;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10016A350;
        aBlock[3] = &unk_1006921F0;
        unint64_t v74 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v63 fetchParentsForItemID:v72 recursively:0 completionHandler:v74];

        _Block_release(v74);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        swift_release();
LABEL_114:
        swift_bridgeObjectRelease();
        return;
      }
LABEL_111:
      sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      unint64_t v75 = (void *)static NSError.userCancelledError.getter();
      ((void (*)(void *, uint64_t))a2)(v75, 1);

      swift_unknownObjectRelease();
LABEL_112:

      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_113:
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      goto LABEL_114;
    }
    Swift::Int v16 = v33;
    a2 = v35 >> 1;
    unint64_t v11 = (v35 >> 1) - a3;
    if (__OFSUB__(v35 >> 1, a3)) {
      goto LABEL_104;
    }
    uint64_t v40 = v34;
    id v41 = _swiftEmptyArrayStorage;
    if (!v11)
    {
      a5 = v84;
LABEL_60:
      swift_retain();
      swift_retain();
      sub_10015F81C((int64_t)v41, v85, v83, (uint64_t)v82, a5);
      swift_release();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      return;
    }
    aBlock[0] = _swiftEmptyArrayStorage;
    a1 = (unint64_t)aBlock;
    specialized ContiguousArray.reserveCapacity(_:)();
    a5 = v84;
    if ((v11 & 0x8000000000000000) != 0) {
      goto LABEL_106;
    }
    if (a3 <= (uint64_t)a2) {
      unint64_t v42 = v35 >> 1;
    }
    else {
      unint64_t v42 = a3;
    }
    a4 = (void (*)(void))(v42 - a3);
    uint64_t v43 = v40 + 8 * a3;
    a3 = (int64_t)&NSURLLocalizedNameKey_ptr;
    while (a4)
    {
      v43 += 8;
      self;
      a2 = swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      a1 = (unint64_t)aBlock;
      specialized ContiguousArray._endMutation()();
      a4 = (void (*)(void))((char *)a4 - 1);
      if (!--v11)
      {
        id v41 = (void *)aBlock[0];
        goto LABEL_60;
      }
    }
    __break(1u);
LABEL_90:
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    uint64_t v76 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v76 < 1) {
      goto LABEL_91;
    }
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  id v79 = (id)v16;
  swift_retain_n();
  id v80 = v79;
  swift_bridgeObjectRetain();
  id v63 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((uint64_t)v63 <= 0) {
    goto LABEL_111;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_79;
  }
  swift_bridgeObjectRelease();
  a2 = a3 & 0xC000000000000001;
LABEL_84:
  id v63 = [self defaultManager];
  if (a2) {
    goto LABEL_118;
  }
  if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v70 = *(id *)(a3 + 32);
    goto LABEL_87;
  }
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
}

void sub_100160914(int64_t a1, void (*a2)(void), uint64_t a3)
{
  if (!((unint64_t)a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
LABEL_22:
    a2(0);
    return;
  }
  if (a1 < 0) {
    id v3 = (id)a1;
  }
  else {
    id v3 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v16 <= 0) {
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    unint64_t v7 = a1 & 0xC000000000000001;
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v7 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_26;
    }
    id v8 = *(id *)(a1 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = [v9 effectiveParentItemIdentifier];

  id v17 = v10;
  LOBYTE(v9) = sub_1001586C8(a1);

  if ((v9 & 1) == 0)
  {
    a2(0);

    return;
  }

LABEL_9:
  id v3 = [self defaultManager];
  if (v7)
  {
LABEL_26:
    id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v11 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v12 = v11;
    id v13 = [v11 itemID:v17];

    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = a2;
    *(void *)(v14 + 24) = a3;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_100692F38;
    uint64_t v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v3 fetchParentsForItemID:v13 recursively:0 completionHandler:v15];

    _Block_release(v15);
    return;
  }
  __break(1u);
}

void sub_100160BC4(unint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v7 = a1;
  uint64_t v8 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_85;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
LABEL_86:
    a2(0);
    return;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    unint64_t v77 = v7;
    if (v8 || (isUniquelyReferenced_nonNull_bridgeObject & 1) == 0)
    {
      uint64_t v7 = sub_1000BC324(v7);
      unint64_t v77 = v7;
    }
    unint64_t v75 = a2;
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFFF8;
    Swift::Int v11 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
      Swift::Int v12 = 0;
      uint64_t v13 = v10 + 32;
      uint64_t v14 = v10 + 24;
      while (1)
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        char v16 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if (v16)
        {
          if (v12 >= v11 - 1) {
            goto LABEL_17;
          }
          id v17 = (void *)(v14 + 8 * v11--);
          while (1)
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            char v18 = DOCNode.isFINode.getter();
            swift_unknownObjectRelease();
            if ((v18 & 1) == 0) {
              break;
            }
            --v11;
            --v17;
            if (v12 >= v11) {
              goto LABEL_17;
            }
          }
          uint64_t v15 = *(void *)(v13 + 8 * v12);
          *(void *)(v13 + 8 * v12) = *v17;
          *id v17 = v15;
        }
        if (++v12 >= v11) {
          goto LABEL_17;
        }
      }
    }
    Swift::Int v12 = 0;
LABEL_17:
    specialized Array._endMutation()();
    unint64_t v19 = v77 >> 62;
    if (!(v77 >> 62))
    {
      uint64_t v20 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v20 < v12) {
        goto LABEL_91;
      }
      goto LABEL_19;
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v20 < v12) {
      goto LABEL_115;
    }
    swift_bridgeObjectRetain();
    uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v67 < v12) {
      goto LABEL_116;
    }
    swift_bridgeObjectRetain();
    uint64_t v68 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v68 < v20) {
      break;
    }
LABEL_19:
    if (v20 < 0) {
      goto LABEL_92;
    }
    uint64_t v3 = v77 & 0xC000000000000001;
    if ((v77 & 0xC000000000000001) != 0 && v12 != v20)
    {
      if (v12 >= (unint64_t)v20) {
        goto LABEL_95;
      }
      Swift::Int v21 = v12;
      do
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(v21++);
      }
      while (v20 != v21);
    }
    uint64_t v74 = a3;
    if (v19)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v22 = v25;
      a3 = (uint64_t)v26;
      unint64_t v23 = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v28 < 0) {
        goto LABEL_96;
      }
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = (v77 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v23 = (2 * v20) | 1;
      uint64_t v24 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      a3 = v12;
    }
    if (v24 < v12) {
      goto LABEL_93;
    }
    if (v12 && v3)
    {
      for (i = 0; i != v12; uint64_t v3 = i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i++);
      }
    }
    if (v19)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.subscript.getter();
      uint64_t v31 = v32;
      uint64_t v8 = v33;
      unint64_t v73 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = v77 & 0xFFFFFFFFFFFFFF8;
      uint64_t v31 = (v77 & 0xFFFFFFFFFFFFFF8) + 32;
      unint64_t v73 = (2 * v12) | 1;
      swift_bridgeObjectRetain();
      uint64_t v8 = 0;
    }
    unint64_t v35 = (v23 >> 1) - a3;
    if (v23 >> 1 != a3)
    {
      if ((uint64_t)(v23 >> 1) <= a3) {
        goto LABEL_98;
      }
      self;
      id v41 = (void *)swift_dynamicCastObjCClass();
      if (!v41 || (id v42 = [v41 parent]) == 0)
      {
        v75(0);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        return;
      }
      uint64_t v43 = v42;
      uint64_t v72 = v31;
      swift_unknownObjectRetain();
      uint64_t v44 = v22 + 8 * a3;
      do
      {
        self;
        id v45 = (void *)swift_dynamicCastObjCClassUnconditional();
        swift_unknownObjectRetain();
        id v46 = [v45 parent];
        if (!v46)
        {
          swift_unknownObjectRelease();
LABEL_60:
          swift_unknownObjectRelease();
          v75(0);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          return;
        }
        uint64_t v47 = v46;
        uint64_t v4 = (void *)sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
        a3 = v43;
        uint64_t v3 = v47;
        LOBYTE(v47) = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if ((v47 & 1) == 0) {
          goto LABEL_60;
        }
        v44 += 8;
        --v35;
      }
      while (v35);
      swift_unknownObjectRelease();
      int64_t v48 = v73 >> 1;
      if (v8 == v73 >> 1)
      {
        id v49 = (const NSURLResourceKey **)(id)a3;
        v75(v43);
        swift_unknownObjectRelease();

        goto LABEL_109;
      }
      int64_t v50 = v48 - v8;
      if (__OFSUB__(v48, v8)) {
        goto LABEL_100;
      }
      uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
      if (v50)
      {
        aBlock[0] = _swiftEmptyArrayStorage;
        specialized ContiguousArray.reserveCapacity(_:)();
        if ((v50 & 0x8000000000000000) == 0)
        {
          if (v8 <= v48) {
            unint64_t v51 = v73 >> 1;
          }
          else {
            unint64_t v51 = v8;
          }
          unint64_t v52 = v51 - v8;
          uint64_t v53 = v72 + 8 * v8;
          uint64_t v3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
          while (v52)
          {
            v53 += 8;
            self;
            swift_dynamicCastObjCClassUnconditional();
            swift_unknownObjectRetain();
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            --v52;
            if (!--v50)
            {
              uint64_t v3 = aBlock[0];
              goto LABEL_71;
            }
          }
          goto LABEL_94;
        }
        __break(1u);
        goto LABEL_111;
      }
LABEL_71:
      uint64_t v4 = (void *)swift_allocObject();
      v4[2] = a3;
      v4[3] = v75;
      v4[4] = v74;
      if ((unint64_t)v3 >> 62) {
        goto LABEL_101;
      }
      uint64_t v54 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v55 = (const NSURLResourceKey **)(id)a3;
      swift_retain_n();
      id v56 = v55;
      if (v54)
      {
        swift_bridgeObjectRetain();
LABEL_74:
        int64_t v48 = v3 & 0xC000000000000001;
        if ((v3 & 0xC000000000000001) != 0)
        {
LABEL_111:
          id v57 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_77;
        }
        if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v57 = *(id *)(v3 + 32);
LABEL_77:
          int64_t v58 = v57;
          swift_bridgeObjectRelease();
          id v59 = [v58 effectiveParentItemIdentifier];

          id v60 = v59;
          LOBYTE(v59) = sub_1001586C8(v3);

          if (v59)
          {

            goto LABEL_79;
          }
          v75(0);

          swift_unknownObjectRelease();
          goto LABEL_108;
        }
        __break(1u);
LABEL_113:
        id v61 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_82;
      }
LABEL_107:
      v75(0);

      swift_unknownObjectRelease();
LABEL_108:
      swift_bridgeObjectRelease();
      swift_release();

      swift_release();
LABEL_109:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v36 = v31;
    a2 = (void (*)(void *))(v73 >> 1);
    uint64_t v7 = (v73 >> 1) - v8;
    if (__OFSUB__(v73 >> 1, v8)) {
      goto LABEL_97;
    }
    int64_t v37 = _swiftEmptyArrayStorage;
    if (!v7)
    {
LABEL_48:
      sub_100160914((int64_t)v37, (void (*)(void))v75, v74);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v3 = v30;
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v7 < 0) {
      goto LABEL_99;
    }
    if (v8 <= (uint64_t)a2) {
      unint64_t v38 = v73 >> 1;
    }
    else {
      unint64_t v38 = v8;
    }
    unint64_t v39 = v38 - v8;
    uint64_t v40 = v36 + 8 * v8;
    a3 = (uint64_t)&NSURLLocalizedNameKey_ptr;
    while (v39)
    {
      v40 += 8;
      self;
      uint64_t v8 = swift_dynamicCastObjCClassUnconditional();
      swift_unknownObjectRetain();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      a2 = *(void (**)(void *))(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v39;
      if (!--v7)
      {
        int64_t v37 = (void *)aBlock[0];
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
    uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v66 < 1) {
      goto LABEL_86;
    }
  }
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  if (v3 < 0) {
    id v55 = (const NSURLResourceKey **)v3;
  }
  else {
    id v55 = (const NSURLResourceKey **)(v3 & 0xFFFFFFFFFFFFFF8);
  }
  id v69 = (const NSURLResourceKey **)(id)a3;
  swift_retain_n();
  id v70 = v69;
  swift_bridgeObjectRetain();
  uint64_t v71 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v71 <= 0) {
    goto LABEL_107;
  }
  swift_bridgeObjectRetain();
  if (_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_74;
  }
  swift_bridgeObjectRelease();
  int64_t v48 = v3 & 0xC000000000000001;
LABEL_79:
  id v55 = (const NSURLResourceKey **)[self defaultManager];
  if (v48) {
    goto LABEL_113;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v61 = *(id *)(v3 + 32);
LABEL_82:
    id v62 = v61;
    id v63 = [v61 itemID:v72];

    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = sub_100162A50;
    *(void *)(v64 + 24) = v4;
    aBlock[4] = sub_100162C64;
    aBlock[5] = v64;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10016A350;
    aBlock[3] = &unk_100692EE8;
    id v65 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v55 fetchParentsForItemID:v63 recursively:0 completionHandler:v65];

    _Block_release(v65);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  __break(1u);
LABEL_115:
  __break(1u);
LABEL_116:
  __break(1u);
}

uint64_t sub_100161698()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1001616E0()
{
  sub_100155300(*(char **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

id sub_1001616F0(uint64_t (*a1)(uint64_t a1), uint64_t a2)
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    v24._countAndFlagsBits = 0xD00000000000001BLL;
    v24._object = (void *)0x80000001005D6930;
    v6._countAndFlagsBits = 0x6572616853;
    v6._object = (void *)0xE500000000000000;
    v7._countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v24);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_retain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v22 = a1;
    uint64_t v23 = a2;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100156760;
    Swift::Int v21 = &unk_100692128;
    Swift::Int v12 = _Block_copy(&aBlock);
    id v13 = [v9 initWithIdentifier:v10 localizedTitle:v11 unresolvedHandler:v12];

    _Block_release(v12);
    swift_release();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14];

    [v13 setImage:v15];
    [v13 setPerformActionExitsEditMode:0];
    [v13 setSupportsMultipleItems:1];
    [v13 setNavigationSide:2];
    [v13 setAvailability:UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1];
    [v13 setMenuSortOrder:17];
    uint64_t v22 = sub_100152C28;
    uint64_t v23 = 0;
    aBlock = _NSConcreteStackBlock;
    uint64_t v19 = 1107296256;
    uint64_t v20 = sub_100053508;
    Swift::Int v21 = &unk_100692150;
    char v16 = _Block_copy(&aBlock);
    id v17 = [self predicateWithBlock:v16];
    _Block_release(v16);
    swift_release();
    [v13 setFilteringPredicate:v17];

    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100161A24(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  Swift::String v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v4;
    uint64_t v11 = a1;
    Swift::Int v12 = (uint8_t *)v10;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)Swift::Int v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10009B0E4(v11, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Presentation Error] %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_100161C38(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 0;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 0;
  Swift::String v8 = *(void **)&a4[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
  swift_getObjectType();
  id v16 = (id)DOCNode.fpfs_syncFetchFPItem()();
  UIModalPresentationStyle v9 = UIModalPresentationStyle.doc_styleWhenPresentingLargeContent.getter();
  if (v9 != UIModalPresentationPopover || (v8 ? (BOOL v10 = v16 == 0) : (BOOL v10 = 1), v10))
  {
    sub_100154804(v9, 0, 0, v6, a1, v7);
    sub_100154B2C(v6, a1, v7, (uint64_t)a4);
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a4;
    v11[3] = v6;
    v11[4] = a1;
    v11[5] = v7;
    void v11[6] = v8;
    v11[7] = v16;
    aBlock[4] = sub_100161F48;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6C98;
    aBlock[3] = &unk_100691C50;
    Swift::Int v12 = _Block_copy(aBlock);
    swift_unknownObjectRetain_n();
    id v13 = v16;
    uint64_t v14 = a4;
    swift_retain();
    id v15 = a1;
    swift_retain();
    swift_release();
    [v8 getViewFor:v13 waitForNewThumbnail:0 :v12];
    _Block_release(v12);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_100161E74()
{
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100161EC4()
{
  sub_100155854(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(char **)(v0 + 48));
}

uint64_t sub_100161ED8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100161EE8()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

id sub_100161F48(void *a1, uint64_t a2)
{
  return sub_100154D28(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_100161F58()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100161FA8(void *a1)
{
  return sub_100154EB8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

id sub_100161FB4(void *a1)
{
  return [a1 setSourceItem:*(void *)(v1 + 16)];
}

uint64_t sub_100161FC4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100161FFC()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100162044()
{
  sub_100155164(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

void sub_100162050(void *a1, uint64_t a2)
{
  sub_100155280(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100162058(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100162084()
{
  return sub_1001626BC((void (*)(void))&_swift_release);
}

Swift::Int sub_10016209C(uint64_t a1)
{
  return sub_100151D18(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1001620A8(void *a1)
{
  sub_100151B0C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

void sub_1001620B4(unint64_t a1, uint64_t a2)
{
  sub_100151C2C(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_1001620BC()
{
  return sub_1001626BC((void (*)(void))&_swift_release);
}

void sub_1001620D4(uint64_t a1, uint64_t a2)
{
  sub_10014E704(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1001620DC(uint64_t a1, uint64_t a2)
{
  return sub_10014ECB0(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1001620E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10016212C(uint64_t a1, uint64_t a2)
{
  return sub_10014DA58(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100162138()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001621E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_10014DE38(a1, v5, v7, v8);
}

uint64_t sub_100162280()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001622B8(unint64_t a1, uint64_t a2)
{
  sub_10014D7FC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1001622C0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100162364()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1001562E8(v0 + v2, v3);
}

void sub_1001623F0(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_1000CBE70(&qword_10070A2E0);
    uint64_t v6 = qword_100704E60;
    id v7 = a1;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_10009D098(v2, (uint64_t)qword_100707D90);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
    UIModalPresentationStyle v9 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    v10[0] = 0;
    v10[1] = 0;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  }
}

void sub_100162594(void *a1)
{
  sub_100540F54(a1, *(void (**)(id, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

uint64_t sub_1001625A8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1001625E8()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100162620(unint64_t a1, uint64_t a2)
{
  sub_100150C20(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_100162628()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100162668(uint64_t a1)
{
  sub_100150D68(a1, *(void *)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_100162670()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10016269C(unint64_t a1)
{
  return sub_1001516D0(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001626A4()
{
  return sub_1001626BC((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1001626BC(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_10016270C(uint64_t a1)
{
  return sub_1001C0434(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100162714(uint64_t a1)
{
  return sub_1001BB2D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_100162734()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100162774(uint64_t a1)
{
  return sub_1001BBA88(a1, *(void **)(v1 + 16), *(uint64_t (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100162780(uint64_t a1)
{
  return sub_10023666C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_10016278C(uint64_t a1)
{
  return sub_100377B44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100162798()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001627D8()
{
  return sub_1001C7B0C((unint64_t)_swiftEmptyArrayStorage, *(void **)(v0 + 24));
}

uint64_t sub_100162808(uint64_t a1)
{
  return sub_100370784(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100162814(uint64_t a1, uint64_t a2)
{
  return sub_100155DA4(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_10016281C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100162854()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10016288C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  *uint64_t v1 = sub_10014F548(*(void *)(v0 + 24), 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001628D0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001628E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 64)) {
    sub_10009B1B8(v0 + 40);
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100162930()
{
  sub_10014FD78(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40);
}

uint64_t sub_100162940()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100162950()
{
}

uint64_t sub_100162958()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100162968()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001629A0()
{
  return sub_100150804(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001629A8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1001629E0()
{
  sub_100150A28(*(id *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_1001629EC()
{
}

uint64_t sub_1001629F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100162A04(void *a1)
{
  sub_10014D6AC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100162A0C(void *a1)
{
  sub_10014D524(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100162A1C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100162C84()
{
  return sub_1000CBF84(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

void sub_100162CCC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  BOOL v10 = (char *)v32 - v9;
  __chkstk_darwin(v8);
  Swift::Int v12 = (char *)v32 - v11;
  id v13 = (int *)type metadata accessor for DOCFileEntity();
  uint64_t v14 = v13[5];
  sub_1000CBE70(&qword_1007080C0);
  *(void *)(a2 + v14) = EntityProperty<>.init()();
  uint64_t v15 = v13[6];
  uint64_t v16 = EntityProperty<>.init()();
  v32[1] = v15;
  *(void *)(a2 + v15) = v16;
  uint64_t v17 = v13[7];
  sub_1000CBE70(&qword_1007080C8);
  *(void *)(a2 + v17) = EntityProperty<>.init()();
  id v18 = [a1 itemID];
  FileEntityIdentifier.init(fileProviderItemID:)();
  *(void *)(a2 + v13[8]) = a1;
  id v19 = a1;
  id v20 = [v19 filename];
  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  void v32[2] = v21;
  v32[3] = v23;
  EntityProperty.wrappedValue.setter();
  id v24 = [v19 creationDate];
  if (v24)
  {
    uint64_t v25 = v24;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
  }
  sub_1001653A8((uint64_t)v12, (uint64_t)v10);
  EntityProperty.wrappedValue.setter();
  sub_100165410((uint64_t)v12);
  id v28 = [v19 contentModificationDate];
  if (v28)
  {
    int64_t v29 = v28;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v7, 0, 1, v30);
  }
  else
  {
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v7, 1, 1, v31);
  }
  sub_1001653A8((uint64_t)v7, (uint64_t)v10);
  EntityProperty.wrappedValue.setter();
  sub_100165410((uint64_t)v7);
}

uint64_t sub_100162FE0()
{
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A0030;
  uint64_t result = static UTType.item.getter();
  qword_100736E50 = v0;
  return result;
}

uint64_t sub_100163090()
{
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A0030;
  static UTType.item.getter();
  type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject();
  uint64_t result = sub_100308720(v0, 1);
  qword_100736E58 = result;
  return result;
}

id sub_100163164@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = sub_1000CBE70(&qword_1007080D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v33 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v32[1] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UTType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(type metadata accessor for DOCFileEntity() + 32);
  id v16 = [*(id *)(v2 + v15) contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t countAndFlagsBits = UTType.localizedDescription.getter();
  object = v18;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!object)
  {
    id result = (id)_DocumentManagerBundle();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = result;
    v37._object = (void *)0x80000001005D6F30;
    v22._uint64_t countAndFlagsBits = 0x746E656D75636F44;
    v22._object = (void *)0xE800000000000000;
    v23._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v23._object = (void *)0xEB00000000656C62;
    v24._uint64_t countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v37._uint64_t countAndFlagsBits = 0xD000000000000012;
    Swift::String v25 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v37);
    uint64_t countAndFlagsBits = v25._countAndFlagsBits;
    object = v25._object;
  }
  uint64_t v26 = *(void **)(v2 + v15);
  if (([v26 isFolder] & 1) == 0)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Swift::String v27 = DOCNode.localizedSizeDescription()();
    uint64_t v35 = countAndFlagsBits;
    uint64_t v36 = object;
    v28._uint64_t countAndFlagsBits = 2108704;
    v28._object = (void *)0xE300000000000000;
    String.append(_:)(v28);
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
  }
  id v29 = [v26 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v30 = type metadata accessor for DisplayRepresentation.Image();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v33, 1, 1, v30);
  sub_1000CBE70(&qword_1007080D8);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A0030;
  id v31 = [v26 filename];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LocalizedStringResource.init(stringLiteral:)();
  return (id)DisplayRepresentation.init(title:subtitle:image:synonyms:)();
}

uint64_t sub_1001635D0()
{
  if (qword_100704E68 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_10016362C()
{
  return sub_1000CBF84(&qword_100707F78, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

uint64_t sub_100163674()
{
  return sub_1000CBF84(&qword_100707F80, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

ValueMetadata *sub_1001636BC()
{
  if (qword_100704E78 != -1) {
    swift_once();
  }
  return &type metadata for RenameFileIntent;
}

unint64_t sub_10016370C()
{
  unint64_t result = qword_100707F88;
  if (!qword_100707F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100707F88);
  }
  return result;
}

uint64_t sub_100163760(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  sub_1000CBE70(&qword_100708110);
  v2[17] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return _swift_task_switch(sub_10016386C, 0, 0);
}

uint64_t sub_10016386C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_100163968;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100165590;
  v0[13] = &unk_1006930D0;
  v0[14] = v3;
  [v2 fetchURL:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100163968()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_100163C2C;
  }
  else {
    uint64_t v2 = sub_100163A78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100163A78()
{
  uint64_t v1 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = (void *)v0[16];
  (*(void (**)(uint64_t))(v3 + 32))(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v5);
  id v7 = [v6 filename];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v8 = [v6 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = type metadata accessor for UTType();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
  IntentFile.init(fileURL:filename:type:)();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100163C2C()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100163CD4(uint64_t a1, uint64_t a2)
{
  v3[3] = v2;
  v3[4] = a2;
  v3[2] = a1;
  return _swift_task_switch(sub_100163CF8, 0, 0);
}

uint64_t sub_100163CF8()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, id))((char *)&dword_100708108 + dword_100708108);
  id v1 = *(id *)(v0[3] + *(int *)(v0[4] + 32));
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100163DC0;
  uint64_t v3 = v0[2];
  return v5(v3, v1);
}

uint64_t sub_100163DC0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100163EB4()
{
  return sub_1000CBF84(&qword_100707FA0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

id sub_100163EFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id result = sub_1001656EC(a1);
  *a2 = result;
  return result;
}

id sub_100163F24(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)NSItemProvider) init];
  NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(*(void **)(v1 + *(int *)(a1 + 32)), 2u, 1, 0);
  return v3;
}

uint64_t sub_100163F88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100163FA4(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for URL();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return _swift_task_switch(sub_100164080, 0, 0);
}

uint64_t sub_100164080()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  id v3 = [self defaultManager];
  v0[22] = v3;
  uint64_t v4 = *(void *)(v2 + *(int *)(type metadata accessor for DOCFileEntity() + 32));
  v0[2] = v0;
  v0[7] = v1;
  v0[3] = sub_1001641C4;
  uint64_t v5 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100388CB0;
  v0[13] = &unk_1006930B8;
  v0[14] = v5;
  [v3 fetchURLForItem:v4 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1001641C4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1001643DC;
  }
  else {
    uint64_t v2 = sub_1001642D4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001642D4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 32))(v1, v0[20], v4);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v1, v4);
  SentTransferredFile.init(_:allowAccessingOriginalFile:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1001643DC()
{
  uint64_t v1 = *(void **)(v0 + 176);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100164474(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_100164494, 0, 0);
}

uint64_t sub_100164494()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = swift_task_alloc();
  v0[5] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  uint64_t v4 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  *uint64_t v3 = v0;
  v3[1] = sub_1001645A4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000016, 0x80000001005D6F50, sub_100165470, v2, v4);
}

uint64_t sub_1001645A4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100164724;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1001646C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001646C0()
{
  sub_100162CCC(*(void **)(v0 + 16), *(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100164724()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100164788(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100708100);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [self defaultManager];
  ReceivedTransferredFile.file.getter();
  URL._bridgeToObjectiveC()(v10);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  aBlock[4] = sub_10016550C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  aBlock[3] = &unk_100693090;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  [v9 fetchItemForURL:v12 completionHandler:v15];
  _Block_release(v15);
}

uint64_t sub_100164A0C(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v2 = a1;
    sub_1000CBE70(&qword_100708100);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    if (!a2)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      static NSError.noSuchFileError.getter();
    }
    swift_errorRetain();
    sub_1000CBE70(&qword_100708100);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_100164AC0()
{
  uint64_t v0 = type metadata accessor for UTType();
  __chkstk_darwin(v0 - 8);
  static UTType.item.getter();
  return FileRepresentation.init(contentType:shouldAttemptToOpenInPlace:exporting:importing:)();
}

uint64_t sub_100164B88()
{
  return sub_1000CBF84(&qword_100707FA8, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
}

unint64_t sub_100164BD8()
{
  unint64_t result = qword_100707FC0;
  if (!qword_100707FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100707FC0);
  }
  return result;
}

uint64_t sub_100164C2C@<X0>(void *a1@<X8>)
{
  if (qword_100704E70 != -1) {
    swift_once();
  }
  *a1 = qword_100736E58;

  return swift_retain();
}

uint64_t sub_100164C98()
{
  return sub_1000CBF84(&qword_100707FE8, (void (*)(uint64_t))&type metadata accessor for FileEntityIdentifier);
}

uint64_t sub_100164CE0(uint64_t a1)
{
  uint64_t v2 = sub_1000CBF84((unint64_t *)&unk_1007080E0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);

  return static AssistantSchemaEntity.typeDisplayRepresentation.getter(a1, v2);
}

uint64_t sub_100164D5C()
{
  return sub_100073DF0(&qword_100707FF0, &qword_100707FF8);
}

uint64_t sub_100164D98(uint64_t a1)
{
  uint64_t v2 = sub_1000CBF84(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100164E18(uint64_t a1)
{
  uint64_t v2 = sub_1000CBF84(&qword_100707FE0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t *sub_100164E94(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FileEntityIdentifier();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v10 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v10;
    swift_retain();
    swift_retain();
    swift_retain();
    id v11 = v10;
  }
  return a1;
}

uint64_t sub_100164F94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[8];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_100165070(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_100165108(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  uint64_t v7 = a3[8];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  return a1;
}

uint64_t sub_1001651C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001651DC);
}

uint64_t sub_1001651DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FileEntityIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10016529C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001652B0);
}

uint64_t sub_1001652B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for FileEntityIdentifier();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10016536C()
{
  return sub_100073DF0(&qword_1007080A8, (uint64_t *)&unk_1007080B0);
}

uint64_t sub_1001653A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100165410(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100165470(uint64_t a1)
{
}

uint64_t sub_100165478()
{
  uint64_t v1 = sub_1000CBE70(&qword_100708100);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10016550C(void *a1, uint64_t a2)
{
  sub_1000CBE70(&qword_100708100);

  return sub_100164A0C(a1, a2);
}

uint64_t sub_100165590(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    uint64_t v10 = swift_allocError();
    *id v11 = a3;
    id v12 = a3;
    return _swift_continuation_throwingResumeWithError(v9, v10);
  }
  else
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(void, char *, uint64_t))(v6 + 32))(*(void *)(*(void *)(v9 + 64) + 40), v8, v5);
    return swift_continuation_throwingResume();
  }
}

id sub_1001656EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    v13[1] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    do
    {
      sub_1001173A0(v7, (uint64_t)v5);
      [objc_allocWithZone((Class)NSItemProvider) init];
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(*(void **)&v5[*(int *)(v2 + 32)], 2u, 1, 0);
      sub_100117404((uint64_t)v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v7 += v8;
      --v6;
    }
    while (v6);
  }
  id v9 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithItemProviders:isa];

  return v11;
}

id sub_100165924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  id v11 = self;
  id v12 = v4;
  id v13 = [v11 preferredFontForTextStyle:UIFontTextStyleBody];
  *(void *)uint64_t v10 = 0x4030000000000000;
  *((void *)v10 + 1) = v13;
  *(void *)&v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel] = 0;
  uint64_t v14 = &v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  uint64_t v15 = &v12[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName];
  *(void *)uint64_t v15 = a3;
  *((void *)v15 + 1) = a4;

  v20.receiver = v12;
  v20.super_class = ObjectType;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100165AB8();
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
  *(void *)(v17 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v17 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v18 = v16;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v18;
}

void sub_100165AB8()
{
  uint64_t v1 = v0;
  id v2 = sub_100165E60();
  [v1 addSubview:v2];

  uint64_t v3 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A1560;
  id v5 = sub_100165E60();
  id v6 = [v5 leadingAnchor];

  id v7 = [v1 leadingAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v4 + 32) = v8;
  id v9 = sub_100165E60();
  id v10 = [v9 trailingAnchor];

  id v11 = [v1 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v4 + 40) = v12;
  id v13 = sub_100165E60();
  id v14 = [v13 topAnchor];

  id v15 = [v1 topAnchor];
  id v16 = &v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  double v17 = *(double *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics];
  id v18 = [v14 constraintEqualToAnchor:v15 constant:v17];

  *(void *)(v4 + 48) = v18;
  id v19 = sub_100165E60();
  id v20 = [v19 bottomAnchor];

  id v21 = [v1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:-v17];

  *(void *)(v4 + 56) = v22;
  uint64_t v32 = v4;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];

  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8];
  if (v24)
  {
    uint64_t v25 = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName];
    swift_bridgeObjectRetain();
    id v26 = sub_100165E60();
    sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
    Swift::String v27 = &v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
    uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText];
    uint64_t v29 = *((void *)v27 + 1);
    uint64_t v30 = (void *)*((void *)v16 + 1);
    swift_bridgeObjectRetain();
    [v26 setAttributedText:sub_1004B0778(v28, v29, v25, v24, v30, 0, 1) v32];
  }
  else
  {
    id v26 = sub_100165E60();
    [v26 setText:String._bridgeToObjectiveC()() v4];
  }
}

id sub_100165E60()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel);
  }
  else
  {
    id v4 = sub_100165EC4(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100165EC4(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  id v3 = [self secondaryLabelColor];
  [v2 setTextColor:v3];

  [v2 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics + 8)];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  return v2;
}

void sub_100165FE8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView____lazy_storage___promptLabel);
}

uint64_t type metadata accessor for DOCPromptHeaderView()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for DOCPromptHeaderView.Metrics(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  id v4 = v3;
  return a1;
}

void destroy for DOCPromptHeaderView.Metrics(uint64_t a1)
{
}

void *assignWithCopy for DOCPromptHeaderView.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  id v3 = (void *)a2[1];
  id v4 = (void *)a1[1];
  a1[1] = v3;
  id v5 = v3;

  return a1;
}

void *assignWithTake for DOCPromptHeaderView.Metrics(void *a1, void *a2)
{
  *a1 = *a2;
  id v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCPromptHeaderView.Metrics(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCPromptHeaderView.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCPromptHeaderView.Metrics()
{
  return &type metadata for DOCPromptHeaderView.Metrics;
}

void sub_10016623C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName + 8);
  if (v1)
  {
    uint64_t v3 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_glyphName);
    swift_bridgeObjectRetain();
    id v4 = sub_100165E60();
    sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
    uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText);
    uint64_t v6 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_promptText + 8);
    id v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files19DOCPromptHeaderView_metrics + 8);
    swift_bridgeObjectRetain();
    id v8 = (id)sub_1004B0778(v5, v6, v3, v1, v7, 0, 1);
    [v4 setAttributedText:v8];
  }
}

id sub_100166360()
{
  type metadata accessor for FilesEntityProvider();
  uint64_t v0 = swift_allocObject();
  id result = [self weakObjectsHashTable];
  *(void *)(v0 + 16) = result;
  qword_100736E60 = v0;
  return result;
}

uint64_t sub_1001663BC(void *a1, int a2, uint64_t a3)
{
  uint64_t v33 = a3;
  int v34 = a2;
  uint64_t v4 = type metadata accessor for ViewLocation();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for AppEntityVisualState();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v32 - v9;
  uint64_t v11 = type metadata accessor for DOCFileEntity();
  uint64_t v12 = __chkstk_darwin(v11);
  id v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v32 - v15;
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  Swift::String v37 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = [a1 fpfs_fpItem];
  if (v20)
  {
    id v21 = (void *)(v33 + 16);
    Swift::String v37 = (char *)v20;
    sub_100162CCC(v37, (uint64_t)v16);
    AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();
    sub_1001173A0((uint64_t)v16, (uint64_t)v14);
    static ViewLocation.unknown.getter();
    uint64_t v23 = v35;
    uint64_t v22 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v8, v10, v36);
    type metadata accessor for _RepresentedEntityElement();
    swift_allocObject();
    sub_100167BE0(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
    _RepresentedEntityElement.init<A>(appEntity:geometry:state:subelements:)();
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();

    swift_release();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
    return sub_100117404((uint64_t)v16);
  }
  else
  {
    uint64_t v35 = v18;
    uint64_t v36 = v17;
    static Logger.AppIntents.getter();
    swift_unknownObjectRetain_n();
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      Swift::String v27 = (uint8_t *)swift_slowAlloc();
      v38[0] = swift_slowAlloc();
      *(_DWORD *)Swift::String v27 = 136315138;
      id v28 = [a1 description];
      uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v31 = v30;

      v38[3] = sub_10009B0E4(v29, v31, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Can not get FPItem out of DOCNode: %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  }
}

uint64_t sub_1001668E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v5 = swift_unknownObjectRetain();
  v4(v5, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

void *sub_100166950()
{
  return sub_1001673C8();
}

uint64_t DOCItemCollectionViewController.filesIntentsDebugDescription.getter()
{
  id v1 = [v0 debugDescription];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

uint64_t DOCItemCollectionViewController.filesIntentsEnumerateNodes(_:_:)(void (*a1)(uint64_t, void), uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = sub_10003B6F8(0);
  uint64_t v6 = sub_1000D22C4((unint64_t)v5);
  swift_bridgeObjectRelease();
  if (v6) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = sub_1001677D4((unint64_t)v7, (unint64_t *)&qword_1007069C0, (uint64_t)FPItem_ptr, (unint64_t *)&qword_100708240, (void (*)(id *, uint64_t))sub_1000EEA04);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_10003B6F8(0);
  id v10 = sub_1000D22C4((unint64_t)v9);
  swift_bridgeObjectRelease();
  if (v10) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = sub_1001677D4((unint64_t)v11, (unint64_t *)&unk_100705C20, (uint64_t)FINode_ptr, (unint64_t *)&qword_100708238, (void (*)(id *, uint64_t))sub_1000EE744);
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    uint64_t v46 = v12;
    uint64_t v49 = v8;
    uint64_t v44 = a3;
    unint64_t v14 = sub_10007CC5C(result);
    unint64_t v50 = v14;
    if (v14 >> 62) {
      goto LABEL_53;
    }
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
    id v16 = a1;
    if (v15)
    {
      unint64_t v17 = 0;
      uint64_t v47 = v49 + 56;
      uint64_t v45 = v46 + 56;
      do
      {
        if ((v50 & 0xC000000000000001) != 0)
        {
          uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v20 = __OFADD__(v17++, 1);
          if (v20) {
            goto LABEL_51;
          }
        }
        else
        {
          if (v17 >= *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_52;
          }
          uint64_t v19 = *(void *)(v50 + 32 + 8 * v17);
          swift_unknownObjectRetain();
          BOOL v20 = __OFADD__(v17++, 1);
          if (v20)
          {
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
            goto LABEL_10;
          }
        }
        self;
        if (swift_dynamicCastObjCClass())
        {
          if ((v49 & 0xC000000000000001) != 0) {
            goto LABEL_26;
          }
          if (*(void *)(v49 + 16))
          {
            Swift::Int v21 = NSObject._rawHashValue(seed:)(*(void *)(v49 + 40));
            uint64_t v22 = -1 << *(unsigned char *)(v49 + 32);
            unint64_t v23 = v21 & ~v22;
            if ((*(void *)(v47 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
            {
              sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
              id v24 = *(id *)(*(void *)(v49 + 48) + 8 * v23);
              char v25 = static NSObject.== infix(_:_:)();

              if (v25) {
                goto LABEL_41;
              }
              uint64_t v26 = ~v22;
              unint64_t v27 = (v23 + 1) & ~v22;
              if (((*(void *)(v47 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
                goto LABEL_42;
              }
              id v28 = *(id *)(*(void *)(v49 + 48) + 8 * v27);
              char v29 = static NSObject.== infix(_:_:)();

              if (v29) {
                goto LABEL_41;
              }
              unint64_t v30 = (v27 + 1) & v26;
              id v16 = a1;
              if ((*(void *)(v47 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30))
              {
                while (1)
                {
                  id v31 = *(id *)(*(void *)(v49 + 48) + 8 * v30);
                  char v18 = static NSObject.== infix(_:_:)();

                  if (v18) {
                    goto LABEL_43;
                  }
                  unint64_t v30 = (v30 + 1) & v26;
                  id v16 = a1;
                  if (((*(void *)(v47 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
                    goto LABEL_13;
                  }
                }
              }
            }
LABEL_48:
            char v18 = 0;
            goto LABEL_13;
          }
        }
        else
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            if ((v46 & 0xC000000000000001) != 0)
            {
LABEL_26:
              char v18 = __CocoaSet.contains(_:)();
              goto LABEL_13;
            }
            if (*(void *)(v46 + 16))
            {
              Swift::Int v32 = NSObject._rawHashValue(seed:)(*(void *)(v46 + 40));
              uint64_t v33 = -1 << *(unsigned char *)(v46 + 32);
              unint64_t v34 = v32 & ~v33;
              if ((*(void *)(v45 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34))
              {
                sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
                id v35 = *(id *)(*(void *)(v46 + 48) + 8 * v34);
                char v36 = static NSObject.== infix(_:_:)();

                if (v36) {
                  goto LABEL_41;
                }
                uint64_t v37 = ~v33;
                unint64_t v38 = (v34 + 1) & ~v33;
                if (((*(void *)(v45 + ((v38 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
                {
LABEL_42:
                  char v18 = 0;
                  goto LABEL_43;
                }
                id v39 = *(id *)(*(void *)(v46 + 48) + 8 * v38);
                char v40 = static NSObject.== infix(_:_:)();

                if (v40)
                {
LABEL_41:
                  char v18 = 1;
LABEL_43:
                  id v16 = a1;
                  a1(v19, v18 & 1);
                  goto LABEL_14;
                }
                unint64_t v41 = (v38 + 1) & v37;
                id v16 = a1;
                if ((*(void *)(v45 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41))
                {
                  while (1)
                  {
                    id v42 = *(id *)(*(void *)(v46 + 48) + 8 * v41);
                    char v18 = static NSObject.== infix(_:_:)();

                    if (v18) {
                      goto LABEL_43;
                    }
                    unint64_t v41 = (v41 + 1) & v37;
                    id v16 = a1;
                    if (((*(void *)(v45 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
                      goto LABEL_13;
                    }
                  }
                }
              }
              goto LABEL_48;
            }
          }
        }
        char v18 = 0;
LABEL_13:
        v16(v19, v18 & 1);
LABEL_14:
        swift_unknownObjectRelease();
      }
      while (v17 != v15);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = swift_bridgeObjectRelease();
    return v44(v43);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100166F88(unint64_t a1)
{
  return sub_1000C3BD4(a1, (void (*)(void))type metadata accessor for DOCItemCollectionCell);
}

void *sub_100166FA0(unint64_t a1)
{
  return sub_1000D22C4(a1);
}

void *sub_100166FAC(unint64_t a1)
{
  return sub_1000C3BD4(a1, (void (*)(void))type metadata accessor for DOCColumnViewController);
}

uint64_t sub_100166FC4(uint64_t a1)
{
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v3 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v20 = result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    sub_10008E1D0(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v18);
    v15[0] = v18[0];
    v15[1] = v18[1];
    uint64_t v16 = v19;
    sub_1000ED944((uint64_t)v17, (uint64_t)v15);
    uint64_t result = sub_10008E17C((uint64_t)v17);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_23:
    swift_release();
    return v20;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100167240(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for DOCDocumentSourceIdentifier(0);
  sub_100167BE0(&qword_100705B48, type metadata accessor for DOCDocumentSourceIdentifier);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_1000EE4F0(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1001672FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100167A9C();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_1000F7ECC(v5, *v4);
      sub_1000EDAE0(v7, v5, v6);
      sub_1000F7EE0(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100167398(unint64_t a1)
{
  return sub_1001677D4(a1, (unint64_t *)&unk_100705CD0, (uint64_t)UICollectionViewCell_ptr, &qword_100708220, (void (*)(id *, uint64_t))sub_1000EE230);
}

void *sub_1001673C8()
{
  uint64_t v29 = type metadata accessor for DispatchPredicate();
  uint64_t v1 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v28 = (void *)((char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v36 = _swiftEmptyArrayStorage;
  id v3 = [*(id *)(v0 + 16) allObjects];
  sub_1000CBE70(&qword_100708228);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      uint64_t result = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      unint64_t v27 = result;
      if (v5 < 1) {
        break;
      }
      uint64_t v7 = 0;
      unint64_t v26 = v4 & 0xC000000000000001;
      unsigned int v25 = enum case for DispatchPredicate.onQueue(_:);
      unint64_t v23 = (void (**)(uint64_t *, uint64_t))(v1 + 8);
      id v24 = (void (**)(uint64_t *, void, uint64_t))(v1 + 104);
      v22[1] = &v32;
      v22[0] = v5;
      while (1)
      {
        if (v26)
        {
          uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v8 = *(void **)(v4 + 8 * v7 + 32);
          swift_unknownObjectRetain();
        }
        uint64_t v9 = static OS_dispatch_queue.main.getter();
        unint64_t v10 = v28;
        uint64_t v1 = v29;
        uint64_t *v28 = v9;
        (*v24)(v10, v25, v1);
        char v11 = _dispatchPreconditionTest(_:)();
        (*v23)(v10, v1);
        if ((v11 & 1) == 0) {
          break;
        }
        ++v7;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
        dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
        unint64_t v34 = sub_100167B7C;
        uint64_t v35 = v12;
        aBlock = _NSConcreteStackBlock;
        uint64_t v31 = 1107296256;
        Swift::Int v32 = sub_1001668E8;
        uint64_t v33 = &unk_1006931E0;
        unint64_t v14 = v4;
        uint64_t v15 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = v13;
        unint64_t v34 = sub_100167BBC;
        uint64_t v35 = v16;
        aBlock = _NSConcreteStackBlock;
        uint64_t v31 = 1107296256;
        Swift::Int v32 = sub_1000666D8;
        uint64_t v33 = &unk_100693230;
        unint64_t v17 = _Block_copy(&aBlock);
        char v18 = v13;
        swift_release();
        [v8 filesIntentsEnumerateNodes:v15 :v17];
        _Block_release(v17);
        _Block_release(v15);
        OS_dispatch_semaphore.wait()();

        swift_beginAccess();
        unint64_t v19 = *(void *)(v12 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        unint64_t v20 = v19;
        unint64_t v4 = v14;
        uint64_t v21 = v22[0];
        sub_100169720(v20);
        swift_unknownObjectRelease();
        if (v21 == v7)
        {
          swift_bridgeObjectRelease();
          return v36;
        }
      }
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1001677D4(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10009E6C4(0, a2);
  sub_1000B86A8(a4, a2);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        a5(&v16, v13);
      }
    }
    else
    {
      unint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for FilesEntityProvider()
{
  return self;
}

uint64_t sub_100167978(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      sub_10008E1D0(v4, (uint64_t)v5);
      sub_1000ED944((uint64_t)v6, (uint64_t)v5);
      sub_10008E17C((uint64_t)v6);
      v4 += 40;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100167A04(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1000EDD5C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_100167A9C()
{
  unint64_t result = qword_100708210;
  if (!qword_100708210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100708210);
  }
  return result;
}

uint64_t sub_100167AF0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100167B28()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_100167B44()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100167B7C(void *a1, int a2)
{
  return sub_1001663BC(a1, a2, v2);
}

uint64_t sub_100167B84()
{
  return _swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_100167BBC()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_100167BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100167C64()
{
  uint64_t v1 = (void *)sub_1004945EC((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    type metadata accessor for JSONEncoder();
    swift_bridgeObjectRetain_n();
    uint64_t v4 = 32;
    uint64_t v30 = v2;
    while (1)
    {
      uint64_t v5 = *(void *)(v2 + v4);
      swift_allocObject();
      swift_unknownObjectRetain();
      JSONEncoder.init()();
      sub_1001691E4();
      uint64_t v31 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      uint64_t v32 = v6;
      swift_release();
      uint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 7368564;
      switch(*(unsigned char *)(v5 + 16))
      {
        case 1:
          uint64_t v7 = 0xEC00000064657355;
          uint64_t v8 = 0x796C746E65636572;
          break;
        case 2:
          uint64_t v8 = 0x6E6F697461636F6CLL;
          goto LABEL_9;
        case 3:
          uint64_t v8 = 0x657469726F766166;
LABEL_9:
          uint64_t v7 = 0xE900000000000073;
          break;
        case 4:
          uint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x73726576726573;
          break;
        case 5:
          uint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1936154996;
          break;
        default:
          break;
      }
      unint64_t v9 = v1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v12 = sub_100042F50(v8, v7);
      uint64_t v13 = v9[2];
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        JUMPOUT(0x100168024);
      }
      char v16 = v11;
      if (v9[3] >= v15)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v1 = v9;
          if ((v11 & 1) == 0) {
            goto LABEL_15;
          }
        }
        else
        {
          sub_100358444();
          uint64_t v1 = v9;
          if ((v16 & 1) == 0) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_10034E7C8(v15, isUniquelyReferenced_nonNull_native);
        uint64_t v17 = sub_100042F50(v8, v7);
        if ((v16 & 1) != (v18 & 1)) {
          goto LABEL_29;
        }
        unint64_t v12 = v17;
        uint64_t v1 = v9;
        if ((v16 & 1) == 0)
        {
LABEL_15:
          v1[(v12 >> 6) + 8] |= 1 << v12;
          unint64_t v19 = (uint64_t *)(v1[6] + 16 * v12);
          uint64_t *v19 = v8;
          v19[1] = v7;
          unint64_t v20 = (uint64_t *)(v1[7] + 16 * v12);
          *unint64_t v20 = v31;
          v20[1] = v32;
          uint64_t v21 = v1[2];
          BOOL v22 = __OFADD__(v21, 1);
          uint64_t v23 = v21 + 1;
          if (v22) {
            goto LABEL_28;
          }
          v1[2] = v23;
          swift_bridgeObjectRetain();
          goto LABEL_20;
        }
      }
      uint64_t v24 = v1[7] + 16 * v12;
      sub_100021020(*(void *)v24, *(void *)(v24 + 8));
      *(void *)uint64_t v24 = v31;
      *(void *)(v24 + 8) = v32;
LABEL_20:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v2 = v30;
      v4 += 16;
      if (!--v3)
      {
        swift_bridgeObjectRelease_n();
        break;
      }
    }
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  uint64_t v25 = static NSUserDefaults.docUserDefaults.getter();
  if (v25)
  {
    unint64_t v26 = (void *)v25;
    swift_bridgeObjectRetain();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    [v26 setValue:isa forKey:v28];
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DOCSidebarData()
{
  return self;
}

uint64_t sub_100168060()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 32;
  while (2)
  {
    switch(*(unsigned char *)(*(void *)(v1 + v3) + 16))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_unknownObjectRelease();
          v3 += 16;
          if (--v2) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          __break(1u);
        }
        break;
      default:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        break;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t v5 = swift_dynamicCastClassUnconditional();
  uint64_t v6 = (void *)v5;
  uint64_t v7 = *(void *)(v0 + 16);
  v123 = (void *)v7;
  uint64_t v114 = v0;
  if (*(unsigned char *)(v0 + 40))
  {
    uint64_t v8 = *(void **)(v0 + 16);
    swift_bridgeObjectRetain();
    if (*(unsigned char *)(v0 + 41)) {
      goto LABEL_78;
    }
    goto LABEL_33;
  }
  int64_t v9 = *(void *)(v7 + 16);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    int64_t v17 = 0;
    uint64_t v18 = 0;
    goto LABEL_32;
  }
  v112 = (void *)v5;
  unint64_t v10 = *(void **)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 40);
  uint64_t v12 = *(void *)(v7 + 48);
  char v13 = *(unsigned char *)(v7 + 56);
  swift_bridgeObjectRetain_n();
  sub_10010ED28(v10, v11, v12, v13);
  uint64_t v15 = (void *)v7;
  if (sub_100249E60((unint64_t)v10, v11, v12, v13) == 0xD000000000000011 && v14 == 0x80000001005D72C0)
  {
    swift_bridgeObjectRelease();
    sub_10010EDB8(v10, v11, v12, v13);
    uint64_t v16 = 0;
  }
  else
  {
    v120 = (void *)v7;
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(v10, v11, v12, v13);
    if (v19)
    {
      uint64_t v16 = 0;
      uint64_t v15 = (void *)v7;
    }
    else
    {
      if (v9 == 1)
      {
        uint64_t v15 = (void *)v7;
LABEL_26:
        swift_bridgeObjectRelease();
        int64_t v115 = v9;
        goto LABEL_31;
      }
      uint64_t v15 = (void *)v7;
      unint64_t v20 = (unsigned __int8 *)(v7 + 88);
      uint64_t v16 = 1;
      while (1)
      {
        uint64_t v21 = (void *)*((void *)v20 - 3);
        uint64_t v22 = *((void *)v20 - 2);
        uint64_t v23 = *((void *)v20 - 1);
        unsigned __int8 v24 = *v20;
        sub_10010ED28(v21, v22, v23, *v20);
        if (sub_100249E60((unint64_t)v21, v22, v23, v24) == 0xD000000000000011 && v25 == 0x80000001005D72C0)
        {
          swift_bridgeObjectRelease();
          sub_10010EDB8(v21, v22, v23, v24);
          goto LABEL_29;
        }
        char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        sub_10010EDB8(v21, v22, v23, v24);
        if (v26) {
          break;
        }
        uint64_t v27 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_118;
        }
        v20 += 32;
        ++v16;
        uint64_t v15 = v120;
        if (v27 == v9) {
          goto LABEL_26;
        }
      }
      uint64_t v15 = v120;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  int64_t v115 = v16;
  uint64_t v28 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  if (v28 != v9)
  {
    uint64_t v40 = 32 * v16 + 64;
    uint64_t v117 = v16 + 1;
    unint64_t v41 = v16 + 1;
    while (1)
    {
      if (v28 < 0)
      {
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
        goto LABEL_105;
      }
      if (v41 >= v15[2]) {
        goto LABEL_102;
      }
      id v42 = (char *)v15 + v40;
      uint64_t v43 = *(void **)((char *)v15 + v40);
      uint64_t v44 = *(void *)((char *)v15 + v40 + 8);
      uint64_t v45 = *(void *)((char *)v15 + v40 + 16);
      char v46 = *((unsigned char *)v15 + v40 + 24);
      sub_10010ED28(v43, v44, v45, v46);
      if (sub_100249E60((unint64_t)v43, v44, v45, v46) == 0xD000000000000011 && v47 == 0x80000001005D72C0) {
        break;
      }
      v121 = v15;
      char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v43, v44, v45, v46);
      if (v48)
      {
        uint64_t v15 = v121;
        goto LABEL_42;
      }
      if (v41 == v115)
      {
        uint64_t v15 = v121;
      }
      else
      {
        if (v115 < 0) {
          goto LABEL_108;
        }
        unint64_t v49 = v121[2];
        if (v115 >= v49) {
          goto LABEL_109;
        }
        if (v41 >= v49) {
          goto LABEL_110;
        }
        uint64_t v50 = 4 * v115;
        uint64_t v51 = (uint64_t)&v121[4 * v115 + 4];
        uint64_t v53 = *(void **)v42;
        uint64_t v52 = *((void *)v42 + 1);
        uint64_t v54 = *((void *)v42 + 2);
        unsigned __int8 v55 = v42[24];
        unsigned __int8 v56 = *(unsigned char *)(v51 + 24);
        uint64_t v108 = *(void *)(v51 + 8);
        id v110 = *(id *)v51;
        uint64_t v106 = *(void *)(v51 + 16);
        sub_10010ED28(*(id *)v51, v108, v106, v56);
        sub_10010ED28(v53, v52, v54, v55);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v121 = sub_10050DC64(v121);
        }
        id v57 = &v121[v50];
        int64_t v58 = (void *)v121[v50 + 4];
        uint64_t v59 = v121[v50 + 5];
        uint64_t v60 = v121[v50 + 6];
        v57[4] = v53;
        v57[5] = v52;
        uint64_t v15 = v121;
        v57[6] = v54;
        unsigned __int8 v61 = v121[v50 + 7];
        *((unsigned char *)v57 + 56) = v55;
        sub_10010EDB8(v58, v59, v60, v61);
        if (v41 >= v121[2]) {
          goto LABEL_111;
        }
        id v62 = (char *)v121 + v40;
        id v63 = *(void **)((char *)v121 + v40);
        uint64_t v64 = *(void *)((char *)v121 + v40 + 8);
        uint64_t v65 = *(void *)((char *)v121 + v40 + 16);
        *(void *)id v62 = v110;
        *((void *)v62 + 1) = v108;
        *((void *)v62 + 2) = v106;
        unsigned __int8 v66 = *((unsigned char *)v121 + v40 + 24);
        v62[24] = v56;
        sub_10010EDB8(v63, v64, v65, v66);
        v123 = v121;
      }
      uint64_t v28 = v117;
      BOOL v67 = __OFADD__(v115++, 1);
      if (v67) {
        goto LABEL_106;
      }
LABEL_43:
      ++v41;
      v40 += 32;
      if (v41 == v15[2]) {
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    sub_10010EDB8(v43, v44, v45, v46);
LABEL_42:
    uint64_t v28 = v117;
    goto LABEL_43;
  }
LABEL_31:
  int64_t v17 = v15[2];
  uint64_t v18 = v115;
  uint64_t v6 = v112;
  if (v17 < v115)
  {
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
LABEL_32:
  sub_10051634C(v18, v17);
  uint64_t v8 = v123;
  uint64_t v0 = v114;
  if ((*(unsigned char *)(v114 + 41) & 1) == 0)
  {
LABEL_33:
    int64_t v29 = v8[2];
    if (!v29)
    {
      int64_t v37 = 0;
      uint64_t v38 = 0;
LABEL_77:
      sub_10051634C(v38, v37);
      uint64_t v8 = v123;
      uint64_t v0 = v114;
      goto LABEL_78;
    }
    v113 = v6;
    uint64_t v30 = (void *)v8[4];
    uint64_t v31 = v8[5];
    uint64_t v32 = v8[6];
    char v33 = *((unsigned char *)v8 + 56);
    swift_bridgeObjectRetain();
    sub_10010ED28(v30, v31, v32, v33);
    if (sub_100249E60((unint64_t)v30, v31, v32, v33) == 0xD000000000000010 && v34 == 0x80000001005D72E0)
    {
      uint64_t v35 = v8;
      swift_bridgeObjectRelease();
      sub_10010EDB8(v30, v31, v32, v33);
      uint64_t v36 = 0;
    }
    else
    {
      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v30, v31, v32, v33);
      if (v39)
      {
        uint64_t v36 = 0;
        uint64_t v35 = v8;
      }
      else
      {
        if (v29 == 1)
        {
          uint64_t v35 = v8;
LABEL_70:
          swift_bridgeObjectRelease();
          int64_t v116 = v29;
LABEL_76:
          int64_t v37 = v35[2];
          uint64_t v38 = v116;
          uint64_t v6 = v113;
          if (v37 >= v116) {
            goto LABEL_77;
          }
          goto LABEL_113;
        }
        uint64_t v35 = v8;
        uint64_t v68 = (unsigned __int8 *)(v8 + 11);
        uint64_t v36 = 1;
        int64_t v119 = v29;
        while (1)
        {
          id v69 = (void *)*((void *)v68 - 3);
          uint64_t v70 = *((void *)v68 - 2);
          uint64_t v71 = *((void *)v68 - 1);
          unsigned __int8 v72 = *v68;
          sub_10010ED28(v69, v70, v71, *v68);
          if (sub_100249E60((unint64_t)v69, v70, v71, v72) == 0xD000000000000010
            && v73 == 0x80000001005D72E0)
          {
            swift_bridgeObjectRelease();
            sub_10010EDB8(v69, v70, v71, v72);
            goto LABEL_73;
          }
          char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          sub_10010EDB8(v69, v70, v71, v72);
          if (v74) {
            break;
          }
          uint64_t v75 = v36 + 1;
          int64_t v29 = v119;
          if (__OFADD__(v36, 1)) {
            goto LABEL_119;
          }
          v68 += 32;
          ++v36;
          uint64_t v35 = v8;
          if (v75 == v119) {
            goto LABEL_70;
          }
        }
        uint64_t v35 = v8;
LABEL_73:
        int64_t v29 = v119;
      }
    }
    swift_bridgeObjectRelease();
    int64_t v116 = v36;
    uint64_t v76 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
LABEL_121:
      __break(1u);
      JUMPOUT(0x100168BD8);
    }
    if (v76 == v29) {
      goto LABEL_76;
    }
    uint64_t v79 = 32 * v36 + 64;
    uint64_t v118 = v36 + 1;
    unint64_t v80 = v36 + 1;
    while (1)
    {
      if (v76 < 0) {
        goto LABEL_103;
      }
      if (v80 >= v35[2]) {
        goto LABEL_104;
      }
      uint64_t v81 = (char *)v35 + v79;
      uint64_t v82 = *(void **)((char *)v35 + v79);
      uint64_t v83 = *(void *)((char *)v35 + v79 + 8);
      uint64_t v84 = *(void *)((char *)v35 + v79 + 16);
      char v85 = *((unsigned char *)v35 + v79 + 24);
      sub_10010ED28(v82, v83, v84, v85);
      if (sub_100249E60((unint64_t)v82, v83, v84, v85) == 0xD000000000000010 && v86 == 0x80000001005D72E0) {
        break;
      }
      v122 = v35;
      char v87 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v82, v83, v84, v85);
      if (v87)
      {
        uint64_t v35 = v122;
        goto LABEL_81;
      }
      if (v80 == v116)
      {
        uint64_t v35 = v122;
      }
      else
      {
        if (v116 < 0) {
          goto LABEL_114;
        }
        unint64_t v88 = v122[2];
        if (v116 >= v88) {
          goto LABEL_115;
        }
        if (v80 >= v88) {
          goto LABEL_116;
        }
        uint64_t v89 = 4 * v116;
        uint64_t v90 = (uint64_t)&v122[4 * v116 + 4];
        v91 = *(void **)v81;
        uint64_t v92 = *((void *)v81 + 1);
        uint64_t v93 = *((void *)v81 + 2);
        unsigned __int8 v94 = v81[24];
        unsigned __int8 v95 = *(unsigned char *)(v90 + 24);
        uint64_t v109 = *(void *)(v90 + 8);
        id v111 = *(id *)v90;
        uint64_t v107 = *(void *)(v90 + 16);
        sub_10010ED28(*(id *)v90, v109, v107, v95);
        sub_10010ED28(v91, v92, v93, v94);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v122 = sub_10050DC64(v122);
        }
        v96 = &v122[v89];
        v97 = (void *)v122[v89 + 4];
        uint64_t v98 = v122[v89 + 5];
        uint64_t v99 = v122[v89 + 6];
        v96[4] = v91;
        v96[5] = v92;
        uint64_t v35 = v122;
        v96[6] = v93;
        unsigned __int8 v100 = v122[v89 + 7];
        *((unsigned char *)v96 + 56) = v94;
        sub_10010EDB8(v97, v98, v99, v100);
        if (v80 >= v122[2]) {
          goto LABEL_117;
        }
        v101 = (char *)v122 + v79;
        v102 = *(void **)((char *)v122 + v79);
        uint64_t v103 = *(void *)((char *)v122 + v79 + 8);
        uint64_t v104 = *(void *)((char *)v122 + v79 + 16);
        *(void *)v101 = v111;
        *((void *)v101 + 1) = v109;
        *((void *)v101 + 2) = v107;
        unsigned __int8 v105 = *((unsigned char *)v122 + v79 + 24);
        v101[24] = v95;
        sub_10010EDB8(v102, v103, v104, v105);
        v123 = v122;
      }
      uint64_t v76 = v118;
      BOOL v67 = __OFADD__(v116++, 1);
      if (v67) {
        goto LABEL_107;
      }
LABEL_82:
      ++v80;
      v79 += 32;
      if (v80 == v35[2]) {
        goto LABEL_76;
      }
    }
    swift_bridgeObjectRelease();
    sub_10010EDB8(v82, v83, v84, v85);
LABEL_81:
    uint64_t v76 = v118;
    goto LABEL_82;
  }
LABEL_78:
  swift_beginAccess();
  v6[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v77 = v8[2];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_100168D68(v6, v77 == 0, v0);
  return swift_unknownObjectRelease_n();
}

uint64_t sub_100168BF0(uint64_t a1, uint64_t a2)
{
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v3 = *(id *)(a2 + 24);
  LOBYTE(a2) = static NSObject.== infix(_:_:)();

  return a2 & 1;
}

uint64_t sub_100168C74()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100168CBC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

unint64_t sub_100168D14()
{
  unint64_t result = qword_100708478;
  if (!qword_100708478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100708478);
  }
  return result;
}

void sub_100168D68(void *a1, char a2, uint64_t a3)
{
  uint64_t v6 = (char **)(a3 + 32);
  swift_beginAccess();
  uint64_t v7 = *(void *)(*(void *)(a3 + 32) + 16);
  if (!v7)
  {
LABEL_6:
    if (a2) {
      return;
    }
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
    uint64_t v12 = a1[4];
    uint64_t v13 = a1[5];
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_100073F48();
    *(void *)(v11 + 32) = v12;
    *(void *)(v11 + 40) = v13;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v15 = *(void *)(a3 + 24);
    uint64_t v16 = *(void *)(v15 + 16);
    if (!v16) {
      return;
    }
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    int64_t v17 = (void *)a1[3];
    swift_bridgeObjectRetain_n();
    uint64_t v18 = 0;
    while (1)
    {
      long long v35 = *(_OWORD *)(v15 + 16 * v18 + 32);
      swift_unknownObjectRetain();
      id v19 = v17;
      char v20 = static NSObject.== infix(_:_:)();

      if (v20) {
        break;
      }
      ++v18;
      swift_unknownObjectRelease();
      if (v16 == v18)
      {
        swift_bridgeObjectRelease_n();
        return;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    char v26 = *v6;
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v6 = v26;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_16;
    }
    goto LABEL_21;
  }
  *(void *)&long long v35 = v6;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  uint64_t v34 = a1;
  uint64_t v8 = (void *)a1[3];
  swift_bridgeObjectRetain_n();
  uint64_t v9 = 32;
  while (1)
  {
    swift_unknownObjectRetain();
    uint64_t v6 = v8;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10) {
      break;
    }
    swift_unknownObjectRelease();
    v9 += 16;
    if (!--v7)
    {
      swift_bridgeObjectRelease_n();
      a1 = v34;
      uint64_t v6 = (char **)v35;
      goto LABEL_6;
    }
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
  if (a2)
  {
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
    uint64_t v22 = v34[4];
    uint64_t v23 = v34[5];
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_100073F48();
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    swift_bridgeObjectRetain();
    unsigned __int8 v24 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    __chkstk_darwin(v25);
    swift_beginAccess();
    char v26 = (char *)v35;
    uint64_t v27 = sub_1001B3054((uint64_t (*)(long long *))sub_1001691C4);
    int64_t v28 = *(void *)(*(void *)v35 + 16);
    if (v28 >= v27)
    {
      sub_1005164C0(v27, v28);
      swift_endAccess();
      return;
    }
    __break(1u);
LABEL_21:
    char v26 = sub_10018F9B8(0, *((void *)v26 + 2) + 1, 1, v26);
    *uint64_t v6 = v26;
LABEL_16:
    long long v30 = v35;
    unint64_t v32 = *((void *)v26 + 2);
    unint64_t v31 = *((void *)v26 + 3);
    if (v32 >= v31 >> 1)
    {
      char v33 = sub_10018F9B8((char *)(v31 > 1), v32 + 1, 1, v26);
      long long v30 = v35;
      char v26 = v33;
      *uint64_t v6 = v33;
    }
    *((void *)v26 + 2) = v32 + 1;
    *(_OWORD *)&v26[16 * v32 + 32] = v30;
    swift_endAccess();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1001691C4(uint64_t a1)
{
  return sub_100168BF0(a1, *(void *)(v1 + 16)) & 1;
}

unint64_t sub_1001691E4()
{
  unint64_t result = qword_100708488;
  if (!qword_100708488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100708488);
  }
  return result;
}

uint64_t sub_100169238(unint64_t a1)
{
  return sub_100083628(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017DDAC);
}

uint64_t sub_100169250(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  id v3 = sub_10018F15C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[2 * v9 + 4];
  if (a1 + 32 < v10 + 16 * v8 && v10 < a1 + 32 + 16 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001693A8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  id v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_10018F390(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001694F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v1 >> 62))
  {
    uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v5 = v15 + v3;
  if (__OFADD__(v15, v3)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
    {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
      if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v6 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v1 = v9;
    uint64_t v8 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = sub_1000603CC(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1, (void (*)(void))type metadata accessor for DOCSearchSuggestion, &qword_1007085E8, &qword_1007085E0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010A510);
    if (v11 >= v3) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1001696F4(uint64_t a1)
{
  return sub_1000B7D88(a1, (uint64_t (*)(void))sub_10018F950, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_100169720(unint64_t a1)
{
  return sub_100083628(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E01C);
}

uint64_t sub_100169738(unint64_t a1)
{
  return sub_100083628(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E240);
}

uint64_t sub_100169750(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000825D0(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001698A4(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E474);
}

uint64_t sub_1001698BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10018FBEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100169A18(unint64_t a1)
{
  return sub_1000601A8(a1, (unint64_t *)type metadata accessor for DOCUIImageMenuItem, &qword_100708748, &qword_100708740, (uint64_t *)sub_10010A6B4);
}

uint64_t sub_100169A54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000AF10C(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100169BA8(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E6A8);
}

uint64_t sub_100169BC0(unint64_t a1)
{
  return sub_1000601A8(a1, (unint64_t *)type metadata accessor for DOCFileProviderSource, (unint64_t *)&unk_100708848, &qword_100708840, (uint64_t *)sub_10010A510);
}

uint64_t sub_100169BFC(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E8DC);
}

uint64_t sub_100169C14(uint64_t a1)
{
  return sub_100169FC8(a1, (uint64_t (*)(void))sub_1001900DC, (uint64_t *)&unk_100717500);
}

uint64_t sub_100169C34(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017EB10);
}

uint64_t sub_100169C4C(uint64_t a1)
{
  return sub_1000B7D88(a1, (uint64_t (*)(void))sub_10018EF08, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
}

uint64_t sub_100169C78(unint64_t a1)
{
  return sub_10009DC84(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017ED44);
}

uint64_t sub_100169C90(unint64_t a1)
{
  return sub_1000601A8(a1, (unint64_t *)type metadata accessor for DOCBrowserContainerController, (unint64_t *)&unk_100708668, &qword_100708660, (uint64_t *)sub_10010A510);
}

uint64_t sub_100169CCC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *int64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v11 = v14 + v9;
      if (__OFADD__(v14, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *int64_t v4 = v7;
      if (!isUniquelyReferenced_nonNull_bridgeObject) {
        goto LABEL_15;
      }
      if ((v7 & 0x8000000000000000) != 0) {
        goto LABEL_15;
      }
      if ((v7 & 0x4000000000000000) != 0) {
        goto LABEL_15;
      }
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_18;
      }
    }
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v15 = *(void *)(v13 + 16);
  if ((*(void *)(v13 + 24) >> 1) - v15 < v9)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_30;
  }
  unint64_t v16 = v13 + 8 * v15 + 32;
  unint64_t v17 = v6 + 8 * v5;
  if (v17 < v16 + 8 * v9 && v16 < v17 + 8 * v9) {
    goto LABEL_30;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v18 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v19 = __OFADD__(v18, v9);
    uint64_t v20 = v18 + v9;
    if (!v19)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v20;
      goto LABEL_25;
    }
    goto LABEL_29;
  }
LABEL_25:
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_100169F6C(unint64_t a1)
{
  return sub_1000601A8(a1, (unint64_t *)type metadata accessor for DOCGoToRecentLocation, &qword_100708828, &qword_100708820, (uint64_t *)sub_10010A510);
}

uint64_t sub_100169FA8(uint64_t a1)
{
  return sub_100169FC8(a1, (uint64_t (*)(void))sub_100190860, (uint64_t *)&unk_100708640);
}

uint64_t sub_100169FC8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  if ((*(void *)(v5 + 24) >> 1) - v10 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v11 = v5 + 40 * v10 + 32;
  if (a1 + 32 < v11 + 40 * v4 && v11 < a1 + 32 + 40 * v4) {
    goto LABEL_21;
  }
  sub_1000CBE70(a3);
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
  uint64_t v13 = *(void *)(v5 + 16);
  BOOL v14 = __OFADD__(v13, v4);
  uint64_t v15 = v13 + v4;
  if (!v14)
  {
    *(void *)(v5 + 16) = v15;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10016A144(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100190874(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[10 * v9 + 4];
  if (a1 + 32 < v10 + 80 * v8 && v10 < a1 + 32 + 80 * v8) {
    goto LABEL_24;
  }
  sub_1000CBE70(&qword_10071A530);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id DOCFullDocumentManagerViewController.tabbedBrowserController.getter()
{
  uint64_t v1 = self;
  id v2 = [v0 configuration];
  id v3 = [v2 sceneIdentifier];

  id v4 = [v1 globalTabbedBrowserControllerForIdentifier:v3];
  return v4;
}

uint64_t sub_10016A350(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  int64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DOCFullDocumentManagerViewController.topMostItemCollectionViewController.getter()
{
  uint64_t v1 = (char *)[v0 effectiveBrowserViewController];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (*v3)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v5 = swift_dynamicCastClass();
    if (v5) {
      id v6 = v4;
    }
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_10016A4A4(void *a1, void *a2, int a3, int a4)
{
  uint64_t v5 = v4;
  LODWORD(v115) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  __chkstk_darwin(v9);
  id v111 = &v104[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = &v104[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v108 = (void *)type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v107 = *(v108 - 1);
  __chkstk_darwin(v108);
  uint64_t v106 = &v104[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = &v104[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  BOOL v19 = &v104[-v18];
  if (!a2) {
    goto LABEL_6;
  }
  int v105 = a3;
  int64_t v116 = v17;
  uint64_t v117 = &v104[-v18];
  uint64_t v20 = a1;
  uint64_t v21 = v14;
  uint64_t v22 = v4;
  uint64_t v23 = v13;
  unsigned __int8 v24 = a2;
  id v25 = [a2 sourceIdentifier];
  char v26 = (void *)DOCDocumentSourceIdentifierSearch;
  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v29 = v28;
  if (v27 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v29 == v30)
  {
    id v31 = v26;

    swift_bridgeObjectRelease_n();
    int v32 = 0;
    uint64_t v13 = v23;
    a2 = v24;
    uint64_t v5 = v22;
    uint64_t v14 = v21;
    a1 = v20;
    unint64_t v17 = v116;
    BOOL v19 = v117;
    goto LABEL_7;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v34 = v26;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v32 = 0;
  uint64_t v13 = v23;
  a2 = v24;
  uint64_t v5 = v22;
  uint64_t v14 = v21;
  a1 = v20;
  unint64_t v17 = v116;
  BOOL v19 = v117;
  a3 = v105;
  if ((v33 & 1) == 0)
  {
LABEL_6:
    long long v35 = (char *)[v5 dataSource];
    uint64_t v36 = *(void *)&v35[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    int v32 = (v36 == 2) & (a3 ^ 1);
  }
LABEL_7:
  if (([v5 isEditing] & 1) == 0)
  {
    if (v32)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v45 = (void *)DOCNode.sourceIdentifier.getter();
      id v46 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v45 node:a1];

      id v47 = a2;
      char v48 = (char *)v46;
      sub_10016B144(v48, a2);

      id v49 = [v5 configuration];
      id v50 = [v49 sceneIdentifier];

      uint64_t v51 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v50);
      uint64_t v52 = (void **)&v51[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      uint64_t v53 = *v52;
      *uint64_t v52 = 0;
      sub_1000D7C50(v53);

      static Logger.UI.getter();
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v54, v55))
      {
        unsigned __int8 v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned __int8 v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "[Interaction] Clearing last opened item in 'didSelect:wasAlreadySelected:onlyRevealIfColumnMode:': Showing column mode NOT in edition", v56, 2u);
        swift_slowDealloc();
        id v57 = v48;
      }
      else
      {
        id v57 = v54;
        uint64_t v54 = v48;
      }

      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v13);
      return;
    }
    if (v115) {
      return;
    }
    id v58 = [v5 configuration];
    unsigned int v59 = [v58 pickingItemsShouldBumpLastOpenDate];

    if (v59) {
      FPItem.bumpLastOpenDate(delay:)(3.0);
    }
    id v60 = [v5 configuration];
    unsigned int v61 = [v60 isPickerUI];

    if (a2)
    {
      if (v61)
      {
        id v62 = [a2 fileProviderItem];
        if (v62)
        {
          id v63 = v62;
          sub_10035CD18((uint64_t)v62);
        }
      }
    }
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v64 = swift_allocObject();
    long long v115 = xmmword_1005A04F0;
    *(_OWORD *)(v64 + 16) = xmmword_1005A04F0;
    *(void *)(v64 + 32) = a1;
    aBlock[0] = v64;
    specialized Array._endMutation()();
    uint64_t v65 = aBlock[0];
    id v66 = a1;
    BOOL v67 = (char *)[v5 effectiveBrowserViewController];
    if (!v67)
    {
      uint64_t v71 = a2;
      uint64_t v75 = 0;
      goto LABEL_33;
    }
    uint64_t v68 = v67;
    id v69 = (void **)&v67[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v70 = *v69;
    if (v70)
    {
      uint64_t v71 = a2;
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v72 = swift_dynamicCastClass();
      if (v72)
      {
        uint64_t v73 = v72;
        id v74 = v70;

        uint64_t v75 = *(void **)(v73 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
        id v76 = v75;
        uint64_t v68 = v74;
LABEL_32:

LABEL_33:
        uint64_t v77 = type metadata accessor for DOCRelatedNodeMatcher();
        uint64_t v78 = [v5 configuration];
        uint64_t v79 = (void *)swift_allocObject();
        v79[2] = v66;
        v79[3] = v71;
        v79[4] = v5;
        id v80 = v71;
        id v81 = v66;
        id v82 = v5;
        int64_t v116 = v80;
        id v83 = v81;
        id v84 = v82;
        uint64_t v117 = v78;
        if ([v78 supportsRelatedFilesInPicker])
        {
          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          *(void *)&long long v115 = v84;
          uint64_t v85 = v107;
          uint64_t v86 = v106;
          char v87 = v108;
          (*(void (**)(unsigned char *, void, void *))(v107 + 104))(v106, enum case for DispatchQoS.QoSClass.userInitiated(_:), v108);
          unint64_t v88 = (void *)static OS_dispatch_queue.global(qos:)();
          (*(void (**)(unsigned char *, void *))(v85 + 8))(v86, v87);
          uint64_t v89 = (void *)swift_allocObject();
          v89[2] = v75;
          v89[3] = v65;
          v89[4] = v77;
          v89[5] = sub_100181050;
          v89[6] = v79;
          aBlock[4] = sub_1001810BC;
          aBlock[5] = v89;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000666D8;
          aBlock[3] = &unk_100693EF8;
          uint64_t v90 = _Block_copy(aBlock);
          uint64_t v108 = v75;
          swift_bridgeObjectRetain();
          swift_retain();
          v91 = v109;
          static DispatchQoS.unspecified.getter();
          uint64_t v118 = _swiftEmptyArrayStorage;
          sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000CBE70((uint64_t *)&unk_100705390);
          sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
          uint64_t v92 = v111;
          uint64_t v93 = v114;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v90);

          (*(void (**)(unsigned char *, uint64_t))(v113 + 8))(v92, v93);
          (*(void (**)(unsigned char *, uint64_t))(v110 + 8))(v91, v112);
          swift_bridgeObjectRelease();

          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v94 = swift_allocObject();
          *(_OWORD *)(v94 + 16) = v115;
          *(void *)(v94 + 32) = v83;
          aBlock[0] = v94;
          specialized Array._endMutation()();
          uint64_t v95 = aBlock[0];
          id v96 = v83;
          sub_1000CBE70((uint64_t *)&unk_100706730);
          unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
          aBlock[0] = v95;
          sub_100083628(Available, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E240);
          unint64_t v98 = aBlock[0];
          id v99 = [self defaultManager];
          unsigned __int8 v100 = (void *)swift_allocObject();
          v100[2] = v71;
          v100[3] = v84;
          v100[4] = v98;
          uint64_t v101 = swift_allocObject();
          *(void *)(v101 + 16) = sub_100181060;
          *(void *)(v101 + 24) = v100;
          v102 = v116;
          id v103 = v84;
          swift_bridgeObjectRetain();
          swift_retain();
          sub_10053A2BC(v98, (uint64_t)sub_10018106C, v101);
          swift_bridgeObjectRelease();

          swift_release();
          swift_bridgeObjectRelease();

          swift_release();
          swift_release();
        }
        return;
      }
    }
    else
    {
      uint64_t v71 = a2;
    }
    uint64_t v75 = 0;
    goto LABEL_32;
  }
  if (v32)
  {
    id v37 = [v5 configuration];
    id v38 = [v37 sceneIdentifier];

    char v39 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v38);
    uint64_t v40 = (void **)&v39[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    unint64_t v41 = *v40;
    *uint64_t v40 = 0;
    sub_1000D7C50(v41);

    static Logger.UI.getter();
    id v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "[Interaction] Clearing last opened item in 'didSelect:wasAlreadySelected:onlyRevealIfColumnMode:': Showing column mode in edition", v44, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v17, v13);
  }
}

void sub_10016B144(char *a1, void *a2)
{
  id v3 = v2;
  if (a2)
  {
    id v6 = a2;
    unint64_t v7 = (char *)[v2 dataSource];
    uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

    if (v8 == 2)
    {
      uint64_t v9 = (char *)[v3 locationChangePacer];
      uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
      uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
      sub_100180F88(v11, v10);

      if (v11)
      {
        id v12 = v10;
        sub_100180FC8(v11, v10);
        if (v10)
        {
          sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
          id v6 = v6;
          char v13 = static NSObject.== infix(_:_:)();

          if (v13)
          {
            id v14 = [v3 internalNavigationController];
            id v15 = [v14 topViewController];

            if (v15)
            {
              type metadata accessor for DOCColumnViewController(0);
              if (swift_dynamicCastClass())
              {
                sub_100411C10((uint64_t *)v6);
                uint64_t v16 = v15;
              }
              else
              {
                uint64_t v16 = v6;
                id v6 = v15;
              }
            }
          }
        }
      }
    }
  }
  id v17 = [v3 locationChangePacer];
  sub_10057DB48(a1, (char *)a2);
}

uint64_t sub_10016B31C(uint64_t a1, void *a2, void *a3, void *a4)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A04F0;
  *(void *)(v7 + 32) = a2;
  unint64_t v16 = v7;
  specialized Array._endMutation()();
  id v8 = a2;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
  sub_100083628(Available, (uint64_t (*)(uint64_t, void, unint64_t))sub_10017E240);
  id v10 = [self defaultManager];
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = v16;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1001812A0;
  *(void *)(v12 + 24) = v11;
  id v13 = a3;
  id v14 = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10053A2BC(v16, (uint64_t)sub_1001813F8, v12);
  swift_bridgeObjectRelease();

  swift_release();

  return swift_release();
}

uint64_t sub_10016B4A8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v64 = a4;
  uint64_t v54 = a1;
  uint64_t v61 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v59 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  id v60 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v57 = (char *)&v49 - v10;
  uint64_t v11 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v11 - 8);
  unsigned __int8 v56 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v13 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v63 = v16;
  __chkstk_darwin(v16);
  id v58 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v65 = a2;
  if (a2)
  {
    id v22 = [v65 fileProviderItem];
    if (v22)
    {
      uint64_t v23 = v22;
      type metadata accessor for DOCSmartFolderManager();
      id v49 = v15;
      unsigned __int8 v24 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      id v25 = [a3 configuration];
      id v26 = [v25 hostIdentifier];
      uint64_t v51 = a3;
      id v27 = v26;

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v50 = v7;

      id v28 = v23;
      Date.init()();
      id v29 = objc_allocWithZone((Class)DOCHotFolderEvent);
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      int v32 = v29;
      a3 = v51;
      id v33 = [v32 initWithAppBundleIdentifier:v30 folderItem:v28 type:0 lastUsedDate:isa frecency:1.0];

      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      DOCSmartFolderManager.register(event:)();
      id v15 = v49;

      uint64_t v7 = v50;
    }
  }
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DOCAnalyticsActionEvent.Action.openIn(_:), v53);
  id v34 = [a3 configuration];
  uint64_t v35 = v64;
  swift_bridgeObjectRetain();
  DOCAnalyticsActionEvent.FileProvider.init(items:)();
  id v36 = [self mainBundle];
  id v37 = [v36 bundleIdentifier];

  if (v37)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v38 = v57;
  if (v65)
  {
    id v39 = [v65 sourceIdentifier];
    uint64_t v40 = v52;
    DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v38, v40, v7);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v55 + 104))(v57, enum case for DOCAnalyticsActionEvent.Source.other(_:), v7);
  }
  unint64_t v41 = (char *)[a3 dataSource];
  unint64_t v42 = *(void *)&v41[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v42 >= 3)
  {
    aBlock[0] = v42;
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v60, *(unsigned int *)*(&off_100694218 + v42), v61);
    os_log_type_t v43 = v58;
    DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
    type metadata accessor for DOCAnalyticsManager();
    uint64_t v44 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendActionEvent(_:)();

    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = v35;
    v45[3] = a3;
    v45[4] = v54;
    aBlock[4] = sub_100181114;
    aBlock[5] = v45;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100693F48;
    id v46 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v47 = a3;
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v46);
    return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v43, v63);
  }
  return result;
}

void sub_10016BBF0(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = [self defaultPermission];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  v10[4] = sub_100181160;
  v10[5] = v7;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_1000666D8;
  v10[3] = &unk_100693F98;
  uint64_t v8 = _Block_copy(v10);
  id v9 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  [v5 adoptPersonaFromItems:isa andPerformBlock:v8];
  _Block_release(v8);
}

void sub_10016BD38(void *a1)
{
  id v2 = [a1 delegate];
  if (v2)
  {
    id v3 = v2;
    if ([v2 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
    {
      type metadata accessor for URL();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v3 documentBrowser:a1 didPickDocumentsAtURLs:isa];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_10016BEB8(char *a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  if ([v2 delegate])
  {
    id v58 = &OBJC_PROTOCOL___UIDocumentBrowserViewControllerPrivateDelegate;
    id v15 = (void *)swift_dynamicCastObjCProtocolConditional();
    uint64_t v16 = v15;
    if (v15)
    {
      if (([v15 respondsToSelector:"documentBrowser:shouldHandleLocation:"] & 1) != 0
        && ([v16 documentBrowser:v2 shouldHandleLocation:a1] & 1) == 0)
      {
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = 0;
  }
  id v17 = [self searchLocation];
  uint64_t v18 = v17;
  if (a2)
  {
    if (v17)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      uint64_t v19 = a1;
      id v20 = a2;
      char v21 = static NSObject.== infix(_:_:)();

      a1 = v19;
      if (v21) {
        goto LABEL_15;
      }
    }
LABEL_14:
    sub_10016B144(a1, a2);
    swift_unknownObjectRelease();
    return;
  }
  if (v17)
  {

    goto LABEL_14;
  }
LABEL_15:
  uint64_t v54 = a1;
  uint64_t v55 = v16;
  id v22 = (SEL *)&unk_1006E3000;
  id v23 = [v3 hierarchyController];
  uint64_t v24 = (uint64_t)v23 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
  swift_beginAccess();
  sub_1000CBC00(v24, (uint64_t)v12, (uint64_t *)&unk_10070B640);
  uint64_t v25 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v26 = *(void *)(v25 - 8);
  id v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
  if (v27(v12, 1, v25) == 1)
  {
    uint64_t v28 = (uint64_t)v23 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
    swift_beginAccess();
    sub_1000CBC00(v28, (uint64_t)v14, (uint64_t *)&unk_10070B640);
    id v22 = (SEL *)&unk_1006E3000;
    sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_10017FEEC((uint64_t)v12, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
  }
  if (v27(v14, 1, v25) == 1)
  {
    sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_10070B640);

    goto LABEL_23;
  }
  char v29 = v14[*(int *)(v25 + 24)];
  sub_10008BB90((uint64_t)v14, type metadata accessor for DOCHierarchyController.FetchingOperationToken);

  if ((v29 & 1) == 0)
  {
LABEL_23:
    id v33 = (char *)[v3 v22[367]];
    id v34 = &v33[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    uint64_t v35 = *(void *)v34;
    if (*(void *)v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      unint64_t v37 = (unint64_t)v54;
      if (v36)
      {
LABEL_25:
        unint64_t v38 = v36 - 1;
        if (__OFSUB__(v36, 1))
        {
          __break(1u);
        }
        else if ((v35 & 0xC000000000000001) == 0)
        {
          if ((v38 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v38 < *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v14 = (char *)*(id *)(v35 + 8 * v38 + 32);
LABEL_30:

            swift_bridgeObjectRelease();
            sub_10009E6C4(0, (unint64_t *)&qword_100706710);
            if (static NSObject.== infix(_:_:)())
            {
              id v39 = [v3 dataSource];
              unint64_t v37 = sub_10008A504();

              unint64_t v59 = (unint64_t)_swiftEmptyArrayStorage;
              if (!(v37 >> 62))
              {
                uint64_t v40 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
                if (v40)
                {
LABEL_33:
                  if (v40 < 1)
                  {
                    __break(1u);
                    goto LABEL_68;
                  }
                  unint64_t v41 = v14;
                  for (uint64_t i = 0; i != v40; ++i)
                  {
                    if ((v37 & 0xC000000000000001) != 0) {
                      id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      id v43 = *(id *)(v37 + 8 * i + 32);
                    }
                    uint64_t v44 = v43;
                    id v45 = [v43 navigationItem];
                    id v46 = [v45 searchController];

                    if (v46)
                    {
                      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                      if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                      specialized Array._endMutation()();
                    }
                  }
                  swift_bridgeObjectRelease();
                  unint64_t v47 = v59;
                  uint64_t v14 = v41;
LABEL_56:
                  swift_bridgeObjectRelease();
                  if (v47 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
                    if (v49)
                    {
LABEL_58:
                      if (v49 >= 1)
                      {
                        for (uint64_t j = 0; j != v49; ++j)
                        {
                          if ((v47 & 0xC000000000000001) != 0) {
                            id v51 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                          }
                          else {
                            id v51 = *(id *)(v47 + 8 * j + 32);
                          }
                          uint64_t v52 = v51;
                          [v51 setActive:0];
                        }
                        goto LABEL_65;
                      }
LABEL_68:
                      __break(1u);
                      return;
                    }
                  }
                  else
                  {
                    uint64_t v49 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    swift_bridgeObjectRetain();
                    if (v49) {
                      goto LABEL_58;
                    }
                  }
LABEL_65:
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease_n();

                  return;
                }
LABEL_55:
                swift_bridgeObjectRelease();
                unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
                goto LABEL_56;
              }
LABEL_54:
              swift_bridgeObjectRetain();
              uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
              if (v40) {
                goto LABEL_33;
              }
              goto LABEL_55;
            }

LABEL_49:
            id v48 = [v3 locationChangePacer];
            sub_10057DB48((char *)v37, 0);
            swift_unknownObjectRelease();

            return;
          }
          __break(1u);
          goto LABEL_54;
        }
        uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_30;
      }
    }
    else
    {
      uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      unint64_t v37 = (unint64_t)v54;
      if (v36) {
        goto LABEL_25;
      }
    }

    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  static Logger.UI.getter();
  NSString v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    int v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "The hierarchy controller is fetching location. Skipping the browsing.", v32, 2u);
    swift_slowDealloc();
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v57);
}

uint64_t sub_10016C758(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  id v15 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)aBlock - v16;
  if (a2)
  {
    uint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10059B760;
    *(void *)(v19 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v19 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v19 + 32) = a3;
    id v20 = a3;
    uint64_t v21 = _convertErrorToNSError(_:)();
    *(void *)(v19 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 72) = v21;
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
      static DOCLog.UI.getter();
      uint64_t result = static os_log_type_t.error.getter();
      __break(1u);
    }
    else
    {
      id v23 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v23(v17, v10, v11);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
      unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a4;
      v23((char *)(v25 + v24), v15, v11);
      aBlock[4] = sub_100180EF8;
      aBlock[5] = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100693E30;
      uint64_t v26 = _Block_copy(aBlock);
      id v27 = a4;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v26);
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  return result;
}

void sub_10016CB2C(void *a1, uint64_t a2)
{
  id v4 = [a1 delegate];
  if (v4)
  {
    id v5 = v4;
    if (([v4 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"] & 1) != 0
      && ([v5 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"] & 1) != 0)
    {
      sub_1000CBE70((uint64_t *)&unk_1007087F0);
      uint64_t v6 = type metadata accessor for URL();
      uint64_t v7 = *(void *)(v6 - 8);
      unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a2, v6);
      swift_unknownObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v5 documentBrowser:a1 didPickDocumentsAtURLs:isa];
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  id v5 = v4;
  uint64_t v10 = self;
  id v11 = [v5 configuration];
  id v12 = [v11 sceneIdentifier];

  id v13 = [v10 globalTabbedBrowserControllerForIdentifier:v12];
  if (v13)
  {
    id v14 = v13;
    [v14 switchToTab:2];
    id v15 = [v14 effectiveFullBrowser];

    if (([a1 isFolder] & 1) == 0)
    {
      id v16 = [v14 splitBrowserViewController];
      id v17 = [v16 fullDocumentManagerViewController];

      uint64_t v18 = (char *)[v17 effectiveBrowserViewController];
      if (!v18) {
        goto LABEL_15;
      }
      uint64_t v19 = (id *)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      id v20 = *v19;
      id v21 = *v19;

      if (!v20) {
        goto LABEL_15;
      }
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v22 = swift_dynamicCastClass();
      if (!v22)
      {

        goto LABEL_15;
      }
      id v23 = (uint64_t *)(v22 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
      swift_beginAccess();
      uint64_t v24 = *v23;

      if (v24 != 2) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    id v15 = v5;
    if (([a1 isFolder] & 1) == 0)
    {
LABEL_15:
      id v31 = [self defaultManager];
      id v30 = [a1 itemID];
      int v32 = (void *)swift_allocObject();
      void v32[2] = a1;
      v32[3] = v15;
      void v32[4] = v5;
      v32[5] = a3;
      v32[6] = a4;
      uint64_t v40 = sub_10017FBC0;
      unint64_t v41 = v32;
      aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      unint64_t v38 = sub_10016A350;
      id v39 = &unk_100693280;
      uint64_t v28 = _Block_copy(&aBlock);
      id v33 = v5;
      swift_retain();
      id v34 = a1;
      id v35 = v15;
      swift_release();
      [v31 fetchParentsForItemID:v30 recursively:0 completionHandler:v28];
      id v29 = v13;
      id v13 = v35;
      id v15 = v31;
      goto LABEL_16;
    }
  }
  if (a2) {
    goto LABEL_15;
  }
  if ([a1 isTrashed])
  {
    id v25 = [self trashedItemsLocation];
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v26 = (void *)DOCNode.sourceIdentifier.getter();
    id v25 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v26 node:a1];
  }
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a3;
  *(void *)(v27 + 24) = a4;
  uint64_t v40 = sub_10017FBD0;
  unint64_t v41 = (void *)v27;
  aBlock = _NSConcreteStackBlock;
  uint64_t v37 = 1107296256;
  unint64_t v38 = sub_1000666D8;
  id v39 = &unk_1006932D0;
  uint64_t v28 = _Block_copy(&aBlock);
  id v29 = v25;
  swift_retain();
  swift_release();
  [v15 revealLocation:v29 animated:1 completion:v28];
  id v30 = v29;
LABEL_16:

  _Block_release(v28);
}

void sub_10016D2C0(unint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7)
{
  unint64_t v41 = a5;
  uint64_t v42 = a7;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return;
  }
  uint64_t v37 = a6;
  uint64_t v38 = v17;
  uint64_t v39 = v13;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20) {
    goto LABEL_17;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v21 = *(id *)(a1 + 32);
  }
  id v40 = v21;
  swift_bridgeObjectRelease();
  if (a2)
  {
    id v22 = v40;
  }
  else
  {
    if ([a3 isTrashed])
    {
      id v23 = [self trashedItemsLocation];
    }
    else
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v24 = (void *)DOCNode.sourceIdentifier.getter();
      id v25 = objc_allocWithZone((Class)DOCConcreteLocation);
      id v23 = [v25 initWithSourceIdentifier:v24 node:v40];
    }
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v36 = static OS_dispatch_queue.main.getter();
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = a4;
    v26[3] = v23;
    uint64_t v28 = v41;
    uint64_t v27 = v42;
    v26[4] = v41;
    v26[5] = a3;
    v26[6] = v37;
    v26[7] = v27;
    aBlock[4] = sub_100181268;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_100694128;
    uint64_t v37 = _Block_copy(aBlock);
    id v29 = v23;
    id v30 = v28;
    id v31 = a3;
    swift_retain();
    id v32 = a4;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v33 = (void *)v36;
    id v34 = v37;
    OS_dispatch_queue.async(group:qos:flags:execute:)();

    _Block_release(v34);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v16);
  }
}

void sub_10016D764(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = a6;
  v16[4] = sub_10018127C;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1000666D8;
  v16[3] = &unk_100694178;
  uint64_t v13 = _Block_copy(v16);
  id v14 = a3;
  id v15 = a4;
  swift_retain();
  swift_release();
  [a1 revealLocation:a2 animated:0 completion:v13];
  _Block_release(v13);
}

uint64_t sub_10016D878(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v14 = (void *)static OS_dispatch_queue.main.getter();
  id v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_10018128C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006941C8;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a1;
  id v18 = a2;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

void sub_10016DB78(void *a1, void *a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = (char *)[a1 effectiveBrowserViewController];
  if (v7)
  {
    uint64_t v8 = v7;
    uint64_t v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v10 = *v9;
    if (v10)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        uint64_t v12 = (void *)v11;
        id v13 = v10;

        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_1005A04F0;
        *(void *)(v14 + 32) = a2;
        specialized Array._endMutation()();
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v15 = a2;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        aBlock[4] = a3;
        aBlock[5] = a4;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000A884;
        aBlock[3] = &unk_1006941F0;
        id v17 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v12 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v17];
        _Block_release(v17);

        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  a3(0);
}

void sub_10016DD4C(void *a1)
{
  id v3 = [v1 presentedViewController];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    *(void *)(v5 + 24) = a1;
    v12[4] = sub_100180DA0;
    v12[5] = v5;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    void v12[2] = sub_1000666D8;
    v12[3] = &unk_100693CC8;
    uint64_t v6 = _Block_copy(v12);
    id v7 = v1;
    id v8 = a1;
    swift_release();
    [v4 dismissViewControllerAnimated:1 completion:v6];
    _Block_release(v6);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v1;
    *(void *)(v9 + 24) = a1;
    id v10 = v1;
    id v11 = a1;
    sub_10016E114(1, sub_100180D5C, v9);
    swift_release();
  }
}

void sub_10016DECC(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 effectiveSearchController];
  if (v7)
  {
    id v12 = v7;
    if ([v7 isActive])
    {
      id v8 = [v12 searchBar];
      NSString v9 = String._bridgeToObjectiveC()();
      [v8 setText:v9];

      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_1001813FC;
      *(void *)(v10 + 24) = v4;
      aBlock[4] = sub_100180DAC;
      aBlock[5] = v10;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100693D40;
      id v11 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      [v12 dismissViewControllerAnimated:1 completion:v11];

      _Block_release(v11);
      swift_release();
    }
    else
    {
      DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(v6, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
      swift_release();
    }
  }
  else
  {
    DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(v6, 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
    swift_release();
  }
}

void sub_10016E114(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  id v8 = [v4 effectiveSearchController];
  if (v8)
  {
    id v13 = v8;
    if ([v8 isActive])
    {
      id v9 = [v13 searchBar];
      NSString v10 = String._bridgeToObjectiveC()();
      [v9 setText:v10];

      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = a2;
      *(void *)(v11 + 24) = a3;
      aBlock[4] = sub_100180DAC;
      aBlock[5] = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100693D90;
      id v12 = _Block_copy(aBlock);
      sub_1000C0640((uint64_t)a2);
      swift_release();
      [v13 dismissViewControllerAnimated:a1 & 1 completion:v12];

      _Block_release(v12);
    }
    else
    {
      if (a2) {
        a2();
      }
    }
  }
  else if (a2)
  {
    a2();
  }
}

void sub_10016E33C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v1 configuration];
  unsigned int v7 = [v6 isPickerUI];

  if (v7)
  {
    if ([v1 delegate])
    {
      v18[1] = &OBJC_PROTOCOL___UIDocumentBrowserViewControllerPrivateDelegate;
      id v8 = (void *)swift_dynamicCastObjCProtocolConditional();
      if (v8)
      {
        id v9 = v8;
        if ([v8 respondsToSelector:"documentManagerWasCancelled:"])
        {
          if ([v9 respondsToSelector:"documentManagerWasCancelled:"]) {
            [v9 documentManagerWasCancelled:v1];
          }
        }
      }
      swift_unknownObjectRelease();
    }
    id v10 = [v1 delegate];
    if (v10
      && (unsigned int v11 = [v10 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"],
          swift_unknownObjectRelease(),
          v11))
    {
      id v12 = [v1 delegate];
      if (v12)
      {
        id v13 = v12;
        if ([v12 respondsToSelector:"documentBrowser:didPickDocumentsAtURLs:"])
        {
          type metadata accessor for URL();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          [v13 documentBrowser:v1 didPickDocumentsAtURLs:isa];
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      static Logger.UI.getter();
      id v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        id v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)id v17 = 136315138;
        _OWORD v18[2] = sub_10009B0E4(0xD000000000000019, 0x80000001005D79E0, &v19);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s no delegate method implemented to handle cancel picker", v17, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

unint64_t sub_10016E864()
{
  uint64_t v1 = (char *)[v0 hierarchyController];
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v3 = *(void *)v2;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    unsigned int v7 = v6;

    swift_bridgeObjectRelease();
    id v8 = [v7 node];

    if (v8)
    {
      swift_getObjectType();
      char v9 = DOCNode.isEqualTo(node:)();
      swift_unknownObjectRelease();
      return v9 & 1;
    }
LABEL_12:
    char v9 = 0;
    return v9 & 1;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

unint64_t sub_10016EA24()
{
  uint64_t v1 = (char *)[v0 dataSource];
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v2 != 2) {
    return 0;
  }
  unint64_t v3 = (char *)[v0 hierarchyController];
  uint64_t v4 = &v3[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v5 = *(void *)v4;
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6)
  {
LABEL_11:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_4:
  unint64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v5 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v5 + 8 * result + 32);
LABEL_9:
    char v9 = v8;

    swift_bridgeObjectRelease();
    type metadata accessor for DOCConcreteSelectionLocation();
    BOOL v10 = swift_dynamicCastClass() != 0;

    return v10;
  }
  __break(1u);
  return result;
}

void sub_10016EBCC(void *a1)
{
  id v2 = [self defaultManager];
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = a1;
  void v7[4] = sub_100180B58;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  uint64_t v7[2] = sub_1001B6B50;
  v7[3] = &unk_100693B60;
  unint64_t v5 = _Block_copy(v7);
  id v6 = a1;
  swift_release();
  [v2 fetchURLForItem:v6 completionHandler:v5];
  _Block_release(v5);
}

void sub_10016ECFC(unint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  id v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  char v7 = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0 && (id v8 = sub_1001DB1A4(a1)) != 0)
  {
    char v9 = v8;
    type metadata accessor for DOCInlineRenameController();
    uint64_t v10 = swift_allocObject();
    swift_getObjectType();
    swift_unknownObjectRetain();
    unsigned int v11 = a2;
    uint64_t v12 = sub_1004274D8((uint64_t)v11, (uint64_t)v9, a1, v10);

    swift_unknownObjectRelease();
    id v13 = &v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    *(unsigned char *)(v12 + 40) = *(void *)v13 == 0;
    uint64_t v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
    *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController] = v12;
    swift_retain();
    swift_release();
    if (!*(void *)&v11[v14]) {
      v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] = 0;
    }
    uint64_t v15 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
    sub_1002974E0((uint64_t)v6);
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007069A0);
    if (*(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
    {
      os_log_type_t v16 = (void (**)())&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
      uint64_t v17 = *(void *)&v11[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing];
      *os_log_type_t v16 = sub_100162A14;
      v16[1] = (void (*)())v12;
      sub_1000A7258(v17);
    }
    else
    {
      swift_retain_n();
      sub_100422E2C();

      swift_release_n();
    }
  }
  else
  {
    id v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    swift_getObjectType();
    uint64_t v20 = DOCNode.nodeDescription.getter();
    uint64_t v22 = v21;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100073F48();
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10016F090(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  os_log_type_t v16 = (char *)&aBlock[-1] - v15;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v18 = (void *)result;
    sub_1000CBC00(a1, (uint64_t)v9, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
      uint64_t v19 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v21 = Error.localizedDescription.getter();
        a2 = v22;
      }
      else
      {
        uint64_t v21 = 0;
      }
      *(void *)(v20 + 56) = &type metadata for String;
      *(void *)(v20 + 64) = sub_100073F48();
      uint64_t v30 = 4271950;
      if (a2) {
        uint64_t v30 = v21;
      }
      unint64_t v31 = 0xE300000000000000;
      if (a2) {
        unint64_t v31 = a2;
      }
      *(void *)(v20 + 32) = v30;
      *(void *)(v20 + 40) = v31;
      os_log(_:dso:log:type:_:)();

      return swift_bridgeObjectRelease();
    }
    else
    {
      id v32 = a4;
      id v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v23(v16, v9, v10);
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
      unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      uint64_t v25 = swift_allocObject();
      uint64_t v26 = v32;
      *(void *)(v25 + 16) = v18;
      *(void *)(v25 + 24) = v26;
      v23((char *)(v25 + v24), v14, v10);
      aBlock[4] = sub_100180C34;
      aBlock[5] = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100693BB0;
      uint64_t v27 = _Block_copy(aBlock);
      id v28 = v18;
      id v29 = v26;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v27);

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
  }
  return result;
}

void sub_10016F43C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = (char *)[a1 effectiveBrowserViewController];
  if (!v9) {
    return;
  }
  uint64_t v10 = v9;
  uint64_t v11 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!v12
    || (v46 = a2, type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v13 = swift_dynamicCastClass()) == 0))
  {

    return;
  }
  uint64_t v14 = (char *)v13;
  id v44 = v12;

  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v45 = a3;
  v17(v8, a3, v15);
  uint64_t v18 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  if (!*(void *)&v14[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection]) {
    goto LABEL_34;
  }
  unint64_t v19 = sub_10007CC5C(v18);
  __chkstk_darwin(v19);
  *(&v43 - 2) = v46;
  *(&v43 - 1) = (uint64_t)v8;
  unint64_t v20 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_100162714, (uint64_t)(&v43 - 4), v19);
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
  if (v20)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    char v21 = Array<A>.contains(node:)();
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_10016ECFC(v20, v14);
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
  }
  unint64_t v22 = (char *)[a1 dataSource];
  id v23 = &v22[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v24 = *(void *)v23;
  swift_bridgeObjectRetain();

  unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v26 = v45;
    if (v25) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v26 = v45;
    if (v25)
    {
LABEL_12:
      if (v25 >= 1)
      {
        for (uint64_t i = 0; i != v25; ++i)
        {
          if ((v24 & 0xC000000000000001) != 0) {
            id v28 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v28 = (char *)*(id *)(v24 + 8 * i + 32);
          }
          id v29 = v28;
          uint64_t v30 = (void **)&v28[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          unint64_t v31 = *v30;
          if (v31 && swift_dynamicCastClass())
          {
            id v32 = v31;

            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        id v33 = (void *)v47;
        uint64_t v26 = v45;
        goto LABEL_27;
      }
      __break(1u);
LABEL_34:
      __break(1u);
      return;
    }
  }
  swift_bridgeObjectRelease();
  id v33 = _swiftEmptyArrayStorage;
LABEL_27:
  uint64_t v34 = swift_bridgeObjectRelease();
  unint64_t v47 = 0;
  __chkstk_darwin(v34);
  uint64_t v35 = v46;
  *(&v43 - 4) = (uint64_t)&v47;
  *(&v43 - 3) = v35;
  *(&v43 - 2) = v26;
  id v36 = sub_1001B6818((uint64_t (*)(id *))sub_100180C98, (uint64_t)(&v43 - 6), (unint64_t)v33);
  swift_bridgeObjectRelease();
  if (v36 && v47)
  {
    id v36 = v36;
    unint64_t v37 = swift_unknownObjectRetain();
    sub_10016ECFC(v37, v36);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v38 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_1005A0030;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v40 = DOCNode.nodeDescription.getter();
    uint64_t v42 = v41;
    *(void *)(v39 + 56) = &type metadata for String;
    *(void *)(v39 + 64) = sub_100073F48();
    *(void *)(v39 + 32) = v40;
    *(void *)(v39 + 40) = v42;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }

  swift_unknownObjectRelease();
}

uint64_t sub_10016F9E8(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v10, a4, v12);
  uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  if (*(void *)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection))
  {
    unint64_t v15 = sub_10007CC5C(result);
    __chkstk_darwin(v15);
    *(&v18 - 2) = a3;
    *(&v18 - 1) = (uint64_t)v10;
    uint64_t v16 = sub_1001B66DC((uint64_t (*)(uint64_t *))sub_1001813B4, (uint64_t)(&v18 - 4), v15);
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    *a2 = v16;
    swift_unknownObjectRelease();
    if (*a2)
    {
      swift_beginAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      char v17 = Array<A>.contains(node:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v17 = 0;
    }
    return v17 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10016FC78(void *a1, unint64_t a2)
{
  uint64_t v5 = (char *)[v2 effectiveBrowserViewController];
  if (v5)
  {
    uint64_t v6 = v5;
    uint64_t v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v8 = *v7;
    if (v8 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v9 = v8;

      if (a2)
      {
        swift_bridgeObjectRetain();
        if (a2 >> 62)
        {
          sub_1000CBE70((uint64_t *)&unk_100706730);
          uint64_t v12 = _bridgeCocoaArray<A>(_:)();
          swift_bridgeObjectRelease();
          a2 = v12;
        }
        else
        {
          dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        }
      }
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = v10;
      v11[3] = a1;
      v11[4] = a2;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      swift_retain();
      a1;
      swift_bridgeObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_10016FED4(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v43 = v1;
  uint64_t v5 = (char *)[v1 dataSource];
  uint64_t v6 = (unint64_t *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v7 = *v6;
  swift_bridgeObjectRetain();

  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  if (v7 >> 62) {
    goto LABEL_50;
  }
  unint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (!v8)
  {
    swift_bridgeObjectRelease();
    unint64_t v16 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7)
      {
LABEL_29:
        swift_bridgeObjectRelease_n();
        goto LABEL_34;
      }
    }
    else
    {
      unint64_t v7 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7) {
        goto LABEL_29;
      }
    }
    uint64_t v17 = 4;
    while (1)
    {
      uint64_t v18 = (v16 & 0xC000000000000001) != 0
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v16 + 8 * v17);
      unint64_t v8 = (unint64_t)v18;
      uint64_t v19 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      unint64_t v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController;
      if (*(void *)&v18[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]) {
        goto LABEL_32;
      }

      ++v17;
      if (v19 == v7) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_50:
    swift_bridgeObjectRetain();
    unint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  }
  unint64_t v9 = v7 & 0xC000000000000001;
  while (1)
  {
    if (__OFSUB__(v8--, 1))
    {
      __break(1u);
LABEL_19:
      swift_bridgeObjectRelease();
      unint64_t v16 = v46;
      goto LABEL_20;
    }
    if (!v9) {
      break;
    }
    uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    uint64_t v12 = v11;
    uint64_t v13 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v14 = *v13;
    if (*v13 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v15 = v14;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      if (!v8) {
        goto LABEL_19;
      }
    }
    else
    {

      if (!v8) {
        goto LABEL_19;
      }
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (v8 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_31;
    }
    uint64_t v11 = (char *)*(id *)(v7 + 32 + 8 * v8);
    goto LABEL_12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  swift_bridgeObjectRelease_n();
  uint64_t v20 = *(void *)(v8 + v9);
  swift_retain();

  if (v20)
  {
    sub_100425850();
    swift_release();
  }
LABEL_34:
  char v21 = (char *)[v43 dataSource];
  unint64_t v22 = &v21[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v23 = *(void *)v22;
  swift_bridgeObjectRetain();

  unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v24 = result;
    if (!result) {
      goto LABEL_55;
    }
LABEL_36:
    if (v24 >= 1)
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        if ((v23 & 0xC000000000000001) != 0) {
          uint64_t v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v27 = (char *)*(id *)(v23 + 8 * i + 32);
        }
        id v28 = v27;
        id v29 = (void **)&v27[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v30 = *v29;
        if (*v29 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
        {
          id v31 = v30;

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      id v32 = (void *)v45;
      goto LABEL_56;
    }
    __break(1u);
LABEL_67:
    __break(1u);
    return result;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v24) {
    goto LABEL_36;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  id v32 = _swiftEmptyArrayStorage;
LABEL_56:
  swift_bridgeObjectRelease();
  id v33 = sub_10005D9D8();
  unint64_t v45 = (unint64_t)v32;
  sub_1000601A8((unint64_t)v33, (unint64_t *)type metadata accessor for DOCItemCollectionViewController, &qword_1007086C8, &qword_1007086C0, (uint64_t *)sub_10010A510);
  unint64_t v34 = v45;
  if (v45 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v35 = result;
    if (!result) {
      return swift_bridgeObjectRelease_n();
    }
LABEL_58:
    if (v35 >= 1)
    {
      uint64_t v36 = 0;
      do
      {
        if ((v34 & 0xC000000000000001) != 0) {
          id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v37 = *(id *)(v34 + 8 * v36 + 32);
        }
        uint64_t v38 = v37;
        ++v36;
        uint64_t v39 = type metadata accessor for DOCItemSortDescriptor();
        uint64_t v40 = *(void *)(v39 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v4, v44, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v4, 0, 1, v39);
        uint64_t v41 = (uint64_t)v38 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
        swift_beginAccess();
        sub_10017FCC0((uint64_t)v4, v41);
        swift_endAccess();
        sub_10007C014();
        sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007086D0);
      }
      while (v35 != v36);
      return swift_bridgeObjectRelease_n();
    }
    goto LABEL_67;
  }
  uint64_t v35 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v35) {
    goto LABEL_58;
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100170564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v55 = a1;
  uint64_t v5 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DOCItemSortMode();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v45 - v18;
  __chkstk_darwin(v17);
  uint64_t v50 = (char *)&v45 - v20;
  char v21 = (char *)[v3 effectiveBrowserViewController];
  if (v21)
  {
    unint64_t v22 = v21;
    id v48 = v16;
    uint64_t v49 = v11;
    uint64_t v54 = v12;
    unint64_t v23 = (void **)&v21[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v24 = *v23;
    if (v24 && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v25 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v26 = v25;
      id v27 = v24;

      id v28 = (char *)objc_retain(*(id *)(v26
                                      + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

      uint64_t v29 = *(void *)&v28[OBJC_IVAR____TtC5Files21DOCFileProviderSource_sortingModes];
      swift_bridgeObjectRetain();

      uint64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v46 = v13;
        uint64_t v47 = a2;
        uint64_t v31 = v13 + 16;
        uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
        uint64_t v53 = v13 + 16;
        uint64_t v32 = v29 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        id v33 = (void (**)(char *, uint64_t))(v6 + 8);
        unint64_t v34 = (void (**)(char *, uint64_t))(v31 - 8);
        uint64_t v51 = *(void *)(v31 + 56);
        uint64_t v45 = v29;
        swift_bridgeObjectRetain();
        uint64_t v35 = v54;
        while (1)
        {
          v52(v19, v32, v35);
          DOCItemSortMode.displayableMode.getter();
          sub_100071760(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v58 == v56 && v59 == v57) {
            break;
          }
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v33)(v8, v5);
          if (v37) {
            goto LABEL_17;
          }
          uint64_t v35 = v54;
          (*v34)(v19, v54);
          v32 += v51;
          if (!--v30)
          {
            swift_bridgeObjectRelease();
            uint64_t v38 = 1;
            uint64_t v13 = v46;
            a2 = v47;
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease_n();
        (*v33)(v8, v5);
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v13 = v46;
        uint64_t v39 = (uint64_t)v49;
        uint64_t v35 = v54;
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v19, v54);
        uint64_t v38 = 0;
        a2 = v47;
      }
      else
      {
        uint64_t v38 = 1;
        uint64_t v35 = v54;
LABEL_15:
        uint64_t v39 = (uint64_t)v49;
      }
      uint64_t v40 = v48;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v39, v38, 1, v35);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v39, 1, v35) != 1)
      {
        id v43 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v50, v39, v35);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v40, v43, v35);
        DOCItemSortDescriptor.init(type:isReversed:)();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v43, v35);
        uint64_t v44 = type metadata accessor for DOCItemSortDescriptor();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a2, 0, 1, v44);
      }
      sub_1000CBBA4(v39, (uint64_t *)&unk_10070ADC0);
    }
    else
    {
    }
  }
  uint64_t v41 = type metadata accessor for DOCItemSortDescriptor();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a2, 1, 1, v41);
}

uint64_t sub_100170B0C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v4 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCItemSortMode();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v44 - v16;
  uint64_t v18 = (char *)[v2 effectiveBrowserViewController];
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v47 = v17;
    uint64_t v48 = v12;
    uint64_t v52 = v11;
    uint64_t v20 = (void **)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    char v21 = *v20;
    if (*v20
      && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v22 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v23 = v22;
      id v24 = v21;

      id v25 = *(id *)(v23 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      unint64_t v26 = sub_10007FCA0();

      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v45 = v10;
        uint64_t v46 = a2;
        uint64_t v50 = *(void (**)(char *, unint64_t, uint64_t))(v48 + 16);
        uint64_t v51 = v48 + 16;
        unint64_t v28 = v26;
        unint64_t v29 = v26 + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80));
        uint64_t v30 = (void (**)(char *, uint64_t))(v5 + 8);
        uint64_t v31 = (void (**)(char *, uint64_t))(v48 + 8);
        uint64_t v49 = *(void *)(v48 + 72);
        v44[1] = v28;
        swift_bridgeObjectRetain();
        uint64_t v32 = v52;
        while (1)
        {
          v50(v15, v29, v32);
          DOCItemSortMode.displayableMode.getter();
          sub_100071760(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
          dispatch thunk of RawRepresentable.rawValue.getter();
          dispatch thunk of RawRepresentable.rawValue.getter();
          if (v56 == v54 && v57 == v55) {
            break;
          }
          char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*v30)(v7, v4);
          if (v34) {
            goto LABEL_17;
          }
          uint64_t v32 = v52;
          (*v31)(v15, v52);
          v29 += v49;
          if (!--v27)
          {
            swift_bridgeObjectRelease();
            uint64_t v35 = 1;
            uint64_t v10 = v45;
            a2 = v46;
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease_n();
        (*v30)(v7, v4);
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v36 = v48;
        uint64_t v10 = v45;
        uint64_t v32 = v52;
        (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v15, v52);
        uint64_t v35 = 0;
        a2 = v46;
      }
      else
      {
        uint64_t v35 = 1;
        uint64_t v32 = v52;
LABEL_15:
        uint64_t v36 = v48;
      }
      char v37 = v47;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v10, v35, 1, v32);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v10, 1, v32) != 1)
      {
        uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
        v40(v37, v10, v32);
        v40(a2, v37, v32);
        uint64_t v41 = enum case for DOCItemGroupingBehavior.grouped(_:);
        uint64_t v42 = type metadata accessor for DOCItemGroupingBehavior();
        uint64_t v43 = *(void *)(v42 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 104))(a2, v41, v42);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(a2, 0, 1, v42);
      }
      sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_10070ADC0);
    }
    else
    {
    }
  }
  uint64_t v38 = type metadata accessor for DOCItemGroupingBehavior();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a2, 1, 1, v38);
}

void sub_100171098(char *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v58 = a1;
  uint64_t v59 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (char *)[v2 hierarchyController];
  uint64_t v9 = &v8[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = *(void *)v9 >> 62;
  uint64_t v57 = v6;
  if (!v11)
  {
    uint64_t v12 = *(char **)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v13 = (SEL *)&unk_1006E3000;
    if (v12) {
      goto LABEL_3;
    }
LABEL_14:

    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = (char *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v13 = (SEL *)&unk_1006E3000;
  if (!v12) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v14 = v12 - 1;
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
  }
  else if ((v10 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v14 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v15 = *(id *)(v10 + 8 * (void)v14 + 32);
      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_35;
  }
  id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  uint64_t v16 = v15;

  swift_bridgeObjectRelease();
  id v17 = [v16 fileProviderItem];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = v4;
    uint64_t v20 = (void *)FPActionImportHere;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = v18;
    aBlock[0] = inited;
    specialized Array._endMutation()();
    unint64_t v22 = aBlock[0];
    id v23 = v18;
    LOBYTE(v20) = sub_1000301E0(v20, v22);
    swift_bridgeObjectRelease();

    if (v20)
    {
      id v24 = [v3 documentManager];
      uint64_t v25 = swift_allocObject();
      unint64_t v26 = v59;
      *(void *)(v25 + 16) = v59;
      *(void *)(v25 + 24) = v3;
      id v27 = v26;
      id v28 = v3;
      sub_1004CB1F4(v58, 2, (uint64_t)sub_1001805E8, v25);

      swift_release();
      return;
    }

    uint64_t v4 = v19;
    uint64_t v13 = (SEL *)&unk_1006E3000;
  }
  else
  {
  }
LABEL_15:
  uint64_t v12 = (char *)[v3 hierarchyController];
  unint64_t v29 = &v12[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  uint64_t v30 = *(void *)v29;
  if (*(void *)v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    if (v31)
    {
LABEL_17:
      unint64_t v32 = v31 - 1;
      if (!__OFSUB__(v31, 1))
      {
        if ((v30 & 0xC000000000000001) == 0)
        {
          if ((v32 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v32 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v33 = *(id *)(v30 + 8 * v32 + 32);
            goto LABEL_22;
          }
          __break(1u);
          return;
        }
LABEL_36:
        id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
        char v34 = v33;

        swift_bridgeObjectRelease();
        id v35 = [v34 v13[331]];
        if (v35)
        {
          uint64_t v36 = v35;
          if (([v35 isFolder] & 1) == 0)
          {
            id v56 = [self defaultManager];
            uint64_t v37 = swift_allocObject();
            uint64_t v38 = v4;
            uint64_t v55 = v4;
            uint64_t v39 = v37;
            swift_unknownObjectWeakInit();
            (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v58, v38);
            unint64_t v40 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
            unint64_t v41 = (v57 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v42 = swift_allocObject();
            *(void *)(v42 + 16) = v39;
            (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v42 + v40, v7, v55);
            uint64_t v43 = v59;
            *(void *)(v42 + v41) = v59;
            *(void *)(v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8)) = v3;
            aBlock[4] = sub_1001804EC;
            aBlock[5] = v42;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1001B6B50;
            aBlock[3] = &unk_100693868;
            uint64_t v44 = _Block_copy(aBlock);
            id v45 = v43;
            id v46 = v3;
            swift_release();
            id v47 = v56;
            [v56 fetchURLForItem:v36 completionHandler:v44];
            _Block_release(v44);

            return;
          }
        }
        else
        {
        }
        goto LABEL_29;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v31) {
      goto LABEL_17;
    }
  }

  swift_bridgeObjectRelease();
LABEL_29:
  sub_1000CBE70((uint64_t *)&unk_1007087F0);
  unint64_t v48 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1005A0030;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v49 + v48, v58, v4);
  id v50 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v52 = [v50 initForExportingURLs:isa asCopy:1];

  [v52 setDelegate:v3];
  uint64_t v53 = v59;
  [v3 setPickerPresentingController:v59];
  [v53 presentViewController:v52 animated:1 completion:0];
}

void sub_1001716FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    URL._bridgeToObjectiveC()(v1);
    uint64_t v4 = v3;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v2;
    aBlock[4] = sub_10018067C;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6B50;
    aBlock[3] = &unk_100693930;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = v2;
    swift_release();
    [v7 revealDocumentAtURL:v4 importIfNeeded:0 updateLastUsedDate:0 completion:v6];
    _Block_release(v6);
  }
}

uint64_t sub_10017181C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v7, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v13 = [self defaultManager];
  URL._bridgeToObjectiveC()(v14);
  uint64_t v16 = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  aBlock[4] = sub_100180684;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  aBlock[3] = &unk_100693980;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a3;
  swift_release();
  [v13 fetchItemForURL:v16 completionHandler:v18];
  _Block_release(v18);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100171A88(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t result = __chkstk_darwin(v9);
  id v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v20 = v11;
    uint64_t v21 = result;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v14 = a1;
    id v15 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = v14;
    aBlock[4] = sub_10018068C;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006939D0;
    uint64_t v17 = _Block_copy(aBlock);
    id v18 = v14;
    id v19 = a3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v13, v21);
  }
  return result;
}

uint64_t sub_100171D88(uint64_t a1, void (*a2)(void, void, void), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v53 = a6;
  uint64_t v54 = a1;
  uint64_t v58 = a4;
  id v59 = a5;
  id v60 = a2;
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v57 = *(void (***)(char *, void))(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v56 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  uint64_t v18 = __chkstk_darwin(v15);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v51 - v19;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v22 = (void *)result;
    if (v60)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      id v60 = (void (*)(void, void, void))static OS_dispatch_queue.main.getter();
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, v58, v15);
      unint64_t v23 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      unint64_t v24 = (v17 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = v9;
      uint64_t v25 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v25 + v23, v20, v15);
      *(void *)(v25 + v24) = v22;
      id v26 = v59;
      *(void *)(v25 + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8)) = v59;
      aBlock[4] = sub_100180960;
      aBlock[5] = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_100693A70;
      id v27 = _Block_copy(aBlock);
      id v28 = v22;
      id v29 = v26;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v30 = v58;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v31 = v60;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v27);

      v57[1](v11, v30);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v14, v56);
    }
    else
    {
      sub_1000CBC00(v54, (uint64_t)v8, &qword_1007076B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
      {

        return sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
      }
      else
      {
        id v60 = *(void (**)(void, void, void))(v16 + 32);
        id v52 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        v60(v52, v8, v15);
        uint64_t v57 = (void (**)(char *, void))[v22 documentManager];
        uint64_t v32 = swift_allocObject();
        uint64_t v51 = v15;
        uint64_t v33 = v32;
        id v34 = v59;
        id v35 = v53;
        *(void *)(v32 + 16) = v59;
        *(void *)(v32 + 24) = v35;
        uint64_t v36 = self;
        id v37 = v34;
        id v38 = v35;
        id v39 = [v36 defaultManager];
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v20, v58, v15);
        uint64_t v40 = *(unsigned __int8 *)(v16 + 80);
        id v59 = v22;
        uint64_t v41 = (v40 + 48) & ~v40;
        unint64_t v42 = (v17 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v43 = (void *)swift_allocObject();
        v43[2] = sub_10018069C;
        v43[3] = v33;
        uint64_t v44 = v57;
        v43[4] = v39;
        v43[5] = v44;
        id v45 = v20;
        uint64_t v46 = v51;
        v60((char *)v43 + v41, v45, v51);
        id v47 = (void *)((char *)v43 + v42);
        void *v47 = 0;
        v47[1] = 0;
        *(void *)((char *)v43 + ((v42 + 23) & 0xFFFFFFFFFFFFFFF8)) = 2;
        swift_retain();
        id v48 = v39;
        id v49 = v44;
        id v50 = v52;
        FPItemManager.doc_fetchItem(for:completionHandler:)();

        swift_release();
        swift_release();

        return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v50, v46);
      }
    }
  }
  return result;
}

void sub_100172420(uint64_t a1, void *a2, void *a3)
{
  sub_1000CBE70((uint64_t *)&unk_1007087F0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  id v10 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 initForExportingURLs:isa];

  [v12 setDelegate:a2];
  [a2 setPickerPresentingController:a3];
  [a3 presentViewController:v12 animated:1 completion:0];
}

id sub_1001725AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v29 = a4;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v26 - v18;
  sub_1000CBC00(a1, (uint64_t)v12, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);
    return [a3 dismissViewControllerAnimated:1 completion:0];
  }
  else
  {
    uint64_t v27 = a7;
    id v28 = a3;
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v21(v19, v12, v13);
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    unint64_t v23 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v22;
    v21((char *)(v24 + v23), v17, v13);
    aBlock[4] = v31;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = v27;
    uint64_t v25 = _Block_copy(aBlock);
    swift_release();
    [v28 dismissViewControllerAnimated:1 completion:v25];
    _Block_release(v25);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.documentPickerWasCancelled(_:)(UIDocumentPickerViewController a1)
{
  id v2 = [v1 pickerPresentingController];
  if (v2)
  {
    uint64_t v3 = v2;
    self;
    uint64_t v4 = (void *)swift_dynamicCastObjCClass();
    if (v4) {
      [v4 removeSaveActionBlockerForFiles];
    }
  }

  [v1 setPickerPresentingController:0];
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.documentPicker(_:didPickDocumentsAt:)(UIDocumentPickerViewController _, Swift::OpaquePointer didPickDocumentsAt)
{
  id v3 = [v2 pickerPresentingController];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 dismissViewControllerAnimated:1 completion:0];
  }

  [v2 setPickerPresentingController:0];
}

void *sub_100172BC0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  sub_1000CBC00(a3, (uint64_t)v33, (uint64_t *)&unk_100705D60);
  if (!v34)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);
    goto LABEL_8;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_9;
  }
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v31)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1000CBC00(a3, (uint64_t)v33, (uint64_t *)&unk_100705D60);
    goto LABEL_10;
  }
  if (v30 == v7 && v31 == v8)
  {
    swift_bridgeObjectRelease_n();
    sub_1000CBC00(a3, (uint64_t)v33, (uint64_t *)&unk_100705D60);
LABEL_20:
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);
    goto LABEL_21;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBC00(a3, (uint64_t)v33, (uint64_t *)&unk_100705D60);
  if (v13) {
    goto LABEL_20;
  }
LABEL_10:
  sub_1000CBC00((uint64_t)v33, (uint64_t)&v30, (uint64_t *)&unk_100705D60);
  if (v32)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    if (swift_dynamicCast())
    {
      if (a1)
      {
        id v9 = a1;
        id v10 = v29;
        char v11 = static NSObject.== infix(_:_:)();
        sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);

        goto LABEL_22;
      }
      sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);

      goto LABEL_18;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v30, (uint64_t *)&unk_100705D60);
  }
  id v12 = a1;
  sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);
  if (a1)
  {

LABEL_18:
    char v11 = 0;
    goto LABEL_22;
  }
LABEL_21:
  char v11 = 1;
LABEL_22:
  sub_1000CBC00(a3, (uint64_t)&v30, (uint64_t *)&unk_100705D60);
  if (v32)
  {
    sub_10009E6C4(0, &qword_100708860);
    if (swift_dynamicCast())
    {

      goto LABEL_27;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v30, (uint64_t *)&unk_100705D60);
  }
  if ((v11 & 1) == 0)
  {
LABEL_45:
    if (a1) {
      id v27 = a1;
    }
    return a1;
  }
LABEL_27:
  char v14 = static Selector.== infix(_:_:)();
  uint64_t v15 = (char *)[v4 effectiveBrowserViewController];
  uint64_t v16 = v15;
  if (v14)
  {
    if (v15)
    {
      uint64_t v17 = (void **)&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v18 = *v17;
      if (*v17)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v19 = swift_dynamicCastClass();
        if (v19)
        {
          uint64_t v20 = v19;
          id v21 = v18;

          unint64_t v22 = (unint64_t)sub_10003B6F8(0);
          if (v22 >> 62) {
            uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
          }
          else {
            uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          swift_bridgeObjectRelease();
          if (v23 >= 1) {
            return (void *)v20;
          }
          uint64_t v16 = v21;
        }
      }
    }
    goto LABEL_45;
  }
  if (!v15) {
    return 0;
  }
  uint64_t v24 = (void **)&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  uint64_t v25 = *v24;
  if (*v24)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    a1 = (void *)swift_dynamicCastClass();
    if (a1) {
      id v26 = v25;
    }
  }
  else
  {

    return 0;
  }
  return a1;
}

uint64_t sub_100172FDC(void *a1)
{
  id v2 = v1;
  uint64_t v4 = (char *)[v2 effectiveBrowserViewController];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (void **)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v7 = *v6;
    if (*v6 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v8 = v7;

      id v9 = a1;
      char v10 = static NSObject.== infix(_:_:)();

      uint64_t v5 = v8;
    }
    else
    {
      char v10 = 0;
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1001730C8(uint64_t *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 internalNavigationController];
  id v9 = [v8 topViewController];

  if (!v9) {
    goto LABEL_17;
  }
  type metadata accessor for DOCColumnViewController(0);
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {

LABEL_17:
    static Logger.UI.getter();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      v26[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      v25[2] = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005D7A30, v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s No column view controller available", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_20;
  }
  char v11 = (unint64_t *)(v10 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v12 = *v11;
  if (v12 >> 62) {
    goto LABEL_25;
  }
  unint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v13; unint64_t v13 = _CocoaArrayWrapper.endIndex.getter())
  {
    v25[1] = a1;
    a1 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (!__OFSUB__(v13--, 1))
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v13 & 0x8000000000000000) != 0) {
          goto LABEL_23;
        }
        if (v13 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_24;
        }
        uint64_t v15 = (char *)*(id *)(v12 + 32 + 8 * v13);
      }
      uint64_t v16 = v15;
      uint64_t v17 = (void **)&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v18 = *v17;
      if (*v17)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass())
        {
          id v19 = v18;
          swift_bridgeObjectRelease();
          sub_10009E6C4(0, (unint64_t *)&qword_100706710);
          char v20 = static NSObject.== infix(_:_:)();

          return v20 & 1;
        }
      }

      if (!v13) {
        goto LABEL_26;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
LABEL_26:

  swift_bridgeObjectRelease();
LABEL_20:
  char v20 = 0;
  return v20 & 1;
}

Swift::Bool __swiftcall DOCFullDocumentManagerViewController.establishFirstResponderIfNeeded()()
{
  unsigned int v1 = [v0 needsFirstResponder];
  if (v1)
  {
    unsigned int v1 = [v0 establishFirstResponder];
    if (v1)
    {
      [v0 setNeedsFirstResponder:0];
      LOBYTE(v1) = 1;
    }
  }
  return v1;
}

id sub_1001734D4(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for DOCUIPBrowserState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)[v2 displayModeHandler];
  char v11 = &v10[OBJC_IVAR____TtC5Files27DOCDisplayModeChangeHandler_userSelectedDisplayMode];
  *(void *)char v11 = a1;
  v11[8] = 0;

  sub_1001736BC(a1, a2);
  sub_100173B14(a1, a2);
  id result = [v2 enclosedInUIPDocumentLanding];
  if (result && a1 == 2)
  {
    DOCUIPBrowserState.init()();
    DOCUIPBrowserState.documentLandingMode.setter();
    unint64_t v13 = self;
    id v14 = [v3 configuration];
    id v15 = [v14 sceneIdentifier];

    id v16 = [v13 globalTabbedBrowserControllerForIdentifier:v15];
    if (v16)
    {
      uint64_t v17 = (void *)DOCUIPBrowserState._bridgeToObjectiveC()();
      [v16 performBrowserStateChange:v17];
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

void sub_1001736BC(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [self sharedStore];
  id v11 = [v3 configuration];
  id v12 = [v10 interfaceStateForConfiguration:v11];

  if (v12)
  {
    uint64_t v41 = v7;
    id v13 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
    static Logger.StateStore.getter();
    id v14 = v13;
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.debug.getter();
    BOOL v17 = os_log_type_enabled(v15, v16);
    id v42 = v14;
    if (v17)
    {
      id v37 = v3;
      uint64_t v18 = swift_slowAlloc();
      id v38 = a2;
      id v19 = (uint8_t *)v18;
      v45[0] = swift_slowAlloc();
      uint64_t v39 = a1;
      *(_DWORD *)id v19 = 136315138;
      v35[1] = v19 + 4;
      id v20 = v14;
      uint64_t v36 = v6;
      id v21 = v20;
      id v22 = [v20 description];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v40 = v12;
      unint64_t v25 = v24;

      id v3 = v37;
      *(void *)&v44[0] = sub_10009B0E4(v23, v25, v45);
      a1 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v12 = v40;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "updateUserDefaults for userSelecteDisplayMode: %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v38;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v36);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v41 + 8))(v9, v6);
    }
    id v26 = [v3 configuration];
    sub_10017F2F0(a2);

    unint64_t v27 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;
    uint64_t v46 = &type metadata for Int;
    v45[0] = a1;
    sub_1000A54B0(v45, v44);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v27;
    sub_1003E0814(v44, v28, v30, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v32 = [v12 displayModes];
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 setValue:isa forKey:v34];
  }
}

void sub_100173B14(uint64_t a1, void *a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v44 - v14;
  id v49 = v3;
  id v16 = [v3 view];
  if (!v16)
  {
    __break(1u);
    return;
  }
  BOOL v17 = v16;
  id v18 = [v16 window];

  uint64_t v47 = v6;
  uint64_t v48 = a1;
  uint64_t v46 = v7;
  if (v18 && (id v19 = [v18 windowScene], v18, v19))
  {
    id v20 = [v19 activationState];

    BOOL v21 = v20 != (id)2;
  }
  else
  {
    BOOL v21 = 1;
  }
  BOOL v45 = v21;
  id v22 = (char *)[v49 hierarchyController];
  uint64_t v23 = (uint64_t)&v22[OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation];
  swift_beginAccess();
  sub_1000CBC00(v23, (uint64_t)v13, (uint64_t *)&unk_10070B640);
  uint64_t v24 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v13, 1, v24) == 1)
  {
    unint64_t v27 = a2;
    uint64_t v28 = v9;
    uint64_t v29 = &v22[OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation];
    swift_beginAccess();
    uint64_t v30 = (uint64_t)v29;
    id v9 = v28;
    a2 = v27;
    sub_1000CBC00(v30, (uint64_t)v15, (uint64_t *)&unk_10070B640);
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_10070B640);
  }
  else
  {
    sub_10017FEEC((uint64_t)v13, (uint64_t)v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v15, 0, 1, v24);
  }
  if (v26(v15, 1, v24) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_10070B640);
  }
  else
  {
    char v31 = v15[*(int *)(v24 + 24)];
    sub_10008BB90((uint64_t)v15, type metadata accessor for DOCHierarchyController.FetchingOperationToken);

    if (v31) {
      return;
    }
  }
  static Logger.StateStore.getter();
  id v32 = a2;
  uint64_t v33 = (id *)a2;
  NSString v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    uint64_t v44 = v9;
    uint64_t v51 = v37;
    *(_DWORD *)uint64_t v36 = 136315650;
    uint64_t v50 = sub_10009B0E4(0xD000000000000021, 0x80000001005D7620, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2080;
    uint64_t v38 = v48;
    uint64_t v50 = v48;
    uint64_t v39 = String.init<A>(describing:)();
    uint64_t v50 = sub_10009B0E4(v39, v40, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 22) = 2080;
    uint64_t v50 = (uint64_t)v33;
    id v41 = v32;
    sub_1000CBE70((uint64_t *)&unk_100711B40);
    uint64_t v42 = String.init<A>(describing:)();
    uint64_t v50 = sub_10009B0E4(v42, v43, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s to: %s for source: %s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v47);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v46 + 8))(v9, v47);
    uint64_t v38 = v48;
  }
  DOCFullDocumentManagerViewController.updateDisplayMode(to:saveAsUserSelection:for:)(v38, v45, v33);
}

uint64_t sub_10017409C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  __chkstk_darwin(v11);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, a1, v4);
  id v33 = a2;
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  NSString v34 = v15;
  int v32 = v16;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v18 = v17;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v39 = v30;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v38 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005D75E0, &v39);
    uint64_t v29 = (uint64_t)a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    v14(v7, (uint64_t)v10, v4);
    uint64_t v19 = String.init<A>(describing:)();
    uint64_t v38 = sub_10009B0E4(v19, v20, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    *(_WORD *)(v18 + 22) = 2080;
    uint64_t v38 = v29;
    id v21 = v33;
    sub_1000CBE70((uint64_t *)&unk_100711B40);
    uint64_t v22 = String.init<A>(describing:)();
    uint64_t v38 = sub_10009B0E4(v22, v23, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    uint64_t v24 = v34;
    _os_log_impl((void *)&_mh_execute_header, v34, (os_log_type_t)v32, "%s to: %s for identifier: %s", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v31;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

    id v25 = v33;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v36);
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  id v26 = [v37 configuration];
  static DOCUserInterfaceStateStore.saveDefaultGroupingBehavior(_:for:configuration:)();

  return sub_10005CF00(a1);
}

void sub_1001744E0(char a1)
{
  id v3 = [self viewOptionsSizeSetting];
  unsigned int v4 = [v3 isEnabled];

  if (v4)
  {
    uint64_t v5 = a1 & 1;
    id v6 = [v1 configuration];
    char v7 = sub_100089B98((uint64_t)v6);

    if (v5 != (v7 & 1))
    {
      id v8 = [v1 configuration];
      sub_100246DE8(v5, (uint64_t)v8);

      sub_1000899F4();
    }
  }
}

uint64_t sub_1001745D0()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009D098(v0, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  return v7[1];
}

void sub_100174740(void *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009D098(v2, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  char v7 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  *a1 = v8[1];
}

void sub_1001748C0(void **a1)
{
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  uint64_t v7 = qword_100704E88;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_10009D098(v2, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  uint64_t v10 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  v12[1] = v6;
  id v11 = v8;
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
}

id sub_100174AAC()
{
  return sub_10017BAC4(0, _s13FocusBackstopCMa);
}

uint64_t sub_100174AC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_10009D098(v2, (uint64_t)qword_100708498);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  uint64_t v7 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  v10[-2] = v1;
  dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

  swift_release();
  return v10[1];
}

uint64_t sub_100174C78()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v0 traitCollection];
  unsigned int v7 = [v6 supportHistoryNavigation];

  uint64_t result = 0;
  if (v7)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    if (qword_100704E88 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_10009D098(v2, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
    uint64_t v10 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v12[-2] = v1;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    return v12[1];
  }
  return result;
}

uint64_t sub_100174E60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100174C78();
  *a1 = result;
  return result;
}

uint64_t sub_100174E8C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (char *)[a1 dataSource];
  id v5 = *(id *)&v4[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  id v6 = [a1 hierarchyController];
  type metadata accessor for DOCBrowserHistoryController();
  swift_allocObject();
  sub_1002CD684(v5, v6);
  uint64_t v8 = v7;

  *(void *)(v8 + 24) = &off_100693370;
  uint64_t result = swift_unknownObjectWeakAssign();
  *a2 = v8;
  return result;
}

uint64_t DOCFullDocumentManagerViewController.canPerformHistoryShift(direction:amount:)(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [v3 traitCollection:v8];
  unsigned int v12 = [v11 supportHistoryNavigation];

  if (v12)
  {
    char v13 = a1 & 1;
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    if (qword_100704E88 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_10009D098(v6, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v14, v6);
    id v15 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v19 - 2) = (uint64_t)v3;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    char v17 = sub_1004F4F20(v13, a2);
    swift_release();
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

void DOCFullDocumentManagerViewController.performHistoryShift(direction:amount:)(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v3 traitCollection];
  unsigned int v11 = [v10 supportHistoryNavigation];

  if (v11)
  {
    char v12 = a1 & 1;
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    if (qword_100704E88 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_10009D098(v6, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v13, v6);
    uint64_t v14 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = (uint64_t)v3;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    sub_1002C8768(v12, a2);
    swift_release();
  }
}

uint64_t sub_100175388(uint64_t a1)
{
  id v3 = [v1 traitCollection];
  id v4 = [v3 horizontalSizeClass];

  if (v4 == (id)1)
  {
    char v5 = 1;
  }
  else
  {
    id v6 = [*(id *)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20)) sourceIdentifier];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;
    if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10) {
      char v5 = 0;
    }
    else {
      char v5 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t sub_100175484(uint64_t a1, char a2, void (*a3)(void), uint64_t a4)
{
  char v5 = v4;
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  uint64_t v10 = *(void **)(a1 + *(int *)(type metadata accessor for DOCBrowserHistoryItem(0) + 20));
  unsigned int v11 = self;
  id v12 = v10;
  id v13 = [v11 browseStartingPointsLocation];
  char v14 = static NSObject.== infix(_:_:)();

  if (v14)
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a3;
    *(void *)(v15 + 24) = a4;
    uint64_t v16 = self;
    swift_retain_n();
    id v17 = [v5 configuration];
    id v18 = [v17 sceneIdentifier];

    id v19 = [v16 globalTabbedBrowserControllerForIdentifier:v18];
    if (v19
      && (id v20 = [v19 splitBrowserViewController],
          v19,
          v20))
    {
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = sub_100045B40;
      *(void *)(v21 + 24) = v15;
      v24[4] = sub_1000D8564;
      v24[5] = v21;
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 1107296256;
      v24[2] = sub_1000666D8;
      v24[3] = &unk_1006940D8;
      uint64_t v22 = _Block_copy(v24);
      swift_retain();
      swift_release();
      [v20 showSidebarAnimated:a2 & 1 withCompletion:v22];
      _Block_release(v22);
      swift_release();
      swift_release();
    }
    else
    {
      a3();
      swift_release();
      swift_release();
    }
  }
  return v14 & 1;
}

void sub_100175710(uint64_t a1)
{
  sub_10016FED4(a1);
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  id v2 = [v1 configuration];
  static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)();
}

void sub_1001757A8(char a1)
{
}

id DOCFullDocumentManagerViewController.effectiveTabSwitcherTab.getter()
{
  uint64_t v1 = (char *)[v0 hierarchyController];
  id v2 = (char *)sub_1002242A8();
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 effectiveTabSwitcherTab];

    uint64_t v1 = v3;
  }
  else
  {
    id v4 = *(id *)&v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab];
  }

  return v4;
}

id DOCHierarchyController.effectiveTabSwitcherTab.getter()
{
  uint64_t v1 = (void *)sub_1002242A8();
  if (!v1) {
    return *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCHierarchyController_defaultTab);
  }
  id v2 = v1;
  id v3 = [v1 effectiveTabSwitcherTab];

  return v3;
}

unint64_t sub_100175918(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return sub_10005EDF4(a2, a3, a4);
}

void sub_100175948()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  id v3 = *(uint64_t **)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 updateAvailableDisplayModesWithAnimated:1];
  id v6 = [v0 traitCollection];
  unsigned int v7 = [v6 supportHistoryNavigation];

  id v61 = v1;
  if (!v7) {
    goto LABEL_4;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    goto LABEL_69;
  }
  while (1)
  {
    uint64_t v8 = sub_10009D098(v2, (uint64_t)qword_100708498);
    ((void (*)(char *, uint64_t, uint64_t))v3[2])(v5, v8, v2);
    id v1 = v61;
    uint64_t v9 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    ((void (*)(char *, uint64_t))v3[1])(v5, v2);
    uint64_t KeyPath = swift_getKeyPath();
    id v3 = &v60;
    __chkstk_darwin(KeyPath);
    *(&v60 - 2) = (uint64_t)v1;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    unsigned int v11 = *(char **)(v66 + 40);
    uint64_t v12 = swift_allocObject();
    swift_weakInit();
    id v13 = (uint64_t (**)(uint64_t))&v11[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter];
    *id v13 = sub_100180234;
    v13[1] = (uint64_t (*)(uint64_t))v12;
    swift_retain_n();
    swift_release();
    sub_1000CDE40(0x676E69796C707061, 0xEF7265746C696620);
    *(void *)(swift_allocObject() + 16) = v11;
    char v14 = v11;
    sub_1000877C0();
    swift_release();
    swift_release_n();
    swift_release();
LABEL_4:
    uint64_t v15 = (char *)[v1 dataSource];
    uint64_t v16 = (char **)&v15[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess();
    char v5 = *v16;
    swift_bridgeObjectRetain();

    unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v2 = *(void *)(((unint64_t)v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_20;
      }
    }
    if (v2 >= 1) {
      break;
    }
    __break(1u);
LABEL_69:
    swift_once();
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (((unint64_t)v5 & 0xC000000000000001) != 0) {
      id v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = (char *)*(id *)&v5[8 * i + 32];
    }
    id v19 = v18;
    id v20 = (void **)&v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v21 = *v20;
    if (*v20 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v22 = v21;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v23 = v65;
LABEL_21:
  swift_bridgeObjectRelease();
  if (v23 >> 62) {
    goto LABEL_66;
  }
  uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v24)
  {
LABEL_23:
    unint64_t v25 = v23 & 0xC000000000000001;
    id v26 = "_doc_performLiveResizeSkipped_updateOverlay";
    uint64_t v27 = 4;
    uint64_t v28 = &selRef_cellForItemAtIndexPath_;
    unint64_t v62 = 0x80000001005D7720;
    unint64_t v63 = v23 & 0xC000000000000001;
    uint64_t v64 = "_doc_performLiveResizeSkipped_updateOverlay";
    while (1)
    {
      if (v25) {
        uint64_t v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v31 = (char *)*(id *)(v23 + 8 * v27);
      }
      int v32 = v31;
      uint64_t v33 = v27 - 3;
      if (__OFADD__(v27 - 4, 1))
      {
        __break(1u);
LABEL_66:
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        if (!v24) {
          goto LABEL_59;
        }
        goto LABEL_23;
      }
      if objc_msgSend(v31, v28[228], v26) || (sub_10008110C(), (v34))
      {

        if (v33 == v24) {
          goto LABEL_59;
        }
        goto LABEL_25;
      }
      id v35 = [v32 splitViewController];
      if (v35)
      {
        uint64_t v36 = v35;
        self;
        id v37 = (void *)swift_dynamicCastObjCClass();
        if (v37)
        {
          id v38 = [v37 fullDocumentManagerViewController];

          if (v38) {
            goto LABEL_41;
          }
        }
        else
        {
        }
      }
      sub_10009E6C4(0, (unint64_t *)&unk_100711B80);
      uint64_t v39 = UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)();
      if (v39)
      {
        id v38 = (id)v39;
LABEL_41:
        id v40 = v38;
        id v41 = [v40 traitCollection];

        if (v41) {
          goto LABEL_48;
        }
        goto LABEL_47;
      }
      id v42 = [v32 viewIfLoaded];
      if (!v42) {
        goto LABEL_46;
      }
      unint64_t v43 = v42;
      id v40 = [v42 window];

      if (v40) {
        break;
      }
LABEL_47:
      id v41 = [v32 traitCollection];
LABEL_48:

      if (sub_1000951EC(1))
      {
        uint64_t v44 = sub_100086544();
        unint64_t v65 = (unint64_t)v44;
        unint64_t v45 = sub_100082C28();
        unint64_t v46 = sub_100081638();
        uint64_t v47 = *(void **)&v32[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem];
        if (v47)
        {
          id v48 = v47;
          [v48 setHidesBackButton:[v32 hidesNavigationBackButton]];
        }
        if ([v32 isEditing])
        {
          sub_1003395FC();
        }
        else
        {
          unint64_t v49 = swift_bridgeObjectRetain();
          sub_100083628(v49, (uint64_t (*)(uint64_t, void, unint64_t))sub_1000838A4);
          uint64_t v44 = (void *)v65;
        }
        sub_100080C70((unint64_t)v44, v45, v46, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100080AD4();
        sub_100081C14();
        id v50 = [v32 splitViewController];
        unint64_t v25 = v63;
        if (v50)
        {
          uint64_t v51 = v50;
          self;
          id v52 = (void *)swift_dynamicCastObjCClass();
          if (v52)
          {
            id v53 = [v52 sidebarViewController];
            sub_100020748();

            uint64_t v51 = v53;
          }
        }
        sub_10008152C();
        sub_100080930(2);

        id v26 = v64;
        uint64_t v28 = &selRef_cellForItemAtIndexPath_;
        if (v33 == v24) {
          goto LABEL_59;
        }
      }
      else
      {
        id v29 = [self standardUserDefaults];
        NSString v30 = String._bridgeToObjectiveC()();
        [v29 BOOLForKey:v30];

        id v26 = v64;
        uint64_t v28 = &selRef_cellForItemAtIndexPath_;
        if (v33 == v24) {
          goto LABEL_59;
        }
      }
LABEL_25:
      ++v27;
    }
    id v38 = [v40 rootViewController];

    if (v38) {
      goto LABEL_41;
    }
LABEL_46:
    id v40 = 0;
    goto LABEL_47;
  }
LABEL_59:
  swift_bridgeObjectRelease_n();
  id v54 = v61;
  id v55 = [v61 traitCollection];
  id v56 = [v55 horizontalSizeClass];

  if (v56 != (id)2)
  {
    id v57 = [v54 presentedViewController];
    if (v57)
    {
      uint64_t v58 = v57;
      type metadata accessor for DOCGoToViewController();
      id v59 = (void *)swift_dynamicCastClass();
      if (v59) {
        [v59 dismissViewControllerAnimated:0 completion:0];
      }
    }
  }
}

void *sub_10017629C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 fileProviderItem];
  if (!v4) {
    return 0;
  }
  char v5 = v4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  id v7 = [self defaultPermission];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005A04F0;
  *(void *)(v8 + 32) = v5;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v9 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  unsigned int v11 = (void *)swift_allocObject();
  v11[2] = v9;
  v11[3] = v6;
  v11[4] = v2;
  v11[5] = a1;
  v19[4] = sub_100181204;
  v19[5] = v11;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1000666D8;
  v19[3] = &unk_100694060;
  uint64_t v12 = _Block_copy(v19);
  id v13 = v9;
  swift_retain();
  id v14 = v2;
  id v15 = a1;
  swift_release();
  [v7 adoptPersonaFromItems:isa andPerformBlock:v12];

  _Block_release(v12);
  swift_beginAccess();
  uint64_t v16 = *(void **)(v6 + 16);
  id v17 = v16;
  swift_release();
  return v16;
}

void sub_1001764BC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v8 = [self defaultPermission];
  id v9 = [v8 dataOwnerStateForNode:a1];

  BOOL v10 = v9 == (id)1;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A04F0;
  *(void *)(v11 + 32) = a4;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100714270);
  id v12 = a4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v14 = Array._bridgeToObjectiveC()().super.isa;
  id v15 = [a3 actionManager];
  id v16 = [a3 _activityViewControllerWithItemBookmarks:isa isForTitleMenuFolderSharing:1 popoverTracker:0 isContentManaged:v10 additionalActivities:v14 activityRunner:v15];

  swift_beginAccess();
  id v17 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = v16;
}

void *sub_100176654()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  id v1 = (void *)Strong;
  id v2 = sub_1001616F0(DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  aBlock[4] = sub_1001802C4;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100156760;
  aBlock[3] = &unk_100693700;
  uint64_t v6 = _Block_copy(aBlock);
  swift_release();
  [v2 setUnresolvedHandler:v6];
  _Block_release(v6);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A04F0;
  *(void *)(v7 + 32) = v2;
  aBlock[0] = v7;
  specialized Array._endMutation()();
  uint64_t v8 = aBlock[0];

  return (void *)v8;
}

void sub_1001767FC(unint64_t a1, uint64_t a2)
{
  sub_10009B208(a2, (uint64_t)aBlock);
  type metadata accessor for DOCActionContext();
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v3 = (char *)aBlock[9];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {

    return;
  }
  uint64_t v5 = Strong;
  swift_beginAccess();
  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (!v6)
  {

    return;
  }
  uint64_t v7 = (char **)v6;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (!All)
  {

    return;
  }
  unint64_t v9 = All;
  uint64_t v10 = All >> 62;
  if (All >> 62) {
    goto LABEL_53;
  }
  uint64_t v11 = *(void *)((All & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_54:

    swift_bridgeObjectRelease_n();
    return;
  }
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_58;
      }
      id v12 = *(id *)(v9 + 32);
    }
    id v46 = v12;
    swift_bridgeObjectRelease();
    unint64_t v45 = a1 >> 62;
    if (!(a1 >> 62))
    {
      uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
LABEL_58:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
LABEL_12:
    uint64_t v44 = v10;
    unint64_t v49 = v3;
    id v50 = v7;
    uint64_t v47 = (void *)v5;
    unint64_t v48 = v9;
    uint64_t v10 = 0;
    if (!v13) {
      goto LABEL_26;
    }
    uint64_t v5 = 4;
    unint64_t v9 = (unint64_t)&unk_1006E3000;
    uint64_t v7 = &selRef_cellForItemAtIndexPath_;
    uint64_t v14 = 0;
    if ((a1 & 0xC000000000000001) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v3 = (char *)(v14 + 1);
    if (!__OFADD__(v14, 1)) {
      break;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_54;
    }
  }
  while ((v10 & 1) != 0)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = 1;
    if (v3 == (char *)v13) {
      goto LABEL_26;
    }
LABEL_22:
    uint64_t v14 = ++v5 - 4;
    if ((a1 & 0xC000000000000001) != 0) {
      goto LABEL_14;
    }
LABEL_17:
    uint64_t v15 = *(void *)(a1 + 8 * v5);
    swift_unknownObjectRetain();
    uint64_t v3 = (char *)(v14 + 1);
    if (__OFADD__(v14, 1)) {
      goto LABEL_52;
    }
  }
  id v16 = [self defaultPermission];
  id v17 = [v16 dataOwnerStateForNode:v15];
  swift_unknownObjectRelease();

  uint64_t v10 = v17 == (id)1;
  if (v3 != (char *)v13) {
    goto LABEL_22;
  }
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)&v49[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo];
  if (!*(void *)(v18 + 16))
  {
    id v22 = 0;
    uint64_t v23 = v48;
    id v20 = v46;
    if (!v45) {
      goto LABEL_36;
    }
    goto LABEL_33;
  }
  uint64_t v19 = sub_100042EBC(0xD000000000000039, 0x80000001005D7870, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100042F7C);
  id v20 = v46;
  if (v21)
  {
    sub_10009B208(*(void *)(v18 + 56) + 32 * v19, (uint64_t)aBlock);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    if (swift_dynamicCast()) {
      id v22 = v51;
    }
    else {
      id v22 = 0;
    }
  }
  else
  {
    id v22 = 0;
  }
  uint64_t v23 = v48;
  if (v45)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v24 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_37:
  if (v24 < 2 || v22)
  {
    uint64_t v31 = *(void **)&v49[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy];
    if (v31)
    {
      if (v22) {
        id v32 = v22;
      }
      else {
        id v32 = v20;
      }
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v23;
      *(void *)(v37 + 24) = v20;
      *(void *)(v37 + 32) = v50;
      *(unsigned char *)(v37 + 40) = v10;
      aBlock[4] = sub_100180314;
      aBlock[5] = v37;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100045AE0;
      aBlock[3] = &unk_100693750;
      id v38 = _Block_copy(aBlock);
      id v39 = v20;
      id v40 = v50;
      swift_unknownObjectRetain();
      id v41 = v22;
      swift_release();
      [v31 getPopoverTrackerForItem:v32 completionBlock:v38];

      _Block_release(v38);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      if (v44)
      {
        uint64_t v36 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        uint64_t v36 = v23;
      }
      swift_bridgeObjectRetain();
      id v42 = v20;
      unint64_t v43 = v50;
      sub_1003E86FC(v36, v42, v23, v43, 0, v10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    unint64_t v25 = (objc_class *)type metadata accessor for DOCServiceActionPopoverTrackerController();
    id v26 = (char *)objc_allocWithZone(v25);
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    *(void *)&v26[OBJC_IVAR____TtC5Files40DOCServiceActionPopoverTrackerController_action] = v47;
    v52.receiver = v26;
    v52.super_class = v25;
    id v27 = v47;
    id v28 = [super init];
    swift_bridgeObjectRetain();
    id v29 = v28;
    if (v44)
    {
      uint64_t v30 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      uint64_t v30 = v23;
    }
    swift_bridgeObjectRetain();
    id v33 = v28;
    id v34 = v20;
    id v35 = v50;
    sub_1003E86FC(v30, v34, v23, v35, (uint64_t)v28, v10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100176F08(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v13 initWithSuiteName:v14];

  if (v15)
  {
    if ([v15 valueForKey:DOCUserDefaultsKeyCopyLinkUIEnabled])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v37, 0, sizeof(v37));
    }
    sub_1000516C4((uint64_t)v37, (uint64_t)aBlock);
    if (v39)
    {
      if ((swift_dynamicCast() & 1) != 0 && v36 == 1)
      {
        id v34 = [self defaultManager];
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
        *(void *)(v16 + 32) = a2;
        aBlock[0] = v16;
        specialized Array._endMutation()();
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v17 = a2;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v19 = [v34 eligibleActionsForItems:isa];

        type metadata accessor for FPAction(0);
        sub_100071760((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
        static Set._unconditionallyBridgeFromObjectiveC(_:)();

        id v20 = FPActionFetchPublishingURL;
        char v21 = sub_1005350BC();

        swift_bridgeObjectRelease();
        if (v21)
        {
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v33 = v23;
          id v35 = (id)v22;
          uint64_t v24 = *(void **)(v12 + 16);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v12 + 16) = v24;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v24 = sub_1000825D0(0, v24[2] + 1, 1, v24);
            *(void *)(v12 + 16) = v24;
          }
          unint64_t v27 = v24[2];
          unint64_t v26 = v24[3];
          if (v27 >= v26 >> 1)
          {
            uint64_t v24 = sub_1000825D0((void *)(v26 > 1), v27 + 1, 1, v24);
            *(void *)(v12 + 16) = v24;
          }
          v24[2] = v27 + 1;
          id v28 = &v24[2 * v27];
          v28[4] = v35;
          v28[5] = v33;
        }
      }
    }
    else
    {

      sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
    }
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = a3;
  *(void *)(v29 + 24) = a4;
  *(void *)(v29 + 32) = a1;
  *(void *)(v29 + 40) = a5;
  *(unsigned char *)(v29 + 48) = a6 & 1;
  *(void *)(v29 + 56) = v12;
  id v40 = sub_10018037C;
  uint64_t v41 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  id v39 = &unk_1006937C8;
  uint64_t v30 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v31 = a4;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v30);
  return swift_release();
}

void sub_100177344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  id v11 = [self defaultPermission];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  *(void *)(v13 + 32) = a4;
  *(unsigned char *)(v13 + 40) = a5;
  *(void *)(v13 + 48) = a6;
  v16[4] = sub_1001803E0;
  v16[5] = v13;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  v16[2] = sub_1000666D8;
  v16[3] = &unk_100693818;
  NSString v14 = _Block_copy(v16);
  swift_unknownObjectRetain();
  swift_retain();
  id v15 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  [v11 adoptPersonaFromItems:isa andPerformBlock:v14];
  _Block_release(v14);
}

void sub_1001774BC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (![a1 delegate]) {
    goto LABEL_5;
  }
  type metadata accessor for DOCServiceDocumentBrowserViewController();
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7)
  {
    swift_unknownObjectRelease();
LABEL_5:
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v11.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    v12.super.Class isa = (Class)[a1 actionManager];
    [a1 _displayActivityControllerWithItemBookmarks:isa popoverTracker:a3 isContentManaged:a4 & 1 additionalActivities:v11.super.isa activityProxy:v12.super.isa];
    goto LABEL_6;
  }
  uint64_t v8 = v7;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  Class isa = (Class)[a1 actionManager];
  uint64_t v10 = *(void **)(v8 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
  sub_10009E6C4(0, (unint64_t *)&unk_100714270);
  v11.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  v12.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v10 _presentActivityViewControllerForItemBookmarks:v11.super.isa withPopoverTracker:a3 isContentManaged:a4 & 1 additionalActivities:v12.super.isa activityProxy:isa];
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
LABEL_6:
}

uint64_t sub_1001776B8(uint64_t a1, unint64_t a2, void *a3, void *a4, char a5)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    uint64_t v10 = a2;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = a3;
  id v12 = a4;
  sub_1003E86FC(v10, v11, a2, v12, a1, a5 & 1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void DOCFullDocumentManagerViewController.preferredFocusEnvironments.getter()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [v0 internalNavigationController];
  id v7 = [v6 topViewController];

  if (v7)
  {
    type metadata accessor for DOCColumnViewController(0);
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = v8;
      uint64_t v10 = (char *)[v1 dataSource];
      uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

      if (v11 == 2)
      {
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1005A04F0;
        *(void *)(v12 + 32) = v9;
        unint64_t v31 = v12;
        specialized Array._endMutation()();
        unint64_t v13 = v31;
        goto LABEL_8;
      }
    }
  }
  NSString v14 = (char *)[v1 dataSource];
  id v15 = (unint64_t *)&v14[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v16 = *v15;
  swift_bridgeObjectRetain();

  unint64_t v13 = sub_100177C90(v16);
  if (v13 >> 62)
  {
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    uint64_t v27 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v13 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
  }
LABEL_8:
  uint64_t v29 = (void *)v13;
  sub_1000CBE70((uint64_t *)&unk_1007084D0);
  if (qword_100704E88 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_10009D098(v2, (uint64_t)qword_100708498);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v18(v5, v17, v2);
  id v19 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  id v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  v20(v5, v2);
  swift_getKeyPath();
  id v28 = v1;
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  id v21 = v30;
  if (v21)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A04F0;
    v18(v5, v17, v2);
    uint64_t v23 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    v20(v5, v2);
    swift_getKeyPath();
    dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
    swift_release();

    if (!v30)
    {
      __break(1u);
      return;
    }
    *(void *)(v22 + 32) = v30;
    id v30 = (id)v22;
    specialized Array._endMutation()();
    unint64_t v24 = (unint64_t)v30;
  }
  else
  {
    unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v25 = v29;
  swift_bridgeObjectRetain();
  if (v24 >> 62)
  {
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    unint64_t v26 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v26 = v24;
  }
  swift_bridgeObjectRelease();
  id v30 = v25;
  sub_10008E22C(v26, (uint64_t *)&unk_10070D080, (unint64_t *)&unk_1007088A0, &qword_100708898, (uint64_t *)sub_10010A64C);
}

uint64_t sub_100177C90(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_1000BC324(v18);
          uint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_1000BC324(v18);
          uint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1002F48C8(v1);
    uint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_100177EAC(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v15 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  unint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v16 = (uint64_t)&v15 - v7;
  unint64_t v8 = *(void *)(a1 + 16);
  if (v8 < 2) {
    return a1;
  }
  unint64_t v9 = 0;
  unint64_t v10 = v8 >> 1;
  for (unint64_t i = v8 - 1; ; --i)
  {
    if (v9 == i) {
      goto LABEL_4;
    }
    unint64_t v12 = *(void *)(a1 + 16);
    if (v9 >= v12) {
      break;
    }
    unint64_t v13 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v14 = *(void *)(v15 + 72);
    uint64_t result = sub_10008BC50(a1 + v13 + v14 * v9, v16, type metadata accessor for DOCBrowserHistoryItem);
    if (i >= v12) {
      goto LABEL_14;
    }
    sub_10008BC50(a1 + v13 + v14 * i, (uint64_t)v5, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10050DF68(a1);
      a1 = result;
    }
    if (v9 >= *(void *)(a1 + 16)) {
      goto LABEL_15;
    }
    uint64_t result = sub_10017FC5C((uint64_t)v5, a1 + v13 + v14 * v9);
    if (i >= *(void *)(a1 + 16)) {
      goto LABEL_16;
    }
    uint64_t result = sub_10017FC5C(v16, a1 + v13 + v14 * i);
LABEL_4:
    if (v10 == ++v9) {
      return a1;
    }
  }
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void sub_100178094(unint64_t a1)
{
  unint64_t v1 = (void *)sub_10017DAA0(a1);
  unint64_t v2 = v1[2];
  swift_bridgeObjectRelease();
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 2 * v2;
  uint64_t v7 = 5;
  unint64_t v16 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = v1[v7 - 1];
    uint64_t v11 = v1[v6 + 2];
    unint64_t v10 = (void *)v1[v6 + 3];
    id v12 = (id)v1[v7];
    id v13 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v1 = sub_10050DF7C(v1);
    }
    uint64_t v14 = &v1[v7];

    *(v14 - 1) = v11;
    void *v14 = v13;
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v15 = &v1[v6];

    _OWORD v15[2] = v9;
    v15[3] = v12;
    unint64_t v4 = v16;
LABEL_4:
    ++v3;
    v7 += 2;
    --v5;
    v6 -= 2;
    if (v4 == v3) {
      return;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
}

id DOCFullDocumentManagerViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(a1, a2);
  if (v5 != 2) {
    return (id)(v5 & 1);
  }
  sub_1000CBC00(a2, (uint64_t)v15, (uint64_t *)&unk_100705D60);
  uint64_t v6 = v16;
  if (v16)
  {
    uint64_t v7 = sub_1000A6B78(v15, v16);
    uint64_t v8 = *(void *)(v6 - 8);
    __chkstk_darwin(v7);
    unint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_10009B1B8((uint64_t)v15);
  }
  else
  {
    uint64_t v11 = 0;
  }
  v14.receiver = v2;
  v14.super_class = (Class)DOCFullDocumentManagerViewController;
  [super canPerformAction:a1 withSender:v11];
  swift_unknownObjectRelease();
  return v12;
}

void DOCFullDocumentManagerViewController.target(forAction:withSender:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v7 = sub_100172BC0(0, a1, a2);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        a3[3] = v9;
        *a3 = v10;
        return;
      }
    }
    a3[3] = (uint64_t)&type metadata for Bool;
    *(unsigned char *)a3 = 0;
  }
  else
  {
    sub_1000CBC00(a2, (uint64_t)&v19, (uint64_t *)&unk_100705D60);
    uint64_t v11 = *((void *)&v20 + 1);
    if (*((void *)&v20 + 1))
    {
      id v12 = sub_1000A6B78(&v19, *((uint64_t *)&v20 + 1));
      uint64_t v13 = *(void *)(v11 - 8);
      __chkstk_darwin(v12);
      uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      sub_10009B1B8((uint64_t)&v19);
    }
    else
    {
      uint64_t v16 = 0;
    }
    v18.receiver = v3;
    v18.super_class = (Class)DOCFullDocumentManagerViewController;
    id v17 = [super targetForAction:a1 withSender:v16];
    swift_unknownObjectRelease();
    if (v17)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v19 = 0u;
      long long v20 = 0u;
    }
    sub_1000516C4((uint64_t)&v19, (uint64_t)a3);
  }
}

void sub_100178774(void *a1)
{
  Notification.object.getter();
  if (!v11)
  {
    sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_100705D60);
    return;
  }
  type metadata accessor for DOCMoveOperation();
  if (swift_dynamicCast())
  {
    unint64_t v2 = (char *)[a1 hierarchyController];
    unint64_t v3 = &v2[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    unint64_t v4 = *(void *)v3;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5)
      {
LABEL_5:
        unint64_t v6 = v5 - 1;
        if (__OFSUB__(v5, 1))
        {
          __break(1u);
        }
        else if ((v4 & 0xC000000000000001) == 0)
        {
          if ((v6 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v6 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
LABEL_10:
            uint64_t v8 = v7;

            swift_bridgeObjectRelease();
            if (objc_msgSend(a1, "doc_hasAppeared")) {
              sub_1004B981C(v9, v8, a1);
            }

            return;
          }
          __break(1u);
          return;
        }
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_5;
      }
    }

    swift_bridgeObjectRelease();
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidMove(to:shouldAppearOrDisappear:)(UIWindow_optional to, Swift::Bool shouldAppearOrDisappear)
{
  Class isa = to.value.super.super.super.isa;
  v4.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewDidMoveToWindow:to.value.super.super.super.isa shouldAppearOrDisappear:to.is_nil];
  if (isa) {
    [v2 updateAvailableDisplayModesWithAnimated:1];
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  v11.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewWillDisappear:a1];
  sub_10001E2A8();
  id v2 = [v1 internalNavigationController];
  id v3 = [v2 topViewController];

  if (v3)
  {
    id v4 = [v3 navigationItem];

    id v5 = [v4 searchController];
    if (v5)
    {
      type metadata accessor for DOCSearchController();
      unint64_t v6 = (char *)swift_dynamicCastClass();
      if (v6)
      {
        id v7 = v6;
        if ([v6 isActive])
        {
          id v8 = [*(id *)&v7[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController] viewIfLoaded];
          if (v8)
          {
            uint64_t v9 = v8;
            unsigned int v10 = [v8 isHidden];

            if (v10) {
              [v7 setActive:0];
            }
          }
        }
      }
    }
  }
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  v1.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewDidDisappear:a1];
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewWillAppear(_:)(Swift::Bool a1)
{
  v2.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewWillAppear:a1];
  sub_1000899F4();
  [v1 updateAvailableDisplayModesWithAnimated:0];
  sub_10001E2A8();
  sub_10000C5A0();
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.viewDidAppear(_:)(Swift::Bool a1)
{
  v2.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewDidAppear:a1];
  [v1 updateCustomActions];
}

id DOCFullDocumentManagerViewController.viewWillTransition(to:with:)(void *a1)
{
  v11.super_class = (Class)DOCFullDocumentManagerViewController;
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:];
  _StringGuts.grow(_:)(40);
  v3._object = (void *)0x80000001005D7360;
  v3._uint64_t countAndFlagsBits = 0xD000000000000025;
  String.append(_:)(v3);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)();
  v4._uint64_t countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  id v5 = (char *)[v1 effectiveBrowserViewController];
  if (v5)
  {
    unint64_t v6 = v5;
    id v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v8 = *v7;
    if (!v8 || (type metadata accessor for DOCItemCollectionViewController(0), !swift_dynamicCastClass()))
    {
      swift_bridgeObjectRelease();

      return [v1 updateAvailableDisplayModesWithAnimated:1];
    }
    id v9 = v8;

    sub_10023FBF8(0, (void *)0xE000000000000000, a1);
  }
  swift_bridgeObjectRelease();
  return [v1 updateAvailableDisplayModesWithAnimated:1];
}

void sub_100178F08()
{
  objc_super v1 = (char *)[v0 effectiveBrowserViewController];
  if (v1)
  {
    objc_super v2 = v1;
    Swift::String v3 = (void **)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    Swift::String v4 = *v3;
    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v5 = swift_dynamicCastClass();
      if (v5)
      {
        unint64_t v6 = (unsigned char *)v5;
        id v7 = v4;

        v6[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v8 = [v6 viewIfLoaded];
        id v9 = [v8 window];

        if (v9) {
          sub_1000A6988();
        }
        sub_10023FBF8(0xD000000000000036, (void *)0x80000001005D76C0, 0);
        objc_super v2 = v7;
      }
    }
  }
}

void sub_100179180(uint64_t a1, unsigned __int8 a2)
{
  Swift::String v3 = v2;
  int v6 = a2;
  id v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v7);
  id v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v10 = OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState;
  int v11 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState);
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState) = a2;
  id v12 = sub_1000C6E20();
  sub_10051D7F8(*(unsigned char *)(a1 + v10));

  uint64_t v13 = (char *)[v3 effectiveBrowserViewController];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v16 = *v15;
    if (!*v15) {
      goto LABEL_20;
    }
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v17 = swift_dynamicCastClass();
    if (!v17) {
      goto LABEL_20;
    }
    uint64_t v18 = v17;
    id v19 = v16;

    int v20 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState);
    *(unsigned char *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_searchPresentationState) = v6;
    if (v6 == 2)
    {
      if (v20 != 2) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v6 != 3)
      {
        if (v6 == 4)
        {
          if (v20 == 4) {
            goto LABEL_19;
          }
        }
        else if (v20 - 2) >= 3 && ((((v6 & 1) == 0) ^ v20))
        {
          goto LABEL_19;
        }
LABEL_15:
        sub_10008762C();
        if (v21)
        {
          uint64_t v14 = v21;
          if (*((unsigned char *)v21 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1)) {
            _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
          }

          goto LABEL_20;
        }
        goto LABEL_19;
      }
      if (v20 != 3) {
        goto LABEL_15;
      }
    }
LABEL_19:
    uint64_t v14 = v19;
LABEL_20:
  }
  if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1)
    && (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration + 1) != 1
     || (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration) & 1) != 0))
  {
    if (v11 != 4 && v11 != 3 && v11 != 2 || (v6 - 2) < 3) {
      goto LABEL_54;
    }
  }
  else if (v11 == 2 || v11 == 3 || v11 == 4)
  {
    if ((v6 - 2) < 3 || (v6 & 1) == 0) {
      goto LABEL_54;
    }
  }
  else if (v6 - 2) < 3 || (v6 & 1) == 0 || (v11)
  {
    goto LABEL_54;
  }
  uint64_t v22 = (char *)[v3 hierarchyController];
  uint64_t v23 = &v22[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  uint64_t v24 = *(void *)v23;
  if (!(*(void *)v23 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_40;
    }
LABEL_53:

    swift_bridgeObjectRelease();
    goto LABEL_54;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  if (!v25) {
    goto LABEL_53;
  }
LABEL_40:
  unint64_t v26 = v25 - 1;
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
  }
  else if ((v24 & 0xC000000000000001) == 0)
  {
    if ((v26 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v26 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v27 = *(id *)(v24 + 8 * v26 + 32);
      goto LABEL_45;
    }
    __break(1u);
    return;
  }
  id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_45:
  id v28 = v27;

  swift_bridgeObjectRelease();
  id v29 = [v3 sourceObserver];
  if (v29)
  {
    id v30 = v29;
    id v31 = [v28 sourceIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v33 = [v30 sourceForIdentifier:v32];

    if (v33)
    {
      id v34 = (char *)[v3 dataSource];
      id v35 = *(id *)&v34[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

      uint64_t v36 = swift_allocBox();
      uint64_t v38 = v37;
      memset(v48, 0, sizeof(v48));
      id v39 = v28;
      id v40 = v33;
      UUID.init()();
      *(void *)(v38 + v7[5]) = v39;
      *(void *)(v38 + v7[6]) = _swiftEmptyArrayStorage;
      *(void *)(v38 + v7[7]) = v28;
      *(void *)(v38 + v7[8]) = v40;
      sub_1000516C4((uint64_t)v48, v38 + v7[9]);
      sub_10008BC50(v38, (uint64_t)v9, type metadata accessor for DOCBrowserHistoryItem);
      char v41 = sub_1000BC7AC((uint64_t)v9);
      sub_10008BB90((uint64_t)v9, type metadata accessor for DOCBrowserHistoryItem);
      if (v41)
      {
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v36;
        *(void *)(v42 + 24) = v35;
        id v43 = v35;
        swift_retain();
        sub_1000877C0();

        swift_release();
      }
      else
      {
      }
      swift_release();

      goto LABEL_62;
    }
  }

LABEL_54:
  if ((v11 - 5) <= 0xFFFFFFFC && (v11 & 1) != 0 && (v6 - 2) <= 2)
  {
    id v46 = (char *)[v3 dataSource];
    id v39 = *(id *)&v46[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

    sub_1004F6D10();
LABEL_62:
  }
}

uint64_t sub_100179760(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for DOCUIPBrowserState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  uint64_t v12 = sub_100179A28(v11);
  uint64_t v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  uint64_t v14 = *v13;
  *uint64_t v13 = v12;
  if (v14 != v12)
  {
    uint64_t v15 = v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    swift_beginAccess();
    sub_10008BC50(v15, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    uint64_t v16 = *(void *)(*(void *)v10 + 16);
    if (v16)
    {
      uint64_t v17 = (uint64_t *)(*(void *)v10 + 64);
      do
      {
        uint64_t v18 = *v17;
        v17 += 5;
        *(unsigned char *)(v18 + 24) = *(unsigned char *)(v18 + 25);
        --v16;
      }
      while (v16);
    }
    sub_10008BB90((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    sub_10001E85C();
  }
  sub_100179180(a1, 2u);
  uint64_t result = (uint64_t)[v2 enclosedInUIPDocumentLanding];
  if (result)
  {
    DOCUIPBrowserState.init()();
    DOCUIPBrowserState.documentLandingMode.setter();
    int v20 = self;
    id v21 = [v2 configuration];
    id v22 = [v21 sceneIdentifier];

    id v23 = [v20 globalTabbedBrowserControllerForIdentifier:v22];
    if (v23)
    {
      uint64_t v24 = (void *)DOCUIPBrowserState._bridgeToObjectiveC()();
      [v23 performBrowserStateChange:v24];
    }
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_100179A28(uint64_t a1)
{
  Swift::String v3 = (char *)[v1 effectiveBrowserViewController];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v6 = *v5;
    if (v6)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v7 = swift_dynamicCastClass();
      if (v7)
      {
        uint64_t v8 = v7;
        id v9 = v6;

        uint64_t v10 = (uint64_t *)(v8 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess();
LABEL_8:
        uint64_t v12 = *v10;

        goto LABEL_10;
      }
    }
  }
  uint64_t v11 = (char *)DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v11)
  {
    id v9 = v11;
    uint64_t v10 = (uint64_t *)&v11[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode];
    goto LABEL_8;
  }
  uint64_t v12 = 0;
LABEL_10:
  if (sub_100109124(v12, *(void *)(*(void *)(a1+ OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)+ OBJC_IVAR____TtC5Files21DOCFileProviderSource_availableDisplayModes)))return v12; {
  else
  }
    return 1;
}

void sub_100179C3C(char *a1)
{
  objc_super v2 = v1;
  if (*(void *)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion])
  {
    swift_retain();
    id v4 = [v1 hierarchyController];
    sub_1000562C0();
    dispatch thunk of DOCAssertionCollection.add(_:autoInvalidationTimeout:)();
    swift_release();

    swift_release();
  }
  sub_100179180((uint64_t)a1, 3u);
  [v1 updateAvailableDisplayModesWithAnimated:1];
  if (([a1 showsSearchResultsController] & 1) != 0
    || a1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] == 1)
  {
    uint64_t v5 = self;
    id v6 = [v2 configuration];
    id v7 = [v6 sceneIdentifier];

    id v8 = [v5 globalTabbedBrowserControllerForIdentifier:v7];
    [v8 willDismissSearchResultsController:a1];
  }
}

void sub_100179E44(unsigned char *a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)[v1 effectiveBrowserViewController];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (id *)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v13 = *v12;
    id v14 = *v12;

    if (v13)
    {
      if ((a1[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] & 1) == 0) {
        [v14 becomeFirstResponder];
      }
    }
  }
  uint64_t v15 = *(char **)&a1[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  uint64_t v16 = (char *)DOCFullDocumentManagerViewController.sidebarViewController.getter();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = &v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    *(void *)&v17[OBJC_IVAR____TtC5Files24DOCSidebarViewController_lastSearchDisplayMode] = *(void *)v18;
  }
  [v15 loadViewIfNeeded:v31];
  uint64_t v19 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  int v20 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v20)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v21 = v20;
  [v15 loadViewIfNeeded];
  id v22 = *(void **)&v15[v19];
  if (!v22)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v22 adjustedContentInset];
  [v21 setContentOffset:0.0, -v23];

  if (!*(void *)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_10019E3AC();
  id v24 = [v2 view];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 setUserInteractionEnabled:0];

    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    unint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v2;
    *(void *)(v27 + 24) = a1;
    aBlock[4] = sub_10017FFB8;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_100693408;
    id v28 = _Block_copy(aBlock);
    id v29 = v2;
    id v30 = a1;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100071760((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v31);
    return;
  }
LABEL_16:
  __break(1u);
}

void sub_10017A2CC(void *a1, void *a2)
{
  uint64_t v4 = self;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_10017FFC0;
  *(void *)(v6 + 24) = v5;
  v12[4] = sub_1000879B8;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_100087990;
  v12[3] = &unk_100693480;
  uint64_t v7 = _Block_copy(v12);
  id v8 = a1;
  id v9 = a2;
  swift_retain();
  swift_release();
  [(id)v4 performWithoutAnimation:v7];
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    id v10 = [v8 view];
    if (v10)
    {
      uint64_t v11 = v10;
      [v10 setUserInteractionEnabled:1];
      swift_release();

      return;
    }
  }
  __break(1u);
}

void sub_10017A4E4(uint64_t a1)
{
  Swift::String v3 = self;
  id v4 = [v1 configuration];
  id v5 = [v4 sceneIdentifier];

  id v6 = [v3 globalTabbedBrowserControllerForIdentifier:v5];
  if (v6)
  {
    [v6 willPresentSearchResultsController:a1];
  }
  uint64_t v7 = (char *)[v1 effectiveBrowserViewController];
  if (v7)
  {
    id v8 = v7;
    id v9 = (void **)&v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v10 = *v9;
    if (*v9 && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v11 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v12 = v11;
      id v13 = v10;

      uint64_t v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if ((*(unsigned char *)(v12 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
      {
        *(unsigned char *)(v12 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
        sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
        *(unsigned char *)(v12 + v14) = 0;
      }
    }
    else
    {
      id v13 = v8;
    }
  }
}

void sub_10017A728(uint64_t a1)
{
  Swift::String v3 = self;
  id v4 = [v1 configuration];
  id v5 = [v4 sceneIdentifier];

  id v6 = [v3 globalTabbedBrowserControllerForIdentifier:v5];
  if (v6)
  {
    [v6 willDismissSearchResultsController:a1];
  }
  uint64_t v7 = *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
  if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
  {
    *(unsigned char *)(v7 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
    sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
    *(unsigned char *)(v7 + v8) = 0;
  }
}

char *sub_10017A8EC(void *a1)
{
  objc_super v2 = (char *)[v1 dataSource];
  Swift::String v3 = (unint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v4 = *v3;
  swift_bridgeObjectRetain();

  unint64_t v5 = sub_100177C90(v4);
  unint64_t v6 = v5;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (char *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = (uint64_t)result;
    if (!result) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (char *)swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_17;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = (char *)*(id *)(v6 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    uint64_t v12 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v13 = *v12;
    if (*v12 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v14 = v13;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_37;
  }
  uint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v17 = a1;
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v18 = v15 & 0xC000000000000001;
    uint64_t v19 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    uint64_t v20 = 4;
    p_info = _TtC5Files19DOCDebugInfoManager.info;
    uint64_t v37 = (void *)v15;
    while (1)
    {
      uint64_t result = v18
             ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : (char *)*(id *)(v15 + 8 * v20);
      double v23 = result;
      uint64_t v24 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      uint64_t v25 = *(void *)&result[*v19];
      if (!v25) {
        goto LABEL_41;
      }
      unint64_t v26 = (id *)((char *)p_info[214] + v25);
      if ((((_BYTE)v26[2] & 1) != 0
         || (id v27 = *v26,
             unsigned int v28 = objc_msgSend(v27, "doc_displaysSearchResults"),
             v27,
             !v28))
        && (id v29 = *(void **)&v23[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem]) != 0
        && (id v30 = [v29 searchController]) != 0)
      {
        id v22 = v30;
        type metadata accessor for DOCSearchController();
        if (swift_dynamicCastClass())
        {
          uint64_t v31 = v19;
          id v32 = a1;
          char v33 = static NSObject.== infix(_:_:)();

          if (v33)
          {

            swift_bridgeObjectRelease_n();
            id v34 = v23;
            id v35 = sub_10026E6C4();

            return v35;
          }
          id v22 = v23;
          uint64_t v19 = v31;
          unint64_t v15 = (unint64_t)v37;
          p_info = (__objc2_class_ro **)(_TtC5Files19DOCDebugInfoManager + 32);
        }
        else
        {

          p_info = (__objc2_class_ro **)(_TtC5Files19DOCDebugInfoManager + 32);
        }
      }
      else
      {
        id v22 = v23;
      }

      ++v20;
      if (v24 == v16) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_37:
    id v36 = a1;
    swift_bridgeObjectRetain();
  }
LABEL_38:

  swift_bridgeObjectRelease_n();
  return (char *)_swiftEmptyArrayStorage;
}

objc_class *sub_10017ACD0(void *a1)
{
  objc_super v2 = (char *)[v1 dataSource];
  Swift::String v3 = (unint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v4 = *v3;
  swift_bridgeObjectRetain();

  unint64_t v5 = sub_100177C90(v4);
  unint64_t v6 = v5;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (objc_class *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = (uint64_t)result;
    if (!result) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (objc_class *)swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_17;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v10 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = (char *)*(id *)(v6 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    uint64_t v12 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v13 = *v12;
    if (*v12 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v14 = v13;

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_37;
  }
  uint64_t v16 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v17 = a1;
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v18 = v15 & 0xC000000000000001;
    uint64_t v19 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    uint64_t v20 = 4;
    p_info = _TtC5Files19DOCDebugInfoManager.info;
    uint64_t v37 = (void *)v15;
    while (1)
    {
      uint64_t result = v18
             ? (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)()
             : (objc_class *)*(id *)(v15 + 8 * v20);
      double v23 = result;
      uint64_t v24 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      uint64_t v25 = *(void *)((char *)result + *v19);
      if (!v25) {
        goto LABEL_41;
      }
      unint64_t v26 = (id *)((char *)p_info[214] + v25);
      if ((((_BYTE)v26[2] & 1) != 0
         || (id v27 = *v26,
             unsigned int v28 = objc_msgSend(v27, "doc_displaysSearchResults"),
             v27,
             !v28))
        && (id v29 = *(void **)((char *)v23
                           + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem)) != 0
        && (id v30 = (objc_class *)[v29 searchController]) != 0)
      {
        id v22 = v30;
        type metadata accessor for DOCSearchController();
        if (swift_dynamicCastClass())
        {
          uint64_t v31 = v19;
          id v32 = a1;
          char v33 = static NSObject.== infix(_:_:)();

          if (v33)
          {

            swift_bridgeObjectRelease_n();
            id v34 = v23;
            id v35 = sub_10033905C((char *)v32);

            return v35;
          }
          id v22 = v23;
          uint64_t v19 = v31;
          unint64_t v15 = (unint64_t)v37;
          p_info = (__objc2_class_ro **)(_TtC5Files19DOCDebugInfoManager + 32);
        }
        else
        {

          p_info = (__objc2_class_ro **)(_TtC5Files19DOCDebugInfoManager + 32);
        }
      }
      else
      {
        id v22 = v23;
      }

      ++v20;
      if (v24 == v16) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_37:
    id v36 = a1;
    swift_bridgeObjectRetain();
  }
LABEL_38:

  swift_bridgeObjectRelease_n();
  return 0;
}

id sub_10017B0C0()
{
  if (![v0 isActive]) {
    return 0;
  }
  objc_super v1 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  id v2 = [v1 viewIfLoaded];
  if (!v2) {
    return 0;
  }
  Swift::String v3 = v2;
  unsigned __int8 v4 = [v2 isHidden];

  if (v4) {
    return 0;
  }
  id v5 = [v1 viewIfLoaded];
  if (!v5) {
    return 0;
  }
  unint64_t v6 = v5;
  id v7 = [v5 isHidden];

  return v7;
}

id sub_10017B180(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v50 - v14;
  if (a1)
  {
    id v16 = a1;
    id v17 = [v16 displayModes];
    *(void *)&v58[0] = a2;
    *((void *)&v58[0] + 1) = a3;
    swift_bridgeObjectRetain_n();
    id v18 = [v17 __swift_objectForKeyedSubscript:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
    swift_unknownObjectRelease();

    if (v18)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v58, 0, sizeof(v58));
    }
    sub_1000516C4((uint64_t)v58, (uint64_t)&v59);
    uint64_t v54 = a2;
    if (*((void *)&v60 + 1))
    {
      sub_1000CBE70((uint64_t *)&unk_100708780);
      if (swift_dynamicCast())
      {
        uint64_t v23 = v57;
        swift_bridgeObjectRelease();
        uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v23 + 16)
          && (uint64_t v26 = sub_100042EBC(v24, v25, (void (*)(unsigned char *, uint64_t, uint64_t))&String.hash(into:), (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_100042F7C), (v27 & 1) != 0))
        {
          sub_10009B208(*(void *)(v23 + 56) + 32 * v26, (uint64_t)&v59);
        }
        else
        {
          long long v59 = 0u;
          long long v60 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*((void *)&v60 + 1))
        {
          sub_10009E6C4(0, &qword_10070A280);
          if (swift_dynamicCast())
          {
            char v33 = *(void **)&v58[0];
            id v22 = [*(id *)&v58[0] integerValue];

            if ((unint64_t)v22 < 3)
            {
              uint64_t v32 = 0;
              goto LABEL_26;
            }
          }
        }
        else
        {
          sub_1000CBBA4((uint64_t)&v59, (uint64_t *)&unk_100705D60);
        }
LABEL_25:
        id v22 = 0;
        uint64_t v32 = 1;
LABEL_26:
        static Logger.StateStore.getter();
        id v34 = v16;
        swift_bridgeObjectRetain_n();
        id v35 = v34;
        id v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          id v53 = v22;
          uint64_t v39 = v38;
          uint64_t v51 = swift_slowAlloc();
          *(void *)&v58[0] = v51;
          *(_DWORD *)uint64_t v39 = 136315906;
          *(void *)&long long v59 = sub_10009B0E4(0xD000000000000016, 0x80000001005D7800, (uint64_t *)v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          id v55 = v13;
          uint64_t v56 = v6;
          *(_WORD *)(v39 + 12) = 2080;
          id v40 = v53;
          if (v32) {
            id v40 = 0;
          }
          *(void *)&long long v59 = v40;
          BYTE8(v59) = v32;
          sub_1000CBE70(&qword_100708778);
          uint64_t v41 = String.init<A>(describing:)();
          uint64_t v52 = v32;
          uint64_t v42 = v7;
          *(void *)&long long v59 = sub_10009B0E4(v41, v43, (uint64_t *)v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 22) = 2080;
          swift_bridgeObjectRetain();
          *(void *)&long long v59 = sub_10009B0E4(v54, a3, (uint64_t *)v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v39 + 32) = 2080;
          id v44 = v35;
          id v45 = [v44 description];
          uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v48 = v47;

          *(void *)&long long v59 = sub_10009B0E4(v46, v48, (uint64_t *)v58);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s fetched value: %s for identifier: %s from state store: %s", (uint8_t *)v39, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          id v22 = v53;
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v42 + 8))(v55, v56);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        }
        return v22;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000CBBA4((uint64_t)&v59, (uint64_t *)&unk_100705D60);
    }
    static Logger.StateStore.getter();
    unsigned int v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v55 = v13;
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v56 = v6;
      *(void *)&long long v59 = v31;
      *(_DWORD *)id v30 = 136315138;
      *(void *)&v58[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005D7800, (uint64_t *)&v59);
      id v13 = v55;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s unable to fetch display mode state", v30, 0xCu);
      uint64_t v32 = 1;
      swift_arrayDestroy();
      uint64_t v6 = v56;
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
      id v22 = 0;
      goto LABEL_26;
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    goto LABEL_25;
  }
  static Logger.StateStore.getter();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v59 = swift_slowAlloc();
    *(_DWORD *)id v21 = 136315138;
    *(void *)&v58[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005D7800, (uint64_t *)&v59);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s state store was nil", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return 0;
}

id sub_10017BAAC(uint64_t a1)
{
  return sub_10017BAC4(a1, type metadata accessor for DOCWorkaround);
}

id sub_10017BAC4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_10017BAFC()
{
  return swift_slowAlloc();
}

uint64_t sub_10017BB04()
{
  return swift_slowDealloc();
}

unint64_t sub_10017BB10(uint64_t a1)
{
  type metadata accessor for URL();
  sub_100071760((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000715C0(a1, v2, (uint64_t (*)(void))&type metadata accessor for URL, &qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
}

unint64_t sub_10017BBE4(void *a1, char a2)
{
  char v4 = a2 & 1;
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(1uLL);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v6 = a1;
    String.hash(into:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    id v5 = a1;
    NSObject.hash(into:)();
  }
  Swift::Int v7 = Hasher._finalize()();

  return sub_10017C778(a1, v4, v7);
}

unint64_t sub_10017BCC0(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_100071760((unint64_t *)&unk_1007086A0, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000715C0(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

uint64_t sub_10017BD94(uint64_t a1, uint64_t a2)
{
  return sub_100042EBC(a1, a2, (void (*)(unsigned char *, uint64_t, uint64_t))sub_100181884, (uint64_t (*)(uint64_t, uint64_t, Swift::Int))sub_10017C8F0);
}

unint64_t sub_10017BDC0(uint64_t a1, uint64_t a2, char a3)
{
  Hasher.init(_seed:)();
  if (!a3)
  {
    Swift::UInt v6 = 4;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    Swift::UInt v6 = 5;
LABEL_5:
    Hasher._combine(_:)(v6);
    String.hash(into:)();
    goto LABEL_12;
  }
  switch(a1)
  {
    case 1:
      Swift::UInt v7 = 1;
      break;
    case 2:
      Swift::UInt v7 = 2;
      break;
    case 3:
      Swift::UInt v7 = 3;
      break;
    default:
      Swift::UInt v7 = 0;
      break;
  }
  Hasher._combine(_:)(v7);
LABEL_12:
  Swift::Int v8 = Hasher._finalize()();

  return sub_10017CA8C(a1, a2, a3, v8);
}

unint64_t sub_10017BED8(Swift::UInt64 a1, Swift::UInt64 a2, char a3)
{
  Hasher.init(_seed:)();
  if (a3)
  {
    if (a3 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(a1);
      Hasher._combine(_:)(a2);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(a1);
  }
  Swift::Int v6 = Hasher._finalize()();

  return sub_10017CC3C(a1, a2, a3, v6);
}

unint64_t sub_10017BFA8(uint64_t a1, unint64_t a2)
{
  Hasher.init(_seed:)();
  switch(a2)
  {
    case 0uLL:
      Swift::UInt v4 = 0;
      goto LABEL_7;
    case 1uLL:
      Swift::UInt v4 = 2;
      goto LABEL_7;
    case 2uLL:
      Swift::UInt v4 = 3;
LABEL_7:
      Hasher._combine(_:)(v4);
      goto LABEL_9;
  }
  Hasher._combine(_:)(1uLL);
  String.hash(into:)();
LABEL_9:
  Swift::Int v5 = Hasher._finalize()();

  return sub_10017CD04(a1, a2, v5);
}

unint64_t sub_10017C05C(uint64_t a1)
{
  type metadata accessor for DOCItemSortMode.DisplayableMode();
  sub_100071760((unint64_t *)&unk_100708650, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_1000715C0(a1, v2, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode.DisplayableMode, (unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode, (uint64_t)&protocol conformance descriptor for DOCItemSortMode.DisplayableMode);
}

unint64_t sub_10017C130(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_1002FBCFC();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10017CDFC(a1, v2);
}

unint64_t sub_10017C19C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10017D990(a1, v4, (void (*)(void))type metadata accessor for DOCBrowserContainerController);
}

unint64_t sub_10017C1F0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, (unint64_t *)&unk_100706B70);
}

unint64_t sub_10017C240(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, (unint64_t *)&qword_1007088B0);
}

unint64_t sub_10017C290(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Hasher.init(_seed:)();
  sub_100249E60(a1, a2, a3, a4);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v8 = Hasher._finalize()();

  return sub_10017D184(a1, a2, a3, a4, v8);
}

unint64_t sub_10017C344(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, (unint64_t *)&unk_1007085F0);
}

unint64_t sub_10017C394(uint64_t a1)
{
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(a1 + 8), *(void *)(a1 + 32));
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10017D414(a1, v2);
}

unint64_t sub_10017C424(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, (unint64_t *)&qword_1007069C0);
}

unint64_t sub_10017C474(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, &qword_100708718);
}

unint64_t sub_10017C4C4(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10017D570(a1 & 1, v2);
}

unint64_t sub_10017C56C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10017D6B4(a1, v2);
}

unint64_t sub_10017C634(char a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10017D858(a1 & 1, v2);
}

unint64_t sub_10017C6D4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_10017D990(a1, v4, (void (*)(void))type metadata accessor for DOCGoToRecentLocation);
}

unint64_t sub_10017C728(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
  return sub_100088070(a1, v4, (unint64_t *)&unk_1007085C0);
}

unint64_t sub_10017C778(void *a1, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    uint64_t v10 = ~v5;
    do
    {
      uint64_t v11 = *(void *)(v7 + 48) + 16 * v6;
      uint64_t v12 = *(void **)v11;
      if (*(unsigned char *)(v11 + 8))
      {
        if (a2)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
          {
            swift_bridgeObjectRelease_n();
            return v6;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18) {
            return v6;
          }
        }
      }
      else if ((a2 & 1) == 0)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100706710);
        id v19 = v12;
        id v20 = a1;
        char v21 = static NSObject.== infix(_:_:)();

        if (v21) {
          return v6;
        }
      }
      unint64_t v6 = (v6 + 1) & v10;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_10017C8F0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    while (2)
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      switch(v12)
      {
        case 0:
          if (a2) {
            goto LABEL_4;
          }
          break;
        case 1:
          if (a2 != 1) {
            goto LABEL_4;
          }
          break;
        case 2:
          if (a2 != 2) {
            goto LABEL_4;
          }
          break;
        case 3:
          if (a2 != 3) {
            goto LABEL_4;
          }
          break;
        case 4:
          if (a2 != 4) {
            goto LABEL_4;
          }
          break;
        case 5:
          if (a2 != 5) {
            goto LABEL_4;
          }
          break;
        case 6:
          if (a2 != 6) {
            goto LABEL_4;
          }
          break;
        case 7:
          if (a2 != 7) {
            goto LABEL_4;
          }
          break;
        case 8:
          if (a2 != 8) {
            goto LABEL_4;
          }
          break;
        case 9:
          if (a2 != 9) {
            goto LABEL_4;
          }
          break;
        case 10:
          if (a2 != 10) {
            goto LABEL_4;
          }
          break;
        default:
          if (a2 < 0xB
            || (*v11 == a1 ? (BOOL v13 = v12 == a2) : (BOOL v13 = 0),
                !v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
          {
LABEL_4:
            unint64_t v6 = (v6 + 1) & v9;
            if ((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
              continue;
            }
          }
          break;
      }
      break;
    }
  }
  return v6;
}

unint64_t sub_10017CA8C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if (((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return v7;
  }
  uint64_t v11 = ~v6;
  uint64_t v12 = *(void *)(v4 + 48);
  BOOL v13 = a1 != 3;
  BOOL v14 = a1 != 2;
  BOOL v15 = a1 != 1;
  if (a2)
  {
    BOOL v13 = 1;
    BOOL v14 = 1;
    BOOL v15 = 1;
  }
  if (a3 != 2) {
    BOOL v13 = 1;
  }
  BOOL v26 = v13;
  char v16 = a3 != 2 || v14;
  char v25 = v16;
  char v17 = a3 != 2 || v15;
  if (a2 | a1) {
    BOOL v18 = 0;
  }
  else {
    BOOL v18 = a3 == 2;
  }
  while (1)
  {
    id v19 = (uint64_t *)(v12 + 24 * v7);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    int v22 = *((unsigned __int8 *)v19 + 16);
    if (!v22)
    {
      if (a3) {
        goto LABEL_16;
      }
      goto LABEL_20;
    }
    if (v22 != 1) {
      break;
    }
    if (a3 != 1) {
      goto LABEL_16;
    }
LABEL_20:
    BOOL v23 = v21 == a1 && v20 == a2;
    if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
      return v7;
    }
LABEL_16:
    unint64_t v7 = (v7 + 1) & v11;
    if (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      return v7;
    }
  }
  switch(v21)
  {
    case 1:
      if (v17) {
        goto LABEL_16;
      }
      break;
    case 2:
      if (v25) {
        goto LABEL_16;
      }
      break;
    case 3:
      if (v26) {
        goto LABEL_16;
      }
      break;
    default:
      if (!v18) {
        goto LABEL_16;
      }
      break;
  }
  return v7;
}

unint64_t sub_10017CC3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t result = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v8 = ~v6;
    BOOL v10 = a3 == 2 && (a2 | a1) == 0;
    do
    {
      uint64_t v11 = *(void *)(v4 + 48) + 24 * result;
      uint64_t v12 = *(void *)v11;
      if (*(unsigned char *)(v11 + 16))
      {
        if (*(unsigned char *)(v11 + 16) == 1)
        {
          if (a3 == 1)
          {
            uint64_t v13 = *(void *)(v11 + 8);
            if (v12 == a1 && v13 == a2) {
              return result;
            }
          }
        }
        else if (v10)
        {
          return result;
        }
      }
      else if (!a3 && v12 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v8;
    }
    while (((*(void *)(v4 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_10017CD04(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = ~v5;
    uint64_t v10 = *(void *)(v3 + 48);
    do
    {
      uint64_t v11 = (void *)(v10 + 16 * v6);
      uint64_t v12 = v11[1];
      if (v12)
      {
        if (v12 == 1)
        {
          if (a2 == 1) {
            return v6;
          }
        }
        else if (v12 == 2)
        {
          if (a2 == 2) {
            return v6;
          }
        }
        else if (a2 >= 3)
        {
          BOOL v13 = *v11 == a1 && v12 == a2;
          if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            return v6;
          }
        }
      }
      else if (!a2)
      {
        return v6;
      }
      unint64_t v6 = (v6 + 1) & v9;
    }
    while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
  }
  return v6;
}

unint64_t sub_10017CDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v47 = ~v3;
    unint64_t v6 = (long long *)(a1 + 32);
    id v61 = *(id *)a1;
    do
    {
      unint64_t v7 = (long long *)(*(void *)(v2 + 48) + 160 * v4);
      long long v8 = v7[1];
      long long v48 = *v7;
      long long v49 = v8;
      long long v9 = v7[5];
      long long v11 = v7[2];
      long long v10 = v7[3];
      long long v52 = v7[4];
      long long v53 = v9;
      long long v50 = v11;
      long long v51 = v10;
      long long v12 = v7[9];
      long long v14 = v7[6];
      long long v13 = v7[7];
      long long v56 = v7[8];
      long long v57 = v12;
      long long v54 = v14;
      long long v55 = v13;
      BOOL v15 = (void *)v48;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;
      if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
      {
        sub_10017FF50((uint64_t)&v48);
        id v20 = v15;
        sub_1000CED00(&v61);
        swift_bridgeObjectRelease_n();
        sub_1000CF6B4(&v61);
      }
      else
      {
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10017FF50((uint64_t)&v48);
        id v22 = v15;
        sub_1000CED00(&v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000CF6B4(&v61);

        if ((v21 & 1) == 0) {
          goto LABEL_3;
        }
      }
      BOOL v23 = (void *)*((void *)&v48 + 1);
      id v60 = *(id *)(a1 + 8);
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
      if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
      {
        id v28 = v23;
        sub_1000CED00(&v60);
        swift_bridgeObjectRelease_n();
        sub_1000CF6B4(&v60);
      }
      else
      {
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v30 = v23;
        sub_1000CED00(&v60);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000CF6B4(&v60);

        if ((v29 & 1) == 0) {
          goto LABEL_3;
        }
      }
      uint64_t v31 = (void *)v49;
      id v59 = *(id *)(a1 + 16);
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;
      if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
      {
        id v36 = v31;
        sub_1000CED00(&v59);
        swift_bridgeObjectRelease_n();
        sub_1000CF6B4(&v59);
      }
      else
      {
        char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v38 = v31;
        sub_1000CED00(&v59);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000CF6B4(&v59);

        if ((v37 & 1) == 0) {
          goto LABEL_3;
        }
      }
      if (BYTE8(v49) != *(unsigned __int8 *)(a1 + 24))
      {
LABEL_3:
        sub_10000E7D4((uint64_t)&v48);
        goto LABEL_4;
      }
      v62[4] = v54;
      v62[5] = v55;
      v62[6] = v56;
      v62[7] = v57;
      v62[0] = v50;
      v62[1] = v51;
      v62[2] = v52;
      v62[3] = v53;
      long long v39 = *v6;
      long long v40 = v6[1];
      long long v41 = v6[3];
      _OWORD v58[2] = v6[2];
      v58[3] = v41;
      v58[0] = v39;
      v58[1] = v40;
      long long v42 = v6[4];
      long long v43 = v6[5];
      long long v44 = v6[7];
      v58[6] = v6[6];
      v58[7] = v44;
      v58[4] = v42;
      v58[5] = v43;
      BOOL v45 = sub_1003655AC((uint64_t)v62, (uint64_t)v58);
      sub_10000E7D4((uint64_t)&v48);
      if (v45) {
        return v4;
      }
LABEL_4:
      unint64_t v4 = (v4 + 1) & v47;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10017D184(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  unint64_t v6 = a5 & ~(-1 << *(unsigned char *)(v5 + 32));
  uint64_t v36 = v5 + 64;
  if ((*(void *)(v5 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v31 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = *(void *)(v5 + 48) + 32 * v6;
    id v9 = *(id *)v8;
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t v11 = *(void *)(v8 + 16);
    char v12 = *(unsigned char *)(v8 + 24);
    sub_10010ED28(*(id *)v8, v10, v11, v12);
    uint64_t v32 = v9;
    unint64_t v15 = sub_100249E60((unint64_t)v9, v10, v11, v12);
    uint64_t v17 = v16;
    if (v15 == sub_100249E60(a1, a2, a3, a4) && v17 == v18)
    {
      swift_bridgeObjectRelease_n();
      char v21 = v32;
LABEL_9:
      sub_10010EDB8(v21, v10, v11, v12);
      return v6;
    }
    unint64_t v33 = a1;
    uint64_t v34 = a3;
    char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10010EDB8(v32, v10, v11, v12);
    if ((v20 & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & ~v31;
      if ((*(void *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
      {
        while (1)
        {
          uint64_t v22 = *(void *)(v5 + 48) + 32 * v6;
          id v23 = *(id *)v22;
          uint64_t v10 = *(void *)(v22 + 8);
          uint64_t v11 = *(void *)(v22 + 16);
          char v12 = *(unsigned char *)(v22 + 24);
          sub_10010ED28(*(id *)v22, v10, v11, v12);
          unint64_t v24 = sub_100249E60((unint64_t)v23, v10, v11, v12);
          uint64_t v26 = v25;
          if (v24 == sub_100249E60(v33, a2, v34, a4) && v26 == v27) {
            break;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10010EDB8(v23, v10, v11, v12);
          if ((v29 & 1) == 0)
          {
            unint64_t v6 = (v6 + 1) & ~v31;
            if ((*(void *)(v36 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
              continue;
            }
          }
          return v6;
        }
        swift_bridgeObjectRelease_n();
        char v21 = v23;
        goto LABEL_9;
      }
    }
  }
  return v6;
}

unint64_t sub_10017D414(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v12 = ~v4;
    uint64_t v8 = (void *)(a1 + 8);
    do
    {
      sub_1000CE280(*(void *)(v6 + 48) + 56 * v5, (uint64_t)v13);
      Hasher.init(_seed:)();
      sub_1000A6B78(v14, v14[3]);
      dispatch thunk of Hashable.hash(into:)();
      Swift::Int v9 = Hasher._finalize()();
      Hasher.init(_seed:)();
      sub_1000A6B78(v8, *(void *)(a1 + 32));
      dispatch thunk of Hashable.hash(into:)();
      Swift::Int v10 = Hasher._finalize()();
      sub_1000CE1FC((uint64_t)v13);
      if (v9 == v10) {
        break;
      }
      unint64_t v5 = (v5 + 1) & v12;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_10017D570(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x637241656C707061;
    }
    else {
      uint64_t v6 = 7367034;
    }
    if (a1) {
      unint64_t v7 = 0xEC00000065766968;
    }
    else {
      unint64_t v7 = 0xE300000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x637241656C707061 : 7367034;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xEC00000065766968 : 0xE300000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10017D6B4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v7 = 0x69726F7661666E75;
          unint64_t v8 = 0xEA00000000006574;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v8 = 0xE600000000000000;
          uint64_t v7 = 0x656C67676F74;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE800000000000000;
            if (v7 != 0x657469726F766166) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v8 = 0xE800000000000000;
        uint64_t v7 = 0x657469726F766166;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x69726F7661666E75;
      }
      else {
        uint64_t v10 = 0x656C67676F74;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xEA00000000006574;
      }
      else {
        unint64_t v11 = 0xE600000000000000;
      }
      if (v7 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_10017D858(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x64726177726F66;
    }
    else {
      uint64_t v6 = 1801675106;
    }
    if (a1) {
      unint64_t v7 = 0xE700000000000000;
    }
    else {
      unint64_t v7 = 0xE400000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x64726177726F66 : 1801675106;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE700000000000000 : 0xE400000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_10017D990(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    a3(0);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = static NSObject.== infix(_:_:)();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_10017DAA0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_52;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      if (v2 < 1)
      {
        __break(1u);
        goto LABEL_59;
      }
      if ((a1 & 0xC000000000000001) == 0) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v5 = 0;
      uint64_t v6 = _swiftEmptyArrayStorage;
      id v7 = &_swiftEmptyArrayStorage[4];
      while (1)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (!v4)
        {
          unint64_t v9 = v6[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_50;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          sub_1000CBE70(&qword_100708C20);
          char v12 = (void *)swift_allocObject();
          int64_t v13 = j__malloc_size(v12);
          uint64_t v14 = v13 - 32;
          if (v13 < 32) {
            uint64_t v14 = v13 - 17;
          }
          uint64_t v15 = v14 >> 4;
          void v12[2] = v11;
          v12[3] = 2 * (v14 >> 4);
          unint64_t v16 = (unint64_t)(v12 + 4);
          uint64_t v17 = v6[3] >> 1;
          if (v6[2])
          {
            if (v12 != v6 || v16 >= (unint64_t)&v6[2 * v17 + 4]) {
              memmove(v12 + 4, v6 + 4, 16 * v17);
            }
            void v6[2] = 0;
          }
          id v7 = (void *)(v16 + 16 * v17);
          uint64_t v4 = (v15 & 0x7FFFFFFFFFFFFFFFLL) - v17;
          swift_release();
          uint64_t v6 = v12;
        }
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          break;
        }
        *id v7 = v5;
        v7[1] = v8;
        v7 += 2;
        if (v2 == ++v5) {
          goto LABEL_47;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v2 = result;
      if (!result) {
        goto LABEL_53;
      }
    }
    uint64_t v4 = 0;
    uint64_t v20 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    char v21 = &_swiftEmptyArrayStorage[4];
    do
    {
      uint64_t v22 = *(void **)(a1 + 8 * v20 + 32);
      if (v4)
      {
        id v23 = v22;
        BOOL v19 = __OFSUB__(v4--, 1);
        if (v19) {
          goto LABEL_49;
        }
      }
      else
      {
        unint64_t v24 = v6[3];
        if ((uint64_t)((v24 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_51;
        }
        int64_t v25 = v24 & 0xFFFFFFFFFFFFFFFELL;
        if (v25 <= 1) {
          uint64_t v26 = 1;
        }
        else {
          uint64_t v26 = v25;
        }
        sub_1000CBE70(&qword_100708C20);
        uint64_t v27 = (void *)swift_allocObject();
        int64_t v28 = j__malloc_size(v27);
        uint64_t v29 = v28 - 32;
        if (v28 < 32) {
          uint64_t v29 = v28 - 17;
        }
        uint64_t v30 = v29 >> 4;
        void v27[2] = v26;
        v27[3] = 2 * (v29 >> 4);
        uint64_t v31 = v27 + 4;
        uint64_t v32 = v6[3] >> 1;
        char v21 = &v27[2 * v32 + 4];
        uint64_t v33 = (v30 & 0x7FFFFFFFFFFFFFFFLL) - v32;
        if (v6[2])
        {
          if (v27 != v6 || v31 >= &v6[2 * v32 + 4]) {
            memmove(v31, v6 + 4, 16 * v32);
          }
          id v35 = v22;
          void v6[2] = 0;
        }
        else
        {
          id v36 = v22;
        }
        swift_release();
        uint64_t v6 = v27;
        BOOL v19 = __OFSUB__(v33, 1);
        uint64_t v4 = v33 - 1;
        if (v19) {
          goto LABEL_49;
        }
      }
      *char v21 = v20;
      v21[1] = v22;
      v21 += 2;
      ++v20;
    }
    while (v2 != v20);
LABEL_47:
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
LABEL_53:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  unint64_t v37 = v6[3];
  if (v37 < 2) {
    return (uint64_t)v6;
  }
  unint64_t v38 = v37 >> 1;
  BOOL v19 = __OFSUB__(v38, v4);
  uint64_t v39 = v38 - v4;
  if (!v19)
  {
    void v6[2] = v39;
    return (uint64_t)v6;
  }
LABEL_59:
  __break(1u);
  return result;
}

uint64_t sub_10017DD70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000603CC(a1, a2, a3, (void (*)(void))type metadata accessor for DOCBrowserContainerController, (unint64_t *)&unk_100708668, &qword_100708660, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010A510);
}

uint64_t sub_10017DDAC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708710, &qword_100708708);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708708);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, &qword_100708700);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017DFE0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1000603CC(a1, a2, a3, (void (*)(void))type metadata accessor for DOCSearchSuggestion, &qword_1007085E8, &qword_1007085E0, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_10010A510);
}

uint64_t sub_10017E01C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708838, &qword_100708830);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708830);
          char v12 = sub_10010A5E4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for _RepresentedEntityElement();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017E240(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708818, &qword_100708810);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708810);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017E474(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708618, &qword_100708608);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708608);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017E6A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708738, &qword_100708728);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708728);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, &qword_100708730);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017E8DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708868, &qword_100708858);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708858);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, &qword_100708860);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017EB10(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0((unint64_t *)&unk_100708880, &qword_100708878);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708878);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10017ED44(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_100073DF0(&qword_100708698, &qword_100708688);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_1000CBE70(&qword_100708688);
          char v12 = sub_10010A510(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_10009E6C4(0, &qword_100708690);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10017EF78()
{
}

void sub_10017EF9C()
{
}

unint64_t sub_10017EFC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 40 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
      {
        int64_t v13 = (void *)(v9 + 40 * i);
        if (*v13 == a1 && v13[1] == a2) {
          break;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10017F0CC(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v4 = Hasher._finalize()();

  return sub_10017EFC0(a1, a2, v4);
}

unint64_t sub_10017F154()
{
  uint64_t v1 = (char *)[v0 hierarchyController];
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v3 = *(void *)v2;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    Swift::Int v4 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v4)
    {
LABEL_9:

      swift_bridgeObjectRelease();
      id v7 = [self trashedItemsLocation];
      uint64_t v8 = v7;
      if (v4)
      {
        if (v7)
        {
          sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
          uint64_t v9 = v4;
          char v10 = static NSObject.== infix(_:_:)();

          char v11 = v10 ^ 1;
          return v11 & 1;
        }
      }
      else
      {
        if (!v7)
        {
          char v11 = 0;
          return v11 & 1;
        }
      }
      char v11 = 1;
      return v11 & 1;
    }
  }
  else
  {
    Swift::Int v4 = *(char **)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_9;
    }
  }
  unint64_t result = (unint64_t)(v4 - 1);
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_21:
    unint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v6 = (char *)*(id *)(v3 + 8 * result + 32);
LABEL_8:
    Swift::Int v4 = v6;
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_10017F2F0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DOCTabSwitcherStyleTrait.defaultStyle(for:)();
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
    id v13 = a1;
    swift_bridgeObjectRelease_n();
LABEL_9:
    if (DOCTabSwitcherStyle.showsTabs.getter())
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v15;

      goto LABEL_13;
    }
    goto LABEL_11;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  id v12 = a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    goto LABEL_9;
  }
LABEL_11:

LABEL_12:
  uint64_t v14 = qword_1007084B0;
  unint64_t v16 = off_1007084B8;
  swift_bridgeObjectRetain();
LABEL_13:
  static Logger.StateStore.getter();
  id v17 = a1;
  swift_bridgeObjectRetain_n();
  id v18 = v17;
  BOOL v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v29 = v3;
    v27[1] = v22;
    uint64_t v31 = v22;
    *(_DWORD *)uint64_t v21 = 136315650;
    uint64_t v28 = v2;
    uint64_t v30 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005D7820, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2080;
    uint64_t v30 = (uint64_t)a1;
    id v23 = v18;
    sub_1000CBE70((uint64_t *)&unk_100711B40);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v30 = sub_10009B0E4(v24, v25, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_10009B0E4(v14, (unint64_t)v16, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s in identifier: %s out identifier: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

void sub_10017F6AC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v43 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = self;
  id v10 = [v9 sharedStore];
  id v11 = [v10 interfaceStateForConfiguration:a3];

  if (v11)
  {
    id v41 = v9;
    uint64_t v42 = v6;
    uint64_t v12 = sub_10017F2F0(a2);
    unint64_t v14 = v13;
    unint64_t v15 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;
    uint64_t v47 = &type metadata for Int;
    uint64_t v38 = a1;
    v46[0] = a1;
    sub_1000A54B0(v46, v45);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v44 = v15;
    sub_1003E0814(v45, v16, v18, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v40 = v11;
    id v20 = [v11 displayModes];
    unint64_t v37 = (char *)&type metadata for Any + 8;
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v36 = v12;
    NSString v22 = String._bridgeToObjectiveC()();
    [v20 setValue:isa forKey:v22];

    static Logger.StateStore.getter();
    uint64_t v39 = a2;
    id v23 = a2;
    swift_bridgeObjectRetain();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v35 = a3;
      uint64_t v27 = v26;
      v46[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136315906;
      *(void *)&v45[0] = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005D7A80, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2080;
      *(void *)&v45[0] = v38;
      uint64_t v28 = String.init<A>(describing:)();
      *(void *)&v45[0] = sub_10009B0E4(v28, v29, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      swift_bridgeObjectRetain();
      *(void *)&v45[0] = sub_10009B0E4(v36, v14, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 32) = 2080;
      *(void *)&v45[0] = v39;
      id v30 = v23;
      sub_1000CBE70((uint64_t *)&unk_100711B40);
      uint64_t v31 = String.init<A>(describing:)();
      *(void *)&v45[0] = sub_10009B0E4(v31, v32, v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s saving new value: \"%s\" to defaults: %s for identifier: %s", (uint8_t *)v27, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      a3 = v35;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v43);
    id v33 = [v41 sharedStore];
    uint64_t v34 = v40;
    [v33 updateInterfaceState:v40 forConfiguration:a3];
  }
}

uint64_t sub_10017FB70()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10017FBC0(unint64_t a1, uint64_t a2)
{
  sub_10016D2C0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_10017FBD0()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_10017FBFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100174C78();
  *a1 = result;
  return result;
}

uint64_t sub_10017FC28@<X0>(void *a1@<X8>)
{
  return sub_100174E8C(*(void **)(v1 + 16), a1);
}

uint64_t type metadata accessor for DOCWorkaround()
{
  return self;
}

uint64_t sub_10017FC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017FCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10017FD28()
{
  uint64_t v1 = (char *)[v0 dataSource];
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v2 == 2)
  {
    id v3 = [v0 internalNavigationController];
    id v10 = [v3 topViewController];

    if (v10)
    {
      type metadata accessor for DOCColumnViewController(0);
      uint64_t v4 = swift_dynamicCastClass();
      if (v4)
      {
        uint64_t v5 = (unint64_t *)(v4 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
        swift_beginAccess();
        unint64_t v6 = *v5;
        if (v6 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = (char *)_CocoaArrayWrapper.endIndex.getter();
          if (!v7) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t v7 = *(char **)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v7)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            sub_100412088(v7, 1, 0, 0);

            return;
          }
        }
        uint64_t v8 = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v8 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v8 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v9 = (char *)*(id *)(v6 + 8 * (void)v8 + 32);
LABEL_11:
            uint64_t v7 = v9;
            goto LABEL_12;
          }
          __break(1u);
          return;
        }
        uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_11;
      }
    }
  }
}

uint64_t sub_10017FEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10017FF50(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  unint64_t v6 = *(void **)(a1 + 104);
  id v7 = *(id *)a1;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = v6;
  return a1;
}

uint64_t sub_10017FFB0(uint64_t a1)
{
  return sub_1004F6804(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10017FFB8()
{
  sub_10017A2CC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_10017FFC0()
{
  sub_100179180(*(void *)(v0 + 24), 4u);
}

uint64_t sub_10017FFEC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10017FFFC(void *a1)
{
  id v3 = (char *)[v1 effectiveBrowserViewController];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = (void **)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    unint64_t v6 = *v5;
    if (*v5)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v7 = swift_dynamicCastClass();
      if (v7)
      {
        id v8 = (unsigned char *)v7;
        id v9 = v6;

        v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v10 = [v8 viewIfLoaded];
        id v11 = [v10 window];

        if (v11) {
          sub_1000A6988();
        }
        sub_10023FBF8(0xD000000000000036, (void *)0x80000001005D76C0, a1);
        uint64_t v4 = v9;
      }
    }
  }
}

id sub_100180124(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 24);
  id result = [a1 isCancelled];
  if (result)
  {
    dispatch thunk of DOCAssertion.invalidate()();
    return [v2 setUpdateLocationsAfterPopTransition:0];
  }
  return result;
}

uint64_t sub_10018018C()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1001801CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100174AC8();
  *a1 = result;
  return result;
}

uint64_t sub_1001801FC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100180234(uint64_t a1)
{
  return sub_1002C8448(a1);
}

uint64_t sub_10018023C(uint64_t a1)
{
  return sub_1004F93B4(a1, *(__objc2_class_ro **)(v1 + 16));
}

uint64_t sub_100180244()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10018027C()
{
  return sub_100176654();
}

uint64_t sub_100180284()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001802C4(unint64_t a1, uint64_t a2)
{
}

uint64_t sub_1001802CC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_100180314(uint64_t a1)
{
  return sub_1001776B8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_100180324()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10018037C()
{
  sub_100177344(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100180390()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1001803E0()
{
  sub_1001774BC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_1001803F4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1001804EC(uint64_t a1, void (*a2)(void, void, void))
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  id v9 = *(void **)(v2 + v7);
  id v10 = *(void **)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100171D88(a1, a2, v8, v2 + v6, v9, v10);
}

uint64_t sub_1001805A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001805E8(uint64_t a1, uint64_t a2)
{
  return sub_1001725AC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_1006938C8, (uint64_t)sub_10018062C, (uint64_t)&unk_1006938E0);
}

uint64_t sub_10018062C()
{
  return sub_100180F10((uint64_t (*)(uint64_t, uint64_t))sub_1001716FC);
}

uint64_t sub_100180644()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018067C(uint64_t a1, uint64_t a2)
{
  return sub_10017181C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100180684(void *a1, uint64_t a2)
{
  return sub_100171A88(a1, a2, *(void **)(v2 + 16));
}

id sub_10018068C()
{
  return [*(id *)(v0 + 16) beginRenameOf:*(void *)(v0 + 24)];
}

id sub_10018069C(uint64_t a1, uint64_t a2)
{
  return sub_1001725AC(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_100693AA8, (uint64_t)sub_10018062C, (uint64_t)&unk_100693AC0);
}

uint64_t sub_1001806DC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1001807E0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004C7E30(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(void *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1001808A4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v7 + 8, v5);
}

void sub_100180960()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + v3);
  uint64_t v5 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100172420(v0 + v2, v4, v5);
}

uint64_t sub_1001809FC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100180AC8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100180B00()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100180B48(void *a1)
{
  sub_1001CC2C0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100180B58(uint64_t a1, unint64_t a2)
{
  return sub_10016F090(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100180B60()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100180C34()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10016F43C(v2, v3, v4);
}

uint64_t sub_100180C98(uint64_t *a1)
{
  return sub_10016F9E8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32)) & 1;
}

uint64_t sub_100180CBC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100180CF4(char a1)
{
  return sub_100412574(a1, *(void *)(v1 + 16));
}

uint64_t sub_100180CFC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100180D34()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_100180D5C()
{
  DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(*(void **)(v0 + 24), 0, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

void sub_100180DA0()
{
  sub_10016DECC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100180DB4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100180DF4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_100180E24(uint64_t a1, uint64_t a2)
{
  return sub_10016C758(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100180E2C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100180EF8()
{
  return sub_100180F10((uint64_t (*)(uint64_t, uint64_t))sub_10016CB2C);
}

uint64_t sub_100180F10(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

id sub_100180F88(id result, void *a2)
{
  if (result)
  {
    id v3 = result;
    id v2 = a2;
    return v3;
  }
  return result;
}

void sub_100180FC8(void *a1, void *a2)
{
  if (a1)
  {
  }
}

uint64_t sub_100181008()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100181050(uint64_t a1)
{
  return sub_10016B31C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100181060(uint64_t a1)
{
  return sub_10016B4A8(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10018106C(uint64_t a1)
{
  return sub_100541F74(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100181074()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001810BC()
{
  return sub_1004A2E78(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1001810CC()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100181114()
{
  sub_10016BBF0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_100181120()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100181160()
{
  sub_10016BD38(*(void **)(v0 + 16));
}

uint64_t sub_10018116C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001811B4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100181204()
{
  sub_1001764BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100181210()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100181268()
{
  sub_10016D764(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10018127C()
{
  return sub_10016D878(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_10018128C()
{
  sub_10016DB78(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1001813B4(uint64_t a1)
{
  return sub_100162714(a1) & 1;
}

uint64_t sub_100181400(uint64_t a1, unint64_t a2)
{
  switch(a2)
  {
    case 0uLL:
      uint64_t v4 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v4)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x100181858);
      }
      uint64_t v5 = v4;
      unint64_t v6 = 0xD000000000000034;
      unint64_t v27 = 0x80000001005D7D40;
      uint64_t v7 = 0x75636F4420464450;
      unsigned int v8 = 1953391981;
      goto LABEL_17;
    case 1uLL:
      id v9 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v9) {
        goto LABEL_31;
      }
      uint64_t v5 = v9;
      unint64_t v6 = 0xD00000000000002CLL;
      unint64_t v27 = 0x80000001005D7D10;
      uint64_t v7 = 0x736567616D49;
      unint64_t v10 = 0xE600000000000000;
      goto LABEL_27;
    case 2uLL:
      id v11 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v11) {
        goto LABEL_32;
      }
      uint64_t v5 = v11;
      unint64_t v27 = 0x80000001005D7CD0;
      uint64_t v7 = 0x636973754DLL;
      unint64_t v10 = 0xE500000000000000;
      goto LABEL_10;
    case 3uLL:
      id v12 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v12) {
        goto LABEL_33;
      }
      uint64_t v5 = v12;
      unint64_t v27 = 0x80000001005D7C90;
      uint64_t v7 = 0x736569766F4DLL;
      unint64_t v10 = 0xE600000000000000;
LABEL_10:
      uint64_t v13 = 0x617A696C61636F4CLL;
      unint64_t v14 = 0xEB00000000656C62;
      v15.super.Class isa = v5;
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      unint64_t v6 = 0xD000000000000031;
      goto LABEL_28;
    case 4uLL:
      uint64_t v18 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v18) {
        goto LABEL_34;
      }
      uint64_t v5 = v18;
      unint64_t v6 = 0xD000000000000045;
      unint64_t v10 = 0xE900000000000073;
      unint64_t v27 = 0x80000001005D7C40;
      uint64_t v7 = 0x746E656D75636F44;
      goto LABEL_27;
    case 5uLL:
      BOOL v19 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v19) {
        goto LABEL_35;
      }
      uint64_t v5 = v19;
      unint64_t v6 = 0xD000000000000032;
      unint64_t v27 = 0x80000001005D7C00;
      uint64_t v7 = 0x6873646165727053;
      unint64_t v10 = 0xEC00000073746565;
      goto LABEL_27;
    case 6uLL:
      id v20 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v20) {
        goto LABEL_36;
      }
      uint64_t v5 = v20;
      unint64_t v6 = 0xD00000000000003CLL;
      unint64_t v27 = 0x80000001005D7BC0;
      uint64_t v7 = 0x61746E6573657250;
      unsigned int v8 = 1852795252;
LABEL_17:
      unint64_t v10 = v8 | 0xED00007300000000;
      goto LABEL_27;
    case 7uLL:
      uint64_t v21 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v21) {
        goto LABEL_37;
      }
      uint64_t v5 = v21;
      unint64_t v6 = 0xD000000000000037;
      unint64_t v27 = 0x80000001005D7B80;
      uint64_t v7 = 0x65706F6C65766544;
      unint64_t v10 = 0xE900000000000072;
      goto LABEL_27;
    case 8uLL:
      os_log_type_t v25 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v25) {
        goto LABEL_40;
      }
      uint64_t v5 = v25;
      unint64_t v6 = 0xD000000000000034;
      unint64_t v27 = 0x80000001005D7B40;
      uint64_t v7 = 0x7365766968637241;
      unint64_t v10 = 0xE800000000000000;
      goto LABEL_27;
    case 9uLL:
      NSString v22 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v22) {
        goto LABEL_38;
      }
      uint64_t v5 = v22;
      unint64_t v6 = 0xD00000000000002DLL;
      unint64_t v27 = 0x80000001005D7B10;
      uint64_t v7 = 0x737265646C6F46;
      unint64_t v10 = 0xE700000000000000;
      goto LABEL_27;
    case 0xAuLL:
      id v23 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v23) {
        goto LABEL_39;
      }
      uint64_t v5 = v23;
      unint64_t v6 = 0xD00000000000004FLL;
      unint64_t v27 = 0x80000001005D7AC0;
      uint64_t v7 = 0x726568744FLL;
      unint64_t v10 = 0xE500000000000000;
LABEL_27:
      uint64_t v13 = 0x617A696C61636F4CLL;
      unint64_t v14 = 0xEB00000000656C62;
      v15.super.Class isa = v5;
      uint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
LABEL_28:
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, *(Swift::String *)&v13, v15, *(Swift::String *)&v16, *(Swift::String *)&v6)._countAndFlagsBits;

LABEL_29:
      sub_1000F7ECC(a1, a2);
      return countAndFlagsBits;
    default:
      uint64_t countAndFlagsBits = a1;
      goto LABEL_29;
  }
}

void sub_100181884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  switch(a3)
  {
    case 0:
      Swift::UInt v3 = 0;
      goto LABEL_16;
    case 1:
      Swift::UInt v3 = 1;
      goto LABEL_16;
    case 2:
      Swift::UInt v3 = 2;
      goto LABEL_16;
    case 3:
      Swift::UInt v3 = 3;
      goto LABEL_16;
    case 4:
      Swift::UInt v3 = 4;
      goto LABEL_16;
    case 5:
      Swift::UInt v3 = 5;
      goto LABEL_16;
    case 6:
      Swift::UInt v3 = 6;
      goto LABEL_16;
    case 7:
      Swift::UInt v3 = 7;
      goto LABEL_16;
    case 8:
      Swift::UInt v3 = 8;
      goto LABEL_16;
    case 9:
      Swift::UInt v3 = 9;
      goto LABEL_16;
    case 10:
      Swift::UInt v3 = 11;
LABEL_16:
      Hasher._combine(_:)(v3);
      break;
    default:
      Hasher._combine(_:)(0xAuLL);
      String.hash(into:)();
      break;
  }
}

Swift::Int sub_100181998()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_100181884((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1001819E4(uint64_t a1)
{
  sub_100181884(a1, *v1, v1[1]);
}

Swift::Int sub_1001819EC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  Hasher.init(_seed:)();
  sub_100181884((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_100181A34(uint64_t *a1, uint64_t a2)
{
  return sub_100182338(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

void *sub_100181A48()
{
  uint64_t result = (void *)sub_100493438((uint64_t)_swiftEmptyArrayStorage);
  off_1007088C0 = result;
  return result;
}

void *sub_100181A70(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  if (!v7) {
    return a2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned int v8 = sub_1001848E4(a3, a1, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1001672FC((uint64_t)v8);
  swift_bridgeObjectRelease();
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0xBuLL);
  unint64_t v10 = v63;
  Swift::Int v11 = Hasher._finalize()();
  char v12 = *(unsigned char *)(v9 + 32);
  char v13 = v12 & 0x3F;
  uint64_t v14 = -1;
  for (unint64_t i = v11 & ~(-1 << v12);
        ((*(void *)(v9 + 56 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0;
        unint64_t i = (i + 1) & ~(-1 << v12))
  {
    if (*(void *)(*(void *)(v9 + 48) + 16 * i + 8) == 10)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v63[0] = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_135;
      }
      goto LABEL_7;
    }
  }
  while (2)
  {
    uint64_t v20 = v9 + 56;
    uint64_t v21 = 1 << v13;
    if (v21 < 64) {
      uint64_t v22 = ~(v14 << v21);
    }
    else {
      uint64_t v22 = v14;
    }
    unint64_t v23 = v22 & *(void *)(v9 + 56);
    int64_t v59 = (unint64_t)(v21 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v25 = 0;
    while (1)
    {
      id v61 = a2 + 4;
      unint64_t v26 = (unint64_t)(a2 + 5);
LABEL_13:
      if (v23)
      {
        unint64_t v27 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v28 = v27 | (v25 << 6);
        goto LABEL_29;
      }
      unint64_t v29 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
        __break(1u);
        goto LABEL_70;
      }
      if ((uint64_t)v29 >= v59) {
        goto LABEL_66;
      }
      unint64_t v30 = *(void *)(v20 + 8 * v29);
      ++v25;
      if (!v30)
      {
        int64_t v25 = v29 + 1;
        if ((uint64_t)(v29 + 1) >= v59) {
          goto LABEL_66;
        }
        unint64_t v30 = *(void *)(v20 + 8 * v25);
        if (!v30)
        {
          int64_t v25 = v29 + 2;
          if ((uint64_t)(v29 + 2) >= v59) {
            goto LABEL_66;
          }
          unint64_t v30 = *(void *)(v20 + 8 * v25);
          if (!v30) {
            break;
          }
        }
      }
LABEL_28:
      unint64_t v23 = (v30 - 1) & v30;
      unint64_t v28 = __clz(__rbit64(v30)) + (v25 << 6);
LABEL_29:
      uint64_t v32 = *(void *)(v9 + 48);
      long long v33 = *(_OWORD *)(v32 + 16 * v28);
      uint64_t v14 = a2[2];
      unint64_t v10 = *(void **)(v32 + 16 * v28 + 8);
      long long v62 = v33;
      if (v14)
      {
        unint64_t i = v33;
        Swift::UInt v3 = a2 + 5;
        while (2)
        {
          unint64_t v34 = *v3;
          switch(*v3)
          {
            case 0uLL:
              if (v10) {
                goto LABEL_32;
              }
              goto LABEL_60;
            case 1uLL:
              if (v10 == (void *)1) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 2uLL:
              if (v10 == (void *)2) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 3uLL:
              if (v10 == (void *)3) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 4uLL:
              if (v10 == (void *)4) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 5uLL:
              if (v10 == (void *)5) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 6uLL:
              if (v10 == (void *)6) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 7uLL:
              if (v10 == (void *)7) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 8uLL:
              if (v10 == (void *)8) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 9uLL:
              if (v10 == (void *)9) {
                goto LABEL_60;
              }
              goto LABEL_32;
            case 0xAuLL:
              if (v10 != (void *)10) {
                goto LABEL_32;
              }
LABEL_60:
              sub_1000F7ECC(i, v34);
              goto LABEL_13;
            default:
              if ((unint64_t)v10 >= 0xB)
              {
                if (*(v3 - 1) == i && v34 == (void)v10) {
                  goto LABEL_13;
                }
                char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
                *(void *)&long long v33 = v62;
                if (v36) {
                  goto LABEL_13;
                }
              }
LABEL_32:
              v3 += 2;
              if (--v14) {
                continue;
              }
              goto LABEL_61;
          }
        }
      }
LABEL_61:
      sub_1000F7ECC(v33, (unint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2 = sub_10018F15C(0, a2[2] + 1, 1, a2);
      }
      unint64_t i = a2[2];
      unint64_t v37 = a2[3];
      unint64_t v10 = (void *)(i + 1);
      long long v38 = v62;
      if (i >= v37 >> 1)
      {
        uint64_t v39 = sub_10018F15C((void *)(v37 > 1), i + 1, 1, a2);
        long long v38 = v62;
        a2 = v39;
      }
      a2[2] = v10;
      *(_OWORD *)&a2[2 * i + 4] = v38;
    }
    int64_t v31 = v29 + 3;
    if (v31 < v59)
    {
      unint64_t v30 = *(void *)(v20 + 8 * v31);
      if (!v30)
      {
        while (1)
        {
          int64_t v25 = v31 + 1;
          if (__OFADD__(v31, 1)) {
            break;
          }
          if (v25 >= v59) {
            goto LABEL_66;
          }
          unint64_t v30 = *(void *)(v20 + 8 * v25);
          ++v31;
          if (v30) {
            goto LABEL_28;
          }
        }
        __break(1u);
LABEL_135:
        sub_1000F3284();
        uint64_t v9 = v63[0];
LABEL_7:
        unint64_t v17 = (uint64_t *)(*(void *)(v9 + 48) + 16 * i);
        uint64_t v18 = *v17;
        unint64_t v19 = v17[1];
        unint64_t v10 = v63;
        sub_1004FEA24(i);
        uint64_t v9 = v63[0];
        swift_bridgeObjectRelease();
        sub_1000F7EE0(v18, v19);
        char v13 = *(unsigned char *)(v9 + 32) & 0x3F;
        continue;
      }
      int64_t v25 = v31;
      goto LABEL_28;
    }
    break;
  }
LABEL_66:
  swift_release();
  uint64_t v14 = a2[2];
  if (!v14)
  {
    swift_bridgeObjectRelease();
    id v40 = _swiftEmptyArrayStorage;
    Swift::UInt v3 = _swiftEmptyArrayStorage;
    goto LABEL_132;
  }
  unint64_t v23 = 0;
  id v40 = _swiftEmptyArrayStorage;
  Swift::UInt v3 = _swiftEmptyArrayStorage;
LABEL_72:
  long long v43 = *(_OWORD *)&v61[2 * v23];
  unint64_t v44 = v61[2 * v23 + 1];
  long long v62 = v43;
  if (!*(void *)(v9 + 16))
  {
    sub_1000F7ECC(v43, v44);
    goto LABEL_125;
  }
  Hasher.init(_seed:)();
  switch(v44)
  {
    case 0uLL:
      Swift::UInt v45 = 0;
      goto LABEL_87;
    case 1uLL:
      Swift::UInt v45 = 1;
      goto LABEL_87;
    case 2uLL:
      Swift::UInt v45 = 2;
      goto LABEL_87;
    case 3uLL:
      Swift::UInt v45 = 3;
      goto LABEL_87;
    case 4uLL:
      Swift::UInt v45 = 4;
      goto LABEL_87;
    case 5uLL:
      Swift::UInt v45 = 5;
      goto LABEL_87;
    case 6uLL:
      Swift::UInt v45 = 6;
      goto LABEL_87;
    case 7uLL:
      Swift::UInt v45 = 7;
      goto LABEL_87;
    case 8uLL:
      Swift::UInt v45 = 8;
      goto LABEL_87;
    case 9uLL:
      Swift::UInt v45 = 9;
      goto LABEL_87;
    case 0xAuLL:
      Swift::UInt v45 = 11;
LABEL_87:
      Hasher._combine(_:)(v45);
      swift_bridgeObjectRetain();
      break;
    default:
      Hasher._combine(_:)(0xAuLL);
      swift_bridgeObjectRetain();
      sub_1000F7ECC(v62, v44);
      String.hash(into:)();
      break;
  }
  Swift::Int v46 = Hasher._finalize()();
  uint64_t v47 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v48 = v46 & ~v47;
  if (((*(void *)(v20 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  uint64_t v58 = v3;
  id v60 = v40;
  uint64_t v49 = v14;
  uint64_t v50 = ~v47;
  uint64_t v51 = *(void *)(v9 + 48);
  while (2)
  {
    long long v52 = (void *)(v51 + 16 * v48);
    uint64_t v53 = v52[1];
    switch(v53)
    {
      case 0:
        if (v44) {
          goto LABEL_91;
        }
        goto LABEL_119;
      case 1:
        if (v44 == 1) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 2:
        if (v44 == 2) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 3:
        if (v44 == 3) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 4:
        if (v44 == 4) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 5:
        if (v44 == 5) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 6:
        if (v44 == 6) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 7:
        if (v44 == 7) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 8:
        if (v44 == 8) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 9:
        if (v44 == 9) {
          goto LABEL_119;
        }
        goto LABEL_91;
      case 10:
        if (v44 != 10) {
          goto LABEL_91;
        }
        goto LABEL_119;
      default:
        if (v44 < 0xB
          || (*v52 == (void)v62 ? (BOOL v54 = v53 == v44) : (BOOL v54 = 0),
              !v54 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
LABEL_91:
          unint64_t v48 = (v48 + 1) & v50;
          if (((*(void *)(v20 + ((v48 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v48) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v14 = v49;
            Swift::UInt v3 = v58;
            id v40 = v60;
LABEL_125:
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v24 = v40;
            }
            else {
              uint64_t v24 = sub_10018F15C(0, v40[2] + 1, 1, v40);
            }
            unint64_t v26 = v24[2];
            unint64_t v29 = v24[3];
            unint64_t v10 = (void *)(v26 + 1);
            long long v42 = v62;
            if (v26 < v29 >> 1)
            {
              id v40 = v24;
              goto LABEL_71;
            }
LABEL_70:
            id v41 = sub_10018F15C((void *)(v29 > 1), (int64_t)v10, 1, v24);
            long long v42 = v62;
            uint64_t v24 = v41;
            id v40 = v41;
            goto LABEL_71;
          }
          continue;
        }
LABEL_119:
        swift_bridgeObjectRelease();
        Swift::UInt v3 = v58;
        uint64_t v14 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          Swift::UInt v3 = sub_10018F15C(0, v58[2] + 1, 1, v58);
        }
        id v40 = v60;
        unint64_t v26 = v3[2];
        unint64_t v55 = v3[3];
        unint64_t v10 = (void *)(v26 + 1);
        long long v42 = v62;
        if (v26 >= v55 >> 1)
        {
          long long v56 = sub_10018F15C((void *)(v55 > 1), v26 + 1, 1, v3);
          long long v42 = v62;
          uint64_t v24 = v56;
          Swift::UInt v3 = v56;
        }
        else
        {
          uint64_t v24 = v3;
        }
LABEL_71:
        ++v23;
        v24[2] = v10;
        *(_OWORD *)&v24[2 * v26 + 4] = v42;
        if (v23 != v14) {
          goto LABEL_72;
        }
        swift_bridgeObjectRelease();
LABEL_132:
        swift_bridgeObjectRelease();
        v63[0] = v3;
        sub_100169250((uint64_t)v40);
        return (void *)v63[0];
    }
  }
}

uint64_t sub_100182338(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a4 != 4) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 5:
      if (a4 != 5) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 6:
      if (a4 != 6) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 7:
      if (a4 != 7) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 8:
      if (a4 != 8) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 9:
      if (a4 != 9) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    case 10:
      if (a4 != 10) {
        goto LABEL_28;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 0xB)
      {
LABEL_28:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

uint64_t sub_10018246C(uint64_t a1)
{
  v305[1] = a1;
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  v314 = (char *)v305 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  v317 = (char *)v305 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  v316 = (char *)v305 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v319 = (char *)v305 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  v318 = (char *)v305 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  v322 = (char *)v305 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v321 = (char *)v305 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  *(void *)&long long v325 = (char *)v305 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v324 = (char *)v305 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  v323 = (char *)v305 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  unint64_t v326 = (unint64_t)v305 - v24;
  __chkstk_darwin(v23);
  unint64_t v26 = (char *)v305 - v25;
  sub_1000CBE70(&qword_1007088C8);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1005A1D40;
  sub_1000CBE70(&qword_1007088D0);
  uint64_t inited = swift_initStackObject();
  long long v327 = xmmword_1005A0030;
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = 0;
  static UTType.pdf.getter();
  uint64_t v29 = UTType.identifier.getter();
  uint64_t v31 = v30;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v2 + 8);
  v32(v26, v1);
  *(void *)(inited + 48) = v29;
  *(void *)(inited + 56) = v31;
  *(void *)(v27 + 32) = sub_100493560(inited);
  uint64_t v33 = swift_initStackObject();
  long long v306 = xmmword_1005A1D50;
  *(_OWORD *)(v33 + 16) = v327;
  *(_OWORD *)(v33 + 32) = xmmword_1005A1D50;
  static UTType.image.getter();
  uint64_t v34 = UTType.identifier.getter();
  uint64_t v36 = v35;
  v32(v26, v1);
  *(void *)(v33 + 48) = v34;
  *(void *)(v33 + 56) = v36;
  *(void *)(v27 + 40) = sub_100493560(v33);
  uint64_t v37 = swift_initStackObject();
  long long v307 = xmmword_1005A1D60;
  *(_OWORD *)(v37 + 16) = v327;
  *(_OWORD *)(v37 + 32) = xmmword_1005A1D60;
  static UTType.audio.getter();
  uint64_t v38 = UTType.identifier.getter();
  uint64_t v40 = v39;
  v32(v26, v1);
  *(void *)(v37 + 48) = v38;
  *(void *)(v37 + 56) = v40;
  *(void *)(v27 + 48) = sub_100493560(v37);
  uint64_t v41 = swift_initStackObject();
  long long v308 = xmmword_1005A1D70;
  *(_OWORD *)(v41 + 16) = v327;
  *(_OWORD *)(v41 + 32) = xmmword_1005A1D70;
  static UTType.video.getter();
  uint64_t v42 = UTType.identifier.getter();
  uint64_t v44 = v43;
  v32(v26, v1);
  *(void *)(v41 + 48) = v42;
  *(void *)(v41 + 56) = v44;
  *(void *)(v27 + 56) = sub_100493560(v41);
  uint64_t v45 = swift_initStackObject();
  long long v309 = xmmword_1005A1D80;
  *(_OWORD *)(v45 + 16) = v327;
  *(_OWORD *)(v45 + 32) = xmmword_1005A1D80;
  static UTType.sourceCode.getter();
  uint64_t v46 = UTType.identifier.getter();
  uint64_t v48 = v47;
  v32(v26, v1);
  *(void *)(v45 + 48) = v46;
  *(void *)(v45 + 56) = v48;
  *(void *)(v27 + 64) = sub_100493560(v45);
  uint64_t v49 = swift_initStackObject();
  long long v310 = xmmword_1005A1D90;
  *(_OWORD *)(v49 + 16) = v327;
  *(_OWORD *)(v49 + 32) = xmmword_1005A1D90;
  static UTType.plainText.getter();
  uint64_t v50 = UTType.identifier.getter();
  uint64_t v52 = v51;
  v32(v26, v1);
  *(void *)(v49 + 48) = v50;
  *(void *)(v49 + 56) = v52;
  *(void *)(v27 + 72) = sub_100493560(v49);
  uint64_t v53 = swift_initStackObject();
  long long v313 = xmmword_1005A1DA0;
  *(_OWORD *)(v53 + 16) = v327;
  *(_OWORD *)(v53 + 32) = xmmword_1005A1DA0;
  static UTType.spreadsheet.getter();
  uint64_t v54 = UTType.identifier.getter();
  uint64_t v56 = v55;
  v32(v26, v1);
  *(void *)(v53 + 48) = v54;
  *(void *)(v53 + 56) = v56;
  *(void *)(v27 + 80) = sub_100493560(v53);
  uint64_t v57 = swift_initStackObject();
  long long v312 = xmmword_1005A1DB0;
  *(_OWORD *)(v57 + 16) = v327;
  *(_OWORD *)(v57 + 32) = xmmword_1005A1DB0;
  static UTType.presentation.getter();
  uint64_t v58 = UTType.identifier.getter();
  uint64_t v60 = v59;
  v32(v26, v1);
  *(void *)(v57 + 48) = v58;
  *(void *)(v57 + 56) = v60;
  *(void *)(v27 + 88) = sub_100493560(v57);
  uint64_t v61 = swift_initStackObject();
  long long v311 = xmmword_1005A1DC0;
  *(_OWORD *)(v61 + 16) = v327;
  *(_OWORD *)(v61 + 32) = xmmword_1005A1DC0;
  static UTType.folder.getter();
  uint64_t v62 = UTType.identifier.getter();
  uint64_t v64 = v63;
  v32(v26, v1);
  *(void *)(v61 + 48) = v62;
  *(void *)(v61 + 56) = v64;
  unint64_t v65 = sub_100493560(v61);
  v305[0] = v27;
  *(void *)(v27 + 96) = v65;
  sub_1000CBE70(&qword_1007088D8);
  uint64_t v66 = swift_initStackObject();
  *(_OWORD *)(v66 + 16) = xmmword_1005A1DD0;
  *(void *)(v66 + 32) = 0;
  *(void *)(v66 + 40) = 0;
  uint64_t v67 = v66;
  uint64_t v320 = sub_1000CBE70(&qword_100707EF0);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = v327;
  static UTType.pdf.getter();
  uint64_t v69 = UTType.identifier.getter();
  uint64_t v71 = v70;
  v32(v26, v1);
  *(void *)(v68 + 32) = v69;
  *(void *)(v68 + 40) = v71;
  *(void *)(v67 + 48) = v68;
  *(_OWORD *)(v67 + 56) = v306;
  uint64_t v72 = swift_allocObject();
  *(_OWORD *)(v72 + 16) = xmmword_1005A1DE0;
  static UTType.image.getter();
  uint64_t v73 = UTType.identifier.getter();
  uint64_t v75 = v74;
  v32(v26, v1);
  *(void *)(v72 + 32) = v73;
  *(void *)(v72 + 40) = v75;
  unint64_t v76 = v326;
  static UTType.heic.getter();
  uint64_t v77 = UTType.identifier.getter();
  uint64_t v79 = v78;
  v32((char *)v76, v1);
  *(void *)(v72 + 48) = v77;
  *(void *)(v72 + 56) = v79;
  id v80 = v323;
  static UTType.jpeg.getter();
  uint64_t v81 = UTType.identifier.getter();
  uint64_t v83 = v82;
  v32(v80, v1);
  *(void *)(v72 + 64) = v81;
  *(void *)(v72 + 72) = v83;
  id v84 = v324;
  static UTType.tiff.getter();
  uint64_t v85 = UTType.identifier.getter();
  uint64_t v87 = v86;
  v32(v84, v1);
  *(void *)(v72 + 80) = v85;
  *(void *)(v72 + 88) = v87;
  unint64_t v88 = (char *)v325;
  static UTType.gif.getter();
  uint64_t v89 = UTType.identifier.getter();
  uint64_t v91 = v90;
  v32(v88, v1);
  *(void *)(v72 + 96) = v89;
  *(void *)(v72 + 104) = v91;
  uint64_t v92 = v321;
  static UTType.png.getter();
  uint64_t v93 = UTType.identifier.getter();
  uint64_t v95 = v94;
  v32(v92, v1);
  *(void *)(v72 + 112) = v93;
  *(void *)(v72 + 120) = v95;
  id v96 = v322;
  static UTType.icns.getter();
  uint64_t v97 = UTType.identifier.getter();
  uint64_t v99 = v98;
  v32(v96, v1);
  *(void *)(v72 + 128) = v97;
  *(void *)(v72 + 136) = v99;
  unsigned __int8 v100 = v318;
  static UTType.bmp.getter();
  uint64_t v101 = UTType.identifier.getter();
  uint64_t v103 = v102;
  v32(v100, v1);
  *(void *)(v72 + 144) = v101;
  *(void *)(v72 + 152) = v103;
  uint64_t v104 = v319;
  static UTType.ico.getter();
  uint64_t v105 = UTType.identifier.getter();
  uint64_t v107 = v106;
  v32(v104, v1);
  *(void *)(v72 + 160) = v105;
  *(void *)(v72 + 168) = v107;
  uint64_t v108 = v316;
  static UTType.rawImage.getter();
  uint64_t v109 = UTType.identifier.getter();
  uint64_t v111 = v110;
  v32(v108, v1);
  *(void *)(v72 + 176) = v109;
  *(void *)(v72 + 184) = v111;
  uint64_t v112 = v317;
  static UTType.svg.getter();
  uint64_t v113 = UTType.identifier.getter();
  uint64_t v115 = v114;
  v32(v112, v1);
  *(void *)(v72 + 192) = v113;
  *(void *)(v72 + 200) = v115;
  uint64_t v315 = v67;
  *(void *)(v67 + 72) = v72;
  *(_OWORD *)(v67 + 80) = v307;
  uint64_t v116 = swift_allocObject();
  *(_OWORD *)(v116 + 16) = xmmword_10059B7A0;
  static UTType.audio.getter();
  uint64_t v117 = UTType.identifier.getter();
  uint64_t v119 = v118;
  v32(v26, v1);
  *(void *)(v116 + 32) = v117;
  *(void *)(v116 + 40) = v119;
  unint64_t v120 = v326;
  static UTType.mp3.getter();
  uint64_t v121 = UTType.identifier.getter();
  uint64_t v123 = v122;
  v32((char *)v120, v1);
  *(void *)(v116 + 48) = v121;
  *(void *)(v116 + 56) = v123;
  v124 = v323;
  static UTType.mpeg4Audio.getter();
  uint64_t v125 = UTType.identifier.getter();
  uint64_t v127 = v126;
  v32(v124, v1);
  *(void *)(v116 + 64) = v125;
  *(void *)(v116 + 72) = v127;
  v128 = v324;
  static UTType.wav.getter();
  uint64_t v129 = UTType.identifier.getter();
  uint64_t v131 = v130;
  v32(v128, v1);
  *(void *)(v116 + 80) = v129;
  *(void *)(v116 + 88) = v131;
  v132 = (char *)v325;
  static UTType.midi.getter();
  uint64_t v133 = UTType.identifier.getter();
  uint64_t v135 = v134;
  v32(v132, v1);
  *(void *)(v116 + 96) = v133;
  *(void *)(v116 + 104) = v135;
  uint64_t v136 = v315;
  *(void *)(v315 + 96) = v116;
  *(_OWORD *)(v136 + 104) = v308;
  uint64_t v137 = swift_allocObject();
  *(_OWORD *)(v137 + 16) = xmmword_1005A1DF0;
  static UTType.video.getter();
  uint64_t v138 = UTType.identifier.getter();
  uint64_t v140 = v139;
  v32(v26, v1);
  *(void *)(v137 + 32) = v138;
  *(void *)(v137 + 40) = v140;
  unint64_t v141 = v326;
  static UTType.mpeg2Video.getter();
  uint64_t v142 = UTType.identifier.getter();
  uint64_t v144 = v143;
  v32((char *)v141, v1);
  *(void *)(v137 + 48) = v142;
  *(void *)(v137 + 56) = v144;
  v145 = v323;
  static UTType.movie.getter();
  uint64_t v146 = UTType.identifier.getter();
  uint64_t v148 = v147;
  v32(v145, v1);
  *(void *)(v137 + 64) = v146;
  *(void *)(v137 + 72) = v148;
  v149 = v324;
  static UTType.quickTimeMovie.getter();
  uint64_t v150 = UTType.identifier.getter();
  uint64_t v152 = v151;
  v32(v149, v1);
  *(void *)(v137 + 80) = v150;
  *(void *)(v137 + 88) = v152;
  v153 = (char *)v325;
  static UTType.mpeg.getter();
  uint64_t v154 = UTType.identifier.getter();
  uint64_t v156 = v155;
  v32(v153, v1);
  *(void *)(v137 + 96) = v154;
  *(void *)(v137 + 104) = v156;
  v157 = v321;
  static UTType.mpeg4Movie.getter();
  uint64_t v158 = UTType.identifier.getter();
  uint64_t v160 = v159;
  v32(v157, v1);
  *(void *)(v137 + 112) = v158;
  *(void *)(v137 + 120) = v160;
  v161 = v322;
  static UTType.avi.getter();
  uint64_t v162 = UTType.identifier.getter();
  uint64_t v164 = v163;
  v32(v161, v1);
  *(void *)(v137 + 128) = v162;
  *(void *)(v137 + 136) = v164;
  uint64_t v165 = v315;
  *(void *)(v315 + 120) = v137;
  *(_OWORD *)(v165 + 128) = v309;
  uint64_t v166 = swift_allocObject();
  *(_OWORD *)(v166 + 16) = xmmword_1005A1E00;
  static UTType.sourceCode.getter();
  uint64_t v167 = UTType.identifier.getter();
  uint64_t v169 = v168;
  v32(v26, v1);
  *(void *)(v166 + 32) = v167;
  *(void *)(v166 + 40) = v169;
  unint64_t v170 = v326;
  static UTType.json.getter();
  uint64_t v171 = UTType.identifier.getter();
  uint64_t v173 = v172;
  v32((char *)v170, v1);
  *(void *)(v166 + 48) = v171;
  *(void *)(v166 + 56) = v173;
  v174 = v323;
  static UTType.swiftSource.getter();
  uint64_t v175 = UTType.identifier.getter();
  uint64_t v177 = v176;
  v32(v174, v1);
  *(void *)(v166 + 64) = v175;
  *(void *)(v166 + 72) = v177;
  v178 = v324;
  static UTType.objectiveCSource.getter();
  uint64_t v179 = UTType.identifier.getter();
  uint64_t v181 = v180;
  v32(v178, v1);
  *(void *)(v166 + 80) = v179;
  *(void *)(v166 + 88) = v181;
  v182 = (char *)v325;
  static UTType.objectiveCPlusPlusSource.getter();
  uint64_t v183 = UTType.identifier.getter();
  uint64_t v185 = v184;
  v32(v182, v1);
  *(void *)(v166 + 96) = v183;
  *(void *)(v166 + 104) = v185;
  v186 = v321;
  static UTType.cSource.getter();
  uint64_t v187 = UTType.identifier.getter();
  uint64_t v189 = v188;
  v32(v186, v1);
  *(void *)(v166 + 112) = v187;
  *(void *)(v166 + 120) = v189;
  v190 = v322;
  static UTType.cHeader.getter();
  uint64_t v191 = UTType.identifier.getter();
  uint64_t v193 = v192;
  v32(v190, v1);
  *(void *)(v166 + 128) = v191;
  *(void *)(v166 + 136) = v193;
  v194 = v318;
  static UTType.cPlusPlusSource.getter();
  uint64_t v195 = UTType.identifier.getter();
  uint64_t v197 = v196;
  v32(v194, v1);
  *(void *)(v166 + 144) = v195;
  *(void *)(v166 + 152) = v197;
  v198 = v319;
  static UTType.cPlusPlusHeader.getter();
  uint64_t v199 = UTType.identifier.getter();
  uint64_t v201 = v200;
  v32(v198, v1);
  *(void *)(v166 + 160) = v199;
  *(void *)(v166 + 168) = v201;
  v202 = v316;
  static UTType.propertyList.getter();
  uint64_t v203 = UTType.identifier.getter();
  uint64_t v205 = v204;
  v32(v202, v1);
  *(void *)(v166 + 176) = v203;
  *(void *)(v166 + 184) = v205;
  v206 = v317;
  static UTType.xmlPropertyList.getter();
  uint64_t v207 = UTType.identifier.getter();
  uint64_t v209 = v208;
  v32(v206, v1);
  *(void *)(v166 + 192) = v207;
  *(void *)(v166 + 200) = v209;
  v210 = v314;
  static UTType.binaryPropertyList.getter();
  uint64_t v211 = UTType.identifier.getter();
  uint64_t v213 = v212;
  v32(v210, v1);
  *(void *)(v166 + 208) = v211;
  *(void *)(v166 + 216) = v213;
  *(void *)(v166 + 224) = 0xD000000000000022;
  *(void *)(v166 + 232) = 0x80000001005D7D80;
  *(void *)(v166 + 240) = 0xD000000000000015;
  *(void *)(v166 + 248) = 0x80000001005D7DB0;
  *(void *)(v166 + 256) = 0xD000000000000017;
  *(void *)(v166 + 264) = 0x80000001005D7DD0;
  v317 = (char *)0xD000000000000016;
  *(void *)(v166 + 272) = 0xD000000000000016;
  *(void *)(v166 + 280) = 0x80000001005D7DF0;
  *(void *)(v166 + 288) = 0xD00000000000001CLL;
  *(void *)(v166 + 296) = 0x80000001005D7E10;
  *(void *)(v166 + 304) = 0xD000000000000017;
  *(void *)(v166 + 312) = 0x80000001005D7E30;
  *(void *)(v165 + 144) = v166;
  *(_OWORD *)(v165 + 152) = v310;
  uint64_t v214 = swift_allocObject();
  *(_OWORD *)(v214 + 16) = xmmword_1005A1E10;
  static UTType.plainText.getter();
  uint64_t v215 = UTType.identifier.getter();
  uint64_t v217 = v216;
  v32(v26, v1);
  *(void *)(v214 + 32) = v215;
  *(void *)(v214 + 40) = v217;
  unint64_t v218 = v326;
  static UTType.rtf.getter();
  uint64_t v219 = UTType.identifier.getter();
  uint64_t v221 = v220;
  v32((char *)v218, v1);
  *(void *)(v214 + 48) = v219;
  *(void *)(v214 + 56) = v221;
  v222 = v323;
  static UTType.docMSOfficeWordProcessing.getter();
  uint64_t v223 = UTType.identifier.getter();
  uint64_t v225 = v224;
  v32(v222, v1);
  *(void *)(v214 + 64) = v223;
  *(void *)(v214 + 72) = v225;
  v226 = v324;
  static UTType.docMSOfficeWordProcessingTemplate.getter();
  uint64_t v227 = UTType.identifier.getter();
  uint64_t v229 = v228;
  v32(v226, v1);
  *(void *)(v214 + 80) = v227;
  *(void *)(v214 + 88) = v229;
  v230 = (char *)v325;
  static UTType.docMSOfficeXMLWordProcessing.getter();
  uint64_t v231 = UTType.identifier.getter();
  uint64_t v233 = v232;
  v32(v230, v1);
  *(void *)(v214 + 96) = v231;
  *(void *)(v214 + 104) = v233;
  v234 = v321;
  static UTType.docOfficeOpenXMLWordProcessing.getter();
  uint64_t v235 = UTType.identifier.getter();
  uint64_t v237 = v236;
  v32(v234, v1);
  *(void *)(v214 + 112) = v235;
  *(void *)(v214 + 120) = v237;
  v238 = v322;
  static UTType.docOfficeOpenXMLMacroEnabledWordProcessing.getter();
  uint64_t v239 = UTType.identifier.getter();
  uint64_t v241 = v240;
  v32(v238, v1);
  *(void *)(v214 + 128) = v239;
  *(void *)(v214 + 136) = v241;
  v242 = v318;
  static UTType.docOfficeOpenXMLWordProcessingTemplate.getter();
  uint64_t v243 = UTType.identifier.getter();
  uint64_t v245 = v244;
  v32(v242, v1);
  *(void *)(v214 + 144) = v243;
  *(void *)(v214 + 152) = v245;
  v246 = v319;
  static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.getter();
  uint64_t v247 = UTType.identifier.getter();
  uint64_t v249 = v248;
  v32(v246, v1);
  *(void *)(v214 + 160) = v247;
  *(void *)(v214 + 168) = v249;
  *(void *)(v214 + 176) = 0xD00000000000001FLL;
  *(void *)(v214 + 184) = 0x80000001005D7E50;
  *(void *)&long long v325 = 0xD00000000000001BLL;
  *(void *)(v214 + 192) = 0xD00000000000001BLL;
  *(void *)(v214 + 200) = 0x80000001005D7E70;
  *(void *)(v214 + 208) = 0xD00000000000001ELL;
  *(void *)(v214 + 216) = 0x80000001005D7E90;
  *(void *)(v214 + 224) = 0xD000000000000020;
  *(void *)(v214 + 232) = 0x80000001005D7EB0;
  *(void *)(v165 + 168) = v214;
  *(_OWORD *)(v165 + 176) = v313;
  uint64_t v250 = swift_allocObject();
  *(_OWORD *)(v250 + 16) = v327;
  static UTType.spreadsheet.getter();
  uint64_t v251 = UTType.identifier.getter();
  uint64_t v253 = v252;
  v32(v26, v1);
  *(void *)(v250 + 32) = v251;
  *(void *)(v250 + 40) = v253;
  *(void *)(v165 + 192) = v250;
  *(_OWORD *)(v165 + 200) = v312;
  uint64_t v254 = swift_allocObject();
  *(_OWORD *)(v254 + 16) = v327;
  static UTType.presentation.getter();
  uint64_t v255 = UTType.identifier.getter();
  uint64_t v257 = v256;
  v32(v26, v1);
  *(void *)(v254 + 32) = v255;
  *(void *)(v254 + 40) = v257;
  *(void *)(v165 + 216) = v254;
  *(_OWORD *)(v165 + 224) = v311;
  uint64_t v258 = swift_allocObject();
  *(_OWORD *)(v258 + 16) = v327;
  static UTType.folder.getter();
  uint64_t v259 = UTType.identifier.getter();
  uint64_t v261 = v260;
  v32(v26, v1);
  *(void *)(v258 + 32) = v259;
  *(void *)(v258 + 40) = v261;
  *(void *)(v165 + 240) = v258;
  *(_OWORD *)(v165 + 248) = xmmword_1005A1E20;
  uint64_t v262 = swift_allocObject();
  *(_OWORD *)(v262 + 16) = xmmword_1005A1E30;
  static UTType.zip.getter();
  uint64_t v263 = UTType.identifier.getter();
  uint64_t v265 = v264;
  v32(v26, v1);
  *(void *)(v262 + 32) = v263;
  *(void *)(v262 + 40) = v265;
  unint64_t v266 = v326;
  static UTType.gzip.getter();
  uint64_t v267 = UTType.identifier.getter();
  uint64_t v269 = v268;
  v32((char *)v266, v1);
  *(void *)(v262 + 48) = v267;
  *(void *)(v262 + 56) = v269;
  *(void *)(v262 + 64) = 0xD000000000000012;
  *(void *)(v262 + 72) = 0x80000001005D7EE0;
  *(void *)(v262 + 80) = 0xD000000000000017;
  *(void *)(v262 + 88) = 0x80000001005D7F00;
  *(void *)(v262 + 96) = 0xD000000000000012;
  *(void *)(v262 + 104) = 0x80000001005D7F20;
  *(void *)(v262 + 112) = 0xD000000000000017;
  *(void *)(v262 + 120) = 0x80000001005D7F40;
  *(void *)(v262 + 128) = v325;
  *(void *)(v262 + 136) = 0x80000001005D7F60;
  *(void *)(v262 + 144) = v317;
  *(void *)(v262 + 152) = 0x80000001005D7F80;
  *(void *)(v165 + 264) = v262;
  v270 = (void *)sub_100493688(v165);
  if (qword_100704EA0 != -1) {
    goto LABEL_44;
  }
LABEL_2:
  v271 = &off_1007088C0;
  swift_beginAccess();
  if (*((void *)off_1007088C0 + 2)) {
    return v305[0];
  }
  uint64_t v272 = v270[8];
  uint64_t v320 = (uint64_t)(v270 + 8);
  uint64_t v273 = 1 << *((unsigned char *)v270 + 32);
  uint64_t v274 = -1;
  if (v273 < 64) {
    uint64_t v274 = ~(-1 << v273);
  }
  unint64_t v275 = v274 & v272;
  v321 = (char *)((unint64_t)(v273 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v276 = 0;
  v319 = (char *)v270;
  do
  {
LABEL_7:
    if (v275)
    {
      unint64_t v277 = __clz(__rbit64(v275));
      v275 &= v275 - 1;
      unint64_t v278 = v277 | (v276 << 6);
    }
    else
    {
      uint64_t v279 = v276 + 1;
      if (__OFADD__(v276, 1))
      {
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
      if (v279 >= (uint64_t)v321) {
        goto LABEL_38;
      }
      unint64_t v280 = *(void *)(v320 + 8 * v279);
      ++v276;
      if (!v280)
      {
        uint64_t v276 = v279 + 1;
        if (v279 + 1 >= (uint64_t)v321) {
          goto LABEL_38;
        }
        unint64_t v280 = *(void *)(v320 + 8 * v276);
        if (!v280)
        {
          uint64_t v276 = v279 + 2;
          if (v279 + 2 >= (uint64_t)v321) {
            goto LABEL_38;
          }
          unint64_t v280 = *(void *)(v320 + 8 * v276);
          if (!v280)
          {
            uint64_t v281 = v279 + 3;
            if (v281 >= (uint64_t)v321)
            {
LABEL_38:
              swift_release();
              return v305[0];
            }
            unint64_t v280 = *(void *)(v320 + 8 * v281);
            if (!v280)
            {
              while (1)
              {
                uint64_t v276 = v281 + 1;
                if (__OFADD__(v281, 1)) {
                  break;
                }
                if (v276 >= (uint64_t)v321) {
                  goto LABEL_38;
                }
                unint64_t v280 = *(void *)(v320 + 8 * v276);
                ++v281;
                if (v280) {
                  goto LABEL_22;
                }
              }
LABEL_43:
              __break(1u);
LABEL_44:
              swift_once();
              goto LABEL_2;
            }
            uint64_t v276 = v281;
          }
        }
      }
LABEL_22:
      unint64_t v275 = (v280 - 1) & v280;
      unint64_t v278 = __clz(__rbit64(v280)) + (v276 << 6);
    }
    v282 = *(char **)(v270[7] + 8 * v278);
    uint64_t v283 = *((void *)v282 + 2);
  }
  while (!v283);
  v323 = (char *)v275;
  v324 = (char *)v276;
  long long v325 = *(_OWORD *)(v270[6] + 16 * v278);
  unint64_t v326 = *((void *)&v325 + 1);
  *(void *)&long long v327 = v325;
  sub_1000F7ECC(v325, *((unint64_t *)&v325 + 1));
  swift_bridgeObjectRetain();
  v322 = v282;
  v284 = (uint64_t *)(v282 + 40);
  while (1)
  {
    uint64_t v288 = *(v284 - 1);
    uint64_t v287 = *v284;
    swift_beginAccess();
    sub_1000F7ECC(v327, v326);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v328 = (void *)*v271;
    v270 = v328;
    v290 = v271;
    void *v271 = 0x8000000000000000;
    unint64_t v292 = sub_100042F50(v288, v287);
    uint64_t v293 = v270[2];
    BOOL v294 = (v291 & 1) == 0;
    uint64_t v295 = v293 + v294;
    if (__OFADD__(v293, v294))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v296 = v291;
    if (v270[3] < v295) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      v299 = v328;
      if (v291) {
        goto LABEL_25;
      }
    }
    else
    {
      v270 = &v328;
      sub_10035630C();
      v299 = v328;
      if (v296)
      {
LABEL_25:
        uint64_t v285 = v299[7] + 16 * v292;
        sub_1000F7EE0(*(void *)v285, *(void *)(v285 + 8));
        unint64_t v286 = v326;
        *(void *)uint64_t v285 = v327;
        *(void *)(v285 + 8) = v286;
        goto LABEL_26;
      }
    }
LABEL_34:
    v299[(v292 >> 6) + 8] |= 1 << v292;
    v300 = (uint64_t *)(v299[6] + 16 * v292);
    uint64_t *v300 = v288;
    v300[1] = v287;
    *(_OWORD *)(v299[7] + 16 * v292) = v325;
    uint64_t v301 = v299[2];
    BOOL v302 = __OFADD__(v301, 1);
    uint64_t v303 = v301 + 1;
    if (v302) {
      goto LABEL_41;
    }
    v299[2] = v303;
    swift_bridgeObjectRetain();
LABEL_26:
    v284 += 2;
    off_1007088C0 = v299;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    --v283;
    v271 = v290;
    if (!v283)
    {
      swift_bridgeObjectRelease();
      sub_1000F7EE0(v327, v326);
      v270 = v319;
      unint64_t v275 = (unint64_t)v323;
      uint64_t v276 = (uint64_t)v324;
      goto LABEL_7;
    }
  }
  sub_10034AF28(v295, isUniquelyReferenced_nonNull_native);
  v270 = v328;
  uint64_t v297 = sub_100042F50(v288, v287);
  if ((v296 & 1) == (v298 & 1))
  {
    unint64_t v292 = v297;
    v299 = v328;
    if (v296) {
      goto LABEL_25;
    }
    goto LABEL_34;
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100183B88(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v103 = a3;
  uint64_t v110 = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v101 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v102 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v96 - v7;
  uint64_t v9 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UTType();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unsigned __int8 v100 = (char *)&v96 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v96 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v96 - v21;
  uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(a2 + 16);
  uint64_t v105 = v13;
  uint64_t v106 = v18;
  uint64_t v108 = v23;
  uint64_t v104 = v4;
  if (v23)
  {
    uint64_t v97 = v20;
    uint64_t v98 = v8;
    uint64_t v109 = (void (*)(char *, uint64_t))(a2 + 32);
    uint64_t v4 = v13 + 48;
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v107 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v99 = a2;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    while (1)
    {
      uint64_t v26 = *((void *)v109 + v13);
      uint64_t v27 = v26 + 64;
      unint64_t v28 = *(void *)(v26 + 64);
      char v29 = *(unsigned char *)(v26 + 32);
      unsigned int v30 = v29 & 0x3F;
      uint64_t v31 = 1 << v29;
      if (v28)
      {
        uint64_t v32 = 0;
        unint64_t v33 = *(void *)(v26 + 64);
      }
      else
      {
        if (v30 < 7) {
          goto LABEL_73;
        }
        unint64_t v33 = *(void *)(v26 + 72);
        if (!v33)
        {
          uint64_t v34 = 0;
          unint64_t v35 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2) {
            unint64_t v35 = (unint64_t)(v31 + 63) >> 6;
          }
          unint64_t v36 = v35 - 2;
          while (v36 != v34)
          {
            unint64_t v33 = *(void *)(v26 + 80 + 8 * v34++);
            if (v33)
            {
              uint64_t v32 = v34 + 1;
              goto LABEL_14;
            }
          }
LABEL_73:
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v32 = 1;
      }
LABEL_14:
      unint64_t v37 = __clz(__rbit64(v33));
      uint64_t v38 = v37 + (v32 << 6);
      if (v38 == v31) {
        goto LABEL_73;
      }
      if (v38 < 0)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      if (v38 >= v31) {
        goto LABEL_66;
      }
      if (((*(void *)(v27 + (((unint64_t)v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_67;
      }
      if (v28)
      {
        uint64_t v39 = 0;
      }
      else
      {
        if (v30 < 7) {
          goto LABEL_74;
        }
        unint64_t v28 = *(void *)(v26 + 72);
        if (!v28)
        {
          uint64_t v40 = 0;
          unint64_t v41 = 2;
          if ((unint64_t)(v31 + 63) >> 6 > 2) {
            unint64_t v41 = (unint64_t)(v31 + 63) >> 6;
          }
          unint64_t v42 = v41 - 2;
          while (v42 != v40)
          {
            unint64_t v28 = *(void *)(v26 + 80 + 8 * v40++);
            if (v28)
            {
              uint64_t v39 = v40 + 1;
              goto LABEL_29;
            }
          }
LABEL_74:
          __break(1u);
          return result;
        }
        uint64_t v39 = 1;
      }
LABEL_29:
      unint64_t v43 = __clz(__rbit64(v28));
      uint64_t v44 = v43 + (v39 << 6);
      if (v44 == v31) {
        goto LABEL_74;
      }
      if (v44 < 0) {
        goto LABEL_68;
      }
      if (v44 >= v31) {
        goto LABEL_69;
      }
      if (((*(void *)(v27 + (((unint64_t)v44 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v43) & 1) == 0) {
        goto LABEL_70;
      }
      uint64_t v45 = (uint64_t *)(*(void *)(v26 + 48) + 16 * v44);
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      swift_bridgeObjectRetain();
      sub_1000F7ECC(v46, v47);
      UTType.init(_:)();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v4)(v11, 1, v12) == 1)
      {
        swift_bridgeObjectRelease();
        sub_1000F7EE0(v46, v47);
        sub_10018482C((uint64_t)v11);
        return 0;
      }
      (*v24)(v22, v11, v12);
      if (UTType.conforms(to:)())
      {
        swift_bridgeObjectRelease();
        if (qword_100704EA0 != -1) {
          swift_once();
        }
        uint64_t v55 = v110;
        uint64_t v56 = UTType.identifier.getter();
        uint64_t v58 = v57;
        swift_beginAccess();
        sub_1000F7ECC(v46, v47);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v111 = off_1007088C0;
        off_1007088C0 = (_UNKNOWN *)0x8000000000000000;
        sub_1003DF2DC(v46, v47, v56, v58, isUniquelyReferenced_nonNull_native);
        off_1007088C0 = v111;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v60 = v98;
        static Logger.UI.getter();
        uint64_t v61 = v97;
        (*(void (**)(char *, void *, uint64_t))(v105 + 16))(v97, v55, v12);
        sub_1000F7ECC(v46, v47);
        sub_1000F7ECC(v46, v47);
        uint64_t v62 = Logger.logObject.getter();
        os_log_type_t v63 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = swift_slowAlloc();
          uint64_t v110 = (void *)swift_slowAlloc();
          uint64_t v111 = v110;
          *(_DWORD *)uint64_t v64 = 136315394;
          uint64_t v65 = UTType.identifier.getter();
          *(void *)&long long v112 = sub_10009B0E4(v65, v66, (uint64_t *)&v111);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v109 = *v107;
          v109(v61, v12);
          *(_WORD *)(v64 + 12) = 2080;
          *(void *)&long long v112 = v46;
          *((void *)&v112 + 1) = v47;
          sub_1000F7ECC(v46, v47);
          uint64_t v67 = String.init<A>(describing:)();
          *(void *)&long long v112 = sub_10009B0E4(v67, v68, (uint64_t *)&v111);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1000F7EE0(v46, v47);
          sub_1000F7EE0(v46, v47);
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "Dynamically mapped %s to DOCItemFileTypeGroupCategory %s", (uint8_t *)v64, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v101 + 8))(v98, v104);
          v109(v22, v12);
        }
        else
        {

          sub_1000F7EE0(v46, v47);
          sub_1000F7EE0(v46, v47);
          uint64_t v69 = *v107;
          (*v107)(v61, v12);
          (*(void (**)(char *, uint64_t))(v101 + 8))(v60, v104);
          v69(v22, v12);
        }
        return v46;
      }
      ++v13;
      (*v107)(v22, v12);
      uint64_t result = sub_1000F7EE0(v46, v47);
      if ((void (*)(char *, unint64_t, uint64_t))v13 == v108)
      {
        swift_bridgeObjectRelease();
        uint64_t v4 = v104;
        uint64_t v13 = v105;
        uint64_t v18 = v106;
        break;
      }
    }
  }
  uint64_t v48 = v103;
  uint64_t v109 = *(void (**)(char *, uint64_t))(v103 + 16);
  if (!v109) {
    goto LABEL_59;
  }
  unint64_t v49 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v50 = v13;
  uint64_t v51 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v13 += 16;
  uint64_t v108 = v51;
  v51(v18, v103 + v49, v12);
  unint64_t v52 = sub_10018488C();
  swift_bridgeObjectRetain();
  uint64_t v107 = (void (**)(char *, uint64_t))v52;
  char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v54 = *(void (**)(char *, uint64_t))(v50 + 8);
  v54(v18, v12);
  if ((v53 & 1) == 0)
  {
    if (v109 != (void (*)(char *, uint64_t))1)
    {
      uint64_t v70 = v106;
      uint64_t v71 = *(void *)(v105 + 72);
      unint64_t v72 = v48 + v71 + v49;
      uint64_t v4 = 1;
      while (1)
      {
        v108(v70, v72, v12);
        uint64_t v73 = (void (*)(char *, uint64_t))(v4 + 1);
        if (__OFADD__(v4, 1)) {
          break;
        }
        char v74 = dispatch thunk of static Equatable.== infix(_:_:)();
        v54(v70, v12);
        if (v74)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v104;
          goto LABEL_55;
        }
        ++v4;
        v72 += v71;
        if (v73 == v109)
        {
          swift_bridgeObjectRelease();
          uint64_t v4 = v104;
          goto LABEL_53;
        }
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    swift_bridgeObjectRelease();
LABEL_53:
    uint64_t v13 = v105;
LABEL_59:
    if (qword_100704EA0 == -1)
    {
LABEL_60:
      uint64_t v82 = v110;
      uint64_t v83 = UTType.identifier.getter();
      uint64_t v85 = v84;
      swift_beginAccess();
      char v86 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v111 = off_1007088C0;
      off_1007088C0 = (_UNKNOWN *)0x8000000000000000;
      sub_1003DF2DC(0, 10, v83, v85, v86);
      off_1007088C0 = v111;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      uint64_t v87 = v102;
      static Logger.UI.getter();
      unint64_t v88 = v100;
      (*(void (**)(char *, void *, uint64_t))(v13 + 16))(v100, v82, v12);
      uint64_t v89 = Logger.logObject.getter();
      os_log_type_t v90 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v89, v90))
      {
        uint64_t v91 = swift_slowAlloc();
        uint64_t v111 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v91 = 136315394;
        uint64_t v92 = UTType.identifier.getter();
        *(void *)&long long v112 = sub_10009B0E4(v92, v93, (uint64_t *)&v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v12);
        *(_WORD *)(v91 + 12) = 2080;
        long long v112 = xmmword_1005A1E40;
        uint64_t v94 = String.init<A>(describing:)();
        *(void *)&long long v112 = sub_10009B0E4(v94, v95, (uint64_t *)&v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v89, v90, "Could not map %s to a DOCItemFileTypeGroupCategory. Caching result category: %s", (uint8_t *)v91, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v104);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v13 + 8))(v88, v12);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v87, v4);
      }
      return 0;
    }
LABEL_72:
    swift_once();
    goto LABEL_60;
  }
  swift_bridgeObjectRelease();
LABEL_55:
  uint64_t v75 = UTType.localizedDescription.getter();
  uint64_t v13 = v105;
  if (!v76) {
    goto LABEL_59;
  }
  uint64_t v46 = v75;
  uint64_t v77 = v76;
  if (qword_100704EA0 != -1) {
    swift_once();
  }
  uint64_t v78 = UTType.identifier.getter();
  uint64_t v80 = v79;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v81 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v111 = off_1007088C0;
  off_1007088C0 = (_UNKNOWN *)0x8000000000000000;
  sub_1003DF2DC(v46, v77, v78, v80, v81);
  off_1007088C0 = v111;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return v46;
}

uint64_t sub_10018482C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100708110);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10018488C()
{
  unint64_t result = qword_100705C30;
  if (!qword_100705C30)
  {
    type metadata accessor for UTType();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100705C30);
  }
  return result;
}

void *sub_1001848E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v5 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v5 - 8);
  uint64_t v40 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  unint64_t v35 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v32 = v3;
    unint64_t v41 = _swiftEmptyArrayStorage;
    sub_100190DA4(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v12 = *(void *)(v7 + 72);
    unint64_t v33 = (void (**)(void *, uint64_t))(v7 + 8);
    uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    do
    {
      uint64_t v13 = UTType.identifier.getter();
      uint64_t v15 = v14;
      if (qword_100704EA0 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v16 = off_1007088C0;
      if (*((void *)off_1007088C0 + 2))
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_100042F50(v13, v15);
        if (v18)
        {
          uint64_t v19 = (uint64_t *)(v16[7] + 16 * v17);
          uint64_t v20 = *v19;
          unint64_t v21 = v19[1];
          swift_endAccess();
          sub_1000F7ECC(v20, v21);
          swift_bridgeObjectRelease();
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      v22._uint64_t countAndFlagsBits = 778991972;
      v22._object = (void *)0xE400000000000000;
      if (!String.hasPrefix(_:)(v22))
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = (uint64_t)v40;
        UTType.init(_:)();
        uint64_t v24 = v39;
        if ((*v38)(v23, 1, v39) != 1)
        {
          unint64_t v28 = v35;
          (*v34)(v35, v23, v24);
          uint64_t v29 = sub_100183B88(v28, v36, v37);
          unint64_t v21 = v30;
          (*v33)(v28, v24);
          swift_bridgeObjectRelease();
          if (v21 == 11) {
            uint64_t v20 = 0;
          }
          else {
            uint64_t v20 = v29;
          }
          if (v21 == 11) {
            unint64_t v21 = 10;
          }
          goto LABEL_14;
        }
        sub_10018482C(v23);
      }
      uint64_t v20 = 0;
      unint64_t v21 = 10;
LABEL_13:
      swift_bridgeObjectRelease();
LABEL_14:
      uint64_t v10 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190DA4(0, v10[2] + 1, 1);
        uint64_t v10 = v41;
      }
      unint64_t v26 = v10[2];
      unint64_t v25 = v10[3];
      if (v26 >= v25 >> 1)
      {
        sub_100190DA4(v25 > 1, v26 + 1, 1);
        uint64_t v10 = v41;
      }
      void v10[2] = v26 + 1;
      uint64_t v27 = &v10[2 * v26];
      v27[4] = v20;
      v27[5] = v21;
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t destroy for DOCItemFileTypeGroupCategory(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s5Files28DOCItemFileTypeGroupCategoryOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DOCItemFileTypeGroupCategory(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCItemFileTypeGroupCategory(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF4 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483637);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 10;
  if (v4 >= 0xC) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemFileTypeGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 10;
    }
  }
  return result;
}

uint64_t sub_100184E8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_100184EA4(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemFileTypeGroupCategory()
{
  return &type metadata for DOCItemFileTypeGroupCategory;
}

unint64_t sub_100184ED8()
{
  unint64_t result = qword_1007088E0;
  if (!qword_1007088E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007088E0);
  }
  return result;
}

id sub_100184F8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUIImageMenuItem();
  return [super dealloc];
}

id sub_100184FD4(id result)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    goto LABEL_56;
  }
  unint64_t v3 = v1;
  char v4 = (char)result;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    swift_unknownObjectRetain();
    if (!v5) {
      goto LABEL_14;
    }
  }
  swift_getObjectType();
  uint64_t v6 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v6)
  {
    if ([v6 isTrashed])
    {
    }
    else
    {
      uint64_t v7 = (void *)FPActionImportHere;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v6;
      unint64_t v66 = inited;
      specialized Array._endMutation()();
      id v9 = v6;
      LOBYTE(v7) = sub_1000301E0(v7, v66);
      swift_bridgeObjectRelease();

      if (v7)
      {
        unint64_t result = (id)_DocumentManagerBundle();
        if (!result)
        {
LABEL_58:
          __break(1u);
          goto LABEL_59;
        }
        uint64_t v10 = result;
        type metadata accessor for DOCUIImageMenuItem();
        v11._uint64_t countAndFlagsBits = 0xD000000000000019;
        v68._object = (void *)0x80000001005D8370;
        v11._object = (void *)0x80000001005D8350;
        v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v12._object = (void *)0xEB00000000656C62;
        v13._uint64_t countAndFlagsBits = 0x646C6F462077654ELL;
        v13._object = (void *)0xEA00000000007265;
        v68._uint64_t countAndFlagsBits = 0xD000000000000024;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v68);

        id v14 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
        NSString v15 = String._bridgeToObjectiveC()();
        id v16 = [self systemImageNamed:v15 _swiftEmptyArrayStorage:0 0 0 0];

        [v14 setImage:v16];
        id v17 = v14;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        int v18 = 1;
        if ((v4 & 1) == 0) {
          goto LABEL_29;
        }
        goto LABEL_15;
      }
    }
  }
LABEL_14:
  int v18 = 0;
  if ((v4 & 1) == 0) {
    goto LABEL_29;
  }
LABEL_15:
  if ((v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
      swift_unknownObjectRetain();
      if (!v19) {
        goto LABEL_29;
      }
    }
    swift_getObjectType();
    uint64_t v20 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    swift_unknownObjectRelease();
    if (v20)
    {
      uint64_t v21 = sub_1003EA398(v20, 1);
      if (v21 < 1)
      {
        id v29 = v20;
      }
      else
      {
        uint64_t v22 = v21;
        v23._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
        v24._object = (void *)0x80000001005D82E0;
        v23._object = (void *)0x80000001005D8310;
        v24._uint64_t countAndFlagsBits = 0xD000000000000024;
        DOCLocalizedDictionaryString(_:comment:)(v24, v23);
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
        *(void *)(v25 + 56) = &type metadata for Int;
        *(void *)(v25 + 64) = &protocol witness table for Int;
        *(void *)(v25 + 32) = v22;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        type metadata accessor for DOCUIImageMenuItem();
        id v26 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
        NSString v27 = String._bridgeToObjectiveC()();
        id v28 = [self systemImageNamed:v27 _swiftEmptyArrayStorage:0 0 0 0];

        [v26 setImage:v28];
        id v29 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
LABEL_29:
  uint64_t v30 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v30 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v31 = *(void *)(v30 + 8);
    swift_unknownObjectRetain();
    if (!v31) {
      goto LABEL_39;
    }
  }
  swift_getObjectType();
  uint64_t v32 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v32)
  {
    uint64_t v33 = sub_1003EA75C(v32, v3, 0);
    if (v33 < 1)
    {
      id v41 = v32;
    }
    else
    {
      uint64_t v34 = v33;
      v35._uint64_t countAndFlagsBits = 0xD000000000000028;
      v36._uint64_t countAndFlagsBits = 0xD000000000000033;
      v35._object = (void *)0x80000001005D8270;
      v36._object = (void *)0x80000001005D82A0;
      DOCLocalizedDictionaryString(_:comment:)(v35, v36);
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1005A0030;
      *(void *)(v37 + 56) = &type metadata for Int;
      *(void *)(v37 + 64) = &protocol witness table for Int;
      *(void *)(v37 + 32) = v34;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for DOCUIImageMenuItem();
      id v38 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
      NSString v39 = String._bridgeToObjectiveC()();
      id v40 = [self systemImageNamed:v39 _swiftEmptyArrayStorage:0 0 0 0];

      [v38 setImage:v40];
      id v41 = v38;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_39:
  if (!v18
    || ![self isSupported]
    || ![*(id *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isFilesApp])
  {
    goto LABEL_46;
  }
  unint64_t result = (id)_DocumentManagerBundle();
  if (result)
  {
    unint64_t v42 = result;
    type metadata accessor for DOCUIImageMenuItem();
    v43._uint64_t countAndFlagsBits = 0xD000000000000023;
    v69._uint64_t countAndFlagsBits = 0xD000000000000047;
    v69._object = (void *)0x80000001005D8200;
    v43._object = (void *)0x80000001005D81D0;
    v44._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v44._object = (void *)0xEB00000000656C62;
    v45._uint64_t countAndFlagsBits = 0x636F44206E616353;
    v45._object = (void *)0xEE0073746E656D75;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v69);

    id v46 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    NSString v47 = String._bridgeToObjectiveC()();
    id v48 = [self systemImageNamed:v47 _swiftEmptyArrayStorage:0 0 0 0];

    [v46 setImage:v48];
    id v49 = v46;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

LABEL_46:
    if (*(unsigned char *)(v30 + 16))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v50 = *(void *)(v30 + 8);
      swift_unknownObjectRetain();
      if (!v50)
      {
        unint64_t v52 = _swiftEmptyArrayStorage;
        goto LABEL_54;
      }
    }
    swift_getObjectType();
    uint64_t v51 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    swift_unknownObjectRelease();
    unint64_t v52 = _swiftEmptyArrayStorage;
    if (!v51)
    {
LABEL_54:
      sub_1000CBE70((uint64_t *)&unk_100708B40);
      unint64_t result = (id)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_10059B760;
      *((void *)result + 4) = _swiftEmptyArrayStorage;
      *((void *)result + 5) = v52;
      return result;
    }
    unint64_t result = (id)_DocumentManagerBundle();
    if (result)
    {
      char v53 = result;
      type metadata accessor for DOCUIImageMenuItem();
      v70._uint64_t countAndFlagsBits = 0xD000000000000050;
      v70._object = (void *)0x80000001005D64D0;
      v54._uint64_t countAndFlagsBits = 0x6F666E4920746547;
      v54._object = (void *)0xE800000000000000;
      v55._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v55._object = (void *)0xEB00000000656C62;
      v56._uint64_t countAndFlagsBits = 0;
      v56._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v70);

      uint64_t v57 = (char *)(id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
      NSString v58 = String._bridgeToObjectiveC()();
      id v59 = [self systemImageNamed:v58 _swiftEmptyArrayStorage:0 0 0 0];

      [v57 setImage:v59];
      unint64_t result = (id)_DocumentManagerBundle();
      if (result)
      {
        uint64_t v60 = result;
        v61._uint64_t countAndFlagsBits = 0xD000000000000020;
        v71._uint64_t countAndFlagsBits = 0xD000000000000064;
        v71._object = (void *)0x80000001005D8160;
        v61._object = (void *)0x80000001005D8130;
        v62._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v62._object = (void *)0xEB00000000656C62;
        v63._uint64_t countAndFlagsBits = 0x6F666E4920746547;
        v63._object = (void *)0xE800000000000000;
        Swift::String v64 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v61, v62, (NSBundle)v60, v63, v71);

        *(Swift::String *)&v57[OBJC_IVAR____TtC5Files18DOCUIImageMenuItem_longTitle] = v64;
        swift_bridgeObjectRelease();
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v65 = swift_allocObject();
        *(_OWORD *)(v65 + 16) = xmmword_1005A04F0;
        *(void *)(v65 + 32) = v57;
        uint64_t v67 = (void *)v65;
        specialized Array._endMutation()();
        unint64_t v52 = v67;

        goto LABEL_54;
      }
      goto LABEL_57;
    }
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
LABEL_59:
  __break(1u);
  return result;
}

void sub_100185C24(uint64_t a1, char *a2)
{
  uint64_t v2 = *(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    goto LABEL_101;
  }
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    swift_unknownObjectRetain();
    if (!v4)
    {
LABEL_13:
      int v18 = 0;
      goto LABEL_14;
    }
  }
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (!v5) {
    goto LABEL_13;
  }
  if ([v5 isTrashed])
  {

    goto LABEL_13;
  }
  uint64_t v6 = (void *)FPActionImportHere;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = v5;
  unint64_t v112 = inited;
  specialized Array._endMutation()();
  id v8 = v5;
  LOBYTE(v6) = sub_1000301E0(v6, v112);
  swift_bridgeObjectRelease();

  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  id v9 = (id)_DocumentManagerBundle();
  if (!v9)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  uint64_t v10 = v9;
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  v11._uint64_t countAndFlagsBits = 0xD000000000000019;
  v117._uint64_t countAndFlagsBits = 0xD000000000000024;
  v117._object = (void *)0x80000001005D8370;
  v11._object = (void *)0x80000001005D8350;
  v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v12._object = (void *)0xEB00000000656C62;
  v13._uint64_t countAndFlagsBits = 0x646C6F462077654ELL;
  v13._object = (void *)0xEA00000000007265;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v117);

  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self systemImageNamed:v14];

  *(void *)(swift_allocObject() + 16) = a2;
  id v16 = a2;
  UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
  v111._rawValue = 0;
  id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

  int v18 = 1;
LABEL_14:
  if ((a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) != 0
    || !*(void *)&a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
    && (a2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) == 0)
  {
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
      swift_unknownObjectRetain();
      if (!v19) {
        goto LABEL_28;
      }
    }
    swift_getObjectType();
    uint64_t v20 = (void *)DOCNode.fpfs_syncFetchFPItem()();
    swift_unknownObjectRelease();
    if (v20)
    {
      if (sub_1003EA398(v20, 1) < 1)
      {
        id v25 = v20;
      }
      else
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        NSString v21 = String._bridgeToObjectiveC()();
        id v22 = [self systemImageNamed:v21];

        *(void *)(swift_allocObject() + 16) = a2;
        Swift::String v23 = a2;
        Swift::String v24 = UIActionPaste;
        UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
        v111._rawValue = 0;
        id v25 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
  }
LABEL_28:
  uint64_t v26 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v27 = *(void *)(v26 + 8);
    swift_unknownObjectRetain();
    if (!v27) {
      goto LABEL_38;
    }
  }
  swift_getObjectType();
  id v28 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v28)
  {
    uint64_t v29 = sub_1003EA75C(v28, a2, 1);
    if (v29 < 1)
    {
      id v37 = v28;
    }
    else
    {
      uint64_t v30 = v29;
      v31._uint64_t countAndFlagsBits = 0xD000000000000028;
      v32._uint64_t countAndFlagsBits = 0xD000000000000033;
      v31._object = (void *)0x80000001005D8270;
      v32._object = (void *)0x80000001005D82A0;
      DOCLocalizedDictionaryString(_:comment:)(v31, v32);
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1005A0030;
      *(void *)(v33 + 56) = &type metadata for Int;
      *(void *)(v33 + 64) = &protocol witness table for Int;
      *(void *)(v33 + 32) = v30;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      NSString v34 = String._bridgeToObjectiveC()();
      id v35 = [self systemImageNamed:v34];

      *(void *)(swift_allocObject() + 16) = a2;
      Swift::String v36 = a2;
      UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
      v111._rawValue = 0;
      id v37 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
LABEL_38:
  if (v18
    && [self isSupported]
    && [*(id *)&a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isFilesApp])
  {
    id v38 = (id)_DocumentManagerBundle();
    if (!v38)
    {
LABEL_105:
      __break(1u);
      return;
    }
    NSString v39 = v38;
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    v40._uint64_t countAndFlagsBits = 0xD000000000000023;
    v118._uint64_t countAndFlagsBits = 0xD000000000000047;
    v118._object = (void *)0x80000001005D8200;
    v40._object = (void *)0x80000001005D81D0;
    v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v41._object = (void *)0xEB00000000656C62;
    v42._uint64_t countAndFlagsBits = 0x636F44206E616353;
    v42._object = (void *)0xEE0073746E656D75;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v118);

    NSString v43 = String._bridgeToObjectiveC()();
    id v44 = [self systemImageNamed:v43];

    *(void *)(swift_allocObject() + 16) = a2;
    Swift::String v45 = a2;
    UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
    v111._rawValue = 0;
    id v46 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (*(unsigned char *)(v26 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v47 = *(void *)(v26 + 8);
    swift_unknownObjectRetain();
    if (!v47) {
      goto LABEL_53;
    }
  }
  swift_getObjectType();
  id v48 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (v48)
  {
    id v49 = (id)_DocumentManagerBundle();
    if (v49)
    {
      uint64_t v50 = v49;
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      v119._uint64_t countAndFlagsBits = 0xD000000000000050;
      v119._object = (void *)0x80000001005D64D0;
      v51._uint64_t countAndFlagsBits = 0x6F666E4920746547;
      v51._object = (void *)0xE800000000000000;
      v52._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v52._object = (void *)0xEB00000000656C62;
      v53._uint64_t countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v119);

      NSString v54 = String._bridgeToObjectiveC()();
      id v55 = [self systemImageNamed:v54];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
      v111._rawValue = 0;
      id v56 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_53;
    }
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
LABEL_53:
  uint64_t v57 = self;
  id v58 = [v57 shared];
  unsigned int v59 = [v58 canUndo];

  if (!v59) {
    goto LABEL_58;
  }
  id v60 = [v57 shared];
  id v61 = [v60 undoActionName];

  uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v64 = v63;

  id v65 = (id)_DocumentManagerBundle();
  if (!v65)
  {
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  unint64_t v66 = v65;
  v67._uint64_t countAndFlagsBits = 0x4025206F646E55;
  swift__stringc._object = (void *)0x80000001005D85D0;
  v67._object = (void *)0xE700000000000000;
  v68._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v68._object = (void *)0xEB00000000656C62;
  v69._uint64_t countAndFlagsBits = 0;
  v69._object = (void *)0xE000000000000000;
  swift__stringc._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v67, v68, (NSBundle)v66, v69, swift__stringc);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1005A0030;
  *(void *)(v70 + 56) = &type metadata for String;
  *(void *)(v70 + 64) = sub_100073F48();
  *(void *)(v70 + 32) = v62;
  *(void *)(v70 + 40) = v64;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  NSString v71 = String._bridgeToObjectiveC()();
  id v72 = [self systemImageNamed:v71];

  UIMenuElementSize preferredElementSize = UIMenuElementSizeSmall;
  v111._rawValue = 0;
  id v73 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_58:
  id v74 = [v57 shared:preferredElementSize];
  unsigned int v75 = [v74 canRedo];

  if (!v75) {
    goto LABEL_63;
  }
  id v76 = [v57 shared];
  id v77 = [v76 redoActionName];

  uint64_t v78 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v80 = v79;

  id v81 = (id)_DocumentManagerBundle();
  if (!v81) {
    goto LABEL_103;
  }
  uint64_t v82 = v81;
  swift__stringd._object = (void *)0x80000001005D8550;
  v83._uint64_t countAndFlagsBits = 0x4025206F646552;
  v83._object = (void *)0xE700000000000000;
  v84._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v84._object = (void *)0xEB00000000656C62;
  v85._uint64_t countAndFlagsBits = 0;
  v85._object = (void *)0xE000000000000000;
  swift__stringd._uint64_t countAndFlagsBits = 0xD00000000000005ELL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v83, v84, (NSBundle)v82, v85, swift__stringd);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1005A0030;
  *(void *)(v86 + 56) = &type metadata for String;
  *(void *)(v86 + 64) = sub_100073F48();
  *(void *)(v86 + 32) = v78;
  *(void *)(v86 + 40) = v80;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  NSString v87 = String._bridgeToObjectiveC()();
  id v88 = [self systemImageNamed:v87];

  v111._rawValue = 0;
  id v89 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_63:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v94)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      swift_bridgeObjectRetain();
      uint64_t v91 = (void *)_bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
  }
  else
  {
    uint64_t v90 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v90)
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      uint64_t v91 = _swiftEmptyArrayStorage;
LABEL_66:
      sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
      v92._uint64_t countAndFlagsBits = 0;
      v92._object = (void *)0xE000000000000000;
      v113.value.super.Class isa = 0;
      v113.is_nil = 0;
      v93.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v92, (Swift::String_optional)0, v113, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v91, v111).super.super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_70;
    }
  }
  swift_bridgeObjectRelease();
  v93.super.super.Class isa = 0;
LABEL_70:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v99)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      swift_bridgeObjectRetain();
      uint64_t v96 = (void *)_bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_73;
    }
  }
  else
  {
    uint64_t v95 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v95)
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      uint64_t v96 = _swiftEmptyArrayStorage;
LABEL_73:
      sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
      v97._uint64_t countAndFlagsBits = 0;
      v97._object = (void *)0xE000000000000000;
      v114.value.super.Class isa = 0;
      v114.is_nil = 0;
      v98.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v97, (Swift::String_optional)0, v114, (UIMenuIdentifier_optional)1, 2uLL, (UIMenuElementSize)v96, v111).super.super.isa;
      swift_bridgeObjectRelease();
      goto LABEL_77;
    }
  }
  swift_bridgeObjectRelease();
  v98.super.super.Class isa = 0;
LABEL_77:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v104)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      swift_bridgeObjectRetain();
      uint64_t v101 = (void *)_bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
LABEL_80:
      sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
      v102._uint64_t countAndFlagsBits = 0;
      v102._object = (void *)0xE000000000000000;
      v115.value.super.Class isa = 0;
      v115.is_nil = 0;
      v103.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v102, (Swift::String_optional)0, v115, (UIMenuIdentifier_optional)1, 2uLL, (UIMenuElementSize)v101, v111).super.super.isa;
      swift_bridgeObjectRelease();
      if (!v93.super.super.isa) {
        goto LABEL_88;
      }
LABEL_85:
      uint64_t v105 = v93.super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_88;
    }
  }
  else
  {
    uint64_t v100 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v100)
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      uint64_t v101 = _swiftEmptyArrayStorage;
      goto LABEL_80;
    }
  }
  swift_bridgeObjectRelease();
  v103.super.super.Class isa = 0;
  if (v93.super.super.isa) {
    goto LABEL_85;
  }
LABEL_88:
  if (v98.super.super.isa)
  {
    uint64_t v106 = v98.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v103.super.super.isa)
  {
    uint64_t v107 = v103.super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_bridgeObjectRetain();
    uint64_t v108 = (void *)_bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    uint64_t v108 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v109._uint64_t countAndFlagsBits = 0;
  v109._object = (void *)0xE000000000000000;
  v116.value.super.Class isa = 0;
  v116.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v109, (Swift::String_optional)0, v116, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v108, v111);
}

void sub_1001871D8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = Strong;
    [Strong displayInfoForCurrentItem:a1];
  }
}

void sub_10018723C(uint64_t a1)
{
}

void sub_100187248(uint64_t a1)
{
}

void sub_100187254(uint64_t a1, SEL *a2)
{
  id v3 = [self shared];
  [v3 *a2];
}

void sub_1001872BC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v0;
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v3 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 8);
    swift_unknownObjectRetain();
    if (!v4)
    {
      uint64_t v5 = 0;
      goto LABEL_6;
    }
  }
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
LABEL_6:
  type metadata accessor for DOCPasteboardHandler();
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v5;
  id v8 = v5;
  sub_1003C780C((uint64_t)v5, v6, v2, (uint64_t)sub_10018DCD4, v7);

  swift_release();
}

void sub_1001873F4(unint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v59 = a4;
  id v61 = a3;
  uint64_t v6 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  id v56 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  NSString v14 = (char *)&v48 - v13;
  uint64_t v15 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v15 - 8);
  id v60 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v22 = __chkstk_darwin(v21);
  id v25 = (char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v52 = v23;
    uint64_t v53 = v22;
    uint64_t v54 = v7;
    id v55 = v9;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        uint64_t v49 = v6;
        uint64_t v50 = v20;
        Swift::String v51 = v14;
        uint64_t v48 = v18;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v27)
          {
            __break(1u);
LABEL_27:
            uint64_t v62 = v27;
            _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
            __break(1u);
            return;
          }
          id v28 = *(id *)(a1 + 32);
        }
        uint64_t v29 = v28;
        swift_bridgeObjectRelease();
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1005A04F0;
        *(void *)(v30 + 32) = v29;
        aBlock[0] = v30;
        specialized Array._endMutation()();
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v31 = v29;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
        aBlock[5] = 0;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000A884;
        void aBlock[3] = &unk_100694490;
        uint64_t v33 = _Block_copy(aBlock);
        swift_release();
        NSString v34 = v61;
        [v61 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v33];
        _Block_release(v33);
        swift_bridgeObjectRelease();

        if (a2)
        {

          return;
        }
        (*(void (**)(char *, void, uint64_t))(v48 + 104))(v50, enum case for DOCAnalyticsActionEvent.Action.movedTo(_:), v17);
        id v35 = *(void **)&v34[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
        swift_bridgeObjectRetain();
        id v36 = v35;
        DOCAnalyticsActionEvent.FileProvider.init(items:)();
        id v37 = [self mainBundle];
        id v38 = [v37 bundleIdentifier];

        if (v38)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v39 = v49;
        if (v59)
        {
          DOCNode.sourceIdentifier.getter();
          Swift::String v40 = v56;
          DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v51, v40, v58);
        }
        else
        {
          (*(void (**)(char *, void, uint64_t))(v57 + 104))(v51, enum case for DOCAnalyticsActionEvent.Source.other(_:), v58);
        }
        Swift::String v41 = &v34[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
        swift_beginAccess();
        uint64_t v27 = *(void *)v41;
        if (*(void *)v41 < 3uLL)
        {
          (*(void (**)(char *, void, uint64_t))(v54 + 104))(v55, *(unsigned int *)*(&off_1006945A8 + v27), v39);
          DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
          type metadata accessor for DOCAnalyticsManager();
          Swift::String v42 = (void *)static DOCAnalyticsManager.shared.getter();
          DOCAnalyticsManager.sendActionEvent(_:)();

          (*(void (**)(char *, uint64_t))(v52 + 8))(v25, v53);
          return;
        }
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v26 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v26) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (a2)
  {
    swift_errorRetain();
    NSString v43 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_10059B760;
    *(void *)(v44 + 56) = &type metadata for String;
    *(void *)(v44 + 64) = sub_100073F48();
    *(void *)(v44 + 32) = 0xD000000000000023;
    *(void *)(v44 + 40) = 0x80000001005D84D0;
    uint64_t v45 = _convertErrorToNSError(_:)();
    *(void *)(v44 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v44 + 104) = sub_10018DCDC();
    *(void *)(v44 + 72) = v45;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    id v46 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1005A0030;
    *(void *)(v47 + 56) = &type metadata for String;
    *(void *)(v47 + 64) = sub_100073F48();
    *(void *)(v47 + 32) = 0xD000000000000023;
    *(void *)(v47 + 40) = 0x80000001005D84D0;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_100187C20()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v2 + 16))
  {
    uint64_t v3 = *(void **)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 8);
    swift_unknownObjectRetain();
    if (!v3) {
      return;
    }
  }
  id v4 = [v3 fpfs_fpItem];
  swift_unknownObjectRelease();
  if (v4)
  {
    id v5 = [self defaultPermission];
    id v6 = [v5 dataOwnerStateForNode:v4];

    if (v6 == (id)1) {
      uint64_t v7 = 2;
    }
    else {
      uint64_t v7 = v6 == (id)2;
    }
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v4;
    *(void *)(v8 + 24) = v0;
    id v9 = v4;
    sub_1003C9E88(v7, v0, (uint64_t)sub_10018DCCC, v8);

    swift_release();
  }
}

uint64_t sub_100187D8C(unint64_t a1, void *a2, char *a3)
{
  id v51 = a2;
  uint64_t v52 = a3;
  uint64_t v4 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v8 - 8);
  uint64_t v53 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCOperationItem();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  NSString v14 = (void **)((char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v43 - v15);
  uint64_t v17 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v17 - 8);
  uint64_t v49 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v45 = *(void *)(v19 - 8);
  uint64_t v46 = v19;
  __chkstk_darwin(v19);
  id v56 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v55 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t v54 = v5;
  if (v22)
  {
    uint64_t v58 = _swiftEmptyArrayStorage;
    sub_100190F0C(0, v22 & ~(v22 >> 63), 0);
    if (v22 < 0)
    {
      __break(1u);
      goto LABEL_22;
    }
    NSString v43 = v7;
    uint64_t v44 = v4;
    uint64_t v23 = v58;
    if ((v55 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v22; ++i)
      {
        *uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v58 = v23;
        unint64_t v27 = v23[2];
        unint64_t v26 = v23[3];
        if (v27 >= v26 >> 1)
        {
          sub_100190F0C(v26 > 1, v27 + 1, 1);
          uint64_t v23 = v58;
        }
        v23[2] = v27 + 1;
        sub_10010C430((uint64_t)v16, (uint64_t)v23+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v27);
      }
    }
    else
    {
      id v28 = (void **)(v55 + 32);
      do
      {
        uint64_t v29 = *v28;
        char *v14 = *v28;
        swift_storeEnumTagMultiPayload();
        uint64_t v58 = v23;
        unint64_t v31 = v23[2];
        unint64_t v30 = v23[3];
        id v32 = v29;
        if (v31 >= v30 >> 1)
        {
          sub_100190F0C(v30 > 1, v31 + 1, 1);
          uint64_t v23 = v58;
        }
        v23[2] = v31 + 1;
        sub_10010C430((uint64_t)v14, (uint64_t)v23+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v31);
        ++v28;
        --v22;
      }
      while (v22);
    }
    uint64_t v7 = v43;
    uint64_t v4 = v44;
  }
  id v33 = [self defaultManager];
  NSString v34 = v52;
  sub_100535854(0, (uint64_t)v23, v51, 0, 0, 1, v52, 0, 0);

  swift_bridgeObjectRelease();
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v56, enum case for DOCAnalyticsActionEvent.Action.movedTo(_:), v46);
  id v35 = *(void **)&v34[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  swift_bridgeObjectRetain();
  id v36 = v35;
  DOCAnalyticsActionEvent.FileProvider.init(items:)();
  id v37 = [self mainBundle];
  id v38 = [v37 bundleIdentifier];

  if (v38)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  DOCNode.sourceIdentifier.getter();
  DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
  uint64_t v39 = &v34[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  uint64_t v24 = *(void *)v39;
  if (*(void *)v39 < 3uLL)
  {
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v7, *(unsigned int *)*(&off_1006945A8 + v24), v4);
    Swift::String v40 = v47;
    DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
    type metadata accessor for DOCAnalyticsManager();
    Swift::String v41 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendActionEvent(_:)();

    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v40, v50);
  }
LABEL_22:
  uint64_t v57 = v24;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t sub_100188454(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100705D60);
}

void sub_1001884D8()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v1)
    {
      __break(1u);
      return;
    }
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v2 + 16))
    {
      uint64_t v3 = *(void *)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v3 = *(void *)(v2 + 8);
      swift_unknownObjectRetain();
      if (!v3) {
        return;
      }
    }
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v4 = (void *)_bridgeCocoaArray<A>(_:)();
    }
    swift_getObjectType();
    sub_10020032C(v3, (uint64_t)v4);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100188620(uint64_t result)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v2)
  {
    __break(1u);
    return result;
  }
  uint64_t v3 = result;
  uint64_t v4 = v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v4 + 16))
  {
    uint64_t v5 = *(void **)(*(void *)v4 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v5 = *(void **)(v4 + 8);
    uint64_t result = swift_unknownObjectRetain();
    if (!v5) {
      return result;
    }
  }
  sub_1000CBC00(v3, (uint64_t)v10, (uint64_t *)&unk_100705D60);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(void *)(v6 + 24) = v5;
  sub_1000CBE0C((uint64_t)v10, v6 + 32, (uint64_t *)&unk_100705D60);
  v9[4] = sub_10018DA98;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_1001B6B50;
  v9[3] = &unk_1006943C8;
  id v7 = _Block_copy(v9);
  uint64_t v8 = v1;
  swift_unknownObjectRetain();
  swift_release();
  [v5 fetchURL:v7];
  _Block_release(v7);
  return swift_unknownObjectRelease();
}

void sub_100188790(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a4;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v12, &qword_1007076B0);
  sub_1000CBC00(a5, (uint64_t)v23, (uint64_t *)&unk_100705D60);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_1000CBE0C((uint64_t)v12, v17 + v13, &qword_1007076B0);
  *(void *)(v17 + v14) = a2;
  *(void *)(v17 + v15) = a3;
  *(void *)(v17 + v16) = v21;
  sub_1000CBE0C((uint64_t)v23, v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)&unk_100705D60);
  aBlock[4] = sub_10018DC18;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100694418;
  uint64_t v18 = _Block_copy(aBlock);
  swift_errorRetain();
  id v19 = a3;
  swift_unknownObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

uint64_t sub_100188994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v33[1] = a5;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v33 - v17;
  sub_1000CBC00(a1, (uint64_t)v11, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    id v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
    if (a2)
    {
      swift_getErrorValue();
      a2 = Error.localizedDescription.getter();
      unint64_t v22 = v21;
    }
    else
    {
      unint64_t v22 = 0;
    }
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_100073F48();
    uint64_t v31 = 4271950;
    if (v22) {
      uint64_t v31 = a2;
    }
    unint64_t v32 = 0xE300000000000000;
    if (v22) {
      unint64_t v32 = v22;
    }
    *(void *)(v20 + 32) = v31;
    *(void *)(v20 + 40) = v32;
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
    uint64_t v23 = (uint64_t *)(a3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache);
    swift_beginAccess();
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v34 = *v23;
    *uint64_t v23 = 0x8000000000000000;
    uint64_t ObjectType = swift_getObjectType();
    sub_10018A8E8(a4, (uint64_t)v16, isUniquelyReferenced_nonNull_native, &v34, ObjectType);
    *uint64_t v23 = v34;
    swift_bridgeObjectRelease();
    unint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v16, v12);
    swift_endAccess();
    sub_10009E6C4(0, &qword_100708700);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1005A04F0;
    *(void *)(v27 + 32) = a4;
    unint64_t v35 = v27;
    specialized Array._endMutation()();
    unint64_t v28 = v35;
    swift_unknownObjectRetain();
    id v29 = DOCItemCollectionViewController.actionContext(from:)();
    sub_10015244C(v28, 0, v29);
    swift_bridgeObjectRelease();

    return ((uint64_t (*)(char *, uint64_t))v26)(v18, v12);
  }
}

void sub_100188DD8()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DOCItemCollectionViewController.triggerScan()();
  if (v4)
  {
    static Logger.UI.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v12 = v0;
      uint64_t v8 = (uint8_t *)v7;
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 138412290;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v13 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v9 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Did not trigger scan. Error: %@", v8, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v0 = v12;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t sub_10018901C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 96);
  *(void *)(v0 + 96) = 0;
  if (v1)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native()) {
        break;
      }
      uint64_t v2 = *(void *)(v1 + 96);
      swift_retain();
      swift_release();
      uint64_t v1 = v2;
    }
    while (v2);
  }
  swift_release();
  return v0;
}

uint64_t sub_1001890B0()
{
  sub_10018901C();

  return swift_deallocClassInstance();
}

uint64_t sub_1001890E0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v3 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v1 = v3;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_beginAccess();
  sub_10008E684(v1);
  return swift_endAccess();
}

NSString sub_100189194(void *a1)
{
  id v2 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = [a1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    id v10 = [a1 identifier];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    if (v11 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v13 != v14)
    {
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v23 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  id v15 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v16 = [a1 localizedTitle];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v19 = v18;

  swift_bridgeObjectRetain();
  v20._uint64_t countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  return v21;
}

void sub_1001893B0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (char *)Strong;
    long long v12 = 0u;
    long long v13 = 0u;
    char v9 = (char *)DOCItemCollectionViewController.actionContext(from:)();
    sub_1000CBBA4((uint64_t)&v12, (uint64_t *)&unk_100705D60);
    id v10 = [a1 presentationSourceItem:v12 v13];
    *(void *)&v9[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = v10;
    swift_unknownObjectRelease();
    id v11 = *(id *)&v8[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
    sub_1003EC438(a3, a4, (uint64_t)v9);

    if ([a3 performActionExitsEditMode]) {
      [v8 setEditing:0 animated:1];
    }
  }
}

uint64_t sub_1001894D0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = a1[2];
  swift_bridgeObjectRetain();
  unint64_t v10 = swift_bridgeObjectRetain();
  id v11 = sub_10018B8C8(v10, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[4] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a1[3];
  if (v12)
  {
    unint64_t v13 = a1[4];
    if ((v13 & 0x8000000000000000) != 0 || (v13 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v14 = (uint64_t)sub_1002F48F4(v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
    }
    uint64_t v19 = v14;
    sub_10018CB80(&v19, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    a1[4] = v19;
    swift_bridgeObjectRelease();
  }
  id v15 = a3;
  swift_bridgeObjectRetain();
  sub_1000C0640((uint64_t)a5);
  unint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_10018B588(v16, (uint64_t)v15, a4, a5);
  sub_1000A7258((uint64_t)a5);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  a1[5] = v17;

  return swift_bridgeObjectRelease();
}

void sub_100189690(uint64_t a1)
{
  children._rawValue = _swiftEmptyArrayStorage;
  unint64_t v2 = swift_bridgeObjectRetain();
  sub_1001698A4(v2);
  id v3 = *(void **)(a1 + 96);
  if (!v3) {
    goto LABEL_7;
  }
  uint64_t v4 = (void *)v3[9];
  if (!v4)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (!v3[11])
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v3[8];
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = (objc_class *)[self systemImageNamed:v6];

  UIMenuElementSize preferredElementSizea = swift_bridgeObjectRetain();
  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v4;
  v22.value.super.Class isa = v7;
  v22.is_nil = 0;
  uint64_t v9 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v8, (Swift::String_optional)0, v22, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSizea, (Swift::OpaquePointer)_swiftEmptyArrayStorage).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)children._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)children._rawValue & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_release();

LABEL_7:
  if (*(unsigned char *)(a1 + 48))
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    UIMenuOptions v10 = *(void *)(a1 + 56);
    UIMenuElementSize preferredElementSize = (UIMenuElementSize)children._rawValue;
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
    v13.value.super.Class isa = 0;
    v13.is_nil = 0;
    v14.value = (UIMenuIdentifier)1;
LABEL_12:
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(*(Swift::String *)&v11, (Swift::String_optional)0, v13, v14, v10, preferredElementSize, children);
    return;
  }
  unint64_t v15 = *(void *)(a1 + 72);
  if (!v15) {
    goto LABEL_15;
  }
  if (*(void *)(a1 + 88))
  {
    uint64_t v16 = *(void *)(a1 + 64);
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v18 = (objc_class *)[self systemImageNamed:v17];

    UIMenuElementSize preferredElementSize = (UIMenuElementSize)children._rawValue;
    uint64_t v11 = v16;
    unint64_t v12 = v15;
    v13.value.super.Class isa = v18;
    v13.is_nil = 0;
    v14.value = 0;
    UIMenuOptions v10 = -1;
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
}

Swift::Void __swiftcall DOCItemCollectionViewController.documentCameraViewControllerDidCancel(_:)(VNDocumentCameraViewController a1)
{
}

Swift::Void __swiftcall DOCItemCollectionViewController.documentCameraViewController(_:didFinishWith:)(VNDocumentCameraViewController _, VNDocumentCameraScan didFinishWith)
{
  uint64_t v5 = (VNDocumentCameraViewController *)swift_allocObject();
  v5[2].super.super.super.Class isa = v2;
  v5[3].super.super.super.Class isa = _.super.super.super.isa;
  NSString v6 = v2;
  uint64_t v7 = _.super.super.super.isa;
  sub_1005242D0(didFinishWith.super.isa, (uint64_t)sub_100189CDC, (uint64_t)v5);

  swift_release();
}

Swift::Void __swiftcall VNDocumentCameraViewController.doc_configurePreferredPresentationStyle()()
{
  id v0 = [self currentDevice];
  id v1 = [v0 userInterfaceIdiom];

  if (v1 == (id)6) {
    UIModalPresentationStyle v2 = UIModalPresentationFormSheet;
  }
  else {
    UIModalPresentationStyle v2 = UIModalPresentationOverFullScreen;
  }

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(v2);
}

id sub_100189B84()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  UIModalPresentationStyle v2 = self;
  void v7[4] = sub_10018DD7C;
  v7[5] = v1;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_1001FCE6C;
  v7[3] = &unk_1006944E0;
  id v3 = _Block_copy(v7);
  id v4 = v0;
  swift_retain();
  swift_release();
  id v5 = [v2 configurationWithIdentifier:0 previewProvider:0 actionProvider:v3];
  swift_release();
  _Block_release(v3);
  return v5;
}

uint64_t sub_100189C9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100189CDC(uint64_t a1)
{
  return sub_10032C270(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100189CE4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100521F28(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100189D60(v6);
  return specialized ContiguousArray._endMutation()();
}

void sub_100189D60(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_132;
    }
    if (v3) {
      sub_10018A4D4(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_140;
  }
  Swift::Int v104 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    Swift::String v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v111 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v110 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_98:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_127;
          }
          if (!v93) {
            goto LABEL_139;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_10018A5C8((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v110);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_128;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v8 = sub_100520230((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_129;
          }
          Swift::String v97 = &v8[16 * v94 + 32];
          *(void *)Swift::String v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_130;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_109:
      swift_bridgeObjectRelease();
      *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10009E6C4(0, &qword_100708700);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v110 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v111 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  Swift::String v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v107 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    Swift::Int v108 = v12;
    if (v9 < v3)
    {
      UIImage_optional v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v105 = [v14 menuSortOrder];
      id v16 = [v15 menuSortOrder];

      Swift::Int v3 = v107;
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v107)
      {
        Swift::String v102 = v8;
        NSString v17 = (id *)(v101 + 8 * v12);
        while (1)
        {
          uint64_t v18 = *(v17 - 1);
          id v19 = *v17;
          id v20 = v18;
          id v21 = [v19 menuSortOrder];
          id v22 = [v20 menuSortOrder];

          if (v105 < v16 == v21 >= v22) {
            break;
          }
          ++v9;
          ++v17;
          Swift::Int v3 = v107;
          if (v107 == v9)
          {
            Swift::Int v9 = v107;
            Swift::String v8 = v102;
            goto LABEL_22;
          }
        }
        Swift::String v8 = v102;
        Swift::Int v3 = v107;
LABEL_22:
        Swift::Int v12 = v108;
      }
      if (v105 < v16)
      {
        if (v9 < v12) {
          goto LABEL_133;
        }
        if (v12 < v9)
        {
          char v23 = (uint64_t *)(v100 + 8 * v9);
          Swift::Int v24 = v9;
          Swift::Int v25 = v12;
          unint64_t v26 = (uint64_t *)(v10 + 8 * v12);
          do
          {
            if (v25 != --v24)
            {
              if (!v10) {
                goto LABEL_138;
              }
              uint64_t v27 = *v26;
              uint64_t *v26 = *v23;
              *char v23 = v27;
            }
            ++v25;
            --v23;
            ++v26;
          }
          while (v25 < v24);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_131;
      }
      if (v9 - v12 < v104) {
        break;
      }
    }
LABEL_48:
    if (v9 < v12) {
      goto LABEL_126;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::String v8 = sub_10051F91C(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v40 = *((void *)v8 + 2);
    unint64_t v39 = *((void *)v8 + 3);
    unint64_t v11 = v40 + 1;
    if (v40 >= v39 >> 1) {
      Swift::String v8 = sub_10051F91C((char *)(v39 > 1), v40 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v11;
    Swift::String v41 = v8 + 32;
    Swift::String v42 = &v8[16 * v40 + 32];
    *(void *)Swift::String v42 = v12;
    *((void *)v42 + 1) = v9;
    if (v40)
    {
      Swift::Int v109 = v9;
      while (1)
      {
        unint64_t v43 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v48 = &v41[16 * v11];
          uint64_t v49 = *((void *)v48 - 8);
          uint64_t v50 = *((void *)v48 - 7);
          BOOL v54 = __OFSUB__(v50, v49);
          uint64_t v51 = v50 - v49;
          if (v54) {
            goto LABEL_115;
          }
          uint64_t v53 = *((void *)v48 - 6);
          uint64_t v52 = *((void *)v48 - 5);
          BOOL v54 = __OFSUB__(v52, v53);
          uint64_t v46 = v52 - v53;
          char v47 = v54;
          if (v54) {
            goto LABEL_116;
          }
          unint64_t v55 = v11 - 2;
          id v56 = &v41[16 * v11 - 32];
          uint64_t v58 = *(void *)v56;
          uint64_t v57 = *((void *)v56 + 1);
          BOOL v54 = __OFSUB__(v57, v58);
          uint64_t v59 = v57 - v58;
          if (v54) {
            goto LABEL_118;
          }
          BOOL v54 = __OFADD__(v46, v59);
          uint64_t v60 = v46 + v59;
          if (v54) {
            goto LABEL_121;
          }
          if (v60 >= v51)
          {
            uint64_t v78 = &v41[16 * v43];
            uint64_t v80 = *(void *)v78;
            uint64_t v79 = *((void *)v78 + 1);
            BOOL v54 = __OFSUB__(v79, v80);
            uint64_t v81 = v79 - v80;
            if (v54) {
              goto LABEL_125;
            }
            BOOL v71 = v46 < v81;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v72 = *((void *)v8 + 4);
            uint64_t v73 = *((void *)v8 + 5);
            BOOL v54 = __OFSUB__(v73, v72);
            uint64_t v65 = v73 - v72;
            char v66 = v54;
            goto LABEL_80;
          }
          uint64_t v45 = *((void *)v8 + 4);
          uint64_t v44 = *((void *)v8 + 5);
          BOOL v54 = __OFSUB__(v44, v45);
          uint64_t v46 = v44 - v45;
          char v47 = v54;
        }
        if (v47) {
          goto LABEL_117;
        }
        unint64_t v55 = v11 - 2;
        id v61 = &v41[16 * v11 - 32];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v64 = __OFSUB__(v62, v63);
        uint64_t v65 = v62 - v63;
        char v66 = v64;
        if (v64) {
          goto LABEL_120;
        }
        Swift::String v67 = &v41[16 * v43];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v54 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v54) {
          goto LABEL_123;
        }
        if (__OFADD__(v65, v70)) {
          goto LABEL_124;
        }
        if (v65 + v70 >= v46)
        {
          BOOL v71 = v46 < v70;
LABEL_86:
          if (v71) {
            unint64_t v43 = v55;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v66) {
          goto LABEL_119;
        }
        id v74 = &v41[16 * v43];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v54 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v54) {
          goto LABEL_122;
        }
        if (v77 < v65) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v82 = v43 - 1;
        if (v43 - 1 >= v11)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        uint64_t v83 = v10;
        if (!v10) {
          goto LABEL_137;
        }
        Swift::String v84 = v8;
        Swift::String v85 = &v41[16 * v82];
        uint64_t v86 = *(void *)v85;
        NSString v87 = v41;
        unint64_t v88 = v43;
        id v89 = &v41[16 * v43];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = v83;
        sub_10018A5C8((id *)(v83 + 8 * *(void *)v85), (id *)(v83 + 8 * *(void *)v89), v83 + 8 * v90, v110);
        if (v1) {
          goto LABEL_109;
        }
        if (v90 < v86) {
          goto LABEL_112;
        }
        if (v88 > *((void *)v84 + 2)) {
          goto LABEL_113;
        }
        *(void *)Swift::String v85 = v86;
        *(void *)&v87[16 * v82 + 8] = v90;
        unint64_t v92 = *((void *)v84 + 2);
        if (v88 >= v92) {
          goto LABEL_114;
        }
        Swift::String v8 = v84;
        unint64_t v11 = v92 - 1;
        memmove(v89, v89 + 16, 16 * (v92 - 1 - v88));
        Swift::String v41 = v87;
        *((void *)v84 + 2) = v92 - 1;
        uint64_t v10 = v91;
        Swift::Int v9 = v109;
        if (v92 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    Swift::Int v3 = v107;
    if (v9 >= v107) {
      goto LABEL_98;
    }
  }
  if (__OFADD__(v12, v104)) {
    goto LABEL_134;
  }
  if (v12 + v104 >= v3) {
    Swift::Int v28 = v3;
  }
  else {
    Swift::Int v28 = v12 + v104;
  }
  if (v28 >= v12)
  {
    if (v9 != v28)
    {
      UIMenu v103 = v8;
      uint64_t v29 = v100 + 8 * v9;
      Swift::Int v106 = v28;
      do
      {
        unint64_t v30 = *(void **)(v10 + 8 * v9);
        Swift::Int v31 = v12;
        uint64_t v32 = v29;
        do
        {
          id v33 = *(void **)v32;
          id v34 = v30;
          id v35 = v33;
          id v36 = [v34 menuSortOrder];
          id v37 = [v35 menuSortOrder];

          if (v36 >= v37) {
            break;
          }
          if (!v10) {
            goto LABEL_136;
          }
          id v38 = *(void **)v32;
          unint64_t v30 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v30;
          *(void *)(v32 + 8) = v38;
          v32 -= 8;
          ++v31;
        }
        while (v9 != v31);
        ++v9;
        v29 += 8;
        Swift::Int v12 = v108;
      }
      while (v9 != v106);
      Swift::Int v9 = v106;
      Swift::String v8 = v103;
    }
    goto LABEL_48;
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10018A4D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v7 = *(void **)(v5 + 8 * v4);
    uint64_t v8 = a1;
    uint64_t v17 = v6;
    while (1)
    {
      Swift::Int v9 = *(void **)v6;
      id v10 = v7;
      id v11 = v9;
      id v12 = [v10 menuSortOrder];
      id v13 = [v11 menuSortOrder];

      if (v12 >= v13)
      {
LABEL_4:
        ++v4;
        uint64_t v6 = v17 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      id v14 = *(void **)v6;
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v7;
      *(void *)(v6 + 8) = v14;
      v6 -= 8;
      if (v4 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_10018A5C8(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  uint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  id v38 = __src;
  id v37 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4) {
        memmove(a4, a2, 8 * v11);
      }
      id v22 = &a4[v11];
      id v36 = (char *)v22;
      id v38 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        char v23 = (id *)(a3 - 8);
        Swift::Int v24 = v4;
        uint64_t v32 = v5;
        do
        {
          id v35 = v4;
          Swift::Int v25 = v23 + 1;
          unint64_t v26 = *--v24;
          id v27 = *(v22 - 1);
          id v28 = v26;
          id v29 = [v27 menuSortOrder];
          id v30 = [v28 menuSortOrder];

          if (v29 >= v30)
          {
            id v36 = (char *)(v22 - 1);
            if (v25 < v22 || v23 >= v22 || v25 != v22) {
              *char v23 = *(v22 - 1);
            }
            Swift::Int v24 = v35;
            --v22;
          }
          else
          {
            if (v25 != v35 || v23 >= v35) {
              *char v23 = *v24;
            }
            id v38 = v24;
          }
          if (v24 <= v32) {
            break;
          }
          --v23;
          uint64_t v4 = v24;
        }
        while (v22 > a4);
      }
      goto LABEL_43;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    id v12 = &a4[v8];
    id v36 = (char *)v12;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      id v13 = a4;
      do
      {
        id v14 = v5;
        id v15 = *v13;
        id v16 = *v4;
        id v17 = v15;
        id v18 = [v16 menuSortOrder];
        id v19 = [v17 menuSortOrder];

        if (v18 >= v19)
        {
          id v21 = v14;
          if (v14 != v13) {
            void *v14 = *v13;
          }
          id v37 = ++v13;
          id v20 = v4;
        }
        else
        {
          id v20 = v4 + 1;
          id v21 = v14;
          if (v14 < v4 || v14 >= v20 || v14 != v4) {
            void *v14 = *v4;
          }
        }
        uint64_t v5 = v21 + 1;
        if (v13 >= v12) {
          break;
        }
        uint64_t v4 = v20;
      }
      while ((unint64_t)v20 < a3);
      id v38 = v5;
    }
LABEL_43:
    sub_10051FAE0(&v38, &v37, &v36);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018A8E8(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  v26[1] = a5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (void *)*a4;
  unint64_t v15 = sub_10017BB10(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 >= v18 && (a3 & 1) != 0)
  {
LABEL_7:
    id v21 = (void *)*a4;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v22 + 8 * v15) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_1003587F4();
    goto LABEL_7;
  }
  sub_10034EDD8(v18, a3 & 1);
  unint64_t v24 = sub_10017BB10(a2);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  id v21 = (void *)*a4;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  return sub_10018AA9C(v15, (uint64_t)v12, a1, v21);
}

uint64_t sub_10018AA9C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_10018AB54(unint64_t a1, uint64_t a2)
{
  return sub_10018AB70(a1, a2) & 1;
}

uint64_t sub_10018AB70(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          int64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          int64_t v7 = *(void **)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        uint64_t v9 = (uint64_t)[v7 canPerform:a2];
        swift_unknownObjectRelease();
        ++v5;
        if (v9) {
          BOOL v10 = v8 == v4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10) {
          goto LABEL_18;
        }
      }
    }
  }
  uint64_t v9 = 1;
LABEL_18:
  swift_bridgeObjectRelease();
  return v9;
}

void *sub_10018AC8C(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_85;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v6; i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v52 = v3;
    uint64_t v7 = 0;
    unint64_t v57 = v5 & 0xC000000000000001;
    uint64_t v53 = v5 + 32;
    uint64_t v8 = (void *)FPActionReparent;
    id v56 = (void *)FPActionImportHere;
    unint64_t v58 = a2 >> 62;
    unint64_t v59 = a2 & 0xC000000000000001;
    uint64_t v54 = v5;
    uint64_t v3 = i;
    while (!v57)
    {
      uint64_t v9 = *(void *)(v53 + 8 * v7);
      swift_unknownObjectRetain();
      BOOL v10 = __OFADD__(v7++, 1);
      if (v10) {
        goto LABEL_82;
      }
LABEL_11:
      if (v58)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v11) {
          goto LABEL_4;
        }
      }
      else if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_4;
      }
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;
      if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
      {
        swift_bridgeObjectRelease_n();
LABEL_19:
        if (v58)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v19 >= 1001) {
            goto LABEL_4;
          }
          swift_bridgeObjectRetain();
          id v20 = v8;
          unint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
          if (v17)
          {
LABEL_25:
            uint64_t v3 = 4;
            while (1)
            {
              uint64_t v5 = v3 - 4;
              if (v59)
              {
                id v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v22 = v3 - 3;
                if (__OFADD__(v5, 1)) {
                  goto LABEL_81;
                }
              }
              else
              {
                id v21 = *(void **)(a2 + 8 * v3);
                swift_unknownObjectRetain();
                uint64_t v22 = v3 - 3;
                if (__OFADD__(v5, 1))
                {
LABEL_81:
                  __break(1u);
                  goto LABEL_82;
                }
              }
              unsigned int v23 = [v21 canPerform:v8 v52];
              swift_unknownObjectRelease();
              if (!v23)
              {

                swift_bridgeObjectRelease();
                goto LABEL_68;
              }
              ++v3;
              if (v22 == v17)
              {

                swift_bridgeObjectRelease();
                goto LABEL_53;
              }
            }
          }
        }
        else
        {
          unint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v17 > 0x3E8) {
            goto LABEL_4;
          }
          swift_bridgeObjectRetain();
          id v18 = v8;
          if (v17) {
            goto LABEL_25;
          }
        }
        goto LABEL_71;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_19;
      }
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
      if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
      {
        swift_bridgeObjectRelease_n();
LABEL_38:
        id v29 = [self defaultPermission];
        if (v58)
        {
          swift_bridgeObjectRetain();
          id v32 = v8;
          id v33 = v29;
          uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
          if (v5)
          {
LABEL_43:
            uint64_t v3 = 4;
            while (1)
            {
              uint64_t v34 = v3 - 4;
              if (v59)
              {
                id v35 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v36 = v3 - 3;
                if (__OFADD__(v34, 1)) {
                  goto LABEL_83;
                }
              }
              else
              {
                id v35 = *(void **)(a2 + 8 * v3);
                swift_unknownObjectRetain();
                uint64_t v36 = v3 - 3;
                if (__OFADD__(v34, 1)) {
                  goto LABEL_83;
                }
              }
              if (!objc_msgSend(v35, "canPerform:", v8, v52))
              {

                swift_bridgeObjectRelease();
                swift_unknownObjectRelease();
                goto LABEL_67;
              }
              unsigned __int8 v37 = [v29 canHostAppPerformAction:1 targetNode:v35];
              swift_unknownObjectRelease();
              if ((v37 & 1) == 0) {
                break;
              }
              ++v3;
              if (v36 == v5) {
                goto LABEL_52;
              }
            }

            swift_bridgeObjectRelease();
LABEL_67:

LABEL_68:
            uint64_t v5 = v54;
            uint64_t v3 = i;
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          id v30 = v8;
          id v31 = v29;
          if (v5) {
            goto LABEL_43;
          }
        }
LABEL_52:

        swift_bridgeObjectRelease();
LABEL_53:
        uint64_t v5 = v54;
        uint64_t v3 = i;
        goto LABEL_72;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_38;
      }
      if (v58)
      {
        swift_bridgeObjectRetain();
        id v44 = v8;
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        if (v38)
        {
LABEL_56:
          uint64_t v3 = 4;
          while (1)
          {
            uint64_t v40 = v3 - 4;
            if (v59)
            {
              Swift::String v41 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v42 = v3 - 3;
              if (__OFADD__(v40, 1)) {
                goto LABEL_84;
              }
            }
            else
            {
              Swift::String v41 = *(void **)(a2 + 8 * v3);
              swift_unknownObjectRetain();
              uint64_t v42 = v3 - 3;
              if (__OFADD__(v40, 1)) {
                goto LABEL_84;
              }
            }
            unsigned int v43 = [v41 canPerform:v8 v52];
            swift_unknownObjectRelease();
            if (!v43) {
              break;
            }
            ++v3;
            if (v42 == v38)
            {

              swift_bridgeObjectRelease();
              uint64_t v3 = i;
              goto LABEL_72;
            }
          }

          swift_bridgeObjectRelease();
          uint64_t v3 = i;
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        id v39 = v8;
        if (v38) {
          goto LABEL_56;
        }
      }
LABEL_71:

      swift_bridgeObjectRelease();
LABEL_72:
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v9;
      unint64_t v60 = inited;
      specialized Array._endMutation()();
      swift_unknownObjectRetain();
      char v46 = sub_1000301E0(v56, v60);
      swift_bridgeObjectRelease();
      if (v46)
      {
        id v47 = sub_1001577D8(v9);
        sub_1000CBE70((uint64_t *)&unk_1007141F0);
        uint64_t v48 = swift_initStackObject();
        *(_OWORD *)(v48 + 16) = xmmword_1005A0030;
        *(void *)(v48 + 32) = 0x7365646F4E636F64;
        *(void *)(v48 + 40) = 0xE800000000000000;
        *(void *)(v48 + 72) = sub_1000CBE70((uint64_t *)&unk_100707B20);
        *(void *)(v48 + 48) = a2;
        swift_bridgeObjectRetain();
        sub_100042C20(v48);
        id v49 = [v47 filteringPredicate];
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(v48) = [v49 evaluateWithObject:isa];

        swift_unknownObjectRelease();
        if (v48)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v5 = v54;
          uint64_t v3 = i;
        }
        else
        {

          uint64_t v5 = v54;
        }
        goto LABEL_5;
      }
LABEL_4:
      swift_unknownObjectRelease();
LABEL_5:
      if (v7 == v3) {
        goto LABEL_86;
      }
    }
    uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    BOOL v10 = __OFADD__(v7++, 1);
    if (!v10) {
      goto LABEL_11;
    }
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    swift_bridgeObjectRetain();
  }
LABEL_86:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10018B428(void *a1)
{
  id v2 = [a1 identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v6 == v5) {
    goto LABEL_12;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v9 == v5)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v11 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_14:
  id v12 = [a1 localizedCompactTitle];
  if (!v12) {
LABEL_15:
  }
    id v12 = [a1 localizedTitle];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v13;
}

void *sub_10018B588(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v5 = a1;
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      unint64_t v25 = v5 & 0xC000000000000001;
      id v24 = self;
      unint64_t v23 = v5;
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      uint64_t v7 = 4;
      uint64_t v22 = v6;
      while (1)
      {
        if (v25) {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v10 = *(id *)(v5 + 8 * v7);
        }
        char v11 = v10;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
          goto LABEL_18;
        }
        id v12 = [v10 identifier];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v13 = String._bridgeToObjectiveC()();
        [v24 isDestructiveActionIdentifier:v13];
        swift_bridgeObjectRelease();

        sub_10018B428(v11);
        id v14 = [v11 image];
        sub_100189194(v11);
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        char v16 = a4;
        unint64_t v17 = (void *)swift_allocObject();
        v17[2] = v15;
        v17[3] = v11;
        v17[4] = a3;
        id v18 = v11;
        swift_bridgeObjectRetain();
        a4 = v16;
        uint64_t v19 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        if (!v16) {
          break;
        }
        swift_retain();
        uint64_t v20 = v16(v19);

        sub_1000A7258((uint64_t)v16);
        uint64_t v8 = v22;
        unint64_t v5 = v23;
        uint64_t v9 = v7 - 3;
        if (v20) {
          goto LABEL_5;
        }
LABEL_8:
        ++v7;
        if (v9 == v8) {
          goto LABEL_19;
        }
      }

      uint64_t v8 = v22;
      unint64_t v5 = v23;
      uint64_t v9 = v7 - 3;
LABEL_5:
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_8;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_10018B8C8(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v12 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v4;
      while (v6)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if (sub_100535394((Swift::UInt)[v8 menuSortOrder], a2))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          unint64_t v3 = v12;
          uint64_t v4 = v13;
        }
        else
        {
        }
        ++v5;
        if (v10 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)(v7 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10018BA48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _s21_DOCSectionDescriptorCMa();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 32) = _swiftEmptyArrayStorage;
  *(void *)(v17 + 40) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v17 + 48) = 1;
  *(void *)(v17 + 56) = 2;
  *(_OWORD *)(v17 + 64) = 0u;
  *(_OWORD *)(v17 + 80) = 0u;
  *(void *)(v17 + 96) = 0;
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = 0;
  swift_retain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 48) = a3;
  *(void *)(v17 + 64) = a4;
  *(void *)(v17 + 72) = a5;
  swift_bridgeObjectRelease();
  *(void *)(v17 + 80) = a6;
  *(void *)(v17 + 88) = a7;
  swift_bridgeObjectRelease();
  *(void *)(v17 + 56) = a8;
  *(void *)(v17 + 24) = a2;
  swift_bridgeObjectRelease();
  *(void *)(v17 + 96) = a9;
  swift_release();
  swift_release();
  return v17;
}

uint64_t sub_10018BB44(void **__src, id *a2, void **a3, void **__dst, uint64_t a5)
{
  unint64_t v6 = __dst;
  uint64_t v7 = a3;
  id v8 = __src;
  uint64_t v9 = (char *)a2 - (char *)__src;
  uint64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    uint64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = (char *)a3 - (char *)a2;
  uint64_t v13 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v13 = (char *)a3 - (char *)a2;
  }
  uint64_t v14 = v13 >> 3;
  id v61 = __src;
  unint64_t v60 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 >= -7)
    {
      if (__dst != a2 || &a2[v14] <= __dst)
      {
        id v29 = a2;
        memmove(__dst, a2, 8 * v14);
        a2 = v29;
      }
      id v30 = &v6[v14];
      unint64_t v59 = v30;
      id v61 = a2;
      if (v8 < a2 && v12 >= 8)
      {
        uint64_t v31 = *(void *)(a5 + 16);
        uint64_t v32 = a5 + 32;
        uint64_t v52 = v8;
        uint64_t v54 = v6;
        do
        {
          id v33 = v7 - 1;
          uint64_t v34 = v30 - 1;
          if (v31)
          {
            id v47 = v30 - 1;
            uint64_t v48 = v7 - 1;
            id v56 = v7;
            unint64_t v58 = a2;
            id v35 = *(a2 - 1);
            char v46 = a2 - 1;
            id v36 = *(v30 - 1);
            id v37 = v35;
            uint64_t v38 = 0;
            uint64_t v50 = v30;
            while (1)
            {
              id v39 = *(id *)(v32 + 8 * v38);
              id v40 = [v36 menuSortOrder];
              if (v39 == v40) {
                break;
              }
              if (v31 == ++v38)
              {
                uint64_t v38 = 0;
                break;
              }
            }
            uint64_t v41 = 0;
            while (1)
            {
              id v42 = *(id *)(v32 + 8 * v41);
              if (v42 == [v37 menuSortOrder]) {
                break;
              }
              uint64_t v43 = v41 + 1;
              if (__OFADD__(v41, 1))
              {
                __break(1u);
LABEL_69:
                __break(1u);
                goto LABEL_70;
              }
              ++v41;
              if (v43 == v31)
              {

                id v8 = v52;
                unint64_t v6 = v54;
                uint64_t v7 = v56;
                a2 = v58;
                id v33 = v48;
                id v30 = v50;
                uint64_t v34 = v47;
                goto LABEL_60;
              }
            }

            BOOL v27 = v39 == v40;
            id v8 = v52;
            unint64_t v6 = v54;
            uint64_t v7 = v56;
            a2 = v58;
            id v33 = v48;
            id v30 = v50;
            uint64_t v34 = v47;
            if (!v27 || v38 >= v41) {
              goto LABEL_60;
            }
            id v44 = v46;
            if (v56 != v58 || v48 >= v58) {
              id *v48 = *v46;
            }
            id v61 = v46;
          }
          else
          {
LABEL_60:
            unint64_t v59 = v34;
            if (v7 < v30 || v33 >= v30 || v7 != v30) {
              *id v33 = *v34;
            }
            id v44 = a2;
            id v30 = v34;
          }
          if (v44 <= v8) {
            break;
          }
          a2 = v44;
          uint64_t v7 = v33;
        }
        while (v30 > v6);
      }
      goto LABEL_67;
    }
  }
  else if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst)
    {
      uint64_t v15 = a2;
      memmove(__dst, __src, 8 * v11);
      a2 = v15;
    }
    id v49 = &v6[v11];
    unint64_t v59 = v49;
    if (a2 < v7 && v9 >= 8)
    {
      uint64_t v16 = *(void *)(a5 + 16);
      uint64_t v17 = a5 + 32;
      unint64_t v55 = v7;
      do
      {
        if (!v16) {
          goto LABEL_30;
        }
        uint64_t v51 = v8;
        uint64_t v53 = v6;
        unint64_t v57 = a2;
        id v18 = *v6;
        id v19 = *a2;
        id v20 = v18;
        uint64_t v21 = 0;
        while (1)
        {
          id v22 = *(id *)(v17 + 8 * v21);
          id v23 = [v19 menuSortOrder];
          if (v22 == v23) {
            break;
          }
          if (v16 == ++v21)
          {
            uint64_t v21 = 0;
            break;
          }
        }
        uint64_t v24 = 0;
        while (1)
        {
          id v25 = *(id *)(v17 + 8 * v24);
          if (v25 == [v20 menuSortOrder]) {
            break;
          }
          uint64_t v26 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_69;
          }
          ++v24;
          if (v26 == v16)
          {

            id v8 = v51;
            unint64_t v6 = v53;
            uint64_t v7 = v55;
            a2 = v57;
            goto LABEL_30;
          }
        }

        BOOL v27 = v22 == v23;
        id v8 = v51;
        unint64_t v6 = v53;
        uint64_t v7 = v55;
        a2 = v57;
        if (v27 && v21 < v24)
        {
          char v28 = v57 + 1;
          if (v51 < v57 || v51 >= v28 || v51 != v57) {
            *uint64_t v51 = *v57;
          }
        }
        else
        {
LABEL_30:
          if (v8 != v6) {
            *id v8 = *v6;
          }
          unint64_t v60 = ++v6;
          char v28 = a2;
        }
        ++v8;
        if (v6 >= v49) {
          break;
        }
        a2 = v28;
      }
      while (v28 < v7);
      id v61 = v8;
    }
LABEL_67:
    sub_10051FAE0(&v61, &v60, &v59);
    return 1;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10018BF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  if (a3 != a2)
  {
    uint64_t v5 = a3;
    uint64_t v6 = *a4;
    uint64_t v7 = *(void *)(a5 + 16);
    uint64_t v8 = a5 + 32;
    uint64_t v21 = *a4;
    do
    {
      if (v7)
      {
        uint64_t v9 = *(void **)(v6 + 8 * v5);
        uint64_t v10 = v5;
        uint64_t v24 = v5;
        do
        {
          uint64_t v22 = v10 - 1;
          uint64_t v23 = v10;
          uint64_t v11 = *(void **)(v6 + 8 * (v10 - 1));
          id v12 = v9;
          id v13 = v11;
          unint64_t v14 = 0;
          while (1)
          {
            id v15 = *(id *)(v8 + 8 * v14);
            id v16 = [v12 menuSortOrder];
            if (v15 == v16) {
              break;
            }
            if (v7 == ++v14)
            {
              unint64_t v14 = 0;
              break;
            }
          }
          unint64_t v17 = 0;
          while (1)
          {
            id v18 = *(id *)(v8 + 8 * v17);
            if (v18 == [v13 menuSortOrder]) {
              break;
            }
            if (v7 == ++v17)
            {

              uint64_t v5 = v24;
              uint64_t v6 = v21;
              goto LABEL_4;
            }
          }

          uint64_t v5 = v24;
          uint64_t v6 = v21;
          if (v15 != v16 || v14 >= v17) {
            break;
          }
          if (!v21)
          {
            __break(1u);
            return;
          }
          uint64_t v9 = *(void **)(v21 + 8 * v23);
          *(void *)(v21 + 8 * v23) = *(void *)(v21 + 8 * v22);
          *(void *)(v21 + 8 * v22) = v9;
          uint64_t v10 = v22;
        }
        while (v22 != a1);
      }
LABEL_4:
      ++v5;
    }
    while (v5 != a2);
  }
}

uint64_t sub_10018C0E4(uint64_t *a1, uint64_t a2)
{
  Swift::Int v5 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  if (v6 >= v5)
  {
    if (v5 < 0) {
      goto LABEL_176;
    }
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_10018BF68(0, v5, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_184;
  }
  uint64_t v123 = a1;
  Swift::Int v124 = v6;
  uint64_t v141 = a2;
  Swift::Int v127 = v5;
  uint64_t v138 = v2;
  if (v5 < 2)
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
    uint64_t v142 = (uint64_t)_swiftEmptyArrayStorage;
    __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v5 != 1)
    {
      unint64_t v59 = _swiftEmptyArrayStorage[2];
LABEL_140:
      if (v59 >= 2)
      {
        uint64_t v111 = *v123;
        uint64_t v140 = *v123;
        do
        {
          unint64_t v112 = v59 - 2;
          if (v59 < 2) {
            goto LABEL_170;
          }
          if (!v111) {
            goto LABEL_183;
          }
          UIImage_optional v113 = v11;
          UIImage_optional v114 = v11 + 32;
          uint64_t v115 = *(void *)&v11[16 * v112 + 32];
          uint64_t v116 = *(void *)&v11[16 * v59 + 24];
          Swift::String v117 = (void **)(v111 + 8 * v115);
          Swift::String v118 = (id *)(v111 + 8 * *(void *)&v114[16 * v59 - 16]);
          Swift::String v119 = (void **)(v111 + 8 * v116);
          swift_bridgeObjectRetain();
          sub_10018BB44(v117, v118, v119, __dst, v141);
          if (v138) {
            goto LABEL_137;
          }
          swift_bridgeObjectRelease();
          if (v116 < v115) {
            goto LABEL_172;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            UIImage_optional v113 = sub_100520230((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_173;
          }
          unint64_t v120 = &v113[16 * v112 + 32];
          *(void *)unint64_t v120 = v115;
          *((void *)v120 + 1) = v116;
          unint64_t v121 = *((void *)v113 + 2);
          if (v59 > v121) {
            goto LABEL_174;
          }
          uint64_t v11 = v113;
          memmove(&v113[16 * v59 + 16], &v113[16 * v59 + 32], 16 * (v121 - v59));
          *((void *)v113 + 2) = v121 - 1;
          unint64_t v59 = v121 - 1;
          uint64_t v111 = v140;
        }
        while (v121 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    sub_10009E6C4(0, &qword_100708700);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v142 = v9;
  }
  Swift::Int v12 = 0;
  uint64_t v13 = *a1;
  uint64_t v139 = a2 + 32;
  uint64_t v122 = *a1 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v14 = v127;
  uint64_t v137 = *a1;
  while (1)
  {
    Swift::Int v15 = v12;
    Swift::Int v16 = v12 + 1;
    *(void *)uint64_t v135 = v11;
    Swift::Int v126 = v12;
    if (v12 + 1 >= v14) {
      goto LABEL_60;
    }
    uint64_t v17 = *(void *)(a2 + 16);
    if (!v17)
    {
      Swift::Int v27 = v12 + 2;
      if (v12 + 2 >= v127) {
        goto LABEL_49;
      }
      goto LABEL_28;
    }
    Swift::Int v131 = v12 + 1;
    id v18 = *(void **)(v13 + 8 * v12);
    id v19 = *(id *)(v13 + 8 * v16);
    id v20 = v18;
    uint64_t v21 = 0;
    while (1)
    {
      id v22 = *(id *)(v139 + 8 * v21);
      id v23 = [v19 menuSortOrder];
      if (v22 == v23) {
        break;
      }
      if (v17 == ++v21)
      {
        uint64_t v21 = 0;
        break;
      }
    }
    uint64_t v24 = 0;
    while (1)
    {
      id v25 = *(id *)(v139 + 8 * v24);
      if (v25 == [v20 menuSortOrder]) {
        break;
      }
      uint64_t v26 = v24 + 1;
      if (__OFADD__(v24, 1)) {
        goto LABEL_158;
      }
      ++v24;
      if (v26 == v17)
      {

        if (v22 == v23)
        {
          Swift::Int v15 = v126;
          Swift::Int v27 = v126 + 2;
          uint64_t v11 = *(char **)v135;
          uint64_t v13 = v137;
          Swift::Int v16 = v131;
          if (v126 + 2 >= v127)
          {
LABEL_49:
            Swift::Int v16 = v27;
            goto LABEL_60;
          }
LABEL_28:
          BOOL v128 = 0;
          goto LABEL_35;
        }
LABEL_48:
        uint64_t v11 = *(char **)v135;
        uint64_t v13 = v137;
        Swift::Int v16 = v131;
        Swift::Int v15 = v126;
        Swift::Int v27 = v126 + 2;
        if (v126 + 2 >= v127) {
          goto LABEL_49;
        }
        goto LABEL_28;
      }
    }

    if (v22 != v23) {
      goto LABEL_48;
    }
    BOOL v128 = v21 < v24;
    Swift::Int v15 = v126;
    Swift::Int v27 = v126 + 2;
    Swift::Int v28 = v126 + 2;
    uint64_t v11 = *(char **)v135;
    uint64_t v13 = v137;
    Swift::Int v16 = v131;
    if (v126 + 2 < v127) {
      break;
    }
LABEL_51:
    Swift::Int v16 = v28;
    if (v128)
    {
LABEL_52:
      if (v28 < v15) {
        goto LABEL_179;
      }
      if (v15 < v28)
      {
        uint64_t v38 = (uint64_t *)(v122 + 8 * v28);
        Swift::Int v39 = v28;
        Swift::Int v40 = v15;
        uint64_t v41 = (uint64_t *)(v13 + 8 * v15);
        do
        {
          if (v40 != --v39)
          {
            if (!v13) {
              goto LABEL_182;
            }
            uint64_t v42 = *v41;
            *uint64_t v41 = *v38;
            uint64_t *v38 = v42;
          }
          ++v40;
          --v38;
          ++v41;
        }
        while (v40 < v39);
      }
      Swift::Int v16 = v28;
    }
LABEL_60:
    if (v16 < v127)
    {
      if (__OFSUB__(v16, v15)) {
        goto LABEL_175;
      }
      if (v16 - v15 < v124)
      {
        Swift::Int v43 = v15 + v124;
        if (__OFADD__(v15, v124)) {
          goto LABEL_177;
        }
        if (v43 >= v127) {
          Swift::Int v43 = v127;
        }
        if (v43 < v15) {
          goto LABEL_178;
        }
        if (v16 != v43)
        {
          uint64_t v44 = *(void *)(a2 + 16);
          Swift::Int v125 = v43;
          do
          {
            if (v44)
            {
              uint64_t v45 = *(void **)(v13 + 8 * v16);
              Swift::Int v46 = v16;
              Swift::Int v133 = v16;
              while (1)
              {
                Swift::Int v129 = v46;
                Swift::Int v47 = v46 - 1;
                uint64_t v48 = *(void **)(v13 + 8 * (v46 - 1));
                id v49 = v45;
                id v50 = v48;
                unint64_t v51 = 0;
                while (1)
                {
                  id v52 = *(id *)(a2 + 8 * v51 + 32);
                  id v53 = [v49 menuSortOrder];
                  if (v52 == v53) {
                    break;
                  }
                  if (v44 == ++v51)
                  {
                    unint64_t v51 = 0;
                    break;
                  }
                }
                unint64_t v54 = 0;
                while (1)
                {
                  id v55 = *(id *)(a2 + 8 * v54 + 32);
                  if (v55 == [v50 menuSortOrder]) {
                    break;
                  }
                  ++v54;
                  a2 = v141;
                  if (v44 == v54)
                  {

                    goto LABEL_69;
                  }
                }

                a2 = v141;
                if (v52 != v53) {
                  break;
                }
                BOOL v56 = v51 >= v54;
                uint64_t v11 = *(char **)v135;
                uint64_t v13 = v137;
                Swift::Int v16 = v133;
                if (v56) {
                  goto LABEL_70;
                }
                if (!v137) {
                  goto LABEL_181;
                }
                uint64_t v45 = *(void **)(v137 + 8 * v129);
                *(void *)(v137 + 8 * v129) = *(void *)(v137 + 8 * v47);
                *(void *)(v137 + 8 * v47) = v45;
                Swift::Int v46 = v47;
                if (v47 == v126) {
                  goto LABEL_70;
                }
              }
LABEL_69:
              uint64_t v11 = *(char **)v135;
              uint64_t v13 = v137;
              Swift::Int v16 = v133;
            }
LABEL_70:
            ++v16;
          }
          while (v16 != v125);
          Swift::Int v16 = v125;
          Swift::Int v15 = v126;
        }
      }
    }
    if (v16 < v15) {
      goto LABEL_171;
    }
    Swift::Int v134 = v16;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_10051F91C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v58 = *((void *)v11 + 2);
    unint64_t v57 = *((void *)v11 + 3);
    unint64_t v59 = v58 + 1;
    uint64_t v13 = v137;
    if (v58 >= v57 >> 1)
    {
      uint64_t v110 = sub_10051F91C((char *)(v57 > 1), v58 + 1, 1, v11);
      uint64_t v13 = v137;
      uint64_t v11 = v110;
    }
    *((void *)v11 + 2) = v59;
    unint64_t v60 = v11 + 32;
    id v61 = &v11[16 * v58 + 32];
    *(void *)id v61 = v15;
    *((void *)v61 + 1) = v16;
    if (v58)
    {
      while (1)
      {
        unint64_t v62 = v59 - 1;
        if (v59 >= 4)
        {
          Swift::String v67 = &v60[16 * v59];
          uint64_t v68 = *((void *)v67 - 8);
          uint64_t v69 = *((void *)v67 - 7);
          BOOL v73 = __OFSUB__(v69, v68);
          uint64_t v70 = v69 - v68;
          if (v73) {
            goto LABEL_159;
          }
          uint64_t v72 = *((void *)v67 - 6);
          uint64_t v71 = *((void *)v67 - 5);
          BOOL v73 = __OFSUB__(v71, v72);
          uint64_t v65 = v71 - v72;
          char v66 = v73;
          if (v73) {
            goto LABEL_160;
          }
          unint64_t v74 = v59 - 2;
          uint64_t v75 = &v60[16 * v59 - 32];
          uint64_t v77 = *(void *)v75;
          uint64_t v76 = *((void *)v75 + 1);
          BOOL v73 = __OFSUB__(v76, v77);
          uint64_t v78 = v76 - v77;
          if (v73) {
            goto LABEL_162;
          }
          BOOL v73 = __OFADD__(v65, v78);
          uint64_t v79 = v65 + v78;
          if (v73) {
            goto LABEL_165;
          }
          if (v79 >= v70)
          {
            Swift::String v97 = &v60[16 * v62];
            uint64_t v99 = *(void *)v97;
            uint64_t v98 = *((void *)v97 + 1);
            BOOL v73 = __OFSUB__(v98, v99);
            uint64_t v100 = v98 - v99;
            if (v73) {
              goto LABEL_169;
            }
            BOOL v90 = v65 < v100;
            goto LABEL_124;
          }
        }
        else
        {
          if (v59 != 3)
          {
            uint64_t v91 = *((void *)v11 + 4);
            uint64_t v92 = *((void *)v11 + 5);
            BOOL v73 = __OFSUB__(v92, v91);
            uint64_t v84 = v92 - v91;
            char v85 = v73;
            goto LABEL_118;
          }
          uint64_t v64 = *((void *)v11 + 4);
          uint64_t v63 = *((void *)v11 + 5);
          BOOL v73 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          char v66 = v73;
        }
        if (v66) {
          goto LABEL_161;
        }
        unint64_t v74 = v59 - 2;
        uint64_t v80 = &v60[16 * v59 - 32];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v83 = __OFSUB__(v81, v82);
        uint64_t v84 = v81 - v82;
        char v85 = v83;
        if (v83) {
          goto LABEL_164;
        }
        uint64_t v86 = &v60[16 * v62];
        uint64_t v88 = *(void *)v86;
        uint64_t v87 = *((void *)v86 + 1);
        BOOL v73 = __OFSUB__(v87, v88);
        uint64_t v89 = v87 - v88;
        if (v73) {
          goto LABEL_167;
        }
        if (__OFADD__(v84, v89)) {
          goto LABEL_168;
        }
        if (v84 + v89 >= v65)
        {
          BOOL v90 = v65 < v89;
LABEL_124:
          if (v90) {
            unint64_t v62 = v74;
          }
          goto LABEL_126;
        }
LABEL_118:
        if (v85) {
          goto LABEL_163;
        }
        uint64_t v93 = &v60[16 * v62];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v73 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v73) {
          goto LABEL_166;
        }
        if (v96 < v84) {
          goto LABEL_135;
        }
LABEL_126:
        unint64_t v101 = v62 - 1;
        if (v62 - 1 >= v59) {
          goto LABEL_154;
        }
        if (!v13) {
          goto LABEL_180;
        }
        Swift::String v102 = &v60[16 * v101];
        uint64_t v103 = *(void *)v102;
        unint64_t v104 = v62;
        id v105 = &v60[16 * v62];
        uint64_t v106 = *((void *)v105 + 1);
        Swift::Int v107 = (void **)(v13 + 8 * *(void *)v102);
        Swift::Int v108 = (id *)(v13 + 8 * *(void *)v105);
        uint64_t v136 = (void **)(v13 + 8 * v106);
        swift_bridgeObjectRetain();
        sub_10018BB44(v107, v108, v136, __dst, v141);
        if (v138)
        {
LABEL_137:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()();
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (v106 < v103) {
          goto LABEL_155;
        }
        if (v104 > *((void *)v11 + 2)) {
          goto LABEL_156;
        }
        *(void *)Swift::String v102 = v103;
        unint64_t v60 = v11 + 32;
        *(void *)&v11[16 * v101 + 40] = v106;
        unint64_t v109 = *((void *)v11 + 2);
        if (v104 >= v109) {
          goto LABEL_157;
        }
        unint64_t v59 = v109 - 1;
        memmove(v105, v105 + 16, 16 * (v109 - 1 - v104));
        *((void *)v11 + 2) = v109 - 1;
        a2 = v141;
        uint64_t v13 = v137;
        if (v109 <= 2) {
          goto LABEL_135;
        }
      }
    }
    unint64_t v59 = 1;
LABEL_135:
    Swift::Int v14 = v127;
    Swift::Int v12 = v134;
    if (v134 >= v127) {
      goto LABEL_140;
    }
  }
LABEL_35:
  while (1)
  {
    Swift::Int v28 = v27;
    if (v17) {
      break;
    }
LABEL_33:
    if (v128) {
      goto LABEL_52;
    }
LABEL_34:
    Swift::Int v27 = v28 + 1;
    Swift::Int v16 = v28;
    if (v28 + 1 >= v127)
    {
      ++v28;
      goto LABEL_51;
    }
  }
  Swift::Int v132 = v27;
  id v29 = *(void **)(v13 + 8 * v16);
  id v30 = *(id *)(v13 + 8 * v27);
  id v31 = v29;
  uint64_t v32 = 0;
  while (1)
  {
    id v33 = *(id *)(v139 + 8 * v32);
    id v34 = [v30 menuSortOrder];
    if (v33 == v34) {
      break;
    }
    if (v17 == ++v32)
    {
      uint64_t v32 = 0;
      break;
    }
  }
  uint64_t v35 = 0;
  while (1)
  {
    id v36 = *(id *)(v139 + 8 * v35);
    if (v36 == [v31 menuSortOrder])
    {

      if (v33 != v34)
      {
LABEL_32:
        uint64_t v11 = *(char **)v135;
        uint64_t v13 = v137;
        Swift::Int v15 = v126;
        Swift::Int v28 = v132;
        goto LABEL_33;
      }
      uint64_t v11 = *(char **)v135;
      uint64_t v13 = v137;
      Swift::Int v15 = v126;
      Swift::Int v28 = v132;
      if (((v128 ^ (v32 >= v35)) & 1) == 0) {
        goto LABEL_51;
      }
      goto LABEL_34;
    }
    uint64_t v37 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    ++v35;
    if (v37 == v17)
    {

      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_181:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_182:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_183:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_184:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10018CB80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100521F28(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  swift_bridgeObjectRetain();
  sub_10018C0E4(v8, a2);
  swift_bridgeObjectRelease();
  specialized ContiguousArray._endMutation()();
  return swift_bridgeObjectRelease_n();
}

UIMenu sub_10018CC2C(unint64_t a1, void *a2, unint64_t a3, uint64_t (*a4)(void), uint64_t a5, unint64_t a6)
{
  uint64_t v7 = v6;
  Swift::Int v12 = *(void **)(v6 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  uint64_t v13 = sub_1003D66D4(a1, 1uLL, a2, v12, 0);
  Swift::Int v14 = sub_1003EB648(a1, v7, 1);
  uint64_t v37 = v13;
  sub_100169238((unint64_t)v14);
  if (a3)
  {
    swift_bridgeObjectRetain();
    Swift::Int v15 = sub_10018AC8C(a3, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Int v15 = _swiftEmptyArrayStorage;
  }
  sub_100169238((unint64_t)v15);
  Swift::Int v16 = sub_1003EB96C(a1, v12);
  uint64_t v37 = v13;
  sub_100169238((unint64_t)v16);
  if (v13 < 0 || (v37 & 0x4000000000000000) != 0)
  {
    unint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t)sub_1002F48F4(v31);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v37 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v37 = v17;
  sub_100189CE4(&v37);
  swift_bridgeObjectRelease();
  uint64_t v18 = v37;
  uint64_t v35 = a1;
  id v36 = (void *)v7;
  unint64_t v33 = a6 >> 62;
  if (a6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (!v19) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v19) {
      goto LABEL_18;
    }
  }
  if (v19 < 1)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v20 = 0;
  unint64_t v34 = a6 & 0xC000000000000001;
  unint64_t v21 = a6;
  do
  {
    if (v34)
    {
      id v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      id v22 = *(void **)(a6 + 8 * v20 + 32);
      swift_retain();
    }
    sub_1001894D0(v22, v18, v36, v35, a4);
    if (v22[12])
    {
      id v23 = (void *)swift_retain();
      sub_1001894D0(v23, v18, v36, v35, a4);
      swift_release();
    }
    ++v20;
    swift_release();
    a6 = v21;
  }
  while (v19 != v20);
LABEL_18:
  swift_release();
  swift_bridgeObjectRelease();
  if (v33)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = *(void *)((a6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  if (v24)
  {
    uint64_t v37 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if ((v24 & 0x8000000000000000) == 0)
    {
      uint64_t v26 = 0;
      do
      {
        if ((a6 & 0xC000000000000001) != 0)
        {
          uint64_t v27 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          uint64_t v27 = *(void *)(a6 + 8 * v26 + 32);
          swift_retain();
        }
        ++v26;
        sub_100189690(v27);
        swift_release();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v24 != v26);
      unint64_t v25 = v37;
      goto LABEL_29;
    }
LABEL_35:
    __break(1u);
    result.super.super.Class isa = (Class)swift_release();
    __break(1u);
    return result;
  }
LABEL_29:
  if (v25 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    UIMenuElementSize preferredElementSize = v25;
  }
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v38.value.super.Class isa = 0;
  v38.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v29, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v32);
}

Class sub_10018D07C(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  Class result = (Class)(id)_DocumentManagerBundle();
  if (result)
  {
    Class v7 = result;
    v60._uint64_t countAndFlagsBits = 0xD000000000000027;
    v60._object = (void *)0x80000001005D83C0;
    v8._uint64_t countAndFlagsBits = 0x6341206B63697551;
    v8._object = (void *)0xED0000736E6F6974;
    v9._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v9._object = (void *)0xEB00000000656C62;
    v10._uint64_t countAndFlagsBits = 0x6341206B63697551;
    v10._object = (void *)0xED0000736E6F6974;
    Swift::String v11 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v60);

    Class result = (Class)(id)_DocumentManagerBundle();
    if (result)
    {
      Class v12 = result;
      v61._object = (void *)0x80000001005D83F0;
      v13._uint64_t countAndFlagsBits = 0x746957206E65704FLL;
      v13._object = (void *)0xE900000000000068;
      v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v14._object = (void *)0xEB00000000656C62;
      v15._uint64_t countAndFlagsBits = 0x746957206E65704FLL;
      v15._object = (void *)0xE900000000000068;
      v61._uint64_t countAndFlagsBits = 0xD000000000000023;
      Swift::String v16 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v61);

      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = _swiftEmptyArrayStorage;
      id v18 = [self suggestedMoveToFolderInContextMenu];
      unsigned int v19 = [v18 isEnabled];

      if (v19)
      {
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v51 == 1)
          {
LABEL_6:
            sub_1000CBE70((uint64_t *)&unk_100706730);
            uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
            if (All)
            {
              uint64_t v21 = All;
              id v22 = (objc_class *)type metadata accessor for DOCPickerContext();
              id v23 = (char *)objc_allocWithZone(v22);
              *(void *)&v23[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
              *(void *)&v23[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
              *(void *)&v23[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = v21;
              v58.receiver = v23;
              v58.super_class = v22;
              [super init];
              type metadata accessor for DOCSmartFolderManager();
              unint64_t v54 = (void *)static DOCSmartFolderManager.sharedManager.getter();
              uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v52 = v24;
              unint64_t v57 = a2;
              unint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
              uint64_t v26 = self;
              swift_retain_n();
              id v56 = v53;
              id v27 = [v26 defaultPermission];
              id v28 = [self sharedManager];
              id v29 = [v28 favoritedLocations];

              sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
              unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              id v31 = v56;
              swift_bridgeObjectRetain();
              id v32 = v27;
              id v33 = v25;
              swift_bridgeObjectRetain();
              id v34 = v54;
              sub_1002D994C(v34, v55, v52, v33, v32, 1, v53, v30, 0, v17);
              swift_bridgeObjectRelease_n();

              a2 = v57;
              swift_bridgeObjectRelease_n();

              swift_release_n();
            }
          }
        }
        else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
        {
          goto LABEL_6;
        }
      }
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A1EF0;
      Swift::Int v36 = sub_1004A1048((uint64_t)&off_100689D58);
      *(void *)(inited + 32) = sub_10018BA48(v36, (uint64_t)&off_100689D90, 1, 0, 0, 0, 0, 1, 0);
      Swift::Int v37 = sub_1004A1048((uint64_t)&off_100689DC8);
      *(void *)(inited + 40) = sub_10018BA48(v37, 0, 1, 0, 0, 0, 0, 2, 0);
      Swift::Int v38 = sub_1004A1048((uint64_t)&off_100689DF8);
      Swift::Int v39 = sub_1004A1048((uint64_t)&off_100689E28);
      uint64_t v40 = sub_10018BA48(v39, 0, 0, v16._countAndFlagsBits, (uint64_t)v16._object, 0x70752E776F727261, 0xEE0074686769722ELL, 2, 0);
      *(void *)(inited + 48) = sub_10018BA48(v38, 0, 1, 0, 0, 0, 0, 2, v40);
      Swift::Int v41 = sub_1004A1048((uint64_t)&off_100689E50);
      *(void *)(inited + 56) = sub_10018BA48(v41, 0, 1, 0, 0, 0, 0, 2, 0);
      Swift::Int v42 = sub_1004A1048((uint64_t)&off_100689EA0);
      *(void *)(inited + 64) = sub_10018BA48(v42, 0, 1, 0, 0, 0, 0, 2, 0);
      Swift::Int v43 = sub_1004A1048((uint64_t)&off_100689EE8);
      *(void *)(inited + 72) = sub_10018BA48(v43, 0, 1, 0, 0, 0, 0, 2, 0);
      Swift::Int v44 = sub_1004A1048((uint64_t)&off_100689F10);
      Swift::Int v45 = sub_1004A1048((uint64_t)&off_100689F40);
      uint64_t v46 = sub_10018BA48(v45, 0, 0, v11._countAndFlagsBits, (uint64_t)v11._object, 0x7061687372616567, 0xE900000000000065, 2, 0);
      *(void *)(inited + 80) = sub_10018BA48(v44, 0, 1, 0, 0, 0, 0, 2, v46);
      Swift::Int v47 = sub_1004A1048((uint64_t)&off_100689FA0);
      *(void *)(inited + 88) = sub_10018BA48(v47, 0, 1, 0, 0, 0, 0, 2, 0);
      unint64_t v59 = inited;
      specialized Array._endMutation()();
      unint64_t v48 = v59;
      swift_beginAccess();
      unint64_t v49 = *(void *)(v17 + 16);
      swift_bridgeObjectRetain();
      Class isa = sub_10018CC2C(a1, a2, v49, 0, 0, v48).super.super.isa;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return isa;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Class sub_10018D7A4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A04F0;
  *(void *)(v6 + 32) = a1;
  unint64_t v13 = v6;
  specialized Array._endMutation()();
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A00D0;
  Swift::Int v8 = sub_1004A1048((uint64_t)&off_100689FC8);
  swift_unknownObjectRetain();
  *(void *)(inited + 32) = sub_10018BA48(v8, 0, 1, 0, 0, 0, 0, 2, 0);
  Swift::Int v9 = sub_1004A1048((uint64_t)&off_100689FF8);
  *(void *)(inited + 40) = sub_10018BA48(v9, 0, 1, 0, 0, 0, 0, 2, 0);
  Swift::Int v10 = sub_1004A1048((uint64_t)&off_10068A030);
  *(void *)(inited + 48) = sub_10018BA48(v10, 0, 1, 0, 0, 0, 0, 2, 0);
  specialized Array._endMutation()();
  Class isa = sub_10018CC2C(v13, 0, 0, a2, a3, inited).super.super.isa;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t type metadata accessor for DOCUIImageMenuItem()
{
  return self;
}

uint64_t _s21_DOCSectionDescriptorCMa()
{
  return self;
}

uint64_t sub_10018D984()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018D9BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10018D9F4()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10018DA3C(void *a1)
{
  sub_1001893B0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10018DA48()
{
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 56)) {
    sub_10009B1B8(v0 + 32);
  }

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10018DA98(uint64_t a1, uint64_t a2)
{
  sub_100188790(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), v2 + 32);
}

uint64_t sub_10018DAA4()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_errorRelease();

  swift_unknownObjectRelease();
  if (*(void *)(v0 + v5 + 24)) {
    sub_10009B1B8(v0 + v5);
  }

  return _swift_deallocObject(v0, v5 + 32, v2 | 7);
}

uint64_t sub_10018DC18()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v5);

  return sub_100188994(v0 + v2, v6, v7, v8, v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_10018DCCC(unint64_t a1)
{
  return sub_100187D8C(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

void sub_10018DCD4(unint64_t a1, uint64_t a2)
{
  sub_1001873F4(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_10018DCDC()
{
  unint64_t result = qword_100708B60;
  if (!qword_100708B60)
  {
    sub_10009E6C4(255, (unint64_t *)&qword_100707ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100708B60);
  }
  return result;
}

uint64_t sub_10018DD44()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10018DD7C(uint64_t a1)
{
  sub_100185C24(a1, *(char **)(v1 + 16));
}

void sub_10018DD84(uint64_t a1)
{
}

id sub_10018DD8C(uint64_t a1)
{
  return [*(id *)(v1 + 16) scanDocument:a1];
}

id sub_10018DDA0(uint64_t a1)
{
  return [*(id *)(v1 + 16) pasteboardMoveToCollectionView:a1];
}

id sub_10018DDB4(uint64_t a1)
{
  return [*(id *)(v1 + 16) paste:a1];
}

id sub_10018DDC8(uint64_t a1)
{
  return [*(id *)(v1 + 16) startFolderCreation:a1];
}

id DOCPickerContext.__allocating_init(with:)(uint64_t a1)
{
  unint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return [super init];
}

{
  objc_class *v1;
  id v3;

  unint64_t v3 = objc_allocWithZone(v1);
  return DOCPickerContext.init(with:)(a1);
}

uint64_t DOCPickerContext.urlsToSave.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCPickerContext.utisToSave.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCPickerContext.utisToSave.setter(uint64_t a1)
{
  unint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave);
  swift_beginAccess();
  *unint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*DOCPickerContext.utisToSave.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCPickerContext.itemsToMove.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL DOCPickerContext.canRename.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  return v1 && *(void *)(v1 + 16) == 1;
}

BOOL DOCPickerContext.canSetTags.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave) != 0;
}

uint64_t DOCPickerContext.numberOfItems.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  if (v1) {
    return *(void *)(v1 + 16);
  }
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
  if (!v2) {
    return 0;
  }
  if (!(v2 >> 62))
  {
    uint64_t v1 = v2 & 0xFFFFFFFFFFFFFF8;
    return *(void *)(v1 + 16);
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v4;
}

void DOCPickerContext.firstDisplayName.getter()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave);
  if (v8 && *(void *)(v8 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v8 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      id v9 = [self defaultManager];
      URL.path.getter();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v11 = [v9 displayNameAtPath:v10];

      if (v11)
      {
        id v12 = [v11 stringByDeletingPathExtension];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        return;
      }
      goto LABEL_19;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_1001939F8((uint64_t)v3);
  unint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove);
  if (v13)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_10:
        if ((v13 & 0xC000000000000001) != 0)
        {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_19:
            __break(1u);
            return;
          }
          id v15 = *(id *)(v13 + 32);
        }
        Swift::String v16 = v15;
        swift_bridgeObjectRelease();
        id v17 = [v16 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        return;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t DOCPickerContext.__allocating_init(with:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return DOCPickerContext.init(with:)(a1);
}

uint64_t DOCPickerContext.init(with:)(unint64_t a1)
{
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    id v9 = _swiftEmptyArrayStorage;
LABEL_14:
    id v15 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
    id v16 = DOCPickerContext.init(with:)((uint64_t)v9);
    swift_getObjectType();
    swift_deallocPartialClassInstance();
    return (uint64_t)v16;
  }
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_13;
  }
LABEL_3:
  unsigned int v19 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C40(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v17[1] = v1;
    uint64_t v8 = 0;
    id v9 = v19;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v8 + 32);
      }
      id v11 = v10;
      id v12 = [v10 url];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      unsigned int v19 = v9;
      unint64_t v14 = v9[2];
      unint64_t v13 = v9[3];
      if (v14 >= v13 >> 1)
      {
        sub_100190C40(v13 > 1, v14 + 1, 1);
        id v9 = v19;
      }
      ++v8;
      _OWORD v9[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v14, v5, v18);
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id DOCPickerContext.init(with:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v52 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = &v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave];
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = a1;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = 0;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    id v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v11 = v4 + 16;
    id v50 = v12;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v48 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    Swift::Int v44 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v45 = v14;
    Swift::Int v43 = (void (**)(char *, uint64_t))(v11 - 8);
    Swift::Int v39 = v9;
    uint64_t v40 = a1;
    swift_bridgeObjectRetain_n();
    Swift::Int v41 = v1;
    id v15 = v1;
    uint64_t v42 = 0;
    uint64_t v51 = _swiftEmptyArrayStorage;
    unint64_t v49 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 40);
    v38[1] = (v11 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v46 = v11;
    Swift::Int v47 = v8;
    while (1)
    {
      v50(v8, v13, v3);
      id v16 = *v49;
      (*v49)(v8, 0, 1, v3);
      if ((*v48)(v8, 1, v3) == 1)
      {
        uint64_t v1 = v41;
        id v9 = v39;
        goto LABEL_20;
      }
      (*v44)(v52, v8, v3);
      URL._bridgeToObjectiveC()(v17);
      unsigned int v19 = v18;
      unsigned int v20 = [v18 startAccessingSecurityScopedResource];
      v54[0] = 0;
      id v21 = [v19 br_typeIdentifierWithError:v54];
      id v22 = v54[0];
      if (!v21) {
        break;
      }
      id v23 = v21;
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;
      id v27 = v22;

      if (v20) {
        goto LABEL_8;
      }
LABEL_9:

      (*v43)(v52, v3);
      if (v26)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v8 = v47;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v51 = sub_1000825D0(0, v51[2] + 1, 1, v51);
        }
        unint64_t v30 = v51[2];
        unint64_t v29 = v51[3];
        if (v30 >= v29 >> 1) {
          uint64_t v51 = sub_1000825D0((void *)(v29 > 1), v30 + 1, 1, v51);
        }
        id v31 = v51;
        v51[2] = v30 + 1;
        id v32 = &v31[2 * v30];
        void v32[4] = v24;
        v32[5] = v26;
      }
      else
      {
        uint64_t v8 = v47;
      }
      v13 += v45;
      if (!--v10)
      {
        uint64_t v1 = v41;
        id v9 = v39;
        v16(v8, 1, 1, v3);
        goto LABEL_20;
      }
    }
    id v33 = v54[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    uint64_t v42 = 0;
    if (!v20) {
      goto LABEL_9;
    }
LABEL_8:
    [v19 stopAccessingSecurityScopedResource];
    goto LABEL_9;
  }
  id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain_n();
  uint64_t v35 = v1;
  uint64_t v51 = _swiftEmptyArrayStorage;
  v34(v8, 1, 1, v3);
LABEL_20:
  swift_bridgeObjectRelease_n();
  swift_beginAccess();
  *(void *)id v9 = v51;

  swift_bridgeObjectRelease();
  Swift::Int v36 = (objc_class *)type metadata accessor for DOCPickerContext();
  v53.receiver = v1;
  v53.super_class = v36;
  return [super init];
}

{
  char *v1;
  objc_super v3;

  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCPickerContext();
  return [super init];
}

id DOCPickerContext.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPickerContext();
  return [super dealloc];
}

uint64_t sub_10018EED4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10018F418(a1, a2, a3, a4, &qword_100708EB8, (uint64_t *)&unk_100708EC0);
}

char *sub_10018EEE8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000B7F8C(a1, a2, a3, a4, &qword_100708EA8, &qword_100708EB0);
}

void *sub_10018EEFC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100009AB8(a1, a2, a3, a4, &qword_100708EE0);
}

uint64_t sub_10018EF08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708D30, (uint64_t (*)(void))type metadata accessor for DOCFileOperation, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
}

void *sub_10018EF3C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708BE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100193C7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018F04C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708F90);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100193E84(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018F15C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708DF8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100193F78(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018F26C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708DB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10019406C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10018F390(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100190AE8(a1, a2, a3, a4, (uint64_t *)&unk_100708CB0);
}

uint64_t sub_10018F39C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_1007054E0, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode);
}

uint64_t sub_10018F3D0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708CF8, (uint64_t (*)(void))&type metadata accessor for UICellAccessory, (uint64_t (*)(void))&type metadata accessor for UICellAccessory);
}

uint64_t sub_10018F404(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10018F418(a1, a2, a3, a4, &qword_100708E98, &qword_100708EA0);
}

uint64_t sub_10018F418(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    id v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000CBE70(a5);
  uint64_t v13 = *(void *)(sub_1000CBE70(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  id v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1000CBE70(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100194D84(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_10018F684(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F6D4(a1, a2, a3, a4, &qword_100708E20, (uint64_t)&_s13DOCFPDragInfoVN, (void (*)(void, int64_t, void *, void *, uint64_t))sub_100194678);
}

void *sub_10018F6AC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F6D4(a1, a2, a3, a4, &qword_100708E10, (uint64_t)&unk_100708E18, (void (*)(void, int64_t, void *, void *, uint64_t))sub_1000B80A8);
}

void *sub_10018F6D4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t a6, void (*a7)(void, int64_t, void *, void *, uint64_t))
{
  char v10 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v12 = a2;
    goto LABEL_8;
  }
  unint64_t v11 = a4[3];
  int64_t v12 = v11 >> 1;
  if ((uint64_t)(v11 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v12 + 0x4000000000000000 >= 0)
  {
    int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v12 = a2;
    }
LABEL_8:
    int64_t v13 = a4[2];
    if (v12 <= v13) {
      int64_t v14 = a4[2];
    }
    else {
      int64_t v14 = v12;
    }
    if (v14)
    {
      sub_1000CBE70(a5);
      unint64_t v15 = (void *)swift_allocObject();
      int64_t v16 = j__malloc_size(v15);
      uint64_t v17 = v16 - 32;
      if (v16 < 32) {
        uint64_t v17 = v16 - 17;
      }
      _OWORD v15[2] = v13;
      void v15[3] = 2 * (v17 >> 4);
      BOOL v18 = v15 + 4;
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v15 = _swiftEmptyArrayStorage;
      BOOL v18 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v15 != a4 || v18 >= &a4[2 * v13 + 4]) {
          memmove(v18, a4 + 4, 16 * v13);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    a7(0, v13, v18, a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10018F7F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10018F418(a1, a2, a3, a4, &qword_100708D68, (uint64_t *)&unk_100708D70);
}

uint64_t sub_10018F80C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, (uint64_t *)&unk_1007087F0, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

void *sub_10018F840(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708D28);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100193B88(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10018F950(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708E80, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_10018F984(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_10070AE10, (uint64_t (*)(void))type metadata accessor for DOCOperationItem, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
}

char *sub_10018F9B8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000B7F8C(a1, a2, a3, a4, &qword_100708E40, &qword_100708E48);
}

void *sub_10018F9CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70((uint64_t *)&unk_100708E50);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100193A7C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018FADC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708C20);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10019456C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018FBEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70((uint64_t *)&unk_10070F6C0);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100194164(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018FD10(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001909C0(a1, a2, a3, a4, (uint64_t *)&unk_100708F80, &qword_100708608);
}

void *sub_10018FD24(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F6D4(a1, a2, a3, a4, &qword_100708E60, (uint64_t)&type metadata for DOCImageContainerFittingView.ViewPair, (void (*)(void, int64_t, void *, void *, uint64_t))sub_100194678);
}

uint64_t sub_10018FD4C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708C48, type metadata accessor for DOCMultiNodeObserver.Subscriber, type metadata accessor for DOCMultiNodeObserver.Subscriber);
}

void *sub_10018FD80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_10070CE50);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100194768(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018FE90(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708D58);
      char v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100193D74(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10018FFB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708C40);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100194870(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001900C8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001900F0(a1, a2, a3, a4, (uint64_t *)&unk_100708D80, &qword_10070D7F0);
}

void *sub_1001900DC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001900F0(a1, a2, a3, a4, (uint64_t *)&unk_100708C30, (uint64_t *)&unk_100717500);
}

void *sub_1001900F0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1000CBE70(a5);
      int64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      unint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v13 = _swiftEmptyArrayStorage;
      unint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10019436C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100190220(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, (uint64_t *)&unk_100708E28, (uint64_t (*)(void))type metadata accessor for DOCFileEntity, (uint64_t (*)(void))type metadata accessor for DOCFileEntity);
}

void *sub_100190254(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708EF0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100194964(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_10019037C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10018F6D4(a1, a2, a3, a4, (uint64_t *)&unk_100708F30, (uint64_t)&unk_10071A220, (void (*)(void, int64_t, void *, void *, uint64_t))sub_1000B80A8);
}

void *sub_1001903A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708D38);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 232);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[29 * v8 + 4]) {
          memmove(v12, a4 + 4, 232 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100194A74(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1001904CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708CC8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100194B80(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001905DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10007DFA0(a1, a2, a3, a4, &qword_100708CD8, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

void *sub_100190610(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708CC0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      int64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100194478(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_100190720(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1000B7F8C(a1, a2, a3, a4, &qword_100708C88, (uint64_t *)&unk_100708BD0);
}

void *sub_100190734(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70(&qword_100708BC0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100194C8C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100190860(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001900F0(a1, a2, a3, a4, (uint64_t *)&unk_100708C50, (uint64_t *)&unk_100708640);
}

void *sub_100190874(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1000CBE70((uint64_t *)&unk_100708C70);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10019425C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100190998(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10018F418(a1, a2, a3, a4, &qword_100708E68, (uint64_t *)&unk_100708E70);
}

void *sub_1001909AC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1001909C0(a1, a2, a3, a4, &qword_100708F10, &qword_100708F18);
}

void *sub_1001909C0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_1000CBE70(a5);
      int64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      void v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      int64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v13 = _swiftEmptyArrayStorage;
      int64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100194FC4(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_100190ADC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_100190AE8(a1, a2, a3, a4, &qword_100708F08);
}

char *sub_100190AE8(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_1000CBE70(a5);
      uint64_t v11 = (char *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      int64_t v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (char *)&_swiftEmptyArrayStorage;
      int64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_100194EDC(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100190BE0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191360(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190C00(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191520(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190C20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001916A8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190C40(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1007087F0, (uint64_t (*)(void))&type metadata accessor for URL);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190C7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_100708D30, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190CB8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191818(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190CD8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001919A4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190CF8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192B84(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708C50, (uint64_t *)&unk_100708640);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190D28(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191B3C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190D48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191C8C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190D68(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_10070C030, (uint64_t (*)(void))&type metadata accessor for UTType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190DA4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192298(a1, a2, a3, *v3, &qword_100708DF8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190DD4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191E38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190DF4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100191FC8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190E14(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192298(a1, a2, a3, *v3, &qword_100708DB8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190E44(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001925B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190E64(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_100708E80, (uint64_t (*)(void))&type metadata accessor for IndexPath);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190EA0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_1007141E0, (uint64_t (*)(void))&type metadata accessor for DOCDragPasteboardType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190EDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000AF858(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708E00, (uint64_t *)&unk_10071A200);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190F0C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_10070AE10, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190F48(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708E28, (uint64_t (*)(void))type metadata accessor for DOCFileEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190F84(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192B84(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708C30, (uint64_t *)&unk_100717500);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100190FB4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192D2C(a1, a2, a3, *v3, &qword_100708C90);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100190FE4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10019289C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100191004(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006EB48(a1, a2, a3, (void *)*v3, &qword_100708F98, type metadata accessor for FPProviderDomainID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191040(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_100708CF8, (uint64_t (*)(void))&type metadata accessor for UICellAccessory);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10019107C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192A08(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10019109C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000AF858(a1, a2, a3, (void *)*v3, &qword_100708BE8, (uint64_t *)&unk_100708BF0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001910CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192B84(a1, a2, a3, (void *)*v3, &qword_100708F68, (uint64_t *)&unk_100708F70);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001910FC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192D2C(a1, a2, a3, *v3, &qword_100708C98);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10019112C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193310(a1, a2, a3, (void *)*v3, &qword_100708D00, &qword_100708D08);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10019115C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100192E98(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10019117C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193310(a1, a2, a3, (void *)*v3, &qword_100708F50, &qword_100708F58);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001911AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10006EB48(a1, a2, a3, (void *)*v3, &qword_100708E38, type metadata accessor for NSFileProviderItemIdentifier);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001911E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193004(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191208(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000AF858(a1, a2, a3, (void *)*v3, &qword_100708F20, &qword_100708F28);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191238(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708D10, (uint64_t (*)(void))&type metadata accessor for UUID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191274(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001931B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100191294(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193310(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_100708CA0, &qword_1007076B0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1001912C4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000B9F88(a1, a2, a3, (void *)*v3, &qword_10071A180, type metadata accessor for DOCBrowserHistoryItem);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191300(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193550(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191320(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1001936F4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100191340(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100193898(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100191360(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708C00);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001914EC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100193310(a1, a2, a3, a4, &qword_100708EB8, (uint64_t *)&unk_100708EC0);
}

uint64_t sub_100191500(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000B9F88(a1, a2, a3, a4, &qword_100708E80, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

uint64_t sub_100191520(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708D48);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  size_t v15 = 2 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_1000CBE70(&qword_100708D50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001916A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708BE0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100191818(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708D20);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000CBE70((uint64_t *)&unk_100708BD0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001919A4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708C80);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100191B28(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100192B84(a1, a2, a3, a4, (uint64_t *)&unk_100708C50, (uint64_t *)&unk_100708640);
}

uint64_t sub_100191B3C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708D90);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100191C8C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708F40);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 72 * v8) {
      memmove(v10 + 4, a4 + 4, 72 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 72 * v8 || v12 >= v13 + 72 * v8)
  {
    sub_1000CBE70(&qword_10070D1F0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100191E38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708DE0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100191FB4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_100193310(a1, a2, a3, a4, (uint64_t *)&unk_10070F6B0, &qword_100708DF0);
}

uint64_t sub_100191FC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708DD0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192138(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_10070F6A0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192298(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000CBE70(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192408(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708DC0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1000CBE70(&qword_100708DC8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001925B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708E88);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192710(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708E50);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1000CBE70(&qword_10070ED50);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10019289C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708E20);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192A08(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_10070F6C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192B84(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_1000CBE70(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size(v13);
    void v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_1000CBE70(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192D2C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_1000CBE70(a5);
    uint64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100192E98(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708F60);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193004(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708DA0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    void v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1000CBE70(&qword_100708DA8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193190(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1000B9F88(a1, a2, a3, a4, &qword_100708CD8, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1001931B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100719C30);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193310(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    size_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000CBE70(a5);
  uint64_t v13 = *(void *)(sub_1000CBE70(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  size_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_1000CBE70(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  id v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193550(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708C60);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_1000CBE70((uint64_t *)&unk_10071A1A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001936F4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70((uint64_t *)&unk_100708C70);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    void v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 80 * v8) {
      memmove(v10 + 4, a4 + 4, 80 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 80 * v8 || v12 >= v13 + 80 * v8)
  {
    sub_1000CBE70(&qword_10071A530);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193898(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100708C18);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001939F8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DOCPickerContext()
{
  return self;
}

uint64_t sub_100193A7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000CBE70(&qword_10070ED50);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193B88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193C7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193D74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1000CBE70(&qword_100708D60);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193E84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100193F78(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10019406C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194164(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10019425C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      sub_1000CBE70(&qword_10071A530);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10019436C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_1000CBE70(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194478(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10019456C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1000CBE70(&qword_100708C28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194678(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194768(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194964(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1000CBE70(&qword_100708EF8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194A74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 232 * a1 + 32;
    unint64_t v6 = a3 + 232 * v4;
    if (v5 >= v6 || v5 + 232 * v4 <= a3)
    {
      sub_1000CBE70(&qword_100708D40);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194B80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1000CBE70(&qword_100708CD0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194C8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194D84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_1000CBE70(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100194EDC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100194FC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      sub_1000CBE70(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001950CC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100195138()
{
  type metadata accessor for DOCDebugInfoManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100196EA4();
  qword_100736E78 = v0;
  return result;
}

uint64_t sub_100195174()
{
  sub_1000CBE70(&qword_100709300);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A0500;
  uint64_t v1 = type metadata accessor for ViewHierarchyProvider();
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 56) = v1;
  *(void *)(v0 + 64) = &off_100694630;
  *(void *)(v0 + 32) = v2;
  uint64_t v3 = type metadata accessor for ViewControllerHierarchyProvider();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 104) = &off_100694648;
  *(void *)(v0 + 72) = v4;
  uint64_t v5 = type metadata accessor for SpotlightDumpProvider();
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 136) = v5;
  *(void *)(v0 + 144) = &off_100694618;
  *(void *)(v0 + 112) = v6;
  uint64_t v7 = type metadata accessor for SpotlightCollectorManagerProvider();
  uint64_t result = swift_allocObject();
  *(void *)(v0 + 176) = v7;
  *(void *)(v0 + 184) = &off_100694600;
  *(void *)(v0 + 152) = result;
  qword_100736E80 = v0;
  return result;
}

uint64_t sub_100195250(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v69 = a5;
  BOOL v73 = a4;
  uint64_t v72 = a3;
  uint64_t v87 = a2;
  uint64_t v68 = a1;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v74 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v70 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v88 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  uint64_t v66 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v14;
  __chkstk_darwin(v13);
  size_t v16 = (char *)v65 - v15;
  uint64_t v89 = type metadata accessor for URL();
  uint64_t v91 = *(void *)(v89 - 8);
  uint64_t v17 = __chkstk_darwin(v89);
  uint64_t v92 = (char *)v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v18;
  __chkstk_darwin(v17);
  BOOL v90 = (char *)v65 - v19;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (void *)((char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v65[1] = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *uint64_t v23 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  char v24 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v21 + 8))(v23, v20);
  if (v24)
  {
    if (*(unsigned char *)(v6 + 16))
    {
      if (v73) {
        return v73(0);
      }
    }
    else
    {
      uint64_t v26 = v6;
      *(unsigned char *)(v6 + 16) = 1;
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = _swiftEmptyArrayStorage;
      sub_100197BF0(v72, (uint64_t)v16);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v65[0] = v7;
      if (EnumCaseMultiPayload == 1)
      {
        unint64_t v29 = v90;
        uint64_t v30 = v89;
        (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v90, v16, v89);
        id v31 = v88;
      }
      else
      {
        sub_100197C54((uint64_t)v16);
        id v32 = NSTemporaryDirectory();
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v29 = v90;
        URL.init(fileURLWithPath:isDirectory:)();
        swift_bridgeObjectRelease();
        id v31 = v88;
        uint64_t v30 = v89;
      }
      uint64_t v86 = v27;
      uint64_t v84 = v10;
      uint64_t v33 = *(void *)(v68 + 16);
      BOOL v83 = v9;
      uint64_t v85 = v26;
      if (v33)
      {
        dispatch_group_t v81 = *(dispatch_group_t *)(v26 + 24);
        uint64_t v80 = *(void *)(v26 + 32);
        uint64_t v34 = v68 + 32;
        uint64_t v79 = v91 + 16;
        v82 += 7;
        uint64_t v78 = v91 + 32;
        uint64_t v77 = &v96;
        uint64_t v76 = (void (**)(char *, uint64_t))(v74 + 8);
        uint64_t v75 = (void (**)(char *, uint64_t))(v70 + 8);
        swift_bridgeObjectRetain();
        uint64_t v35 = v65[0];
        Swift::Int v36 = v92;
        do
        {
          dispatch_group_enter(v81);
          sub_1000D4774(v34, (uint64_t)&v100);
          uint64_t v37 = v91;
          Swift::Int v38 = v36;
          uint64_t v39 = v89;
          (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v38, v29, v89);
          unint64_t v40 = (*(unsigned __int8 *)(v37 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
          unint64_t v41 = (v82 + v40) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v44 = swift_allocObject();
          sub_1001146DC(&v100, v44 + 16);
          (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v44 + v40, v92, v39);
          uint64_t v45 = v86;
          uint64_t v46 = v87;
          *(void *)(v44 + v41) = v87;
          *(void *)(v44 + v42) = v85;
          id v31 = v88;
          *(void *)(v44 + v43) = v45;
          Swift::Int v47 = v83;
          uint64_t v98 = sub_100197DC0;
          uint64_t v99 = v44;
          aBlock = _NSConcreteStackBlock;
          uint64_t v95 = 1107296256;
          uint64_t v96 = sub_1000666D8;
          Swift::String v97 = &unk_100694750;
          unint64_t v48 = _Block_copy(&aBlock);
          id v49 = v46;
          swift_retain();
          swift_retain();
          static DispatchQoS.unspecified.getter();
          uint64_t v93 = _swiftEmptyArrayStorage;
          sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000CBE70((uint64_t *)&unk_100705390);
          sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          unint64_t v29 = v90;
          _Block_release(v48);
          Swift::Int v36 = v92;
          (*v76)(v47, v35);
          (*v75)(v31, v84);
          swift_release();
          v34 += 40;
          --v33;
        }
        while (v33);
        swift_bridgeObjectRelease();
        uint64_t v30 = v89;
        uint64_t v50 = v91;
        uint64_t v26 = v85;
      }
      else
      {
        v82 += 7;
        uint64_t v50 = v91;
        Swift::Int v36 = v92;
      }
      uint64_t v88 = *(char **)(v26 + 24);
      dispatch_group_t v81 = (dispatch_group_t)static OS_dispatch_queue.main.getter();
      sub_100197BF0(v72, v71);
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v36, v90, v30);
      unint64_t v51 = (*(unsigned __int8 *)(v66 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
      unint64_t v52 = (v67 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (*(unsigned __int8 *)(v50 + 80) + v52 + 8) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
      unint64_t v54 = (v82 + v53) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = v26;
      sub_10019803C(v71, v55 + v51);
      *(void *)(v55 + v52) = v86;
      (*(void (**)(unint64_t, char *, uint64_t))(v50 + 32))(v55 + v53, v92, v30);
      id v56 = v87;
      *(void *)(v55 + v54) = v87;
      unint64_t v57 = (void *)(v55 + ((v54 + 15) & 0xFFFFFFFFFFFFFFF8));
      uint64_t v58 = (uint64_t)v73;
      uint64_t v59 = v69;
      *unint64_t v57 = v73;
      v57[1] = v59;
      uint64_t v98 = sub_1001980A0;
      uint64_t v99 = v55;
      aBlock = _NSConcreteStackBlock;
      uint64_t v95 = 1107296256;
      uint64_t v96 = sub_1000666D8;
      Swift::String v97 = &unk_1006947A0;
      Swift::String v60 = _Block_copy(&aBlock);
      id v61 = v56;
      swift_retain();
      swift_retain();
      sub_1000C0640(v58);
      static DispatchQoS.unspecified.getter();
      *(void *)&long long v100 = _swiftEmptyArrayStorage;
      sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      unint64_t v62 = v83;
      uint64_t v63 = v65[0];
      dispatch thunk of SetAlgebra.init<A>(_:)();
      dispatch_group_t v64 = v81;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v60);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v63);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v31, v84);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v30);
      swift_release();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100195D78(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a3;
  id v31 = a2;
  uint64_t v32 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v32 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v32);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_1000A6B78(a1, a1[3]);
  v11._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  *(void *)&v36[0] = 0xD000000000000030;
  *((void *)&v36[0] + 1) = 0x80000001005D89B0;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  long long v13 = v36[0];
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  sub_1000A6B78(a1, v15);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
  uint64_t v18 = v17;
  v36[0] = v13;
  swift_bridgeObjectRetain();
  v19._uint64_t countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v10;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  id v31 = sub_1000A6B78(a1, v21);
  sub_1000D4774((uint64_t)a1, (uint64_t)v36);
  uint64_t v22 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v10;
  uint64_t v24 = v32;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v22, v23, v32);
  unint64_t v25 = (*(unsigned __int8 *)(v6 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v33;
  sub_1001146DC(v36, v26 + 24);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v26 + v25, v22, v24);
  *(void *)(v26 + ((v7 + v25 + 7) & 0xFFFFFFFFFFFFFFF8)) = v34;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v20 + 16);
  swift_retain();
  swift_retain();
  v27(v35, sub_1001982FC, v26, v21, v20);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v30, v24);
}

uint64_t sub_100196080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a6;
  uint64_t v26 = a1;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v27 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  __chkstk_darwin(v11);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(a3 + 32);
  sub_1000D4774(a4, (uint64_t)v36);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v26;
  *(void *)(v20 + 24) = a2;
  sub_1001146DC(v36, v20 + 32);
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v20 + v18, v17, v14);
  *(void *)(v20 + v19) = v28;
  *(void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_1001984B0;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100694868;
  uint64_t v21 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v34 = _swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v22 = v27;
  uint64_t v23 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  return swift_release();
}

void sub_100196470(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for String.Encoding();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v30 = a1;
    uint64_t v31 = a2;
    static String.Encoding.utf8.getter();
    sub_10009D28C();
    StringProtocol.write(to:atomically:encoding:)();
    uint64_t v23 = (unint64_t *)(v28 + 16);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
    swift_beginAccess();
    unint64_t v24 = *v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v23 = v24;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v24 = sub_10018F80C(0, *(void *)(v24 + 16) + 1, 1, v24);
      *uint64_t v23 = v24;
    }
    unint64_t v27 = *(void *)(v24 + 16);
    unint64_t v26 = *(void *)(v24 + 24);
    if (v27 >= v26 >> 1)
    {
      unint64_t v24 = sub_10018F80C(v26 > 1, v27 + 1, 1, v24);
      *uint64_t v23 = v24;
    }
    *(void *)(v24 + 16) = v27 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v24+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v27, v13, v10);
    swift_endAccess();
    dispatch_group_leave(*(dispatch_group_t *)(v29 + 24));
  }
  else
  {
    unint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    sub_1000A6B78(a3, a3[3]);
    uint64_t v20 = _typeName(_:qualified:)();
    uint64_t v22 = v21;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100073F48();
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v22;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_100196894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v13 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(unsigned char *)(a1 + 16) = 0;
  sub_100197BF0(a2, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
    uint64_t v18 = URL.path.getter();
    uint64_t v20 = v19;
    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_100073F48();
    *(void *)(v17 + 32) = v18;
    *(void *)(v17 + 40) = v20;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v21 = [a5 presentingViewController];
    if (!v21) {
      id v21 = a5;
    }
    aBlock = 0;
    unint64_t v44 = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    aBlock = (void **)0xD000000000000021;
    unint64_t v44 = 0x80000001005D8920;
    v22._uint64_t countAndFlagsBits = URL.path.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    NSString v23 = String._bridgeToObjectiveC()();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = [self alertControllerWithTitle:v23 message:v24 preferredStyle:1];

    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    id v27 = v25;
    NSString v28 = String._bridgeToObjectiveC()();
    Swift::Int v47 = sub_1001981F4;
    uint64_t v48 = v26;
    aBlock = _NSConcreteStackBlock;
    unint64_t v44 = 1107296256;
    uint64_t v45 = sub_10041B2E4;
    uint64_t v46 = &unk_1006947F0;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_release();
    id v30 = [self actionWithTitle:v28 style:0 handler:v29];
    _Block_release(v29);

    [v27 addAction:v30];
    [v27 setPreferredAction:v30];
    [v21 presentViewController:v27 animated:1 completion:0];

    sub_100197C54((uint64_t)v15);
    if (!a6) {
      return;
    }
LABEL_9:
    a6(1);
    return;
  }
  uint64_t v42 = a7;
  uint64_t v32 = *v15;
  uint64_t v31 = v15[1];
  uint64_t v33 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
  swift_beginAccess();
  uint64_t v35 = *(void *)(a3 + 16);
  *(void *)(v34 + 56) = sub_1000CBE70((uint64_t *)&unk_100719C50);
  *(void *)(v34 + 64) = sub_100073DF0(&qword_100709308, (uint64_t *)&unk_100719C50);
  *(void *)(v34 + 32) = v35;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_1004F2910(v36);
  swift_bridgeObjectRelease();
  id v37 = objc_allocWithZone((Class)UIActivityViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v39 = [v37 initWithActivityItems:isa applicationActivities:0];

  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPageSheet);
  id v40 = [v39 popoverPresentationController];
  if (v40)
  {
    unint64_t v41 = v40;
    [v40 setSourceView:v31];
  }
  [v32 presentViewController:v39 animated:1 completion:0];

  if (a6) {
    goto LABEL_9;
  }
}

uint64_t DOCDebugInfoManager.deinit()
{
  return v0;
}

uint64_t DOCDebugInfoManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCDebugInfoManager()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCDebugInfoManager.Context()
{
  return &type metadata for DOCDebugInfoManager.Context;
}

uint64_t sub_100196EA4()
{
  v7[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v7[0] - 8);
  __chkstk_darwin(v7[0]);
  uint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  *(unsigned char *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = dispatch_group_create();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_100076E5C((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v7[0]);
  *(void *)(v0 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  return v0;
}

uint64_t type metadata accessor for ViewControllerHierarchyProvider()
{
  return self;
}

uint64_t sub_10019713C()
{
  return 7633012;
}

uint64_t type metadata accessor for ViewHierarchyProvider()
{
  return self;
}

uint64_t sub_100197178(unint64_t a1)
{
  unint64_t v1 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    unint64_t v21 = v1 & 0xC000000000000001;
    unint64_t v5 = v1;
    do
    {
      if (v21) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v1 + 8 * v4 + 32);
      }
      uint64_t v7 = v6;
      ++v4;
      id v8 = [v6 description:v21];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      swift_beginAccess();
      v12._uint64_t countAndFlagsBits = v9;
      v12._object = v11;
      String.append(_:)(v12);
      swift_endAccess();
      swift_bridgeObjectRelease();
      id v13 = [v7 attributeSet];
      id v14 = [v13 attributeDictionary];

      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v15 = Dictionary.description.getter();
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      v18._uint64_t countAndFlagsBits = v15;
      v18._object = v17;
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v19._uint64_t countAndFlagsBits = 10;
      v19._object = (void *)0xE100000000000000;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 2570;
      v20._object = (void *)0xE200000000000000;
      String.append(_:)(v20);
      swift_endAccess();

      unint64_t v1 = v5;
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_100197400(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_10009E6C4(0, &qword_1007092F8);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100197484(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v6 = *(void *)(a4 + 24);
  swift_bridgeObjectRetain();
  a2(v7, v6);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for SpotlightDumpProvider()
{
  return self;
}

void sub_100197518(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t type metadata accessor for SpotlightCollectorManagerProvider()
{
  return self;
}

uint64_t sub_100197548(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  id v3 = [self _recursiveDescription];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  a2(v4, v6);

  return swift_bridgeObjectRelease();
}

void sub_1001975D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  *(void *)(v4 + 24) = 0xE000000000000000;
  sub_10009E6C4(0, (unint64_t *)&qword_1007092F0);
  uint64_t v5 = (void *)static CSSearchQuery.withString(_:fetchedAttributes:)();
  id v13 = sub_100197B18;
  id v14 = (void *)v4;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_100197400;
  Swift::String v12 = &unk_100694688;
  uint64_t v6 = _Block_copy(&v9);
  swift_retain();
  swift_release();
  [v5 setFoundItemsHandler:v6];
  _Block_release(v6);
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = a1;
  v7[3] = a2;
  void v7[4] = v4;
  id v13 = sub_100197B60;
  id v14 = v7;
  uint64_t v9 = _NSConcreteStackBlock;
  uint64_t v10 = 1107296256;
  uint64_t v11 = sub_1001950CC;
  Swift::String v12 = &unk_1006946D8;
  id v8 = _Block_copy(&v9);
  swift_retain();
  swift_retain();
  swift_release();
  [v5 setCompletionHandler:v8];
  _Block_release(v8);
  [v5 start];
  swift_release();
}

void sub_1001977DC(void *a1, void (*a2)(void, unint64_t))
{
  id v3 = [a1 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = v3;
  id v5 = [v3 recursiveDescription];

  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = v7;

  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  id v10 = [self anyWindowPreferingKeyWindow];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 rootViewController];

    if (v12)
    {
      v13._object = (void *)0x80000001005D8870;
      v13._uint64_t countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v13);
      id v14 = [v12 view];
      if (v14)
      {
        uint64_t v15 = v14;
        id v16 = [v14 recursiveDescription];

        if (v16)
        {
          uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          Swift::String v19 = v18;

          v20._uint64_t countAndFlagsBits = v17;
          v20._object = v19;
          String.append(_:)(v20);

          swift_bridgeObjectRelease();
          goto LABEL_8;
        }
LABEL_14:
        __break(1u);
        return;
      }
LABEL_13:
      __break(1u);
      goto LABEL_14;
    }
  }
LABEL_8:
  a2(0, 0xE000000000000000);

  swift_bridgeObjectRelease();
}

uint64_t sub_100197998(void *a1, void (*a2)(uint64_t, uint64_t))
{
  id v3 = [a1 _printHierarchy];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  uint64_t v17 = v4;
  uint64_t v18 = v6;
  id v7 = [self anyWindowPreferingKeyWindow];
  if (v7)
  {
    id v8 = v7;
    id v9 = [v7 rootViewController];

    if (v9)
    {
      v10._object = (void *)0x80000001005D8870;
      v10._uint64_t countAndFlagsBits = 0xD000000000000011;
      String.append(_:)(v10);
      id v11 = [v9 _printHierarchy];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v14 = v13;

      v15._uint64_t countAndFlagsBits = v12;
      v15._object = v14;
      String.append(_:)(v15);

      swift_bridgeObjectRelease();
      uint64_t v4 = v17;
      uint64_t v6 = v18;
    }
  }
  a2(v4, v6);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100197AE0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100197B18(unint64_t a1)
{
  return sub_100197178(a1);
}

uint64_t sub_100197B20()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100197B60(uint64_t a1)
{
  return sub_100197484(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t type metadata accessor for DOCDebugInfoManager.OutputKind()
{
  uint64_t result = qword_100709380;
  if (!qword_100709380) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100197BB8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100197BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100197C54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100197CB0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10009B1B8(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100197DC0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_100195D78((void *)(v0 + 16), (void *)(v0 + v2), v5, v6, v7);
}

uint64_t sub_100197E68()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCDebugInfoManager.OutputKind() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = (v12 + 24) & ~v12;
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v6 + 8) & ~v6;
  unint64_t v8 = (*(void *)(v5 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  Swift::String v10 = (id *)(v0 + v2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(id *, uint64_t))(v5 + 8))(v10, v4);
  }
  else
  {
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v4);

  if (*(void *)(v0 + v9)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v9 + 16, v12 | v6 | 7);
}

uint64_t sub_10019803C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCDebugInfoManager.OutputKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001980A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCDebugInfoManager.OutputKind() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + v3);
  uint64_t v9 = v0 + v5;
  Swift::String v10 = *(void **)(v0 + v6);
  uint64_t v11 = v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v12 = *(void (**)(uint64_t))v11;
  uint64_t v13 = *(void *)(v11 + 8);

  sub_100196894(v7, v0 + v2, v8, v9, v10, v12, v13);
}

uint64_t sub_1001981BC()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001981F4()
{
  return [*(id *)(v0 + 16) dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_10019820C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  sub_10009B1B8(v0 + 24);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001982FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100196080(a1, a2, v7, v2 + 24, v2 + v6, v8);
}

uint64_t sub_1001983B0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  sub_10009B1B8(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1001984B0()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = *(void *)((char *)v0 + v3);
  uint64_t v7 = *(void *)((char *)v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100196470(v4, v5, v0 + 4, (uint64_t)v0 + v2, v6, v7);
}

unint64_t sub_100198550()
{
  unint64_t result = qword_10070ACD0;
  if (!qword_10070ACD0)
  {
    sub_10009E6C4(255, (unint64_t *)&qword_100707EE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070ACD0);
  }
  return result;
}

char *sub_1001985B8(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *a2;
      uint64_t v9 = a2[1];
      *(void *)a1 = v8;
      *((void *)a1 + 1) = v9;
      Swift::String v10 = v8;
      uint64_t v11 = v9;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1001986BC(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for URL();
    unint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    v3(a1, v2);
  }
  else
  {

    uint64_t v4 = *(void **)(a1 + 8);
  }
}

void *sub_100198754(void *a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    int v5 = *(void **)a2;
    uint64_t v6 = *(void **)(a2 + 8);
    *a1 = v5;
    a1[1] = v6;
    id v7 = v5;
    id v8 = v6;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_100198808(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_100197C54((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      int v5 = *a2;
      *a1 = *a2;
      uint64_t v6 = a2[1];
      a1[1] = v6;
      id v7 = v5;
      id v8 = v6;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1001988D4(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10019898C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100197C54((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCProgressProvidingOperationIconType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DOCProgressProvidingOperationIconType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_100198AA8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_100198AB8()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

NSString sub_100198B58()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100736E90 = (uint64_t)result;
  return result;
}

id sub_100198B90(uint64_t a1, void *a2)
{
  uint64_t v5 = OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems] = _swiftEmptyArrayStorage;
  uint64_t v6 = *(void **)&v2[v5];
  *(void *)&v2[v5] = 0;
  id v7 = v2;

  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceURLs] = a1;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCMoveOperation_destinationFolderItem] = a2;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager] = 0;
  id v8 = a2;

  type metadata accessor for URL();
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for DOCMoveOperation();
  id v10 = [v12 initWithURLs:isa, v8];

  return v10;
}

char *sub_100198CE0(uint64_t a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceURLs] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems] = a1;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_destinationFolderItem] = a2;
  *(void *)&v3[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager] = a3;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  swift_bridgeObjectRetain();
  id v6 = a2;
  id v7 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for DOCMoveOperation();
  uint64_t v9 = (char *)objc_msgSendSuper2(&v13, "initWithItems:destinationFolder:", isa, v6);

  id v10 = *(void **)&v9[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager];
  if (v10) {
    [v10 registerUndoOperationForSender:v9];
  }
  else {
    uint64_t v11 = v9;
  }

  return v9;
}

id sub_100198ED8()
{
  unint64_t v1 = v0;
  unint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems];
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v8 < 1) {
      goto LABEL_11;
    }
  }
  else if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_11;
  }
  if (*(void *)&v1[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager])
  {
    swift_bridgeObjectRetain();
    if (v2 >> 62)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v3 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      unint64_t v2 = v3;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    uint64_t v4 = sub_10015983C(v2);
    swift_bridgeObjectRelease();
    if (v4)
    {
      swift_getObjectType();
      uint64_t v5 = DOCNode.fpfs_syncFetchFPItem()();
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v5 = 0;
    }
    id v6 = *(void **)&v1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem];
    *(void *)&v1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem] = v5;
  }
LABEL_11:
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for DOCMoveOperation();
  return [super actionMain];
}

uint64_t sub_10019906C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100053674(a1, (uint64_t)aBlock);
  objc_super v12 = v29;
  if (!v29)
  {
    uint64_t v17 = 0;
    if (!a2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  objc_super v13 = sub_1000A6B78(aBlock, (uint64_t)v29);
  uint64_t v14 = *(v12 - 1);
  __chkstk_darwin(v13);
  id v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v14 + 16))(v16);
  uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, void *))(v14 + 8))(v16, v12);
  sub_10009B1B8((uint64_t)aBlock);
  if (a2) {
LABEL_3:
  }
    a2 = (void *)_convertErrorToNSError(_:)();
LABEL_4:
  uint64_t v18 = (objc_class *)type metadata accessor for DOCMoveOperation();
  v32.receiver = v3;
  v32.super_class = v18;
  [super finishWithResult:v17 error:a2];
  swift_unknownObjectRelease();

  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  Swift::String v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v3;
  id v30 = sub_100199D30;
  uint64_t v31 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  uint64_t v29 = &unk_1006948B8;
  unint64_t v21 = _Block_copy(aBlock);
  id v22 = v3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v26);
}

void sub_10019942C(uint64_t a1)
{
  id v2 = [self defaultCenter];
  id v3 = v2;
  if (qword_100704EC0 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  [v2 postNotificationName:qword_100736E90 object:a1];
}

uint64_t sub_1001995DC()
{
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems);
  if (!(v1 >> 62))
  {
    if (*(uint64_t *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < 1) {
    return 0;
  }
LABEL_3:
  id v2 = (id)_DocumentManagerBundle();
  if (v2)
  {
    id v3 = v2;
    v4._uint64_t countAndFlagsBits = 0x1000000000000026;
    v22._uint64_t countAndFlagsBits = 0xD000000000000039;
    v22._object = (void *)0x80000001005D8B90;
    v4._object = (void *)0x80000001005D8B40;
    v5._object = (void *)0x80000001005D8B70;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v5._uint64_t countAndFlagsBits = 0x1000000000000010;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v6, (NSBundle)v3, v5, v22);

    v7._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v8._object = (void *)0x80000001005D8BD0;
    v7._object = (void *)0x80000001005D8C00;
    v8._uint64_t countAndFlagsBits = 0xD000000000000027;
    DOCLocalizedDictionaryString(_:comment:)(v8, v7);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v9 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v10 = v9;
    }
    if (!v9) {
      goto LABEL_21;
    }
    if ((v1 & 0xC000000000000001) != 0)
    {
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_11;
    }
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v11 = *(id *)(v1 + 32);
LABEL_11:
      objc_super v12 = v11;
      swift_bridgeObjectRelease();
      id v13 = [v12 displayName];

      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v16 = v15;

      swift_bridgeObjectRelease();
      if (v10 == 1)
      {
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
        *(void *)(v17 + 56) = &type metadata for String;
        *(void *)(v17 + 64) = sub_100073F48();
        *(void *)(v17 + 32) = v14;
        *(void *)(v17 + 40) = v16;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
        *(void *)(v19 + 56) = &type metadata for Int;
        *(void *)(v19 + 64) = &protocol witness table for Int;
        *(void *)(v19 + 32) = v10;
      }
      uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    __break(1u);
  }
  __break(1u);
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

char *sub_1001999C4()
{
  unint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCMoveOperation_undoManager];
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id v3 = [v0 transferResults];
  if (!v3) {
    goto LABEL_7;
  }
  Swift::String v4 = v3;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v5 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_7:

    return 0;
  }
  Swift::String v6 = sub_1002F5254(v5);
  swift_bridgeObjectRelease();
  Swift::String v7 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceParentFolderItem];
  if (v7)
  {
    id v8 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    return sub_100198CE0((uint64_t)v6, v7, v2);
  }

  swift_release();
  return 0;
}

void sub_100199BE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4 = a4;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_100199C24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCMoveOperation();
  [super dealloc];
}

uint64_t type metadata accessor for DOCMoveOperation()
{
  return self;
}

uint64_t sub_100199CF8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100199D30()
{
  sub_10019942C(*(void *)(v0 + 16));
}

uint64_t sub_100199D38()
{
  sub_10019B0C8();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100736E98 = result;
  return result;
}

NSString sub_100199D9C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100709470 = (uint64_t)result;
  return result;
}

id sub_100199DD4()
{
  qword_100709478 = NSProgressFileDisplayNameKey;
  return NSProgressFileDisplayNameKey;
}

id NSProgress.localizedFinderStylePrimaryDescription.getter()
{
  id result = [v0 localizedDescription];
  if (result)
  {
    objc_super v2 = result;
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id NSProgress.localizedFinderStyleSecondaryDescription.getter()
{
  [v0 fractionCompleted];
  if (v1 <= 0.0)
  {
    id v3 = [v0 fileOperationKind];
    uint64_t v4 = (uint64_t)sub_100529A38((uint64_t)v3);
    goto LABEL_5;
  }
  id result = [v0 localizedAdditionalDescription];
  if (result)
  {
    id v3 = result;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_5:
    uint64_t v5 = v4;

    return (id)v5;
  }
  __break(1u);
  return result;
}

uint64_t NSProgress.publishedFileURL.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [v1 fileURL];
  if (v10)
  {
    id v11 = v10;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    objc_super v12 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v12(v9, v6, v3);
    id v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
    v13(v9, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
    {
      v12(a1, v9, v3);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v13)(a1, 0, 1, v3);
    }
  }
  else
  {
    id v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
    v13(v9, 1, 1, v3);
  }
  id v15 = [v1 userInfo];
  type metadata accessor for ProgressUserInfoKey(0);
  sub_10019B018();
  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v16 + 16))
  {
    uint64_t v17 = NSProgressFileURLKey;
    uint64_t v18 = sub_1000A54AC();
    if (v19)
    {
      sub_10009B208(*(void *)(v16 + 56) + 32 * v18, (uint64_t)&v22);
    }
    else
    {
      long long v22 = 0u;
      long long v23 = 0u;
    }
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((void *)&v23 + 1))
  {
    uint64_t v20 = swift_dynamicCast() ^ 1;
    unint64_t v21 = a1;
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v22, (uint64_t *)&unk_100705D60);
    unint64_t v21 = a1;
    uint64_t v20 = 1;
  }
  v13(v21, v20, 1, v3);
  return sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
}

Swift::Void __swiftcall NSProgress.publishWithStandardProperties()()
{
  double v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v2 - 8);
  id v39 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v41 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  Swift::Int v38 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v43 = (char *)&v38 - v7;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v40 = (char *)&v38 - v16;
  id v17 = [v1 kind];
  if (!v17) {
    goto LABEL_18;
  }
  uint64_t v18 = v17;
  char v19 = v1;
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;
  if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23)
  {
    uint64_t v24 = NSProgressKindFile;

    swift_bridgeObjectRelease_n();
    uint64_t v25 = v12;
    double v1 = v19;
  }
  else
  {
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v27 = NSProgressKindFile;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = v12;
    double v1 = v19;
    if ((v26 & 1) == 0) {
      goto LABEL_18;
    }
  }
  id v28 = [v1 fileURL];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v10, 1, 1, v11);
    goto LABEL_11;
  }
  uint64_t v29 = v28;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v30 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v30(v10, v15, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
  {
LABEL_11:
    sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    goto LABEL_18;
  }
  uint64_t v31 = v40;
  v30(v40, v10, v11);
  URL.pathExtension.getter();
  static UTType.data.getter();
  uint64_t v32 = (uint64_t)v39;
  UTType.init(filenameExtension:conformingTo:)();
  uint64_t v34 = v41;
  uint64_t v33 = v42;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v32, 1, v42) == 1)
  {
    uint64_t v35 = v43;
    static UTType.data.getter();
    sub_1000CBBA4(v32, &qword_100708110);
  }
  else
  {
    uint64_t v35 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v43, v32, v33);
  }
  UTType.identifier.getter();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_100704ED0 != -1) {
    swift_once();
  }
  [v1 setUserInfoObject:v36 forKey:qword_100709470];

  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  URL.lastPathComponent.getter();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_100704ED8 != -1) {
    swift_once();
  }
  [v1 setUserInfoObject:v37 forKey:qword_100709478];

  (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v11);
LABEL_18:
  [v1 publish];
}

uint64_t NSProgress.fileDisplayName.getter()
{
  id v1 = [v0 userInfo];
  type metadata accessor for ProgressUserInfoKey(0);
  sub_10019B018();
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_100704ED8 == -1)
  {
    if (*(void *)(v2 + 16)) {
      goto LABEL_3;
    }
LABEL_11:
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_12;
  }
  swift_once();
  if (!*(void *)(v2 + 16)) {
    goto LABEL_11;
  }
LABEL_3:
  id v3 = (id)qword_100709478;
  uint64_t v4 = sub_1000A54AC(v3);
  if ((v5 & 1) == 0)
  {
    long long v8 = 0u;
    long long v9 = 0u;

LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10009B208(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v8);

  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_13:
    sub_1000CBBA4((uint64_t)&v8, (uint64_t *)&unk_100705D60);
    return 0;
  }
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_10019A8D4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v3 = 0;
  }
  if (qword_100704ED8 != -1) {
    swift_once();
  }
  [v2 setUserInfoObject:v3 forKey:qword_100709478];

  return swift_unknownObjectRelease();
}

uint64_t NSProgress.iconUTType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  __chkstk_darwin(v2);
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_100708110);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - v13;
  id v15 = [v1 userInfo];
  type metadata accessor for ProgressUserInfoKey(0);
  sub_10019B018();
  uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_100704ED0 == -1)
  {
    if (*(void *)(v16 + 16)) {
      goto LABEL_3;
    }
LABEL_11:
    long long v35 = 0u;
    long long v36 = 0u;
    goto LABEL_12;
  }
  swift_once();
  if (!*(void *)(v16 + 16)) {
    goto LABEL_11;
  }
LABEL_3:
  id v17 = (id)qword_100709470;
  uint64_t v18 = sub_1000A54AC();
  if ((v19 & 1) == 0)
  {
    long long v35 = 0u;
    long long v36 = 0u;

LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_10009B208(*(void *)(v16 + 56) + 32 * v18, (uint64_t)&v35);

  swift_bridgeObjectRelease();
  if (!*((void *)&v36 + 1))
  {
LABEL_13:
    uint64_t v22 = (uint64_t *)&unk_100705D60;
    uint64_t v23 = (char *)&v35;
    goto LABEL_14;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_15;
  }
  UTType.init(_:)();
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v32) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v34, v14, v20);
  }
  uint64_t v22 = &qword_100708110;
  uint64_t v23 = v14;
LABEL_14:
  sub_1000CBBA4((uint64_t)v23, v22);
LABEL_15:
  NSProgress.publishedFileURL.getter(v5);
  uint64_t v25 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v5, 1, v6) == 1)
  {
    sub_1000CBBA4((uint64_t)v5, &qword_1007076B0);
    return static UTType.item.getter();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v8, v5, v6);
    URL.pathExtension.getter();
    static UTType.data.getter();
    UTType.init(filenameExtension:conformingTo:)();
    uint64_t v27 = v31;
    uint64_t v26 = v32;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v32) == 1)
    {
      sub_1000CBBA4((uint64_t)v12, &qword_100708110);
      LOBYTE(v35) = 0;
      id v28 = [self defaultManager];
      URL.path.getter();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v30 = [v28 fileExistsAtPath:v29 isDirectory:&v35];

      if (v30) {
        static UTType.folder.getter();
      }
      else {
        static UTType.item.getter();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v34, v12, v26);
    }
  }
}

uint64_t sub_10019AEC4(uint64_t a1, void **a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  long long v8 = *a2;
  UTType.identifier.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_100704ED0 != -1) {
    swift_once();
  }
  [v8 setUserInfoObject:v9 forKey:qword_100709470];

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_10019B018()
{
  unint64_t result = qword_100705B38;
  if (!qword_100705B38)
  {
    type metadata accessor for ProgressUserInfoKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100705B38);
  }
  return result;
}

uint64_t sub_10019B070@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = NSProgress.fileDisplayName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10019B0A0@<X0>(uint64_t a1@<X8>)
{
  return NSProgress.iconUTType.getter(a1);
}

unint64_t sub_10019B0C8()
{
  unint64_t result = qword_10070B650;
  if (!qword_10070B650)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070B650);
  }
  return result;
}

uint64_t sub_10019B108(char *a1, char *a2)
{
  return sub_1004C09E4(*a1, *a2);
}

Swift::Int sub_10019B114()
{
  return sub_10010C640();
}

uint64_t sub_10019B11C()
{
  return sub_10010C7EC();
}

Swift::Int sub_10019B124()
{
  return sub_10010CC78();
}

unint64_t sub_10019B12C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10019BA18(*a1);
  *a2 = result;
  return result;
}

void sub_10019B15C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x80000001005D22F0;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0x80000001005D2310;
      unint64_t v2 = 0xD000000000000011;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6E6F697461636F6CLL;
      *(void *)(a1 + 8) = 0xE900000000000073;
      break;
    case 3:
      strcpy((char *)a1, "anchorLocation");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = v3;
      break;
  }
}

unint64_t sub_10019B224@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10019BA18(a1);
  *a2 = result;
  return result;
}

void sub_10019B24C(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_10019B258(uint64_t a1)
{
  unint64_t v2 = sub_1000D7894();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019B294(uint64_t a1)
{
  unint64_t v2 = sub_1000D7894();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019B2D0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10019BA64(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_10019B300()
{
  return sub_1000418D4(*(void **)v0, *(void *)(v0 + 8), *(void **)(v0 + 16));
}

Swift::Int sub_10019B30C()
{
  return Hasher._finalize()();
}

uint64_t sub_10019B358()
{
  return String.hash(into:)();
}

Swift::Int sub_10019B368()
{
  return Hasher._finalize()();
}

uint64_t sub_10019B3B0@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068A108, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_10019B404(void *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_10019B418@<X0>(Swift::String string@<0:X0, 8:X1>, BOOL *a2@<X8>)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068A140, v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

uint64_t sub_10019B470(uint64_t a1)
{
  unint64_t v2 = sub_100020F78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10019B4AC(uint64_t a1)
{
  unint64_t v2 = sub_100020F78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10019B4E8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_1000CBE70(&qword_100709530);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6B78(a1, a1[3]);
  sub_100020F78();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    sub_10019B9C4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v10 = v14[0];
    unint64_t v9 = v14[1];
    sub_10009E6C4(0, &qword_10070B710);
    sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    uint64_t v11 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
    uint64_t v13 = v11;
    if (v11)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_100021020(v10, v9);
      *(void *)(v3 + 16) = v13;
      goto LABEL_4;
    }
    type metadata accessor for DecodingError();
    swift_allocError();
    sub_10019C01C(&qword_100709548, &qword_100709530);
    static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
    swift_willThrow();
    sub_100021020(v10, v9);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  type metadata accessor for DOCConcreteLocationSwiftEncodable();
  swift_deallocPartialClassInstance();
LABEL_4:
  sub_10009B1B8((uint64_t)a1);
  return v3;
}

void _s12BrowsedStateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

void *_s12BrowsedStateVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t _s12BrowsedStateVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a1 + 16);
  long long v8 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v8;
  id v9 = v8;

  return a1;
}

uint64_t _s12BrowsedStateVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t _s12BrowsedStateVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12BrowsedStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_10019B964@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for DOCConcreteLocationSwiftEncodable();
  swift_allocObject();
  uint64_t result = sub_10019B4E8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_10019B9C4()
{
  unint64_t result = qword_100709540;
  if (!qword_100709540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709540);
  }
  return result;
}

unint64_t sub_10019BA18(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068A088, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10019BA64(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100709578);
  uint64_t v4 = *(void (***)(char *, uint64_t))(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6B78(a1, a1[3]);
  sub_1000D7894();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10009B1B8((uint64_t)a1);
    return (uint64_t)a1;
  }
  uint64_t v7 = type metadata accessor for DOCConcreteLocationSwiftEncodable();
  LOBYTE(v32) = 1;
  uint64_t v8 = sub_1000D47D8(&qword_100709580);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  id v10 = *(id *)(v33 + 16);
  swift_release();
  sub_1000CBE70(&qword_100709568);
  LOBYTE(v32) = 2;
  sub_1000D32B8(&qword_100709588, &qword_100709580);
  id v11 = v10;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  uint64_t v28 = 0;
  unint64_t v12 = v33;
  if (!(v33 >> 62))
  {
    uint64_t v13 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v29 = v11;
    if (v13) {
      goto LABEL_7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    LOBYTE(v33) = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = v26;
    char v17 = KeyedDecodingContainer.contains(_:)();
    char v19 = v27;
    uint64_t v18 = v28;
    if (v17)
    {
      LOBYTE(v32) = 3;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      if (v18)
      {
        v19[1](v6, v16);
        id v20 = v29;

        swift_bridgeObjectRelease();
        int v21 = 0;
        goto LABEL_30;
      }
      uint64_t v4 = (void (**)(char *, uint64_t))*(id *)(v33 + 16);
      swift_release();
    }
    else
    {
      uint64_t v4 = 0;
    }
    LOBYTE(v33) = 0;
    id v22 = (id)KeyedDecodingContainer.decode(_:forKey:)();
    if (v18)
    {
      v19[1](v6, v16);
      id v20 = v29;

      swift_bridgeObjectRelease();
LABEL_29:
      int v21 = 1;
LABEL_30:
      sub_10009B1B8((uint64_t)a1);
      swift_bridgeObjectRelease();

      if (v21) {
      return (uint64_t)a1;
      }
    }
    if (v4)
    {
      uint64_t v23 = v4;
      if (v22 != [v4 effectiveTabSwitcherTab]) {
        goto LABEL_28;
      }
    }
    else
    {
      if (v22 != [v29 effectiveTabSwitcherTab])
      {
LABEL_28:
        id v20 = v29;

        swift_bridgeObjectRelease();
        LOBYTE(v33) = 0;
        type metadata accessor for DecodingError();
        swift_allocError();
        sub_10019C01C(&qword_100709590, &qword_100709578);
        static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
        swift_willThrow();
        v19[1](v6, v16);
        goto LABEL_29;
      }
      uint64_t v23 = 0;
    }
    v19[1](v6, v16);
    uint64_t v24 = v23;
    sub_10009B1B8((uint64_t)a1);

    swift_bridgeObjectRelease();
    a1 = v29;

    return (uint64_t)a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  id v29 = v11;
  if (!v13) {
    goto LABEL_15;
  }
LABEL_7:
  uint64_t v32 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = 0;
    do
    {
      if ((v12 & 0xC000000000000001) != 0)
      {
        uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v15 = *(void *)(v12 + 8 * v14 + 32);
        swift_retain();
      }
      ++v14;
      uint64_t v4 = (void (**)(char *, uint64_t))*(id *)(v15 + 16);
      swift_release();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v13 != v14);
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019C01C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10019C0C0()
{
  unint64_t result = qword_1007095A8;
  if (!qword_1007095A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007095A8);
  }
  return result;
}

unint64_t sub_10019C118()
{
  unint64_t result = qword_1007095B0;
  if (!qword_1007095B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007095B0);
  }
  return result;
}

uint64_t type metadata accessor for DOCTransitionableProxy()
{
  return self;
}

void sub_10019C190(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "_transitionController is nil. Bailing early.", v12, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  dispatch_group_leave(a2);
}

uint64_t sub_10019C318(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  swift_beginAccess();
  if (*(void *)(a1 + 16))
  {
    swift_unknownObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100709690);
    sub_1000CBE70((uint64_t *)&unk_100711810);
    swift_dynamicCast();
  }
  sub_1000CBE70((uint64_t *)&unk_100709680);
  uint64_t v6 = String.init<A>(describing:)();
  uint64_t v8 = v7;
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_100073F48();
  *(void *)(v5 + 32) = v6;
  *(void *)(v5 + 40) = v8;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v9 = swift_unknownObjectRetain();
  a2(v9);
  return swift_unknownObjectRelease();
}

uint64_t sub_10019C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    *(void *)(a2 + 16) = a1;
    swift_unknownObjectRetain();
    return swift_unknownObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "_transitionController is nil. Bailing early.", v11, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_10019C748(uint64_t a1, dispatch_group_t group, uint64_t a3)
{
  if (a1)
  {
    swift_beginAccess();
    *(void *)(a3 + 16) = a1;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    dispatch_group_leave(group);
  }
  else
  {
    dispatch_group_leave(group);
  }
}

uint64_t sub_10019C7E0(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectRetain();
  a1(v2);
  return swift_unknownObjectRelease();
}

void sub_10019C860(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v8 = *(void **)(a3 + 16);
    *(void *)(a3 + 16) = a1;
    id v9 = a1;

    swift_beginAccess();
    os_log_type_t v10 = *(void **)(a4 + 16);
    *(void *)(a4 + 16) = a2;
    id v11 = a2;
  }
}

void sub_10019C984(void *a1, uint64_t a2)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v4 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    id v5 = a1;
  }
}

uint64_t sub_10019C9FC(uint64_t a1, int a2, void *a3, void *aBlock, void (*a5)(id, uint64_t, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  id v9 = a3;
  swift_retain();
  a5(v9, a1, v8);
  _Block_release(v8);
  _Block_release(v8);

  return swift_release();
}

uint64_t sub_10019CA88(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(v4 + 16);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = result;
    if (result)
    {
LABEL_3:
      if (v8 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v10 = 0;
        unint64_t v16 = v7 & 0xC000000000000001;
        uint64_t v11 = a2 & 1;
        unint64_t v12 = v7;
        do
        {
          if (v16)
          {
            uint64_t v13 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v13 = *(void **)(v7 + 8 * v10 + 32);
            swift_unknownObjectRetain();
          }
          ++v10;
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          aBlock[4] = a3;
          aBlock[5] = a4;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10000A884;
          void aBlock[3] = &unk_100694AD0;
          uint64_t v15 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v13 revealWithItems:isa selectEvenIfVisible:v11 completionBlock:v15];
          _Block_release(v15);
          swift_unknownObjectRelease();

          unint64_t v7 = v12;
        }
        while (v8 != v10);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10019CD6C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019CDA4(uint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = a3;
  unint64_t v11 = *(void *)(a2 + 16);
  if (!(v11 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a3);
    if (v12 >= 1) {
      goto LABEL_3;
    }
LABEL_20:
    a3[2](a3, 0);
    return swift_release();
  }
  _Block_copy(a3);
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v36 < 1) {
    goto LABEL_20;
  }
LABEL_3:
  id v39 = v8;
  uint64_t v40 = v9;
  uint64_t v41 = v6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  id v49 = (void *)(v13 + 16);
  uint64_t v50 = v13;
  dispatch_group_t v14 = dispatch_group_create();
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_18:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v32 = (void *)swift_allocObject();
    void v32[2] = v50;
    v32[3] = sub_10019E2C8;
    void v32[4] = v44;
    unint64_t v54 = sub_10019E35C;
    uint64_t v55 = v32;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v53 = sub_1000666D8;
    *((void *)&v53 + 1) = &unk_100694DC8;
    unint64_t v33 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    uint64_t v34 = v42;
    static DispatchQoS.unspecified.getter();
    unint64_t v51 = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    long long v35 = v39;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v33);

    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v5);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v40);
    swift_release();
    swift_release();
    return swift_release();
  }
  uint64_t v15 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v15) {
    goto LABEL_17;
  }
LABEL_5:
  if (v15 >= 1)
  {
    uint64_t v38 = v5;
    unint64_t v47 = v11 & 0xC000000000000001;
    swift_beginAccess();
    uint64_t v17 = 0;
    uint64_t v46 = &v53;
    long long v45 = xmmword_1005A0030;
    unint64_t v48 = v11;
    do
    {
      if (v47)
      {
        uint64_t v28 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v28 = *(void **)(v11 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      id v29 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v45;
      if (!*v49
        || (unint64_t v51 = (void *)*v49,
            swift_unknownObjectRetain(),
            sub_1000CBE70((uint64_t *)&unk_100709690),
            sub_1000CBE70((uint64_t *)&unk_100711810),
            (swift_dynamicCast() & 1) == 0))
      {
        unint64_t v54 = 0;
        long long aBlock = 0u;
        long long v53 = 0u;
      }
      ++v17;
      sub_1000CBE70((uint64_t *)&unk_100709680);
      uint64_t v18 = String.init<A>(describing:)();
      uint64_t v20 = v19;
      *(void *)(v30 + 56) = &type metadata for String;
      *(void *)(v30 + 64) = sub_100073F48();
      *(void *)(v30 + 32) = v18;
      *(void *)(v30 + 40) = v20;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      dispatch_group_enter(v14);
      URL._bridgeToObjectiveC()(v21);
      uint64_t v23 = v22;
      uint64_t v24 = swift_allocObject();
      uint64_t v25 = v50;
      *(void *)(v24 + 16) = v14;
      *(void *)(v24 + 24) = v25;
      unint64_t v54 = sub_10019E314;
      uint64_t v55 = (void *)v24;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v53 = sub_100045AE0;
      *((void *)&v53 + 1) = &unk_100694D78;
      uint64_t v26 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v27 = v14;
      swift_release();
      [v28 getTransitionControllerForURL:v23 completionBlock:v26];
      _Block_release(v26);
      swift_unknownObjectRelease();

      unint64_t v11 = v48;
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v5 = v38;
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019D458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 > 0)
    {
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = 0;
      uint64_t v10 = (void *)(v6 + 16);
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (!v13)
      {
        swift_bridgeObjectRelease();
LABEL_10:
        swift_beginAccess();
        (*(void (**)(uint64_t, void))(v3 + 16))(v3, *v10);
        return swift_release();
      }
      uint64_t v5 = v13;
      if (v13 >= 1)
      {
        uint64_t v15 = (void *)(v6 + 16);
        uint64_t v16 = v3;
LABEL_4:
        uint64_t v7 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v8 = *(void **)(v4 + 8 * v7 + 32);
            swift_unknownObjectRetain();
          }
          ++v7;
          aBlock[4] = sub_10019E2C0;
          aBlock[5] = v6;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100045AE0;
          void aBlock[3] = &unk_100694D00;
          uint64_t v9 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v8 getTransitionControllerForItem:a1 completionBlock:v9];
          _Block_release(v9);
          swift_unknownObjectRelease();
        }
        while (v5 != v7);
        swift_bridgeObjectRelease();
        uint64_t v10 = v15;
        uint64_t v3 = v16;
        goto LABEL_10;
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      uint64_t v16 = a3;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = 0;
      uint64_t v15 = (void *)(v6 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  dispatch_group_t v14 = *(uint64_t (**)(uint64_t, void))(v3 + 16);

  return v14(v3, 0);
}

uint64_t sub_10019D6E0(uint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v39 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  unint64_t v13 = *(void *)(a2 + 16);
  if (v13 >> 62)
  {
    _Block_copy(a3);
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31 >= 1) {
      goto LABEL_3;
    }
LABEL_15:
    a3[2](a3, 0);
    return swift_release();
  }
  uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  _Block_copy(a3);
  if (v14 < 1) {
    goto LABEL_15;
  }
LABEL_3:
  uint64_t v33 = v12;
  uint64_t v34 = v10;
  long long v35 = v8;
  uint64_t v36 = v9;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  dispatch_group_t v16 = dispatch_group_create();
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v17 = result;
  }
  else
  {
    uint64_t v17 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v37 = v6;
  uint64_t v38 = v5;
  if (!v17)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v26 = v33;
    v25[2] = sub_10019E228;
    v25[3] = v26;
    v25[4] = v15;
    uint64_t v46 = sub_10019E2B4;
    unint64_t v47 = v25;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1000666D8;
    long long v45 = &unk_100694CB0;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    uint64_t v28 = v39;
    static DispatchQoS.unspecified.getter();
    uint64_t v41 = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    id v29 = v35;
    uint64_t v30 = v38;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v30);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v36);
    swift_release();
    swift_release();
    return swift_release();
  }
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v20 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v20 = *(void **)(v13 + 8 * v19 + 32);
        swift_unknownObjectRetain();
      }
      ++v19;
      dispatch_group_enter(v16);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v16;
      *(void *)(v21 + 24) = v15;
      uint64_t v46 = sub_10019E26C;
      unint64_t v47 = (void *)v21;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_100045AE0;
      long long v45 = &unk_100694C60;
      id v22 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v23 = v16;
      swift_release();
      [v20 getPopoverTrackerForItem:v40 completionBlock:v22];
      _Block_release(v22);
      swift_unknownObjectRelease();
    }
    while (v17 != v19);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019DC10(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = *(void *)(a3 + 16);
  if (!(v6 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v20 = *(uint64_t (**)(uint64_t, void, void))(a4 + 16);
    return v20(a4, 0, 0);
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v19 < 1) {
    goto LABEL_16;
  }
LABEL_3:
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = 0;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    swift_beginAccess();
    uint64_t v18 = *(void *)(v7 + 16);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, void))(a4 + 16))(a4, v18, *(void *)(v8 + 16));
    swift_release();
    return swift_release();
  }
  uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_13;
  }
LABEL_5:
  if (v9 >= 1)
  {
    char v11 = a2;
    uint64_t v12 = 0;
    unint64_t v21 = v6 & 0xC000000000000001;
    uint64_t v13 = v11 & 1;
    unint64_t v14 = v6;
    do
    {
      if (v21)
      {
        uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v15 = *(void **)(v6 + 8 * v12 + 32);
        swift_unknownObjectRetain();
      }
      ++v12;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v7;
      *(void *)(v16 + 24) = v8;
      aBlock[4] = sub_10019E220;
      aBlock[5] = v16;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001B6C98;
      void aBlock[3] = &unk_100694BC0;
      uint64_t v17 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      [v15 getViewFor:a1 waitForNewThumbnail:v13 :v17];
      _Block_release(v17);
      swift_unknownObjectRelease();
      unint64_t v6 = v14;
    }
    while (v9 != v12);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10019DF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  unint64_t v4 = *(void *)(a2 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12 > 0)
    {
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = 0;
      uint64_t v10 = (void *)(v6 + 16);
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (!v13)
      {
        swift_bridgeObjectRelease();
LABEL_10:
        swift_beginAccess();
        (*(void (**)(uint64_t, void))(v3 + 16))(v3, *v10);
        return swift_release();
      }
      uint64_t v5 = v13;
      if (v13 >= 1)
      {
        uint64_t v15 = (void *)(v6 + 16);
        uint64_t v16 = v3;
LABEL_4:
        uint64_t v7 = 0;
        do
        {
          if ((v4 & 0xC000000000000001) != 0)
          {
            uint64_t v8 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v8 = *(void **)(v4 + 8 * v7 + 32);
            swift_unknownObjectRetain();
          }
          ++v7;
          aBlock[4] = sub_10019E1A0;
          aBlock[5] = v6;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100411BA4;
          void aBlock[3] = &unk_100694B20;
          uint64_t v9 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          [v8 getCellFor:a1 :v9];
          _Block_release(v9);
          swift_unknownObjectRelease();
        }
        while (v5 != v7);
        swift_bridgeObjectRelease();
        uint64_t v10 = v15;
        uint64_t v3 = v16;
        goto LABEL_10;
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
      uint64_t v16 = a3;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = 0;
      uint64_t v15 = (void *)(v6 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, void))(v3 + 16);

  return v14(v3, 0);
}

void sub_10019E1A0(void *a1)
{
  sub_10019C984(a1, v1);
}

uint64_t sub_10019E1A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10019E1E0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10019E220(void *a1, void *a2)
{
  sub_10019C860(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10019E228(uint64_t a1)
{
  return sub_10041EA2C(a1, *(void *)(v1 + 16));
}

uint64_t sub_10019E230()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10019E26C(uint64_t a1)
{
  sub_10019C748(a1, *(dispatch_group_t *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10019E274()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019E2B4()
{
  return sub_10019C7E0(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_10019E2C0(uint64_t a1)
{
  return sub_10019C5BC(a1, v1);
}

uint64_t sub_10019E2C8(uint64_t a1)
{
  return sub_1004126E8(a1, *(void *)(v1 + 16));
}

uint64_t sub_10019E2D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10019E314(uint64_t a1)
{
  sub_10019C190(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10019E31C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10019E35C()
{
  return sub_10019C318(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

void sub_10019E3AC()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v24 = v1;
    uint64_t v8 = swift_slowAlloc();
    id v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v8 = 136446722;
    unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v9) {
      goto LABEL_13;
    }
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_10009B0E4(v10, v9, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v25 = sub_10009B0E4(0x6573624F706F7473, 0xEF2928676E697672, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v25 = (uint64_t)v5;
    char v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v22 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if ((v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16] & 1) == 0)
  {
    id v21 = v12;
    [v21 doc_stopObserving];

    goto LABEL_11;
  }
  uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
  uint64_t v14 = qword_100705120;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100737460;
  uint64_t v17 = *(NSObject **)(qword_100737460 + 24);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  *(void *)(v18 + 24) = v16;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1001A1780;
  *(void *)(v19 + 24) = v18;
  aBlock[4] = (uint64_t)sub_100162A48;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100087990;
  void aBlock[3] = (uint64_t)&unk_100695048;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  sub_10007896C(v12, v13, 1);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v17, v20);
  _Block_release(v20);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if ((v17 & 1) == 0)
  {
    sub_1003AEEE0();
    sub_1000C71C8(v12, v13, 1);
LABEL_11:
    sub_10019ED7C();
    return;
  }
  __break(1u);
LABEL_13:

  __break(1u);
}

void sub_10019E86C()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v19 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v21 = v18;
    *(_DWORD *)uint64_t v8 = 136446722;
    unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v9)
    {

      __break(1u);
      return;
    }
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_10009B0E4(v10, v9, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v20 = sub_10009B0E4(0xD000000000000014, 0x80000001005D91F0, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v20 = (uint64_t)v5;
    char v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v17 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    uint64_t v13 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8];
    id v14 = v12;
    sub_1003AB330();
    sub_1000C71C8(v12, v13, 1);
  }
  else
  {
    id v15 = v12;
    [v15 doc_restartObservation];
  }
}

unint64_t sub_10019EBA8(uint64_t a1)
{
  uint64_t v2 = *(char **)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
    unint64_t v4 = *(os_unfair_lock_s **)&v2[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
    uint64_t v5 = __chkstk_darwin(a1);
    __chkstk_darwin(v5);
    sub_10007896C(v2, v3, 1);
    swift_retain();
    os_unfair_lock_lock(v4 + 4);
    sub_1001A17B4(&v9);
    os_unfair_lock_unlock(v4 + 4);
    unint64_t v6 = v9;
    swift_release();
    sub_1000C71C8(v2, v3, 1);
  }
  else
  {
    os_log_type_t v7 = v2;
    unint64_t v6 = [v7 doc_isObserving];
  }
  return v6;
}

uint64_t DOCNodeCollection.isGathering.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCNodeCollection.isGathering.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_isGathering);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

void sub_10019ED7C()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v5 = v0;
  unint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v6, v7))
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    goto LABEL_5;
  }
  uint64_t v16 = v1;
  uint64_t v8 = swift_slowAlloc();
  id v14 = (void *)swift_slowAlloc();
  uint64_t v15 = swift_slowAlloc();
  uint64_t v18 = v15;
  *(_DWORD *)uint64_t v8 = 136446722;
  unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
  if (v9)
  {
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_10009B0E4(v10, v9, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v17 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005D91B0, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v17 = (uint64_t)v5;
    char v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
LABEL_5:
    uint64_t v12 = *(void **)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation];
    *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_isGatheringObservation] = 0;

    return;
  }

  __break(1u);
}

uint64_t sub_10019F074(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void DOCNodeCollection.init()()
{
}

id DOCNodeCollection.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeCollection();
  return [super dealloc];
}

void DOCNodeCollection.collection(_:didEncounterError:)(uint64_t a1, uint64_t a2)
{
}

void DOCNodeCollection.collection(_:didUpdateObservedItem:)(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v9 = v2;
  id v10 = a2;
  char v11 = (char *)v9;
  id v12 = v10;
  uint64_t v13 = Logger.logObject.getter();
  int v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    HIDWORD(v46) = v14;
    os_log_t v47 = v13;
    uint64_t v49 = v6;
    uint64_t v50 = v5;
    unint64_t v51 = a1;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    uint64_t v53 = v48;
    *(_DWORD *)uint64_t v15 = 136446978;
    unint64_t v17 = *(void *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v17)
    {

      __break(1u);
      return;
    }
    uint64_t v18 = *(void *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_10009B0E4(v18, v17, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v52 = sub_10009B0E4(0xD000000000000024, 0x80000001005D8FF0, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v52 = (uint64_t)v11;
    uint64_t v19 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v11;

    *(_WORD *)(v15 + 32) = 2080;
    id v20 = [v12 displayName];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    uint64_t v52 = sub_10009B0E4(v21, v23, &v53);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v24 = v47;
    _os_log_impl((void *)&_mh_execute_header, v47, BYTE4(v46), "%{public}s %{public}s DOCNodeCollection (%@) observedItem: %s", (uint8_t *)v15, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v50);
    a1 = v51;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v25 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  char v26 = v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16];
  if (v26)
  {
    v27._uint64_t countAndFlagsBits = 0xD000000000000054;
    v28._object = (void *)0x80000001005D8FD0;
    v27._object = (void *)0x80000001005D8F70;
    v28._uint64_t countAndFlagsBits = 0xD000000000000010;
    DOCAssertUnexpectedError(errorTitle:message:)(v28, v27);
  }
  else
  {
    id v29 = *(void **)v25;
    uint64_t v30 = *((void *)v25 + 1);
    *(void *)uint64_t v25 = a1;
    *((void *)v25 + 1) = v12;
    v25[16] = 0;
    id v31 = v12;
    id v32 = a1;
    swift_unknownObjectRetain();
    sub_1000C71C8(v29, v30, v26);
    uint64_t v33 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v34 = *((void *)v33 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, id, uint64_t, uint64_t))(v34 + 24))(v11, v31, ObjectType, v34);
      swift_unknownObjectRelease();
    }
    if (v30)
    {
      id v36 = [(id)swift_unknownObjectRetain() displayName];
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;

      id v40 = [v31 displayName];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v42;

      if (v37 == v41 && v39 == v43)
      {
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v44 & 1) == 0)
        {
          id v45 = [self defaultCenter];
          if (qword_100704EE0 != -1) {
            swift_once();
          }
          [v45 postNotificationName:qword_100736EA0 object:v31];
        }
        swift_unknownObjectRelease_n();
      }
    }
  }
}

void DOCNodeCollection.collectionDidFinishGathering(_:)()
{
}

void DOCNodeCollection.collection(_:didUpdate:replaceItemsByFormerID:deleteItemsWith:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
}

void sub_10019F9C8(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v7 = v1;
  uint64_t v8 = a1;
  id v9 = Logger.logObject.getter();
  id v10 = (os_unfair_lock_s *)static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    int v27 = (int)v10;
    uint64_t v29 = v4;
    uint64_t v30 = v3;
    uint64_t v11 = swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v32 = v28;
    *(_DWORD *)uint64_t v11 = 136446978;
    unint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v13)
    {

      __break(1u);
      os_unfair_lock_unlock(v10);
      __break(1u);
      return;
    }
    uint64_t v14 = *(void *)&v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_10009B0E4(v14, v13, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v31 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005D9150, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2112;
    uint64_t v31 = (uint64_t)v7;
    uint64_t v15 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    char v26 = v12;
    *id v12 = v7;

    *(_WORD *)(v11 + 32) = 2048;
    uint64_t v16 = *(os_unfair_lock_s **)&v8[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
    uint64_t v18 = __chkstk_darwin(v17);
    *(&v26 - 2) = v8;
    __chkstk_darwin(v18);
    *(&v26 - 2) = sub_1000CB14C;
    *(&v26 - 1) = v19;
    swift_retain();
    os_unfair_lock_lock(v16 + 4);
    sub_1000CB0D4(&v31);
    os_unfair_lock_unlock(v16 + 4);
    unint64_t v20 = v31;
    swift_release();
    uint64_t v21 = v30;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v27, "%{public}s %{public}s DOCNodeCollection (%@) reload with nodes: %ld", (uint8_t *)v11, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  unint64_t v23 = &v7[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v24 = *((void *)v23 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 8))(v7, ObjectType, v24);
    swift_unknownObjectRelease();
  }
}

NSString sub_10019FE58()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100736EA0 = (uint64_t)result;
  return result;
}

uint64_t sub_10019FE90(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_10019FECC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_10019FEF4(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_10009B0E4(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_10019FF6C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_100711B60);
    id v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    id v10 = (char *)&_swiftEmptyArrayStorage;
  }
  id v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unsigned char **sub_1001A00BC(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = *result;
  *uint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

uint64_t sub_1001A00CC(uint64_t (*a1)(void))
{
  return a1();
}

void sub_1001A00F4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

void sub_1001A01AC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v7 = v1;
  swift_errorRetain();
  int64_t v8 = (char *)v7;
  swift_errorRetain();
  int64_t v9 = Logger.logObject.getter();
  int v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    int v21 = v10;
    uint64_t v24 = v4;
    uint64_t v25 = v3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v11 = 136446978;
    unint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v12)
    {
      swift_errorRelease();

      __break(1u);
      return;
    }
    uint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10009B0E4(v13, v12, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v26 = sub_10009B0E4(0xD000000000000020, 0x80000001005D9320, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2112;
    uint64_t v26 = (uint64_t)v8;
    uint64_t v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v8;

    *(_WORD *)(v11 + 32) = 2080;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    uint64_t v26 = sub_10009B0E4(v15, v16, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v21, "%{public}s %{public}s DOCNodeCollection (%@) Error: %s", (uint8_t *)v11, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v17 = &v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v18 = *((void *)v17 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 16))(v8, a1, ObjectType, v18);
    swift_unknownObjectRelease();
  }
}

void sub_1001A0588(unint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v11 = v3;
  unint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  unint64_t v33 = a2;
  if (v14)
  {
    uint64_t v30 = v7;
    unint64_t v31 = a1;
    unint64_t v32 = a3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v35 = v29;
    *(_DWORD *)uint64_t v15 = 136446722;
    unint64_t v16 = *(void *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v16)
    {

      __break(1u);
      return;
    }
    uint64_t v17 = *(void *)&v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10009B0E4(v17, v16, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v34 = sub_10009B0E4(0xD00000000000003FLL, 0x80000001005D9280, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v34 = (uint64_t)v11;
    uint64_t v18 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v28 = v11;

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v15, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v30);
    a1 = v31;
    a3 = v32;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v19 = &v11[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *((void *)v19 + 1);
    swift_bridgeObjectRetain();
    if (a1 >> 62)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v26 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v26;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    uint64_t v21 = sub_1004E8B24(v33);
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a3 = v27;
    }
    else
    {
      uint64_t v22 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v24 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v24)
        {
          uint64_t v25 = (void *)(v22 + 32);
          while (*v25)
          {
            ++v25;
            if (!--v24) {
              goto LABEL_10;
            }
          }
          a3 = v22 | 1;
        }
      }
    }
LABEL_10:
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(v20 + 48))(v11, a1, v21, a3, ObjectType, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

void destroy for DOCNodeCollection.CollectionType(uint64_t a1)
{
}

uint64_t _s5Files17DOCNodeCollectionC14CollectionTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10007896C(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCNodeCollection.CollectionType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10007896C(*(void **)a2, v4, v5);
  unint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1000C71C8(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for DOCNodeCollection.CollectionType(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DOCNodeCollection.CollectionType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1000C71C8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCNodeCollection.CollectionType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCNodeCollection.CollectionType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001A0BA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1001A0BA8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeCollection.CollectionType()
{
  return &type metadata for DOCNodeCollection.CollectionType;
}

uint64_t sub_1001A0BC4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  id v7 = v1;
  swift_errorRetain();
  char v8 = (char *)v7;
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  int v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, (os_log_type_t)v10))
  {
    HIDWORD(v22) = v10;
    os_log_t v25 = v9;
    uint64_t v26 = v4;
    uint64_t v27 = v3;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v29 = v24;
    *(_DWORD *)uint64_t v11 = 136446978;
    unint64_t v12 = *(void *)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v12)
    {
      swift_errorRelease();

      uint64_t result = swift_errorRelease();
      __break(1u);
      return result;
    }
    uint64_t v13 = *(void *)&v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10009B0E4(v13, v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    uint64_t v28 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005D90F0, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2112;
    uint64_t v28 = (uint64_t)v8;
    BOOL v14 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v15 = v23;
    *uint64_t v23 = v8;

    *(_WORD *)(v11 + 32) = 2112;
    swift_errorRetain();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v28 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v15[1] = v16;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v17 = v25;
    _os_log_impl((void *)&_mh_execute_header, v25, BYTE4(v22), "%{public}s %{public}s DOCNodeCollection (%@) Error: %@", (uint8_t *)v11, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v18 = &v8[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v20 = *((void *)v18 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 16))(v8, a1, ObjectType, v20);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001A0FB0()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  uint64_t v5 = v0;
  char v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v18 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v20 = v17;
    *(_DWORD *)uint64_t v8 = 136446722;
    unint64_t v9 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v9)
    {

      __break(1u);
      return;
    }
    uint64_t v10 = *(void *)&v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_10009B0E4(v10, v9, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v19 = sub_10009B0E4(0xD000000000000029, 0x80000001005D9180, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2112;
    uint64_t v19 = (uint64_t)v5;
    uint64_t v11 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v16 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v8, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  unint64_t v12 = &v5[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = *((void *)v12 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 40))(v5, ObjectType, v13);
    swift_unknownObjectRelease();
  }
}

void sub_1001A12E0()
{
}

void sub_1001A12FC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Enumeration.getter();
  unint64_t v9 = v2;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v23 = v5;
    uint64_t v24 = a1;
    uint64_t v25 = a2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v27 = v22;
    *(_DWORD *)uint64_t v12 = 136446722;
    unint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix + 8];
    if (!v13)
    {

      __break(1u);
      return;
    }
    uint64_t v14 = *(void *)&v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_logPrefix];
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10009B0E4(v14, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    uint64_t v26 = sub_10009B0E4(0xD000000000000032, 0x80000001005D90B0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2112;
    uint64_t v26 = (uint64_t)v9;
    uint64_t v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v21 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s %{public}s DOCNodeCollection (%@)", (uint8_t *)v12, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
    a1 = v24;
    a2 = v25;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v16 = &v9[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v17 = *((void *)v16 + 1);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v19 = sub_100494820((uint64_t)&_swiftEmptyArrayStorage);
    (*(void (**)(char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v17 + 48))(v9, a1, v19, a2, ObjectType, v17);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
}

unint64_t sub_1001A1670()
{
  unint64_t result = qword_100709768;
  if (!qword_100709768)
  {
    sub_10009E6C4(255, (unint64_t *)&unk_100706B70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709768);
  }
  return result;
}

id sub_1001A16D8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isGathering];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1001A170C(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsGathering:*a1];
}

uint64_t sub_1001A1720()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1001A1764()
{
  return sub_1003ABD70(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001A176C()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1001A1780()
{
  return sub_1003ABD84(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001A1788()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001A1798@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003ACB60(*(void *)(v1 + 16), a1);
}

void *sub_1001A17B4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003B9028(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_1001A17D0@<X0>(void *a1@<X8>)
{
  return sub_1000CB14C(a1);
}

void *sub_1001A17EC@<X0>(void *a1@<X8>)
{
  return sub_1000CB0D4(a1);
}

uint64_t DOCSidebarViewController.collectionView(_:shouldSpringLoadItemAt:with:)(uint64_t a1, uint64_t a2)
{
  return sub_1001AA020(a2);
}

uint64_t sub_1001A1814(void *a1)
{
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v7 = a1;
    static UTType.item.getter();
    uint64_t v8 = sub_10049C6C0(v1, (uint64_t)v6);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    char v9 = sub_100109110((uint64_t)v7, (unint64_t)v8);

    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t DOCSidebarViewController.collectionView(_:targetIndexPathForMoveFromItemAt:toProposedIndexPath:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v44 = (char *)&v43 - v12;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v43 - v18;
  unsigned __int8 v20 = [a1 _hasActiveDrop];
  uint64_t v46 = a4;
  uint64_t v47 = v4;
  if (v20)
  {
    sub_1001A22E4(a3, a4);
    uint64_t v21 = (void *)0xE400000000000000;
    uint64_t v22 = 1886351972;
  }
  else
  {
    sub_1001A1F08(a2, a4);
    uint64_t v21 = (void *)0xE700000000000000;
    uint64_t v22 = 0x726564726F6572;
  }
  uint64_t v23 = a2;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v24(v19, v23, v13);
  v24(v17, a3, v13);
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v25._uint64_t countAndFlagsBits = 0x6F46746567726174;
  v25._object = (void *)0xEF5B2065766F4D72;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = v22;
  v26._object = v21;
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._uint64_t countAndFlagsBits = 0x203A6D6F7266205DLL;
  v27._object = (void *)0xE800000000000000;
  String.append(_:)(v27);
  sub_1001ABD98(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 0x203A6F74202CLL;
  v29._object = (void *)0xE600000000000000;
  String.append(_:)(v29);
  v30._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x75746572202D2D20;
  v31._object = (void *)0xEE0020676E696E72;
  String.append(_:)(v31);
  uint64_t v32 = v46;
  v33._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  uint64_t v35 = v48;
  uint64_t v34 = (void *)v49;
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100115C0C(0xD000000000000015, 0x80000001005D9530, v35, v34);
  swift_bridgeObjectRelease();
  swift_release();
  id v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v17, v13);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v19, v13);
  uint64_t v38 = *(void *)(v47 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v38)
  {
    uint64_t v39 = *(void *)(v38 + 32);
    uint64_t v40 = (uint64_t)v44;
    v24(v44, v32, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v40, 0, 1, v13);
    uint64_t v41 = v45;
    sub_1001AA3C4(v40, v45);
    uint64_t v42 = v39 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath;
    swift_beginAccess();
    swift_retain();
    sub_1000A7BB4(v41, v42);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001A1F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.row.getter()) {
    IndexPath.row.getter();
  }
  IndexPath.section.getter();
  IndexPath.init(row:section:)();
  if (!sub_100482044(a1, 0))
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  }
  uint64_t v8 = sub_100482044((uint64_t)v7, 0);
  if (!v8)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  }
  uint64_t v10 = v8;
  uint64_t v17 = v9;
  uint64_t v18 = a2;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v11 = *(id *)(v10 + 24);
  char v12 = static NSObject.== infix(_:_:)();

  if (v12)
  {
    switch(*(unsigned char *)(v10 + 16))
    {
      case 2:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      default:
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_16;
        }
LABEL_13:
        uint64_t v15 = sub_1001A64D8(v10);
        if (v16)
        {
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, a1, v4);
        }
        if (v15 >= IndexPath.row.getter())
        {
LABEL_16:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
          uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v18, v7, v4);
        }
        else
        {
          IndexPath.section.getter();
          IndexPath.init(row:section:)();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease_n();
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        }
        break;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v18, a1, v4);
  }
  return result;
}

uint64_t sub_1001A22E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v12 && (uint64_t v13 = *(void *)(v12 + 24)) != 0)
  {
    char v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v14(v11, v13 + OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
    char v14 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  }
  v14(v8, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
    return sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007069A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v11, v5);
  }
}

void sub_1001A26DC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v118 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v117 = (uint64_t)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(char **)(v8 - 8);
  uint64_t v10 = *((void *)v9 + 8);
  uint64_t v11 = __chkstk_darwin(v8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v102 - v12;
  uint64_t v14 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (v14 && (uint64_t v15 = *(char **)(v14 + 24)) != 0)
  {
    uint64_t v103 = (void (*)(char *, char *, uint64_t))*((void *)v9 + 2);
    unint64_t v104 = v9 + 16;
    v103((char *)&v102 - v12, &v15[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v8);
    uint64_t v116 = v15;
    uint64_t v16 = IndexPath.row.getter();
    UIImage_optional v113 = v13;
    UIImage_optional v114 = v3;
    uint64_t v111 = v8;
    unint64_t v112 = (void (**)(void *, uint64_t))v9;
    uint64_t v106 = v6;
    Swift::Int v107 = a1;
    id v105 = (char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v16 < 1)
    {
      uint64_t v102 = NSNotFound.getter();
    }
    else
    {
      uint64_t v17 = IndexPath.row.getter();
      if (__OFSUB__(v17, 1))
      {
        __break(1u);
LABEL_68:
        swift_bridgeObjectRetain();
        uint64_t v66 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_40;
      }
      uint64_t v102 = v17 - 1;
    }
    id v115 = [a2 session:v102];
    uint64_t v23 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10059B760;
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v25 = sub_100073F48();
    *(void *)(v24 + 64) = v25;
    unint64_t v109 = 0x80000001005D98E0;
    unint64_t v110 = 0xD000000000000015;
    *(void *)(v24 + 32) = 0xD000000000000015;
    *(void *)(v24 + 40) = 0x80000001005D98E0;
    self;
    uint64_t v26 = swift_dynamicCastObjCClassUnconditional();
    *(void *)(v24 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    *(void *)(v24 + 104) = sub_1000C5A24((unint64_t *)&unk_1007069B0, (unint64_t *)&qword_100706710);
    *(void *)(v24 + 72) = v26;
    Swift::Int v108 = a2;
    swift_unknownObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    Swift::String v27 = v116;
    char v28 = [v116 intent] == (id)1;
    a2 = v113;
    uint64_t v29 = sub_100482044((uint64_t)v113, v28);
    if (!v29)
    {
      Swift::String v30 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1005A0030;
      *(void *)(v31 + 56) = &type metadata for String;
      *(void *)(v31 + 64) = v25;
      unint64_t v32 = v109;
      *(void *)(v31 + 32) = v110;
      *(void *)(v31 + 40) = v32;
      os_log(_:dso:log:type:_:)();

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      v112[1](a2, v111);
      return;
    }
    uint64_t v3 = v112;
    switch(*(unsigned char *)(v29 + 16))
    {
      case 1:
      case 3:
        uint64_t v118 = v29;
        char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v41 & 1) == 0)
        {
          switch(*(unsigned char *)(v118 + 16))
          {
            case 1:
              swift_bridgeObjectRelease();
              goto LABEL_42;
            default:
              char v63 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if ((v63 & 1) != 0 || [v116 intent] != (id)1) {
                goto LABEL_42;
              }
              id v64 = [v108 items];
              sub_1000CBE70(&qword_100709890);
              unint64_t v65 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (v65 >> 62) {
                goto LABEL_68;
              }
              uint64_t v66 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
              break;
          }
LABEL_40:
          swift_bridgeObjectRelease();
          if (v66 < 1)
          {
            v3[1](a2, v111);

LABEL_52:
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v117 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            uint64_t v67 = v105;
            uint64_t v68 = v115;
            uint64_t v69 = v111;
            v103(v105, (char *)a2, v111);
            unint64_t v70 = (*((unsigned __int8 *)v3 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v3 + 80);
            unint64_t v71 = (v10 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v72 = swift_allocObject();
            BOOL v73 = v114;
            *(void *)(v72 + 16) = v114;
            ((void (*)(unint64_t, char *, uint64_t))v3[4])(v72 + v70, v67, v69);
            *(void *)(v72 + v71) = v108;
            *(void *)(v72 + ((v71 + 15) & 0xFFFFFFFFFFFFFFF8)) = v102;
            swift_unknownObjectRetain();
            sub_100497E98(v68, v73, (void (*)(void *))sub_1001ABF14, v72);

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            v3[1](a2, v69);
          }
          return;
        }
LABEL_42:
        uint64_t v74 = v116;
        if ([v116 intent] != (id)2)
        {
          v3[1](a2, v111);
LABEL_51:

          goto LABEL_52;
        }
        sub_1001AA42C(v114, (uint64_t)a2, v107, v108);
        uint64_t v75 = (void *)sub_100482C08((uint64_t)a2, 1);
        uint64_t v78 = v75;
        uint64_t v80 = v79;
        uint64_t v81 = v76;
        unsigned __int8 v82 = v77;
        if (v77 && v77 != 3)
        {
          if (v77 == 255)
          {
            BOOL v83 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.debug.getter();
            uint64_t v84 = swift_allocObject();
            *(_OWORD *)(v84 + 16) = xmmword_1005A0030;
            *(void *)(v84 + 56) = &type metadata for String;
            *(void *)(v84 + 64) = v25;
            *(void *)(v84 + 32) = 0xD00000000000001ELL;
            *(void *)(v84 + 40) = 0x80000001005D9780;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            v3[1](a2, v111);

            goto LABEL_52;
          }
          v3[1](a2, v111);
          sub_1000A7C1C(v78, v80, v81, v82);
          goto LABEL_51;
        }
        uint64_t v117 = v76;
        id v85 = v75;
        uint64_t v86 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        uint64_t v87 = v115;
        swift_getObjectType();
        uint64_t v88 = (void (**)(char *, uint64_t))swift_unknownObjectRetain();
        char v89 = sub_10049BAF8(v88, v86);
        swift_unknownObjectRelease();
        if (v89)
        {
          Swift::String v27 = (char *)v85;
          sub_10049FEDC(v87, v114, v86, v27);
          sub_1000A7C1C(v78, v80, v117, v82);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          goto LABEL_31;
        }
        uint64_t v90 = *(uint64_t *)((char *)v114 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
        if (v90) {
          char v91 = *(unsigned char *)(v90 + 17);
        }
        else {
          char v91 = 0;
        }
        unint64_t v92 = (unint64_t)sub_1001A747C(v91);
        if (v92 >> 62) {
          uint64_t v93 = _CocoaArrayWrapper.endIndex.getter();
        }
        else {
          uint64_t v93 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v93)
        {
          id v94 = objc_msgSend(objc_msgSend(v108, "session"), "items");
          swift_unknownObjectRelease();
          sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
          unint64_t v95 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_10049F708(v95, v85, v114, 0, 0);
          sub_1000A7C1C(v78, v80, v117, v82);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
LABEL_60:
          swift_bridgeObjectRelease();
LABEL_32:
          v3[1](a2, v111);
        }
        else
        {
          v3[1](a2, v111);
          sub_1000A7C1C(v78, v80, v117, v82);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
        }
        break;
      case 2:
        if ([v27 intent] != (id)2) {
          goto LABEL_30;
        }
        Swift::String v33 = (void *)sub_100482C08((uint64_t)a2, 1);
        uint64_t v37 = v33;
        uint64_t v38 = v34;
        uint64_t v39 = v35;
        if (v36 == 1)
        {
          type metadata accessor for DOCFileProviderSource(0);
          uint64_t v56 = swift_dynamicCastClass();
          if (v56)
          {
            unint64_t v57 = *(void (**)(id, id, void (**)(void *, uint64_t)))(v56
                                                                                       + OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction);
            if (v57)
            {
              uint64_t v118 = *(void *)(v56 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction + 8);
              sub_1000A9454(v37, v38, v39, 1u);
              sub_1000A9454(v37, v38, v39, 1u);
              sub_1000C0640((uint64_t)v57);
              uint64_t v58 = v108;
              sub_1001AA42C(v114, (uint64_t)a2, v107, v108);
              id v59 = [v58 proposal];
              id v60 = [v59 operation];
              id v61 = v115;
              id v62 = v60;

              v57(v61, v62, v114);
              sub_1000A7C1C(v37, v38, v39, 1u);
              sub_1000A7258((uint64_t)v57);

              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
              sub_1000A7C1C(v37, v38, v39, 1u);
              sub_1000A7C1C(v37, v38, v39, 1u);
            }
            else
            {

              sub_1000A7C1C(v37, v38, v39, 1u);
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();
            }
          }
          else
          {
            sub_1000A9454(v37, v38, v39, 1u);
            id v101 = v37;

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_1000A7C1C(v37, v38, v39, 1u);
            sub_1000A7C1C(v37, v38, v39, 1u);
            sub_10010EDB8(v37, v38, v39, 1u);
          }
        }
        else
        {
          if (v36 == 255) {
            goto LABEL_29;
          }
          unsigned __int8 v40 = v36;
          sub_10010ED28(v33, v34, v35, v36);

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          sub_1000A7C1C(v37, v38, v39, v40);
          sub_1000A7C1C(v37, v38, v39, v40);
        }
        goto LABEL_32;
      case 5:
        if ([v27 intent] == (id)1)
        {
          uint64_t v42 = v117;
          static Logger.UI.getter();
          uint64_t v43 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v45 = 0;
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unexpected drag operation. Tag section only supports drop onto existing items", v45, 2u);
            Swift::String v27 = v116;
            swift_slowDealloc();
          }

          swift_unknownObjectRelease();
          swift_unknownObjectRelease();

          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v42, v106);
        }
        else if ([v27 intent] == (id)2)
        {
          uint64_t v46 = v114;
          uint64_t v47 = (void *)sub_100482C08((uint64_t)a2, 1);
          unint64_t v51 = v47;
          uint64_t v52 = v48;
          if (v50 == 2)
          {
            uint64_t v96 = v49;
            sub_1000A9454(v47, v48, v49, 2u);
            sub_1001AA42C(v46, (uint64_t)a2, v107, v108);
            Swift::String v97 = v27;
            uint64_t v98 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            sub_1000A9454(v51, v52, v96, 2u);
            sub_10049E304(v115, v46, v98, v51);
            sub_1000A7C1C(v51, v52, v96, 2u);
            sub_1000A7C1C(v51, v52, v96, 2u);

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_1000A7C1C(v51, v52, v96, 2u);
          }
          else
          {
            if (v50 == 255)
            {
LABEL_29:
              uint64_t v53 = (void *)static DOCLog.UI.getter();
              static os_log_type_t.debug.getter();
              unint64_t v54 = v27;
              uint64_t v55 = swift_allocObject();
              *(_OWORD *)(v55 + 16) = xmmword_1005A0030;
              *(void *)(v55 + 56) = &type metadata for String;
              *(void *)(v55 + 64) = v25;
              *(void *)(v55 + 32) = 0xD00000000000001ELL;
              *(void *)(v55 + 40) = 0x80000001005D9780;
              os_log(_:dso:log:type:_:)();
              swift_unknownObjectRelease();
              swift_unknownObjectRelease();

              goto LABEL_60;
            }
            unsigned __int8 v99 = v50;
            uint64_t v100 = v49;
            sub_10010ED28(v47, v48, v49, v50);

            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            sub_1000A7C1C(v51, v52, v100, v99);
            sub_1000A7C1C(v51, v52, v100, v99);
          }
        }
        else
        {
LABEL_30:
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
LABEL_31:
        }
        goto LABEL_32;
      default:
        goto LABEL_30;
    }
  }
  else
  {
    if (qword_100704E20 != -1) {
      swift_once();
    }
    swift_retain();
    uint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.info.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    uint64_t v119 = 0x205D446E445BLL;
    unint64_t v120 = 0xE600000000000000;
    v20._uint64_t countAndFlagsBits = 0xD000000000000020;
    v20._object = (void *)0x80000001005D98B0;
    String.append(_:)(v20);
    uint64_t v21 = v119;
    unint64_t v22 = v120;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100073F48();
    *(void *)(v19 + 32) = v21;
    *(void *)(v19 + 40) = v22;
    os_log(_:dso:log:type:_:)();
    swift_release();

    swift_bridgeObjectRelease();
  }
}

void DOCSidebarViewController.collectionView(_:canHandle:)(uint64_t a1, void *a2)
{
}

void DOCSidebarViewController.collectionView(_:dropSessionDidEnter:)(uint64_t a1, uint64_t a2)
{
}

void sub_1001A396C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext];
  if (v1)
  {
    swift_retain();
    id v2 = [v0 view];
    if (!v2)
    {
      __break(1u);
      goto LABEL_18;
    }
    uint64_t v3 = v2;
    id v4 = [v2 window];

    if (v4)
    {

      id v5 = [self standardUserDefaults];
      NSString v6 = String._bridgeToObjectiveC()();
      unsigned int v7 = [v5 BOOLForKey:v6];

      if (v7)
      {
        uint64_t v8 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView;
        uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView];
        if (!v9)
        {
          id v10 = [objc_allocWithZone((Class)_s22DebugDropIndicatorViewCMa()) init];
          uint64_t v11 = *(void **)&v0[v8];
          *(void *)&v0[v8] = v10;

          uint64_t v9 = *(void **)&v0[v8];
          if (!v9) {
            goto LABEL_19;
          }
        }
        id v12 = v9;
        id v13 = [v0 view];
        if (v13)
        {
          uint64_t v14 = v13;
          uint64_t v15 = *(void **)(v1 + 16);
          swift_unknownObjectRetain();
          sub_10011508C(v14, v15, v1);
          swift_release();

          swift_unknownObjectRelease();
          return;
        }
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        return;
      }
    }
    swift_release();
  }
  uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC5Files24DOCSidebarViewController_dropPointIndicatorView];
  if (v16)
  {
    id v17 = v16;
    sub_1001154E8();
  }
}

unsigned char *DOCSidebarViewController.collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:)(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1001AB1B8(a2, a3);
}

unsigned char *sub_1001A3C14(void *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v276 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v271 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  unint64_t v275 = (char *)&v263 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UTType();
  unint64_t v273 = *(void *)(v7 - 8);
  uint64_t v274 = v7;
  __chkstk_darwin(v7);
  uint64_t v272 = (char *)&v263 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v263 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v281 = (char *)&v263 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)&v263 - v16;
  uint64_t v18 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t ObjectType = swift_getObjectType();
  id v284 = v18;
  uint64_t v285 = a1;
  unint64_t v278 = ObjectType;
  int v20 = sub_10049CF24((uint64_t)a1);
  uint64_t v287 = swift_allocBox();
  uint64_t v288 = v21;
  uint64_t v279 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  uint64_t v280 = v13 + 16;
  v279(v21, a2, v12);
  if (sub_100482A00() && (v20 & 1) != 0)
  {
    IndexPath.section.getter();
    sub_1001A75DC((uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
      (*(void (**)(uint64_t, char *, uint64_t))(v13 + 40))(v288, v17, v12);
    }
  }
  LODWORD(v277) = v20;
  uint64_t v283 = v13;
  unint64_t v286 = v3;
  uint64_t v303 = 0;
  unint64_t v304 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v22._object = (void *)0x80000001005D9650;
  v22._uint64_t countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v22);
  sub_1001ABD98(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  v23._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = v303;
  unint64_t v25 = (void *)v304;
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100115C0C(0x6567726154646E64, 0xEB00000000322E74, v24, v25);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v303 = 0;
  unint64_t v304 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v26._object = (void *)0x80000001005D9690;
  v26._uint64_t countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v26);
  uint64_t v27 = v288;
  uint64_t v282 = v12;
  v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  uint64_t v29 = v303;
  Swift::String v30 = (void *)v304;
  swift_retain();
  sub_100115C0C(0x6567726154646E64, 0xEB00000000332E74, v29, v30);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v31 = v27;
  unint64_t v32 = v286;
  uint64_t v33 = sub_100482044(v31, 1);
  if (!v33)
  {
    uint64_t v37 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1005A0030;
    *(void *)(v38 + 56) = &type metadata for String;
    *(void *)(v38 + 64) = sub_100073F48();
    *(void *)(v38 + 32) = 0xD00000000000003CLL;
    *(void *)(v38 + 40) = 0x80000001005D9700;
    os_log(_:dso:log:type:_:)();
    swift_release();

    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v34 = v33;
  uint64_t v35 = *(void *)(v32 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v35) {
    int v36 = *(unsigned __int8 *)(v35 + 17);
  }
  else {
    int v36 = 0;
  }
  uint64_t v39 = 0;
  unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
  switch(*(unsigned char *)(v33 + 16))
  {
    case 1:
      if (*(unsigned char *)(v33 + 48) != 1) {
        goto LABEL_24;
      }
      uint64_t v41 = sub_1001A7C80(v32, v287, v36 != 0, v285);
      if (v42) {
        goto LABEL_24;
      }
      uint64_t v43 = v41;
      uint64_t v44 = v288;
      swift_beginAccess();
      uint64_t v46 = v281;
      uint64_t v45 = v282;
      uint64_t v47 = (void (*)(char *, char *, uint64_t))v279;
      v279((uint64_t)v281, v44, v282);
      uint64_t v48 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
      uint64_t v49 = (char *)objc_allocWithZone(v48);
      v47(&v49[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v46, v45);
      unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      v300.receiver = v49;
      v300.super_class = v48;
      uint64_t v39 = [super initWithDropOperation:v43 intent:2];
      (*(void (**)(char *, uint64_t))(v283 + 8))(v46, v45);
      goto LABEL_69;
    case 2:
      uint64_t v50 = v288;
      swift_beginAccess();
      id v51 = (id)sub_100482C08(v50, 0);
      if (v54 == 0xFF)
      {
LABEL_24:
        uint64_t v39 = 0;
        goto LABEL_69;
      }
      uint64_t v55 = v52;
      uint64_t v56 = v53;
      unsigned __int8 v57 = v54;
      if ((*(unsigned char *)(v34 + 48) & 1) == 0) {
        goto LABEL_59;
      }
      id v277 = v51;
      sub_1004A11D8(v285);
      if (v58 >> 62) {
        uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v59 >= 1)
      {
        id v61 = v281;
        uint64_t v60 = v282;
        uint64_t v270 = v56;
        id v62 = (void (*)(char *, char *, uint64_t))v279;
        v279((uint64_t)v281, v288, v282);
        char v63 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
        id v64 = (char *)objc_allocWithZone(v63);
        uint64_t v269 = v55;
        id v65 = v64;
        v62(&v64[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v61, v60);
        unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        v289.receiver = v65;
        v289.super_class = v63;
        uint64_t v39 = [super initWithDropOperation:3 intent:1];
        (*(void (**)(char *, uint64_t))(v283 + 8))(v61, v60);
        id v66 = v277;
        uint64_t v67 = (uint64_t)v269;
        uint64_t v68 = v270;
        unsigned __int8 v69 = v57;
        goto LABEL_68;
      }
      if (v57 != 1)
      {
        id v51 = v277;
LABEL_59:
        uint64_t v88 = (uint64_t)v55;
        uint64_t v89 = v56;
        unsigned __int8 v90 = v57;
        goto LABEL_60;
      }
      type metadata accessor for DOCFileProviderSource(0);
      id v91 = v277;
      uint64_t v109 = swift_dynamicCastClass();
      uint64_t v39 = (unsigned char *)v109;
      if (!v109)
      {
        id v66 = v91;
        uint64_t v67 = (uint64_t)v55;
        uint64_t v68 = v56;
        unsigned __int8 v69 = 1;
LABEL_68:
        sub_1000A7C1C(v66, v67, v68, v69);
        goto LABEL_69;
      }
      if (!*(void *)(v109 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction) || v36)
      {
        id v51 = v91;
        uint64_t v88 = (uint64_t)v55;
        uint64_t v89 = v56;
        unsigned __int8 v90 = 1;
        goto LABEL_60;
      }
      sub_1000A9454(v91, (uint64_t)v55, v56, 1u);
      id v140 = v91;
      if ((sub_10049BAF8((void (**)(char *, uint64_t))v285, (uint64_t)v284) & 1) == 0)
      {
        unint64_t v268 = v34;
        if (v39[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] == 1)
        {
          uint64_t v154 = *(void **)&v39[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          uint64_t v155 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v157 = v156;
          if (v155 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v157 == v158)
          {
            id v159 = v154;
            swift_bridgeObjectRelease_n();

            id v91 = v277;
LABEL_122:
            sub_1000A7C1C(v91, (uint64_t)v55, v56, 1u);
            sub_1000A7C1C(v91, (uint64_t)v55, v56, 1u);
            uint64_t v191 = v91;
            uint64_t v192 = (uint64_t)v55;
            uint64_t v193 = v56;
LABEL_155:
            sub_10010EDB8(v191, v192, v193, 1u);
LABEL_156:
            uint64_t v39 = 0;
            goto LABEL_69;
          }
          char v189 = _stringCompareWithSmolCheck(_:_:expecting:)();
          id v190 = v154;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          id v91 = v277;
          if (v189) {
            goto LABEL_122;
          }
        }
        id v194 = [v285 items];
        sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
        unint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v34 >> 62)
        {
LABEL_166:
          swift_bridgeObjectRetain();
          uint64_t v195 = _CocoaArrayWrapper.endIndex.getter();
          if (v195)
          {
LABEL_125:
            uint64_t v196 = 0;
            unint64_t v273 = v34 & 0xC000000000000001;
            uint64_t v264 = v195;
            unint64_t v265 = v34 + 32;
            unint64_t v278 = v271 + 16;
            uint64_t v197 = (void (**)(char *, uint64_t))(v271 + 8);
            uint64_t v269 = v55;
            uint64_t v270 = v56;
            unint64_t v267 = v34;
            while (1)
            {
              if (v273) {
                id v198 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v198 = *(id *)(v265 + 8 * v196);
              }
              id v284 = v198;
              if (__OFADD__(v196++, 1))
              {
LABEL_165:
                __break(1u);
                goto LABEL_166;
              }
              uint64_t v200 = DOCAcceptableDragPasteboardTypes.getter();
              uint64_t v201 = *(void *)(v200 + 16);
              if (v201) {
                break;
              }

              swift_bridgeObjectRelease();
LABEL_136:
              unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
              uint64_t v56 = v270;
              id v91 = v277;
              if (v196 == v195) {
                goto LABEL_137;
              }
            }
            uint64_t v266 = v196;
            unint64_t v202 = v200
                 + ((*(unsigned __int8 *)(v271 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v271 + 80));
            uint64_t v274 = *(void *)(v271 + 72);
            uint64_t v203 = *(void (**)(char *, unint64_t, uint64_t))(v271 + 16);
            uint64_t v272 = (char *)v200;
            swift_bridgeObjectRetain();
            while (1)
            {
              uint64_t v204 = v275;
              uint64_t v205 = v276;
              v203(v275, v202, v276);
              id v206 = [v284 itemProvider];
              DOCDragPasteboardType.typeIdentifier.getter();
              NSString v207 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              unsigned __int8 v208 = [v206 hasRepresentationConformingToTypeIdentifier:v207 fileOptions:0];

              (*v197)(v204, v205);
              if (v208) {
                break;
              }
              v202 += v274;
              if (!--v201)
              {

                swift_bridgeObjectRelease_n();
                unint64_t v32 = v286;
                uint64_t v55 = v269;
                uint64_t v196 = v266;
                unint64_t v34 = v267;
                uint64_t v195 = v264;
                goto LABEL_136;
              }
            }
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease_n();
            v210 = v281;
            uint64_t v209 = v282;
            uint64_t v211 = (void (*)(char *, char *, uint64_t))v279;
            v279((uint64_t)v281, v288, v282);
            uint64_t v212 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
            uint64_t v213 = (char *)objc_allocWithZone(v212);
            v211(&v213[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v210, v209);
            v295.receiver = v213;
            v295.super_class = v212;
            uint64_t v39 = [super initWithDropOperation:2 intent:2];
            (*(void (**)(char *, uint64_t))(v283 + 8))(v210, v209);
            id v214 = v277;
            uint64_t v216 = (uint64_t)v269;
            uint64_t v215 = v270;
            sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
            sub_1000A7C1C(v214, v216, v215, 1u);
            sub_1000A7C1C(v214, v216, v215, 1u);
            unint64_t v32 = v286;
LABEL_44:
            unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v195 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v195) {
            goto LABEL_125;
          }
        }
LABEL_137:
        swift_bridgeObjectRelease_n();
        sub_1000A7C1C(v91, (uint64_t)v55, v56, 1u);
        sub_1000A7C1C(v91, (uint64_t)v55, v56, 1u);
        uint64_t v172 = v91;
        uint64_t v173 = (uint64_t)v55;
        uint64_t v174 = v56;
        unsigned __int8 v175 = 1;
LABEL_138:
        sub_1000A7C1C(v172, v173, v174, v175);
        goto LABEL_156;
      }
      uint64_t v269 = v55;
      id v141 = [v285 localDragSession];
      swift_unknownObjectRelease();
      uint64_t v270 = v56;
      if (v141)
      {
        unint64_t v268 = v34;
        uint64_t v142 = (uint64_t)v272;
        static UTType.item.getter();
        uint64_t v143 = sub_10049C6C0(v285, v142);
        (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v142, v274);
        id v144 = [self defaultManager];
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        id v146 = [v144 eligibleActionsForItems:isa];

        type metadata accessor for FPAction(0);
        sub_1001ABD98((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
        uint64_t v147 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        if (v39[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] == 1)
        {
          uint64_t v148 = *(void **)&v39[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type];
          uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v151 = v150;
          if (v149 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v151 == v152)
          {
            id v153 = v148;
            swift_bridgeObjectRelease_n();

LABEL_141:
            swift_bridgeObjectRelease();
            id v219 = FPActionTrash;
            char v220 = sub_1005350BC(v219, v147);

            swift_bridgeObjectRelease();
            if (v220)
            {
              v222 = v281;
              uint64_t v221 = v282;
              uint64_t v223 = (void (*)(char *, char *, uint64_t))v279;
              v279((uint64_t)v281, v288, v282);
              uint64_t v224 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
              uint64_t v225 = (char *)objc_allocWithZone(v224);
              v223(&v225[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v222, v221);
              v290.receiver = v225;
              v290.super_class = v224;
              v226 = [super initWithDropOperation:3 intent:2];
LABEL_152:
              uint64_t v39 = v226;
              (*(void (**)(char *, uint64_t))(v283 + 8))(v222, v221);
LABEL_153:
              id v244 = v277;
              uint64_t v246 = (uint64_t)v269;
              uint64_t v245 = v270;
              sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
              sub_1000A7C1C(v244, v246, v245, 1u);
              sub_10010EDB8(v244, v246, v245, 1u);
              goto LABEL_69;
            }
            id v247 = v277;
            uint64_t v249 = (uint64_t)v269;
            uint64_t v248 = v270;
            sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
            sub_1000A7C1C(v247, v249, v248, 1u);
            uint64_t v191 = v247;
            uint64_t v192 = v249;
            uint64_t v193 = v248;
            goto LABEL_155;
          }
          char v217 = _stringCompareWithSmolCheck(_:_:expecting:)();
          id v218 = v148;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v217) {
            goto LABEL_141;
          }
        }
        if ((sub_1001A82E8() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v222 = v281;
          uint64_t v221 = v282;
          uint64_t v241 = (void (*)(char *, char *, uint64_t))v279;
          v279((uint64_t)v281, v288, v282);
          v242 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
          uint64_t v243 = (char *)objc_allocWithZone(v242);
          v241(&v243[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v222, v221);
          v293.receiver = v243;
          v293.super_class = v242;
          v226 = [super initWithDropOperation:1 intent:2];
          goto LABEL_152;
        }
        id v227 = FPActionReparent;
        char v228 = sub_1005350BC(v227, v147);

        if (v228)
        {
          swift_bridgeObjectRelease();
          id v229 = v277;
          uint64_t v230 = (uint64_t)v269;
          uint64_t v231 = v270;
          sub_1000A9454(v277, (uint64_t)v269, v270, 1u);
          char v232 = sub_1001A9B98((unint64_t)v143, (uint64_t)v39);
          sub_1000A7C1C(v229, v230, v231, 1u);
          sub_1000A9454(v229, v230, v231, 1u);
          char v233 = sub_1001A9E18((unint64_t)v143, (uint64_t)v39);
          sub_1000A7C1C(v229, v230, v231, 1u);
          swift_bridgeObjectRelease();
          uint64_t v234 = 2;
          if (v233) {
            uint64_t v234 = 3;
          }
          if (v232) {
            uint64_t v235 = 1;
          }
          else {
            uint64_t v235 = v234;
          }
          uint64_t v237 = v281;
          uint64_t v236 = v282;
          v238 = (void (*)(char *, char *, uint64_t))v279;
          v279((uint64_t)v281, v288, v282);
          uint64_t v239 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
          uint64_t v240 = (char *)objc_allocWithZone(v239);
          v238(&v240[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v237, v236);
          v291.receiver = v240;
          v291.super_class = v239;
          uint64_t v39 = [super initWithDropOperation:v235 intent:2];
          (*(void (**)(char *, uint64_t))(v283 + 8))(v237, v236);
          goto LABEL_153;
        }
        swift_bridgeObjectRelease();
        id v250 = FPActionCopy;
        char v251 = sub_1005350BC(v250, v147);

        swift_bridgeObjectRelease();
        if (v251)
        {
          uint64_t v253 = v281;
          uint64_t v252 = v282;
          uint64_t v254 = (void (*)(char *, char *, uint64_t))v279;
          v279((uint64_t)v281, v288, v282);
          uint64_t v255 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
          uint64_t v256 = (char *)objc_allocWithZone(v255);
          v254(&v256[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v253, v252);
          v292.receiver = v256;
          v292.super_class = v255;
          uint64_t v39 = [super initWithDropOperation:2 intent:2];
          (*(void (**)(char *, uint64_t))(v283 + 8))(v253, v252);
          id v257 = v277;
          uint64_t v259 = (uint64_t)v269;
          uint64_t v258 = v270;
          sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
          sub_1000A7C1C(v257, v259, v258, 1u);
          sub_10010EDB8(v257, v259, v258, 1u);
        }
        else
        {
          id v260 = v277;
          uint64_t v262 = (uint64_t)v269;
          uint64_t v261 = v270;
          sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
          sub_1000A7C1C(v260, v262, v261, 1u);
          sub_10010EDB8(v260, v262, v261, 1u);
          uint64_t v39 = 0;
        }
        unint64_t v32 = v286;
      }
      else
      {
        v182 = v281;
        uint64_t v181 = v282;
        uint64_t v183 = (void (*)(char *, char *, uint64_t))v279;
        v279((uint64_t)v281, v288, v282);
        uint64_t v184 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
        uint64_t v185 = (char *)objc_allocWithZone(v184);
        v183(&v185[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v182, v181);
        v294.receiver = v185;
        v294.super_class = v184;
        uint64_t v39 = [super initWithDropOperation:1 intent:2];
        (*(void (**)(char *, uint64_t))(v283 + 8))(v182, v181);
        id v186 = v277;
        uint64_t v187 = (uint64_t)v269;
        uint64_t v188 = v270;
        sub_1000A7C1C(v277, (uint64_t)v269, v270, 1u);
        sub_1000A7C1C(v186, v187, v188, 1u);
        sub_10010EDB8(v186, v187, v188, 1u);
      }
LABEL_69:
      id v123 = [v285 v40[491]];
      swift_unknownObjectRelease();
      if (!v123 || !v39 || [v39 intent] != (id)2)
      {
        swift_release();
        swift_unknownObjectRelease();
        return v39;
      }
      unsigned int v124 = [*(id *)(v32 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration) isPickerUI];
      swift_unknownObjectRelease();
      swift_release();
      if (v124)
      {

        return 0;
      }
      return v39;
    case 3:
      uint64_t v70 = (uint64_t)v284;
      char v71 = sub_10049837C(v285);
      uint64_t v72 = v288;
      swift_beginAccess();
      uint64_t v75 = (void *)sub_100482C08(v72, 0);
      uint64_t v77 = v76;
      unsigned __int8 v78 = v74;
      if ((_BYTE)v74 == 0xFF)
      {
        LODWORD(v275) = v74;
        uint64_t v276 = v73;
        uint64_t v79 = v75;
        uint64_t v80 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = xmmword_1005A0030;
        *(void *)(v81 + 56) = &type metadata for String;
        *(void *)(v81 + 64) = sub_100073F48();
        *(void *)(v81 + 32) = 0xD00000000000001ELL;
        *(void *)(v81 + 40) = 0x80000001005D9780;
        os_log(_:dso:log:type:_:)();

        uint64_t v75 = v79;
        uint64_t v70 = (uint64_t)v284;
        swift_bridgeObjectRelease();
        uint64_t v73 = v276;
        unsigned __int8 v78 = v275;
        if (v277)
        {
          BOOL v83 = v281;
          uint64_t v82 = v282;
          uint64_t v84 = (void (*)(char *, char *, uint64_t))v279;
          v279((uint64_t)v281, v288, v282);
          id v85 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
          uint64_t v86 = (char *)objc_allocWithZone(v85);
          v84(&v86[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v83, v82);
          v296.receiver = v86;
          v296.super_class = v85;
          uint64_t v39 = [super initWithDropOperation:3 intent:1];
          (*(void (**)(char *, uint64_t))(v283 + 8))(v83, v82);
          goto LABEL_44;
        }
      }
      if ((*(unsigned char *)(v34 + 48) & 1) == 0)
      {
        unint64_t v95 = v75;
        uint64_t v96 = v77;
        unsigned __int8 v97 = v78;
        goto LABEL_43;
      }
      uint64_t v276 = v73;
      id v277 = v75;
      if ((v71 & 1) == 0
        && ((sub_10049BB60((void (**)(char *, uint64_t))v285, v70) & 1) != 0 || (sub_10049CBB8(v285) & 1) != 0))
      {
        uint64_t v274 = v77;
        if (v78 == 0xFF)
        {
          id v94 = 0;
          unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        }
        else
        {
          unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
          if (v78 == 3)
          {
            id v94 = v277;
            sub_10010ED28(v277, v276, v77, 3u);
            swift_bridgeObjectRelease();
          }
          else if (v78)
          {
            id v94 = 0;
          }
          else
          {
            id v94 = v277;
            sub_10010ED28(v277, v276, v77, 0);
          }
        }
        int v117 = sub_1001A1814(v94);

        if (v36 || ((sub_10049CBB8(v285) | v117) & 1) != 0)
        {
          uint64_t v119 = v281;
          uint64_t v118 = v282;
          unint64_t v120 = (void (*)(char *, char *, uint64_t))v279;
          v279((uint64_t)v281, v288, v282);
          unint64_t v121 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
          uint64_t v122 = (char *)objc_allocWithZone(v121);
          v120(&v122[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v119, v118);
          unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
          v298.receiver = v122;
          v298.super_class = v121;
          uint64_t v39 = [super initWithDropOperation:3 intent:1];
          (*(void (**)(char *, uint64_t))(v283 + 8))(v119, v118);
        }
        else
        {
          Swift::Int v126 = v285;
          uint64_t v127 = sub_1001A7C80(v32, v287, 0, v285);
          if (v128) {
            uint64_t v129 = 3;
          }
          else {
            uint64_t v129 = v127;
          }
          uint64_t v130 = v288;
          swift_beginAccess();
          uint64_t v39 = (unsigned char *)sub_1001A8750(v126, v130, v129);
          swift_endAccess();
        }
      }
      else
      {
        uint64_t v100 = (void *)sub_1001A7C80(v32, v287, v36 != 0, v285);
        unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        if (v101)
        {
          uint64_t v88 = v276;
          id v51 = v277;
          uint64_t v89 = v77;
          unsigned __int8 v90 = v78;
          goto LABEL_60;
        }
        uint64_t v103 = v281;
        uint64_t v102 = v282;
        id v284 = v100;
        unint64_t v104 = (void (*)(char *, char *, uint64_t))v279;
        v279((uint64_t)v281, v288, v282);
        id v105 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
        uint64_t v106 = (char *)objc_allocWithZone(v105);
        uint64_t v274 = v77;
        id v107 = v106;
        v104(&v106[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v103, v102);
        v299.receiver = v107;
        v299.super_class = v105;
        uint64_t v39 = [super initWithDropOperation:v284 intent:2];
        Swift::Int v108 = v103;
        unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        (*(void (**)(char *, uint64_t))(v283 + 8))(v108, v102);
      }
      uint64_t v67 = v276;
      id v66 = v277;
      uint64_t v68 = v274;
      unsigned __int8 v69 = v78;
      goto LABEL_68;
    case 5:
      uint64_t v87 = v288;
      swift_beginAccess();
      id v51 = (id)sub_100482C08(v87, 0);
      if (v90 == 0xFF)
      {
        uint64_t v98 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v99 = swift_allocObject();
        *(_OWORD *)(v99 + 16) = xmmword_1005A0030;
        *(void *)(v99 + 56) = &type metadata for String;
        *(void *)(v99 + 64) = sub_100073F48();
        *(void *)(v99 + 32) = 0xD00000000000001ELL;
        *(void *)(v99 + 40) = 0x80000001005D9780;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
        goto LABEL_69;
      }
      id v91 = v51;
      uint64_t v92 = v88;
      uint64_t v93 = (void *)v89;
      if (*(unsigned char *)(v34 + 48) != 1 || v90 != 2) {
        goto LABEL_60;
      }
      if (v36)
      {
        unsigned __int8 v90 = 2;
LABEL_60:
        sub_1000A7C1C(v51, v88, v89, v90);
        uint64_t v39 = 0;
        goto LABEL_69;
      }
      sub_1004A11EC(v285);
      if (v110 >> 62) {
        uint64_t v111 = _CocoaArrayWrapper.endIndex.getter();
      }
      else {
        uint64_t v111 = *(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unsigned __int8 v40 = (char **)v284;
      swift_bridgeObjectRelease();
      if (v111 >= 1)
      {
        unint64_t v112 = v281;
        uint64_t v276 = v92;
        id v277 = v93;
        uint64_t v113 = v282;
        UIImage_optional v114 = (void (*)(char *, char *, uint64_t))v279;
        v279((uint64_t)v281, v288, v282);
        id v115 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
        uint64_t v116 = (char *)objc_allocWithZone(v115);
        v114(&v116[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v112, v113);
        v301.receiver = v116;
        v301.super_class = v115;
        uint64_t v39 = [super initWithDropOperation:3 intent:1];
        (*(void (**)(char *, uint64_t))(v283 + 8))(v112, v113);
        sub_1000A7C1C(v91, v276, (uint64_t)v277, 2u);
        goto LABEL_44;
      }
      if ((sub_10049BAF8((void (**)(char *, uint64_t))v285, (uint64_t)v40) & 1) == 0)
      {
        unint64_t v95 = v91;
        uint64_t v73 = v92;
        uint64_t v96 = (uint64_t)v93;
        unsigned __int8 v97 = 2;
LABEL_43:
        sub_1000A7C1C(v95, v73, v96, v97);
        uint64_t v39 = 0;
        goto LABEL_44;
      }
      uint64_t v276 = v92;
      uint64_t v131 = (uint64_t)v272;
      static UTType.item.getter();
      unint64_t v32 = (unint64_t)sub_10049C6C0(v285, v131);
      (*(void (**)(uint64_t, uint64_t))(v273 + 8))(v131, v274);
      id v277 = v93;
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v56 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v55 = _swiftEmptyArrayStorage;
      unint64_t v268 = v34;
      unint64_t v278 = v32;
      if (v56)
      {
        uint64_t v297 = _swiftEmptyArrayStorage;
        sub_100191004(0, v56 & ~(v56 >> 63), 0);
        if (v56 < 0)
        {
          __break(1u);
          goto LABEL_165;
        }
        uint64_t v132 = 0;
        uint64_t v55 = v297;
        unint64_t v133 = v32 & 0xC000000000000001;
        do
        {
          if (v133) {
            id v134 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v134 = *(id *)(v278 + 8 * v132 + 32);
          }
          uint64_t v135 = v134;
          id v136 = [v134 providerDomainID];

          uint64_t v297 = v55;
          unint64_t v138 = v55[2];
          unint64_t v137 = v55[3];
          unint64_t v139 = v138 + 1;
          if (v138 >= v137 >> 1)
          {
            sub_100191004(v137 > 1, v138 + 1, 1);
            uint64_t v55 = v297;
          }
          ++v132;
          v55[2] = v139;
          v55[v138 + 4] = v136;
        }
        while (v56 != v132);
      }
      else
      {
        unint64_t v139 = _swiftEmptyArrayStorage[2];
        uint64_t v160 = _swiftEmptyArrayStorage;
        if (!v139) {
          goto LABEL_115;
        }
      }
      uint64_t v161 = 0;
      uint64_t v160 = _swiftEmptyArrayStorage;
      do
      {
        id v162 = (id)v55[v161 + 4];
        if (DOCProviderDomainIDIsSharedServerDomainID())
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v297 = v160;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100191004(0, v160[2] + 1, 1);
            uint64_t v160 = v297;
          }
          unint64_t v165 = v160[2];
          unint64_t v164 = v160[3];
          if (v165 >= v164 >> 1)
          {
            sub_100191004(v164 > 1, v165 + 1, 1);
            uint64_t v160 = v297;
          }
          v160[2] = v165 + 1;
          v160[v165 + 4] = v162;
        }
        else
        {
        }
        ++v161;
      }
      while (v139 != v161);
LABEL_115:
      swift_bridgeObjectRelease();
      uint64_t v166 = v160[2];
      swift_release();
      id v167 = [self defaultManager];
      Class v168 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v169 = [v167 eligibleActionsForItems:v168];

      type metadata accessor for FPAction(0);
      sub_1001ABD98((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
      uint64_t v170 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v171 = FPActionTag;
      LOBYTE(v169) = sub_1005350BC(v171, v170);

      swift_bridgeObjectRelease();
      unint64_t v32 = v286;
      if ((v169 & 1) == 0)
      {
        sub_1000A7C1C(v91, v276, (uint64_t)v277, 2u);
        uint64_t v39 = 0;
        goto LABEL_44;
      }
      unsigned __int8 v40 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      if (v166)
      {
        uint64_t v172 = v91;
        uint64_t v173 = v276;
        uint64_t v174 = (uint64_t)v277;
        unsigned __int8 v175 = 2;
        goto LABEL_138;
      }
      uint64_t v177 = v281;
      uint64_t v176 = v282;
      v178 = (void (*)(char *, char *, uint64_t))v279;
      v279((uint64_t)v281, v288, v282);
      uint64_t v179 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
      uint64_t v180 = (char *)objc_allocWithZone(v179);
      v178(&v180[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v177, v176);
      v302.receiver = v180;
      v302.super_class = v179;
      uint64_t v39 = [super initWithDropOperation:3 intent:2];
      (*(void (**)(char *, uint64_t))(v283 + 8))(v177, v176);
      sub_1000A7C1C(v91, v276, (uint64_t)v277, 2u);
      goto LABEL_69;
    default:
      goto LABEL_69;
  }
}

void sub_1001A5E10(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void))
{
  id v7 = a3;
  swift_unknownObjectRetain();
  id v8 = a1;
  a5();

  swift_unknownObjectRelease();
}

uint64_t DOCSidebarViewController._collectionView(_:dataOwnerFor:withDestinationIndexPath:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t v11 = 0;
  if (v10(a3, 1, v8) == 1 || a2 == 0) {
    return v11;
  }
  sub_1000CBC00(a3, (uint64_t)v7, (uint64_t *)&unk_1007069A0);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)(v7, 1, v8);
  if (result != 1)
  {
    uint64_t v11 = sub_1001AB7E8((uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    return v11;
  }
  __break(1u);
  return result;
}

BOOL sub_1001A622C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = *(void *)(v6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v12 && *(unsigned char *)(v12 + 17) == 2)
  {
    swift_beginAccess();
    uint64_t v13 = *(void **)(a1 + 88);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    uint64_t v13 = sub_10028CFF0(v14);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(a1 + 72) == 1)
  {
    switch(a6)
    {
      case 1:
        id v17 = a3;
        id v18 = [v17 identifier];
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
        {

          goto LABEL_17;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24)
        {
LABEL_18:
          sub_10010EDB8(a3, a4, a5, 1u);
          break;
        }
        id v25 = [v17 identifier];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;
        if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
        {

LABEL_17:
          swift_bridgeObjectRelease_n();
          goto LABEL_18;
        }
        char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10010EDB8(a3, a4, a5, 1u);
        if ((v30 & 1) == 0)
        {
LABEL_7:
          unint64_t v15 = v13[2];
          swift_bridgeObjectRelease();
          return v15 > 1;
        }
        break;
      case 3:
      case 4:
      case 5:
        break;
      default:
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1001A64D8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v3 && *(unsigned char *)(v3 + 17) == 2)
  {
    swift_beginAccess();
    id v4 = *(void **)(a1 + 88);
    swift_bridgeObjectRetain();
    uint64_t v5 = v4[2];
    if (!v5) {
      goto LABEL_23;
    }
    goto LABEL_6;
  }
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  id v4 = sub_10028CFF0(v6);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v5 = v4[2];
  if (v5)
  {
LABEL_6:
    uint64_t v26 = a1;
    uint64_t v7 = (uint64_t)&v4[4 * v5 + 2];
    uint64_t v27 = v4;
    while (1)
    {
      if (v5 > v4[2])
      {
        __break(1u);
        JUMPOUT(0x1001A67A8);
      }
      uint64_t v8 = v5--;
      uint64_t v10 = *(void **)(v7 - 16);
      uint64_t v9 = *(void *)(v7 - 8);
      uint64_t v11 = *(void *)v7;
      switch(*(unsigned char *)(v7 + 8))
      {
        case 1:
          id v28 = v10;
          id v12 = [v28 identifier];
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
          {

LABEL_8:
            swift_bridgeObjectRelease_n();
LABEL_9:
            sub_10010EDB8(v10, v9, v11, 1u);
            id v4 = v27;
            goto LABEL_10;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v18) {
            goto LABEL_9;
          }
          id v19 = [v28 identifier];
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;
          if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23)
          {

            goto LABEL_8;
          }
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10010EDB8(v10, v9, v11, 1u);
          id v4 = v27;
          if ((v24 & 1) == 0)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            return *(unsigned __int8 *)(v26 + 73) + v8 - 1;
          }
LABEL_10:
          v7 -= 32;
          if (!v5) {
            goto LABEL_23;
          }
          break;
        case 3:
        case 4:
        case 5:
          goto LABEL_10;
        default:
          goto LABEL_22;
      }
    }
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1001A67C0(uint64_t a1)
{
  unint64_t v2 = (void *)(a1 + 16);
  id result = (id)swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  BOOL v5 = __OFSUB__(v4, 1);
  uint64_t v6 = v4 - 1;
  if (v5)
  {
    __break(1u);
  }
  else
  {
    *unint64_t v2 = v6;
    if (!v6) {
      return sub_100284134(0x655274696D6D6F63, 0xED0000726564726FLL, 0);
    }
  }
  return result;
}

void sub_1001A684C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a4;
  uint64_t v36 = a5;
  uint64_t v34 = a3;
  uint64_t v37 = type metadata accessor for Date();
  uint64_t v33 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_1007098F8);
  swift_allocObject();
  uint64_t v9 = sub_1001A923C(0);
  uint64_t v10 = sub_10054DC5C(3);
  uint64_t v11 = _swiftEmptyArrayStorage;
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v12 = v10[2];
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (id *)(v10 + 9);
    while (*(unsigned char *)v13 != 3)
    {
      if (!*(unsigned char *)v13)
      {
        sub_10010ED28(*(v13 - 3), (uint64_t)*(v13 - 2), (uint64_t)*(v13 - 1), 0);
        goto LABEL_4;
      }
LABEL_7:
      v13 += 6;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = (void *)aBlock[0];
        goto LABEL_12;
      }
    }
    id v14 = *(v13 - 3);
LABEL_4:
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_7;
  }
LABEL_12:
  swift_bridgeObjectRelease();
  sub_100283EC4(0xD000000000000029, 0x80000001005D9900);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (v15)
  {
    aBlock[0] = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    id v17 = (void **)(a1 + 40);
    do
    {
      char v18 = *v17;
      v17 += 2;
      id v19 = v18;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v15;
    }
    while (v15);
    uint64_t v16 = (void *)aBlock[0];
  }
  uint64_t v20 = v34;
  sub_10054DE58((uint64_t)v16, v34);
  sub_100283EC4(0xD00000000000001CLL, 0x80000001005D9930);
  swift_getObjectType();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a2;
  id v22 = a2;
  sub_1001A6D80(a1, v20, (unint64_t)v11, (uint64_t (*)(uint64_t))sub_1001ABFC0, v21);
  swift_release();
  swift_bridgeObjectRelease();
  id v23 = [self sharedManager];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v9;
  *(void *)(v25 + 24) = v22;
  aBlock[4] = sub_1001AC004;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000A884;
  void aBlock[3] = &unk_100695218;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v22;
  swift_retain();
  swift_release();
  [v23 insertFavorites:isa atIndex:v36 completion:v26];
  _Block_release(v26);

  id v28 = [self mainRunLoop];
  double Current = CFAbsoluteTimeGetCurrent();
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v30 = v37;
  if ((aBlock[0] & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.25)
  {
    uint64_t v31 = (void (**)(char *, uint64_t))(v33 + 8);
    do
    {
      Date.init(timeIntervalSinceNow:)();
      Class v32 = Date._bridgeToObjectiveC()().super.isa;
      (*v31)(v8, v30);
      [v28 runUntilDate:v32];

      OS_dispatch_queue.sync<A>(execute:)();
    }
    while ((aBlock[0] & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.25);
  }
  swift_release();
}

uint64_t sub_1001A6D80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100704EE8 != -1) {
    swift_once();
  }
  uint64_t v38 = v9;
  if (byte_1007097D0) {
    goto LABEL_4;
  }
  id v26 = [self mainBundle];
  id v27 = [v26 bundleIdentifier];

  if (!v27)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_20;
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v30)
  {
LABEL_20:
    uint64_t v35 = swift_bridgeObjectRelease();
    return v39(v35);
  }
  if (v28 == v31 && v30 == v32)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v38;
  }
  else
  {
    char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_bridgeObjectRelease();
    uint64_t v9 = v38;
    if ((v34 & 1) == 0) {
      return v39(v35);
    }
  }
LABEL_4:
  uint64_t v47 = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_1001A988C(v13, a3);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    id v17 = (long long *)(v15 + 32);
    do
    {
      long long v18 = *v17++;
      long long v41 = v18;
      long long aBlock = v18;
      id v19 = (id)v18;
      id v20 = *((id *)&v41 + 1);
      sub_1001A9550((uint64_t *)&aBlock, &v47, v6, (uint64_t)v12);

      --v16;
    }
    while (v16);
  }
  uint64_t v21 = swift_bridgeObjectRelease();
  id v22 = v47;
  if (v47)
  {
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v40;
    *(void *)(v23 + 16) = v39;
    *(void *)(v23 + 24) = v24;
    uint64_t v45 = sub_100045B40;
    uint64_t v46 = v23;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v43 = sub_1001A9748;
    uint64_t v44 = &unk_1006952E0;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    [v22 addCompletion:v25];
    _Block_release(v25);
    swift_unknownObjectRelease();
  }
  else
  {
    v39(v21);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
  return swift_unknownObjectRelease();
}

id sub_1001A7134(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(NSObject **)(a2 + 16);
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = sub_1001A72C8;
  v4[3] = 0;
  v4[4] = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_1001AC090;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_1000879B8;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  uint64_t v8[2] = sub_100087990;
  v8[3] = &unk_100695290;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if ((v3 & 1) == 0) {
    return sub_100284134(0xD000000000000029, 0x80000001005D9900, 0);
  }
  __break(1u);
  return result;
}

unsigned char *sub_1001A72C8(unsigned char *result)
{
  *id result = 1;
  return result;
}

uint64_t sub_1001A72D4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = (unint64_t)sub_10049DA6C(v5);
  swift_bridgeObjectRelease();

  if (!(v6 >> 62))
  {
    if (*(uint64_t *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (_CocoaArrayWrapper.endIndex.getter() >= 1)
  {
LABEL_3:
    id v7 = [self defaultManager];
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v9 = [v7 eligibleActionsForDroppingItems:isa underItem:v4];

    type metadata accessor for FPAction(0);
    sub_1001ABD98((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049EB74(v6, v4, v10, a2, 0, 0);
    swift_bridgeObjectRelease();
  }
LABEL_4:

  return swift_bridgeObjectRelease();
}

void *sub_1001A747C(char a1)
{
  if (a1 == 2)
  {
    swift_beginAccess();
    unint64_t v2 = *(void **)(v1 + 88);
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    uint64_t v3 = swift_bridgeObjectRetain();
    unint64_t v2 = sub_10028CFF0(v3);
    swift_bridgeObjectRelease();
    swift_release();
  }
  uint64_t v4 = v2[2];
  if (v4)
  {
    unint64_t v5 = (id *)(v2 + 4);
    swift_bridgeObjectRetain();
    do
    {
      int v6 = *((unsigned __int8 *)v5 + 24);
      if (v6 == 3 || v6 == 0)
      {
        id v8 = *v5;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v5 += 4;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001A75DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v11 = v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v11, (uint64_t)v21, (uint64_t *)&unk_100705D60);
  if (v22)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v12 = v20;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v21, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v12 = (id)qword_10071BD48;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  IndexPath.init(row:section:)();
  unint64_t v13 = IndexPath.section.getter();
  uint64_t v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((v13 & 0x8000000000000000) != 0 || v13 >= *(void *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    unint64_t v15 = v14 + 16 * v13;
    uint64_t v16 = *(void *)(v15 + 32);
    uint64_t v17 = *(void *)(v15 + 40);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v18 = sub_1001A7934(v16, v17, 1);
    if (v18)
    {
      sub_1001A7B48(v18, a1);
      swift_unknownObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
      return swift_unknownObjectRelease();
    }
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
}

uint64_t sub_1001A7934(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v18[2] = a1;
  void v18[3] = a2;
  sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t result = NSDiffableDataSourceSnapshot.indexOfSection(_:)();
  uint64_t v11 = 0;
  if (v12) {
    return v11;
  }
  if (!__OFSUB__(result, 1))
  {
    IndexPath.init(row:section:)();
    if ((IndexPath.section.getter() & 0x8000000000000000) == 0)
    {
      unint64_t v13 = IndexPath.section.getter();
      uint64_t v14 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      if ((v13 & 0x8000000000000000) == 0 && v13 < *(void *)(v14 + 16))
      {
        unint64_t v15 = v14 + 16 * v13;
        uint64_t v11 = *(void *)(v15 + 32);
        uint64_t v16 = *(void *)(v15 + 40);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((a3 & 1) != 0
          && (v18[0] = v11, v18[1] = v16, NSDiffableDataSourceSnapshot.numberOfItems(inSection:)() <= 0))
        {
          uint64_t v17 = sub_1001A7934(v11, v16, 1);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          return v17;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        return v11;
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001A7B48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000CBE70((uint64_t *)&unk_100709870);
  NSDiffableDataSourceSnapshot.indexOfSection(_:)();
  if (v4)
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
  else
  {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 73);
    NSDiffableDataSourceSnapshot.indexOfSection(_:)();
    if (v6)
    {
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v7 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)();
      if (v7 > 0) {
        uint64_t v8 = *(unsigned __int8 *)(a1 + 73);
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v9 = v7 - v8;
    }
    uint64_t result = v9 + v5;
    if (__OFADD__(v9, v5))
    {
      __break(1u);
    }
    else
    {
      IndexPath.init(row:section:)();
      uint64_t v12 = type metadata accessor for IndexPath();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 0, 1, v12);
    }
  }
  return result;
}

uint64_t sub_1001A7C80(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  unsigned __int8 v57 = a4;
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v56 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_projectBox();
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  unint64_t v13 = (void *)sub_100482C08((uint64_t)v11, 0);
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  unsigned __int8 v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unsigned __int8 v20 = v19;
  if (v19) {
    BOOL v21 = v19 == 3;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (v19 == 255)
    {
      uint64_t v24 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
      *(void *)(v25 + 56) = &type metadata for String;
      *(void *)(v25 + 64) = sub_100073F48();
      *(void *)(v25 + 32) = 0xD00000000000001ELL;
      *(void *)(v25 + 40) = 0x80000001005D9780;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v38 = v13;
    uint64_t v39 = v15;
    uint64_t v40 = v17;
    unsigned __int8 v41 = v19;
LABEL_23:
    sub_1000A7C1C(v38, v39, v40, v41);
    return 0;
  }
  id v22 = v13;
  uint64_t v23 = v13;
  if (a3)
  {
    sub_1000A7C1C(v13, v15, v17, v20);

    return 0;
  }
  unsigned __int8 v26 = v20;
  uint64_t v27 = v17;
  uint64_t v28 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v29 = v57;
  swift_getObjectType();
  if (sub_10049BAF8((void (**)(char *, uint64_t))v29, v28))
  {
    static UTType.item.getter();
    unint64_t v30 = (unint64_t)sub_10049C6C0(v29, (uint64_t)v7);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v5);
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v31 = v23;
      if (v52) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v31 = v23;
      if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        id v32 = [self defaultManager];
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v34 = [v32 eligibleActionsForDroppingItems:isa underItem:v22];

        type metadata accessor for FPAction(0);
        sub_1001ABD98((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
        uint64_t v35 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        id v36 = FPActionReparent;
        LOBYTE(v34) = sub_1005350BC(v36, v35);

        if (v34)
        {

          swift_bridgeObjectRelease();
          sub_1000A7C1C(v31, v15, v27, v26);
          return 3;
        }
        id v46 = FPActionCopy;
        char v47 = sub_1005350BC(v46, v35);
        sub_1000A7C1C(v31, v15, v27, v26);

        swift_bridgeObjectRelease();
        BOOL v48 = (v47 & 1) == 0;
        uint64_t v49 = 2;
        goto LABEL_31;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = sub_100497424();
    sub_1002F4E20((uint64_t)v53);
    swift_bridgeObjectRelease();
    char v54 = sub_1004978CC();

    sub_1000A7C1C(v31, v15, v17, v26);
    swift_release();
    BOOL v48 = (v54 & 1) == 0;
    uint64_t v49 = 3;
LABEL_31:
    if (v48) {
      return 0;
    }
    else {
      return v49;
    }
  }
  sub_1004A11D8(v29);
  if (v42 >> 62) {
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v43 >= 1
    || ((sub_1004A11EC(v57), v44 >> 62)
      ? (uint64_t v45 = _CocoaArrayWrapper.endIndex.getter())
      : (uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10)),
        swift_bridgeObjectRelease(),
        v45 >= 1))
  {

    uint64_t v38 = v23;
    uint64_t v39 = v15;
    uint64_t v40 = v17;
    unsigned __int8 v41 = v26;
    goto LABEL_23;
  }
  uint64_t v50 = sub_100497424();
  sub_1002F4E20((uint64_t)v50);
  swift_bridgeObjectRelease();
  char v51 = sub_1004978CC();

  sub_1000A7C1C(v23, v15, v27, v26);
  swift_release();
  if (v51) {
    return 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_1001A82E8()
{
  uint64_t v1 = type metadata accessor for DispatchTimeInterval();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v4 = (uint64_t *)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v12) {
    return 0;
  }
  if ([*(id *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain) isReadOnly])return 1; {
  uint64_t v14 = swift_allocObject();
  }
  *(void *)(v14 + 16) = 0;
  uint64_t v27 = (id *)(v14 + 16);
  id v31 = v12;
  dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
  uint64_t v29 = v6;
  dispatch_semaphore_t v16 = v15;
  id v28 = [self defaultManager];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v14;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1001ABE1C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  void aBlock[3] = &unk_100695178;
  unsigned __int8 v18 = _Block_copy(aBlock);
  uint64_t v30 = v14;
  swift_retain();
  unsigned __int8 v19 = v16;
  swift_release();
  id v20 = v28;
  [v28 doc_fetchRootItemForProviderDomain:v31 completionHandler:v18];
  _Block_release(v18);

  static DispatchTime.now()();
  *char v4 = 1;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v4, enum case for DispatchTimeInterval.seconds(_:), v1);
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v2 + 8))(v4, v1);
  BOOL v21 = *(void (**)(char *, uint64_t))(v29 + 8);
  v21(v9, v5);
  OS_dispatch_semaphore.wait(timeout:)();
  v21(v11, v5);
  if ((static DispatchTimeoutResult.== infix(_:_:)() & 1) != 0 && (id v22 = v27, swift_beginAccess(), *v22))
  {
    id v13 = [*v22 isWritable];

    swift_release();
  }
  else
  {
    uint64_t v23 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_100073F48();
    strcpy((char *)(v24 + 32), "isRootWritable");
    *(unsigned char *)(v24 + 47) = -18;
    os_log(_:dso:log:type:_:)();
    swift_release();

    swift_bridgeObjectRelease();
    id v13 = 0;
  }

  return (uint64_t)v13;
}

uint64_t sub_1001A8750(void *a1, uint64_t a2, uint64_t a3)
{
  id v66 = a1;
  uint64_t v67 = a3;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v70 = (char *)&v63 - v16;
  __chkstk_darwin(v15);
  char v71 = (char *)&v63 - v17;
  uint64_t v74 = 0;
  unint64_t v75 = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v18._object = (void *)0x80000001005D97C0;
  v18._uint64_t countAndFlagsBits = 0xD000000000000033;
  String.append(_:)(v18);
  sub_1001ABD98(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  v19._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = v74;
  BOOL v21 = (void *)v75;
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  sub_100115C0C(0x6567726154646E64, 0xEB00000000342E74, v20, v21);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v22 = *(void *)&v3[OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext];
  if (!v22)
  {
    static Logger.UI.getter();
    unsigned __int8 v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unexpected error.  No drag and drop context available", v43, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  uint64_t v23 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v73.receiver = v3;
  v73.super_class = v23;
  swift_retain();
  id v24 = [super collectionView];
  if (!v24)
  {
    swift_release();
    return 0;
  }
  uint64_t v25 = v24;
  if (!IndexPath.row.getter())
  {
    swift_release();

    return 0;
  }
  uint64_t v26 = v69;
  uint64_t v27 = v69 + 16;
  id v28 = v71;
  id v65 = *(void (**)(char *, uint64_t, uint64_t))(v69 + 16);
  v65(v71, a2, v12);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v30 = [v25 cellForItemAtIndexPath:isa];

  uint64_t v63 = v27;
  id v64 = v25;
  if (!v30)
  {
LABEL_35:
    uint64_t v49 = 1;
    uint64_t v40 = 3;
    goto LABEL_36;
  }
  [v66 locationInView:v30];
  double v32 = v31;
  [v30 frame];
  double v34 = v33 * 0.25;
  double v35 = v33 - v33 * 0.25;
  id v36 = *(char **)(v22 + 24);
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v11, 1, 1, v12);
    uint64_t v38 = 0;
LABEL_17:
    uint64_t v39 = v38;
    IndexPath.init(row:section:)();
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007069A0);
    uint64_t v40 = v67;
    if (!v36) {
      goto LABEL_28;
    }
    goto LABEL_18;
  }
  v65(v11, (uint64_t)&v36[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v11, 0, 1, v12);
  int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v12);
  uint64_t v38 = v36;
  if (v37 == 1) {
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v70, v11, v12);
  uint64_t v39 = v36;
  uint64_t v40 = v67;
LABEL_18:
  if (objc_msgSend(v39, "intent", v63, v64) == (id)1 && v35 < v32)
  {
    uint64_t v45 = IndexPath.row.getter();
    uint64_t result = IndexPath.row.getter();
    if (__OFSUB__(result, 1))
    {
      __break(1u);
    }
    else
    {
      if (v45 == result - 1)
      {
        id v28 = v71;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v71, v12);
LABEL_27:

        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v70, v12);
        goto LABEL_35;
      }
      uint64_t v47 = IndexPath.row.getter();
      uint64_t result = IndexPath.row.getter();
      if (!__OFADD__(result, 1))
      {
        BOOL v48 = v47 == result + 1;
        id v28 = v71;
        if (v48)
        {
          (*(void (**)(char *, uint64_t))(v26 + 8))(v71, v12);
          goto LABEL_27;
        }
        goto LABEL_28;
      }
    }
    __break(1u);
    goto LABEL_41;
  }
LABEL_28:
  if (v34 <= v32 && v32 <= v35)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v70, v12);

    uint64_t v49 = 2;
LABEL_36:
    uint64_t v52 = v68;
    goto LABEL_37;
  }
  if (v35 >= v32)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v70, v12);

    goto LABEL_35;
  }
  uint64_t result = IndexPath.row.getter();
  uint64_t v50 = v28;
  if (!__OFADD__(result, 1))
  {
    IndexPath.section.getter();
    char v51 = v68;
    IndexPath.init(row:section:)();

    uint64_t v52 = v51;
    uint64_t v53 = *(void (**)(char *, uint64_t))(v26 + 8);
    v53(v70, v12);
    v53(v50, v12);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v50, v51, v12);
    uint64_t v49 = 1;
    uint64_t v40 = 3;
    id v28 = v50;
LABEL_37:
    uint64_t v54 = v26;
    uint64_t v55 = (void (*)(char *, char *, uint64_t))v65;
    v65(v52, (uint64_t)v28, v12);
    uint64_t v56 = (objc_class *)type metadata accessor for DOCSidebarDropProposal(0);
    unsigned __int8 v57 = (char *)objc_allocWithZone(v56);
    v55(&v57[OBJC_IVAR____TtC5Files22DOCSidebarDropProposal_indexPath], v52, v12);
    v72.receiver = v57;
    v72.super_class = v56;
    id v44 = [super initWithDropOperation:v40 intent:v49];
    unint64_t v58 = *(void (**)(char *, uint64_t))(v54 + 8);
    v58(v52, v12);
    uint64_t v74 = 0;
    unint64_t v75 = 0xE000000000000000;
    _StringGuts.grow(_:)(53);
    v59._object = (void *)0x80000001005D9800;
    v59._uint64_t countAndFlagsBits = 0xD000000000000033;
    String.append(_:)(v59);
    v60._uint64_t countAndFlagsBits = sub_1001A9030();
    String.append(_:)(v60);
    swift_bridgeObjectRelease();
    uint64_t v61 = v74;
    id v62 = (void *)v75;
    swift_retain();
    sub_100115C0C(0x6567726154646E64, 0xEB00000000352E74, v61, v62);
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    v58(v71, v12);
    return (uint64_t)v44;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001A9030()
{
  uint64_t v1 = v0;
  _StringGuts.grow(_:)(21);
  type metadata accessor for IndexPath();
  sub_1001ABD98(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v2 = dispatch thunk of CustomStringConvertible.description.getter();
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0x28746E65746E6920;
  v3._object = (void *)0xE800000000000000;
  String.append(_:)(v3);
  id v4 = [v1 intent];
  uint64_t v5 = 1061109567;
  if (v4 == (id)2) {
    uint64_t v5 = 1330925129;
  }
  if (v4 == (id)1) {
    uint64_t v6 = 710164778;
  }
  else {
    uint64_t v6 = v5;
  }
  unint64_t v7 = 0xE400000000000000;
  String.append(_:)(*(Swift::String *)&v6);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x28706F202C29;
  v8._object = (void *)0xE600000000000000;
  String.append(_:)(v8);
  [v1 operation];
  v9._uint64_t countAndFlagsBits = 0xD000000000000014;
  v9._object = (void *)0x80000001005D53F0;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 41;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return v2;
}

uint64_t sub_1001A923C(int a1)
{
  HIDWORD(v9) = a1;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  Swift::String v10 = _swiftEmptyArrayStorage;
  sub_1001ABD98((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_1001AC13C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  *(void *)(v1 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(unsigned char *)(v1 + 24) = BYTE4(v9);
  return v1;
}

id *sub_1001A947C()
{
  uint64_t v1 = *v0;

  (*(void (**)(char *))(*(void *)(v1[10] - 8) + 8))((char *)v0 + *((void *)*v0 + 12));
  return v0;
}

uint64_t sub_1001A94FC()
{
  sub_1001A947C();

  return swift_deallocClassInstance();
}

uint64_t sub_1001A9550(uint64_t *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v20 = a4;
  id v21 = a3;
  uint64_t v22 = a2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  Swift::String v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = *a1;
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14((char *)&v19 - v11, a4, v6);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  Swift::String v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v12, v6);
  id v16 = [v21 dropItem:v13 toItemAtIndexPath:isa];

  *uint64_t v22 = v16;
  swift_unknownObjectRelease();
  uint64_t v17 = v20;
  v14(v10, v20, v6);
  uint64_t result = IndexPath.row.getter();
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    IndexPath.section.getter();
    IndexPath.init(row:section:)();
    v19(v10, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 40))(v17, v12, v6);
  }
  return result;
}

uint64_t sub_1001A9748(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

Swift::Int sub_1001A979C(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = a1;
  id v6 = a1;

  return OS_dispatch_semaphore.signal()();
}

void sub_1001A97FC()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_1007097D0 = v2;
}

void sub_1001A988C(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = a1 + 32;
    uint64_t v33 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v31 = *(void *)(a1 + 16);
    double v32 = _swiftEmptyArrayStorage;
    unint64_t v36 = a2 & 0xC000000000000001;
    unint64_t v34 = a2 >> 62;
    uint64_t v30 = a1 + 32;
    do
    {
      if (v4 <= v2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v4;
      }
      unint64_t v35 = v6;
      while (1)
      {
        if (v4 == v35) {
          goto LABEL_43;
        }
        long long v7 = *(_OWORD *)(v5 + 16 * v4);
        long long v37 = v7;
        uint64_t v8 = *(void **)(v5 + 16 * v4 + 8);
        if (v34)
        {
          id v22 = *((id *)&v7 + 1);
          id v23 = (id)v37;
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          ++v4;
          if (!v9) {
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(v33 + 16);
          id v10 = *((id *)&v7 + 1);
          id v11 = (id)v37;
          swift_bridgeObjectRetain();
          ++v4;
          if (!v9) {
            goto LABEL_39;
          }
        }
        id v12 = v36 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 32);
        uint64_t v13 = v12;
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        char v14 = static NSObject.== infix(_:_:)();

        if ((v14 & 1) == 0) {
          break;
        }

        swift_bridgeObjectRelease();
LABEL_27:

        if (v4 == v2) {
          return;
        }
      }
      if (v9 != 1)
      {
        if (v36)
        {
          uint64_t v15 = 1;
          while (1)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v16 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            char v17 = static NSObject.== infix(_:_:)();
            swift_unknownObjectRelease();
            if (v17) {
              goto LABEL_26;
            }
            ++v15;
            if (v16 == v9) {
              goto LABEL_32;
            }
          }
          __break(1u);
        }
        else
        {
          uint64_t v18 = 5;
          while (1)
          {
            uint64_t v19 = v18 - 3;
            if (__OFADD__(v18 - 4, 1)) {
              break;
            }
            id v20 = *(id *)(a2 + 8 * v18);
            char v21 = static NSObject.== infix(_:_:)();

            if (v21)
            {
LABEL_26:

              swift_bridgeObjectRelease();
              uint64_t v5 = v30;
              unint64_t v2 = v31;
              goto LABEL_27;
            }
            ++v18;
            if (v19 == v9)
            {
LABEL_32:

              swift_bridgeObjectRelease();
              uint64_t v5 = v30;
              unint64_t v2 = v31;
              goto LABEL_33;
            }
          }
        }
        __break(1u);
LABEL_43:
        __break(1u);
        return;
      }
LABEL_39:

      swift_bridgeObjectRelease();
LABEL_33:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v25 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_100190FE4(0, v32[2] + 1, 1);
        uint64_t v25 = v32;
      }
      long long v26 = v37;
      uint64_t v27 = v25;
      unint64_t v29 = v25[2];
      unint64_t v28 = v25[3];
      if (v29 >= v28 >> 1)
      {
        sub_100190FE4(v28 > 1, v29 + 1, 1);
        long long v26 = v37;
        uint64_t v27 = v32;
      }
      void v27[2] = v29 + 1;
      double v32 = v27;
      *(_OWORD *)&v27[2 * v29 + 4] = v26;
    }
    while (v4 != v2);
  }
}

uint64_t sub_1001A9B98(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v28 = v3;
    long long v7 = *(void **)(a2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    unint64_t v31 = v5 & 0xC000000000000001;
    unint64_t v30 = v5;
    uint64_t v8 = 4;
    unint64_t v29 = v7;
    while (1)
    {
      a2 = v8 - 4;
      id v10 = v31 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v8);
      id v11 = v10;
      uint64_t v3 = v8 - 3;
      if (__OFADD__(a2, 1)) {
        break;
      }
      id v12 = [v10 providerDomainID];
      uint64_t v13 = v12;
      if (v7)
      {
        id v14 = [v7 identifier];
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18) {
          int v20 = 1;
        }
        else {
          int v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        int v20 = 0;
      }
      id v21 = [v11 effectiveParentItemIdentifier:v28];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v23;
      if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
      {

        swift_bridgeObjectRelease_n();
        if ((v20 & 1) == 0)
        {
LABEL_22:
          uint64_t v26 = 0;
          goto LABEL_27;
        }
      }
      else
      {
        int v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & v20 & 1) == 0) {
          goto LABEL_22;
        }
      }
      ++v8;
      long long v7 = v29;
      unint64_t v5 = v30;
      if (v3 == v6)
      {
        uint64_t v26 = 1;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  uint64_t v26 = 1;
LABEL_27:
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1001A9E18(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v21 = v3 & 0xC000000000000001;
    unint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    uint64_t v6 = 4;
    uint64_t v19 = v5;
    unint64_t v20 = v3;
    while (1)
    {
      id v7 = v21 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v10 = [v7 providerDomainID];
      if (!v5)
      {
        swift_bridgeObjectRelease();

        return 0;
      }
      a2 = v4;
      id v11 = [v5 identifier];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;
      if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      ++v6;
      uint64_t v4 = a2;
      unint64_t v5 = v19;
      unint64_t v3 = v20;
      if (v9 == a2) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_22:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1001AA020(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v3 && *(unsigned char *)(v3 + 17)) {
    goto LABEL_40;
  }
  uint64_t v4 = sub_100482044(a1, 0);
  if (v4)
  {
    uint64_t v5 = v4;
    if (sub_100482A00())
    {
      char v6 = *(unsigned char *)(v5 + 48);
      swift_unknownObjectRelease();
      char v7 = v6 ^ 1;
      return v7 & 1;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v8 = sub_100482C08(a1, 1);
  if (v11 == 0xFF)
  {
LABEL_40:
    char v7 = 0;
    return v7 & 1;
  }
  unint64_t v12 = v8;
  uint64_t v13 = v9;
  uint64_t v14 = v10;
  unsigned __int8 v15 = v11;
  if (*(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext))
  {
    if (v11 == 3)
    {
      swift_unknownObjectRetain();
      sub_1000A9454((id)v12, v13, v14, 3u);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v11)
      {
        swift_unknownObjectRetain();
        char v17 = 0;
        goto LABEL_16;
      }
      swift_unknownObjectRetain();
      sub_1000A9454((id)v12, v13, v14, 0);
    }
    char v17 = (void *)v12;
LABEL_16:
    swift_getObjectType();
    char v18 = sub_1001A1814(v17);
    swift_unknownObjectRelease();

    char v16 = v18 ^ 1;
    goto LABEL_17;
  }
  char v16 = 1;
LABEL_17:
  switch(v15)
  {
    case 1u:
      id v19 = (id)v12;
      id v20 = [v19 identifier];
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v23 = v22;
      if (v21 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v23 == v24)
      {

        goto LABEL_35;
      }
      char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_36:
        sub_1000A7C1C((id)v12, v13, v14, 1u);
        uint64_t v32 = v12;
        uint64_t v33 = v13;
        uint64_t v34 = v14;
        unsigned __int8 v35 = 1;
        goto LABEL_39;
      }
      id v27 = [v19 identifier];
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v30 = v29;
      if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
      {

LABEL_35:
        swift_bridgeObjectRelease_n();
        goto LABEL_36;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000A7C1C((id)v12, v13, v14, 1u);
      sub_1000A7C1C((id)v12, v13, v14, 1u);
      char v7 = 0;
      if ((v37 & 1) == 0) {
LABEL_33:
      }
        char v7 = v16;
      return v7 & 1;
    case 2u:
      uint64_t v32 = v12;
      uint64_t v33 = v13;
      uint64_t v34 = v14;
      unsigned __int8 v35 = 2;
      goto LABEL_39;
    case 4u:
      uint64_t v32 = v12;
      uint64_t v33 = v13;
      uint64_t v34 = v14;
      unsigned __int8 v35 = 4;
      goto LABEL_39;
    case 5u:
      if (v14 | v13 | v12)
      {
        if (v12 != 1 || v14 | v13)
        {
LABEL_32:
          sub_1000A7C1C((id)v12, v13, v14, v15);
          goto LABEL_33;
        }
        uint64_t v32 = 1;
      }
      else
      {
        uint64_t v32 = 0;
      }
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      unsigned __int8 v35 = 5;
LABEL_39:
      sub_1000A7C1C((id)v32, v33, v34, v35);
      goto LABEL_40;
    default:
      goto LABEL_32;
  }
}

uint64_t sub_1001AA3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1001AA42C(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v42 = a3;
  id v43 = a4;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unsigned __int8 v15 = (char *)&v40 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v40 - v14, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  sub_1000CBC00((uint64_t)v15, (uint64_t)v13, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007069A0);
LABEL_16:
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007069A0);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
  char v16 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v50.receiver = a1;
  v50.super_class = v16;
  id v17 = [super collectionView];
  if (!v17) {
    goto LABEL_21;
  }
  char v18 = v17;
  type metadata accessor for DOCSidebarCollectionView();
  id v19 = (void *)swift_dynamicCastClassUnconditional();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v21 = [v19 cellForItemAtIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!v21) {
    goto LABEL_16;
  }
  type metadata accessor for DOCSidebarItemCell(0);
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {

    goto LABEL_16;
  }
  uint64_t v23 = (void *)v22;
  sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007069A0);
  [v23 bounds];
  CGFloat v24 = CGRectGetWidth(v51) * 0.5;
  [v23 bounds];
  [v42 convertPoint:v23 fromCoordinateSpace:v24];
  double v26 = v25;
  double v28 = v27;
  id v29 = [v43 items];
  sub_1000CBE70(&qword_100709890);
  unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v31) {
      goto LABEL_8;
    }
LABEL_18:

LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v31) {
    goto LABEL_18;
  }
LABEL_8:
  id v41 = v21;
  if (v31 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      if ((v30 & 0xC000000000000001) != 0)
      {
        uint64_t v33 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v33 = *(void **)(v30 + 8 * v32 + 32);
        swift_unknownObjectRetain();
      }
      ++v32;
      [v33 previewSize];
      _UIScaleTransformForAspectFitOfSizeInTargetSize();
      long long v44 = v47;
      long long v45 = v46;
      uint64_t v34 = v48;
      uint64_t v35 = v49;
      id v36 = objc_allocWithZone((Class)UIDragPreviewTarget);
      long long v46 = v45;
      long long v47 = v44;
      uint64_t v48 = v34;
      uint64_t v49 = v35;
      id v37 = [v36 initWithContainer:v42 center:&v46 transform:v26, v28];
      id v38 = [v33 dragItem];
      id v39 = [v43 dropItem:v38 toTarget:v37];
      swift_unknownObjectRelease();

      swift_unknownObjectRelease();
    }
    while (v31 != v32);

    goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
}

void sub_1001AA904(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  swift_getObjectType();
  if (sub_10049CBB8(a1))
  {
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_100073F48();
    *(void *)(v7 + 32) = 0xD000000000000018;
    *(void *)(v7 + 40) = 0x80000001005D9860;
LABEL_18:
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return;
  }
  id v8 = [a1 items];
  uint64_t v9 = sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_5;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_100073F48();
    *(void *)(v25 + 32) = 0xD000000000000018;
    *(void *)(v25 + 40) = 0x80000001005D9860;
    goto LABEL_18;
  }
LABEL_22:
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_17;
  }
LABEL_5:
  uint64_t v35 = v3;
  uint64_t v36 = v9;
  unint64_t v12 = 0;
  unint64_t v13 = v10 & 0xC000000000000001;
  unint64_t v31 = v10 + 32;
  uint64_t v32 = v10 & 0xFFFFFFFFFFFFFF8;
  uint64_t v40 = v3 + 16;
  uint64_t v14 = (void (**)(char *, uint64_t))(v3 + 8);
  unint64_t v38 = v10;
  unint64_t v33 = v10 & 0xC000000000000001;
  uint64_t v34 = v11;
  while (1)
  {
    if (v13)
    {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v12 >= *(void *)(v32 + 16))
      {
        __break(1u);
        return;
      }
      id v15 = *(id *)(v31 + 8 * v12);
    }
    id v41 = v15;
    BOOL v16 = __OFADD__(v12, 1);
    uint64_t v9 = v12 + 1;
    if (v16)
    {
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v17 = DOCAcceptableDragPasteboardTypes.getter();
    uint64_t v18 = *(void *)(v17 + 16);
    if (!v18) {
      break;
    }
    uint64_t v37 = v9;
    unint64_t v19 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v20 = *(void *)(v3 + 72);
    id v21 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    uint64_t v39 = v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      v21(v5, v19, v2);
      id v22 = [v41 itemProvider];
      DOCDragPasteboardType.typeIdentifier.getter();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v24 = [v22 hasRepresentationConformingToTypeIdentifier:v23 fileOptions:0];

      (*v14)(v5, v2);
      if (v24) {
        break;
      }
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
    }

    swift_bridgeObjectRelease_n();
    uint64_t v3 = v35;
    unint64_t v12 = v37;
    unint64_t v10 = v38;
    unint64_t v13 = v33;
    if (v37 == v34) {
      goto LABEL_17;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  double v26 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10059B760;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 64) = sub_100073F48();
  *(void *)(v27 + 32) = 0xD000000000000018;
  *(void *)(v27 + 40) = 0x80000001005D9860;
  *(void *)(v27 + 96) = v36;
  *(void *)(v27 + 104) = sub_1000C5A24(&qword_100706BF0, (unint64_t *)&unk_10070C600);
  id v28 = v41;
  *(void *)(v27 + 72) = v41;
  id v29 = v28;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
}

void sub_1001AAE28(void *a1)
{
  id v2 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_1001AA904(a1);
  }
  else
  {
    uint64_t v5 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_100073F48();
    *(void *)(v6 + 32) = 0xD00000000000001CLL;
    *(void *)(v6 + 40) = 0x80000001005D4BA0;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_1001AAFA0(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v4 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  v6._object = (void *)0x80000001005D9840;
  v6._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v6);
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_100073F48();
  *(void *)(v5 + 32) = 0x205D446E445BLL;
  *(void *)(v5 + 40) = 0xE600000000000000;
  os_log(_:dso:log:type:_:)();
  swift_release();

  swift_bridgeObjectRelease();
  type metadata accessor for DOCSidebarDropContext();
  uint64_t v7 = (void *)swift_allocObject();
  v7[3] = 0;
  type metadata accessor for DOCSidebarDropContext.DebugInfo(0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedTargetIndexPath;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)(v8 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal) = 0;
  void v7[4] = v8;
  void v7[2] = a1;
  *(void *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = v7;
  swift_unknownObjectRetain();
  swift_release();

  sub_1001A396C();
}

unsigned char *sub_1001AB1B8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a2, (uint64_t)v8, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
LABEL_8:
    id v21 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_100073F48();
    *(void *)(v22 + 32) = 0xD000000000000040;
    *(void *)(v22 + 40) = 0x80000001005D4960;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:0];
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
  swift_retain();
  uint64_t v14 = sub_1001A3C14(a1, (uint64_t)v12);
  id v15 = *(void **)(v13 + 24);
  *(void *)(v13 + 24) = v14;
  BOOL v16 = v14;

  sub_1002B72B4();
  sub_1001A396C();
  if (!v14) {
    BOOL v16 = [objc_allocWithZone((Class)UICollectionViewDropProposal) initWithDropOperation:0];
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = *(void *)(v13 + 32);
  swift_retain();
  swift_release();
  uint64_t v18 = *(void **)(v17 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal);
  *(void *)(v17 + OBJC_IVAR____TtCC5Files21DOCSidebarDropContext9DebugInfo_lastReturnedProposal) = v16;
  unint64_t v19 = v16;
  swift_release();

  return v19;
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_18dropSessionDidExitySo012UICollectionC0C_So06UIDropG0_ptF_0()
{
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
  v3._object = (void *)0x80000001005D95E0;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v3);
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_100073F48();
  *(void *)(v2 + 32) = 0x205D446E445BLL;
  *(void *)(v2 + 40) = 0xE600000000000000;
  os_log(_:dso:log:type:_:)();
  swift_release();

  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = 0;
  swift_release();

  sub_1001A396C();
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_17dropSessionDidEndySo012UICollectionC0C_So06UIDropG0_ptF_0()
{
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  if (qword_100704E20 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.info.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
  v3._object = (void *)0x80000001005D9570;
  v3._uint64_t countAndFlagsBits = 0xD000000000000026;
  String.append(_:)(v3);
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_100073F48();
  *(void *)(v2 + 32) = 0x205D446E445BLL;
  *(void *)(v2 + 40) = 0xE600000000000000;
  os_log(_:dso:log:type:_:)();
  swift_release();

  swift_bridgeObjectRelease();
  *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_activeDropContext) = 0;
  swift_release();

  sub_1001A396C();
}

uint64_t sub_1001AB7E8(uint64_t a1)
{
  uint64_t v2 = self;
  id v3 = [v2 defaultPermission];
  unsigned int v4 = [v3 hasOpenInRestrictions];

  if (!v4) {
    return 1;
  }
  uint64_t v5 = sub_100482C08(a1, 1);
  if (v8 != 0xFF)
  {
    uint64_t v9 = (void *)v5;
    uint64_t v10 = v6;
    uint64_t v11 = v7;
    unsigned __int8 v12 = v8;
    uint64_t v13 = sub_100482044(a1, 0);
    if (!v13)
    {
LABEL_6:
      uint64_t v14 = v9;
      uint64_t v15 = v10;
      uint64_t v16 = v11;
      unsigned __int8 v17 = v12;
LABEL_7:
      sub_1000A7C1C(v14, v15, v16, v17);
      return 0;
    }
    if (*(unsigned char *)(v13 + 16) != 2)
    {
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    if (v12 != 1)
    {
      sub_1000A7C1C(v9, v10, v11, v12);
LABEL_18:
      swift_unknownObjectRelease();
      return 0;
    }
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v20 = swift_dynamicCastClass();
    if (!v20 || (uint64_t v21 = v20, !*(void *)(v20 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_dropAction)))
    {
LABEL_40:
      swift_unknownObjectRelease();
      uint64_t v14 = v9;
      uint64_t v15 = v10;
      uint64_t v16 = v11;
      unsigned __int8 v17 = 1;
      goto LABEL_7;
    }
    sub_10010ED28(v9, v10, v11, 1u);
    sub_10010ED28(v9, v10, v11, 1u);
    id v37 = [v9 identifier];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
    {

      swift_bridgeObjectRelease_n();
LABEL_20:
      uint64_t v18 = 1;
LABEL_21:
      sub_1000A7C1C(v9, v10, v11, 1u);
      sub_1000A7C1C(v9, v10, v11, 1u);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v9, v10, v11, 1u);
      return v18;
    }
    char v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_20;
    }
    if (*(unsigned char *)(v21 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) == 1)
    {
      sub_1000A7C1C(v9, v10, v11, 1u);
      sub_1000A7C1C(v9, v10, v11, 1u);
      sub_10010EDB8(v9, v10, v11, 1u);
      goto LABEL_18;
    }
    uint64_t v27 = *(void **)(v21 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type);
    id v28 = *(void **)(v21 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (v28)
    {
      id v29 = v28;
      id v30 = v27;
      id v31 = [v2 defaultPermission];
      uint64_t v18 = (uint64_t)[v31 dataOwnerStateForFPDomain:v29];

      if (v18)
      {
        if (v18 != 2)
        {
          if (v18 == 1)
          {

LABEL_32:
            sub_1000A7C1C(v9, v10, v11, 1u);
            sub_1000A7C1C(v9, v10, v11, 1u);
            swift_unknownObjectRelease();
            sub_1000A7C1C(v9, v10, v11, 1u);
            return 2;
          }
          type metadata accessor for DOCDataOwnerState(0);
          uint64_t v39 = v35;
          v38[0] = v18;
          doc_warnUnrecognizedEnumValueEncountered(_:)();
          sub_10009B1B8((uint64_t)v38);

          goto LABEL_39;
        }

        goto LABEL_36;
      }
    }
    else
    {
      id v32 = v27;
      id v33 = [v2 defaultPermission];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v18 = (uint64_t)[v33 dataOwnerStateForBundleIdentifier:v34];

      if (v18)
      {
        if (v18 != 2)
        {
          if (v18 == 1) {
            goto LABEL_32;
          }
          type metadata accessor for DOCDataOwnerState(0);
          uint64_t v39 = v36;
          v38[0] = v18;
          doc_warnUnrecognizedEnumValueEncountered(_:)();
          sub_10009B1B8((uint64_t)v38);
LABEL_39:

          sub_1000A7C1C(v9, v10, v11, 1u);
          sub_1000A7C1C(v9, v10, v11, 1u);
          goto LABEL_40;
        }
LABEL_36:

        goto LABEL_20;
      }
    }

    goto LABEL_21;
  }
  return 0;
}

uint64_t sub_1001ABCDC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCAtomicValue()
{
  return sub_1000D21B0();
}

uint64_t sub_1001ABD98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001ABDE0()
{
  return _swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_1001ABE1C(void *a1, uint64_t a2)
{
  return sub_1001A979C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1001ABE24()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1001ABF14(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1001A684C(a1, v6, v1 + v4, v7, v8);
}

id sub_1001ABFC0()
{
  return sub_100284134(0xD00000000000001CLL, 0x80000001005D9930, 0);
}

id sub_1001AC004(uint64_t a1)
{
  return sub_1001A7134(a1, *(void *)(v1 + 16));
}

uint64_t sub_1001AC00C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  *a1 = *(unsigned char *)(v1 + 24);
  return result;
}

uint64_t sub_1001AC058()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001AC090()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32) + 24;
  swift_beginAccess();
  v1(v2);
  return swift_endAccess();
}

uint64_t sub_1001AC0F4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001AC104()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1001AC13C()
{
  unint64_t result = qword_1007054D0;
  if (!qword_1007054D0)
  {
    sub_100074618((uint64_t *)&unk_100709900);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007054D0);
  }
  return result;
}

uint64_t sub_1001AC19C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AC00C(a1);
}

id sub_1001AC23C(unint64_t a1)
{
  id v3 = [v1 viewControllers];
  sub_100073F08();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  Class isa = Array._bridgeToObjectiveC()().super.isa;
  v30.receiver = v1;
  v30.super_class = (Class)type metadata accessor for DOCFullDocumentManagerNavigationController();
  [super setViewControllers:isa];

  if (v4 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
LABEL_38:
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease_n();
  }
  uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_38;
  }
LABEL_3:
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = 0;
  unint64_t v9 = v4 & 0xC000000000000001;
  unint64_t v10 = v4 + 32;
  unint64_t v28 = v4 & 0xC000000000000001;
  while (1)
  {
    while (1)
    {
      if (v9) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v10 + 8 * v8);
      }
      id v12 = v11;
      if (__OFADD__(v8++, 1)) {
        goto LABEL_36;
      }
      if (v7) {
        break;
      }
LABEL_21:
      uint64_t v16 = (void *)UIViewController.associatedObjectStorage.getter();
      swift_getKeyPath();
      dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
      swift_release();

      if (v29 == 2 || (v29 & 1) == 0) {
        goto LABEL_6;
      }
      unsigned __int8 v17 = (void *)UIViewController.associatedObjectStorage.getter();
      swift_getKeyPath();
      char v29 = 0;
      dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();

      id result = [v12 view];
      if (!result) {
        goto LABEL_41;
      }
      unint64_t v19 = result;
      uint64_t v20 = (void *)UIViewController.associatedObjectStorage.getter();
      swift_getKeyPath();
      dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
      swift_release();

      [v19 setHidden:0];
      unint64_t v9 = v28;
      if (v8 == v6) {
        goto LABEL_38;
      }
    }
    if ((a1 & 0xC000000000000001) != 0) {
      break;
    }
    if (*(id *)(a1 + 32) != v11)
    {
      swift_bridgeObjectRetain();
      if (v7 != 1)
      {
        uint64_t v14 = 5;
        while (1)
        {
          uint64_t v15 = v14 - 3;
          if (__OFADD__(v14 - 4, 1)) {
            break;
          }
          if (*(id *)(a1 + 8 * v14) == v12) {
            goto LABEL_33;
          }
          ++v14;
          if (v15 == v7) {
            goto LABEL_20;
          }
        }
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
LABEL_6:

LABEL_7:
    if (v8 == v6) {
      goto LABEL_38;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_unknownObjectRelease();
  if ((id)v21 == v12)
  {
LABEL_33:

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v7 == 1) {
    goto LABEL_20;
  }
  uint64_t v22 = v6;
  unint64_t v23 = v4;
  unint64_t v24 = v10;
  uint64_t v25 = 1;
  while (1)
  {
    id result = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    uint64_t v26 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    id v27 = result;
    swift_unknownObjectRelease();
    if (v27 == v12)
    {

      swift_bridgeObjectRelease();
      unint64_t v10 = v24;
      unint64_t v4 = v23;
      uint64_t v6 = v22;
      unint64_t v9 = v28;
      goto LABEL_7;
    }
    ++v25;
    if (v26 == v7)
    {
      swift_bridgeObjectRelease();
      unint64_t v10 = v24;
      unint64_t v4 = v23;
      uint64_t v6 = v22;
      unint64_t v9 = v28;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1001AC64C(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled;
  v1[OBJC_IVAR____TtC5Files42DOCFullDocumentManagerNavigationController_chromelessAppearanceDisabled] = a1;
  id v3 = [v1 navigationBar];
  type metadata accessor for DOCNavigationBar();
  uint64_t v4 = swift_dynamicCastClassUnconditional();
  LODWORD(v2) = v1[v2];
  unint64_t v5 = (unsigned char *)(v4 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess();
  id v6 = 0;
  *unint64_t v5 = v2;
  if (v2 == 1) {
    id v6 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  }
  sub_100064AD8(v6);
}

void sub_1001AC88C()
{
}

id sub_1001AC89C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFullDocumentManagerNavigationController();
  return [super dealloc];
}

unint64_t sub_1001AC8EC()
{
  unint64_t result = qword_100709A88;
  if (!qword_100709A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709A88);
  }
  return result;
}

unint64_t sub_1001AC944()
{
  unint64_t result = qword_100709A90;
  if (!qword_100709A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709A90);
  }
  return result;
}

uint64_t sub_1001AC998()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1001AC9CC()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_1001AC9E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = type metadata accessor for DOCFileEntity();
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      id v7 = *(id *)(v5 + *(int *)(v4 + 32));
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += v6;
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1001ACB04()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1001ACB28()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001ACB4C()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1001ACB80()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1001ACBA4()
{
  uint64_t v0 = sub_1000CBE70(&qword_100709AF8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100709B00);
  __chkstk_darwin(v1);
  sub_1001ADC98();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005D9CC0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000020;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100709B08);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100709B10);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t sub_1001ACDA0()
{
  swift_getKeyPath();
  sub_1001ADC98();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A04F0;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1001ACE68()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_100736EA8);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_100736EA8);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_1001ACEF0()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for IntentDialog();
  sub_10001AF94(v7, qword_100709A70);
  sub_10009D098(v7, (uint64_t)qword_100709A70);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  return IntentDialog.init(_:)();
}

uint64_t sub_1001AD12C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  sub_1000CBE70(&qword_1007075E0);
  v4[10] = swift_task_alloc();
  v4[11] = type metadata accessor for DOCFileEntity();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return _swift_task_switch(sub_1001AD27C, 0, 0);
}

uint64_t sub_1001AD27C()
{
  static Logger.AppIntents.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    Swift::String v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[MoveFilesIntent] Performing MoveFilesIntent", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);

  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  IntentParameter.wrappedValue.getter();
  uint64_t v8 = *(void *)(*(void *)(v0 + 16) + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v10 = *(void *)(v0 + 88);
    IntentParameter.wrappedValue.getter();
    id v11 = sub_1001AC9E8(*(void *)(v0 + 24));
    *(void *)(v0 + 152) = v11;
    swift_bridgeObjectRelease();
    id v12 = [self defaultManager];
    *(void *)(v0 + 160) = v12;
    IntentParameter.wrappedValue.getter();
    uint64_t v13 = *(void **)(v9 + *(int *)(v10 + 32));
    *(void *)(v0 + 168) = v13;
    id v14 = v13;
    sub_100117404(v9);
    IntentParameter.wrappedValue.getter();
    char v15 = *(unsigned char *)(v0 + 200);
    uint64_t v16 = swift_task_alloc();
    *(void *)(v0 + 176) = v16;
    *(void *)(v16 + 16) = v12;
    *(void *)(v16 + 24) = v11;
    *(void *)(v16 + 32) = v14;
    *(unsigned char *)(v16 + 40) = (v15 & 1) == 0;
    unsigned __int8 v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v17;
    *unsigned __int8 v17 = v0;
    v17[1] = sub_1001AD6D0;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v17, 0, 0, 0xD000000000000024, 0x80000001005D9C90, sub_1001AE93C, v16, (char *)&type metadata for () + 8);
  }
  else
  {
    static Logger.AppIntents.getter();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "[MoveFilesIntent] Asked for values", v20, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 80);

    v7(v21, v22);
    IntentParameter.projectedValue.getter();
    uint64_t v24 = type metadata accessor for IntentDialog();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    type metadata accessor for AppIntentError();
    sub_1001AE9A0(&qword_100709AF0, (void (*)(uint64_t))&type metadata accessor for AppIntentError);
    swift_allocError();
    IntentParameter.needsValueError(_:)();
    swift_release();
    sub_1001AE9E8(v23);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_1001AD6D0()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_1001AD960;
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v2 = sub_1001AD7EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001AD7EC()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 96);

  swift_bridgeObjectRelease();
  IntentParameter.wrappedValue.getter();
  IntentParameter.wrappedValue.getter();
  *(void *)(v0 + 40) = sub_10040EA48(v3);
  sub_1001AE9A0((unint64_t *)&qword_10070C070, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  sub_1001AE94C();
  static IntentResult.result<A, B>(value:opensIntent:)();
  swift_release();
  sub_100117404(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1001AD960()
{
  uint64_t v1 = *(void **)(v0 + 160);

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1001ADA28(uint64_t a1)
{
  unint64_t v2 = sub_1001AEACC();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_1001ADA74@<X0>(uint64_t a1@<X8>)
{
  if (qword_100704EF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for IntentAuthenticationPolicy();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_100736EA8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1001ADB20(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000CB70;
  return sub_1001AD12C(a1, v4, v5, v6);
}

uint64_t sub_1001ADBD4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1001ADF10();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1001ADC00(uint64_t a1)
{
  unint64_t v2 = sub_1001ADC98();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_1001ADC40()
{
  unint64_t result = qword_100709AA0;
  if (!qword_100709AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709AA0);
  }
  return result;
}

unint64_t sub_1001ADC98()
{
  unint64_t result = qword_100709AA8;
  if (!qword_100709AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709AA8);
  }
  return result;
}

uint64_t destroy for MoveFilesIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s5Files15MoveFilesIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for MoveFilesIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for MoveFilesIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for MoveFilesIntent()
{
  return &type metadata for MoveFilesIntent;
}

uint64_t sub_1001ADE5C()
{
  return sub_100073DF0(&qword_100709AB0, &qword_100709AB8);
}

uint64_t sub_1001ADE98()
{
  return sub_100073DF0(&qword_100709AC0, &qword_10071D260);
}

uint64_t sub_1001ADED4()
{
  return sub_100073DF0(&qword_100709AC8, &qword_10071D260);
}

uint64_t sub_1001ADF10()
{
  uint64_t v0 = sub_1000CBE70(&qword_100709AD0);
  __chkstk_darwin(v0 - 8);
  Swift::String v59 = (char *)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  unint64_t v58 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v53 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v11 - 8);
  id v65 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for InputConnectionBehavior();
  uint64_t v70 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v69 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70(&qword_1007075E0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  CGRect v52 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  os_log_type_t v19 = (char *)&v45 - v18;
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1000CBE70(&qword_1007075E8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v67 = v9 + 56;
  uint64_t v68 = v22;
  uint64_t v64 = v8;
  id v66 = v23;
  v23(v22, 1, 1, v8);
  uint64_t v71 = 0;
  uint64_t v24 = sub_1000CBE70((uint64_t *)&unk_10070C030);
  uint64_t v25 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UTType() - 8) + 80);
  uint64_t v49 = v24;
  uint64_t v50 = v25 | 7;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  if (qword_100704EF8 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for IntentDialog();
  uint64_t v27 = sub_10009D098(v26, (uint64_t)qword_100709A70);
  uint64_t v28 = *(void *)(v26 - 8);
  char v29 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v19, v27, v26);
  objc_super v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  Swift::String v60 = v30;
  v30(v19, 0, 1, v26);
  id v31 = v52;
  v30(v52, 1, 1, v26);
  unsigned int v62 = enum case for InputConnectionBehavior.default(_:);
  id v32 = *(void (**)(void))(v70 + 104);
  v70 += 104;
  uint64_t v63 = (void (*)(char *, void, uint64_t))v32;
  uint64_t v61 = v13;
  v32(v69);
  uint64_t v46 = sub_1001AE9A0(&qword_1007075F0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  id v33 = v68;
  uint64_t v51 = IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v47 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  v66(v33, 1, 1, v64);
  uint64_t v34 = type metadata accessor for DOCFileEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v65, 1, 1, v34);
  uint64_t v35 = swift_allocObject();
  long long v45 = xmmword_1005A0030;
  *(_OWORD *)(v35 + 16) = xmmword_1005A0030;
  static UTType.folder.getter();
  uint64_t v48 = v29;
  uint64_t v36 = v60;
  v60(v29, 1, 1, v26);
  v36(v31, 1, 1, v26);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v45;
  static UTType.folder.getter();
  type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject();
  uint64_t v71 = sub_100308720(v37, 1);
  uint64_t v72 = 0;
  v63(v69, v62, v61);
  sub_100142D4C();
  id v65 = (char *)IntentParameter<>.init<A>(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  CGRect v52 = (char *)sub_1000CBE70(&qword_100709AD8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v38 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v39 = v57;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 104);
  id v41 = v58;
  v40(v58, enum case for LocalizedStringResource.BundleDescription.main(_:), v57);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v40(v41, v38, v39);
  id v42 = v68;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v66(v42, 0, 1, v64);
  LOBYTE(v71) = 0;
  uint64_t v43 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v59, 1, 1, v43);
  v60(v48, 1, 1, v26);
  v63(v69, v62, v61);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v51;
}

uint64_t sub_1001AE93C(uint64_t a1)
{
  return sub_10053ECCC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned char *)(v1 + 40));
}

unint64_t sub_1001AE94C()
{
  unint64_t result = qword_100709AE8;
  if (!qword_100709AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709AE8);
  }
  return result;
}

uint64_t sub_1001AE9A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AE9E8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001AEA48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001AEA74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001AEAA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1001AEACC()
{
  unint64_t result = qword_100709B18;
  if (!qword_100709B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100709B18);
  }
  return result;
}

uint64_t DOCAppearStateTracker.deinit()
{
  return v0;
}

uint64_t type metadata accessor for DOCTestingPolicies()
{
  return self;
}

uint64_t DOCOffsetAdjustmentBehaviors.deinit()
{
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t DOCOffsetAdjustmentBehaviors.__deallocating_deinit()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCOffsetAdjustmentBehaviors()
{
  return self;
}

double sub_1001AEBC8()
{
  double result = 40.0;
  __asm { FMOV            V1.2D, #20.0 }
  xmmword_100709CB0 = xmmword_1005A2900;
  *(_OWORD *)&qword_100709CC0 = _Q1;
  return result;
}

id sub_1001AEBE4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel);
  }
  else
  {
    id v4 = sub_1001AEC44();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001AEC44()
{
  id v1 = [objc_allocWithZone((Class)UILabel) init];
  id v2 = [self secondaryLabelColor];
  [v1 setTextColor:v2];

  id v3 = self;
  id v4 = [v0 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v1 setFont:v5];
  [v1 setAdjustsFontForContentSizeCategory:1];
  [v1 setNumberOfLines:0];
  LODWORD(v6) = 1148846080;
  [v1 setContentCompressionResistancePriority:1 forAxis:v6];
  return v1;
}

uint64_t sub_1001AED80(uint64_t result)
{
  if (result)
  {
    id v2 = (void *)result;
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode);
    swift_unknownObjectRetain();
    if ([v2 isFolder])
    {
      return swift_unknownObjectRelease();
    }
    else
    {
      if (v3)
      {
        id v6 = [v3 description];
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v4 = v7;
      }
      else
      {
        unint64_t v4 = 0xE300000000000000;
        uint64_t v5 = 7104878;
      }
      id v8 = [v2 description];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      uint64_t v12 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10059B760;
      *(void *)(v13 + 56) = &type metadata for String;
      unint64_t v14 = sub_100073F48();
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v11;
      *(void *)(v13 + 96) = &type metadata for String;
      *(void *)(v13 + 104) = v14;
      *(void *)(v13 + 64) = v14;
      *(void *)(v13 + 72) = v5;
      *(void *)(v13 + 80) = v4;
      os_log(_:dso:log:type:_:)();
      swift_unknownObjectRelease();

      double result = swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  return result;
}

id sub_1001AEF1C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
  swift_unknownObjectRetain();
  sub_1000CBE70(&qword_100717520);
  char v5 = Optional.isEqualTo(node:)();
  swift_unknownObjectRelease();
  if ((v5 & 1) == 0) {
    return (id)sub_1001AEFEC();
  }
  id result = *(id *)(v2 + v4);
  if (!result)
  {
    if (!a1) {
      return result;
    }
    [a1 isWritable];
    return (id)sub_1001AEFEC();
  }
  unsigned int v7 = [result isWritable];
  if (!a1) {
    return (id)sub_1001AEFEC();
  }
  unsigned int v8 = v7;
  id result = [a1 isWritable];
  if (result != v8) {
    return (id)sub_1001AEFEC();
  }
  return result;
}

uint64_t sub_1001AEFEC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
  sub_1001AF2D4();
  sub_1001AFC20();
  sub_1001B0194();
  uint64_t v4 = v3;
  id v5 = sub_1001AEBE4();
  [v5 setHidden:v4 == 0];

  id v6 = sub_1001AEBE4();
  [v6 setAttributedText:v4];

  sub_1001AFDAC();
  uint64_t v7 = *(void *)(v0 + v1);
  uint64_t v8 = v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v10 + 8))((v2 != 0) ^ (v7 != 0), ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001AF0FC()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) & 1) == 0)
  {
    uint64_t v1 = v0;
    uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
    if (v2)
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) = 1;
      *(void *)(*(void *)&v2[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel] + 24) = &off_1006B0DB0;
      swift_unknownObjectWeakAssign();
      id v3 = v2;
      swift_retain();
      sub_100111C30();
      swift_release();
      *(void *)&v3[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate + 8] = &off_100695390;
      swift_unknownObjectWeakAssign();
    }
  }
}

id sub_1001AF1E8()
{
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (Strong[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
    {
    }
    else
    {
      id v3 = *(id *)&Strong[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
      unsigned __int8 v4 = [v3 doc_displaysSearchResults];

      if (v4) {
        return 0;
      }
    }
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode) != 2
    || (id result = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode)) != 0
    && (id result = [result isRootItem], result))
  {
    id result = *(id *)(*(void *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration)
                   + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
    if (result) {
      return [result isSyncStateMessagingSupported];
    }
  }
  return result;
}

void sub_1001AF2D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel);
    if (v7)
    {
      id v8 = v7;
      sub_1001AFF9C();
      if (v9)
      {
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v10 = 0;
      }
      [v8 setText:v10];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1001AF454()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate);
  swift_unknownObjectWeakDestroy();
  sub_1000A4D20(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration);

  sub_10003A094(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate);
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
}

id sub_1001AF504()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] == 1)
  {
    uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView];
    if (v2)
    {
      v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] = 0;
      uint64_t v3 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
      uint64_t v4 = v2;
      swift_retain();
      sub_1001123B4();
      swift_release();
      *(void *)(*(void *)&v2[v3] + 24) = 0;
      swift_unknownObjectWeakAssign();
      *(void *)&v4[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate + 8] = 0;
      swift_unknownObjectWeakAssign();
    }
  }
  v6.receiver = v0;
  v6.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_1001AF6C4()
{
  return type metadata accessor for DOCStatusFooterView();
}

uint64_t type metadata accessor for DOCStatusFooterView()
{
  uint64_t result = qword_100709D38;
  if (!qword_100709D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001AF718()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) & 1) == 0)
    {
      uint64_t v2 = *(char **)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView);
      if (v2)
      {
        *(unsigned char *)(Strong + OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates) = 1;
        *(void *)(*(void *)&v2[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel] + 24) = &off_1006B0DB0;
        swift_unknownObjectWeakAssign();
        uint64_t v3 = v2;
        swift_retain();
        sub_100111C30();
        swift_release();
        *(void *)&v3[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate + 8] = &off_100695390;
        swift_unknownObjectWeakAssign();

        uint64_t v1 = v3;
      }
    }
  }
}

void sub_1001AF868()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  [super didMoveToWindow];
  id v1 = [v0 window];

  if (v1)
  {
    sub_1001AF968();
    sub_1001B0194();
    uint64_t v3 = v2;
    id v4 = sub_1001AEBE4();
    [v4 setHidden:v3 == 0];

    id v5 = sub_1001AEBE4();
    [v5 setAttributedText:v3];
  }
}

void sub_1001AF968()
{
  id v1 = v0;
  id v2 = [v0 traitCollection];
  BOOL v3 = sub_1000951EC(16);

  if (v3)
  {
    sub_1000CBE70(&qword_100709D58);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    *(void *)(inited + 32) = UIFontDescriptorTextStyleAttribute;
    type metadata accessor for TextStyle(0);
    *(void *)(inited + 40) = UIFontTextStyleSubheadline;
    *(void *)(inited + 64) = v5;
    *(void *)(inited + 72) = UIFontDescriptorTraitsAttribute;
    sub_1000CBE70(&qword_100709D60);
    uint64_t v6 = swift_initStackObject();
    *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
    *(void *)(v6 + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(v6 + 40) = UIFontWeightBold;
    uint64_t v7 = UIFontDescriptorTextStyleAttribute;
    id v8 = UIFontTextStyleSubheadline;
    uint64_t v9 = UIFontDescriptorTraitsAttribute;
    NSString v10 = UIFontWeightTrait;
    unint64_t v11 = sub_100493E54(v6);
    *(void *)(inited + 104) = sub_1000CBE70((uint64_t *)&unk_10070C650);
    *(void *)(inited + 80) = v11;
    sub_100493F60(inited);
    id v12 = objc_allocWithZone((Class)UIFontDescriptor);
    type metadata accessor for AttributeName(0);
    sub_1001B0D18();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithFontAttributes:isa];

    uint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel];
    if (v15)
    {
      uint64_t v16 = self;
      id v17 = v15;
      id v18 = v14;
      id v19 = [v1 traitCollection];
      id v20 = [v16 preferredFontForTextStyle:v8 compatibleWithTraitCollection:v19];

      [v20 pointSize];
      double v22 = v21;

      id v23 = [v16 fontWithDescriptor:v18 size:v22];
      [v17 setFont:v23];
    }
  }
}

uint64_t sub_1001AFBFC()
{
  return sub_1001AEFEC();
}

void sub_1001AFC20()
{
  id v1 = v0;
  unsigned __int8 v2 = sub_1001AF1E8();
  uint64_t v3 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView];
  if (v2)
  {
    if (!v4)
    {
      uint64_t v7 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration]
                    + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      if (v7)
      {
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        type metadata accessor for DOCFileProviderSyncStateFooterViewModel(0);
        swift_allocObject();
        id v9 = v7;
        sub_100113FE0(v9);

        id v10 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSyncStateFooterView());
        uint64_t v11 = swift_retain();
        id v12 = sub_1004B9B8C(v11);
        uint64_t v13 = *(void **)&v0[v3];
        *(void *)&v1[v3] = v12;
        id v14 = v12;

        sub_1001AFDAC();
        swift_release();
      }
    }
  }
  else
  {
    if (v4 && (objc_msgSend(v0, "removeArrangedSubview:"), (uint64_t v5 = *(void **)&v0[v3]) != 0))
    {
      [v5 removeFromSuperview];
      uint64_t v6 = *(void **)&v0[v3];
    }
    else
    {
      uint64_t v6 = 0;
    }
    *(void *)&v0[v3] = 0;

    sub_1001AFDAC();
  }
}

void sub_1001AFDAC()
{
  id v1 = [v0 arrangedSubviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_10;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v2 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v6 = v5;
    ++v4;
    [v0 removeArrangedSubview:v5];
    [v6 removeFromSuperview];
  }
  while (v3 != v4);
LABEL_10:
  swift_bridgeObjectRelease_n();
  if (*(void *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel]) {
    [v0 addArrangedSubview:];
  }
  uint64_t v7 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView]) {
    [v0 addArrangedSubview:];
  }
  id v8 = sub_1001AEBE4();
  [v0 addArrangedSubview:v8];

  id v9 = sub_1001AEBE4();
  unsigned int v10 = [v9 isHidden];

  if (v10 && *(void *)&v0[v7])
  {
    [v0 setCustomSpacing:11.0 afterView:];
  }
}

uint64_t sub_1001AFF9C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  unint64_t v2 = (void *)Strong;
  unint64_t v3 = sub_10007CC5C(Strong);
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v5._object = (void *)0x80000001005D9F30;
  v6._uint64_t countAndFlagsBits = 0x54492E544349442ELL;
  v6._object = (void *)0xEE0064252E534D45;
  v5._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  DOCLocalizedDictionaryString(_:comment:)(v6, v5);
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  *(void *)(v7 + 56) = &type metadata for Int;
  *(void *)(v7 + 64) = &protocol witness table for Int;
  *(void *)(v7 + 32) = v4;
  uint64_t v8 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration;
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration + 24);
  if (v10)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    id v11 = [self recentDocumentsLocation];
    LOBYTE(v10) = static NSObject.== infix(_:_:)();
  }
  unsigned __int8 v12 = [v2 isGathering];

  if ((v12 & 1) != 0 || *(unsigned char *)(v9 + 16) != 2 || (v10 & 1) != 0 || v4 <= 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v8;
}

void sub_1001B0194()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode);
  if (v1 && ([v1 isWritable] & 1) == 0)
  {
    id v2 = (id)_DocumentManagerBundle();
    if (v2)
    {
      unint64_t v3 = v2;
      v10._object = (void *)0x80000001005D9ED0;
      v4._uint64_t countAndFlagsBits = 0x6C6E4F2D64616552;
      v4._object = (void *)0xE900000000000079;
      v5._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v5._object = (void *)0xEB00000000656C62;
      v6._uint64_t countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      v10._uint64_t countAndFlagsBits = 0xD000000000000054;
      Swift::String v7 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v10);

      id v8 = sub_1001AEBE4();
      id v9 = [v8 font];

      if (v9)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
        sub_1004B0778(v7._countAndFlagsBits, (uint64_t)v7._object, 0x732E6C69636E6570, 0xEC0000006873616CLL, v9, 0, 1);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1001B031C()
{
  uint64_t result = type metadata accessor for DOCItemCollectionConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1001B05F4()
{
  sub_1001AF968();
  sub_1001B0194();
  unint64_t v1 = v0;
  id v2 = sub_1001AEBE4();
  [v2 setHidden:v1 == 0];

  id v3 = sub_1001AEBE4();
  [v3 setAttributedText:v1];
}

id sub_1001B0680(void *a1)
{
  id v2 = [a1 enclosingDocumentLandingMode];
  double v3 = 1.0;
  if (v2 == (id)1) {
    double v3 = 0.0;
  }

  return [a1 setAlpha:v3];
}

char *sub_1001B06D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = sub_1000CBE70(&qword_100708758);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView____lazy_storage___folderInformationLabel] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_gestureDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode] = 0;
  v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_isListeningToProviderSyncStateUpdates] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_syncStateFooterView] = 0;
  *(void *)&v3[v10] = a1;
  id v11 = v3;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakAssign();
  sub_1000B230C(a3, (uint64_t)&v11[OBJC_IVAR____TtC5Files19DOCStatusFooterView_itemCollectionConfiguration]);

  v32.receiver = v11;
  v32.super_class = ObjectType;
  unsigned __int8 v12 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v12 setAxis:1];
  [v12 setAlignment:3];
  [v12 setSpacing:7.0];
  uint64_t v13 = *(void *)&v12[OBJC_IVAR____TtC5Files19DOCStatusFooterView_displayMode];
  uint64_t v14 = qword_100704F00;
  uint64_t v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  double v16 = *(double *)&xmmword_100709CB0;
  if (!v13) {
    double v16 = 0.0;
  }
  [v15 setDirectionalLayoutMargins:v16, *((double *)&xmmword_100709CB0 + 1), *(double *)&qword_100709CC0, *(double *)&qword_100709CC8];

  [v15 setLayoutMarginsRelativeArrangement:1];
  id v17 = [objc_allocWithZone((Class)UILabel) init];
  [v17 setNumberOfLines:0];
  LODWORD(v18) = 1148846080;
  [v17 setContentCompressionResistancePriority:1 forAxis:v18];
  id v19 = *(void **)&v15[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel];
  *(void *)&v15[OBJC_IVAR____TtC5Files19DOCStatusFooterView_quotaLabel] = v17;

  sub_1001AF968();
  sub_1001B0194();
  double v21 = v20;
  id v22 = sub_1001AEBE4();
  [v22 setHidden:v21 == 0];

  id v23 = sub_1001AEBE4();
  [v23 setAttributedText:v21];

  sub_1001AEFEC();
  id v24 = [objc_allocWithZone((Class)UIContextMenuInteraction) initWithDelegate:v15];
  [v15 addInteraction:v24];

  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
  *(void *)(v25 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v25 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  uint64_t v26 = v15;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  id v27 = [v26 enclosingDocumentLandingMode];
  double v28 = 1.0;
  if (v27 == (id)1) {
    double v28 = 0.0;
  }
  [v26 setAlpha:v28];
  uint64_t v29 = type metadata accessor for DOCTraitChangeObservingOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
  objc_super v30 = v26;
  UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)();
  swift_unknownObjectRelease();

  sub_1000A4D20(a3);
  sub_1000C7158((uint64_t)v9);
  return v30;
}

char *sub_1001B0B60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DOCItemCollectionConfiguration();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && ([a1 isFolder] & 1) == 0)
  {
    id v11 = [a1 description];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    uint64_t v15 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.fault.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100073F48();
    *(void *)(v16 + 32) = v12;
    *(void *)(v16 + 40) = v14;
    os_log(_:dso:log:type:_:)();
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    sub_1000A4D20(a3);
    return 0;
  }
  else
  {
    sub_1000B230C(a3, (uint64_t)v8);
    id v9 = objc_allocWithZone((Class)type metadata accessor for DOCStatusFooterView());
    uint64_t v10 = sub_1001B06D8((uint64_t)a1, (uint64_t)a2, (uint64_t)v8);
    swift_unknownObjectRelease();

    sub_1000A4D20(a3);
  }
  return v10;
}

unint64_t sub_1001B0D18()
{
  unint64_t result = qword_1007061C0;
  if (!qword_1007061C0)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007061C0);
  }
  return result;
}

uint64_t sub_1001B0D70(void *a1, void *a2)
{
  if (!a1) {
    return 1;
  }
  if ([a1 isFolder]) {
    return 1;
  }
  if (a2)
  {
    id v5 = [a2 description];
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    unint64_t v8 = 0xE300000000000000;
    uint64_t v6 = 7104878;
  }
  id v9 = [a1 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v13 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.fault.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10059B760;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v15 = sub_100073F48();
  *(void *)(v14 + 32) = v10;
  *(void *)(v14 + 40) = v12;
  *(void *)(v14 + 96) = &type metadata for String;
  *(void *)(v14 + 104) = v15;
  *(void *)(v14 + 64) = v15;
  *(void *)(v14 + 72) = v6;
  *(void *)(v14 + 80) = v8;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  return 0;
}

void sub_1001B0ECC()
{
  id v0 = [self shared];
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3[4] = sub_1001B11D0;
  v3[5] = v1;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_1000666D8;
  v3[3] = &unk_1006953C8;
  id v2 = _Block_copy(v3);
  swift_release();
  [v0 performAfterLaunch:v2];
  _Block_release(v2);
}

void sub_1001B0FCC(void *a1)
{
  [a1 locationInView:v1];
  uint64_t v4 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview;
  id v5 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCStatusFooterView_emptyTargetedPreview];
  if (v5)
  {
    [v5 setFrame:v2, v3, 0.0, 0.0];
    if (!*(void *)&v1[v4])
    {
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  else
  {
    id v6 = [objc_allocWithZone((Class)UIView) initWithFrame:v2, v3, 0.0, 0.0];
    unint64_t v7 = *(void **)&v1[v4];
    *(void *)&v1[v4] = v6;

    unint64_t v8 = *(void **)&v1[v4];
    if (!v8) {
      goto LABEL_8;
    }
    id v9 = self;
    id v10 = v8;
    id v11 = [v9 clearColor];
    [v10 setBackgroundColor:v11];

    if (!*(void *)&v1[v4]) {
      goto LABEL_8;
    }
  }
  [v1 addSubview:];
  id v12 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  id v13 = [self clearColor];
  [v12 setBackgroundColor:v13];

  uint64_t v14 = *(void **)&v1[v4];
  if (v14)
  {
    id v15 = objc_allocWithZone((Class)UITargetedPreview);
    id v16 = v14;
    [v15 initWithView:v16 parameters:v12];

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1001B1198()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1001B11D0()
{
}

uint64_t sub_1001B11D8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100709FC8);
  uint64_t v3 = __chkstk_darwin(v2);
  id v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v25 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v25 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v25 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v17);
    uint64_t v18 = *(void *)(a1 + 56);
    id v19 = (int *)(type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo() - 8);
    sub_1001B3654(v18 + *(void *)(*(void *)v19 + 72) * v15, (uint64_t)&v7[*(int *)(v2 + 48)], (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    uint64_t v20 = sub_1001B36BC((uint64_t)v7, (uint64_t)v5);
    (*(void (**)(uint64_t))&v5[*(int *)(v2 + 48) + v19[7]])(v20);
    uint64_t result = sub_1000CBBA4((uint64_t)v5, &qword_100709FC8);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v26) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_1001B14A4()
{
  type metadata accessor for DOCSharedTestableProgressOperationProvider();
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = _swiftEmptyArrayStorage;
  v0[3] = &_swiftEmptyDictionarySingleton;
  v0[4] = _swiftEmptyArrayStorage;
  if (qword_100704F10 != -1) {
    swift_once();
  }
  id result = [(id)qword_100709D68 enabled];
  if (result) {
    id result = (id)sub_1001B1540();
  }
  qword_100736ED8 = (uint64_t)v0;
  return result;
}

uint64_t sub_1001B1540()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v29 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = self;
    uint64_t v9 = v6 + 32;
    swift_bridgeObjectRetain_n();
    do
    {
      sub_10009B208(v9, (uint64_t)v30);
      sub_1000A6B78(v30, v30[3]);
      [v8 removeSubscriber:_bridgeAnythingToObjectiveC<A>(_:)()];
      swift_unknownObjectRelease();
      sub_10009B1B8((uint64_t)v30);
      v9 += 32;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
  }
  *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1002FCDFC();
  uint64_t v11 = v10[2];
  v24[1] = v10;
  if (v11)
  {
    uint64_t v12 = (uint64_t)v29;
    uint64_t v13 = v28 + 16;
    uint64_t v14 = *(void *)(v28 + 16);
    unint64_t v15 = (char *)v10 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    uint64_t v16 = *(void *)(v28 + 72);
    uint64_t v17 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    id v27 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    uint64_t v28 = v14;
    uint64_t v25 = (void (**)(uint64_t, char *, uint64_t))(v13 + 16);
    uint64_t v26 = v16;
    uint64_t v18 = (void (**)(uint64_t, uint64_t))(v13 - 8);
    v24[0] = (v13 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    id v19 = v5;
    while (1)
    {
      uint64_t v20 = v13;
      ((void (*)(char *, char *, uint64_t))v28)(v19, v15, v1);
      int64_t v21 = *v17;
      (*v17)(v19, 0, 1, v1);
      if ((*v27)(v19, 1, v1) == 1) {
        break;
      }
      (*v25)(v12, v19, v1);
      sub_1001B189C(v12);
      (*v18)(v12, v1);
      v15 += v26;
      --v11;
      uint64_t v13 = v20;
      if (!v11)
      {
        id v5 = v19;
        goto LABEL_11;
      }
    }
  }
  else
  {
    int64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
LABEL_11:
    v21(v5, 1, 1, v1);
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_1001B11D8(v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B189C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - v8;
  if (qword_100704EC8 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_100736E98;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v38(v9, a1, v4);
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    os_log_t v35 = v10;
    uint64_t v13 = (uint8_t *)v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v37 = v2;
    aBlock[0] = v14;
    uint64_t v36 = a1;
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v34 = v13 + 4;
    sub_1000FC744();
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v40[0] = sub_10009B0E4(v15, v16, aBlock);
    a1 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    _os_log_impl((void *)&_mh_execute_header, v35, v11, "[Testability] subscribing to url: %s", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v2 = v37;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v17 = self;
  URL._bridgeToObjectiveC()(v18);
  uint64_t v20 = v19;
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  uint64_t v22 = v39;
  v38(v39, a1, v4);
  unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v24 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v24 + v23, v22, v4);
  *(void *)(v24 + ((v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8)) = v21;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1001B382C;
  *(void *)(v25 + 24) = v24;
  aBlock[4] = (uint64_t)sub_1001B3900;
  aBlock[5] = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004A5940;
  void aBlock[3] = (uint64_t)&unk_1006954E0;
  uint64_t v26 = _Block_copy(aBlock);
  swift_release();
  id v27 = [v17 addSubscriberForFileURL:v20 withPublishingHandler:v26];
  _Block_release(v26);

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10009B208((uint64_t)aBlock, (uint64_t)v40);
  uint64_t v28 = (void *)(v2 + 32);
  swift_beginAccess();
  uint64_t v29 = *(void **)(v2 + 32);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 32) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v29 = sub_10018EF3C(0, v29[2] + 1, 1, v29);
    void *v28 = v29;
  }
  unint64_t v32 = v29[2];
  unint64_t v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    uint64_t v29 = sub_10018EF3C((void *)(v31 > 1), v32 + 1, 1, v29);
    void *v28 = v29;
  }
  v29[2] = v32 + 1;
  sub_1000A54B0(v40, &v29[4 * v32 + 4]);
  swift_endAccess();
  return sub_10009B1B8((uint64_t)aBlock);
}

uint64_t (*sub_1001B1D5C(void *a1, uint64_t a2))()
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v21 - v9;
  if (qword_100704EC8 != -1) {
    swift_once();
  }
  os_log_type_t v11 = qword_100736E98;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26(v10, a2, v4);
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v25 = v8;
    uint64_t v13 = swift_slowAlloc();
    unint64_t v23 = a1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v22 = swift_slowAlloc();
    v29[0] = v22;
    uint64_t v24 = a2;
    *(_DWORD *)uint64_t v14 = 136315138;
    v21[1] = v14 + 4;
    sub_1000FC744();
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v28 = sub_10009B0E4(v15, v16, v29);
    a2 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v8 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "[Testability] subscriber notified of published progress for %s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v23;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1001B2208(a1, a2);
    swift_release();
  }
  uint64_t v17 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  v26(v8, a2, v4);
  unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v19 + v18, v8, v4);
  return sub_1001B39D4;
}

uint64_t sub_1001B20F8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    __chkstk_darwin(result);
    swift_beginAccess();
    uint64_t result = sub_1001B3288((uint64_t (*)(unint64_t))sub_1001B3A38);
    uint64_t v2 = *(void *)(*(void *)(v1 + 16) + 16);
    if (v2 < result)
    {
      __break(1u);
    }
    else
    {
      sub_100516648(result, v2);
      swift_endAccess();
      swift_beginAccess();
      uint64_t v3 = swift_bridgeObjectRetain();
      sub_1001B11D8(v3);
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001B2208(id a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for DOCFileOperation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7 - 8);
  os_log_type_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v22[-v12];
  uint64_t v23 = a2;
  uint64_t v14 = (unint64_t *)(v4 + 16);
  swift_beginAccess();
  uint64_t v15 = sub_1001B3288((uint64_t (*)(unint64_t))sub_1001B3034);
  uint64_t v16 = *(void *)(*(void *)(v4 + 16) + 16);
  if (v16 < v15)
  {
    __break(1u);
LABEL_9:
    unint64_t v3 = sub_10018EF08(0, *(void *)(v3 + 16) + 1, 1, v3);
    unint64_t *v14 = v3;
    goto LABEL_4;
  }
  sub_100516648(v15, v16);
  swift_endAccess();
  if (!a1) {
    goto LABEL_7;
  }
  a1 = a1;
  sub_1002FC700((uint64_t (**)(char *, void))a1, (uint64_t)v13);
  sub_1001B3654((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
  swift_beginAccess();
  unint64_t v3 = *v14;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t *v14 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v19 = *(void *)(v3 + 16);
  unint64_t v18 = *(void *)(v3 + 24);
  if (v19 >= v18 >> 1)
  {
    unint64_t v3 = sub_10018EF08(v18 > 1, v19 + 1, 1, v3);
    unint64_t *v14 = v3;
  }
  *(void *)(v3 + 16) = v19 + 1;
  sub_100114104((uint64_t)v11, v3+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v19);
  swift_endAccess();

  sub_1001B35F8((uint64_t)v13);
LABEL_7:
  swift_beginAccess();
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1001B11D8(v20);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1001B245C()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSProgress.publishedFileURL.getter(v2);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1000CBBA4((uint64_t)v2, &qword_1007076B0);
    URL.path.getter();
LABEL_9:
    swift_bridgeObjectRelease();
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v5 = URL.path.getter();
  uint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  uint64_t v8 = URL.path.getter();
  if (!v7) {
    goto LABEL_9;
  }
  if (v5 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n();
    char v11 = 1;
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11 & 1;
}

uint64_t type metadata accessor for DOCSharedTestableProgressOperationProvider()
{
  return self;
}

uint64_t sub_1001B2634()
{
  _s5StateCMa();
  swift_allocObject();
  uint64_t result = sub_1001B2684();
  qword_100709D68 = result;
  return result;
}

uint64_t sub_1001B2684()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)LSApplicationRecord);
  id v3 = sub_100237C64(0xD00000000000002ALL, 0x80000001005DA130, 0);
  if (v3)
  {

    char v4 = 1;
  }
  else
  {
    char v4 = 0;
  }
  *(unsigned char *)(v0 + 16) = v4;
  id v5 = [self defaultCenter];
  if (qword_100705058 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_1007372E8;
  id v7 = [self mainQueue];
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v5;
  aBlock[4] = sub_1001B302C;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10047D590;
  void aBlock[3] = &unk_100695440;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v5;
  swift_release();
  id v12 = [v11 addObserverForName:v6 object:0 queue:v7 usingBlock:v10];
  _Block_release(v10);

  swift_unknownObjectRelease();
  return v1;
}

uint64_t sub_1001B2890(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v5 = (void *)result;
    if (qword_100704F08 != -1) {
      swift_once();
    }
    sub_1001B1540();
    [v5 setEnabled:1];
    if (qword_100705060 != -1) {
      swift_once();
    }
    [a3 postNotificationName:qword_1007372F0 object:0];
    return swift_release();
  }
  return result;
}

uint64_t DOCPreviewRouter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s5StateCMa()
{
  return self;
}

uint64_t *sub_1001B29C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1001B2A94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_1001B2B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

uint64_t sub_1001B2B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001B2C28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1001B2CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_1001B2D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B2D40);
}

uint64_t sub_1001B2D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1001B2E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B2E14);
}

uint64_t sub_1001B2E14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo()
{
  uint64_t result = qword_100709F90;
  if (!qword_100709F90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001B2F1C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001B2FB4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001B2FEC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B302C(uint64_t a1)
{
  return sub_1001B2890(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001B3034()
{
  return sub_1001B245C() & 1;
}

uint64_t sub_1001B3054(uint64_t (*a1)(long long *))
{
  uint64_t v3 = v2;
  char v4 = *v1;
  uint64_t v5 = *((void *)*v1 + 2);
  if (!v5) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  for (uint64_t i = 32; ; i += 16)
  {
    long long v21 = *(_OWORD *)&v4[i];
    unint64_t v9 = v21;
    swift_unknownObjectRetain();
    char v10 = a1(&v21);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return v9;
    }
    char v11 = v10;
    swift_unknownObjectRelease();
    if (v11) {
      break;
    }
    if (-v5 == --v7)
    {
      swift_bridgeObjectRelease();
      return *((void *)v4 + 2);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v9 = -v7;
  unint64_t v13 = 1 - v7;
  if (!__OFADD__(-v7, 1))
  {
    unint64_t v14 = *((void *)v4 + 2);
    if (v13 == v14) {
      return v9;
    }
    uint64_t v15 = i + 16;
    while (v13 < v14)
    {
      long long v21 = *(_OWORD *)&v4[v15];
      swift_unknownObjectRetain();
      char v17 = a1(&v21);
      uint64_t result = swift_unknownObjectRelease();
      if ((v17 & 1) == 0)
      {
        if (v13 != v9)
        {
          if ((v9 & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
          unint64_t v18 = *((void *)v4 + 2);
          if (v9 >= v18) {
            goto LABEL_29;
          }
          if (v13 >= v18) {
            goto LABEL_30;
          }
          long long v19 = *(_OWORD *)&v4[16 * v9 + 32];
          long long v20 = *(_OWORD *)&v4[v15];
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v4 = sub_10050DF54((uint64_t)v4);
          }
          *(_OWORD *)&v4[16 * v9 + 32] = v20;
          uint64_t result = swift_unknownObjectRelease();
          if (v13 >= *((void *)v4 + 2)) {
            goto LABEL_31;
          }
          *(_OWORD *)&v4[v15] = v19;
          uint64_t result = swift_unknownObjectRelease();
          *uint64_t v22 = v4;
        }
        if (__OFADD__(v9++, 1)) {
          goto LABEL_27;
        }
      }
      ++v13;
      unint64_t v14 = *((void *)v4 + 2);
      v15 += 16;
      if (v13 == v14) {
        return v9;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B3288(uint64_t (*a1)(unint64_t))
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for DOCFileOperation() - 8;
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  __chkstk_darwin(v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    objc_super v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      uint64_t v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_1001B3654(v12 + v20, v35, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      char v24 = a1(v23);
      uint64_t result = sub_1001B35F8(v23);
      if (v24)
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        uint64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_1001B3654(v26 + v31 + v16 * v32, v33, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_1001B3654(v26 + v36, v34, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v3 = v30;
          *objc_super v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_10050DF90(v26);
            unint64_t v26 = result;
            *uint64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_1001B3724(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_1001B3724(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B35F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileOperation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B3654(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B36BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100709FC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B3724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCFileOperation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B3788()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t (*sub_1001B382C(void *a1))()
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1001B1D5C(a1, v4);
}

uint64_t sub_1001B38C8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001B3900(uint64_t a1)
{
  return sub_1004A5910(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001B3908()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001B39D4()
{
  type metadata accessor for URL();

  return sub_1001B20F8();
}

uint64_t sub_1001B3A38()
{
  return sub_1001B3034() & 1;
}

uint64_t sub_1001B3A58()
{
  swift_bridgeObjectRelease();
  sub_1001B4C9C(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001B3AE8()
{
  return type metadata accessor for DOCSidebarCellAccessoryItem();
}

uint64_t type metadata accessor for DOCSidebarCellAccessoryItem()
{
  uint64_t result = qword_10070A000;
  if (!qword_10070A000) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001B3B3C()
{
  sub_10000582C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1001B3BFC()
{
  return swift_initClassMetadata2();
}

void sub_1001B3C40()
{
}

uint64_t sub_1001B3C50()
{
  swift_bridgeObjectRelease();
  sub_1001B4C9C(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t sub_1001B3CB4()
{
  sub_1001B3C50();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCSidebarCellCustomAccessoryItem()
{
  return sub_1000D21B0();
}

uint64_t sub_1001B3D24(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UICellAccessory();
  uint64_t v12 = *(void *)(v21 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v21);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v8);
  uint64_t v14 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  swift_bridgeObjectRetain();
  UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
  static UICellAccessory.disclosureIndicator(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  type metadata accessor for DOCSidebarCellAccessoryItem();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 32) = 1;
  uint64_t v16 = v21;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v21);
  *(void *)(v15 + 16) = 0x6E6F7276656863;
  *(void *)(v15 + 24) = 0xE700000000000000;
  *(void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = a1;
  *(unsigned char *)(v15 + 32) = 1;
  unint64_t v17 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  unint64_t v19 = (void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  void *v19 = sub_1001B4458;
  v19[1] = v18;
  return v15;
}

uint64_t sub_1001B40BC()
{
  uint64_t v0 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UICellAccessory.DeleteOptions();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICellAccessory();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v6);
  uint64_t v14 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 1, 1, v14);
  UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
  static UICellAccessory.delete(displayed:options:actionHandler:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for DOCSidebarCellAccessoryItem();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v10);
  *(void *)(v15 + 16) = 0x6574656C6564;
  *(void *)(v15 + 24) = 0xE600000000000000;
  *(void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_100689C10;
  *(unsigned char *)(v15 + 32) = 0;
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v13, v10);
  uint64_t v18 = (void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  void *v18 = sub_1001B4458;
  v18[1] = v17;
  return v15;
}

uint64_t sub_1001B445C()
{
  uint64_t v0 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for UICellAccessory.ReorderOptions();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICellAccessory();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v6);
  uint64_t v14 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 1, 1, v14);
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)();
  static UICellAccessory.reorder(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  type metadata accessor for DOCSidebarCellAccessoryItem();
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 32) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v10);
  *(void *)(v15 + 16) = 0x726564726F6572;
  *(void *)(v15 + 24) = 0xE700000000000000;
  *(void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_100689C40;
  *(unsigned char *)(v15 + 32) = 1;
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v13, v10);
  uint64_t v18 = (void *)(v15 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  void *v18 = sub_1001B4458;
  v18[1] = v17;
  return v15;
}

uint64_t sub_1001B47F8()
{
  uint64_t v0 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_10070A170);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions();
  uint64_t v6 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for UICellAccessory();
  uint64_t v13 = *(void *)(v25 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  double v15 = __chkstk_darwin(v25);
  unint64_t v16 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v10 + 104))(v12, enum case for UICellAccessory.DisplayedState.always(_:), v9, v15);
  uint64_t v17 = type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
  uint64_t v18 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v2, 1, 1, v18);
  UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)();
  static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  type metadata accessor for DOCSidebarCellAccessoryItem();
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 32) = 1;
  uint64_t v20 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v19 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, 1, 1, v25);
  *(void *)(v19 + 16) = 0xD000000000000011;
  *(void *)(v19 + 24) = 0x80000001005DA260;
  *(void *)(v19 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_10068A1A8;
  *(unsigned char *)(v19 + 32) = 1;
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v21, v16, v20);
  uint64_t v23 = (void *)(v19 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *uint64_t v23 = sub_1001B4458;
  v23[1] = v22;
  return v19;
}

uint64_t sub_1001B4C28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UICellAccessory();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_1001B4C9C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070A178);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001B4D00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v32 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v36 = v3 + 16;
  uint64_t v35 = v3 + 32;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v34 = v3 + 8;
  uint64_t v13 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  unint64_t v31 = _swiftEmptyArrayStorage;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, *(void *)(v13 + 48) + *(void *)(v3 + 72) * i, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
    uint64_t v18 = UTType.localizedDescription.getter();
    uint64_t v20 = v19;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    if (v20)
    {
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1000825D0(0, v31[2] + 1, 1, v31);
        unint64_t v31 = (void *)result;
      }
      unint64_t v25 = v31[2];
      unint64_t v24 = v31[3];
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v29 = v31[2];
        unint64_t v30 = v25 + 1;
        uint64_t result = (uint64_t)sub_1000825D0((void *)(v24 > 1), v25 + 1, 1, v31);
        unint64_t v25 = v29;
        unint64_t v26 = v30;
        unint64_t v31 = (void *)result;
      }
      unint64_t v27 = v31;
      v31[2] = v26;
      uint64_t v28 = &v27[2 * v25];
      v28[4] = v18;
      v28[5] = v20;
      if (v12) {
        goto LABEL_4;
      }
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v21 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v32 + 8 * v21);
    ++v15;
    if (!v22)
    {
      int64_t v15 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_29;
      }
      unint64_t v22 = *(void *)(v32 + 8 * v15);
      if (!v22)
      {
        int64_t v15 = v21 + 2;
        if (v21 + 2 >= v33) {
          goto LABEL_29;
        }
        unint64_t v22 = *(void *)(v32 + 8 * v15);
        if (!v22)
        {
          int64_t v15 = v21 + 3;
          if (v21 + 3 >= v33) {
            goto LABEL_29;
          }
          unint64_t v22 = *(void *)(v32 + 8 * v15);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v33)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v31;
  }
  unint64_t v22 = *(void *)(v32 + 8 * v23);
  if (v22)
  {
    int64_t v15 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_29;
    }
    unint64_t v22 = *(void *)(v32 + 8 * v15);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1001B5048(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a3 + 8 * v6);
          swift_retain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v15 = v8;
        char v10 = a1(&v15);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v12 & 1;
        }
        char v11 = v10;
        swift_release();
        if (v11)
        {
          swift_bridgeObjectRelease();
          char v12 = 1;
          return v12 & 1;
        }
        ++v6;
      }
      while (v9 != v5);
    }
  }
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1001B5194(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v6 = 4;
    while (1)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v6);
      uint64_t v8 = v7;
      uint64_t v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      id v15 = v7;
      char v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      char v11 = v10;

      if (v11)
      {
        swift_bridgeObjectRelease();
        char v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  char v12 = 0;
  return v12 & 1;
}

BOOL sub_1001B52CC(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10008CF28(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t *)&unk_1007069A0);
}

BOOL sub_1001B5304(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10008CF28(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t *)&unk_10070B980);
}

id sub_1001B533C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  id v12 = [self clearColor];
  [v11 setBackgroundColor:v12];

  id result = [v2 loadViewIfNeeded];
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v14)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v15 = v14;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v17 = [v15 cellForItemAtIndexPath:isa];

  if (!v17) {
    return v11;
  }
  uint64_t v18 = v8;
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v19 = swift_dynamicCastClass();
  if (!v19)
  {

    return v11;
  }
  uint64_t v20 = (void *)v19;
  uint64_t v55 = v10;
  id v21 = *(id *)(v19 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  [v21 _continuousCornerRadius];
  id v56 = v20;
  if (v22 > 0.0)
  {
    [v21 bounds];
    [v20 convertRect:v21 fromCoordinateSpace:];
    double v24 = v23;
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    [v21 _continuousCornerRadius];
    id v32 = [self bezierPathWithRoundedRect:v24 cornerRadius:v26 v28, v30, v31];
    [v11 setVisiblePath:v32];

LABEL_18:
    id v42 = [v11 visiblePath];

    if (!v42)
    {
      [v21 bounds];
      [v56 convertRect:v21 fromCoordinateSpace:];
      double v44 = v43;
      double v46 = v45;
      double v48 = v47;
      double v50 = v49;
      [v21 _continuousCornerRadius];
      id v52 = [self bezierPathWithRoundedRect:v44 cornerRadius:v46 v48, v50, v51];
      [v11 setVisiblePath:v52];
    }
    return v11;
  }
  id v54 = v21;
  if (IndexPath.count.getter() != 2) {
    goto LABEL_12;
  }
  id result = *(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result) {
    goto LABEL_23;
  }
  unsigned __int8 v33 = [result isGathering];
  uint64_t v34 = (uint64_t)v55;
  if ((v33 & 1) != 0 || (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, a1, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v7) == 1) {
      goto LABEL_14;
    }
  }
  else
  {
    if (sub_1001DAF30(a1))
    {
LABEL_12:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v6, 1, 1, v7);
LABEL_14:
      sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007069A0);
      id v21 = v54;
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v6, a1, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v6, 0, 1, v7);
    int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v7);
    uint64_t v34 = (uint64_t)v55;
    if (v35 == 1) {
      goto LABEL_14;
    }
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v34, v6, v7);
  id result = (id)sub_1001BAA44(v34, 0);
  id v21 = v54;
  if (result)
  {
    uint64_t v36 = result;
    [v54 bounds];
    uint64_t v39 = sub_10020A5CC(v36, v37, v38);
    [v21 bounds];
    [v56 convertPoint:v21 fromCoordinateSpace:];
    CGAffineTransformMakeTranslation(&v57, v40, v41);
    [v39 applyTransform:&v57];
    [v11 setVisiblePath:v39];

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v34, v7);
    goto LABEL_18;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1001B5934@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_10050DFB8(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    sub_1001146DC((long long *)&v5[5 * a1 + 4], a2);
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(&v5[5 * a1 + 4], &v5[5 * a1 + 9], 40 * (v7 - a1));
      v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1001B5A28(unint64_t a1)
{
  uint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_10050DFF4(v3);
  }
  unint64_t v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = v4 - 1;
    uint64_t v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      unint64_t v7 = &v3[4 * a1];
      uint64_t v8 = v7[4];
      memmove(v7 + 4, v7 + 8, 32 * v6);
      v3[2] = v5;
      *uint64_t v1 = v3;
      return v8;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_1001B5B20(uint64_t a1, unint64_t a2)
{
}

void sub_1001B5B34(uint64_t a1, unint64_t a2)
{
}

void sub_1001B5B48(uint64_t a1, unint64_t a2, unint64_t *a3)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v6 = *(id *)(a2 + 32);
      }
      unint64_t v7 = v6;
      sub_10009E6C4(0, a3);
      char v8 = static NSObject.== infix(_:_:)();

      if ((v8 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          a3 = (unint64_t *)(i + 1);
          if (__OFADD__(i, 1)) {
            break;
          }
          if (a3 == (unint64_t *)v5) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (((unint64_t)a3 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if ((unint64_t)a3 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v10 = *(id *)(a2 + 32 + 8 * (void)a3);
          }
          id v11 = v10;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v5) {
          continue;
        }
      }
      return;
    }
  }
}

uint64_t sub_1001B5CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = *(void *)(v4 + 72);
  sub_100078438(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v7 = 0;
  while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    ++v7;
    v5 += v6;
    if (v2 == v7) {
      return 0;
    }
  }
  return v7;
}

void sub_1001B5E08(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v4 = *(id *)(a2 + 32);
      }
      uint64_t v5 = v4;
      type metadata accessor for DOCBrowserContainerController();
      char v6 = static NSObject.== infix(_:_:)();

      if ((v6 & 1) == 0)
      {
        for (uint64_t i = 0; ; ++i)
        {
          unint64_t v11 = i + 1;
          if (__OFADD__(i, 1)) {
            break;
          }
          if (v11 == v3) {
            return;
          }
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_18;
            }
            if (v11 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_19;
            }
            id v8 = *(id *)(a2 + 32 + 8 * v11);
          }
          uint64_t v9 = v8;
          char v10 = static NSObject.== infix(_:_:)();

          if (v10) {
            return;
          }
        }
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v3) {
          continue;
        }
      }
      return;
    }
  }
}

void sub_1001B5F94(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_1001B5FA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[2];
  if (!v3) {
    return 0;
  }
  BOOL v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 0;
  }
  uint64_t v9 = 0;
  char v10 = a3 + 7;
  uint64_t v11 = 1;
  while (1)
  {
    if (v3 == v11) {
      return 0;
    }
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2) {
      break;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = v11++;
    v10 += 2;
    if (v13) {
      return result;
    }
  }
  return v9;
}

void sub_1001B6090(uint64_t a1, unint64_t a2)
{
}

void sub_1001B60A4(uint64_t a1, unint64_t a2)
{
}

uint64_t sub_1001B60B8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  double v45 = a4;
  uint64_t v51 = a3;
  id v56 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  double v46 = (char *)&v42 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  double v49 = (char *)&v42 - v13;
  __chkstk_darwin(v12);
  Swift::String v59 = (char *)&v42 - v14;
  uint64_t v15 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  id v54 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v63 = (char *)&v42 - v18;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v44 = a1;
  if (v19)
  {
    double v43 = v9;
    double v22 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v21 = v6 + 16;
    uint64_t v20 = v22;
    uint64_t v23 = a1 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
    uint64_t v50 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    uint64_t v24 = v21;
    uint64_t v25 = *(void *)(v21 + 56);
    uint64_t v52 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    uint64_t v53 = v25;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
    CGAffineTransform v57 = (void (**)(char *, char *, uint64_t))(v21 + 16);
    unint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 32);
    uint64_t v55 = (void (**)(uint64_t, uint64_t))(v21 - 8);
    swift_bridgeObjectRetain();
    double v26 = v59;
    Swift::String v60 = (void (*)(char *, char *, uint64_t))v22;
    uint64_t v42 = v21;
    while (1)
    {
      double v29 = v63;
      uint64_t v30 = v24;
      v20(v63, v23, v5);
      unsigned int v62 = *v61;
      v62(v29, 0, 1, v5);
      double v31 = *v58;
      if ((*v58)(v29, 1, v5) == 1)
      {
        CGFloat v40 = v62;
        goto LABEL_26;
      }
      id v32 = *v57;
      (*v57)(v26, v63, v5);
      uint64_t result = IndexPath.count.getter();
      if (result != 2)
      {
LABEL_3:
        uint64_t v27 = (uint64_t)v54;
        v62(v54, 1, 1, v5);
        double v26 = v59;
LABEL_4:
        sub_1000CBBA4(v27, (uint64_t *)&unk_1007069A0);
        double v28 = *v55;
        goto LABEL_5;
      }
      uint64_t v34 = *(void **)&v56[v52];
      if (!v34)
      {
        __break(1u);
        return result;
      }
      if (objc_msgSend(v34, "isGathering", v42) & 1) == 0 && (v56[v50]) {
        break;
      }
LABEL_20:
      uint64_t v27 = (uint64_t)v54;
      double v26 = v59;
      v60(v54, v59, v5);
      v62((char *)v27, 0, 1, v5);
      if (v31((char *)v27, 1, v5) == 1) {
        goto LABEL_4;
      }
      uint64_t v38 = (uint64_t)v49;
      v32(v49, (char *)v27, v5);
      uint64_t v64 = sub_1001BAA44(v38, 0);
      sub_1000CBE70(&qword_100717520);
      char v39 = Optional.isEqualTo(node:)();
      swift_unknownObjectRelease();
      double v28 = *v55;
      (*v55)(v38, v5);
      if (v39)
      {
        swift_bridgeObjectRelease();
        CGFloat v41 = v45;
        v32(v45, v59, v5);
        v62(v41, 0, 1, v5);
        goto LABEL_27;
      }
      double v26 = v59;
LABEL_5:
      v28((uint64_t)v26, v5);
      v23 += v53;
      --v19;
      uint64_t v20 = (void (*)(char *, uint64_t, uint64_t))v60;
      uint64_t v24 = v30;
      if (!v19) {
        goto LABEL_24;
      }
    }
    if ([v34 isGathering])
    {
      int v35 = v46;
      v60(v46, v59, v5);
    }
    else
    {
      int v36 = v56[v50];
      int v35 = v46;
      v60(v46, v59, v5);
      if (v36 == 1)
      {
        LODWORD(v47) = IndexPath.item.getter() == 0;
        goto LABEL_16;
      }
    }
    LODWORD(v47) = 0;
LABEL_16:
    double v48 = *v55;
    v48((uint64_t)v35, v5);
    double v37 = v43;
    v60(v43, v59, v5);
    if (v47)
    {
      uint64_t v47 = IndexPath.section.getter();
      v48((uint64_t)v37, v5);
      if (!v47) {
        goto LABEL_3;
      }
    }
    else
    {
      v48((uint64_t)v37, v5);
    }
    goto LABEL_20;
  }
  unsigned int v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  swift_bridgeObjectRetain();
LABEL_24:
  CGFloat v40 = v62;
  v62(v63, 1, 1, v5);
LABEL_26:
  swift_bridgeObjectRelease();
  v40(v45, 1, 1, v5);
LABEL_27:

  return swift_unknownObjectRelease();
}

uint64_t sub_1001B66DC(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a3 + 8 * v7);
          swift_unknownObjectRetain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        uint64_t v14 = v9;
        char v12 = a1(&v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          return v9;
        }
        if (v12)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_unknownObjectRelease();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1001B6818(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_19;
  }
  unint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v6)
  {
    while (__OFSUB__(v6--, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        goto LABEL_12;
      }
    }
    if ((a3 & 0xC000000000000001) != 0)
    {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_9;
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_17;
    }
    if (v6 >= *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_18;
    }
    id v8 = *(id *)(a3 + 32 + 8 * v6);
LABEL_9:
    uint64_t v9 = v8;
    id v12 = v8;
    char v10 = a1(&v12);
    if (v3)
    {
      swift_bridgeObjectRelease();

      return v9;
    }
    if (v10)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
LABEL_12:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t *NSNotificationName.DOCItemCollectionViewDidLayoutSubviews.unsafeMutableAddressor()
{
  if (qword_100704F30 != -1) {
    swift_once();
  }
  return &static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews;
}

uint64_t sub_1001B699C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1000CBBA4(a1, &qword_100707AC0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1000CBE70((uint64_t *)&unk_10070AE30);
  return swift_task_create();
}

uint64_t sub_1001B6B50(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
}

void sub_1001B6C98(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1001B6D24(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a3 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a3 + 8 * v7 + 32);
        swift_retain();
      }
      uint64_t v12 = v8;
      char v9 = a1(&v12);
      swift_release();
      if (v3 || (v9 & 1) != 0) {
        break;
      }
      uint64_t v10 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v10 == v6) {
          return 0;
        }
      }
    }
  }
  return v7;
}

NSString sub_1001B6E48()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100736EF8 = (uint64_t)result;
  return result;
}

id static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews.getter()
{
  if (qword_100704F30 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.DOCItemCollectionViewDidLayoutSubviews;

  return v0;
}

NSString sub_1001B6EDC()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_100736F20 = (uint64_t)result;
  return result;
}

uint64_t sub_1001B6F14()
{
  _StringGuts.grow(_:)(65);
  v1._object = (void *)0x80000001005DBB30;
  v1._uint64_t countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v1);
  v2._uint64_t countAndFlagsBits = sub_1001B708C();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 0xD000000000000014;
  v3._object = (void *)0x80000001005DBB50;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for ScrollPositionInfo(0);
  if (*(unsigned char *)(v0 + *(int *)(v4 + 20))) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + *(int *)(v4 + 20))) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0xD000000000000016;
  v8._object = (void *)0x80000001005DBB70;
  String.append(_:)(v8);
  type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  sub_1000C63D0();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = Dictionary.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1001B708C()
{
  _StringGuts.grow(_:)(46);
  v0._uint64_t countAndFlagsBits = 0x203A65646F6E28;
  v0._object = (void *)0xE700000000000000;
  String.append(_:)(v0);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  _print_unlocked<A, B>(_:_:)();
  v1._uint64_t countAndFlagsBits = 0x507865646E69203BLL;
  v1._object = (void *)0xED0000203A687461;
  String.append(_:)(v1);
  type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  type metadata accessor for IndexPath();
  sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._object = (void *)0x80000001005DBB90;
  v3._uint64_t countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v3);
  v4._uint64_t countAndFlagsBits = Double.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._uint64_t countAndFlagsBits = 41;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  return 0;
}

uint64_t sub_1001B7220(uint64_t a1, void *a2)
{
  _StringGuts.grow(_:)(25);
  v4._uint64_t countAndFlagsBits = 0x5468637261657328;
  v4._object = (void *)0xED0000203A6D7265;
  String.append(_:)(v4);
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = a1;
  v5._object = a2;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x3A65706F6373203BLL;
  v6._object = (void *)0xE800000000000000;
  String.append(_:)(v6);
  sub_1000CBE70(&qword_100708EB0);
  _print_unlocked<A, B>(_:_:)();
  return 0;
}

uint64_t sub_1001B7318()
{
  return sub_1001B7220(*(void *)v0, *(void **)(v0 + 8));
}

id sub_1001B7324()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DOCDragMonitor()) init];
  qword_100736F38 = (uint64_t)result;
  return result;
}

id sub_1001B73C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDragMonitor();
  return [super dealloc];
}

void sub_1001B7400()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTasks;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(*(void *)v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(*(void *)v1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v8 >= v6) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(v2 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v6) {
        goto LABEL_25;
      }
      uint64_t v9 = *(void *)(v2 + 8 * v7);
      if (!v9)
      {
        int64_t v7 = v8 + 2;
        if (v8 + 2 >= v6) {
          goto LABEL_25;
        }
        uint64_t v9 = *(void *)(v2 + 8 * v7);
        if (!v9)
        {
          int64_t v7 = v8 + 3;
          if (v8 + 3 >= v6) {
            goto LABEL_25;
          }
          uint64_t v9 = *(void *)(v2 + 8 * v7);
          if (!v9)
          {
            int64_t v7 = v8 + 4;
            if (v8 + 4 >= v6) {
              goto LABEL_25;
            }
            uint64_t v9 = *(void *)(v2 + 8 * v7);
            if (!v9) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v5 = (v9 - 1) & v9;
LABEL_5:
    Task.cancel()();
  }
  int64_t v10 = v8 + 5;
  if (v10 >= v6)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v9 = *(void *)(v2 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v6) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(v2 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
}

void sub_1001B75E0()
{
  uint64_t v1 = self;
  id v2 = [*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) sceneIdentifier];
  id v3 = [v1 globalTabbedBrowserControllerForIdentifier:v2];

  if (v3)
  {
    id v15 = [v3 effectiveFullBrowser];

    if (v15)
    {
      int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_multiselectActionStatus);
      uint64_t v5 = (char *)[v15 effectiveBrowserViewController];
      if (v5)
      {
        int64_t v6 = v5;
        int64_t v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        int64_t v8 = *v7;
        if (*v7
          && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v9 = swift_dynamicCastClass()) != 0))
        {
          uint64_t v10 = v9;
          id v11 = v8;

          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = v10;
          *(unsigned char *)(v12 + 24) = v4 == 1;
          aBlock[4] = sub_10021DE1C;
          aBlock[5] = v12;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000666D8;
          void aBlock[3] = &unk_100696088;
          uint64_t v13 = _Block_copy(aBlock);
          id v14 = v11;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v13);
        }
        else
        {
        }
      }
      else
      {
      }
    }
  }
}

void sub_1001B7800(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  objc_super v73 = &v63[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v69 = &v63[-v8];
  __chkstk_darwin(v7);
  uint64_t v68 = &v63[-v9];
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v70 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = &v63[-v14];
  __chkstk_darwin(v13);
  uint64_t v17 = &v63[-v16];
  uint64_t v18 = sub_1000CBE70((uint64_t *)&unk_10070D340);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = &v63[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = v1;
  uint64_t v22 = (uint64_t)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath];
  uint64_t v67 = 0;
  swift_beginAccess();
  uint64_t v23 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1000CBC00(v22, (uint64_t)v21, (uint64_t *)&unk_1007069A0);
  uint64_t v72 = a1;
  sub_1000CBC00(a1, v23, (uint64_t *)&unk_1007069A0);
  uint64_t v74 = v4;
  uint64_t v24 = v4 + 48;
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  uint64_t v26 = v3;
  if (v25((uint64_t)v21, 1, v3) == 1)
  {
    if (v25(v23, 1, v3) == 1)
    {
      sub_1000CBBA4((uint64_t)v21, (uint64_t *)&unk_1007069A0);
      return;
    }
    goto LABEL_6;
  }
  sub_1000CBC00((uint64_t)v21, (uint64_t)v17, (uint64_t *)&unk_1007069A0);
  if (v25(v23, 1, v3) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v17, v3);
LABEL_6:
    sub_1000CBBA4((uint64_t)v21, (uint64_t *)&unk_10070D340);
    goto LABEL_8;
  }
  uint64_t v27 = v74;
  double v28 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v74 + 32);
  uint64_t v65 = v24;
  double v29 = v68;
  v28(v68, v23, v3);
  sub_100078438((unint64_t *)&qword_10070AE70, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  int v64 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v66 = v25;
  uint64_t v30 = *(void (**)(unsigned char *, uint64_t))(v27 + 8);
  v30(v29, v3);
  v30(v17, v3);
  uint64_t v25 = v66;
  uint64_t v26 = v3;
  sub_1000CBBA4((uint64_t)v21, (uint64_t *)&unk_1007069A0);
  if (v64) {
    return;
  }
LABEL_8:
  sub_1000CBC00(v72, (uint64_t)v15, (uint64_t *)&unk_1007069A0);
  if (v25((uint64_t)v15, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007069A0);
    goto LABEL_27;
  }
  double v31 = v25;
  uint64_t v32 = v22;
  unsigned __int8 v33 = v69;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32))(v69, v15, v26);
  uint64_t v34 = v71;
  [v71 loadViewIfNeeded];
  int v35 = *(void **)&v34[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v35)
  {
    __break(1u);
LABEL_46:
    __break(1u);
    return;
  }
  id v36 = v35;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v38 = [v36 cellForItemAtIndexPath:isa];

  if (v38)
  {
    type metadata accessor for DOCItemCollectionCell();
    char v39 = (void *)swift_dynamicCastClass();
    if (v39)
    {
      uint64_t v40 = (*(uint64_t (**)(void))((swift_isaMask & *v39) + 0x1F8))();
      if (!v40)
      {
        (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v33, v26);

        goto LABEL_26;
      }
      CGFloat v41 = (char *)v40;
      int v42 = *(unsigned __int8 *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
      *(unsigned char *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = 0;
      if (v42 == 2 || (v42 & 1) != 0)
      {
        uint64_t v44 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
        uint64_t v45 = *(void *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
        if ((v45 & 0x800) == 0)
        {
          v45 |= 0x800uLL;
          *(void *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v45;
        }
        if (!*(void *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
          && !sub_1000CBC64())
        {
          *(void *)&v41[v44] = 0;
          uint64_t v47 = v45;
          uint64_t v48 = v67;
          sub_100090F98(v47, (uint64_t)v41);
          uint64_t v67 = v48;
        }
      }
    }
    else
    {
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v33, v26);
LABEL_26:
  uint64_t v22 = v32;
  uint64_t v25 = v31;
LABEL_27:
  uint64_t v49 = v22;
  uint64_t v50 = v70;
  sub_1000CBC00(v49, (uint64_t)v70, (uint64_t *)&unk_1007069A0);
  if (v25((uint64_t)v50, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v50, (uint64_t *)&unk_1007069A0);
    return;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v74 + 32))(v73, v50, v26);
  uint64_t v51 = v71;
  [v71 loadViewIfNeeded];
  uint64_t v52 = *(void **)&v51[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v52) {
    goto LABEL_46;
  }
  id v53 = v52;
  Class v54 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v55 = [v53 cellForItemAtIndexPath:v54];

  if (v55)
  {
    type metadata accessor for DOCItemCollectionCell();
    id v56 = (void *)swift_dynamicCastClass();
    if (v56)
    {
      uint64_t v57 = (*(uint64_t (**)(void))((swift_isaMask & *v56) + 0x1F8))();
      if (!v57)
      {
        (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v73, v26);

        return;
      }
      unint64_t v58 = (char *)v57;
      char v59 = *(unsigned char *)(v57 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping);
      *(unsigned char *)(v57 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isDropping) = 1;
      if ((v59 & 1) == 0)
      {
        uint64_t v60 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
        uint64_t v61 = *(void *)(v57 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
        if ((v61 & 0x800) == 0)
        {
          v61 |= 0x800uLL;
          *(void *)(v57 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v61;
        }
        if (!*(void *)(v57 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
          && !sub_1000CBC64())
        {
          *(void *)&v58[v60] = 0;
          sub_100090F98(v61, (uint64_t)v58);
        }
      }
    }
    else
    {
    }
  }
  (*(void (**)(unsigned char *, uint64_t))(v74 + 8))(v73, v26);
}

uint64_t DOCItemCollectionViewController.isUserInteractionEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled);
  swift_beginAccess();
  return *v1;
}

void (*DOCItemCollectionViewController.isUserInteractionEnabled.modify(void *a1))(void *a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_10023FB8C();
  return sub_1001B8090;
}

void sub_1001B8090(void *a1, char a2)
{
  uint64_t v3 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (unsigned char *)(v3[4] + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_isUserInteractionEnabled);
    swift_beginAccess();
    if ((*v4 & 1) == 0)
    {
      uint64_t v5 = v3[4];
      id v6 = [self sharedManager];
      [v6 unregisterKeyboardFocusable:v5];
    }
  }

  free(v3);
}

BOOL sub_1001B8158(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 != 2)
  {
    BOOL v4 = (v2 & 1) == 0;
    return v3 != 2 && ((v4 ^ v3) & 1) != 0;
  }
  return v3 == 2;
}

id sub_1001B819C(unsigned char *a1)
{
  int v2 = a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_valuesPendingUntilNextReload];
  id result = (id)sub_100005BFC(2);
  if (v2 != 2)
  {
    int v4 = a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
    a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v2 & 1;
    if (((((v2 & 1) == 0) ^ v4) & 1) == 0)
    {
      return [a1 docSetNeedsUpdateContentUnavailableConfiguration];
    }
  }
  return result;
}

id sub_1001B8224()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] == 1)
  {
    uint64_t v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    type metadata accessor for DOCExternalDeviceSource();
    uint64_t v9 = swift_dynamicCastClass();
    id v10 = v8;
    id v11 = v10;
    if (v9)
    {
      id v12 = [v10 identifier];
      id v13 = sub_1001B86F8();

      if (v13)
      {
        uint64_t v56 = v3;
        id v57 = v11;
        uint64_t v14 = *(void **)&v1[v7];
        uint64_t v55 = v7;
        id v15 = [v14 displayName];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        id v19 = [v13 displayName];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        if (v16 == v20 && v18 == v22)
        {

          swift_bridgeObjectRelease_n();
          id v11 = v57;
        }
        else
        {
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24)
          {

            id v11 = v57;
          }
          else
          {
            static Logger.UI.getter();
            id v25 = v13;
            uint64_t v26 = v1;
            id v27 = v25;
            double v28 = v26;
            double v29 = Logger.logObject.getter();
            os_log_type_t v30 = static os_log_type_t.info.getter();
            int v31 = v30;
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v32 = swift_slowAlloc();
              uint64_t v54 = swift_slowAlloc();
              uint64_t v59 = v54;
              *(_DWORD *)uint64_t v32 = 136315394;
              uint64_t v51 = v32 + 4;
              int v53 = v31;
              id v33 = [v27 displayName];
              uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v52 = v28;
              unint64_t v36 = v35;

              uint64_t v58 = sub_10009B0E4(v34, v36, &v59);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v32 + 12) = 2080;
              uint64_t v51 = v32 + 14;
              id v37 = [*(id *)&v1[v55] displayName];
              uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v40 = v39;

              uint64_t v58 = sub_10009B0E4(v38, v40, &v59);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              CGFloat v41 = v52;

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v53, "Observed source displayName changed. Using the updated source for Content Unavailable. New Source displayName: %s Old Source displayName: %s)", (uint8_t *)v32, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v2);
            id v11 = v27;
          }
        }
      }
    }
    DOCItemCollectionViewController.getCurrentLocation()();
    id v6 = v42;
    double v43 = self;
    id v44 = v11;
    id v45 = [v43 emptyProminentConfiguration];
    double v46 = v45;
    if (v6)
    {
      id v47 = v6;
      if (sub_1004DB844())
      {
        id v48 = v44;
        id v6 = sub_1004DBE7C(v48);
      }
      else
      {
        id v6 = sub_1004DBB24();
      }
    }
    else
    {

      id v47 = 0;
    }
  }
  return v6;
}

id sub_1001B86F8()
{
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager);
  if (v1)
  {
    uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v3 = v1;
    id v4 = v2;
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [v4 sourceForIdentifier:v5];
  }
  else
  {
    uint64_t v7 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.info.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_100073F48();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return 0;
  }
  return v6;
}

id sub_1001B8850()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = 0;
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] == 1)
  {
    uint64_t v7 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration;
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
    type metadata accessor for DOCExternalDeviceSource();
    uint64_t v9 = swift_dynamicCastClass();
    id v10 = v8;
    id v11 = v10;
    if (v9)
    {
      id v12 = [v10 identifier];
      id v13 = sub_1001B86F8();

      if (v13)
      {
        uint64_t v49 = v3;
        id v50 = v11;
        uint64_t v14 = *(void **)&v1[v7];
        uint64_t v48 = v7;
        id v15 = [v14 displayName];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        id v19 = [v13 displayName];
        uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v22 = v21;

        if (v16 == v20 && v18 == v22)
        {

          swift_bridgeObjectRelease_n();
          id v11 = v50;
        }
        else
        {
          char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24)
          {

            id v11 = v50;
          }
          else
          {
            static Logger.UI.getter();
            id v25 = v13;
            uint64_t v26 = v1;
            id v27 = v25;
            double v28 = v26;
            double v29 = Logger.logObject.getter();
            os_log_type_t v30 = static os_log_type_t.info.getter();
            int v31 = v30;
            if (os_log_type_enabled(v29, v30))
            {
              uint64_t v32 = swift_slowAlloc();
              uint64_t v47 = swift_slowAlloc();
              uint64_t v52 = v47;
              *(_DWORD *)uint64_t v32 = 136315394;
              v44[1] = v32 + 4;
              int v46 = v31;
              id v33 = [v27 displayName];
              uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              id v45 = v28;
              unint64_t v36 = v35;

              uint64_t v51 = sub_10009B0E4(v34, v36, &v52);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v32 + 12) = 2080;
              id v37 = [*(id *)&v1[v48] displayName];
              uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v40 = v39;

              uint64_t v51 = sub_10009B0E4(v38, v40, &v52);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              CGFloat v41 = v45;

              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v46, "Observed source displayName changed. Using the updated source for Content Unavailable. New Source displayName: %s Old Source displayName: %s)", (uint8_t *)v32, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
            }
            (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v2);
            id v11 = v27;
          }
        }
      }
    }
    id v42 = [self emptyProminentConfiguration];
    id v6 = (id)sub_1004DCA7C();
  }
  return v6;
}

id DOCItemCollectionViewController.source.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
}

uint64_t sub_1001B8D14(void *a1)
{
  return sub_100453E98();
}

uint64_t DOCItemCollectionViewController.displayMode.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
  swift_beginAccess();
  return *(void *)v1;
}

void DOCItemCollectionViewController.displayMode.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v3 - 8);
  NSString v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *id v6 = a1;
  if (v7 != a1)
  {
    uint64_t v8 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    swift_beginAccess();
    sub_10008BCB8(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    uint64_t v9 = *(void *)(*(void *)v5 + 16);
    if (v9)
    {
      id v10 = (uint64_t *)(*(void *)v5 + 64);
      do
      {
        uint64_t v11 = *v10;
        v10 += 5;
        *(unsigned char *)(v11 + 24) = *(unsigned char *)(v11 + 25);
        --v9;
      }
      while (v9);
    }
    sub_10008BBF0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    sub_10001E85C();
  }
}

void (*DOCItemCollectionViewController.displayMode.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[10] = v1;
  size_t v4 = *(void *)(*(void *)(type metadata accessor for DOCItemCollectionFPController() - 8) + 64);
  v3[11] = malloc(v4);
  NSString v5 = malloc(v4);
  uint64_t v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
  v3[12] = v5;
  v3[13] = v6;
  uint64_t v7 = (void *)(v1 + v6);
  swift_beginAccess();
  v3[9] = *v7;
  return sub_1001B9084;
}

void sub_1001B9084(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[9];
  uint64_t v4 = (*a1)[13];
  uint64_t v5 = (*a1)[10];
  uint64_t v6 = *(void *)(v5 + v4);
  *(void *)(v5 + v4) = v3;
  if (a2)
  {
    if (v6 == v3) {
      goto LABEL_12;
    }
    uint64_t v8 = v2 + 11;
    uint64_t v7 = v2[11];
    uint64_t v9 = v2[10] + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    swift_beginAccess();
    sub_10008BCB8(v9, v7, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    uint64_t v10 = *(void *)(*(void *)v7 + 16);
    if (v10)
    {
      uint64_t v11 = (uint64_t *)(*(void *)v7 + 64);
      do
      {
        uint64_t v12 = *v11;
        v11 += 5;
        *(unsigned char *)(v12 + 24) = *(unsigned char *)(v12 + 25);
        --v10;
      }
      while (v10);
    }
  }
  else
  {
    if (v6 == v3) {
      goto LABEL_12;
    }
    uint64_t v8 = v2 + 12;
    uint64_t v13 = v2[12];
    uint64_t v14 = v2[10] + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    swift_beginAccess();
    sub_10008BCB8(v14, v13, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    uint64_t v15 = *(void *)(*(void *)v13 + 16);
    if (v15)
    {
      uint64_t v16 = (uint64_t *)(*(void *)v13 + 64);
      do
      {
        uint64_t v17 = *v16;
        v16 += 5;
        *(unsigned char *)(v17 + 24) = *(unsigned char *)(v17 + 25);
        --v15;
      }
      while (v15);
    }
  }
  sub_10008BBF0(*v8, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  sub_10001E85C();
LABEL_12:
  uint64_t v18 = (void *)v2[11];
  free((void *)v2[12]);
  free(v18);

  free(v2);
}

unint64_t sub_1001B9200(void *a1, char a2)
{
  if (a2)
  {
    unint64_t v11 = 0;
    id v2 = a1;
    _StringGuts.grow(_:)(19);
    v9._object = (void *)0x80000001005DD800;
    v9._uint64_t countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v9);
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    _print_unlocked<A, B>(_:_:)();
  }
  else
  {
    id v2 = a1;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    unint64_t v11 = 0xD000000000000015;
    id v3 = [v2 description];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    v7._uint64_t countAndFlagsBits = v4;
    v7._object = v6;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 41;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
  }

  return v11;
}

Swift::Int sub_1001B9340(void *a1, char a2)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(1uLL);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v5 = a1;
    String.hash(into:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    id v4 = a1;
    NSObject.hash(into:)();
  }
  return Hasher._finalize()();
}

Swift::Int sub_1001B93F0()
{
  return sub_1001B9340(*(void **)v0, *(unsigned char *)(v0 + 8));
}

void sub_1001B93FC()
{
  uint64_t v1 = *(void **)v0;
  if (*(unsigned char *)(v0 + 8))
  {
    Hasher._combine(_:)(1uLL);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v2 = v1;
    String.hash(into:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    id v3 = v1;
    NSObject.hash(into:)();
  }
}

Swift::Int sub_1001B94D0()
{
  uint64_t v1 = *(void **)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v2)
  {
    Hasher._combine(_:)(1uLL);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v3 = v1;
    String.hash(into:)();

    swift_bridgeObjectRelease();
  }
  else
  {
    Hasher._combine(_:)(0);
    id v4 = v1;
    NSObject.hash(into:)();
  }
  return Hasher._finalize()();
}

unint64_t sub_1001B957C()
{
  return sub_1001B9200(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_1001B9588(uint64_t a1, uint64_t a2)
{
  return sub_1002053D0(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

void *DOCItemCollectionViewController.nodeCollection.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  id v2 = v1;
  return v1;
}

uint64_t DOCItemCollectionViewController.observedNode.getter()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection)) {
    return swift_unknownObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t sub_1001B9630()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v4 = &v26[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v26[-v5];
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = &v26[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v26[-v12];
  uint64_t v14 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v15 = *(char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v15)
  {
    uint64_t v16 = *(void *)&v15[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    sub_1000CBC00(v16, (uint64_t)v6, (uint64_t *)&unk_1007069A0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v13, v6, v7);
      uint64_t v17 = v15;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v19 = [v17 cellForItemAtIndexPath:isa];

      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v13, v7);
      goto LABEL_4;
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007069A0);
  uint64_t v21 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  uint64_t result = 0;
  if (*(void *)v21 != 2) {
    return result;
  }
  if (([v0 isEditing] & 1) == 0
    && *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__selectedChildNode])
  {
    uint64_t v22 = (void *)swift_unknownObjectRetain();
    sub_1001BAD5C(v22, (uint64_t)v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {
      swift_unknownObjectRelease();
      sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007069A0);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v11, v4, v7);
      uint64_t v23 = *(void **)&v0[v14];
      if (v23)
      {
        id v24 = v23;
        Class v25 = IndexPath._bridgeToObjectiveC()().super.isa;
        id v19 = [v24 cellForItemAtIndexPath:v25];

        swift_unknownObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
LABEL_4:
        if (v19)
        {
          type metadata accessor for DOCItemCollectionCell();
          uint64_t result = swift_dynamicCastClass();
          if (result) {
            return result;
          }
        }
        return 0;
      }
      (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

uint64_t DOCItemCollectionViewController.preferredFocusEnvironments.getter()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1005A04F0;
    *(void *)(v2 + 32) = v1;
    uint64_t v7 = v2;
    specialized Array._endMutation()();
    uint64_t v3 = v7;
  }
  else
  {
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
    id v4 = [super preferredFocusEnvironments];
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v5 = v1;
  return v3;
}

void *sub_1001B9BE0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  id v5 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v55 - v6;
  uint64_t v61 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v61 - 8);
  uint64_t v9 = __chkstk_darwin(v61);
  unint64_t v11 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v55 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v55 - v15;
  uint64_t v17 = sub_1001B9630();
  if (v17)
  {
    uint64_t v18 = (void *)v17;
    static Logger.UI.getter();
    id v19 = v18;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v60 = v8;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v63 = v23;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v62 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD160, &v63);
      uint64_t v24 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v25 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v19) + 0x1F8))(v24);
      uint64_t v59 = (void (*)(char *, uint64_t))v23;
      if (v25)
      {
        uint64_t v26 = (void *)v25;
        uint64_t v27 = (uint64_t)sub_10009B780();
        unint64_t v29 = v28;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v27 = 7104878;
        unint64_t v29 = 0xE300000000000000;
      }
      uint64_t v62 = sub_10009B0E4(v27, v29, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s 1 cellForFocusedItem title: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v60 + 8))(v16, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v61);
    }
    return v18;
  }
  os_log_type_t v30 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v30)
  {
    uint64_t v60 = v8;
    id v31 = v30;
    IndexPath.init(item:section:)();
    uint64_t v32 = IndexPath.section.getter();
    id v33 = [v31 numberOfSections];
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
    if (v32 >= (uint64_t)v33)
    {

      unint64_t v36 = *(void (**)(char *, uint64_t))(v2 + 8);
      v36(v5, v1);
    }
    else
    {
      uint64_t v34 = IndexPath.item.getter();
      id v35 = [v31 numberOfItemsInSection:IndexPath.section.getter()];
      unint64_t v36 = *(void (**)(char *, uint64_t))(v2 + 8);
      v36(v5, v1);
      if (v34 < (uint64_t)v35)
      {
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v38 = [v31 cellForItemAtIndexPath:isa];

        uint64_t v59 = v36;
        if (v38)
        {
          type metadata accessor for DOCItemCollectionCell();
          uint64_t v18 = (void *)swift_dynamicCastClass();
          if (!v18) {
        }
          }
        else
        {
          uint64_t v18 = 0;
        }
        uint64_t v43 = v60;
        static Logger.UI.getter();
        id v44 = v18;
        id v45 = Logger.logObject.getter();
        int v46 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v45, (os_log_type_t)v46))
        {
          int v57 = v46;
          uint64_t v47 = swift_slowAlloc();
          uint64_t v56 = swift_slowAlloc();
          uint64_t v63 = v56;
          *(_DWORD *)uint64_t v47 = 136315394;
          uint64_t v62 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD160, &v63);
          v55[1] = &v63;
          uint64_t v48 = UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v47 + 12) = 2080;
          os_log_t v58 = v45;
          if (v18 && (uint64_t v49 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v44) + 0x1F8))(v48)) != 0)
          {
            id v50 = (void *)v49;
            v55[0] = sub_10009B780();
            unint64_t v52 = v51;
            swift_bridgeObjectRetain();

            uint64_t v53 = v55[0];
          }
          else
          {
            unint64_t v52 = 0xE300000000000000;
            uint64_t v53 = 7104878;
          }
          uint64_t v62 = sub_10009B0E4(v53, v52, &v63);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          os_log_t v54 = v58;
          _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v57, "%s 2 cell title: %s", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v61);
        }
        v59(v7, v1);
        return v18;
      }
    }
    v36(v7, v1);
    uint64_t v8 = v60;
  }
  static Logger.UI.getter();
  unint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v39, v40))
  {
    CGFloat v41 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)CGFloat v41 = 136315138;
    uint64_t v62 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD160, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s 3 nil", v41, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v61);
  return 0;
}

uint64_t DOCItemCollectionViewController.items.getter()
{
  return swift_bridgeObjectRetain();
}

void (*DOCItemCollectionViewController.items.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  v3[3] = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  return sub_1001BA55C;
}

void sub_1001BA55C(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  unint64_t v3 = *(void *)(*(void *)a1 + 24);
  if (a2)
  {
    unint64_t v4 = swift_bridgeObjectRetain();
    DOCItemCollectionViewController.items.setter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    DOCItemCollectionViewController.items.setter(v3);
  }

  free(v2);
}

id DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.getter()
{
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  return [*(id *)(qword_100737550 + 40) forceDisplayFilenameExtensions];
}

id DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.setter(char a1)
{
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  [*(id *)(qword_100737550 + 40) setForceDisplayFilenameExtensions:a1 & 1];

  return sub_10007D85C();
}

id (*DOCItemCollectionViewController.collectionShouldShowAllFilenameExtensions.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  if (qword_1007051D0 != -1) {
    swift_once();
  }
  *(unsigned char *)(a1 + 8) = [*(id *)(qword_100737550 + 40) forceDisplayFilenameExtensions];
  return sub_1001BA730;
}

id sub_1001BA730(uint64_t a1)
{
  return sub_10007D85C();
}

void *sub_1001BA770()
{
  sub_1000CBE70(&qword_10070AE18);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  if (sub_100026738()) {
    id v1 = sub_10002F164();
  }
  else {
    id v1 = 0;
  }
  *(void *)(inited + 32) = v1;
  specialized Array._endMutation()();
  uint64_t v2 = *(void **)(inited + 32);
  if (v2)
  {
    id v3 = v2;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1001BA864()
{
  [v0 loadViewIfNeeded];
  uint64_t result = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t result = [result preparedCells];
  if (result)
  {
    uint64_t v2 = result;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = (uint64_t)result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_5:
        if (v4 >= 1)
        {
          for (uint64_t i = 0; i != v4; ++i)
          {
            if ((v3 & 0xC000000000000001) != 0) {
              id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v6 = *(id *)(v3 + 8 * i + 32);
            }
            uint64_t v7 = v6;
            type metadata accessor for DOCItemCollectionCell();
            if (swift_dynamicCastClass())
            {
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
            }
          }
          goto LABEL_18;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1001BAA44(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  if (sub_1001DAF30(a1)) {
    return v10;
  }
  if (a2)
  {
    uint64_t v11 = a2;
  }
  else
  {
    uint64_t v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController);
    swift_beginAccess();
    uint64_t v11 = *v12;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = IndexPath.section.getter();
  uint64_t v14 = *(void *)(v11 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  if (v13 >= v14)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  uint64_t v15 = IndexPath.item.getter();
  unint64_t v16 = IndexPath.section.getter();
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 >= *(void *)(v11 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v3 = v11 + 32;
  uint64_t v17 = *(void *)(v11 + 32 + 40 * v16 + 32);
  swift_beginAccess();
  unint64_t v18 = *(void *)(v17 + 16);
  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_24:
  uint64_t v25 = v7;
  swift_bridgeObjectRetain();
  uint64_t v7 = v25;
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_10:
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v15 >= v19)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v20 = IndexPath.section.getter();
  if ((v20 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v20 >= *(void *)(v11 + 16))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v21 = *(void *)(v3 + 40 * v20 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v22 = IndexPath.item.getter();
  swift_beginAccess();
  uint64_t v23 = *(void *)(v21 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_release();
  if ((v23 & 0xC000000000000001) != 0)
  {
LABEL_27:
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_17;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v10 = *(void *)(v23 + 8 * v22 + 32);
    swift_unknownObjectRetain();
LABEL_17:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001BAD5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v32 - v10;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource))
  {
    swift_getObjectType();
    swift_retain();
    if (DOCNode.isCreateDocumentSentinel()())
    {
      uint64_t v15 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
      return swift_release();
    }
    else
    {
      sub_1004DD264(a1, (uint64_t)v14);
      uint64_t v22 = type metadata accessor for IndexPath();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v14, 1, v22) == 1)
      {
        static Logger.UI.getter();
        swift_unknownObjectRetain_n();
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.error.getter();
        int v25 = v24;
        if (os_log_type_enabled(v23, v24))
        {
          LODWORD(v35) = v25;
          uint64_t v26 = a2;
          uint64_t v27 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = swift_slowAlloc();
          uint64_t v38 = v34;
          uint64_t v36 = v5;
          unint64_t v28 = v27;
          id v33 = v27;
          *(_DWORD *)uint64_t v27 = 136315138;
          a2 = v26;
          v32[1] = v28 + 4;
          uint64_t v29 = DOCNode.nodeDescription.getter();
          uint64_t v37 = sub_10009B0E4(v29, v30, &v38);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v23, (os_log_type_t)v35, "Unable to find index path for node '%s' in diffable data source", v33, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v36);
        }
        else
        {

          swift_release();
          swift_unknownObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
        }
      }
      else
      {
        swift_release();
      }
      return sub_1000CBE0C((uint64_t)v14, a2, (uint64_t *)&unk_1007069A0);
    }
  }
  else
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v35 = a2;
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v36 = v5;
      *(_DWORD *)uint64_t v19 = 136315138;
      swift_getObjectType();
      uint64_t v20 = DOCNode.nodeDescription.getter();
      uint64_t v37 = sub_10009B0E4(v20, v21, &v38);
      a2 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Diffable data source is nil when trying to find index path for node '%s'", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v36);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    }
    uint64_t v31 = type metadata accessor for IndexPath();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a2, 1, 1, v31);
  }
}

uint64_t sub_1001BB2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = sub_1000CBE70(&qword_10070AC28);
  __chkstk_darwin(v54);
  int v57 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v56 = (char *)&v48 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v48 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = type metadata accessor for URL();
  uint64_t v59 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v53 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  os_log_t v58 = (char *)&v48 - v24;
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (v25)
  {
    uint64_t v26 = (void *)v25;
    unint64_t v51 = v8;
    swift_unknownObjectRetain();
    id v27 = [v26 fpItem];
    if (v27
      && (unint64_t v28 = v27,
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0),
          char v29 = DOCNode.isEqualTo(node:)(),
          v28,
          (v29 & 1) != 0))
    {
      swift_unknownObjectRelease();
      char v30 = 1;
    }
    else
    {
      sub_1000CBC00(a3, (uint64_t)v20, &qword_1007076B0);
      uint64_t v31 = v59;
      unint64_t v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48);
      if (v52(v20, 1, v21) != 1)
      {
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        uint64_t v50 = v31 + 32;
        v49(v58, v20, v21);
        id v34 = [v26 fileURL];
        if (v34)
        {
          uint64_t v35 = v34;
          static URL._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
          v36(v13, 0, 1, v21);
        }
        else
        {
          uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
          v36(v13, 1, 1, v21);
        }
        uint64_t v37 = (uint64_t)v55;
        uint64_t v38 = (uint64_t)v56;
        sub_1000CBE0C((uint64_t)v13, (uint64_t)v16, &qword_1007076B0);
        if (v52(v16, 1, v21) == 1)
        {
          sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
          uint64_t v39 = v37;
          uint64_t v40 = 1;
        }
        else
        {
          URL.standardizedFileURL.getter();
          (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v21);
          uint64_t v39 = v37;
          uint64_t v40 = 0;
        }
        v36((char *)v39, v40, 1, v21);
        uint64_t v41 = (uint64_t)v57;
        URL.standardizedFileURL.getter();
        v36((char *)v38, 0, 1, v21);
        uint64_t v42 = v41 + *(int *)(v54 + 48);
        sub_1000CBC00(v37, v41, &qword_1007076B0);
        sub_1000CBC00(v38, v42, &qword_1007076B0);
        uint64_t v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v52;
        if (v52((char *)v41, 1, v21) == 1)
        {
          swift_unknownObjectRelease();
          sub_1000CBBA4(v38, &qword_1007076B0);
          sub_1000CBBA4(v37, &qword_1007076B0);
          (*(void (**)(char *, uint64_t))(v59 + 8))(v58, v21);
          if (v43(v42, 1, v21) == 1)
          {
            sub_1000CBBA4(v41, &qword_1007076B0);
            char v30 = 1;
            return v30 & 1;
          }
        }
        else
        {
          uint64_t v44 = (uint64_t)v51;
          sub_1000CBC00(v41, (uint64_t)v51, &qword_1007076B0);
          if (v43(v42, 1, v21) != 1)
          {
            int v46 = v53;
            v49(v53, (char *)v42, v21);
            sub_100078438(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
            char v30 = dispatch thunk of static Equatable.== infix(_:_:)();
            swift_unknownObjectRelease();
            uint64_t v47 = *(void (**)(char *, uint64_t))(v59 + 8);
            v47(v46, v21);
            sub_1000CBBA4(v38, &qword_1007076B0);
            sub_1000CBBA4(v37, &qword_1007076B0);
            v47(v58, v21);
            v47(v51, v21);
            sub_1000CBBA4(v41, &qword_1007076B0);
            return v30 & 1;
          }
          swift_unknownObjectRelease();
          sub_1000CBBA4(v38, &qword_1007076B0);
          sub_1000CBBA4(v37, &qword_1007076B0);
          id v45 = *(void (**)(char *, uint64_t))(v59 + 8);
          v45(v58, v21);
          v45((char *)v44, v21);
        }
        sub_1000CBBA4(v41, &qword_10070AC28);
        char v30 = 0;
        return v30 & 1;
      }
      swift_unknownObjectRelease();
      sub_1000CBBA4((uint64_t)v20, &qword_1007076B0);
      char v30 = 0;
    }
    return v30 & 1;
  }
  self;
  if (swift_dynamicCastObjCClass())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_unknownObjectRetain();
    char v33 = DOCNode.isEqualTo(node:)();
    swift_unknownObjectRelease();
    return v33 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001BBA88(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v12 = Logger.logObject.getter();
  int v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, (os_log_type_t)v13))
  {
    int v25 = v13;
    uint64_t v26 = v9;
    uint64_t v27 = v8;
    uint64_t v28 = a4;
    char v29 = a3;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = v24;
    *(_DWORD *)uint64_t v14 = 136315650;
    uint64_t v30 = sub_10009B0E4(0xD000000000000027, 0x80000001005D6A20, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2080;
    id v15 = [a2 displayName];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    uint64_t v30 = sub_10009B0E4(v16, v18, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2080;
    if (a1)
    {
      swift_getObjectType();
      uint64_t v19 = DOCNode.nodeDescription.getter();
      unint64_t v21 = v20;
    }
    else
    {
      unint64_t v21 = 0xE300000000000000;
      uint64_t v19 = 4271950;
    }
    uint64_t v22 = v27;
    uint64_t v30 = sub_10009B0E4(v19, v21, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, (os_log_type_t)v25, "%s - matching node for %s is %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v22);
    a3 = v29;
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return a3(a1);
}

void sub_1001BBDCC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView);
  *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView) = a1;
  id v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      id v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    sub_1001BC12C();
    goto LABEL_7;
  }
  if (!v4) {
    goto LABEL_6;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  id v5 = v4;
  id v6 = v8;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

uint64_t sub_1001BBE9C()
{
  (*(void (**)(void))(v0 + 144))();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001BBF38()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_1001BC098, v3, v2);
}

uint64_t sub_1001BC098()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = (void *)v0[31];
  swift_release();

  sub_10009B1B8((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_1001BC12C()
{
  sub_1001BC24C();
  id v1 = [v0 splitViewController];
  if (!v1) {
    goto LABEL_5;
  }
  uint64_t v2 = v1;
  [v0 enclosingTabSwitcherStyle];
  if ((DOCTabSwitcherStyle.showsTabs.getter() & 1) == 0)
  {

LABEL_5:
    id v4 = [v0 traitCollection];
    goto LABEL_6;
  }
  id v3 = [v0 traitCollection];
  __chkstk_darwin(v3);
  id v4 = (id)UITraitCollection.modifyingTraits(_:)();

LABEL_6:
  sub_100021F80(v4, 0, 0, 1, 1);
}

void sub_1001BC24C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView;
  [*(id *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderView] removeFromSuperview];
  uint64_t v2 = *(void **)&v0[v1];
  if (!v2) {
    return;
  }
  id v3 = objc_allocWithZone((Class)UIView);
  uint64_t v30 = v2;
  id v4 = [v3 init];
  uint64_t v5 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView;
  id v6 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView];
  *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_additionalHeaderContainerView] = v4;

  char v7 = *(void **)&v0[v5];
  if (!v7)
  {
    Class v29 = v30;
    goto LABEL_8;
  }
  id v8 = v7;
  [v8 addSubview:v30];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A1560;
  id v10 = [(objc_class *)v30 topAnchor];
  id v11 = [v8 topAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v9 + 32) = v12;
  id v13 = [(objc_class *)v30 bottomAnchor];
  id v14 = [v8 bottomAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v9 + 40) = v15;
  id v16 = [(objc_class *)v30 leadingAnchor];
  id v17 = [v8 leadingAnchor];
  [v0 loadViewIfNeeded];
  uint64_t v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v19 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v19)
  {
    __break(1u);
    goto LABEL_12;
  }
  [v19 layoutMargins];
  UIEdgeInsets.horizontalInsets.getter();
  id v21 = [v16 constraintEqualToAnchor:v17 constant:v20 * -0.5];

  *(void *)(v9 + 48) = v21;
  id v22 = [(objc_class *)v30 trailingAnchor];
  id v23 = [v8 trailingAnchor];
  [v0 loadViewIfNeeded];
  uint64_t v24 = *(void **)&v0[v18];
  if (!v24)
  {
LABEL_12:
    __break(1u);
    return;
  }
  int v25 = self;
  [v24 layoutMargins];
  UIEdgeInsets.horizontalInsets.getter();
  id v27 = [v22 constraintEqualToAnchor:v23 constant:v26 * 0.5];

  *(void *)(v9 + 56) = v27;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 activateConstraints:isa];

  Class v29 = isa;
LABEL_8:
}

BOOL sub_1001BC5C8()
{
  uint64_t v1 = type metadata accessor for DOCItemSortMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits)) {
    return 0;
  }
  swift_retain();
  sub_1000976F0((uint64_t)v23);
  swift_release();
  sub_10000A628((uint64_t)v23);
  uint64_t v22 = v24;
  uint64_t v15 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  swift_beginAccess();
  sub_1000CBC00(v15, (uint64_t)v11, (uint64_t *)&unk_1007086D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007086D0);
    uint64_t v16 = type metadata accessor for DOCItemSortMode.DisplayableMode();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007086D0);
    DOCItemSortDescriptor.sortType.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    DOCItemSortMode.displayableMode.getter();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v18 = type metadata accessor for DOCItemSortMode.DisplayableMode();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v14, 0, 1, v18);
  }
  uint64_t v19 = sub_1001BC958((uint64_t)v14, v22);
  sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_10070ABB0);
  unint64_t v20 = *(void *)(v19 + 16);
  swift_bridgeObjectRelease();
  return v20 > 1;
}

uint64_t sub_1001BC958(uint64_t a1, char a2)
{
  uint64_t v240 = a1;
  uint64_t v237 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v239 = *(void *)(v237 - 8);
  __chkstk_darwin(v237);
  char v233 = (char *)&v211 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = sub_1000CBE70(&qword_10070ABA8);
  uint64_t v4 = __chkstk_darwin(v238);
  uint64_t v6 = (char *)&v211 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  char v228 = (uint64_t *)((char *)&v211 - v8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v235 = (uint64_t *)((char *)&v211 - v10);
  uint64_t v11 = __chkstk_darwin(v9);
  id v219 = (uint64_t *)((char *)&v211 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v229 = (uint64_t)&v211 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v234 = (uint64_t *)((char *)&v211 - v16);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v216 = (uint64_t)&v211 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v221 = (uint64_t)&v211 - v20;
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v211 - v21;
  uint64_t v23 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v215 = (uint64_t)&v211 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  id v218 = (char *)&v211 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  id v227 = (uint64_t *)((char *)&v211 - v29);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v223 = (uint64_t)&v211 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  char v232 = (uint64_t *)((char *)&v211 - v33);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v211 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v211 - v38;
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v214 = (uint64_t)&v211 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  char v217 = (char *)&v211 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v226 = (uint64_t *)((char *)&v211 - v45);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v222 = (uint64_t)&v211 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v231 = (uint64_t *)((char *)&v211 - v49);
  uint64_t v50 = __chkstk_darwin(v48);
  unint64_t v52 = (char *)&v211 - v51;
  uint64_t v53 = __chkstk_darwin(v50);
  uint64_t v55 = (char *)&v211 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  uint64_t v212 = (uint64_t)&v211 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v220 = (uint64_t)&v211 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  uint64_t v224 = (uint64_t)&v211 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v213 = (uint64_t)&v211 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  uint64_t v230 = (uint64_t *)((char *)&v211 - v65);
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v225 = (uint64_t)&v211 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v70 = (char *)&v211 - v69;
  __chkstk_darwin(v68);
  uint64_t v72 = (char *)&v211 - v71;
  sub_1000CBE70((uint64_t *)&unk_100708CB0);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_1005A0030;
  *(unsigned char *)(v73 + 32) = 0;
  uint64_t v241 = v73;
  uint64_t v236 = qword_10070A188;
  if ((a2 & 2) == 0)
  {
    if ((a2 & 1) == 0)
    {
      uint64_t v74 = v236;
      swift_bridgeObjectRetain();
      goto LABEL_116;
    }
    uint64_t v230 = v6;
    uint64_t v85 = v239;
    uint64_t v86 = v239 + 104;
    uint64_t v87 = *(uint64_t **)(v239 + 104);
    uint64_t v77 = v237;
    ((void (*)(char *, void, uint64_t))v87)(v39, enum case for DOCItemSortMode.DisplayableMode.date(_:), v237);
    uint64_t v88 = *(void **)(v85 + 56);
    uint64_t v234 = (void *)(v85 + 56);
    uint64_t v231 = v88;
    ((void (*)(char *, void, uint64_t, uint64_t))v88)(v39, 0, 1, v77);
    uint64_t v89 = (void (*)(void, void, void))v235;
    uint64_t v90 = (uint64_t)v235 + *(int *)(v238 + 48);
    sub_1000CBC00(v240, (uint64_t)v235, (uint64_t *)&unk_10070ABB0);
    sub_1000CBC00((uint64_t)v39, v90, (uint64_t *)&unk_10070ABB0);
    id v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
    if (v91((uint64_t)v89, 1, v77) == 1)
    {
      uint64_t v74 = v236;
      swift_bridgeObjectRetain();
      sub_1000CBBA4((uint64_t)v39, (uint64_t *)&unk_10070ABB0);
      unsigned int v92 = v91(v90, 1, v77);
      uint64_t v93 = (void (*)(void, void, void))v232;
      if (v92 == 1)
      {
        sub_1000CBBA4((uint64_t)v235, (uint64_t *)&unk_10070ABB0);
LABEL_47:
        id v134 = (char *)v241;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v134 = sub_10018F390(0, *((void *)v134 + 2) + 1, 1, v134);
        }
        unint64_t v136 = *((void *)v134 + 2);
        unint64_t v135 = *((void *)v134 + 3);
        unint64_t v137 = v136 + 1;
        if (v136 >= v135 >> 1) {
          id v134 = sub_10018F390((char *)(v135 > 1), v136 + 1, 1, v134);
        }
        *((void *)v134 + 2) = v137;
        unint64_t v138 = &v134[v136];
        char v139 = 2;
        goto LABEL_87;
      }
    }
    else
    {
      sub_1000CBC00((uint64_t)v89, (uint64_t)v36, (uint64_t *)&unk_10070ABB0);
      if (v91(v90, 1, v77) != 1)
      {
        uint64_t v125 = v239;
        Swift::Int v126 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
        uint64_t v229 = v86;
        uint64_t v127 = v233;
        v126(v233, v90, v77);
        sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
        v226 = v87;
        char v128 = v91;
        uint64_t v129 = v236;
        swift_bridgeObjectRetain();
        char v130 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v131 = *(void (**)(char *, uint64_t))(v125 + 8);
        uint64_t v132 = v127;
        uint64_t v86 = v229;
        v131(v132, v237);
        sub_1000CBBA4((uint64_t)v39, (uint64_t *)&unk_10070ABB0);
        unint64_t v133 = v36;
        uint64_t v74 = v129;
        id v91 = v128;
        uint64_t v87 = v226;
        v131(v133, v237);
        uint64_t v77 = v237;
        sub_1000CBBA4((uint64_t)v235, (uint64_t *)&unk_10070ABB0);
        uint64_t v93 = (void (*)(void, void, void))v232;
        if (v130) {
          goto LABEL_47;
        }
LABEL_23:
        ((void (*)(void, void, uint64_t))v87)(v93, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v77);
        ((void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))v231)(v93, 0, 1, v77);
        uint64_t v108 = (uint64_t)v228;
        uint64_t v109 = (uint64_t)v228 + *(int *)(v238 + 48);
        sub_1000CBC00(v240, (uint64_t)v228, (uint64_t *)&unk_10070ABB0);
        sub_1000CBC00((uint64_t)v93, v109, (uint64_t *)&unk_10070ABB0);
        if (v91(v108, 1, v77) == 1)
        {
          sub_1000CBBA4((uint64_t)v93, (uint64_t *)&unk_10070ABB0);
          if (v91(v109, 1, v77) == 1)
          {
            sub_1000CBBA4(v108, (uint64_t *)&unk_10070ABB0);
LABEL_77:
            id v134 = (char *)v241;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v134 = sub_10018F390(0, *((void *)v134 + 2) + 1, 1, v134);
            }
            unint64_t v173 = *((void *)v134 + 2);
            unint64_t v172 = *((void *)v134 + 3);
            unint64_t v137 = v173 + 1;
            if (v173 >= v172 >> 1) {
              id v134 = sub_10018F390((char *)(v172 > 1), v173 + 1, 1, v134);
            }
            *((void *)v134 + 2) = v137;
            unint64_t v138 = &v134[v173];
            char v139 = 3;
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v114 = v223;
          sub_1000CBC00(v108, v223, (uint64_t *)&unk_10070ABB0);
          if (v91(v109, 1, v77) != 1)
          {
            uint64_t v166 = v239;
            id v167 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
            uint64_t v229 = v86;
            Class v168 = v91;
            id v169 = v233;
            v167(v233, v109, v77);
            sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
            LODWORD(v237) = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v170 = *(void (**)(char *, uint64_t))(v166 + 8);
            id v171 = v169;
            id v91 = v168;
            v170(v171, v77);
            sub_1000CBBA4((uint64_t)v232, (uint64_t *)&unk_10070ABB0);
            v170((char *)v114, v77);
            sub_1000CBBA4(v108, (uint64_t *)&unk_10070ABB0);
            if (v237) {
              goto LABEL_77;
            }
LABEL_82:
            id v134 = (char *)v241;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v134 = sub_10018F390(0, *((void *)v134 + 2) + 1, 1, v134);
            }
            unint64_t v175 = *((void *)v134 + 2);
            unint64_t v174 = *((void *)v134 + 3);
            unint64_t v137 = v175 + 1;
            if (v175 >= v174 >> 1) {
              id v134 = sub_10018F390((char *)(v174 > 1), v175 + 1, 1, v134);
            }
            *((void *)v134 + 2) = v137;
            unint64_t v138 = &v134[v175];
            char v139 = 1;
LABEL_87:
            v138[32] = v139;
            uint64_t v241 = (uint64_t)v134;
            if (v74 && v137 == *(void *)(v74 + 16))
            {
              uint64_t v176 = v240;
              unsigned int v177 = v91(v240, 1, v77);
              id v162 = (void (*)(void, void, void, void))v227;
              sub_1000CBC00(v176, (uint64_t)v227, (uint64_t *)&unk_10070ABB0);
              if (v177 == 1) {
                goto LABEL_90;
              }
              uint64_t v179 = v218;
              ((void (*)(char *, void, uint64_t))v87)(v218, enum case for DOCItemSortMode.DisplayableMode.name(_:), v77);
              ((void (*)(char *, void, uint64_t, uint64_t))v231)(v179, 0, 1, v77);
              uint64_t v180 = (uint64_t)v179;
              uint64_t v181 = v91;
              unint64_t v164 = (void (*)(void, void, void, void))v230;
              uint64_t v182 = (uint64_t)v230 + *(int *)(v238 + 48);
              sub_1000CBC00((uint64_t)v162, (uint64_t)v230, (uint64_t *)&unk_10070ABB0);
              sub_1000CBC00(v180, v182, (uint64_t *)&unk_10070ABB0);
              if (v181((uint64_t)v164, 1, v77) == 1)
              {
                swift_bridgeObjectRetain();
                sub_1000CBBA4(v180, (uint64_t *)&unk_10070ABB0);
                sub_1000CBBA4((uint64_t)v162, (uint64_t *)&unk_10070ABB0);
                if (v181(v182, 1, v77) == 1)
                {
                  id v162 = (void (*)(void, void, void, void))v230;
                  goto LABEL_91;
                }
                goto LABEL_105;
              }
              uint64_t v188 = v215;
              sub_1000CBC00((uint64_t)v164, v215, (uint64_t *)&unk_10070ABB0);
              if (v181(v182, 1, v77) == 1)
              {
                swift_bridgeObjectRetain();
                sub_1000CBBA4(v180, (uint64_t *)&unk_10070ABB0);
                sub_1000CBBA4((uint64_t)v227, (uint64_t *)&unk_10070ABB0);
                (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v188, v77);
LABEL_105:
                char v189 = (void (*)(void, void, void, void))v230;
                goto LABEL_114;
              }
              uint64_t v205 = v239;
              id v206 = v233;
              (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v233, v182, v77);
              sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
              swift_bridgeObjectRetain();
              char v202 = dispatch thunk of static Equatable.== infix(_:_:)();
              uint64_t v203 = *(void (**)(char *, uint64_t))(v205 + 8);
              v203(v206, v77);
              sub_1000CBBA4(v180, (uint64_t *)&unk_10070ABB0);
              uint64_t v204 = (uint64_t)v227;
              goto LABEL_125;
            }
            goto LABEL_116;
          }
          sub_1000CBBA4((uint64_t)v93, (uint64_t *)&unk_10070ABB0);
          (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v114, v77);
        }
        sub_1000CBBA4(v108, &qword_10070ABA8);
        goto LABEL_82;
      }
      uint64_t v106 = v236;
      swift_bridgeObjectRetain();
      sub_1000CBBA4((uint64_t)v39, (uint64_t *)&unk_10070ABB0);
      id v107 = v36;
      uint64_t v74 = v106;
      (*(void (**)(char *, uint64_t))(v239 + 8))(v107, v77);
      uint64_t v93 = (void (*)(void, void, void))v232;
    }
    sub_1000CBBA4((uint64_t)v235, &qword_10070ABA8);
    goto LABEL_23;
  }
  if (a2)
  {
    id v94 = (char *)v73;
    uint64_t v74 = v236;
    swift_bridgeObjectRetain();
    unint64_t v95 = sub_10018F390((char *)1, 2, 1, v94);
    *((void *)v95 + 2) = 2;
    v95[33] = 2;
    uint64_t v241 = (uint64_t)v95;
    uint64_t v96 = v239;
    unsigned __int8 v97 = *(void **)(v239 + 104);
    uint64_t v98 = v237;
    uint64_t v235 = (void *)(v239 + 104);
    char v232 = v97;
    ((void (*)(char *, void, uint64_t))v97)(v72, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v237);
    uint64_t v99 = (void *)(v96 + 56);
    uint64_t v234 = *(void **)(v96 + 56);
    ((void (*)(char *, void, uint64_t, uint64_t))v234)(v72, 0, 1, v98);
    uint64_t v100 = (uint64_t)&v22[*(int *)(v238 + 48)];
    sub_1000CBC00(v240, (uint64_t)v22, (uint64_t *)&unk_10070ABB0);
    sub_1000CBC00((uint64_t)v72, v100, (uint64_t *)&unk_10070ABB0);
    char v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    if (v101((uint64_t)v22, 1, v98) == 1)
    {
      sub_1000CBBA4((uint64_t)v72, (uint64_t *)&unk_10070ABB0);
      if (v101(v100, 1, v98) == 1)
      {
        sub_1000CBBA4((uint64_t)v22, (uint64_t *)&unk_10070ABB0);
        uint64_t v102 = &off_100689830;
        uint64_t v103 = (void (*)(void, void, void, void))v230;
LABEL_30:
        sub_1001693A8((uint64_t)v102);
        if (!v74 || *(void *)(v241 + 16) != *(void *)(v74 + 16)) {
          goto LABEL_116;
        }
        uint64_t v110 = v240;
        unsigned int v111 = v101(v240, 1, v98);
        uint64_t v112 = v225;
        sub_1000CBC00(v110, v225, (uint64_t *)&unk_10070ABB0);
        if (v111 == 1)
        {
          swift_bridgeObjectRetain();
LABEL_57:
          uint64_t v149 = v224;
          sub_1000CBBA4(v112, (uint64_t *)&unk_10070ABB0);
          sub_1000CBC00(v240, v149, (uint64_t *)&unk_10070ABB0);
LABEL_58:
          uint64_t v150 = v149;
LABEL_92:
          sub_1000CBBA4(v150, (uint64_t *)&unk_10070ABB0);
LABEL_93:
          swift_bridgeObjectRelease();
          uint64_t v178 = v74;
LABEL_121:
          swift_bridgeObjectRelease();
          return v178;
        }
        ((void (*)(void, void, void))v232)(v103, enum case for DOCItemSortMode.DisplayableMode.name(_:), v98);
        ((void (*)(void, void, uint64_t, uint64_t))v234)(v103, 0, 1, v98);
        uint64_t v146 = v221;
        uint64_t v147 = v221 + *(int *)(v238 + 48);
        sub_1000CBC00(v112, v221, (uint64_t *)&unk_10070ABB0);
        uint64_t v148 = v146;
        sub_1000CBC00((uint64_t)v103, v147, (uint64_t *)&unk_10070ABB0);
        if (v101(v146, 1, v98) == 1)
        {
          swift_bridgeObjectRetain();
          sub_1000CBBA4((uint64_t)v103, (uint64_t *)&unk_10070ABB0);
          uint64_t v148 = v221;
          sub_1000CBBA4(v112, (uint64_t *)&unk_10070ABB0);
          if (v101(v147, 1, v98) == 1)
          {
            uint64_t v112 = v148;
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v183 = v146;
          uint64_t v184 = v213;
          sub_1000CBC00(v183, v213, (uint64_t *)&unk_10070ABB0);
          if (v101(v147, 1, v98) != 1)
          {
            uint64_t v185 = v101;
            uint64_t v190 = v239;
            uint64_t v191 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
            uint64_t v231 = v99;
            uint64_t v192 = v184;
            uint64_t v193 = v233;
            v191(v233, v147, v98);
            sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
            swift_bridgeObjectRetain();
            char v194 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v195 = *(void (**)(char *, uint64_t))(v190 + 8);
            v195(v193, v98);
            sub_1000CBBA4((uint64_t)v230, (uint64_t *)&unk_10070ABB0);
            sub_1000CBBA4(v225, (uint64_t *)&unk_10070ABB0);
            v195((char *)v192, v98);
            sub_1000CBBA4(v221, (uint64_t *)&unk_10070ABB0);
            uint64_t v186 = v224;
            sub_1000CBC00(v240, v224, (uint64_t *)&unk_10070ABB0);
            uint64_t v187 = v220;
            if (v194)
            {
              uint64_t v149 = v186;
              goto LABEL_58;
            }
LABEL_108:
            ((void (*)(uint64_t, void, uint64_t))v232)(v187, enum case for DOCItemSortMode.DisplayableMode.date(_:), v98);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v234)(v187, 0, 1, v98);
            uint64_t v149 = v216;
            uint64_t v196 = v216 + *(int *)(v238 + 48);
            sub_1000CBC00(v186, v216, (uint64_t *)&unk_10070ABB0);
            sub_1000CBC00(v187, v196, (uint64_t *)&unk_10070ABB0);
            if (v185(v149, 1, v98) == 1)
            {
              sub_1000CBBA4(v187, (uint64_t *)&unk_10070ABB0);
              sub_1000CBBA4(v186, (uint64_t *)&unk_10070ABB0);
              if (v185(v196, 1, v98) == 1) {
                goto LABEL_58;
              }
            }
            else
            {
              uint64_t v197 = v212;
              sub_1000CBC00(v149, v212, (uint64_t *)&unk_10070ABB0);
              if (v185(v196, 1, v98) != 1)
              {
                uint64_t v208 = v239;
                uint64_t v209 = v233;
                (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v233, v196, v98);
                sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
                char v202 = dispatch thunk of static Equatable.== infix(_:_:)();
                v210 = *(void (**)(char *, uint64_t))(v208 + 8);
                v210(v209, v98);
                sub_1000CBBA4(v220, (uint64_t *)&unk_10070ABB0);
                sub_1000CBBA4(v224, (uint64_t *)&unk_10070ABB0);
                v210((char *)v197, v98);
                uint64_t v207 = v149;
LABEL_127:
                sub_1000CBBA4(v207, (uint64_t *)&unk_10070ABB0);
                if (v202) {
                  goto LABEL_93;
                }
                goto LABEL_115;
              }
              sub_1000CBBA4(v220, (uint64_t *)&unk_10070ABB0);
              sub_1000CBBA4(v224, (uint64_t *)&unk_10070ABB0);
              (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v197, v98);
            }
            char v189 = (void (*)(void, void, void, void))v149;
            goto LABEL_114;
          }
          swift_bridgeObjectRetain();
          sub_1000CBBA4((uint64_t)v103, (uint64_t *)&unk_10070ABB0);
          sub_1000CBBA4(v225, (uint64_t *)&unk_10070ABB0);
          (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v184, v98);
        }
        uint64_t v185 = v101;
        sub_1000CBBA4(v148, &qword_10070ABA8);
        uint64_t v186 = v224;
        sub_1000CBC00(v240, v224, (uint64_t *)&unk_10070ABB0);
        uint64_t v187 = v220;
        goto LABEL_108;
      }
    }
    else
    {
      sub_1000CBC00((uint64_t)v22, (uint64_t)v70, (uint64_t *)&unk_10070ABB0);
      if (v101(v100, 1, v98) != 1)
      {
        uint64_t v140 = v239;
        id v141 = *(void (**)(char *, uint64_t, uint64_t))(v239 + 32);
        uint64_t v231 = (void *)(v96 + 56);
        uint64_t v142 = v233;
        v141(v233, v100, v98);
        sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
        char v143 = dispatch thunk of static Equatable.== infix(_:_:)();
        id v144 = v101;
        v145 = *(void (**)(char *, uint64_t))(v140 + 8);
        v145(v142, v98);
        sub_1000CBBA4((uint64_t)v72, (uint64_t *)&unk_10070ABB0);
        v145(v70, v98);
        char v101 = v144;
        uint64_t v74 = v236;
        uint64_t v99 = v231;
        sub_1000CBBA4((uint64_t)v22, (uint64_t *)&unk_10070ABB0);
        uint64_t v103 = (void (*)(void, void, void, void))v230;
        if (v143)
        {
          uint64_t v102 = &off_100689830;
          goto LABEL_30;
        }
        goto LABEL_29;
      }
      sub_1000CBBA4((uint64_t)v72, (uint64_t *)&unk_10070ABB0);
      (*(void (**)(char *, uint64_t))(v239 + 8))(v70, v98);
    }
    sub_1000CBBA4((uint64_t)v22, &qword_10070ABA8);
    uint64_t v103 = (void (*)(void, void, void, void))v230;
LABEL_29:
    uint64_t v102 = &off_100689858;
    goto LABEL_30;
  }
  uint64_t v75 = v239;
  uint64_t v76 = v239 + 104;
  uint64_t v77 = v237;
  uint64_t v235 = *(void **)(v239 + 104);
  ((void (*)(char *, void, uint64_t))v235)(v55, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v237);
  unsigned __int8 v78 = *(void **)(v75 + 56);
  char v232 = (void *)(v75 + 56);
  uint64_t v230 = v78;
  ((void (*)(char *, void, uint64_t, uint64_t))v78)(v55, 0, 1, v77);
  uint64_t v79 = (void (*)(void, void, void, void))v234;
  uint64_t v80 = (uint64_t)v234 + *(int *)(v238 + 48);
  sub_1000CBC00(v240, (uint64_t)v234, (uint64_t *)&unk_10070ABB0);
  sub_1000CBC00((uint64_t)v55, v80, (uint64_t *)&unk_10070ABB0);
  uint64_t v81 = *(uint64_t **)(v75 + 48);
  int v82 = ((uint64_t (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v81)(v79, 1, v77);
  uint64_t v74 = v236;
  if (v82 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1000CBBA4((uint64_t)v55, (uint64_t *)&unk_10070ABB0);
    int v83 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v81)(v80, 1, v77);
    uint64_t v84 = (void (*)(void, void, void, void))v231;
    if (v83 == 1)
    {
      sub_1000CBBA4((uint64_t)v234, (uint64_t *)&unk_10070ABB0);
LABEL_41:
      uint64_t v119 = (char *)v241;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v119 = sub_10018F390(0, *((void *)v119 + 2) + 1, 1, v119);
      }
      unint64_t v121 = *((void *)v119 + 2);
      unint64_t v120 = *((void *)v119 + 3);
      unint64_t v122 = v121 + 1;
      if (v121 >= v120 >> 1) {
        uint64_t v119 = sub_10018F390((char *)(v120 > 1), v121 + 1, 1, v119);
      }
      *((void *)v119 + 2) = v122;
      id v123 = &v119[v121];
      char v124 = 3;
      goto LABEL_70;
    }
    goto LABEL_16;
  }
  sub_1000CBC00((uint64_t)v79, (uint64_t)v52, (uint64_t *)&unk_10070ABB0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v80, 1, v77) == 1)
  {
    swift_bridgeObjectRetain();
    sub_1000CBBA4((uint64_t)v55, (uint64_t *)&unk_10070ABB0);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v52, v77);
    uint64_t v84 = (void (*)(void, void, void, void))v231;
LABEL_16:
    sub_1000CBBA4((uint64_t)v234, &qword_10070ABA8);
    goto LABEL_17;
  }
  id v227 = (uint64_t *)v76;
  char v228 = v81;
  uint64_t v115 = v239;
  uint64_t v116 = v233;
  (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v233, v80, v77);
  sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  swift_bridgeObjectRetain();
  char v117 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v118 = *(void (**)(char *, uint64_t))(v115 + 8);
  v118(v116, v237);
  sub_1000CBBA4((uint64_t)v55, (uint64_t *)&unk_10070ABB0);
  v118(v52, v237);
  uint64_t v81 = v228;
  uint64_t v77 = v237;
  sub_1000CBBA4((uint64_t)v79, (uint64_t *)&unk_10070ABB0);
  uint64_t v84 = (void (*)(void, void, void, void))v231;
  if (v117) {
    goto LABEL_41;
  }
LABEL_17:
  ((void (*)(void, void, void))v235)(v84, enum case for DOCItemSortMode.DisplayableMode.size(_:), v77);
  ((void (*)(void, void, uint64_t, uint64_t))v230)(v84, 0, 1, v77);
  uint64_t v104 = v229;
  uint64_t v105 = v229 + *(int *)(v238 + 48);
  sub_1000CBC00(v240, v229, (uint64_t *)&unk_10070ABB0);
  sub_1000CBC00((uint64_t)v84, v105, (uint64_t *)&unk_10070ABB0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v104, 1, v77) == 1)
  {
    sub_1000CBBA4((uint64_t)v84, (uint64_t *)&unk_10070ABB0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v105, 1, v77) == 1)
    {
      sub_1000CBBA4(v104, (uint64_t *)&unk_10070ABB0);
LABEL_60:
      uint64_t v119 = (char *)v241;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v119 = sub_10018F390(0, *((void *)v119 + 2) + 1, 1, v119);
      }
      unint64_t v157 = *((void *)v119 + 2);
      unint64_t v156 = *((void *)v119 + 3);
      unint64_t v122 = v157 + 1;
      if (v157 >= v156 >> 1) {
        uint64_t v119 = sub_10018F390((char *)(v156 > 1), v157 + 1, 1, v119);
      }
      *((void *)v119 + 2) = v122;
      id v123 = &v119[v157];
      char v124 = 1;
      goto LABEL_70;
    }
    goto LABEL_36;
  }
  uint64_t v113 = v222;
  sub_1000CBC00(v104, v222, (uint64_t *)&unk_10070ABB0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v105, 1, v77) == 1)
  {
    sub_1000CBBA4((uint64_t)v84, (uint64_t *)&unk_10070ABB0);
    (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v113, v77);
LABEL_36:
    sub_1000CBBA4(v104, &qword_10070ABA8);
    goto LABEL_65;
  }
  uint64_t v151 = v239;
  uint64_t v152 = v233;
  (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v233, v105, v77);
  sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  uint64_t v153 = v113;
  char v154 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v155 = *(void (**)(char *, uint64_t))(v151 + 8);
  v155(v152, v77);
  sub_1000CBBA4((uint64_t)v231, (uint64_t *)&unk_10070ABB0);
  v155((char *)v153, v77);
  sub_1000CBBA4(v229, (uint64_t *)&unk_10070ABB0);
  if (v154) {
    goto LABEL_60;
  }
LABEL_65:
  uint64_t v119 = (char *)v241;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v119 = sub_10018F390(0, *((void *)v119 + 2) + 1, 1, v119);
  }
  unint64_t v159 = *((void *)v119 + 2);
  unint64_t v158 = *((void *)v119 + 3);
  unint64_t v122 = v159 + 1;
  if (v159 >= v158 >> 1) {
    uint64_t v119 = sub_10018F390((char *)(v158 > 1), v159 + 1, 1, v119);
  }
  *((void *)v119 + 2) = v122;
  id v123 = &v119[v159];
  char v124 = 2;
LABEL_70:
  v123[32] = v124;
  uint64_t v241 = (uint64_t)v119;
  if (v74 && v122 == *(void *)(v74 + 16))
  {
    uint64_t v160 = v240;
    int v161 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v81)(v240, 1, v77);
    id v162 = (void (*)(void, void, void, void))v226;
    sub_1000CBC00(v160, (uint64_t)v226, (uint64_t *)&unk_10070ABB0);
    if (v161 == 1)
    {
LABEL_90:
      swift_bridgeObjectRetain();
      goto LABEL_91;
    }
    uint64_t v163 = (uint64_t)v217;
    ((void (*)(char *, void, uint64_t))v235)(v217, enum case for DOCItemSortMode.DisplayableMode.name(_:), v77);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v230)(v163, 0, 1, v77);
    unint64_t v164 = (void (*)(void, void, void, void))v219;
    uint64_t v165 = (uint64_t)v219 + *(int *)(v238 + 48);
    sub_1000CBC00((uint64_t)v162, (uint64_t)v219, (uint64_t *)&unk_10070ABB0);
    sub_1000CBC00(v163, v165, (uint64_t *)&unk_10070ABB0);
    if (((unsigned int (*)(void (*)(void, void, void, void), uint64_t, uint64_t))v81)(v164, 1, v77) == 1)
    {
      swift_bridgeObjectRetain();
      sub_1000CBBA4(v163, (uint64_t *)&unk_10070ABB0);
      sub_1000CBBA4((uint64_t)v162, (uint64_t *)&unk_10070ABB0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v165, 1, v77) == 1)
      {
        id v162 = v164;
LABEL_91:
        uint64_t v150 = (uint64_t)v162;
        goto LABEL_92;
      }
    }
    else
    {
      uint64_t v188 = v214;
      sub_1000CBC00((uint64_t)v164, v214, (uint64_t *)&unk_10070ABB0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v81)(v165, 1, v77) != 1)
      {
        uint64_t v200 = v239;
        uint64_t v201 = v233;
        (*(void (**)(char *, uint64_t, uint64_t))(v239 + 32))(v233, v165, v77);
        sub_100078438((unint64_t *)&unk_10070ABC0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
        swift_bridgeObjectRetain();
        char v202 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v203 = *(void (**)(char *, uint64_t))(v200 + 8);
        v203(v201, v77);
        sub_1000CBBA4(v163, (uint64_t *)&unk_10070ABB0);
        uint64_t v204 = (uint64_t)v226;
LABEL_125:
        sub_1000CBBA4(v204, (uint64_t *)&unk_10070ABB0);
        v203((char *)v188, v77);
        uint64_t v207 = (uint64_t)v164;
        goto LABEL_127;
      }
      swift_bridgeObjectRetain();
      sub_1000CBBA4(v163, (uint64_t *)&unk_10070ABB0);
      sub_1000CBBA4((uint64_t)v226, (uint64_t *)&unk_10070ABB0);
      (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v188, v77);
    }
    char v189 = v164;
LABEL_114:
    sub_1000CBBA4((uint64_t)v189, &qword_10070ABA8);
LABEL_115:
    swift_bridgeObjectRelease();
  }
LABEL_116:
  uint64_t v178 = v241;
  if (*(void *)(v241 + 16) == 1)
  {
    swift_bridgeObjectRelease();
    qword_10070A188 = 0;
    goto LABEL_121;
  }
  if (!v74 || (BOOL v198 = sub_10028EC90(v241, v74), swift_bridgeObjectRelease(), !v198))
  {
    qword_10070A188 = v178;
    swift_bridgeObjectRetain();
    goto LABEL_121;
  }
  return v178;
}

void sub_1001BE97C(void *a1, id a2)
{
  uint64_t v4 = a1;
  uint64_t v5 = *a1;
  uint64_t v57 = a1[1];
  uint64_t v58 = v5;
  uint64_t v6 = (long long *)(a1 + 2);
  uint64_t v7 = a1[2];
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a2;
  if (!a2)
  {
    uint64_t v54 = v8;
    uint64_t v47 = v12;
    uint64_t v48 = v11;
    unint64_t v16 = (unint64_t)sub_10001A904();
    long long v17 = *(_OWORD *)v4;
    long long v67 = *v6;
    v68[0] = v17;
    unint64_t v61 = v16;
    uint64_t v56 = v9;
    uint64_t v52 = v2;
    uint64_t v51 = 0;
    uint64_t v50 = v4;
    uint64_t v49 = v14;
    uint64_t v55 = v7;
    if (v16 >> 62) {
      goto LABEL_19;
    }
    uint64_t v18 = *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_10021FE8C((uint64_t)v68);
    sub_10021FE8C((uint64_t)&v67);
    swift_retain();
    swift_bridgeObjectRetain();
    for (; v18; uint64_t v18 = _CocoaArrayWrapper.endIndex.getter())
    {
      long long v19 = v68[0];
      unint64_t v20 = v61 & 0xC000000000000001;
      uint64_t v21 = 4;
      uint64_t v53 = v18;
      while (1)
      {
        uint64_t v24 = v20
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)(v61 + 8 * v21);
        uint64_t v15 = v24;
        uint64_t v25 = v21 - 3;
        if (__OFADD__(v21 - 4, 1)) {
          break;
        }
        uint64_t v27 = *(void *)&v24[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
        uint64_t v26 = *(void *)&v24[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                            + 8];
        if (v26)
        {
          BOOL v28 = v27 == (void)v19 && v26 == *((void *)&v19 + 1);
          if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            sub_100220180((uint64_t)v68);
            sub_100220180((uint64_t)&v67);
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v59 = *(void *)&v24[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                              + 32];
          id v60 = v24;
          sub_10021FE8C((uint64_t)v68);
          sub_10021FE8C((uint64_t)&v67);
          swift_retain();
          uint64_t v22 = v27;
          uint64_t v23 = v57;
          uint64_t v15 = v60;
          uint64_t v18 = v53;
          sub_100220130(v22, 0);
          sub_100220130(v58, v23);
        }

        ++v21;
        if (v25 == v18) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_19:
      sub_10021FE8C((uint64_t)v68);
      sub_10021FE8C((uint64_t)&v67);
      swift_retain();
      swift_bridgeObjectRetain();
    }
LABEL_20:
    swift_bridgeObjectRelease();
    sub_100220180((uint64_t)v68);
    sub_100220180((uint64_t)&v67);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v29 = v49;
    static Logger.UI.getter();
    sub_10021FE8C((uint64_t)v68);
    sub_10021FE8C((uint64_t)&v67);
    swift_retain();
    sub_10021FE8C((uint64_t)v68);
    sub_10021FE8C((uint64_t)&v67);
    swift_retain();
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315394;
      *(void *)&long long aBlock = sub_10009B0E4(0xD000000000000018, 0x80000001005DD140, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v4 = v50;
      long long v33 = *((_OWORD *)v50 + 1);
      long long aBlock = *(_OWORD *)v50;
      long long v64 = v33;
      uint64_t v65 = (uint64_t (*)())v50[4];
      sub_10021FE8C((uint64_t)v68);
      sub_10021FE8C((uint64_t)&v67);
      swift_retain();
      uint64_t v34 = String.init<A>(describing:)();
      *(void *)&long long aBlock = sub_10009B0E4(v34, v35, &v62);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100220180((uint64_t)v68);
      sub_100220180((uint64_t)&v67);
      swift_release();
      sub_100220180((uint64_t)v68);
      sub_100220180((uint64_t)&v67);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s could not find header for section: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v48);
      uint64_t v15 = 0;
      a2 = v51;
    }
    else
    {
      sub_100220180((uint64_t)v68);
      sub_100220180((uint64_t)&v67);
      swift_release();
      sub_100220180((uint64_t)v68);
      sub_100220180((uint64_t)&v67);

      swift_release();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v29, v48);
      uint64_t v15 = 0;
LABEL_23:
      a2 = v51;
      uint64_t v4 = v50;
    }
  }
  uint64_t v36 = v4[4];
  int v37 = *(unsigned __int8 *)(v36 + 24);
  if (v37 != 1) {
    goto LABEL_28;
  }
  *(unsigned char *)(v36 + 24) = 0;
  if (v15)
  {
    while (1)
    {
      char v38 = v37 ^ 1;
      uint64_t v39 = self;
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v15;
      *(unsigned char *)(v40 + 24) = v38;
      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = sub_100220114;
      *(void *)(v41 + 24) = v40;
      uint64_t v65 = sub_1000D8564;
      uint64_t v66 = v41;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v64 = sub_100087990;
      *((void *)&v64 + 1) = &unk_1006977D0;
      uint64_t v42 = _Block_copy(&aBlock);
      id v43 = a2;
      id v44 = v15;
      swift_retain();
      a2 = v44;
      swift_release();
      [(id)v39 performWithoutAnimation:v42];
      _Block_release(v42);
      LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v39 & 1) == 0) {
        break;
      }
      __break(1u);
LABEL_28:
      *(unsigned char *)(v36 + 24) = 1;
      if (!v15) {
        goto LABEL_29;
      }
    }
  }
  else
  {
LABEL_29:
    id v45 = a2;
  }
  swift_beginAccess();
  uint64_t v46 = swift_bridgeObjectRetain();
  sub_10007A41C(v46, 2);
  swift_bridgeObjectRelease();
}

void sub_1001BF0D0(char a1)
{
  uint64_t v2 = v1;
  id v4 = [v2 traitCollection];
  sub_100021F80(v4, 0, 0, 1, a1);

  id v5 = sub_10009E55C();
  [v5 enclosingUIPHorizontalInset];
  double v7 = v6;

  id v8 = sub_10009E55C();
  double v9 = 0.0;
  if ([v8 contextPrefersVariableBlurBottomTabBar])
  {
    sub_100034698();
    UITraitCollection.subscript.getter();
    double v9 = v10;
  }
  [v2 loadViewIfNeeded];
  uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v11)
  {
    [v11 setVerticalScrollIndicatorInsets:0.0, -v7, v9, -v7];

    v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    id v12 = [v2 viewIfLoaded];
    id v13 = [v12 window];

    if (v13)
    {
      sub_1000A6988();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCItemCollectionViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = v3;
  id v53 = a3;
  uint64_t v5 = type metadata accessor for DOCSplitViewState();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  double v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v49 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v49 - v14;
  __chkstk_darwin(v13);
  long long v17 = (char *)&v49 - v16;
  static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)();
  static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v54 = v17;
  char v18 = DOCSplitViewState.isSidebarShownInline.getter();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v55 = v15;
  v19(v12, v15, v5);
  if (v18) {
    char v20 = DOCSplitViewState.isSidebarShownInline.getter() ^ 1;
  }
  else {
    char v20 = 0;
  }
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v12, v5);
  char v22 = DOCSplitViewState.isSidebarShownInline.getter();
  v19(v9, v55, v5);
  if (v22)
  {
    v21(v9, v5);
    uint64_t v23 = v4;
    if ((v20 & 1) == 0)
    {
      [v4 enclosedInUIPDocumentLanding];
LABEL_20:
      uint64_t v25 = 0;
LABEL_21:
      v21(v55, v5);
LABEL_22:
      v21(v54, v5);
      return sub_1000A7258((uint64_t)v25);
    }
    goto LABEL_8;
  }
  char v24 = DOCSplitViewState.isSidebarShownInline.getter();
  v21(v9, v5);
  uint64_t v23 = v4;
  if (v20) {
LABEL_8:
  }
    char v24 = 1;
  uint64_t v25 = 0;
  if (![v23 enclosedInUIPDocumentLanding]) {
    goto LABEL_21;
  }
  if ((v24 & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v26 = (void (*)())[v23 viewIfLoaded];
  uint64_t v25 = v26;
  if (!v26) {
    goto LABEL_21;
  }
  uint64_t v27 = *(void **)&v23[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v27)
  {

    goto LABEL_20;
  }
  id v28 = v27;
  id v29 = [v28 snapshotViewAfterScreenUpdates:1];
  if (!v29)
  {

    goto LABEL_20;
  }
  uint64_t v30 = v29;
  id v52 = self;
  os_log_type_t v31 = (void *)swift_allocObject();
  v31[2] = v30;
  v31[3] = v25;
  v31[4] = v28;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1002088AC;
  *(void *)(v32 + 24) = v31;
  id v60 = sub_100045B40;
  uint64_t v61 = v32;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v57 = 1107296256;
  uint64_t v58 = sub_100087990;
  uint64_t v59 = &unk_1006956D8;
  long long v33 = _Block_copy(&aBlock);
  uint64_t v51 = v61;
  id v34 = v28;
  id v35 = v30;
  uint64_t v50 = v25;
  swift_retain();
  swift_release();
  [v52 performWithoutAnimation:v33];
  _Block_release(v33);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    char v38 = &v23[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    BOOL v39 = *(void *)v38 == 2;
    uint64_t v49 = v21;
    if (v39) {
      char v40 = 1;
    }
    else {
      char v40 = sub_100339534() ^ 1;
    }
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v35;
    *(void *)(v41 + 24) = v34;
    *(unsigned char *)(v41 + 32) = v40 & 1;
    id v60 = sub_1002088C8;
    uint64_t v61 = v41;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v57 = 1107296256;
    uint64_t v58 = sub_100045AE0;
    uint64_t v59 = &unk_100695728;
    uint64_t v42 = _Block_copy(&aBlock);
    id v43 = v34;
    id v44 = v35;
    swift_release();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v43;
    *(void *)(v45 + 24) = v44;
    id v60 = sub_1002088D4;
    uint64_t v61 = v45;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v57 = 1107296256;
    uint64_t v58 = sub_100045AE0;
    uint64_t v59 = &unk_100695778;
    uint64_t v46 = _Block_copy(&aBlock);
    id v47 = v43;
    id v48 = v44;
    swift_release();
    [v53 animateAlongsideTransition:v42 completion:v46];
    _Block_release(v46);
    _Block_release(v42);

    uint64_t v25 = sub_1002088AC;
    uint64_t v21 = v49;
    v49(v55, v5);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void sub_1001BF838(void *a1, void *a2, void *a3)
{
  [a1 setAlpha:0.0];
  [a2 addSubview:a1];
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v6 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A1560;
  id v8 = [a1 centerXAnchor];
  id v9 = [a2 centerXAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v7 + 32) = v10;
  id v11 = [a1 topAnchor];
  id v12 = [a2 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v7 + 40) = v13;
  id v14 = [a1 widthAnchor];
  [a3 frame];
  id v15 = [v14 constraintEqualToConstant:CGRectGetWidth(v20)];

  *(void *)(v7 + 48) = v15;
  id v16 = [a1 heightAnchor];
  [a3 frame];
  id v17 = [v16 constraintEqualToConstant:CGRectGetHeight(v21)];

  *(void *)(v7 + 56) = v17;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 activateConstraints:isa];
}

uint64_t sub_1001BFABC(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100221568;
  *(void *)(v9 + 24) = v8;
  v14[4] = sub_1000D8564;
  void v14[5] = v9;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  void v14[2] = sub_100087990;
  v14[3] = &unk_1006984F0;
  id v10 = _Block_copy(v14);
  id v11 = a2;
  id v12 = a3;
  swift_retain();
  swift_release();
  [(id)v7 performWithoutAnimation:v10];
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    if (a4)
    {
      [v12 setAlpha:1.0];
      [v11 setAlpha:0.0];
    }
    return swift_release();
  }
  return result;
}

void sub_1001BFC7C(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v93 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v93 - 8);
  uint64_t v7 = __chkstk_darwin(v93);
  id v91 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned int v92 = (char *)&v90 - v9;
  [v2 loadViewIfNeeded];
  uint64_t v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  id v11 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v11)
  {
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  id v12 = [v11 collectionViewLayout];
  if (qword_100704F68 != -1) {
    swift_once();
  }
  NSString v13 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v15 = [v12 layoutAttributesForSupplementaryViewOfKind:v13 atIndexPath:isa];

  if (v15)
  {
    if (sub_1000975F0()) {
      [a1 setDirectionalLayoutMargins:NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing];
    }
    [v3 loadViewIfNeeded];
    id v16 = *(void **)&v3[v10];
    if (!v16) {
      goto LABEL_75;
    }
    uint64_t v17 = v6;
    id v18 = v16;
    [v15 frame];
    double v20 = v19;
    double v22 = v21;
    double v24 = v23;
    double v26 = v25;
    [v3 loadViewIfNeeded];
    uint64_t v27 = *(void **)&v3[v10];
    uint64_t v28 = v93;
    if (!v27)
    {
LABEL_76:
      __break(1u);
      goto LABEL_77;
    }
    id v29 = [v27 superview];
    [v18 convertRect:v29 toView:v20];
    CGFloat v31 = v30;
    CGFloat v33 = v32;
    CGFloat v35 = v34;
    CGFloat v37 = v36;

    [v3 loadViewIfNeeded];
    char v38 = *(void **)&v3[v10];
    if (!v38)
    {
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    id v39 = v38;
    [v3 loadViewIfNeeded];
    char v40 = *(void **)&v3[v10];
    if (!v40)
    {
LABEL_78:
      __break(1u);
      goto LABEL_79;
    }
    [v40 contentOffset];
    UIView.doc_pixelRounded(_:)();
    double v42 = v41;

    [v3 loadViewIfNeeded];
    id v43 = *(void **)&v3[v10];
    if (!v43)
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    id v44 = v43;
    [v3 loadViewIfNeeded];
    uint64_t v45 = *(void **)&v3[v10];
    if (!v45)
    {
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    [v45 adjustedContentInset];
    UIView.doc_pixelRounded(_:)();
    double v47 = v46;

    [v3 loadViewIfNeeded];
    id v48 = *(void **)&v3[v10];
    if (!v48)
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    id v49 = v48;
    v94.origin.x = v31;
    v94.origin.y = v33;
    v94.size.width = v35;
    v94.size.height = v37;
    CGRectGetMinY(v94);
    UIView.doc_pixelRounded(_:)();
    double v51 = v50;

    double v52 = v42 + v47;
    char v53 = v42 + v47 > 0.0 && v51 == v47;
    sub_1004D4BBC(v53);
    [v3 loadViewIfNeeded];
    uint64_t v54 = *(void **)&v3[v10];
    if (!v54) {
      goto LABEL_82;
    }
    [v54 safeAreaInsets];
    uint64_t v90 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
    if (a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] != 1
      || (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] & 1) == 0)
    {
      double v55 = 0.0;
    }
    double v56 = *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension];
    *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = v55;
    if (v55 != v56) {
      [a1 setNeedsUpdateConfiguration];
    }
    if (IndexPath.section.getter())
    {
      char v57 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators];
      a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
      if ((v57 & 1) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      [v3 loadViewIfNeeded];
      uint64_t v58 = *(void **)&v3[v10];
      if (!v58)
      {
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      [v58 contentOffset];
      double v60 = v59;
      [v3 loadViewIfNeeded];
      uint64_t v61 = *(void **)&v3[v10];
      if (!v61)
      {
LABEL_84:
        __break(1u);
        return;
      }
      [v61 _effectiveContentInset];
      int v63 = v60 <= -v62;
      int v64 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators];
      a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = v63;
      if (v63 == v64)
      {
LABEL_32:
        if ((sub_100026738() & 1) == 0)
        {
          uint64_t v69 = 0;
          goto LABEL_43;
        }
        id v66 = sub_10002F164();
        id v67 = [v66 arrangedSubviews];

        sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
        unint64_t v68 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v68 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v69 = (char *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v69) {
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v69 = *(char **)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v69)
          {
LABEL_41:
            swift_bridgeObjectRelease();
LABEL_43:
            if (!IndexPath.section.getter()
              && v69
              && (uint64_t v72 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView]) != 0)
            {
              sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
              id v73 = v72;
              id v74 = v15;
              id v75 = v73;
              uint64_t v76 = v69;
              char v77 = static NSObject.== infix(_:_:)();

              id v15 = v74;
              int v78 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
              a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = v77 & 1;
              if ((v77 & 1) == v78) {
                goto LABEL_50;
              }
            }
            else
            {
              char v79 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
              a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
              if ((v79 & 1) == 0)
              {
LABEL_50:
                char v80 = sub_10001F094();
                uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
                int v82 = v92;
                v81(v92, a2, v28);
                if (v80)
                {
                  int v83 = v91;
                  char v84 = a1[v90];
                  v81(v91, (uint64_t)v82, v28);
                  char v85 = (v84 & 1) != 0 || IndexPath.section.getter() == 0;
                  uint64_t v86 = *(void (**)(char *, uint64_t))(v17 + 8);
                  v86(v83, v28);
                  v86(v82, v28);
                }
                else
                {
                  (*(void (**)(char *, uint64_t))(v17 + 8))(v82, v28);
                  char v85 = 0;
                }
                sub_1004D4638(v85);
                double v87 = v52 * 0.25;
                if (v52 * 0.25 > 1.0) {
                  double v87 = 1.0;
                }
                if (v51 > v47 || v52 <= 0.0) {
                  double v87 = 0.0;
                }
                *(double *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = v87;
                uint64_t v89 = *(void **)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
                if (v89) {
                  [v89 setAlpha:];
                }

                return;
              }
            }
            sub_1004D749C();
            goto LABEL_50;
          }
        }
        uint64_t v70 = v69 - 1;
        if (__OFSUB__(v69, 1))
        {
          __break(1u);
        }
        else if ((v68 & 0xC000000000000001) == 0)
        {
          if (((unint64_t)v70 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if ((unint64_t)v70 < *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v71 = (char *)*(id *)(v68 + 8 * (void)v70 + 32);
LABEL_40:
            uint64_t v69 = v71;
            goto LABEL_41;
          }
          __break(1u);
          goto LABEL_74;
        }
        uint64_t v71 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_40;
      }
    }
    char v65 = a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator];
    a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 1;
    if ((v65 & 1) == 0) {
      sub_1004D749C();
    }
    sub_1004D749C();
    goto LABEL_32;
  }
}

uint64_t sub_1001C0434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();

  return sub_10020ACB0(a1, a2, a3);
}

uint64_t sub_1001C048C(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v10 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v10 - 8);
  id v12 = ((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  swift_beginAccess();
  sub_10008BCB8(v13, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  uint64_t v14 = *((void *)v12->isa + 2);
  uint64_t v43 = (uint64_t)v7;
  uint64_t v44 = v3;
  if (v14)
  {
    os_log_t v41 = v12;
    uint64_t v42 = v4;
    id v39 = v9;
    uint64_t v40 = swift_bridgeObjectRetain();
    id v15 = (uint64_t *)(v40 + 64);
    while (1)
    {
      uint64_t v16 = *v15;
      uint64_t v18 = *(v15 - 4);
      unint64_t v17 = *(v15 - 3);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      char v19 = Array<A>.contains(node:)();
      swift_bridgeObjectRelease();
      if (v19) {
        break;
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 += 5;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        uint64_t v7 = (char *)v43;
        uint64_t v3 = v44;
        id v12 = v41;
        uint64_t v4 = v42;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    sub_10008BBF0((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    uint64_t v28 = v39;
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_unknownObjectRetain_n();
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.info.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v46 = v43;
      *(_DWORD *)uint64_t v32 = 136315650;
      os_log_t v41 = v29;
      uint64_t v45 = sub_10009B0E4(0xD000000000000023, 0x80000001005DD110, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      LODWORD(v40) = v31;
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v45 = sub_10009B0E4(v18, v17, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2080;
      id v33 = [a1 displayName];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v36 = v35;

      uint64_t v45 = sub_10009B0E4(v34, v36, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v37 = v41;
      _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v40, "%s found section %s containing item: %s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v44);
    }
    else
    {

      swift_unknownObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v44);
    }
    uint64_t v27 = *(unsigned __int8 *)(v16 + 24);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    sub_10008BBF0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    double v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      uint64_t v46 = v42;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v45 = sub_10009B0E4(0xD000000000000023, 0x80000001005DD110, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2080;
      id v23 = [a1 displayName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;

      uint64_t v45 = sub_10009B0E4(v24, v26, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s can not find section containing item: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v43, v44);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    return 1;
  }
  return v27;
}

uint64_t sub_1001C0B68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_10070AD20);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v9, (uint64_t)v8, (uint64_t *)&unk_10070AD20);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070AD20);
  sub_1001C0D50();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_10008C318((uint64_t)v6, v9, (uint64_t *)&unk_10070AD20);
  return swift_endAccess();
}

uint64_t sub_1001C0D50()
{
  uint64_t v0 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  __chkstk_darwin(v0);
  (*(void (**)(char *, void))(v2 + 104))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:));
  UICollectionLayoutListConfiguration.init(appearance:)();
  UICollectionLayoutListConfiguration.showsSeparators.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  return UICollectionLayoutListConfiguration._didEndSwipingHandler.setter();
}

void sub_1001C0F24(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v11 = type metadata accessor for UIListSeparatorConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a2, a1, v11);
    return;
  }
  uint64_t v9 = (char *)Strong;
  if (sub_1000975F0())
  {
    uint64_t v10 = *(void *)&v9[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics
                       + 8];
  }
  else
  {
    [v9 loadViewIfNeeded];
    id v12 = *(void **)&v9[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v12)
    {
      __break(1u);
      return;
    }
    [v12 directionalLayoutMargins];
    uint64_t v10 = v13;
  }
  uint64_t v14 = type metadata accessor for UIListSeparatorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a2, a1, v14);
  if (!IndexPath.row.getter())
  {
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v4);
    UIListSeparatorConfiguration.topSeparatorVisibility.setter();
  }
  id v15 = (void (*)(unsigned char *, void))UIListSeparatorConfiguration.bottomSeparatorInsets.modify();
  *(void *)(v16 + 24) = v10;
  v15(v18, 0);
}

id sub_1001C1150(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v10 = (char *)Strong;
  uint64_t v11 = (void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (*v11 == 2
    || (sub_1001DAF30(a1) & 1) != 0
    || (v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {

    return 0;
  }
  if (IndexPath.count.getter() != 2) {
    goto LABEL_10;
  }
  id result = *(id *)&v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!result)
  {
    __break(1u);
    goto LABEL_42;
  }
  if (([result isGathering] & 1) == 0
    && (v10[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0
    && (sub_1001DAF30(a1) & 1) != 0)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_17:

    sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007069A0);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a1, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (!sub_1001BAA44((uint64_t)v8, 0)
    || (swift_getObjectType(), uint64_t v14 = (void *)DOCNode.fpfs_syncFetchFPItem()(), swift_unknownObjectRelease(), !v14))
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  id v15 = [self defaultManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005A04F0;
  *(void *)(v16 + 32) = v14;
  long long aBlock = (void **)v16;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v65 = v14;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [v15 eligibleActionsForItems:isa];

  type metadata accessor for FPAction(0);
  sub_100078438((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = FPActionTrash;
  LOBYTE(isa) = sub_1005350BC();

  if (isa)
  {
    id v20 = [*(id *)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forbiddenActionIdentifiers];
    os_log_type_t v21 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v24 = sub_100109128(v22, v23, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = v24 ^ 1;
  }
  else
  {
    char v25 = 0;
  }
  id v26 = FPActionDelete;
  char v27 = sub_1005350BC();

  if (v27)
  {
    id v28 = [*(id *)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forbiddenActionIdentifiers];
    id v29 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v32 = sub_100109128(v30, v31, v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v33 = v32 ^ 1;
  }
  else
  {
    char v33 = 0;
  }
  id v34 = FPActionUntrash;
  char v35 = sub_1005350BC();

  swift_bridgeObjectRelease();
  if (v35)
  {
    id v36 = [*(id *)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forbiddenActionIdentifiers];
    os_log_t v37 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    char v40 = sub_100109128(v38, v39, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v41 = v40 ^ 1;
  }
  else
  {
    char v41 = 0;
  }
  unint64_t v72 = (unint64_t)_swiftEmptyArrayStorage;
  char v42 = v25 | v33;
  uint64_t v43 = v65;
  if ((v42 & 1) == 0) {
    goto LABEL_35;
  }
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v44 = result;
  v73._object = (void *)0x80000001005D4DE0;
  v45._uint64_t countAndFlagsBits = 0x6574656C6544;
  v45._object = (void *)0xE600000000000000;
  v46._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v46._object = (void *)0xEB00000000656C62;
  v47._uint64_t countAndFlagsBits = 0;
  v47._object = (void *)0xE000000000000000;
  v73._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v73);

  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v43;
  *(void *)(v48 + 24) = v10;
  id v49 = v43;
  double v50 = v10;
  NSString v51 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_1002200A8;
  uint64_t v71 = v48;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v67 = 1107296256;
  unint64_t v68 = sub_100502854;
  uint64_t v69 = &unk_100697730;
  double v52 = _Block_copy(&aBlock);
  id v53 = [self contextualActionWithStyle:1 title:v51 handler:v52];

  _Block_release(v52);
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    uint64_t v43 = v65;
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_35:
  if ((v41 & 1) == 0)
  {
LABEL_40:
    sub_10009E6C4(0, (unint64_t *)&unk_10071A5A0);
    Class v64 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v13 = [self configurationWithActions:v64];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v13;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v54 = result;
    v74._uint64_t countAndFlagsBits = 0xD000000000000048;
    v74._object = (void *)0x80000001005D6CA0;
    v55._uint64_t countAndFlagsBits = 0x7265766F636552;
    v55._object = (void *)0xE700000000000000;
    v56._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v56._object = (void *)0xEB00000000656C62;
    v57._uint64_t countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v55, v56, (NSBundle)v54, v57, v74);

    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v43;
    *(void *)(v58 + 24) = v10;
    id v59 = v43;
    double v60 = v10;
    NSString v61 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_1002200A0;
    uint64_t v71 = v58;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v67 = 1107296256;
    unint64_t v68 = sub_100502854;
    uint64_t v69 = &unk_1006976E0;
    double v62 = _Block_copy(&aBlock);
    id v63 = [self contextualActionWithStyle:0 title:v61 handler:v62];

    _Block_release(v62);
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      uint64_t v43 = v65;
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_40;
  }
LABEL_43:
  __break(1u);
  return result;
}

void sub_1001C1B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v10 = [self defaultManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = a5;
  unint64_t v14 = inited;
  specialized Array._endMutation()();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  id v13 = a5;
  swift_retain();
  sub_10053982C(v14, a6, (uint64_t)sub_1002200B0, v12);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1001C1C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  id v8 = [self defaultManager];
  sub_1000CBE70(&qword_10070AE10);
  uint64_t v9 = *(void *)(type metadata accessor for DOCOperationItem() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
  *(void *)(v11 + v10) = a5;
  swift_storeEnumTagMultiPayload();
  id v12 = a5;
  sub_100535854(4, v11, 0, 0, 0, 1, a6, 0, 0);

  return swift_bridgeObjectRelease();
}

void sub_1001C1DC8()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = 1;
  }
}

void sub_1001C1E24()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if ([Strong isEditing]) {
      char v2 = 2;
    }
    else {
      char v2 = 0;
    }
    v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = v2;
  }
}

id DOCItemCollectionViewController.collectionView.getter()
{
  [v0 loadViewIfNeeded];
  id result = *(id *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (result)
  {
    return result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *DOCItemCollectionViewController.cellContainingScrollView.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  id v2 = v1;
  return v1;
}

void sub_1001C1F10()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v2 + 16))
  {
    uint64_t v3 = *(void **)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v3 = *(void **)(v2 + 8);
    swift_unknownObjectRetain();
    if (!v3) {
      return;
    }
  }
  unsigned int v4 = [v3 isShared];
  swift_unknownObjectRelease();
  if (v4)
  {
    uint64_t v5 = (char *)[objc_allocWithZone((Class)type metadata accessor for DOCShareBannerView()) init];
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = (void (**)(uint64_t))&v5[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
    uint64_t v8 = *(void *)&v5[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
    *uint64_t v7 = sub_100220038;
    v7[1] = (void (*)(uint64_t))v6;
    sub_1000A7258(v8);
  }
}

void sub_1001C2024(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = *(void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v4)
    {
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v5 = v4 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t v6 = *(void **)(*(void *)v5 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v6 = *(void **)(v5 + 8);
      swift_unknownObjectRetain();
      if (!v6) {
        goto LABEL_18;
      }
    }
    id v7 = [v6 fpfs_fpItem];
    swift_unknownObjectRelease();
    if (v7)
    {
      uint64_t v8 = (void *)FPItem.collaborationHighlight.getter();

      if (!v8)
      {
        long long aBlock = 0u;
        long long v30 = 0u;
        id v24 = DOCItemCollectionViewController.actionContext(from:)();
        sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
        id v25 = [self defaultManager];
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v7;
        *(void *)(v26 + 24) = v24;
        uint64_t v31 = sub_100162814;
        uint64_t v32 = v26;
        *(void *)&long long aBlock = _NSConcreteStackBlock;
        *((void *)&aBlock + 1) = 1107296256;
        *(void *)&long long v30 = sub_1001B6B50;
        *((void *)&v30 + 1) = &unk_100697690;
        char v27 = _Block_copy(&aBlock);
        id v28 = v7;
        id v10 = v24;
        swift_release();
        [v25 fetchURLForItem:v28 completionHandler:v27];
        _Block_release(v27);
        uint64_t v11 = v3;
        uint64_t v3 = v28;
        id v7 = v25;
LABEL_17:

        uint64_t v3 = v7;
        goto LABEL_18;
      }
      id v9 = [objc_allocWithZone((Class)NSItemProvider) init];
      NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(v7, 2u, 0, 0);
      sub_10009E6C4(0, &qword_10070ADF8);
      id v10 = v9;
      uint64_t v11 = (void *)_SWCollaborationDetailViewController.init(itemProvider:)();
      id v12 = (id)_DocumentManagerBundle();
      if (v12)
      {
        id v13 = v12;
        v14._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
        v33._uint64_t countAndFlagsBits = 0xD000000000000053;
        v33._object = (void *)0x80000001005DD040;
        v14._object = (void *)0x80000001005DCFF0;
        v15._object = (void *)0x80000001005DD020;
        v16._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v16._object = (void *)0xEB00000000656C62;
        v15._uint64_t countAndFlagsBits = 0xD000000000000014;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v16, (NSBundle)v13, v15, v33);

        NSString v17 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v11 setManageButtonTitle:v17];

        UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
        id v18 = [v11 presentationController];
        if (v18)
        {
          id v19 = v18;
          [v18 setDelegate:v3];
        }
        id v20 = [v11 popoverPresentationController];
        if (v20)
        {
          os_log_type_t v21 = v20;
          [v20 setSourceView:a1];
        }
        id v22 = [v11 popoverPresentationController];
        if (v22)
        {
          uint64_t v23 = v22;
          [v22 setPermittedArrowDirections:1];
        }
        swift_unknownObjectWeakAssign();
        [v3 presentViewController:v11 animated:1 completion:0];
        goto LABEL_17;
      }
LABEL_21:
      __break(1u);
      return;
    }
LABEL_18:
  }
}

void sub_1001C243C()
{
  uint64_t v1 = type metadata accessor for FPItem.SharingStatusOptions();
  uint64_t v2 = *(void (***)(char *, uint64_t))(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FPItem.SharingStatusStringType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shareBannerView);
  if (!v9) {
    return;
  }
  uint64_t v10 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v10)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v36 = v2;
  os_log_t v37 = v9;
  uint64_t v11 = (void *)(v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
  if (*(unsigned char *)(v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
  {
    id v12 = *(void **)(*v11 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    id v13 = v9;
    swift_unknownObjectRetain();
  }
  else
  {
    id v12 = (void *)v11[1];
    Swift::String v14 = v9;
    swift_unknownObjectRetain();
    if (!v12) {
      goto LABEL_12;
    }
  }
  id v15 = [v12 fpfs_fpItem];
  swift_unknownObjectRelease();
  if (!v15 || (uint64_t v16 = FPItem.collaborationSenderDisplayName.getter(), v18 = v17, v15, !v18))
  {
LABEL_12:
    if (*(unsigned char *)(v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v28 = *(void *)(v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
      swift_unknownObjectRetain();
      if (!v28)
      {
        uint64_t v31 = v37;
        uint64_t v32 = *(void **)&v37[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
        goto LABEL_18;
      }
    }
    swift_getObjectType();
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for FPItem.SharingStatusStringType.shareOwner(_:), v5);
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&unk_10070ADE0, (void (*)(uint64_t))&type metadata accessor for FPItem.SharingStatusOptions);
    sub_1000CBE70((uint64_t *)&unk_10070C640);
    sub_100073DF0(&qword_10070ADF0, (uint64_t *)&unk_10070C640);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    DOCNode.localizedSharingStatusDescription(type:options:)();
    uint64_t v30 = v29;
    swift_unknownObjectRelease();
    v36[1](v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v31 = v37;
    uint64_t v32 = *(void **)&v37[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
    if (v30)
    {
      id v33 = v32;
      NSString v34 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
LABEL_19:
      [v33 setText:v34];

      return;
    }
LABEL_18:
    id v33 = v32;
    NSString v34 = 0;
    goto LABEL_19;
  }
  id v19 = (id)_DocumentManagerBundle();
  if (!v19)
  {
LABEL_22:
    __break(1u);
    return;
  }
  id v20 = v19;
  v40._object = (void *)0x80000001005DCFB0;
  v21._uint64_t countAndFlagsBits = 0x7720646572616853;
  v21._object = (void *)0xEE00402520687469;
  v22._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v22._object = (void *)0xEB00000000656C62;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v40._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v40);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = sub_100073F48();
  *(void *)(v24 + 32) = v16;
  *(void *)(v24 + 40) = v18;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v25 = v37;
  id v26 = *(id *)&v37[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView];
  id v36 = (void (**)(char *, uint64_t))String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 setText:v36];

  char v27 = v36;
}

void sub_1001C2978()
{
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates;
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates];
  *(_OWORD *)(v2 + 16) = xmmword_10059B760;
  *(void *)(v2 + 56) = &type metadata for Int;
  *(void *)(v2 + 64) = &protocol witness table for Int;
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 96) = type metadata accessor for DOCItemCollectionViewController(0);
  *(void *)(v2 + 104) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
  *(void *)(v2 + 72) = v0;
  uint64_t v5 = v0;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (!*(void *)&v0[v3])
  {
    if (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] == 1) {
      sub_1001C2DBC();
    }
    if (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload] == 1) {
      sub_1000D54D8();
    }
  }
}

uint64_t DOCItemCollectionViewController.gatheringThumbnails.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCItemCollectionViewController.gatheringThumbnails.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_gatheringThumbnails);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*DOCItemCollectionViewController.gatheringThumbnails.modify())()
{
  return j_j__swift_endAccess;
}

void sub_1001C2BB4(void **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  *(void *)(v5 + 24) = v4;
  v8[4] = sub_100220030;
  v8[5] = v5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  uint64_t v8[2] = sub_1000666D8;
  v8[3] = &unk_100697640;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  id v7 = v4;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v6);
}

void sub_1001C2C8C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1001DAC50((uint64_t)[a2 itemsOrigin]);
  }
}

void sub_1001C2CF4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    id v3 = v2;

    if (v2)
    {
      sub_10019E86C();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1001C2D94()
{
}

void sub_1001C2DBC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView;
  v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 1;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates]) {
    return;
  }
  uint64_t v2 = v0;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentDragSession]) {
    return;
  }
  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = v3;
  [v3 setAccessibilityIdentifier:0];

  uint64_t v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
  swift_beginAccess();
  *uint64_t v5 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] = 0;
  sub_1001C310C(0);
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v7)
  {
LABEL_21:
    __break(1u);
    return;
  }
  if (*(unsigned char *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1 && (sub_10019EBA8(v6) & 1) != 0) {
    sub_10019E3AC();
  }
  uint64_t v8 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  *uint64_t v8 = 0;
  v8[1] = 0;
  swift_bridgeObjectRelease();
  id v9 = [v2 navigationItem];
  [v9 setTitleMenuProvider:0];

  id v10 = [v2 navigationItem];
  [v10 setDocumentProperties:0];

  id v11 = [v2 navigationItem];
  UINavigationItem.renameDelegate.setter();

  sub_10013F3CC();
  id v12 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
  if (v12) {
    [v12 removeFromSuperview];
  }
  [v2 doc_setContentUnavailableConfiguration:0];
  uint64_t v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  Swift::String v14 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v14)
  {
    id v15 = v14;
    [v15 setAllowsMultipleSelection:sub_100017F90()];
    [v15 removeFromSuperview];
    uint64_t v16 = &v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_uipDocLandingBackgroundAllowed];
    swift_beginAccess();
    int v17 = *v16;
    *uint64_t v16 = 0;
    if (v17 == 1) {
      sub_1000457E8(0);
    }
    uint64_t v18 = *(void **)&v2[v13];
    if (v18)
    {
      swift_unknownObjectWeakAssign();
      uint64_t v18 = *(void **)&v2[v13];
    }
    *(void *)&v2[v13] = 0;

    [v2 setView:0];
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits] = 0;
    swift_release();
    *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource] = 0;
    swift_release();
    id v19 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
    swift_beginAccess();
    if (*(unsigned char *)v19 != 2)
    {
      _OWORD *v19 = 0u;
      v19[1] = 0u;
    }
    sub_100488D84(v15);
  }
  v2[v1] = 0;
}

void sub_1001C310C(char a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RestorableSettings(0);
  uint64_t v61 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v62 = (uint64_t)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ScrollPositionInfo(0);
  __chkstk_darwin(v8);
  id v10 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_10070AED8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char **)((char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed) & 1) != 0
    || (a1 & 1) != 0)
  {
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v18)
    {
      id v60 = v18;
      sub_100007068();
      if ((_BYTE)v20 == 0xFF)
      {
        id v22 = v60;
      }
      else
      {
        int v21 = v20;
        id v59 = v19;
        sub_1001C465C(v13);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
        {
          sub_1000D4E9C(v59, v21);

          sub_1000CBBA4((uint64_t)v13, &qword_10070AED8);
        }
        else
        {
          int v53 = v21 & 1;
          int v54 = v21;
          sub_10021FEB8((uint64_t)v13, (uint64_t)v17, type metadata accessor for ScrollPositionInfo.ItemOffset);
          [v60 contentOffset];
          double v24 = v23;
          [v60 _effectiveContentInset];
          double v26 = -v25;
          id v65 = &_swiftEmptyDictionarySingleton;
          uint64_t v27 = sub_1001C3828();
          if (v27)
          {
            uint64_t v28 = __chkstk_darwin(v27);
            *(void *)&v51[-4] = &v65;
            *(void *)&v51[-2] = v1;
            sub_1002054C4(v28, (void (*)(_OWORD *, uint64_t))sub_100221560);
            swift_bridgeObjectRelease();
          }
          sub_10008BCB8((uint64_t)v17, (uint64_t)v10, type metadata accessor for ScrollPositionInfo.ItemOffset);
          uint64_t v29 = v65;
          v10[*(int *)(v8 + 20)] = v24 != v26;
          *(void *)&v10[*(int *)(v8 + 24)] = v29;
          swift_bridgeObjectRetain();
          uint64_t v30 = sub_1002056C4(v1);
          uint64_t v32 = v31;
          uint64_t v34 = v33;
          uint64_t v36 = v35;
          uint64_t v37 = v62;
          sub_10008BCB8((uint64_t)v10, v62, type metadata accessor for ScrollPositionInfo);
          uint64_t v38 = (uint64_t *)(v37 + *(int *)(v6 + 20));
          uint64_t *v38 = v30;
          v38[1] = v32;
          void v38[2] = v34;
          void v38[3] = v36;
          uint64_t v55 = v32;
          uint64_t v56 = v30;
          uint64_t v57 = v36;
          uint64_t v58 = v34;
          sub_10021FF88(v30, v32);
          if (qword_100704F60 != -1) {
            swift_once();
          }
          double v52 = type metadata accessor for RestorableSettings;
          sub_10008BCB8(v37, (uint64_t)v5, type metadata accessor for RestorableSettings);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v5, 0, 1, v6);
          swift_beginAccess();
          id v39 = v59;
          id v40 = v59;
          char v41 = v53;
          sub_1004F1DFC((uint64_t)v5, v39, v53);
          swift_endAccess();
          uint64_t v61 = static DOCLog.UI.getter();
          v51[1] = static os_log_type_t.debug.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v42 = swift_allocObject();
          *(_OWORD *)(v42 + 16) = xmmword_10059B760;
          unint64_t v43 = sub_1001B9200(v39, v41);
          uint64_t v45 = v44;
          uint64_t v46 = v37;
          *(void *)(v42 + 56) = &type metadata for String;
          unint64_t v47 = sub_100073F48();
          *(void *)(v42 + 64) = v47;
          *(void *)(v42 + 32) = v43;
          *(void *)(v42 + 40) = v45;
          uint64_t v63 = 0;
          unint64_t v64 = 0xE000000000000000;
          _print_unlocked<A, B>(_:_:)();
          uint64_t v48 = v63;
          unint64_t v49 = v64;
          *(void *)(v42 + 96) = &type metadata for String;
          *(void *)(v42 + 104) = v47;
          *(void *)(v42 + 72) = v48;
          *(void *)(v42 + 80) = v49;
          double v50 = (void *)v61;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          sub_1000D4E9C(v39, v54);
          sub_100221018(v56, v55);

          sub_10008BBF0(v46, v52);
          sub_10008BBF0((uint64_t)v10, type metadata accessor for ScrollPositionInfo);
          sub_10008BBF0((uint64_t)v17, type metadata accessor for ScrollPositionInfo.ItemOffset);
          swift_bridgeObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_1001C375C(uint64_t *a1, int64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070AED8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (void *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v7 = *(_OWORD *)a1;
  long long v9 = *((_OWORD *)a1 + 1);
  long long v10 = v7;
  sub_10021FE8C((uint64_t)&v10);
  sub_10021FE8C((uint64_t)&v9);
  swift_retain();
  sub_1001C3FEC(a2, v6);
  return sub_1004F21E0((uint64_t)v6, a1);
}

uint64_t sub_1001C3828()
{
  uint64_t v1 = sub_1000CBE70(&qword_10070ADA0);
  __chkstk_darwin(v1 - 8);
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_10070ADA8);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (unint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_10008BD6C() & 1) == 0) {
    return 0;
  }
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource]) {
    goto LABEL_52;
  }
  swift_retain();
  uint64_t v57 = sub_1004DD6E8();
  swift_release();
  [v0 loadViewIfNeeded];
  long long v7 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v7)
  {
    id v8 = [v7 visibleCells];
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    unint64_t v10 = (unint64_t)sub_100166F88(v9);
    swift_bridgeObjectRelease();
    unint64_t v58 = sub_100493194((uint64_t)_swiftEmptyArrayStorage);
    if (v10)
    {
      if (v10 >> 62)
      {
LABEL_47:
        swift_bridgeObjectRetain_n();
        uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v11) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11)
        {
LABEL_7:
          unint64_t v12 = v10 & 0xC000000000000001;
          uint64_t v13 = v57 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
          uint64_t v48 = v57 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
          swift_beginAccess();
          uint64_t v49 = v13;
          swift_beginAccess();
          uint64_t v14 = 4;
          int v54 = (void *)v10;
          uint64_t v53 = v11;
          unint64_t v52 = v10 & 0xC000000000000001;
          uint64_t v51 = isUniquelyReferenced_nonNull_native;
          unint64_t v50 = v6;
          do
          {
            if (v12) {
              uint64_t v15 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v15 = *(id *)(v10 + 8 * v14);
            }
            uint64_t v16 = v15;
            uint64_t v17 = v14 - 3;
            if (__OFADD__(v14 - 4, 1))
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
              goto LABEL_47;
            }
            uint64_t v18 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x1F8))();
            if (v18
              && (id v19 = (void *)v18,
                  int v20 = (void **)(v18 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node),
                  swift_beginAccess(),
                  int v21 = *v20,
                  swift_unknownObjectRetain(),
                  v19,
                  v21))
            {
              char v22 = *(unsigned char *)(v57 + 16);
              id v59 = v21;
              if (v22)
              {
                self;
                uint64_t v23 = swift_dynamicCastObjCClass();
                if (!v23) {
                  goto LABEL_54;
                }
                uint64_t v24 = v23;
                sub_1000CBC00(v49, isUniquelyReferenced_nonNull_native, &qword_10070ADA0);
                uint64_t v25 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
                uint64_t v26 = *(void *)(v25 - 8);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(isUniquelyReferenced_nonNull_native, 1, v25) == 1)goto LABEL_51; {
                uint64_t v61 = v24;
                }
                NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)();
                (*(void (**)(uint64_t, uint64_t))(v26 + 8))(isUniquelyReferenced_nonNull_native, v25);
              }
              else
              {
                id v27 = [v21 fpfs_fpItem];
                if (!v27) {
                  goto LABEL_54;
                }
                uint64_t v28 = v27;
                sub_1000CBC00(v48, v6, &qword_10070ADA8);
                uint64_t v29 = sub_1000CBE70(&qword_100719440);
                uint64_t v30 = *(void *)(v29 - 8);
                if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v30 + 48))(v6, 1, v29) == 1)
                {
                  __break(1u);
LABEL_51:
                  __break(1u);
LABEL_52:
                  __break(1u);
                  goto LABEL_53;
                }
                uint64_t v61 = (uint64_t)v28;
                NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)();

                (*(void (**)(unint64_t, uint64_t))(v30 + 8))(v6, v29);
              }
              uint64_t v31 = v62;
              uint64_t v32 = v63;
              unint64_t v10 = (unint64_t)v64;
              long long v60 = v65;
              if (v63)
              {
                swift_bridgeObjectRetain();
                uint64_t v56 = v60;
                swift_bridgeObjectRetain();
                swift_retain();
                id v55 = v16;
                unint64_t v33 = v58;
                uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v62 = v33;
                uint64_t v34 = v31;
                unint64_t v6 = sub_10017F0CC(v31, v32);
                uint64_t v36 = *(void *)(v33 + 16);
                BOOL v37 = (v35 & 1) == 0;
                uint64_t v38 = v36 + v37;
                if (__OFADD__(v36, v37)) {
                  goto LABEL_45;
                }
                char v39 = v35;
                if (*(void *)(v33 + 24) >= v38)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_100355AD4();
                  }
                }
                else
                {
                  sub_10034A3F4(v38, isUniquelyReferenced_nonNull_native);
                  unint64_t v40 = sub_10017F0CC(v34, v32);
                  if ((v39 & 1) != (v41 & 1)) {
                    goto LABEL_55;
                  }
                  unint64_t v6 = v40;
                }
                uint64_t isUniquelyReferenced_nonNull_native = v62;
                swift_bridgeObjectRelease();
                if (v39)
                {
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v6 >> 6) + 64) |= 1 << v6;
                  uint64_t v42 = *(void *)(isUniquelyReferenced_nonNull_native + 48) + 40 * v6;
                  *(void *)uint64_t v42 = v34;
                  *(void *)(v42 + 8) = v32;
                  *(void *)(v42 + 16) = v10;
                  *(_OWORD *)(v42 + 24) = v60;
                  *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 56) + 8 * v6) = _swiftEmptyArrayStorage;
                  uint64_t v43 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
                  uint64_t v44 = v43 + 1;
                  unint64_t v10 = __OFADD__(v43, 1);
                  swift_bridgeObjectRetain();
                  if (v10) {
                    goto LABEL_46;
                  }
                  *(void *)(isUniquelyReferenced_nonNull_native + 16) = v44;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_retain();
                }
                uint64_t v45 = *(void *)(isUniquelyReferenced_nonNull_native + 56);
                unint64_t v58 = isUniquelyReferenced_nonNull_native;
                swift_bridgeObjectRelease();
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((*(void *)(v45 + 8 * v6) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v45 + 8 * v6) & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                uint64_t v46 = v55;
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                swift_unknownObjectRelease();
                swift_release_n();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease_n();
                uint64_t isUniquelyReferenced_nonNull_native = v51;
                unint64_t v6 = v50;
              }
              else
              {

                swift_unknownObjectRelease();
              }
              unint64_t v10 = (unint64_t)v54;
              uint64_t v11 = v53;
              unint64_t v12 = v52;
            }
            else
            {
            }
            ++v14;
          }
          while (v17 != v11);
        }
      }
      swift_release();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_release();
    }
    return v58;
  }
  else
  {
LABEL_53:
    __break(1u);
LABEL_54:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_55:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C3FEC@<X0>(int64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070AD98);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (void **)((char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (id *)((char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v60 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (uint64_t *)((char *)&v60 - v15);
  __chkstk_darwin(v14);
  uint64_t v18 = (void **)((char *)&v60 - v17);
  if ((unint64_t)a1 >> 62)
  {
    uint64_t v58 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0) {
      uint64_t v58 = a1;
    }
    uint64_t v70 = v58;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    swift_bridgeObjectRetain();
    uint64_t v59 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a1 = v59;
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  }
  sub_1001C4E80(a1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000CBBA4((uint64_t)v6, &qword_10070AD98);
    uint64_t v19 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    int v21 = a2;
  }
  else
  {
    long long v65 = v11;
    unint64_t v68 = a2;
    uint64_t v22 = *(int *)(v7 + 48);
    uint64_t v23 = (char *)v18 + v22;
    uint64_t v24 = (char *)v6 + v22;
    uint64_t v25 = *v6;
    void *v18 = *v6;
    uint64_t v26 = type metadata accessor for IndexPath();
    id v27 = *(void **)(v26 - 8);
    uint64_t v63 = (void (*)(char *, char *, uint64_t))v27[4];
    unint64_t v64 = v27 + 4;
    v63(v23, v24, v26);
    uint64_t v28 = (char *)v16 + *(int *)(v7 + 48);
    *uint64_t v16 = v25;
    uint64_t v29 = (void (*)(char *, char *, uint64_t))v27[2];
    uint64_t v70 = v26;
    v29(v28, v23, v26);
    sub_10009E6C4(0, (unint64_t *)&unk_10070AD78);
    uint64_t v30 = v25;
    uint64_t v31 = (void *)UIView.doc_nearestAncestor<A>(ofType:)();

    if (v31)
    {
      uint64_t v32 = (void (*)(char *, uint64_t))v27[1];
      unint64_t v33 = v28;
      uint64_t v34 = v70;
      id v66 = v18;
      uint64_t v67 = v32;
      v32(v33, v70);
      uint64_t v62 = v7;
      uint64_t v35 = *(int *)(v7 + 48);
      uint64_t v36 = v69;
      BOOL v37 = &v69[v35];
      *(void *)uint64_t v69 = v30;
      uint64_t v69 = (char *)v29;
      uint64_t v38 = ((uint64_t (*)(char *, char *, uint64_t))v29)(&v36[v35], v23, v34);
      uint64_t v39 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v30) + 0x1F8))(v38);
      unint64_t v40 = v68;
      if (v39)
      {
        char v41 = (void *)v39;
        uint64_t v42 = (uint64_t *)(v39 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        uint64_t v43 = *v42;
        swift_unknownObjectRetain();

        v67(v37, v70);
        if (v43)
        {
          [v31 contentOffset];
          double v45 = v44;
          uint64_t v46 = v62;
          uint64_t v47 = *(int *)(v62 + 48);
          uint64_t v48 = v65;
          uint64_t v49 = (char *)v65 + v47;
          id *v65 = v30;
          uint64_t v61 = v23;
          unint64_t v50 = v23;
          uint64_t v51 = v70;
          unint64_t v52 = (void (*)(char *, char *, uint64_t))v69;
          ((void (*)(char *, char *, uint64_t))v69)((char *)v48 + v47, v50, v70);
          [v30 frame];
          double MinX = CGRectGetMinX(v71);

          v67(v49, v51);
          int v54 = (char *)v48 + *(int *)(v46 + 48);
          id *v48 = v30;
          v52(v54, v61, v51);
          sub_1000CBBA4((uint64_t)v66, (uint64_t *)&unk_100708EC0);

          id v55 = (char *)v68;
          void *v68 = v43;
          uint64_t v56 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
          v63(&v55[*(int *)(v56 + 20)], v54, v51);
          *(double *)&v55[*(int *)(v56 + 24)] = v45 - MinX;
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
        }

        unint64_t v40 = v68;
      }
      else
      {

        v67(v37, v70);
      }
      sub_1000CBBA4((uint64_t)v66, (uint64_t *)&unk_100708EC0);
      uint64_t v19 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
      int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
      int v21 = v40;
    }
    else
    {
      sub_1000CBBA4((uint64_t)v18, (uint64_t *)&unk_100708EC0);

      ((void (*)(char *, uint64_t))v27[1])(v28, v70);
      uint64_t v19 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
      int v20 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
      int v21 = v68;
    }
  }
  return v20(v21, 1, 1, v19);
}

void *sub_1001C465C@<X0>(char **a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_10070AD98);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (void *)((char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (id *)((char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (void *)((char *)v58 - v13);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v58 - v15;
  [v2 loadViewIfNeeded];
  uint64_t v17 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t result = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_23;
  }
  [result contentOffset];
  double v20 = v19;
  [v2 loadViewIfNeeded];
  uint64_t result = *(void **)&v2[v17];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  [result _effectiveContentInset];
  if (v20 != -v21)
  {
    long long v65 = v16;
    [v2 loadViewIfNeeded];
    uint64_t result = *(void **)&v2[v17];
    if (result)
    {
      id v24 = [result visibleCells];
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_1001C4E80(v25, (uint64_t)v6);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1000CBBA4((uint64_t)v6, &qword_10070AD98);
        uint64_t v26 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
        id v27 = *(uint64_t (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
        uint64_t v28 = a1;
        return (void *)v27(v28, 1, 1, v26);
      }
      uint64_t v62 = v11;
      uint64_t v63 = a1;
      uint64_t v29 = *(int *)(v7 + 48);
      uint64_t v30 = (char *)v65 + v29;
      uint64_t v31 = (char *)v6 + v29;
      uint64_t v32 = (void *)*v6;
      void *v65 = *v6;
      uint64_t v33 = type metadata accessor for IndexPath();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
      uint64_t v61 = v34 + 32;
      v60(v30, v31, v33);
      uint64_t v35 = *(int *)(v7 + 48);
      void *v14 = v32;
      uint64_t v36 = *(uint64_t (**)(void))(v34 + 16);
      unint64_t v64 = (char *)v14 + v35;
      uint64_t v59 = v30;
      uint64_t v37 = v36();
      uint64_t v38 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v32) + 0x1F8))(v37);
      if (v38)
      {
        uint64_t v39 = (void *)v38;
        v58[0] = v36;
        v58[1] = v34 + 16;
        unint64_t v40 = (char **)(v38 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        uint64_t v41 = v33;
        uint64_t v42 = *v40;
        swift_unknownObjectRetain();
        uint64_t v43 = v32;

        uint64_t v44 = v41;
        (*(void (**)(char *, uint64_t))(v34 + 8))(v64, v41);
        unint64_t v64 = v42;
        if (v42)
        {
          sub_1001C4D04(v43);
          double v46 = v45;
          [v2 loadViewIfNeeded];
          uint64_t result = *(void **)&v2[v17];
          uint64_t v47 = (uint64_t)v65;
          if (result)
          {
            [result bounds];
            CGFloat Height = CGRectGetHeight(v67);
            uint64_t v49 = v62;
            if (Height >= fabs(v46))
            {
              id v55 = (char *)v62 + *(int *)(v7 + 48);
              id *v62 = v43;
              ((void (*)(char *, char *, uint64_t))v58[0])(v55, v59, v44);
              sub_1000CBBA4(v47, (uint64_t *)&unk_100708EC0);

              uint64_t v56 = v63;
              *uint64_t v63 = v64;
              uint64_t v57 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
              v60((char *)v56 + *(int *)(v57 + 20), v55, v44);
              *(double *)((char *)v56 + *(int *)(v57 + 24)) = v46;
              return (void *)(*(uint64_t (**)(char **, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
            }

            unint64_t v50 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.error.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v51 = swift_allocObject();
            *(_OWORD *)(v51 + 16) = xmmword_10059B760;
            *(void *)(v51 + 56) = &type metadata for CGFloat;
            unint64_t v52 = sub_10021FD50();
            *(void *)(v51 + 64) = v52;
            *(double *)(v51 + 32) = v46;
            [v2 loadViewIfNeeded];
            uint64_t result = *(void **)&v2[v17];
            if (result)
            {
              [result bounds];
              CGFloat v53 = CGRectGetHeight(v68);
              *(void *)(v51 + 96) = &type metadata for CGFloat;
              *(void *)(v51 + 104) = v52;
              *(CGFloat *)(v51 + 72) = v53;
              os_log(_:dso:log:type:_:)();

              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v54 = (uint64_t)v65;
LABEL_19:
              sub_1000CBBA4(v54, (uint64_t *)&unk_100708EC0);
              uint64_t v26 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
              id v27 = *(uint64_t (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
              uint64_t v28 = v63;
              return (void *)v27(v28, 1, 1, v26);
            }
LABEL_26:
            __break(1u);
            return result;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v34 + 8))(v64, v33);
      }
      uint64_t v54 = (uint64_t)v65;
      goto LABEL_19;
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v22 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t v23 = *(uint64_t (**)(char **, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);

  return (void *)v23(a1, 1, 1, v22);
}

id sub_1001C4D04(void *a1)
{
  id result = [v1 loadViewIfNeeded];
  uint64_t v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v6 = v5;
  [a1 bounds];
  [v6 convertRect:a1 fromCoordinateSpace:];
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  CGFloat v12 = v11;
  CGFloat v14 = v13;

  [v1 loadViewIfNeeded];
  id result = *(id *)&v1[v4];
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  [result _effectiveContentInset];
  uint64_t v15 = *(void **)&v1[v4];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = sub_1000D5D88();
    if (v17)
    {
      uint64_t v18 = v17;
      [v17 bounds];
      [v18 convertRect:v16 toCoordinateSpace:];
      CGRectGetHeight(v19);

      id v16 = v18;
    }
  }
  v20.origin.x = v8;
  v20.origin.y = v10;
  v20.size.width = v12;
  v20.size.height = v14;
  CGRectGetMinY(v20);
  [v1 loadViewIfNeeded];
  id result = *(id *)&v1[v4];
  if (result) {
    return [result contentOffset];
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1001C4E80@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100166F88(a1);
  if (v4)
  {
    unint64_t v5 = (unint64_t)v4;
    id v6 = v2;
    double v7 = sub_100205914(v5, v6);
    swift_bridgeObjectRelease();

    id v16 = v7;
    swift_bridgeObjectRetain();
    sub_1001FCD18(&v16);
    swift_bridgeObjectRelease();
    CGFloat v8 = v16;
    uint64_t v9 = v16[2];
    uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    if (v9)
    {
      sub_1000CBC00((uint64_t)v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, (uint64_t *)&unk_100708EC0);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v10);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
    }
    return swift_release();
  }
  else
  {
    uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_100708EC0);
    CGFloat v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

void sub_1001C502C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a2) {
    return;
  }
  uint64_t v5 = *(void *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v5)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
  }
  else
  {
    CGFloat v8 = *(void **)v7;
    sub_10021FF88(a1, a2);
    id v9 = v8;
    unsigned __int8 v10 = [v9 doc_displaysSearchResults];

    if (v10) {
      goto LABEL_17;
    }
  }
  uint64_t v11 = *(void **)(v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
  if (v11)
  {
    id v12 = [v11 searchController];
    if (v12)
    {
      id v35 = v12;
      type metadata accessor for DOCSearchController();
      uint64_t v13 = swift_dynamicCastClass();
      if (v13)
      {
        uint64_t v14 = v13;
        uint64_t v15 = sub_10026E6C4();
        int64_t v16 = *((void *)v15 + 2);
        if (v16)
        {
          uint64_t v33 = v14;
          uint64_t v34 = a4;
          sub_100059E2C(0, v16, 0);
          uint64_t v17 = (uint64_t *)(v15 + 40);
          do
          {
            uint64_t v18 = *v17;
            uint64_t ObjectType = swift_getObjectType();
            CGRect v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
            swift_unknownObjectRetain();
            uint64_t v21 = v20(ObjectType, v18);
            uint64_t v23 = v22;
            swift_unknownObjectRelease();
            unint64_t v25 = _swiftEmptyArrayStorage[2];
            unint64_t v24 = _swiftEmptyArrayStorage[3];
            if (v25 >= v24 >> 1) {
              sub_100059E2C(v24 > 1, v25 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v25 + 1;
            uint64_t v26 = &_swiftEmptyArrayStorage[2 * v25];
            v26[4] = v21;
            v26[5] = v23;
            v17 += 2;
            --v16;
          }
          while (v16);
          swift_bridgeObjectRelease();
          a4 = v34;
          uint64_t v14 = v33;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t v27 = swift_getObjectType();
        uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(v27, a4);
        uint64_t v30 = sub_1001B5FA8(v28, v29, _swiftEmptyArrayStorage);
        char v32 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v32 & 1) == 0)
        {
          *(void *)(v14 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex) = v30;
          sub_100517F1C();
          sub_1005193E8();
          sub_10051AE0C();
        }
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        return;
      }
    }
  }
LABEL_17:
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
}

void sub_1001C5340()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_10009B1B8(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_familyFetcher);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  sub_1000A7258(*(void *)(v0
                          + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_blockToRunWhenMenuInteractionFinishedDismissing));
  swift_bridgeObjectRelease();
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemHierarchyEventListener);

  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastDropIndexPath, (uint64_t *)&unk_1007069A0);
  swift_release();
  swift_release();
  sub_10008BBF0(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);
  swift_bridgeObjectRelease();
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate);

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10021FC9C(*(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentLoadingProgress));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentFocusEngineIndexPath, (uint64_t *)&unk_1007069A0);
  sub_10008BBF0(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode, (uint64_t *)&unk_1007069A0);
  swift_bridgeObjectRelease();

  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___listLayoutConfiguration, (uint64_t *)&unk_10070AD20);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___collectionViewLayout));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage____headerContainerView));
  sub_1000D8158(*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___promptView));
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectWeakDestroy();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor, (uint64_t *)&unk_1007086D0);
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext, &qword_10070BBD0);
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo, (uint64_t *)&unk_10070AD30);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf);
  *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf) = 0;
  if (v3)
  {
    while (1)
    {
      id v6 = v3;
      if (!swift_isUniquelyReferenced()) {
        break;
      }
      uint64_t v4 = *(char **)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_activeDragStrongReferenceToSelf];
      uint64_t v5 = v4;

      uint64_t v3 = v4;
      if (!v4) {
        goto LABEL_6;
      }
    }
    uint64_t v3 = v6;
  }
LABEL_6:
}

void DOCItemCollectionViewController.__deallocating_deinit()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken];
  swift_beginAccess();
  if (*v2)
  {
    notify_cancel(*v2);
    *uint64_t v2 = 0;
  }
  sub_1001C310C(0);
  if (*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
    if (sub_10019EBA8(v3)) {
      sub_10019E3AC();
    }
    sub_1001B7400();
    v4.receiver = v1;
    v4.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
    [super dealloc];
  }
  else
  {
    __break(1u);
  }
}

id DOCItemCollectionViewController._contentOverlayInsets.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  return [super _contentOverlayInsets];
}

id DOCItemCollectionViewController._contentOverlayInsets.setter(CGFloat top, CGFloat left, CGFloat bottom, CGFloat right)
{
  if ([*(id *)(v4 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) shouldAdjustContentInset])
  {
    uint64_t v9 = type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v12 = v4;
    unsigned __int8 v10 = (objc_super *)&v12;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
    uint64_t v9 = type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v13 = v4;
    unsigned __int8 v10 = (objc_super *)&v13;
  }
  v10->super_class = (Class)v9;
  return -[objc_super _setContentOverlayInsets:](v10, "_setContentOverlayInsets:", top, left, bottom, right, v12);
}

void sub_1001C639C(char *a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v58 = (char *)&v53 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v53 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v53 - v12;
  [a1 loadViewIfNeeded];
  uint64_t v65 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v14 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v14) {
    goto LABEL_65;
  }
  unint64_t v15 = (unint64_t)[v14 numberOfSections];
  if ((v15 & 0x8000000000000000) != 0) {
    goto LABEL_60;
  }
  unint64_t v16 = v15;
  uint64_t v62 = v6;
  uint64_t v17 = v58;
  if (!v15)
  {
LABEL_48:
    a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
    id v51 = [a1 viewIfLoaded];
    id v52 = [v51 window];

    if (v52) {
      sub_1000A6988();
    }
    return;
  }
  uint64_t v60 = v11;
  uint64_t v61 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  uint64_t v55 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  uint64_t v59 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  uint64_t v18 = (void (**)(char *, uint64_t))(v3 + 8);
  id v66 = (void (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v19 = 0;
  uint64_t v57 = a1;
  unint64_t v54 = v15;
  while (1)
  {
    if (v19 == v16) {
      goto LABEL_58;
    }
    [a1 loadViewIfNeeded];
    CGRect v20 = *(void **)&a1[v65];
    if (!v20) {
      goto LABEL_64;
    }
    unint64_t v21 = (unint64_t)[v20 numberOfItemsInSection:v19];
    if ((v21 & 0x8000000000000000) != 0) {
      goto LABEL_59;
    }
    if (v21) {
      break;
    }
LABEL_5:
    ++v19;
    unint64_t v16 = v54;
    if (v19 == v54) {
      goto LABEL_48;
    }
  }
  unint64_t v64 = v21;
  swift_beginAccess();
  unint64_t v22 = v64;
  uint64_t v23 = 0;
  uint64_t v63 = v19;
  while (v22 != v23)
  {
    IndexPath.init(item:section:)();
    [a1 loadViewIfNeeded];
    unint64_t v24 = *(void **)&a1[v65];
    if (!v24) {
      goto LABEL_61;
    }
    id v25 = v24;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    unsigned __int8 v27 = [a1 collectionView:v25 shouldSelectItemAtIndexPath:isa];

    if (v27)
    {
      uint64_t v28 = *(void **)&a1[v61];
      if (!v28) {
        goto LABEL_62;
      }
      if ([v28 isGathering]) {
        int v29 = 0;
      }
      else {
        int v29 = a1[v55];
      }
      uint64_t v30 = *v66;
      (*v66)(v11, v13, v2);
      if (v29) {
        int v29 = IndexPath.item.getter() == 0;
      }
      char v31 = v11;
      char v32 = *v18;
      (*v18)(v31, v2);
      v30(v17, v13, v2);
      if (v29)
      {
        uint64_t v33 = IndexPath.section.getter();
        v32(v17, v2);
        if (!v33) {
          goto LABEL_45;
        }
      }
      else
      {
        v32(v17, v2);
      }
      uint64_t v34 = *(void *)v59;
      swift_bridgeObjectRetain();
      uint64_t v35 = IndexPath.section.getter();
      uint64_t v36 = *(void *)(v34 + 16);
      uint64_t v37 = v62;
      v30(v62, v13, v2);
      if (v35 >= v36)
      {
        swift_bridgeObjectRelease();
        v32(v37, v2);
        a1 = v57;
        uint64_t v17 = v58;
LABEL_45:
        v32(v13, v2);
        uint64_t v11 = v60;
        goto LABEL_12;
      }
      uint64_t v38 = IndexPath.item.getter();
      unint64_t v39 = IndexPath.section.getter();
      if ((v39 & 0x8000000000000000) != 0) {
        goto LABEL_52;
      }
      if (v39 >= *(void *)(v34 + 16)) {
        goto LABEL_53;
      }
      uint64_t v56 = v34 + 32;
      uint64_t v40 = *(void *)(v34 + 32 + 40 * v39 + 32);
      swift_beginAccess();
      unint64_t v41 = *(void *)(v40 + 16);
      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v17 = v58;
      v32(v62, v2);
      if (v38 >= v42)
      {
        swift_bridgeObjectRelease();
        a1 = v57;
        goto LABEL_45;
      }
      unint64_t v43 = IndexPath.section.getter();
      if ((v43 & 0x8000000000000000) != 0) {
        goto LABEL_54;
      }
      if (v43 >= *(void *)(v34 + 16)) {
        goto LABEL_55;
      }
      uint64_t v44 = *(void *)(v56 + 40 * v43 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v45 = IndexPath.item.getter();
      swift_beginAccess();
      uint64_t v46 = *(void *)(v44 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      if ((v46 & 0xC000000000000001) != 0)
      {
        uint64_t v47 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        a1 = v57;
      }
      else
      {
        a1 = v57;
        if ((v45 & 0x8000000000000000) != 0) {
          goto LABEL_56;
        }
        if (v45 >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_57;
        }
        uint64_t v47 = *(void **)(v46 + 8 * v45 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      if ((a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0
        || ([v47 isFolder] & 1) == 0)
      {
        [a1 loadViewIfNeeded];
        uint64_t v48 = *(void **)&a1[v65];
        if (!v48) {
          goto LABEL_63;
        }
        id v49 = v48;
        Class v50 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v49 selectItemAtIndexPath:v50 animated:0 scrollPosition:0];
        swift_unknownObjectRelease();

        goto LABEL_45;
      }
      v32(v13, v2);
      swift_unknownObjectRelease();
      uint64_t v11 = v60;
    }
    else
    {
      (*v18)(v13, v2);
    }
LABEL_12:
    ++v23;
    uint64_t v19 = v63;
    unint64_t v22 = v64;
    if (v64 == v23) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
}

id DOCItemCollectionViewController.open(node:animated:)(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BAD5C(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_1007069A0);
    id v16 = [a1 fpfs_fpItem];
    if (v16)
    {
      uint64_t v17 = v16;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1005A04F0;
      *(void *)(v18 + 32) = v17;
      unint64_t v35 = v18;
      specialized Array._endMutation()();
      unint64_t v19 = v35;
      id v20 = v17;
      sub_1001C7B0C(v19, v17);

      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      static Logger.UI.getter();
      int v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v29, v30))
      {
        char v31 = (uint8_t *)swift_slowAlloc();
        unint64_t v35 = swift_slowAlloc();
        *(_DWORD *)char v31 = 136315138;
        uint64_t v34 = sub_10009B0E4(0xD000000000000014, 0x80000001005DA2E0, (uint64_t *)&v35);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: node could not be found to be opened with App Intents", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      return (id)(*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v8, v6);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    id result = [v2 loadViewIfNeeded];
    uint64_t v22 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    uint64_t v23 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v23)
    {
      id v24 = v23;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v24 selectItemAtIndexPath:isa animated:a2 & 1 scrollPosition:0];

      id result = [v3 loadViewIfNeeded];
      uint64_t v26 = *(void **)&v3[v22];
      if (v26)
      {
        id v27 = v26;
        Class v28 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v3 collectionView:v27 performPrimaryActionForItemAtIndexPath:v28];

        return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C6FE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v15 = (char *)v55 - v14;
  char v16 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_shouldDeferRepositionInlineEditingCell];
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell] = v16;
  if (v16) {
    return result;
  }
  if (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename]) {
    return result;
  }
  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController];
  if (!v17) {
    return result;
  }
  uint64_t v59 = v8;
  uint64_t v62 = v6;
  uint64_t v63 = v13;
  if (!*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
  {
LABEL_40:
    __break(1u);
    return result;
  }
  uint64_t v18 = swift_retain();
  sub_10007CC5C(v18);
  swift_unknownObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  char v19 = Array<A>.contains(node:)();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v19 & 1) == 0)
  {
    return swift_release();
  }
  uint64_t v56 = v5;
  id v20 = *(void **)(v17 + 64);
  swift_unknownObjectRetain();
  unint64_t v21 = sub_10024511C(0xF4240uLL);
  static Logger.Rename.getter();
  swift_unknownObjectRetain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.debug.getter();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v65 = v17;
  uint64_t v70 = v20;
  unint64_t v64 = v4;
  unint64_t v69 = v21;
  uint64_t v57 = v9;
  v55[1] = v10;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    v72[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315650;
    LODWORD(v68) = v24;
    v71[0] = sub_10009B0E4(0xD000000000000019, 0x80000001005DD570, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2048;
    v71[0] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 22) = 2080;
    swift_getObjectType();
    uint64_t v27 = DOCNode.nodeDescription.getter();
    v71[0] = sub_10009B0E4(v27, v28, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v68, "%s (%ld): looking for cell for node: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v64;
    v55[0] = *(void *)(v10 + 8);
    ((void (*)(char *, uint64_t))v55[0])(v15, v57);
  }
  else
  {

    swift_unknownObjectRelease_n();
    v55[0] = *(void *)(v10 + 8);
    ((void (*)(char *, uint64_t))v55[0])(v15, v9);
  }
  int v29 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v30 = *(void *)v29;
  uint64_t v31 = v69;
  uint64_t v58 = *(void *)(*(void *)v29 + 16);
  if (!v58)
  {
LABEL_32:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56))(v4, 1, 1, v56);
LABEL_33:
    sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007069A0);
    uint64_t v47 = v63;
    static Logger.Rename.getter();
    swift_retain_n();
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      v72[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136315650;
      v71[0] = sub_10009B0E4(0xD000000000000019, 0x80000001005DD570, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v50 + 12) = 2048;
      v71[0] = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v50 + 22) = 2080;
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v51 = DOCNode.nodeDescription.getter();
      unint64_t v53 = v52;
      swift_unknownObjectRelease();
      v71[0] = sub_10009B0E4(v51, v53, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s %ld: FAILED!!!. Node: %s not found in itemCollection", (uint8_t *)v50, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_unknownObjectRelease();
      swift_release();

      uint64_t v54 = v63;
    }
    else
    {

      swift_release_n();
      swift_unknownObjectRelease();
      uint64_t v54 = v47;
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v55[0])(v54, v57);
  }
  uint64_t v61 = v30 + 32;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v32 = 0;
  uint64_t v60 = result;
  while (1)
  {
    if (v32 >= *(void *)(result + 16))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v33 = (void *)(v61 + 40 * v32);
    uint64_t v34 = v33[1];
    uint64_t v35 = v33[3];
    uint64_t v36 = v33[4];
    swift_beginAccess();
    unint64_t v37 = *(void *)(v36 + 16);
    uint64_t v67 = v34;
    uint64_t v68 = v35;
    uint64_t v66 = v36;
    if (v37 >> 62) {
      break;
    }
    uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v38) {
      goto LABEL_18;
    }
LABEL_14:
    ++v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v31 = v69;
    uint64_t v4 = v64;
    uint64_t result = v60;
    if (v32 == v58)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v38) {
    goto LABEL_14;
  }
LABEL_18:
  swift_getObjectType();
  uint64_t v39 = 0;
  while (1)
  {
    if ((v37 & 0xC000000000000001) != 0)
    {
      uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1)) {
        goto LABEL_38;
      }
    }
    else
    {
      uint64_t result = swift_unknownObjectRetain();
      uint64_t v40 = v39 + 1;
      if (__OFADD__(v39, 1))
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    swift_getObjectType();
    DOCNode.identifierKey.getter();
    DOCNode.identifierKey.getter();
    char v41 = static AnyHashable.== infix(_:_:)();
    sub_10008E17C((uint64_t)v71);
    sub_10008E17C((uint64_t)v72);
    if (v41) {
      break;
    }
    swift_unknownObjectRelease();
    ++v39;
    if (v40 == v38) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v64;
  IndexPath.init(item:section:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  uint64_t v42 = v62;
  uint64_t v43 = v56;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v4, 0, 1, v56);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v4, 1, v43);
  uint64_t v31 = v69;
  unint64_t v45 = v70;
  if (v44 == 1) {
    goto LABEL_33;
  }
  uint64_t v46 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v59, v4, v43);
  sub_1001F8408(v1, v45, 0xD000000000000019, 0x80000001005DD570, v31, v46);
  swift_unknownObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v46, v43);
}

uint64_t sub_1001C7B0C(unint64_t Available, void *a2)
{
  uint64_t v3 = v2;
  id v6 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
  uint64_t v7 = (char *)DOCPreviewController.init()();
  uint64_t v8 = v7;
  if (*(void *)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager]) {
    uint64_t v9 = &protocol witness table for DOCDocumentManager;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = &v7[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  swift_beginAccess();
  *((void *)v10 + 1) = v9;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  *(void *)&v8[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign();
  uint64_t v11 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t v12 = (void **)&v8[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
  swift_beginAccess();
  uint64_t v13 = *v12;
  *uint64_t v12 = v11;
  id v14 = v11;

  if (!(Available >> 62))
  {
    if (*(void *)((Available & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_9:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
    swift_bridgeObjectRelease();
    if (a2) {
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v20) {
    goto LABEL_9;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  if (a2)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    id v15 = a2;
    sub_1001B5B48((uint64_t)v15, Available, (unint64_t *)&qword_1007069C0);
    a2 = v16;
    char v18 = v17;
    swift_bridgeObjectRelease();

    int v19 = v18 & 1;
    goto LABEL_11;
  }
LABEL_10:
  int v19 = 1;
LABEL_11:
  DOCPreviewController.set(_:defaultIndex:)(Available, 0, 0, (unint64_t)a2, v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = qword_100704FD8;
  uint64_t v22 = v3;
  if (v21 != -1) {
    swift_once();
  }
  swift_beginAccess();
  swift_retain();
  _s5Files16DOCPreviewRouterC7present10contentsOf24contextIfPresentingInApp10didPresentyAA27DOCQLItemsPreviewControllerC_AC0jK7ContextVyycSgtF_0(v8, 1, v22, 0, 0);

  return swift_release();
}

void sub_1001C7DF4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v16 - v9;
  if ([a1 verticalSizeClass] == (id)1)
  {
    int v11 = 1;
  }
  else
  {
    UITraitCollection.doc_preferredLayoutSizeCategory.getter();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v8, enum case for DOCContentLayoutSizeCategory.extraLarge(_:), v4);
    sub_100078438((unint64_t *)&qword_10070AE68, (void (*)(uint64_t))&type metadata accessor for DOCContentLayoutSizeCategory);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v13 = v16[0];
    uint64_t v12 = v16[1];
    id v14 = *(void (**)(char *, uint64_t))(v5 + 8);
    v14(v8, v4);
    v14(v10, v4);
    int v11 = v12 == v13 && [a1 horizontalSizeClass] == (id)1;
  }
  id v15 = [v2 navigationController];
  sub_1001C8018(v11, v15, 1);
}

void sub_1001C8018(int a1, void *a2, int a3)
{
  uint64_t v4 = v3;
  int v34 = a3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = __chkstk_darwin(v13);
  char v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v19 = (char *)&v26 - v18;
  if (a2)
  {
    int v33 = a1;
    if (a1)
    {
      v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 1;
    }
    else
    {
      if (v34)
      {
        uint64_t v30 = v17;
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        id v20 = a2;
        uint64_t v28 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        UIAnimationDragCoefficient();
        + infix(_:_:)();
        uint64_t v27 = *(void (**)(char *, uint64_t))(v30 + 8);
        uint64_t v29 = v10;
        v30 += 8;
        v27(v16, v13);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v4;
        aBlock[4] = sub_10021FF20;
        aBlock[5] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        void aBlock[3] = &unk_1006975C8;
        uint64_t v22 = _Block_copy(aBlock);
        os_log_type_t v23 = v4;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        int v24 = (void *)v28;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v22);

        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v29);
        v27(v19, v13);
LABEL_11:
        [a2 setNavigationBarHidden:v33 & 1 animated:v34 & 1];

        return;
      }
      v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = 0;
    }
    id v25 = a2;
    sub_10001ECEC();
    goto LABEL_11;
  }
  v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsNavBarHiddenForRenaming] = a1 & 1;

  sub_10001ECEC();
}

void sub_1001C84C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    if (a1)
    {
      swift_getObjectType();
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = v10;
      v11[3] = a1;
      v11[4] = a4;
      v11[5] = a5;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      DOCNode.fpfs_fetchFPItem(completion:)();

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

void sub_1001C85DC(void *a1, uint64_t a2, unint64_t a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v68 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v69 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = (void *)type metadata accessor for DOCOperationItem();
  uint64_t v11 = *(v70 - 1);
  uint64_t v12 = __chkstk_darwin(v70);
  uint64_t v14 = (void **)((char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  char v16 = (uint64_t *)((char *)&v58 - v15);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      uint64_t v62 = Strong;
      uint64_t v18 = self;
      id v60 = a1;
      id v19 = a1;
      id v20 = [v18 defaultManager];
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      id v61 = v20;
      id v64 = v19;
      id v22 = [v20 eligibleActionsForDroppingItems:isa underItem:v19];

      type metadata accessor for FPAction(0);
      sub_100078438((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
      uint64_t v23 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v63 = a5;
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v24 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      id v25 = _swiftEmptyArrayStorage;
      uint64_t v66 = v24;
      uint64_t v67 = v9;
      uint64_t v65 = v23;
      if (v24)
      {
        unint64_t v72 = _swiftEmptyArrayStorage;
        sub_100190F0C(0, v24 & ~(v24 >> 63), 0);
        if (v24 < 0)
        {
          __break(1u);
          return;
        }
        uint64_t v59 = a4;
        id v25 = v72;
        if ((a3 & 0xC000000000000001) != 0)
        {
          uint64_t v26 = 0;
          uint64_t v27 = v66;
          do
          {
            *char v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            swift_storeEnumTagMultiPayload();
            unint64_t v72 = v25;
            unint64_t v29 = v25[2];
            unint64_t v28 = v25[3];
            if (v29 >= v28 >> 1)
            {
              sub_100190F0C(v28 > 1, v29 + 1, 1);
              id v25 = v72;
            }
            ++v26;
            v25[2] = v29 + 1;
            sub_10021FEB8((uint64_t)v16, (uint64_t)v25+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v29, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
          }
          while (v27 != v26);
        }
        else
        {
          uint64_t v30 = (void **)(a3 + 32);
          uint64_t v31 = v66;
          do
          {
            unint64_t v32 = a3;
            int v33 = *v30;
            void *v14 = *v30;
            swift_storeEnumTagMultiPayload();
            unint64_t v72 = v25;
            unint64_t v35 = v25[2];
            unint64_t v34 = v25[3];
            id v36 = v33;
            if (v35 >= v34 >> 1)
            {
              sub_100190F0C(v34 > 1, v35 + 1, 1);
              id v25 = v72;
            }
            v25[2] = v35 + 1;
            sub_10021FEB8((uint64_t)v14, (uint64_t)v25+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v35, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
            ++v30;
            --v31;
            a3 = v32;
          }
          while (v31);
        }
        a4 = v59;
        uint64_t v9 = v67;
      }
      unint64_t v37 = v69;
      static Logger.UI.getter();
      id v38 = v64;
      swift_bridgeObjectRetain();
      id v39 = v38;
      uint64_t v40 = Logger.logObject.getter();
      os_log_type_t v41 = static os_log_type_t.debug.getter();
      int v42 = v41;
      if (os_log_type_enabled(v40, v41))
      {
        uint64_t v43 = swift_slowAlloc();
        LODWORD(v64) = v42;
        uint64_t v44 = v43;
        uint64_t v70 = (void *)swift_slowAlloc();
        unint64_t v72 = v70;
        *(_DWORD *)uint64_t v44 = 136315906;
        uint64_t v71 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DBD50, (uint64_t *)&v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v44 + 12) = 2048;
        uint64_t v45 = v66;
        uint64_t v71 = v66;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v44 + 22) = 2048;
        uint64_t v71 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v44 + 32) = 2080;
        id v46 = [v39 displayName];
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v49 = v48;

        uint64_t v71 = sub_10009B0E4(v47, v49, (uint64_t *)&v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v64, "%s Requested to move %ld items. Moving %ld eligible to newly created folder: %s", (uint8_t *)v44, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v67);
      }
      else
      {

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v68 + 8))(v37, v9);
      }
      id v50 = FPActionReparent;
      char v51 = sub_1005350BC();

      swift_bridgeObjectRelease();
      if (v51)
      {
        uint64_t v52 = swift_allocObject();
        uint64_t v53 = v63;
        *(void *)(v52 + 16) = a4;
        *(void *)(v52 + 24) = v53;
        id v39 = v39;
        swift_retain();
        uint64_t v54 = v61;
        uint64_t v55 = v62;
        sub_100535854(0, (uint64_t)v25, v60, 1, 1, 0, v62, (void (*)(void))sub_10021E2B4, v52);
        swift_release();

        swift_bridgeObjectRelease();
        uint64_t v56 = v54;
        uint64_t v57 = v39;
      }
      else
      {
        swift_bridgeObjectRelease();
        a4(1);
        uint64_t v57 = v61;
        uint64_t v56 = v62;
      }

      uint64_t Strong = v39;
    }
  }
}

uint64_t sub_1001C8D50(unint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v19[1] = a3;
    id v20 = a2;
    uint64_t v12 = swift_slowAlloc();
    v19[0] = swift_slowAlloc();
    uint64_t v23 = v19[0];
    *(_DWORD *)uint64_t v12 = 136315906;
    uint64_t v21 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DBD50, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 1024;
    LODWORD(v21) = a1 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 18) = 2080;
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v13 = 0;
    }
    uint64_t v21 = v13;
    BOOL v22 = a1 == 0;
    sub_1000CBE70(&qword_100708778);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v21 = sub_10009B0E4(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 28) = 2080;
    uint64_t v21 = a1;
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_10070AC10);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v21 = sub_10009B0E4(v16, v17, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s Requested move finished with success: %{BOOL}d moved: %s items. Items: %s", (uint8_t *)v12, 0x26u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    a2 = v20;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return a2(a1 != 0);
}

id DOCItemCollectionViewController.view.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  id v1 = [super view];

  return v1;
}

void DOCItemCollectionViewController.view.setter(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super setView:a1];
  [v1 setContentScrollView:*(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView] forEdge:15];
}

char *sub_1001C917C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    if (a2 == 0xD000000000000024 && a3 == 0x80000001005D2340
      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_1001C9560();
    }
    else if (a2 == 0xD000000000000024 && a3 == 0x80000001005DA300 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      sub_1001C9A8C();
    }
    else
    {
      if (qword_100704F68 != -1) {
        swift_once();
      }
      if ((qword_100736F40 == a2 && *(void *)algn_100736F48 == a3
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && ((sub_10008BD6C() & 1) != 0 || (sub_10001F094() & 1) != 0))
      {
        uint64_t v7 = sub_1001C9ED8();
      }
      else
      {
        unint64_t v15 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.fault.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_10059B760;
        *(void *)(v16 + 56) = &type metadata for String;
        unint64_t v17 = sub_100073F48();
        *(void *)(v16 + 64) = v17;
        *(void *)(v16 + 32) = a2;
        *(void *)(v16 + 40) = a3;
        type metadata accessor for IndexPath();
        sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        swift_bridgeObjectRetain();
        uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v16 + 96) = &type metadata for String;
        *(void *)(v16 + 104) = v17;
        *(void *)(v16 + 72) = v18;
        *(void *)(v16 + 80) = v19;
        os_log(_:dso:log:type:_:)();

        swift_bridgeObjectRelease();
        uint64_t v7 = (char *)[objc_allocWithZone((Class)UICollectionReusableView) init];
      }
    }
    uint64_t v13 = v7;
  }
  else
  {
    uint64_t v8 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.fault.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10059B760;
    *(void *)(v9 + 56) = &type metadata for String;
    unint64_t v10 = sub_100073F48();
    *(void *)(v9 + 64) = v10;
    *(void *)(v9 + 32) = a2;
    *(void *)(v9 + 40) = a3;
    type metadata accessor for IndexPath();
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    swift_bridgeObjectRetain();
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v9 + 96) = &type metadata for String;
    *(void *)(v9 + 104) = v10;
    *(void *)(v9 + 72) = v11;
    *(void *)(v9 + 80) = v12;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return (char *)[objc_allocWithZone((Class)UICollectionReusableView) init];
  }
  return v13;
}

void sub_1001C9560()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v0 loadViewIfNeeded];
  uint64_t v6 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v7 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v7) {
    goto LABEL_19;
  }
  id v8 = v7;
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [v8 dequeueReusableSupplementaryViewOfKind:v9 withReuseIdentifier:v10 forIndexPath:isa];

  id v13 = [v12 subviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v14 >> 62))
  {
    unint64_t v15 = *(void **)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v16 = &selRef_cellForItemAtIndexPath_;
    if (!v15) {
      goto LABEL_8;
    }
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  unint64_t v15 = (void *)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v16 = &selRef_cellForItemAtIndexPath_;
  if (v15)
  {
LABEL_4:
    if ((v14 & 0xC000000000000001) != 0)
    {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_7;
    }
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v17 = *(id *)(v14 + 32);
LABEL_7:
      unint64_t v15 = v17;
      goto LABEL_8;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_8:
  swift_bridgeObjectRelease();
  [v15 removeFromSuperview];

  if (sub_100026738())
  {
    id v18 = sub_10002F164();
    sub_10002E650();
    [v12 addSubview:v18];
    id v19 = [v18 leadingAnchor];
    id v20 = [v12 leadingAnchor];
    [v1 v16[5]];
    uint64_t v21 = *(void **)&v1[v6];
    if (v21)
    {
      [v21 layoutMargins];
      UIEdgeInsets.horizontalInsets.getter();
      id v23 = [v19 constraintEqualToAnchor:v20 constant:v22 * 0.5];

      [v23 setActive:1];
      id v24 = [v18 trailingAnchor];
      id v25 = [v12 trailingAnchor];
      [v1 loadViewIfNeeded];
      uint64_t v26 = *(void **)&v1[v6];
      if (v26)
      {
        [v26 layoutMargins];
        UIEdgeInsets.horizontalInsets.getter();
        id v28 = [v24 constraintEqualToAnchor:v25 constant:v27 * -0.5];

        [v28 setActive:1];
        id v29 = [v18 bottomAnchor];
        id v30 = [v12 bottomAnchor];
        id v31 = [v29 constraintEqualToAnchor:v30 constant:0.0];

        [v31 setActive:1];
        id v32 = [v18 topAnchor];
        id v33 = [v12 topAnchor];
        id v34 = [v32 constraintEqualToAnchor:v33 constant:0.0];

        [v34 setActive:1];
        return;
      }
      goto LABEL_21;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return;
  }
  static Logger.UI.getter();
  unint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    unint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Collection view requested global header but headerContainerView is nil, returning an empty view.", v37, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1001C9A8C()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits];
  if (!v1 || *(unsigned char *)(v1 + 544) != 2 || (uint64_t v2 = (void *)sub_1002099D4(1)) == 0)
  {
    [v0 loadViewIfNeeded];
    uint64_t v26 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v26)
    {
      id v27 = v26;
      NSString v28 = String._bridgeToObjectiveC()();
      NSString v3 = String._bridgeToObjectiveC()();
      v25.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v27 dequeueReusableSupplementaryViewOfKind:v28 withReuseIdentifier:v3 forIndexPath:v25.super.isa];

      goto LABEL_14;
    }
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  NSString v3 = v2;
  [v0 loadViewIfNeeded];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    id v5 = v4;
    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v9 = [v5 dequeueReusableSupplementaryViewOfKind:v6 withReuseIdentifier:v7 forIndexPath:isa];

    id v10 = [v9 subviews];
    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      id v12 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v12) {
        goto LABEL_11;
      }
    }
    else
    {
      id v12 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v12)
      {
LABEL_11:
        swift_bridgeObjectRelease();
        [v12 removeFromSuperview];

        [v9 addSubview:v3];
        unint64_t v14 = self;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v15 = swift_allocObject();
        *(_OWORD *)(v15 + 16) = xmmword_1005A00D0;
        id v16 = [v3 leadingAnchor];
        id v17 = [v9 leadingAnchor];
        id v18 = [v16 constraintEqualToAnchor:v17];

        *(void *)(v15 + 32) = v18;
        id v19 = [v3 bottomAnchor];
        id v20 = [v9 bottomAnchor];
        id v21 = [v19 constraintEqualToAnchor:v20];

        *(void *)(v15 + 40) = v21;
        id v22 = [v3 trailingAnchor];
        id v23 = [v9 trailingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        *(void *)(v15 + 48) = v24;
        specialized Array._endMutation()();
        sub_10009E6C4(0, (unint64_t *)&unk_100706720);
        v25.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v14 activateConstraints:v25.super.isa];
LABEL_14:

        return;
      }
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_10;
    }
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v13 = *(id *)(v11 + 32);
LABEL_10:
      id v12 = v13;
      goto LABEL_11;
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_20:
  __break(1u);
}

char *sub_1001C9ED8()
{
  uint64_t v1 = sub_1000CBE70(&qword_10070ADA0);
  __chkstk_darwin(v1 - 8);
  NSString v3 = (char *)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_10070ADA8);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (char *)[v0 loadViewIfNeeded];
  id v8 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v8)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v9 = v8;
  NSString v10 = String._bridgeToObjectiveC()();
  NSString v11 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v13 = [v9 dequeueReusableSupplementaryViewOfKind:v10 withReuseIdentifier:v11 forIndexPath:isa];

  type metadata accessor for DOCItemCollectionViewSectionHeader();
  unint64_t v14 = (char *)swift_dynamicCastClassUnconditional();
  if (IndexPath.count.getter() == 2)
  {
    uint64_t result = (char *)IndexPath.section.getter();
    unint64_t v15 = (unint64_t)result;
  }
  else
  {
    type metadata accessor for IndexPath();
    sub_100078438(&qword_10070AE78, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    dispatch thunk of Collection.startIndex.getter();
    uint64_t result = (char *)dispatch thunk of Collection.endIndex.getter();
    if (v32[0] == v33[0])
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    id v16 = (uint64_t (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    unint64_t v15 = (unint64_t)*v17;
    uint64_t result = (char *)v16(v33, 0);
  }
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource])
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  swift_retain();
  uint64_t v18 = sub_1004DD6E8();
  swift_release();
  if (*(unsigned char *)(v18 + 16))
  {
    uint64_t v19 = v18 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
    swift_beginAccess();
    sub_1000CBC00(v19, (uint64_t)v3, &qword_10070ADA0);
    uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v3, 1, v20);
    if (result == 1)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v22 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v20);
    goto LABEL_12;
  }
  uint64_t v23 = v18 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
  swift_beginAccess();
  sub_1000CBC00(v23, (uint64_t)v6, &qword_10070ADA8);
  uint64_t v24 = sub_1000CBE70(&qword_100719440);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t result = (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v6, 1, v24);
  if (result != 1)
  {
    uint64_t v22 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
LABEL_12:
    uint64_t result = (char *)swift_release();
    if ((v15 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v15 < *(void *)(v22 + 16))
    {
      uint64_t v26 = (void *)(v22 + 40 * v15);
      uint64_t v28 = v26[4];
      uint64_t v27 = v26[5];
      uint64_t v30 = v26[6];
      uint64_t v29 = v26[7];
      uint64_t v31 = v26[8];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      v33[0] = v28;
      v33[1] = v27;
      void v33[2] = v30;
      v33[3] = v29;
      v33[4] = v31;
      sub_1001DE428(v14, v33);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    __break(1u);
    goto LABEL_17;
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_1001CA378(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  void v7[4] = sub_1002212A0;
  v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_1000666D8;
  v7[3] = &unk_100698400;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a1;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

void sub_1001CA450(void *a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCFileEntity();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5 - 8);
  id v9 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSString v11 = (char *)&v20 - v10;
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v13 = (void *)Strong;
      id v14 = a1;
      sub_100162CCC(v14, (uint64_t)v11);
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
      sub_10008BCB8((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for DOCFileEntity);
      type metadata accessor for MainActor();
      id v16 = v13;
      uint64_t v17 = static MainActor.shared.getter();
      unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v19 = (void *)swift_allocObject();
      void v19[2] = v17;
      v19[3] = &protocol witness table for MainActor;
      v19[4] = v16;
      sub_10021FEB8((uint64_t)v9, (uint64_t)v19 + v18, (uint64_t (*)(void))type metadata accessor for DOCFileEntity);
      sub_10003D154((uint64_t)v4, (uint64_t)&unk_10070AEC0, (uint64_t)v19);

      swift_release();
      sub_10008BBF0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCFileEntity);
    }
  }
}

void sub_1001CA6D8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v8 + ((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = a1;
  aBlock[4] = sub_100221120;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100698338;
  id v9 = _Block_copy(aBlock);
  id v10 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
}

uint64_t sub_1001CA888()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v11 = 0u;
    long long v12 = 0u;
LABEL_10:
    sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
    goto LABEL_11;
  }
  uint64_t v1 = v0;
  type metadata accessor for DOCCollaborationHighlightManager();
  static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.getter();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10008E070((uint64_t)v10), (v3 & 1) != 0))
  {
    sub_10009B208(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    goto LABEL_10;
  }
  sub_1000CBE70(&qword_10070AEB0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    swift_beginAccess();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_10007A41C(v8, 257);
    return swift_bridgeObjectRelease();
  }
  uint64_t v4 = (void *)v10[0];
  swift_beginAccess();
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_10020A268(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v7 = sub_10003B398((unint64_t)v6);
  swift_bridgeObjectRelease();
  sub_1001D96D0((uint64_t)v7);
  return swift_bridgeObjectRelease();
}

void *sub_1001CAA48(double a1, double a2)
{
  char v3 = v2;
  uint64_t v6 = sub_10004A150(&off_10068A208);
  swift_arrayDestroy();
  char v7 = sub_100053E14(v6, *v2);
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0 && *((double *)v3 + 1) == a1 && *((double *)v3 + 2) == a2) {
    return v3[3];
  }
  else {
    return 0;
  }
}

void sub_1001CAB04(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v1)
  {
    id v3 = v1;
    id v4 = [v3 traitCollection];
    [v3 frame];
    uint64_t v6 = v5;
    uint64_t v8 = v7;
    [v3 contentOffset];
    id v9 = (void *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration);
    id v12 = *(id *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration);
    void *v9 = v4;
    v9[1] = v6;
    _OWORD v9[2] = v8;
    v9[3] = v10;
    v9[4] = v11;
  }
}

void sub_1001CABE4(char *a1)
{
  uint64_t v1 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v1)
  {
    id v3 = v1;
    id v4 = [a1 traitCollection];
    [v3 frame];
    sub_1001CACB8(v5, v6);

    uint64_t v7 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
    id v8 = *(id *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
    *((void *)v7 + 4) = 0;
    *(_OWORD *)uint64_t v7 = 0u;
    *((_OWORD *)v7 + 1) = 0u;
  }
}

void sub_1001CACB8(double a1, double a2)
{
  id v3 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preSnapshotConfiguration];
  if (!v3) {
    return;
  }
  id v4 = v2;
  id v7 = v3;
  double v8 = COERCE_DOUBLE(sub_1001CAA48(a1, a2));
  double v10 = v9;
  char v12 = v11;

  if (v12) {
    return;
  }
  [v4 loadViewIfNeeded];
  uint64_t v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  id v14 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v14)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  double v15 = v8;
  double v16 = v10;
  [v14 contentOffset];
  if (v18 == v8 && v17 == v10) {
    return;
  }
  [v4 loadViewIfNeeded];
  uint64_t v20 = *(void **)&v4[v13];
  if (!v20) {
    goto LABEL_28;
  }
  [v20 _effectiveContentInset];
  double v22 = v21;
  [v4 loadViewIfNeeded];
  uint64_t v23 = *(void **)&v4[v13];
  if (!v23)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v24 = v23;
  [v24 _effectiveContentInset];
  double v26 = v25;
  id v27 = [v24 collectionViewLayout];
  [v27 collectionViewContentSize];
  double v29 = v28;

  [v24 bounds];
  double Height = CGRectGetHeight(v40);
  [v24 _effectiveContentInset];
  double v32 = v31;

  [v4 loadViewIfNeeded];
  id v33 = *(void **)&v4[v13];
  if (!v33)
  {
LABEL_30:
    __break(1u);
    return;
  }
  double v34 = v29 - Height + v32;
  if (v34 < -v26) {
    double v34 = -v26;
  }
  if (v34 >= v16) {
    double v35 = v16;
  }
  else {
    double v35 = v34;
  }
  double v36 = -v22;
  BOOL v37 = v34 < v16 || v16 < v36;
  double v38 = 0.0;
  if (!v37) {
    double v38 = v15;
  }
  if (v16 < v36) {
    double v35 = -v22;
  }

  [v33 setContentOffset:0 animated:v38];
}

id DOCItemCollectionViewController.undoManager.getter()
{
  id v0 = [self shared];

  return v0;
}

BOOL DOCItemCollectionViewController.canBecomeFirstResponder.getter()
{
  return [v0 _appearState] - 1 < 2;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.resignFirstResponder()()
{
  uint64_t v1 = v0;
  unint64_t v2 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v11.receiver = v0;
  v11.super_class = v2;
  unsigned int v3 = [super resignFirstResponder];
  if (!v3) {
    goto LABEL_5;
  }
  id v4 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v4 == 2) {
    goto LABEL_5;
  }
  Swift::Bool result = [v1 loadViewIfNeeded];
  double v6 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v6)
  {
    id v7 = v6;
    sub_1001CB11C();

LABEL_5:
    double v8 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
    *(void *)(v9 + 56) = v2;
    *(void *)(v9 + 64) = sub_100078438(&qword_10070A288, (void (*)(uint64_t))type metadata accessor for DOCItemCollectionViewController);
    *(void *)(v9 + 32) = v1;
    double v10 = v1;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CB11C()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v1 - 8);
  unsigned int v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState)
     + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess();
  swift_retain();
  sub_10008C318((uint64_t)v3, v6, (uint64_t *)&unk_1007069A0);
  swift_endAccess();
  uint64_t result = swift_release();
  uint64_t v8 = *(void *)(v0 + v5);
  if (*(unsigned char *)(v8 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) == 1)
  {
    uint64_t v9 = v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v12 = v8 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
      swift_beginAccess();
      sub_1000CBC00(v12, (uint64_t)v3, (uint64_t *)&unk_1007069A0);
      (*(void (**)(uint64_t, _UNKNOWN **, char *, uint64_t, uint64_t))(v10 + 16))(v0, &off_1006AF4A8, v3, ObjectType, v10);
      swift_unknownObjectRelease();
      return sub_1000CBBA4((uint64_t)v3, (uint64_t *)&unk_1007069A0);
    }
  }
  return result;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.becomeFirstResponder()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  return [super becomeFirstResponder];
}

void sub_1001CB36C(void *a1)
{
  objc_super v2 = v1;
  if (([v2 isFirstResponder] & 1) == 0)
  {
    id v4 = [self keyWindow];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [v4 firstResponder];

      if (v6)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        id v7 = (char *)swift_dynamicCastClass();
        if (v7) {
          goto LABEL_7;
        }
      }
    }
  }
  id v7 = v2;
LABEL_7:
  uint64_t v12 = v7;
  [v7 loadViewIfNeeded];
  uint64_t v8 = *(void **)&v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v8)
  {
    id v9 = v8;
    id v10 = [a1 input];
    if (v10)
    {

      uint64_t v11 = sub_1002E0D78();
      sub_10029F484(v11, ((unint64_t)[a1 modifierFlags] >> 18) & 2 | ((unint64_t)objc_msgSend(a1, "modifierFlags") >> 17) & 1);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCItemCollectionViewController.selectAll(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
  uint64_t result = swift_beginAccess();
  unint64_t v5 = *(void *)(v3 + 8);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 < 1) {
      return result;
    }
  }
  else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return result;
  }
  uint64_t v6 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001CB63C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  if ([v2 canPerformAction:"selectAll:" withSender:0])
  {
    unint64_t v5 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
    if (!swift_unknownObjectWeakLoadStrong()
      || (uint64_t v6 = *((void *)v5 + 1),
          uint64_t ObjectType = swift_getObjectType(),
          LOBYTE(v6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 40))(v2, ObjectType, v6),
          swift_unknownObjectRelease(),
          (v6 & 1) != 0))
    {
      if (a2) {
        [v2 setEditing:1 animated:1];
      }
      uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
      if ((v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
      {
        v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
        sub_1001C639C(v3);
        v3[v8] = 0;
      }
    }
  }
}

void DOCItemCollectionViewController.copy(_:)(uint64_t a1)
{
  objc_super v2 = v1;
  id v4 = &v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v5 = *((void *)v4 + 1);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (void *)(*(uint64_t (**)(char *, const char *, uint64_t, uint64_t, uint64_t))(v5 + 32))(v2, "copy:", a1, ObjectType, v5);
  if (!v7) {
    goto LABEL_12;
  }
  id v33 = v7;
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v8 = swift_dynamicCastClass();
  if (!v8)
  {

LABEL_12:
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v9 = (void *)v8;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  if ((static NSObject.== infix(_:_:)() & 1) == 0)
  {
    sub_1000CBC00(a1, (uint64_t)&v34, (uint64_t *)&unk_100705D60);
    uint64_t v20 = *((void *)&v35 + 1);
    if (*((void *)&v35 + 1))
    {
      double v21 = sub_1000A6B78(&v34, *((uint64_t *)&v35 + 1));
      uint64_t v22 = *(void *)(v20 - 8);
      __chkstk_darwin(v21);
      id v24 = (char *)&v32 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v24);
      uint64_t v25 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
      sub_10009B1B8((uint64_t)&v34);
    }
    else
    {
      uint64_t v25 = 0;
    }
    [v9 copy:v25];
    swift_unknownObjectRelease();
LABEL_30:
    swift_unknownObjectRelease();

    return;
  }
  unint64_t v10 = (unint64_t)sub_10003B6F8(0);
  if (v10 >> 62) {
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v11 >= 1)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;
    double v15 = sub_10003B6F8(0);
    uint64_t v16 = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v16)
    {
      __break(1u);
      return;
    }
    double v17 = v15;
    uint64_t v18 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v18 + 16)) {
      uint64_t v19 = *(void *)(*(void *)v18 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    }
    else {
      uint64_t v19 = *(void *)(v18 + 8);
    }
    swift_unknownObjectRetain();
    long long v34 = 0u;
    long long v35 = 0u;
    id v26 = DOCItemCollectionViewController.actionContext(from:)();
    sub_1000CBBA4((uint64_t)&v34, (uint64_t *)&unk_100705D60);
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
    if (All)
    {
      unint64_t v28 = All;
      double v32 = v17;
      unint64_t v29 = v14;
      uint64_t v30 = v12;
      if (v19)
      {
        swift_getObjectType();
        double v31 = (void *)DOCNode.fpfs_syncFetchFPItem()();
      }
      else
      {
        double v31 = 0;
      }
      DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v30, v29, v28, v31, (uint64_t)v26);
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v2 setEditing:0 animated:1];
    goto LABEL_30;
  }
  swift_unknownObjectRelease();
}

uint64_t sub_1001CBB70(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v9);

  return sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100705D60);
}

void DOCItemCollectionViewController.paste(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v7 = (id)(*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, "paste:", a1, ObjectType, v4);
  if (v7)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    id v6 = (void *)swift_dynamicCastClass();
    if (v6)
    {
      [v6 pasteboardPasteInCollectionView:0];
      swift_unknownObjectRelease();

      return;
    }
  }

  swift_unknownObjectRelease();
}

void DOCItemCollectionViewController.delete(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v6 = (id)(*(uint64_t (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t))(v4 + 32))(v1, "delete:", a1, ObjectType, v4);
  if (v6)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    if (swift_dynamicCastClass())
    {
      sub_1001CC7C0();
      swift_unknownObjectRelease();

      return;
    }
  }

  swift_unknownObjectRelease();
}

void sub_1001CBE50()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v1)
  {
    __break(1u);
    return;
  }
  objc_super v2 = v0;
  uint64_t v3 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v3 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v4 = *(void *)(v3 + 8);
    swift_unknownObjectRetain();
    if (!v4) {
      return;
    }
  }
  swift_getObjectType();
  uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1003EA75C(v5, v2, 1);

    if (v7 >= 1) {
      [v2 pasteboardMoveToCollectionView:0];
    }
  }

  swift_unknownObjectRelease();
}

void sub_1001CBF50()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v1)
    {
      __break(1u);
      return;
    }
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v2 + 16))
    {
      uint64_t v3 = *(void *)(*(void *)v2 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v3 = *(void *)(v2 + 8);
      swift_unknownObjectRetain();
      if (!v3) {
        return;
      }
    }
    uint64_t v4 = _swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v4 = (void *)_bridgeCocoaArray<A>(_:)();
    }
    swift_getObjectType();
    sub_10020032C(v3, (uint64_t)v4);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001CC090(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100705D60);
}

uint64_t sub_1001CC114(uint64_t result, char a2)
{
  uint64_t v3 = v2;
  char v4 = result;
  if ((a2 & 1) == 0
    || (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) == 0
    && ((*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
     || !*(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)))
  {
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v5)
    {
      __break(1u);
      return result;
    }
    uint64_t v6 = v5 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v6 + 16))
    {
      uint64_t v7 = *(void *)(*(void *)v6 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t result = swift_unknownObjectRetain();
      if (!v7) {
        return result;
      }
    }
    if (v4)
    {
      sub_10003B6F8(0);
      sub_1000CBE70((uint64_t *)&unk_100706730);
      unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t Available = (unint64_t)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    if (Available >> 62)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v9 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      swift_bridgeObjectRelease();
      uint64_t v9 = Available;
    }
    swift_getObjectType();
    sub_10020032C(v7, v9);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1001CC2C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    uint64_t v6 = a1;
    uint64_t v7 = (void *)FPActionImportHere;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = v6;
    v14[0] = inited;
    specialized Array._endMutation()();
    id v9 = v6;
    LOBYTE(v6) = sub_1000301E0(v7, v14[0]);
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v10 = swift_allocObject();
      swift_beginAccess();
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      uint64_t v12 = (void *)swift_allocObject();
      void v12[2] = v10;
      v12[3] = a3;
      v12[4] = a4;
      v14[4] = (unint64_t)sub_10021DE78;
      void v14[5] = (unint64_t)v12;
      v14[0] = (unint64_t)_NSConcreteStackBlock;
      v14[1] = 1107296256;
      void v14[2] = (unint64_t)sub_1000666D8;
      v14[3] = (unint64_t)&unk_100696100;
      unint64_t v13 = _Block_copy(v14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v13);
    }
  }
}

uint64_t sub_1001CC47C(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    sub_1001DE248();
    uint64_t v7 = sub_1001CC740();
    uint64_t v9 = v8;
    if (a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    sub_1001CC530(v7, v9, a2, (uint64_t)v10);
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001CC530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload) == 1) {
    sub_1000D54D8();
  }
  *(unsigned char *)(v4 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) = 1;
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = static MainActor.shared.getter();
  double v15 = (void *)swift_allocObject();
  _OWORD v15[2] = v14;
  void v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  v15[5] = a1;
  v15[6] = a2;
  v15[7] = a3;
  v15[8] = a4;
  swift_release();
  uint64_t v16 = sub_10003D154((uint64_t)v11, (uint64_t)&unk_10070ABF8, (uint64_t)v15);
  swift_beginAccess();
  swift_retain();
  sub_10003CD38(&v19, v16);
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_1001CC740()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___untitledFolderName + 8))
  {
    uint64_t v2 = *v1;
  }
  else
  {
    type metadata accessor for DOCCreateFolderOperation();
    uint64_t v2 = static DOCCreateFolderOperation.untitledFolderName.getter();
    *uint64_t v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

id sub_1001CC7C0()
{
  uint64_t v1 = v0;
  unint64_t v2 = (unint64_t)sub_10003B6F8(0);
  if (v2 >> 62) {
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id result = (id)swift_bridgeObjectRelease();
  if (v3 >= 1)
  {
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration]
       + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type;
    if (*(unsigned char *)(v5 + 8) == 1)
    {
      uint64_t v6 = *(void **)v5;
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
      {
        id v24 = v6;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v13 = v6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v12 & 1) == 0) {
          goto LABEL_10;
        }
      }
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v16 = v25;
      id result = sub_10003B6F8(0);
      uint64_t v26 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
      if (v26)
      {
        uint64_t v27 = v26 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if (*(unsigned char *)(v27 + 16)) {
          uint64_t v28 = *(void *)(*(void *)v27 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
        }
        else {
          uint64_t v28 = *(void *)(v27 + 8);
        }
        swift_unknownObjectRetain();
        long long v30 = 0u;
        long long v31 = 0u;
        id v20 = DOCItemCollectionViewController.actionContext(from:)();
        sub_1000CBBA4((uint64_t)&v30, (uint64_t *)&unk_100705D60);
        sub_1000CBE70((uint64_t *)&unk_100706730);
        uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
        if (All)
        {
          unint64_t v22 = All;
          if (v28) {
            goto LABEL_16;
          }
          goto LABEL_24;
        }
LABEL_26:

        swift_unknownObjectRelease();
        goto LABEL_27;
      }
LABEL_31:
      __break(1u);
      return result;
    }
LABEL_10:
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v16 = v15;
    id result = sub_10003B6F8(0);
    uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (v17)
    {
      uint64_t v18 = v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if (*(unsigned char *)(v18 + 16)) {
        uint64_t v19 = *(void *)(*(void *)v18 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      }
      else {
        uint64_t v19 = *(void *)(v18 + 8);
      }
      swift_unknownObjectRetain();
      long long v30 = 0u;
      long long v31 = 0u;
      id v20 = DOCItemCollectionViewController.actionContext(from:)();
      sub_1000CBBA4((uint64_t)&v30, (uint64_t *)&unk_100705D60);
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v21 = Array<A>.fpfs_syncFetchAllFPItems()();
      if (v21)
      {
        unint64_t v22 = v21;
        if (v19)
        {
LABEL_16:
          swift_getObjectType();
          uint64_t v23 = (void *)DOCNode.fpfs_syncFetchFPItem()();
LABEL_25:
          DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(v14, v16, v22, v23, (uint64_t)v20);
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
LABEL_27:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return [v1 setEditing:0 animated:1 v30, v31];
        }
LABEL_24:
        uint64_t v23 = 0;
        goto LABEL_25;
      }
      goto LABEL_26;
    }
    __break(1u);
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_1001CCB64(void *a1)
{
  unint64_t v2 = v1;
  id v3 = [a1 userInfo];
  if (!v3)
  {
    long long v11 = 0u;
    long long v12 = 0u;
    return sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
  }
  uint64_t v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_10008E070((uint64_t)v10), (v7 & 1) != 0))
  {
    sub_10009B208(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v11);
  }
  else
  {
    long long v11 = 0u;
    long long v12 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)v10);
  if (!*((void *)&v12 + 1)) {
    return sub_1000CBBA4((uint64_t)&v11, (uint64_t *)&unk_100705D60);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    uint64_t v9 = v10[0];
    v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updatedIsScrollEnabled] = v10[0];
    [v2 loadViewIfNeeded];
    uint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (result) {
      return (uint64_t)[(id)result setScrollEnabled:v9];
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001CCD48(void *a1)
{
  unint64_t v2 = v1;
  id v3 = [a1 userInfo];
  if (!v3)
  {
    long long v12 = 0u;
    long long v13 = 0u;
    return sub_1000CBBA4((uint64_t)&v12, (uint64_t *)&unk_100705D60);
  }
  uint64_t v4 = v3;
  uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  AnyHashable.init<A>(_:)();
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_10008E070((uint64_t)v11), (v7 & 1) != 0))
  {
    sub_10009B208(*(void *)(v5 + 56) + 32 * v6, (uint64_t)&v12);
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)v11);
  if (!*((void *)&v13 + 1)) {
    return sub_1000CBBA4((uint64_t)&v12, (uint64_t *)&unk_100705D60);
  }
  type metadata accessor for CGPoint(0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    double v9 = *(double *)v11;
    double v10 = *(double *)&v11[1];
    [v2 loadViewIfNeeded];
    uint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (result) {
      return (uint64_t)[result setContentOffset:v9, v10];
    }
    else {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001CCF30()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  __chkstk_darwin(v1);
  id v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  long long v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)&v21 - v12;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView) & 1) == 0) {
    sub_1001DAB18();
  }
  uint64_t v14 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
                 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v14)
  {
    id v15 = [v14 identifier];
    DOCProviderDomainIDIsRemovable();
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  unint64_t v16 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  unint64_t v22 = *(void (**)(char *, uint64_t))(v8 + 8);
  v22(v11, v7);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_100221010;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100698298;
  uint64_t v18 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v19 = v26;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v3, v19);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  return ((uint64_t (*)(char *, uint64_t))v22)(v13, v7);
}

void sub_1001CD380()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView) & 1) == 0)
    {
      uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
      if (!v2)
      {
        __break(1u);
        return;
      }
      if ([v2 isGathering])
      {
        sub_1001DAB10();
      }
      else
      {
        id v3 = [*(id *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v6 = v5;
        if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v9 & 1) == 0)
          {
            uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
            if (v10) {
              [v10 setHidden:1];
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1001CD4D8(void *a1, char a2)
{
  uint64_t v4 = (uint64_t)a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_lastAppliedLayoutContext;
  swift_beginAccess();
  sub_1000CBC00(v4, (uint64_t)v10, &qword_10070BBD0);
  id v5 = sub_10001BCE0();
  uint64_t v6 = (uint64_t)v5 + OBJC_IVAR____TtC5Files36DOCCollectionViewCompositionalLayout_coreLayout;
  swift_beginAccess();
  sub_1000D3CE8(v6, (uint64_t)v9);

  if (sub_1002496EC((uint64_t)v10))
  {
    id v7 = [a1 traitCollection];
    sub_100021F80(v7, 0, 0, 1, a2 & 1);
  }
  sub_1000CBBA4((uint64_t)v10, &qword_10070BBD0);
  return sub_1000CB730((uint64_t)v9);
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewWillDisappear:a1];
  uint64_t v4 = self;
  id v5 = [v4 defaultCenter];
  uint64_t v6 = self;
  id v7 = [v6 willShowMenuNotification];
  [v5 removeObserver:v2 name:v7 object:0];

  id v8 = [v4 defaultCenter];
  id v9 = [v6 willHideMenuNotification];
  [v8 removeObserver:v2 name:v9 object:0];

  sub_100480824();
  [v2 resignFirstResponder];
  id v10 = [self sharedManager];
  [v10 unregisterKeyboardFocusable:v2];

  id v11 = [self defaultPermission];
  [v11 cleanAppContainerBundleIDCache];

  [*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_newFolderReadyForRenameTimer] invalidate];
  [*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_repositionRenamingCellTimer] invalidate];
  uint64_t v12 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  swift_bridgeObjectRelease();
  uint64_t v13 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView;
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_syncStateHeaderView];
  if (v14)
  {
    id v15 = v14;
    sub_1003EDFB8();

    uint64_t v16 = *(void *)&v2[v13];
    if (v16)
    {
      *(void *)(v16 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate + 8) = 0;
      swift_unknownObjectWeakAssign();
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewDidDisappear:a1];
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = 0;
  sub_1003EFCD4();
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v4)
  {
    id v5 = v4;
    sub_1001CB11C();
  }
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v7 = [Strong parentViewController];
    if (v7)
    {
      id v8 = v7;
      type metadata accessor for DOCColumnViewController(0);
      uint64_t v9 = swift_dynamicCastClass();
      swift_unknownObjectRelease();

      if (v9) {
        goto LABEL_9;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    sub_1001C2DBC();
  }
LABEL_9:
  if (qword_100704E80 != -1) {
    swift_once();
  }
  [*(id *)(qword_100736E60 + 16) removeObject:v2];
}

uint64_t sub_1001CDA48()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v1);
  id v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v4._uint64_t countAndFlagsBits = 0x7473657571657228;
  v4._object = (void *)0xEC000000203A4449;
  String.append(_:)(v4);
  type metadata accessor for UUID();
  sub_100078438((unint64_t *)&unk_10070ACF0, (void (*)(uint64_t))&type metadata accessor for UUID);
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x80000001005DC910;
  v6._uint64_t countAndFlagsBits = 0xD000000000000014;
  String.append(_:)(v6);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler)) {
    uint64_t v7 = 1702195828;
  }
  else {
    uint64_t v7 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler)) {
    unint64_t v8 = 0xE400000000000000;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  unint64_t v9 = v8;
  String.append(_:)(*(Swift::String *)&v7);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x203A6C7275203BLL;
  v10._object = (void *)0xE700000000000000;
  String.append(_:)(v10);
  sub_1000CBC00(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, (uint64_t)v3, &qword_1007076B0);
  v11._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x203A65646F6E203BLL;
  v12._object = (void *)0xE800000000000000;
  String.append(_:)(v12);
  v16[1] = *(void *)(v0 + 16);
  swift_unknownObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  v13._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 41;
  v14._object = (void *)0xE100000000000000;
  String.append(_:)(v14);
  return v17;
}

uint64_t sub_1001CDC84()
{
  swift_unknownObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, &qword_1007076B0);
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1001CDD58()
{
  return sub_1001CDA48();
}

uint64_t sub_1001CDD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v49 = (char *)&v43 - v8;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  Swift::String v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v43 - v14;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (char *)result;
    uint64_t v43 = v7;
    uint64_t v44 = v10;
    uint64_t v46 = v4;
    uint64_t v47 = v3;
    unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v18(v15, a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_requestID, v9);
    id v45 = v17;
    objc_super v19 = (unint64_t *)&v17[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingNodeContexts];
    uint64_t v20 = swift_beginAccess();
    unint64_t v21 = *v19;
    __chkstk_darwin(v20);
    *(&v43 - 2) = v15;
    swift_bridgeObjectRetain();
    unint64_t v22 = sub_1001B6D24((uint64_t (*)(uint64_t *))sub_10021FBB8, (uint64_t)(&v43 - 4), v21);
    LOBYTE(v17) = v23;
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v48 = v15;
    if ((v17 & 1) == 0)
    {
      unint64_t v24 = *v19;
      if ((*v19 & 0xC000000000000001) == 0)
      {
        if ((v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v22 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v25 = *(void *)(v24 + 8 * v22 + 32);
          swift_retain();
LABEL_7:
          swift_beginAccess();
          sub_10005053C(v22, sub_1000BC324);
          swift_endAccess();
          swift_release();
          uint64_t v26 = v43;
          static Logger.UI.getter();
          swift_retain_n();
          uint64_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.default.getter();
          BOOL v29 = os_log_type_enabled(v27, v28);
          uint64_t v30 = v44;
          if (v29)
          {
            uint64_t v31 = swift_slowAlloc();
            v50[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v31 = 136315394;
            uint64_t v51 = sub_10009B0E4(0xD00000000000002BLL, 0x80000001005DC8E0, v50);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v31 + 12) = 2080;
            unint64_t v49 = (char *)(v31 + 14);
            swift_retain();
            uint64_t v32 = sub_1001CDA48();
            unint64_t v34 = v33;
            swift_release();
            uint64_t v51 = sub_10009B0E4(v32, v34, v50);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s - TIMEOUT calling resolvedItemHandler with 'nil' item for pending node context: %s", (uint8_t *)v31, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v47);
          }
          else
          {

            swift_release_n();
            (*(void (**)(char *, uint64_t))(v46 + 8))(v26, v47);
          }
          int v42 = v48;
          if ((*(unsigned char *)(v25
                         + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) & 1) == 0)
          {
            *(unsigned char *)(v25
                     + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
            (*(void (**)(void))(v25
                                           + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler))(0);
          }

          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v42, v9);
        }
        __break(1u);
        return result;
      }
      swift_bridgeObjectRetain();
      uint64_t v25 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    long long v35 = v49;
    static Logger.UI.getter();
    v18(v13, (uint64_t)v15, v9);
    double v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      v50[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136315394;
      uint64_t v51 = sub_10009B0E4(0xD00000000000002BLL, 0x80000001005DC8E0, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 12) = 2080;
      sub_100078438((unint64_t *)&unk_10070ACF0, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v51 = sub_10009B0E4(v39, v40, v50);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_type_t v41 = *(void (**)(char *, uint64_t))(v44 + 8);
      v41(v13, v9);
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s - TIMEOUT did not find pendingNodeContext for requestID: %s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      os_log_type_t v41 = *(void (**)(char *, uint64_t))(v44 + 8);
      v41(v13, v9);
    }

    (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v47);
    return ((uint64_t (*)(char *, uint64_t))v41)(v48, v9);
  }
  else if ((*(unsigned char *)(a2 {
                      + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) & 1) == 0)
  }
  {
    *(unsigned char *)(a2 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
    return (*(uint64_t (**)(void))(a2
                                             + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler))(0);
  }
  return result;
}

uint64_t sub_1001CE504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v85 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  int v83 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  char v79 = (char *)&v76 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v76 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  int v78 = (char *)&v76 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  int v82 = (char *)&v76 - v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v76 - v19;
  static Logger.UI.getter();
  swift_retain_n();
  unint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  unint64_t v24 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell;
  uint64_t v80 = v7;
  uint64_t v81 = a2;
  if (v23)
  {
    char v84 = v14;
    uint64_t v25 = a1;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v76 = swift_slowAlloc();
    v88[0] = v76;
    *(_DWORD *)uint64_t v26 = 136315650;
    v86[0] = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2080;
    swift_getObjectType();
    uint64_t v27 = DOCNode.nodeDescription.getter();
    v86[0] = sub_10009B0E4(v27, v28, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v77 = v25;
    sub_1000CBC00(v25 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_url, (uint64_t)v6, &qword_1007076B0);
    uint64_t v29 = type metadata accessor for URL();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v29) == 1)
    {
      sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
      unint64_t v31 = 0xE300000000000000;
      uint64_t v32 = 4271950;
    }
    else
    {
      uint64_t v32 = URL.absoluteString.getter();
      unint64_t v31 = v34;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
    }
    uint64_t v14 = v84;
    v86[0] = sub_10009B0E4(v32, v31, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v35 = v77;
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s - Resolving context for : node %s - URL: %s", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v35;
    swift_slowDealloc();

    uint64_t v7 = v80;
    char v84 = *(char **)(v85 + 8);
    ((void (*)(char *, uint64_t))v84)(v20, v80);
    a2 = v81;
    unint64_t v33 = v82;
    unint64_t v24 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_hasDeferredRepositionInlineEditingCell;
  }
  else
  {

    swift_release_n();
    char v84 = *(char **)(v85 + 8);
    ((void (*)(char *, uint64_t))v84)(v20, v7);
    unint64_t v33 = v82;
  }
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v37 = a1 + v24[37];
  swift_getObjectType();
  uint64_t v38 = sub_1001FF9B4(v36, v37, a2);
  if (v38)
  {
    uint64_t v39 = (char *)v38;
    swift_unknownObjectRetain();
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    unint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.default.getter();
    BOOL v42 = os_log_type_enabled(v40, v41);
    int v83 = v39;
    if (v42)
    {
      uint64_t v43 = swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      v86[0] = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      swift_getObjectType();
      uint64_t v44 = DOCNode.nodeDescription.getter();
      v86[0] = sub_10009B0E4(v44, v45, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s - Found matching node: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v46 = v82;
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v46 = v33;
    }
    ((void (*)(char *, uint64_t))v84)(v46, v7);
    swift_beginAccess();
    swift_retain();
    unint64_t v52 = swift_bridgeObjectRetain();
    unint64_t v53 = sub_10020B3B4(v52, a1);
    char v55 = v54;
    swift_bridgeObjectRelease();
    swift_release();
    if (v55)
    {
      static Logger.UI.getter();
      id v61 = Logger.logObject.getter();
      os_log_type_t v62 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        v86[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315138;
        uint64_t v87 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s - Not Removing pending node context (context is gone already)", v63, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      ((void (*)(char *, uint64_t))v84)(v14, v7);
      id v60 = v79;
    }
    else
    {
      uint64_t v56 = v78;
      static Logger.UI.getter();
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        v86[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v87 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v86);
        uint64_t v7 = v80;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s - Removing pending node context", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      ((void (*)(char *, uint64_t))v84)(v56, v7);
      id v60 = v79;
      swift_beginAccess();
      sub_10005053C(v53, sub_1000BC324);
      swift_endAccess();
      swift_release();
    }
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    id v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      v86[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v87 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v66 + 12) = 2080;
      uint64_t v67 = a1;
      id v68 = [v83 displayName];
      uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v71 = v70;

      a1 = v67;
      uint64_t v87 = sub_10009B0E4(v69, v71, v86);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s - Calling resolved block for node %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v72 = v79;
      uint64_t v73 = v80;
    }
    else
    {

      swift_unknownObjectRelease_n();
      unint64_t v72 = v60;
      uint64_t v73 = v7;
    }
    ((void (*)(char *, uint64_t))v84)(v72, v73);
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) != 1)
    {
      *(unsigned char *)(a1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_hasCalledHandler) = 1;
      Swift::String v74 = *(void (**)(uint64_t))(a1
                                           + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController18PendingNodeContext_resolvedItemHandler);
      uint64_t v75 = swift_unknownObjectRetain();
      v74(v75);
    }
    return swift_unknownObjectRelease_n();
  }
  else
  {
    uint64_t v47 = v83;
    static Logger.UI.getter();
    unint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      id v50 = (uint8_t *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)id v50 = 136315138;
      v86[0] = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005DCDF0, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s - Could Not Find existing node", v50, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return ((uint64_t (*)(char *, uint64_t))v84)(v47, v7);
  }
}

id sub_1001CF214(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070AD30);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v91 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  __chkstk_darwin(v90);
  uint64_t v19 = (void **)((char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10008BCB8(a1, (uint64_t)v19, type metadata accessor for ScrollPositionInfo.ItemOffset);
  uint64_t v20 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v21 = v20;
  v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForcedUnderNavBarAppearanceOnAppear] = *(unsigned char *)(a1 + *(int *)(v20 + 20));
  if (v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticApplyRestorableSettingsAllowed] != 1) {
    goto LABEL_5;
  }
  os_log_type_t v22 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v22) {
    goto LABEL_5;
  }
  uint64_t v87 = v17;
  uint64_t v88 = v20;
  BOOL v23 = (unint64_t *)a1;
  uint64_t v89 = v15;
  unint64_t v24 = *v19;
  id v25 = v22;
  sub_1001BAD5C(v24, (uint64_t)v14);
  uint64_t v26 = v89;
  uint64_t v27 = v91;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v14, 1, v89) == 1)
  {

    sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_1007069A0);
    a1 = (uint64_t)v23;
    uint64_t v21 = v88;
LABEL_5:
    if (a2)
    {
      sub_100007068();
      if (v29 != -1)
      {
        uint64_t v30 = v28;
        char v31 = v29;
        char v32 = v29 & 1;
        if (qword_100704F60 != -1) {
          swift_once();
        }
        uint64_t v33 = type metadata accessor for RestorableSettings(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
        swift_beginAccess();
        id v34 = v30;
        sub_1004F1DFC((uint64_t)v11, v30, v32);
        swift_endAccess();
        sub_1000D4E9C(v30, v31);
      }
      *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v35 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(void *)uint64_t v35 = 0;
      v35[8] = 0;
      swift_unknownObjectRelease();
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
      v36(v8, 1, 1, v21);
      uint64_t v37 = (uint64_t)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess();
      sub_10008C318((uint64_t)v8, v37, (uint64_t *)&unk_10070AD30);
      sub_10008BCB8(a1, (uint64_t)v8, type metadata accessor for ScrollPositionInfo);
      v36(v8, 0, 1, v21);
      sub_10008C318((uint64_t)v8, v37, (uint64_t *)&unk_10070AD30);
      swift_endAccess();
    }
    uint64_t v38 = 0;
LABEL_12:
    sub_10008BBF0((uint64_t)v19, type metadata accessor for ScrollPositionInfo.ItemOffset);
    return (id)v38;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v87, v14, v26);
  sub_100007068();
  BOOL v42 = v23;
  if (v41 != -1)
  {
    uint64_t v43 = v40;
    char v44 = v41;
    char v45 = v41 & 1;
    if (qword_100704F60 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for RestorableSettings(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v11, 1, 1, v46);
    swift_beginAccess();
    id v47 = v43;
    sub_1004F1DFC((uint64_t)v11, v43, v45);
    swift_endAccess();
    sub_1000D4E9C(v43, v44);
  }
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  unint64_t v48 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(void *)unint64_t v48 = 0;
  v48[8] = 0;
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v8, 1, 1);
  uint64_t v49 = (uint64_t)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess();
  sub_10008C318((uint64_t)v8, v49, (uint64_t *)&unk_10070AD30);
  swift_endAccess();
  id v50 = v25;
  [v25 contentSize];
  uint64_t v51 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  unint64_t v52 = v87;
  if (v53 == 0.0)
  {
    id result = [v3 view];
    if (!result)
    {
      __break(1u);
      goto LABEL_43;
    }
    char v54 = result;
    [result layoutBelowIfNeeded];
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v25 scrollToItemAtIndexPath:isa atScrollPosition:1 animated:0];

  if ((sub_10008BD6C() & 1) != 0
    && (uint64_t v56 = &v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode], v57 = swift_beginAccess(), !*v56))
  {
    __chkstk_darwin(v57);
    *(&v86 - 2) = (uint64_t)v3;
    *(&v86 - 1) = (uint64_t)v25;
    uint64_t v84 = swift_bridgeObjectRetain();
    sub_10020847C(v84, (void (*)(long long *, uint64_t))sub_10021FE84);
    uint64_t v86 = 0;
    id v50 = v25;
    swift_bridgeObjectRelease();
    int v58 = 1;
    uint64_t v51 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  }
  else
  {
    int v58 = 0;
    uint64_t v86 = 0;
  }
  [v50 layoutBelowIfNeeded:v86];
  uint64_t v59 = sub_1001DB1A4(*v42);
  if (!v59) {
    goto LABEL_38;
  }
  id v60 = v59;
  id v61 = sub_1000D5D88();
  if (!v61)
  {
    double v69 = 0.0;
    goto LABEL_28;
  }
  os_log_type_t v62 = v61;
  id result = [v3 v51[428]];
  if (result)
  {
    uint64_t v63 = result;
    [result bounds];
    double v65 = v64;
    double v67 = v66;

    [v62 systemLayoutSizeFittingSize:v65, v67];
    double v69 = v68;

LABEL_28:
    sub_1001C4D04(v60);
    double v71 = v70 - v69 - *(double *)((char *)v42 + *(int *)(v90 + 24));
    [v25 _effectiveContentInset];
    double v73 = -v72;
    [v25 _effectiveContentInset];
    double v75 = -v74;
    id v76 = [v25 collectionViewLayout];
    [v76 collectionViewContentSize];
    double v78 = v77;

    id v50 = v25;
    [v25 bounds];
    double v79 = v78 - CGRectGetHeight(v92);
    [v25 _effectiveContentInset];
    if (v79 + v80 < v75) {
      double v81 = v75;
    }
    else {
      double v81 = v79 + v80;
    }
    [v25 contentOffset];
    if (v71 + v82 >= v73)
    {
      [v25 contentOffset:v71 + v82];
      if (v81 >= v71 + v83) {
        UIScrollView.doc_translateContent(dx:dy:animated:)();
      }
      else {
        [v25 setContentOffset:0, 0.0, v81];
      }
    }
    else
    {
      [v25 setContentOffset:0, 0.0, v73];
    }

LABEL_38:
    if (v58)
    {
      __chkstk_darwin(v59);
      *(&v86 - 2) = (uint64_t)v3;
      *(&v86 - 1) = (uint64_t)v50;
      uint64_t v85 = swift_bridgeObjectRetain();
      sub_10020847C(v85, (void (*)(long long *, uint64_t))sub_10021FE7C);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v91 + 8))(v52, v89);

    uint64_t v38 = 1;
    goto LABEL_12;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1001CFC34(uint64_t a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BAD5C(*a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
    return sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a4 scrollToItemAtIndexPath:isa atScrollPosition:8 animated:0];

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1001CFDE4(uint64_t a1, void **a2, uint64_t a3, void *a4)
{
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001BAD5C(*a2, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v14 = [a4 cellForItemAtIndexPath:isa];

  if (v14)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_10070AD78);
    uint64_t v15 = UIView.doc_nearestAncestor<A>(ofType:)();
    if (!v15)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      return;
    }
    uint64_t v16 = (void *)v15;
    if (static NSObject.== infix(_:_:)())
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

      return;
    }
    type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    UIScrollView.doc_translateContent(dx:dy:animated:)();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1001D0050(unint64_t a1, int a2, int a3)
{
  int v139 = a2;
  int v140 = a3;
  uint64_t v141 = sub_1000CBE70(&qword_100708EA0);
  uint64_t v136 = *(void *)(v141 - 8);
  __chkstk_darwin(v141);
  char v130 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v122 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v135 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v134 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for DispatchTime();
  uint64_t v133 = *(void *)(v138 - 8);
  uint64_t v11 = __chkstk_darwin(v138);
  uint64_t v131 = (char *)&v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v132 = (char *)&v122 - v13;
  uint64_t v14 = sub_1000CBE70(&qword_10070AD68);
  __chkstk_darwin(v14 - 8);
  uint64_t v129 = (uint64_t)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v16 - 8);
  char v128 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for IndexPath();
  uint64_t v18 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  Swift::Int v126 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1000CBE70((uint64_t *)&unk_10070AD30);
  __chkstk_darwin(v20 - 8);
  uint64_t v142 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v22 - 8);
  unint64_t v24 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v144 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  unint64_t v28 = (char *)&v122 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v122 - v29;
  char v143 = (void (*)(char *, uint64_t))a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v83 < 1) {
      return 0;
    }
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return 0;
  }
  uint64_t v127 = v18;
  unint64_t v122 = v8;
  static Logger.UI.getter();
  char v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v125 = v5;
  uint64_t v124 = v6;
  uint64_t v123 = v9;
  if (v33)
  {
    id v34 = (uint8_t *)swift_slowAlloc();
    long long aBlock = (void *)swift_slowAlloc();
    *(_DWORD *)id v34 = 136315138;
    uint64_t v152 = sub_10009B0E4(0xD000000000000030, 0x80000001005DCD90, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s Revealing node", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v35 = *(void (**)(char *, uint64_t))(v144 + 8);
  v35(v30, v25);
  uint64_t v36 = v145;
  uint64_t v37 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v38 = *(void **)&v145[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v38)
  {
    if (v139)
    {
      static Logger.UI.getter();
      uint64_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v57, v58))
      {
        uint64_t v59 = (uint8_t *)swift_slowAlloc();
        long long aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v152 = sub_10009B0E4(0xD000000000000030, 0x80000001005DCD90, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s Enqueueing node to reveal", v59, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v36 = v145;
        swift_slowDealloc();
      }

      v35(v28, v25);
      sub_100007068();
      if (v61 != -1)
      {
        os_log_type_t v62 = v60;
        char v63 = v61;
        char v64 = v61 & 1;
        if (qword_100704F60 != -1) {
          swift_once();
        }
        uint64_t v65 = type metadata accessor for RestorableSettings(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v24, 1, 1, v65);
        swift_beginAccess();
        id v66 = v62;
        sub_1004F1DFC((uint64_t)v24, v62, v64);
        swift_endAccess();
        sub_1000D4E9C(v62, v63);
      }
      uint64_t v67 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal;
      *(void *)&v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      double v68 = &v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(void *)double v68 = 0;
      v68[8] = 0;
      swift_unknownObjectRelease();
      uint64_t v69 = type metadata accessor for ScrollPositionInfo(0);
      uint64_t v70 = (uint64_t)v142;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v142, 1, 1, v69);
      uint64_t v71 = (uint64_t)&v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess();
      sub_10008C318(v70, v71, (uint64_t *)&unk_10070AD30);
      swift_endAccess();
      *(void *)&v36[v67] = v143;
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    return 0;
  }
  id v39 = v38;
  sub_100007068();
  uint64_t v42 = v127;
  if (v41 != -1)
  {
    uint64_t v43 = v40;
    char v44 = v41;
    char v45 = v41 & 1;
    if (qword_100704F60 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for RestorableSettings(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v24, 1, 1, v46);
    swift_beginAccess();
    id v47 = v43;
    sub_1004F1DFC((uint64_t)v24, v43, v45);
    swift_endAccess();
    sub_1000D4E9C(v43, v44);
  }
  *(void *)&v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  unint64_t v48 = &v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(void *)unint64_t v48 = 0;
  v48[8] = 0;
  swift_unknownObjectRelease();
  uint64_t v49 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v50 = (uint64_t)v142;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v142, 1, 1, v49);
  uint64_t v51 = (uint64_t)&v36[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess();
  sub_10008C318(v50, v51, (uint64_t *)&unk_10070AD30);
  swift_endAccess();
  unint64_t v52 = (void (*)(char *, uint64_t))v39;
  double v53 = v36;
  char v54 = sub_100206488((unint64_t)v143, (uint64_t)v53, v52);

  if (!v54[2])
  {

LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v140)
  {
    char v55 = 1;
    uint64_t v56 = v141;
    goto LABEL_34;
  }
  double v73 = v52;
  unint64_t v74 = (unint64_t)sub_1002067D0((uint64_t)v54, v73);

  uint64_t v56 = v141;
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v84) {
      goto LABEL_26;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    char v55 = 1;
    goto LABEL_34;
  }
  if (!*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_26:
  uint64_t v75 = sub_100167398(v74);
  swift_bridgeObjectRelease();
  id v76 = *(void **)&v145[v37];
  if (v76)
  {
    id v77 = v76;
    id v78 = [v77 visibleCells];
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    double v79 = v54;
    unint64_t v80 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    double v81 = sub_100208EB8(v80, v77);
    char v54 = v79;
    swift_bridgeObjectRelease();
  }
  else
  {
    double v81 = _swiftEmptyArrayStorage;
  }
  char v82 = sub_1001D1A14((unint64_t)v81, v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v55 = v82 ^ 1;
LABEL_34:
  uint64_t v85 = *(void **)&v53[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
  if (v85
    && (uint64_t v86 = (unsigned __int8 *)[v85 activeDocumentCreationSession]) != 0
    && (int v87 = v86[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates],
        v86,
        v87 == 1))
  {
    if (v54[2])
    {
      uint64_t v88 = v136;
      uint64_t v89 = v129;
      sub_1000CBC00((uint64_t)v54 + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80)), v129, &qword_100708EA0);
      uint64_t v90 = 0;
      uint64_t v91 = v137;
    }
    else
    {
      uint64_t v90 = 1;
      uint64_t v88 = v136;
      uint64_t v91 = v137;
      uint64_t v89 = v129;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v89, v90, 1, v56);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v89, 1, v56) == 1)
    {
      sub_1000CBBA4(v89, &qword_10070AD68);
      uint64_t v113 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v128, 1, 1, v91);
LABEL_52:

      sub_1000CBBA4(v113, (uint64_t *)&unk_1007069A0);
      return 1;
    }
    swift_unknownObjectRelease();
    uint64_t v114 = v89 + *(int *)(v56 + 48);
    uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 32);
    uint64_t v113 = (uint64_t)v128;
    v115(v128, v114, v91);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v113, 0, 1, v91);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v113, 1, v91) == 1) {
      goto LABEL_52;
    }
    uint64_t v116 = v126;
    v115(v126, v113, v91);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v52 scrollToItemAtIndexPath:isa atScrollPosition:2 animated:0];

    v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_automaticSaveRestorableSettingsAllowed] = 0;
    uint64_t v118 = self;
    uint64_t v119 = swift_allocObject();
    *(void *)(v119 + 16) = v53;
    uint64_t v150 = sub_10021FE34;
    uint64_t v151 = v119;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v147 = 1107296256;
    uint64_t v148 = sub_1000666D8;
    uint64_t v149 = &unk_100697578;
    unint64_t v120 = _Block_copy(&aBlock);
    unint64_t v121 = v53;
    swift_release();
    [v118 performAfterCATransactionCommits:v120];
    _Block_release(v120);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v116, v91);
    return 1;
  }
  else if (v55)
  {
    uint64_t v92 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
    if ((v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
    {
      v53[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
      sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
      v53[v92] = 0;
    }
    char v143 = v52;
    uint64_t v93 = v54[2];
    if (v93)
    {
      uint64_t v141 = (uint64_t)v54;
      uint64_t v142 = v53;
      CGRect v94 = (char *)v54
          + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80));
      unint64_t v95 = *(char **)(v136 + 72);
      uint64_t v144 = *(void *)(v42 + 16);
      v145 = v95;
      uint64_t v96 = (void (**)(char *, uint64_t))(v42 + 8);
      swift_bridgeObjectRetain();
      uint64_t v97 = v137;
      uint64_t v98 = v130;
      uint64_t v99 = v143;
      do
      {
        uint64_t v100 = *(int *)(v56 + 48);
        char v101 = (char *)v98 + v100;
        *uint64_t v98 = *(void *)v94;
        ((void (*)(char *, char *, uint64_t))v144)((char *)v98 + v100, &v94[v100], v97);
        Class v102 = IndexPath._bridgeToObjectiveC()().super.isa;
        (*v96)(v101, v97);
        [v99 selectItemAtIndexPath:v102 animated:1 scrollPosition:2];

        CGRect v94 = &v145[(void)v94];
        --v93;
      }
      while (v93);
      char v54 = (void *)v141;
      swift_bridgeObjectRelease();
    }
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v103 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v104 = v131;
    static DispatchTime.now()();
    uint64_t v105 = v132;
    + infix(_:_:)();
    uint64_t v106 = *(void (**)(char *, uint64_t))(v133 + 8);
    v106(v104, v138);
    uint64_t v107 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v107;
    *(void *)(v108 + 24) = v54;
    uint64_t v150 = sub_10021FE2C;
    uint64_t v151 = v108;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v147 = 1107296256;
    uint64_t v148 = sub_1000666D8;
    uint64_t v149 = &unk_100697528;
    uint64_t v109 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v110 = v134;
    static DispatchQoS.unspecified.getter();
    long long aBlock = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    unsigned int v111 = v122;
    uint64_t v112 = v125;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v109);

    (*(void (**)(char *, uint64_t))(v124 + 8))(v111, v112);
    (*(void (**)(char *, uint64_t))(v135 + 8))(v110, v123);
    v106(v105, v138);
    return 1;
  }
  else
  {

    swift_bridgeObjectRelease();
    return 1;
  }
}

uint64_t sub_1001D1318@<X0>(void **a1@<X0>, void (*a2)(char *, uint64_t)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v67 = a3;
  id v66 = a2;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v65 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v56 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = *a1;
  sub_1001BAD5C(v20, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_1007069A0);
    uint64_t v21 = sub_1000CBE70(&qword_100708EA0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v67, 1, 1, v21);
  }
  id v60 = v14;
  char v61 = v6;
  uint64_t v63 = (uint64_t)v20;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v23(v19, v9, v10);
  uint64_t v24 = IndexPath.section.getter();
  id v25 = [v66 numberOfSections];
  uint64_t v26 = *(NSObject **)(v11 + 16);
  uint64_t v62 = v10;
  uint64_t v59 = v26;
  ((void (*)(char *, char *, uint64_t))v26)(v17, v19, v10);
  uint64_t v58 = v11;
  if (v24 >= (uint64_t)v25)
  {
    uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v37 = v17;
    uint64_t v31 = v62;
    v29(v37, v62);
  }
  else
  {
    uint64_t v57 = v23;
    uint64_t v27 = IndexPath.item.getter();
    id v28 = [v66 numberOfItemsInSection:IndexPath.section.getter()];
    uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v30 = v17;
    uint64_t v31 = v62;
    v29(v30, v62);
    if (v27 < (uint64_t)v28)
    {
      uint64_t v32 = sub_1000CBE70(&qword_100708EA0);
      BOOL v33 = v19;
      uint64_t v34 = v32;
      uint64_t v35 = v67;
      uint64_t v36 = (char *)v67 + *(int *)(v32 + 48);
      *uint64_t v67 = v63;
      v57(v36, v33, v31);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v35, 0, 1, v34);
      return swift_unknownObjectRetain();
    }
  }
  id v66 = v29;
  uint64_t v38 = v61;
  static Logger.UI.getter();
  id v39 = v60;
  ((void (*)(char *, char *, uint64_t))v59)(v60, v19, v31);
  uint64_t v40 = v63;
  swift_unknownObjectRetain_n();
  char v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.error.getter();
  int v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v44 = v31;
    uint64_t v45 = swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v69 = v62;
    *(_DWORD *)uint64_t v45 = 136315650;
    uint64_t v59 = v41;
    uint64_t v68 = sub_10009B0E4(0xD000000000000030, 0x80000001005DCD90, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v45 + 12) = 2080;
    LODWORD(v57) = v43;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v68 = sub_10009B0E4(v46, v47, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v48 = v39;
    uint64_t v49 = v66;
    v66(v48, v44);
    *(_WORD *)(v45 + 22) = 2080;
    id v60 = v19;
    uint64_t v68 = v40;
    swift_unknownObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v50 = String.init<A>(describing:)();
    uint64_t v68 = sub_10009B0E4(v50, v51, &v69);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v52 = v59;
    _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v57, "%s Invalid index path %s for item %s", (uint8_t *)v45, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v65);
    v49(v60, v44);
  }
  else
  {
    swift_unknownObjectRelease_n();

    double v53 = v66;
    v66(v39, v31);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v65);
    v53(v19, v31);
  }
  char v54 = v67;
  uint64_t v55 = sub_1000CBE70(&qword_100708EA0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v54, 1, 1, v55);
}

uint64_t sub_1001D1A14(unint64_t a1, uint64_t a2)
{
  Swift::Int v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    if (a2 < 0) {
      uint64_t v4 = a2;
    }
    else {
      uint64_t v4 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    if (__CocoaSet.count.getter())
    {
      if (__CocoaSet.count.getter() != 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = __CocoaSet.count.getter();
        Swift::Int v2 = sub_1004FD7B0(v4, v5);
LABEL_14:
        char v10 = sub_1001FF598(a1, v2);
        swift_release();
        return v10 & 1;
      }
      goto LABEL_10;
    }
LABEL_12:
    char v10 = 1;
    return v10 & 1;
  }
  uint64_t v6 = *(void *)(a2 + 16);
  if (!v6) {
    goto LABEL_12;
  }
  if (v6 != 1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
LABEL_10:
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = (void *)sub_100296988(v7);
  uint64_t result = swift_bridgeObjectRelease();
  id v12 = v8;
  if (v8)
  {
    __chkstk_darwin(result);
    v11[2] = &v12;
    char v10 = sub_1001B5194((uint64_t (*)(id *))sub_10021FE5C, (uint64_t)v11, a1);

    return v10 & 1;
  }
  __break(1u);
  return result;
}

void sub_1001D1B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1000CBE70(&qword_100708EA0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = (void *)((char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    if (v6)
    {
      uint64_t v7 = (uint64_t *)(a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
      v21[1] = a2;
      uint64_t v22 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
      uint64_t v27 = *(void *)(v4 + 72);
      swift_bridgeObjectRetain();
      uint64_t v23 = v3;
      while (1)
      {
        uint64_t v8 = (uint64_t)v7 + *(int *)(v3 + 48);
        uint64_t v9 = sub_1001BAA44(v8, 0);
        if (v9)
        {
          char v10 = (void *)v9;
          uint64_t v11 = (char *)v26 + *(int *)(v3 + 48);
          uint64_t v12 = *v7;
          uint64_t *v26 = *v7;
          uint64_t v13 = type metadata accessor for IndexPath();
          uint64_t v14 = *(void *)(v13 - 8);
          uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
          v24(v11, v8, v13);
          uint64_t v15 = *(void (**)(char *, uint64_t))(v14 + 8);
          swift_unknownObjectRetain();
          id v25 = v15;
          v15(v11, v13);
          LODWORD(v11) = [v10 isEqual:v12];
          swift_unknownObjectRelease();
          uint64_t v3 = v23;
          swift_unknownObjectRelease();
          if (v11)
          {
            uint64_t v16 = Strong;
            [Strong loadViewIfNeeded];
            uint64_t v17 = *(void **)&v16[v22];
            if (!v17)
            {
              __break(1u);
              return;
            }
            uint64_t v18 = (char *)v26 + *(int *)(v3 + 48);
            uint64_t *v26 = *v7;
            v24(v18, v8, v13);
            id v19 = v17;
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            v25(v18, v13);
            [v19 deselectItemAtIndexPath:isa animated:1];
          }
        }
        uint64_t v7 = (uint64_t *)((char *)v7 + v27);
        if (!--v6)
        {

          swift_bridgeObjectRelease();
          return;
        }
      }
    }
  }
}

uint64_t sub_1001D1E3C(void *a1, int a2, int a3)
{
  uint64_t v4 = v3;
  int v115 = a3;
  LODWORD(v5) = a2;
  uint64_t v118 = a1;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070AD30);
  __chkstk_darwin(v6 - 8);
  uint64_t v113 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v8 - 8);
  uint64_t v112 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v10 - 8);
  char v117 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v116 = (char *)&v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v114 = v12;
    uint64_t v21 = swift_slowAlloc();
    int v111 = (int)v5;
    uint64_t v5 = (uint8_t *)v21;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v110 = v15;
    v120[0] = v22;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v119 = sub_10009B0E4(0xD00000000000002BLL, 0x80000001005DCD60, v120);
    uint64_t v12 = v114;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Scrolling to node", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v5) = v111;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v110);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  uint64_t v23 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v24 = *(void **)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  uint64_t v25 = (uint64_t)v117;
  if (!v24)
  {
LABEL_7:
    if (v115)
    {
      sub_100007068();
      if (v28 != -1)
      {
        uint64_t v29 = v27;
        char v30 = v28;
        char v31 = v28 & 1;
        if (qword_100704F60 != -1) {
          swift_once();
        }
        uint64_t v32 = type metadata accessor for RestorableSettings(0);
        uint64_t v33 = (uint64_t)v112;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v112, 1, 1, v32);
        swift_beginAccess();
        id v34 = v29;
        sub_1004F1DFC(v33, v29, v31);
        swift_endAccess();
        sub_1000D4E9C(v29, v30);
      }
      *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v35 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(void *)uint64_t v35 = 0;
      v35[8] = 0;
      swift_unknownObjectRelease();
      uint64_t v36 = type metadata accessor for ScrollPositionInfo(0);
      uint64_t v37 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v113, 1, 1, v36);
      uint64_t v38 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess();
      sub_10008C318(v37, v38, (uint64_t *)&unk_10070AD30);
      swift_endAccess();
      *(void *)uint64_t v35 = v118;
      v35[8] = v5 & 1;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    return 0;
  }
  id v26 = v24;
  sub_1001BAD5C(v118, v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v25, 1, v12) == 1)
  {

    sub_1000CBBA4(v25, (uint64_t *)&unk_1007069A0);
    goto LABEL_7;
  }
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  uint64_t v114 = v12;
  v40(v116, v25, v12);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  Class v42 = (Class)[v26 cellForItemAtIndexPath:isa];

  if (v42)
  {
    int v43 = *(void **)&v4[v23];
    uint64_t v109 = v13;
    if (v43)
    {
      uint64_t v44 = v4;
      id v45 = v43;
      id v46 = [v45 visibleCells];
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v48 = sub_100208EB8(v47, v45);
      swift_bridgeObjectRelease();

      uint64_t v4 = v44;
    }
    else
    {
      unint64_t v48 = _swiftEmptyArrayStorage;
    }
    char v49 = sub_1001090FC((uint64_t)v42, (unint64_t)v48);
    swift_bridgeObjectRelease();
    if (v49)
    {
      sub_100007068();
      if (v51 != -1)
      {
        os_log_t v52 = v50;
        char v53 = v51;
        char v54 = v51 & 1;
        if (qword_100704F60 != -1) {
          swift_once();
        }
        uint64_t v55 = type metadata accessor for RestorableSettings(0);
        uint64_t v56 = (uint64_t)v112;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v112, 1, 1, v55);
        swift_beginAccess();
        id v57 = v52;
        sub_1004F1DFC(v56, v52, v54);
        swift_endAccess();
        sub_1000D4E9C(v52, v53);
      }
      *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      uint64_t v58 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
      *(void *)uint64_t v58 = 0;
      _OWORD v58[8] = 0;
      swift_unknownObjectRelease();
      uint64_t v59 = type metadata accessor for ScrollPositionInfo(0);
      uint64_t v60 = (uint64_t)v113;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v113, 1, 1, v59);
      uint64_t v61 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
      swift_beginAccess();
      sub_10008C318(v60, v61, (uint64_t *)&unk_10070AD30);
      swift_endAccess();
      unint64_t v62 = (unint64_t)sub_10003B6F8(0);
      if (v62 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter() == 1)
        {
LABEL_25:
          sub_1000CBE70((uint64_t *)&unk_100706730);
          char v63 = Array<A>.contains(node:)();
          swift_bridgeObjectRelease();
          if (v63)
          {
            sub_1000CBE70(&qword_100708E80);
            uint64_t v64 = v109;
            unint64_t v65 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
            uint64_t v66 = swift_allocObject();
            *(_OWORD *)(v66 + 16) = xmmword_1005A0030;
            uint64_t v67 = *(void (**)(unint64_t, char *, uint64_t))(v64 + 16);
            uint64_t v68 = v116;
            v67(v66 + v65, v116, v114);
            sub_10000F3B0(0, v66);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            v69.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            Class v70 = v42;
            Class v42 = v69.super.isa;
LABEL_47:
            [v26 selectItemAtIndexPath:v69.super.isa animated:v5 & 1 scrollPosition:0 v109];

            (*(void (**)(char *, uint64_t))(v109 + 8))(v68, v114);
            return 1;
          }
LABEL_44:
          uint64_t v108 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
          if ((v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
          {
            v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
            sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
            v4[v108] = 0;
          }
          uint64_t v68 = v116;
          v69.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          Class v70 = v69.super.isa;
          goto LABEL_47;
        }
      }
      else if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
      {
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }

    uint64_t v13 = v109;
  }
  uint64_t v71 = v116;
  Class v72 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v73 = [v26 layoutAttributesForItemAtIndexPath:v72];

  if (!v73)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v71, v114);

    return 0;
  }
  uint64_t v74 = v13;
  [v73 frame];
  double v76 = v75;
  double v78 = v77;
  double v80 = v79;
  double v82 = v81;

  sub_100007068();
  if (v84 != -1)
  {
    uint64_t v85 = v83;
    char v86 = v84;
    char v87 = v84 & 1;
    if (qword_100704F60 != -1) {
      swift_once();
    }
    uint64_t v88 = type metadata accessor for RestorableSettings(0);
    uint64_t v89 = (uint64_t)v112;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 56))(v112, 1, 1, v88);
    swift_beginAccess();
    id v90 = v85;
    sub_1004F1DFC(v89, v85, v87);
    swift_endAccess();
    sub_1000D4E9C(v85, v86);
  }
  *(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodesToReveal] = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v91 = &v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeToSelectAndScroll];
  *(void *)uint64_t v91 = 0;
  v91[8] = 0;
  swift_unknownObjectRelease();
  uint64_t v92 = type metadata accessor for ScrollPositionInfo(0);
  uint64_t v93 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v113, 1, 1, v92);
  uint64_t v94 = (uint64_t)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_enqueuedNodeScrollPositionInfo];
  swift_beginAccess();
  sub_10008C318(v93, v94, (uint64_t *)&unk_10070AD30);
  swift_endAccess();
  unint64_t v95 = v116;
  v96.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v4 loadViewIfNeeded];
  uint64_t result = *(void *)&v4[v23];
  if (result)
  {
    if (objc_msgSend((id)result, "_isRectFullyVisible:", v76, v78, v80, v82))
    {
      uint64_t v97 = 0;
LABEL_41:
      [v26 selectItemAtIndexPath:v96.super.isa animated:v5 & 1 scrollPosition:v97];

      (*(void (**)(char *, uint64_t))(v74 + 8))(v95, v114);
      return 1;
    }
    v121.origin.x = v76;
    v121.origin.y = v78;
    v121.size.width = v80;
    v121.size.height = v82;
    double MinY = CGRectGetMinY(v121);
    [v4 loadViewIfNeeded];
    uint64_t result = *(void *)&v4[v23];
    if (result)
    {
      id v99 = [(id)result safeAreaLayoutGuide];
      [v99 layoutFrame];
      CGFloat v101 = v100;
      CGFloat v103 = v102;
      CGFloat v105 = v104;
      CGFloat v107 = v106;

      v122.origin.x = v101;
      v122.origin.y = v103;
      v122.size.width = v105;
      v122.size.height = v107;
      if (MinY <= CGRectGetMinY(v122)) {
        uint64_t v97 = 1;
      }
      else {
        uint64_t v97 = 4;
      }
      goto LABEL_41;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.setEditing(_:animated:)(Swift::Bool _, Swift::Bool animated)
{
  uint64_t v3 = v2;
  BOOL v4 = animated;
  BOOL v5 = _;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  if (v2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1 && !v5) {
    return;
  }
  if ((([v2 isEditing] ^ v5) & 1) == 0)
  {
    [v2 loadViewIfNeeded];
    uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v14)
    {
LABEL_28:
      __break(1u);
      return;
    }
    if ([v14 isEditing] == v5) {
      return;
    }
  }
  uint64_t v38 = v7;
  uint64_t v15 = (objc_class *)type metadata accessor for DOCItemCollectionViewController(0);
  v44.receiver = v2;
  v44.super_class = v15;
  uint64_t v37 = v15;
  if (v5) {
    char v16 = 2;
  }
  else {
    char v16 = 0;
  }
  [super setEditing:v5 animated:v4];
  v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] = v16;
  if (!v5)
  {
    BOOL v36 = v4;
    uint64_t v17 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
    if ((v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] & 1) == 0)
    {
      v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection] = 1;
      sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
      v2[v17] = 0;
    }
    uint64_t v18 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v18 == 2 && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
    {
      unsigned __int8 v20 = [Strong infoPanelPreviewingMultipleItems];
      swift_unknownObjectRelease();
    }
    else
    {
      unsigned __int8 v20 = 0;
    }
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v35 = static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v3;
    *(unsigned char *)(v21 + 24) = v20;
    Class v42 = sub_10020C5A8;
    uint64_t v43 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    char v41 = (objc_class *)&unk_100695868;
    id v34 = _Block_copy(aBlock);
    uint64_t v22 = v3;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v24 = v34;
    uint64_t v23 = (void *)v35;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v10);
    LOBYTE(v4) = v36;
  }
  [v3 loadViewIfNeeded];
  uint64_t v25 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v25)
  {
    __break(1u);
    goto LABEL_28;
  }
  BOOL v26 = v5;
  [v25 setEditing:v26];
  if ((v3[v13] & 1) == 0)
  {
    uint64_t v27 = &v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v28 = *((void *)v27 + 1);
      uint64_t ObjectType = swift_getObjectType();
      char v41 = v37;
      aBlock[0] = v3;
      (*(void (**)(void *, void, uint64_t, BOOL, uint64_t, uint64_t))(v28 + 8))(aBlock, [v3 isEditing], 3, v4, ObjectType, v28);
      swift_unknownObjectRelease();
      sub_10009B1B8((uint64_t)aBlock);
    }
    id v30 = [self defaultCenter];
    if (qword_100704F40 != -1) {
      swift_once();
    }
    [v30 postNotificationName:qword_100736F20 object:v3];
  }
  sub_1001D3330(v26, v4);
  sub_100016C84();
  v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = v4;
  id v31 = [v3 viewIfLoaded];
  id v32 = [v31 window];

  if (v32) {
    sub_1000A6988();
  }
}

void sub_1001D3250(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
  int v3 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
  v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] = a1;
  if (a1)
  {
    [v1 setEditing:1 animated:0];
    if (v3 == v1[v2]) {
      return;
    }
  }
  else if ((v3 & 1) == 0)
  {
    return;
  }
  unsigned int v4 = [v1 isEditing];
  BOOL v5 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v5)
  {
    int v6 = v4;
    id v8 = v5;
    uint64_t v7 = v1;
    sub_100011DFC(v8, v7, v6);
  }
}

void sub_1001D3330(char a1, char a2)
{
  int v3 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(void *)(v6 + 24) = v2;
    int v7 = a1 & 1;
    *(unsigned char *)(v6 + 32) = v7;
    if (a2)
    {
      id v8 = self;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_1002211EC;
      *(void *)(v9 + 24) = v6;
      aBlock[4] = sub_100045B40;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006983B0;
      uint64_t v10 = _Block_copy(aBlock);
      id v11 = v3;
      uint64_t v12 = v2;
      swift_retain();
      swift_release();
      [v8 animateWithDuration:v10 animations:0.2];
      swift_release();

      _Block_release(v10);
    }
    else
    {
      id v13 = v3;
      sub_100011DFC(v13, v2, v7);
      swift_release();
    }
  }
}

void DOCItemCollectionViewController.willTransition(to:with:)(void *a1, void *a2)
{
  int v3 = v2;
  v30.receiver = v2;
  v30.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super willTransitionToTraitCollection:a1 withTransitionCoordinator:a2];
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v6)
  {
    id v7 = v6;
    id v8 = [v7 delegate];
    swift_unknownObjectRelease();
    if (v8)
    {
      if ([a1 horizontalSizeClass] == (id)2) {
        sub_100339840();
      }
      id v9 = [v3 traitCollection];
      char v10 = sub_100053E14(2, v9);

      if (v10)
      {
        uint64_t v11 = swift_allocObject();
        *(void *)(v11 + 16) = v3;
        *(void *)(v11 + 24) = a1;
        uint64_t v28 = sub_10020CB14;
        uint64_t v29 = v11;
        uint64_t v24 = _NSConcreteStackBlock;
        uint64_t v25 = 1107296256;
        BOOL v26 = sub_100045AE0;
        uint64_t v27 = &unk_100695958;
        uint64_t v12 = _Block_copy(&v24);
        id v13 = v3;
        id v14 = a1;
        swift_release();
        [a2 animateAlongsideTransition:v12 completion:0];
        _Block_release(v12);
      }
      id v15 = [v3 traitCollection];
      char v16 = sub_100053E14(16, v15);

      if (v16)
      {
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v3;
        uint64_t v28 = sub_10020CAD4;
        uint64_t v29 = v17;
        uint64_t v24 = _NSConcreteStackBlock;
        uint64_t v25 = 1107296256;
        BOOL v26 = sub_100045AE0;
        uint64_t v27 = &unk_1006958B8;
        uint64_t v18 = _Block_copy(&v24);
        id v19 = v3;
        swift_release();
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v19;
        *(void *)(v20 + 24) = a1;
        uint64_t v28 = sub_10020CADC;
        uint64_t v29 = v20;
        uint64_t v24 = _NSConcreteStackBlock;
        uint64_t v25 = 1107296256;
        BOOL v26 = sub_100045AE0;
        uint64_t v27 = &unk_100695908;
        uint64_t v21 = _Block_copy(&v24);
        id v22 = v19;
        id v23 = a1;
        swift_release();
        [a2 animateAlongsideTransition:v18 completion:v21];
        _Block_release(v21);
        _Block_release(v18);
      }
      sub_10020C5E0();
    }
  }
}

void sub_1001D3814(int a1, unsigned char *a2)
{
  a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v2 = [a2 viewIfLoaded];
  id v3 = [v2 window];

  if (v3) {
    sub_1000A6988();
  }
}

uint64_t sub_1001D390C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = swift_allocObject();
  id v7 = [a1 splitViewController];
  id v8 = v7;
  if (v7)
  {
    id v9 = [v7 displayMode];
  }
  else
  {
    id v9 = 0;
  }
  *(void *)(v6 + 16) = v9;
  *(unsigned char *)(v6 + 24) = v8 == 0;
  char v10 = (void *)swift_allocObject();
  void v10[2] = a1;
  v10[3] = v6;
  v10[4] = v3;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_100221004;
  *(void *)(v11 + 24) = v10;
  uint64_t v21 = sub_100045B40;
  uint64_t v22 = v11;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  id v19 = sub_100045AE0;
  uint64_t v20 = &unk_100698220;
  uint64_t v12 = _Block_copy(&v17);
  id v13 = a1;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100221004;
  *(void *)(v14 + 24) = v10;
  uint64_t v21 = sub_1000D8564;
  uint64_t v22 = v14;
  uint64_t v17 = _NSConcreteStackBlock;
  uint64_t v18 = 1107296256;
  id v19 = sub_100045AE0;
  uint64_t v20 = &unk_100698270;
  id v15 = _Block_copy(&v17);
  swift_retain();
  swift_release();
  [a2 animateAlongsideTransition:v12 completion:v15];
  _Block_release(v15);
  _Block_release(v12);
  swift_release();
  return swift_release();
}

uint64_t sub_1001D3B5C(void *a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = (void *)(a2 + 16);
  id v6 = [a1 splitViewController];
  id v7 = v6;
  if (!v6)
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(a2 + 24)) {
      return result;
    }
    id v8 = 0;
    char v10 = (BOOL *)(a2 + 24);
    goto LABEL_7;
  }
  id v8 = [v6 displayMode];

  uint64_t result = swift_beginAccess();
  char v10 = (BOOL *)(a2 + 24);
  if ((*(unsigned char *)(a2 + 24) & 1) != 0 || v8 != *(id *)(a2 + 16))
  {
LABEL_7:
    swift_beginAccess();
    *BOOL v5 = v8;
    BOOL *v10 = v7 == 0;
    uint64_t v11 = *(void (**)(uint64_t))(a3 + 16);
    uint64_t v12 = swift_retain();
    v11(v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001D3C64()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t DOCItemCollectionViewController.viewWillTransition(to:with:)(void *a1, double a2, double a3)
{
  unsigned int v4 = v3;
  v29.receiver = v3;
  v29.super_class = (Class)type metadata accessor for DOCItemCollectionViewController(0);
  [super viewWillTransitionToSize:a1 withTransitionCoordinator:a2 a3];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v4;
  type metadata accessor for DOCItemCollectionViewController.SplitModeChangeTracker();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10020CB74;
  *(void *)(v9 + 24) = v8;
  if (*(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController])
  {
    char v10 = v4;
    swift_retain();
    sub_100423100();
    swift_release();
  }
  else
  {
    uint64_t v11 = v4;
  }
  sub_1001D390C(v4, a1);
  _StringGuts.grow(_:)(39);
  v12._object = (void *)0x80000001005DA390;
  v12._uint64_t countAndFlagsBits = 0xD000000000000024;
  String.append(_:)(v12);
  double v27 = a2;
  double v28 = a3;
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)();
  v13._uint64_t countAndFlagsBits = 41;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  sub_10023FBF8(0, (void *)0xE000000000000000, a1);
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  *(double *)(v14 + 24) = a2;
  *(double *)(v14 + 32) = a3;
  uint64_t v25 = sub_10020CBEC;
  uint64_t v26 = v14;
  uint64_t v21 = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  id v23 = sub_100045AE0;
  uint64_t v24 = &unk_1006959D0;
  id v15 = _Block_copy(&v21);
  char v16 = v4;
  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  uint64_t v25 = sub_10020CBF8;
  uint64_t v26 = v17;
  uint64_t v21 = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  id v23 = sub_100045AE0;
  uint64_t v24 = &unk_100695A20;
  uint64_t v18 = _Block_copy(&v21);
  id v19 = v16;
  swift_release();
  [a1 animateAlongsideTransition:v15 completion:v18];
  _Block_release(v18);
  _Block_release(v15);
  return swift_release();
}

void sub_1001D3F74(int a1, id a2, double a3, double a4)
{
  id v6 = [a2 traitCollection];
  sub_1001CACB8(a3, a4);
}

uint64_t sub_1001D3FE8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController))
  {
    swift_retain();
    sub_100423564();
    return swift_release();
  }
  return result;
}

uint64_t sub_1001D40C0(uint64_t a1, id a2)
{
  id v3 = [a2 traitCollection];
  [v3 horizontalSizeClass];

  sub_10003CCE8(a1, *(void *)(a1 + 24));
  return UIMutableTraits.horizontalSizeClass.setter();
}

uint64_t sub_1001D4144(uint64_t a1)
{
  return UIMutableTraits.horizontalSizeClass.setter();
}

void sub_1001D4184()
{
  uint64_t v1 = (int *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_defaultSaveLocationDidChangeNotificationToken);
  swift_beginAccess();
  if (*v1)
  {
    notify_cancel(*v1);
    *uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v2)
  {
    __break(1u);
    return;
  }
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) & 1) == 0)
  {
    id v3 = *(id *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    self;
    unsigned int v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
    {
      id v5 = [v4 settings];
      id v6 = [v5 enumeratedItemID];

      id v7 = [v6 providerID];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0) {
          goto LABEL_20;
        }
      }
      uint64_t v14 = (const char *)DOCDefaultSaveLocationDidChangeNotification;
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      id v15 = static OS_dispatch_queue.main.getter();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      BOOL v36 = sub_10021FDA4;
      uint64_t v37 = v16;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      id v34 = sub_1001D4614;
      uint64_t v35 = &unk_100697488;
      uint64_t v17 = _Block_copy(&aBlock);
      swift_release();
      swift_beginAccess();
      notify_register_dispatch(v14, v1, v15, v17);
      swift_endAccess();
      _Block_release(v17);

      uint64_t v18 = (char **)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      id v19 = *(char **)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
      {
        uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
        id v21 = v20;
      }
      else
      {
        uint64_t v22 = v19;
        id v21 = [v22 itemFilteringPredicate];

        uint64_t v20 = v21;
      }
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      BOOL v36 = sub_10021FDAC;
      uint64_t v37 = v23;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v33 = 1107296256;
      id v34 = sub_100053508;
      uint64_t v35 = &unk_1006974D8;
      uint64_t v24 = _Block_copy(&aBlock);
      uint64_t v25 = self;
      id v26 = v21;
      id v27 = [v25 predicateWithBlock:v24];
      _Block_release(v24);
      swift_release();
      double v28 = *v18;
      if ((_BYTE)v18[2])
      {
        objc_super v29 = *(void **)&v28[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
        *(void *)&v28[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v27;

        id v3 = v29;
      }
      else
      {
        uint64_t v30 = (uint64_t)v18[1];
        id v31 = v27;
        sub_10007896C(v28, v30, 0);
        swift_unknownObjectRelease();
        [v28 setItemFilteringPredicate:v31];

        id v26 = v31;
        id v3 = v31;
      }
    }
LABEL_20:
  }
}

void sub_1001D45A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (v2)
    {
      id v3 = v2;
      sub_10019E86C();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1001D4614(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

BOOL sub_1001D4668(uint64_t a1, Class isa, void *a3)
{
  if (!a3) {
    goto LABEL_6;
  }
  sub_1000CBC00(a1, (uint64_t)v33, (uint64_t *)&unk_100705D60);
  uint64_t v6 = v34;
  if (v34)
  {
    id v7 = sub_1000A6B78(v33, v34);
    uint64_t v8 = *(void *)(v6 - 8);
    __chkstk_darwin(v7);
    uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v8 + 16))(v10);
    uint64_t v11 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
    sub_10009B1B8((uint64_t)v33);
    if (!isa) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v11 = 0;
  if (isa) {
LABEL_4:
  }
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
LABEL_5:
  unsigned int v12 = [a3 evaluateWithObject:v11 substitutionVariables:isa];
  swift_unknownObjectRelease();

  if (!v12) {
    return 0;
  }
LABEL_6:
  sub_1000CBC00(a1, (uint64_t)v33, (uint64_t *)&unk_100705D60);
  if (!v34)
  {
    sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_100705D60);
    return 0;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v13 = v32;
  if (![v32 isAppContainer])
  {
LABEL_24:

    return 1;
  }
  id v14 = [v13 fp_appContainerBundleIdentifier];
  if (v14)
  {
    id v15 = v14;
    id v16 = [self defaultSourceIdentifierForBundleIdentifier:v14];

    if (v16)
    {
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
      if (v17 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v19 == v20)
      {
        swift_bridgeObjectRelease_n();
LABEL_19:

        return 1;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_19;
      }
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v24;
      if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
      {

        swift_bridgeObjectRelease_n();
        goto LABEL_24;
      }
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_24;
      }
    }
  }
  id v28 = [v13 childItemCount];
  if (!v28)
  {

    return 0;
  }
  objc_super v29 = v28;
  id v30 = [v28 integerValue];

  return (uint64_t)v30 > 0;
}

unint64_t sub_1001D4A34()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  unint64_t result = swift_beginAccess();
  if (*v1 == 1)
  {
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    if (v3)
    {
      id v4 = v3;
      unint64_t result = (unint64_t)[v4 preparedCells];
      if (!result) {
        goto LABEL_38;
      }
      id v5 = (void *)result;
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v38 = v4;
      uint64_t v39 = v0;
      if (v6 >> 62) {
        goto LABEL_25;
      }
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v7)
      {
        uint64_t v40 = (float64x2_t *)(v39 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics);
        unint64_t v8 = v6 & 0xC000000000000001;
        uint64_t v9 = 4;
        while (1)
        {
          id v10 = v8 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v6 + 8 * v9);
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          type metadata accessor for DOCItemCollectionCell();
          id v13 = (void *)swift_dynamicCastClass();
          if (v13)
          {
            uint64_t v14 = (*(uint64_t (**)(void))((swift_isaMask & *v13) + 0x1F8))();
            if (v14)
            {
              id v15 = (char *)v14;
              double v16 = v40[2].f64[0];
              uint64_t v17 = v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics;
              float64x2_t v19 = *v40;
              float64x2_t v18 = v40[1];
              float64x2_t v21 = *(float64x2_t *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics);
              float64x2_t v20 = *(float64x2_t *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 16);
              double v22 = *(double *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 32);
              char v23 = *(unsigned char *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_stackMetrics + 40);
              *(float64x2_t *)uint64_t v17 = *v40;
              *(float64x2_t *)(v17 + 16) = v18;
              *(double *)(v17 + 32) = v16;
              *(unsigned char *)(v17 + 40) = 0;
              if ((v23 & 1) != 0
                || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v19, v21), (int32x4_t)vceqq_f64(v18, v20))), 0xFuLL))) & 1) == 0|| v16 != v22)
              {
                unint64_t v24 = v6;
                uint64_t v25 = v7;
                uint64_t v26 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
                uint64_t v27 = *(void *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
                if ((v27 & 0x400) == 0)
                {
                  v27 |= 0x400uLL;
                  *(void *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v27;
                }
                if (!*(void *)(v14 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
                  && !sub_1000CBC64())
                {
                  *(void *)&v15[v26] = 0;
                  sub_100090F98(v27, (uint64_t)v15);
                }
                uint64_t v7 = v25;
                unint64_t v6 = v24;
              }
            }
          }

          ++v9;
          if (v12 == v7) {
            goto LABEL_26;
          }
        }
        __break(1u);
LABEL_25:
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_26:
      swift_bridgeObjectRelease();
      unint64_t result = (unint64_t)sub_10001A904();
      unint64_t v29 = result;
      if (result >> 62)
      {
        unint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v30 = result;
        if (result) {
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v30 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v30)
        {
LABEL_28:
          if (v30 >= 1)
          {
            uint64_t v31 = 0;
            uint64_t v32 = v39 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics;
            do
            {
              if ((v29 & 0xC000000000000001) != 0) {
                uint64_t v33 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                uint64_t v33 = (char *)*(id *)(v29 + 8 * v31 + 32);
              }
              uint64_t v34 = v33;
              ++v31;
              uint64_t v35 = *(void *)(v32 + 32);
              BOOL v36 = &v33[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
              long long v37 = *(_OWORD *)(v32 + 16);
              *(_OWORD *)BOOL v36 = *(_OWORD *)v32;
              *((_OWORD *)v36 + 1) = v37;
              *((void *)v36 + 4) = v35;
              sub_1004D3728();
            }
            while (v30 != v31);
            goto LABEL_35;
          }
          __break(1u);
LABEL_38:
          __break(1u);
          return result;
        }
      }
LABEL_35:

      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_1001D4DB8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1001DAF30(a1)) {
    goto LABEL_10;
  }
  if (IndexPath.count.getter() != 2) {
    goto LABEL_7;
  }
  unint64_t result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if (([result isGathering] & 1) == 0
      && (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_1001DAF30(a1) & 1) != 0)
    {
LABEL_7:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_9:
      sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_1007069A0);
LABEL_10:
      char v12 = 0;
      return (void *)(v12 & 1);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
      goto LABEL_9;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v13 = IndexPath.item.getter();
    uint64_t v14 = v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
    swift_beginAccess();
    unint64_t v15 = *(void *)(v14 + 8);
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v13 < v17)
      {
LABEL_14:
        double v16 = (void *)sub_1001BAA44((uint64_t)v10, 0);
        if (v16)
        {
          char v12 = sub_1001D50C0(v16);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          return (void *)(v12 & 1);
        }
      }
    }
    else if (v13 < *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D50C0(void *a1)
{
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  if ([v1 isEditing] & 1) == 0 && (objc_msgSend(a1, "isCopying")) {
    return 1;
  }
  id v11 = [a1 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  static UTType.folder.getter();
  LOBYTE(v11) = static UTType.== infix(_:_:)();
  char v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  v12(v9, v3);
  if ((v11 & 1) != 0
    && [*(id *)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] forPickingDocuments]&& objc_msgSend(v1, "isEditing"))
  {
    int v13 = v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode];
  }
  else
  {
    int v13 = 1;
  }
  return sub_1000968BC(a1) & v13;
}

void *sub_1001D5290(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v12 = (char *)&v20 - v11;
  if (IndexPath.count.getter() != 2) {
    goto LABEL_6;
  }
  unint64_t result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (result)
  {
    if (([result isGathering] & 1) != 0
      || (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0
      || (sub_1001DAF30(a1) & 1) == 0)
    {
      uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
      v14(v5, a1, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
        double v16 = (void *)sub_1001BAA44((uint64_t)v12, 0);
        if (v16)
        {
          if ((v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] & 1) == 0
            || ![v16 isFolder])
          {
            unsigned __int8 v17 = [v1 isEditing];
            v14(v10, a1, v6);
            if (v17)
            {
              uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
              v18(v10, v6);
            }
            else
            {
              unsigned __int8 v19 = sub_1001DAF30((uint64_t)v10);
              uint64_t v18 = *(void (**)(char *, uint64_t))(v7 + 8);
              v18(v10, v6);
              if (v19)
              {
                v18(v12, v6);
                swift_unknownObjectRelease();
                unsigned __int8 v15 = 1;
                return (void *)(v15 & 1);
              }
            }
            unsigned __int8 v15 = sub_1001D4DB8(a1);
            swift_unknownObjectRelease();
            v18(v12, v6);
            return (void *)(v15 & 1);
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          swift_unknownObjectRelease();
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        }
LABEL_9:
        unsigned __int8 v15 = 0;
        return (void *)(v15 & 1);
      }
LABEL_8:
      sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
      goto LABEL_9;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void *sub_1001D562C(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter() != 2) {
    goto LABEL_6;
  }
  unint64_t result = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (result)
  {
    if (([result isGathering] & 1) != 0
      || (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) == 0
      || (sub_1001DAF30(a1) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
        char v12 = (void *)sub_1001BAA44((uint64_t)v9, 0);
        if (v12)
        {
          if (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode])
          {
            unsigned __int8 v13 = [v12 isFolder];
            swift_unknownObjectRelease();
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            if (v13) {
              goto LABEL_12;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            swift_unknownObjectRelease();
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
LABEL_9:
        if ([v1 isEditing])
        {
          unsigned __int8 v11 = 0;
          return (void *)(v11 & 1);
        }
        if ((sub_1001DAF30(a1) & 1) == 0)
        {
          unsigned __int8 v11 = sub_1001D4DB8(a1);
          return (void *)(v11 & 1);
        }
LABEL_12:
        unsigned __int8 v11 = 1;
        return (void *)(v11 & 1);
      }
LABEL_8:
      sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
      goto LABEL_9;
    }
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D592C(Swift::Int a1, Swift::Int a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(*(void *)(v3 + 16) + 16) >= 0xAuLL)
  {
    uint64_t result = String.count.getter();
    if (*(void *)(v3 + 24) >= result) {
      return result;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char v8 = sub_1000EDD5C(&v38, a1, a2);
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return result;
  }
  uint64_t v9 = *v6;
  unint64_t v10 = *(void *)(*v6 + 16);
  if (v10 >= 0xB)
  {
    swift_retain();
    uint64_t v11 = swift_bridgeObjectRetain();
    uint64_t v12 = sub_100208CEC(v11, v3);
    swift_release();
    *(void *)(v3 + 16) = v12;
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void *)(v3 + 16);
    unint64_t v10 = *(void *)(v9 + 16);
  }
  if (!v10)
  {
LABEL_16:
    unint64_t v23 = _swiftEmptyArrayStorage[2];
    if (!v23)
    {
      uint64_t result = swift_bridgeObjectRelease();
      int64_t v24 = *(void *)(v3 + 24);
LABEL_29:
      *(void *)(v3 + 24) = v24;
      return result;
    }
    int64_t v24 = _swiftEmptyArrayStorage[4];
    unint64_t v25 = v23 - 1;
    if (v23 != 1)
    {
      if (v23 < 5)
      {
        unint64_t v26 = 1;
        goto LABEL_24;
      }
      unint64_t v26 = v25 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v27 = vdupq_n_s64(v24);
      id v28 = (int64x2_t *)&_swiftEmptyArrayStorage[7];
      unint64_t v29 = v25 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v30 = v27;
      do
      {
        int64x2_t v27 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v27, v28[-1]), (int8x16_t)v28[-1], (int8x16_t)v27);
        int64x2_t v30 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v30, *v28), *(int8x16_t *)v28, (int8x16_t)v30);
        v28 += 2;
        v29 -= 4;
      }
      while (v29);
      int8x16_t v31 = vbslq_s8((int8x16_t)vcgtq_s64(v30, v27), (int8x16_t)v27, (int8x16_t)v30);
      uint64_t v32 = vextq_s8(v31, v31, 8uLL).u64[0];
      int64_t v24 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v32, v31.i64[0]), *(int8x8_t *)v31.i8, (int8x8_t)v32);
      if (v25 != (v25 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_24:
        unint64_t v33 = v23 - v26;
        uint64_t v34 = &_swiftEmptyArrayStorage[v26 + 4];
        do
        {
          int64_t v36 = *v34++;
          int64_t v35 = v36;
          if (v36 < v24) {
            int64_t v24 = v35;
          }
          --v33;
        }
        while (v33);
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  uint64_t v37 = v3;
  swift_bridgeObjectRetain();
  sub_100190E44(0, v10, 0);
  uint64_t result = sub_1001FF720(v9);
  uint64_t v13 = result;
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(unsigned char *)(v9 + 32))
  {
    if (((*(void *)(v9 + 56 + (((unint64_t)v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v9 + 36) != v15) {
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = String.count.getter();
    swift_bridgeObjectRelease();
    unint64_t v20 = _swiftEmptyArrayStorage[2];
    unint64_t v19 = _swiftEmptyArrayStorage[3];
    if (v20 >= v19 >> 1) {
      sub_100190E44(v19 > 1, v20 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v20 + 1;
    _swiftEmptyArrayStorage[v20 + 4] = v18;
    uint64_t result = sub_100544444(v13, v15, v17 & 1, v9);
    uint64_t v13 = result;
    uint64_t v15 = v21;
    char v17 = v22 & 1;
    if (!--v10)
    {
      sub_1000D3250(result, v21, v22 & 1);
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void sub_1001D5C48()
{
  uint64_t v1 = v0;
  v27[5] = (Swift::Int)&_swiftEmptySetSingleton;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  double v9 = 0.0;
  if (!v6) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v8 << 6))
  {
    uint64_t v12 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * i);
    Swift::Int v14 = *v12;
    Swift::Int v13 = v12[1];
    swift_bridgeObjectRetain_n();
    char v15 = sub_1000EDD5C(v27, v14, v13);
    swift_bridgeObjectRelease();
    if (v15)
    {
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_1000CBE70((uint64_t *)&unk_100706750);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A0030;
      *(void *)(inited + 32) = NSFontAttributeName;
      uint64_t v21 = *(void **)(v1 + 40);
      *(void *)(inited + 64) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
      *(void *)(inited + 40) = v21;
      char v22 = NSFontAttributeName;
      id v23 = v21;
      sub_10009CC48(inited);
      type metadata accessor for Key(0);
      sub_100078438((unint64_t *)&qword_100706230, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v19 sizeWithAttributes:isa];
      double v26 = v25;

      if (v9 < v26) {
        double v9 = v26;
      }
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v16 >= v7) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v7) {
        goto LABEL_25;
      }
      unint64_t v17 = *(void *)(v3 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v7) {
          goto LABEL_25;
        }
        unint64_t v17 = *(void *)(v3 + 8 * v8);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v7)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v7) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1001D5F38()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1001D5F78()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v7 = (unint64_t)(v0 + 2);
  double v8 = COERCE_DOUBLE(sub_1001FCB78());
  uint64_t result = 0;
  if (v10) {
    return result;
  }
  if ((~*(void *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v1 = (uint64_t)v8;
  unint64_t v7 = *v2;
  if (!(*v2 >> 62))
  {
    uint64_t v11 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 > v1) {
      goto LABEL_7;
    }
LABEL_16:
    static Logger.UI.getter();
    Swift::Int v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v19 = v17;
      *(_DWORD *)uint64_t v15 = 136315650;
      uint64_t v18 = sub_10009B0E4(0x29287478656ELL, 0xE600000000000000, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2048;
      uint64_t v18 = *(void *)&v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 22) = 2048;
      uint64_t v18 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: %f >= %ld", (uint8_t *)v15, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return 0;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 <= v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
LABEL_7:
  if ((v7 & 0xC000000000000001) != 0) {
    return specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if (v1 < 0)
  {
    __break(1u);
  }
  else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)v1)
  {
    return swift_unknownObjectRetain();
  }
  __break(1u);
  return result;
}

void sub_1001D62C0(void *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = a1;
  if ([v4 isFirstResponder])
  {
    if (!*(void *)&v4[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      __break(1u);
      return;
    }
    a3();
  }
}

id sub_1001D6334(void *a1, void *a2, char a3, double a4, double a5, double a6, double a7)
{
  id v43 = a1;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v19 = &v39[-v18];
  if (a3)
  {
    static Logger.UI.getter();
    unint64_t v33 = v43;
    int64_t v24 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v34))
    {
      int64_t v35 = (uint8_t *)swift_slowAlloc();
      char v41 = (void *)swift_slowAlloc();
      *(_DWORD *)int64_t v35 = 138412290;
      objc_super v44 = v33;
      int64_t v36 = v33;
      uint64_t v42 = v14;
      uint64_t v37 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v41 = v33;

      uint64_t v14 = v42;
      _os_log_impl((void *)&_mh_execute_header, v24, v34, "converting cell geometry from: %@ to screen space", v35, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      id v23 = 0;
      uint64_t v32 = &selRef_convertRect_toView_;
      uint64_t v19 = v17;
    }
    else
    {

      id v23 = 0;
      int64_t v24 = v33;
      uint64_t v19 = v17;
      uint64_t v32 = &selRef_convertRect_toView_;
    }
  }
  else
  {
    static Logger.UI.getter();
    id v20 = v43;
    id v21 = a2;
    char v22 = v20;
    id v23 = v21;
    int64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    int v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      char v41 = (void *)v13;
      unint64_t v29 = (void *)v28;
      *(_DWORD *)uint64_t v27 = 138412546;
      uint64_t v42 = v14;
      int v40 = v26;
      objc_super v44 = v22;
      int64x2_t v30 = v22;
      uint64_t v14 = v42;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v29 = v22;

      *(_WORD *)(v27 + 12) = 2112;
      objc_super v44 = v23;
      int8x16_t v31 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v29[1] = v23;

      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v40, "converting cell geometry from: %@ to view: %@", (uint8_t *)v27, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      uint64_t v13 = (uint64_t)v41;
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v32 = &selRef_convertRect_toCoordinateSpace_;
      id v23 = v31;
    }
    else
    {

      uint64_t v32 = &selRef_convertRect_toCoordinateSpace_;
      int64_t v24 = v22;
    }
  }

  (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v19, v13);
  return [v43 *v32 v23 a4 a5 a6 a7];
}

uint64_t sub_1001D6760(void *a1, char *a2, uint64_t a3, void *a4, void (*a5)(id, uint64_t, id, NSObject *, double, double, double, double), uint64_t a6, int a7, int a8)
{
  int v185 = a8;
  LODWORD(v188) = a7;
  uint64_t v195 = a5;
  uint64_t v196 = a6;
  char v189 = a4;
  BOOL v198 = a2;
  uint64_t v183 = type metadata accessor for DispatchTimeInterval();
  uint64_t v182 = *(void *)(v183 - 8);
  uint64_t v10 = __chkstk_darwin(v183);
  uint64_t v181 = (void (**)(unint64_t, char *, os_log_t))((char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v180 = (void (**)(unint64_t, char *, os_log_t))((char *)&v161 - v12);
  uint64_t v186 = type metadata accessor for DispatchTime();
  uint64_t v179 = *(void *)(v186 - 8);
  uint64_t v13 = __chkstk_darwin(v186);
  unsigned int v177 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v178 = (char *)&v161 - v15;
  uint64_t v174 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  id v171 = (char *)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for DispatchQoS();
  uint64_t v170 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  id v169 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = type metadata accessor for OS_dispatch_source.TimerFlags();
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v166 = (char *)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v193 = (uint64_t (*)())v19;
  uint64_t v194 = v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v192 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v187 = (char *)&v161 - v24;
  __chkstk_darwin(v23);
  uint64_t v184 = (char *)&v161 - v25;
  uint64_t v26 = type metadata accessor for IndexPath();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v176 = (char *)&v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = v29;
  __chkstk_darwin(v28);
  int8x16_t v31 = (char *)&v161 - v30;
  os_log_t v191 = (os_log_t)sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v32 = __chkstk_darwin(v191);
  os_log_type_t v34 = (char *)&v161 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v161 - v36;
  __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v161 - v38;
  int v40 = a1;
  id v41 = [a1 indexPathsForVisibleItems];
  uint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v43 = v198;
  swift_unknownObjectRetain();
  uint64_t v197 = v43;
  uint64_t v190 = a3;
  sub_1001B60B8(v42, v43, a3, v39);
  uint64_t v44 = v27;
  swift_bridgeObjectRelease();
  BOOL v198 = v39;
  uint64_t v45 = (uint64_t)v39;
  id v46 = v26;
  sub_1000CBC00(v45, (uint64_t)v37, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v37, 1, v26) == 1)
  {
    sub_1000CBBA4((uint64_t)v37, (uint64_t *)&unk_1007069A0);
LABEL_11:
    long long aBlock = 0;
    unint64_t v202 = 0xE000000000000000;
    _StringGuts.grow(_:)(102);
    v66._object = (void *)0x80000001005DC620;
    v66._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v66);
    v67._uint64_t countAndFlagsBits = 0xD000000000000019;
    v67._object = (void *)0x80000001005DC640;
    String.append(_:)(v67);
    sub_1000CBC00((uint64_t)v198, (uint64_t)v34, (uint64_t *)&unk_1007069A0);
    v68._uint64_t countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v68);
    swift_bridgeObjectRelease();
    v69._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
    v69._object = (void *)0x80000001005DC660;
    String.append(_:)(v69);
    char v53 = v197;
    [v197 loadViewIfNeeded];
    Class v70 = *(void **)((char *)v53 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
    uint64_t v71 = v192;
    if (v70)
    {
      id v72 = [v70 indexPathsForVisibleItems];
      uint64_t v73 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = *(void *)(v73 + 16);
      swift_bridgeObjectRelease();
      uint64_t v200 = v74;
      v75._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v75);
      swift_bridgeObjectRelease();
      v76._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v76._object = (void *)0x80000001005DC690;
      String.append(_:)(v76);
      double v78 = aBlock;
      unint64_t v77 = v202;
      sub_100161A24((uint64_t)aBlock, v202);
      static Logger.UI.getter();
      swift_bridgeObjectRetain();
      double v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v79, v80))
      {
        double v81 = (uint8_t *)swift_slowAlloc();
        long long aBlock = (void *)swift_slowAlloc();
        *(_DWORD *)double v81 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v200 = sub_10009B0E4((uint64_t)v78, v77, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s", v81, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t (*)()))(v194 + 8))(v71, v193);
      v195(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);
      return sub_1000CBBA4((uint64_t)v198, (uint64_t *)&unk_1007069A0);
    }
    __break(1u);
LABEL_32:
    type metadata accessor for DOCServicePopoverTrackerRegion(0);
    uint64_t v204 = v160;
    long long aBlock = v53;
    uint64_t result = doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
    __break(1u);
    return result;
  }
  unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v47(v31, v37, v26);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v49 = [v40 cellForItemAtIndexPath:isa];

  if (!v49)
  {
LABEL_10:
    (*(void (**)(char *, NSObject *))(v27 + 8))(v31, v46);
    goto LABEL_11;
  }
  uint64_t v165 = v27 + 32;
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v50 = swift_dynamicCastClass();
  if (!v50)
  {

    goto LABEL_10;
  }
  char v51 = (void *)v50;
  char v52 = v188 & 1;
  char v53 = v189;
  if (v189)
  {
    if (v189 == (void *)1)
    {
      id v83 = sub_1001DB0D4(v40);
      id v84 = [v83 window];

      if (v84)
      {
        [v51 bounds];
        sub_1001D6334(v51, v83, v52, v85, v86, v87, v88);
        double v90 = v89;
        double v92 = v91;
        double v94 = v93;
        double v96 = v95;
        id v97 = v49;
        v195(0, 0, v51, 0, v90, v92, v94, v96);

        (*(void (**)(char *, NSObject *))(v44 + 8))(v31, v46);
      }
      else
      {
        unint64_t v164 = v31;
        id v99 = v184;
        static Logger.UI.getter();
        id v100 = v49;
        id v101 = v83;
        double v102 = v100;
        CGFloat v103 = v99;
        id v104 = v101;
        CGFloat v105 = Logger.logObject.getter();
        os_log_type_t v106 = static os_log_type_t.error.getter();
        int v107 = v106;
        if (os_log_type_enabled(v105, v106))
        {
          uint64_t v108 = swift_slowAlloc();
          uint64_t v109 = (void *)swift_slowAlloc();
          uint64_t v192 = (char *)swift_slowAlloc();
          long long aBlock = v192;
          *(_DWORD *)uint64_t v108 = 136315650;
          uint64_t v197 = v102;
          uint64_t v200 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&aBlock);
          os_log_t v191 = v105;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v108 + 12) = 2112;
          LODWORD(v190) = v107;
          uint64_t v200 = (uint64_t)v51;
          uint64_t v110 = v44;
          int v111 = v197;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v109 = v51;

          *(_WORD *)(v108 + 22) = 2112;
          uint64_t v200 = (uint64_t)v104;
          id v112 = v104;
          double v102 = v197;
          uint64_t v44 = v110;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v109[1] = v104;

          os_log_t v113 = v191;
          _os_log_impl((void *)&_mh_execute_header, v191, (os_log_type_t)v190, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v108, 0x20u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t (*)()))(v194 + 8))(v184, v193);
        }
        else
        {

          (*(void (**)(char *, uint64_t (*)()))(v194 + 8))(v103, v193);
        }
        v195(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);

        (*(void (**)(char *, NSObject *))(v44 + 8))(v164, v46);
      }
      return sub_1000CBBA4((uint64_t)v198, (uint64_t *)&unk_1007069A0);
    }
    goto LABEL_32;
  }
  LODWORD(v191) = v188 & 1;
  char v189 = v40;
  char v54 = v187;
  static Logger.UI.getter();
  uint64_t v55 = (char *)v49;
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.debug.getter();
  BOOL v58 = os_log_type_enabled(v56, v57);
  uint64_t v192 = v55;
  uint64_t v163 = v44;
  unint64_t v164 = v31;
  id v162 = v51;
  int v161 = (void (*)(unint64_t, char *, os_log_t))v47;
  if (v58)
  {
    uint64_t v59 = v51;
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    long long aBlock = v61;
    *(_DWORD *)uint64_t v60 = 136315138;
    uint64_t v62 = (*(uint64_t (**)(void *))((swift_isaMask & *v59) + 0x1F8))(v61);
    if (v62)
    {
      char v63 = (void *)v62;
      uint64_t v64 = (uint64_t *)(v62 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      uint64_t v65 = *v64;
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v65 = 0;
    }
    uint64_t v199 = v65;
    sub_1000CBE70(&qword_100717520);
    uint64_t v114 = String.init<A>(describing:)();
    uint64_t v199 = sub_10009B0E4(v114, v115, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v116 = v192;

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "waiting for up-to-date thumbnail for %s before returning display information to the transition...", v60, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t (*)()))(v194 + 8))(v187, v193);
    uint64_t v98 = v196;
    uint64_t v44 = v163;
  }
  else
  {

    (*(void (**)(char *, uint64_t (*)()))(v194 + 8))(v54, v193);
    uint64_t v98 = v196;
  }
  uint64_t v117 = swift_allocObject();
  *(unsigned char *)(v117 + 16) = 0;
  uint64_t v118 = swift_allocObject();
  *(unsigned char *)(v118 + 16) = 0;
  uint64_t v119 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v120 = swift_allocObject();
  *(void *)(v120 + 16) = v119;
  *(void *)(v120 + 24) = v118;
  uint64_t v196 = v118;
  CGRect v121 = v195;
  *(void *)(v120 + 32) = v195;
  *(void *)(v120 + 40) = v98;
  *(void *)(v120 + 48) = v117;
  char v122 = (char)v191;
  *(unsigned char *)(v120 + 56) = (_BYTE)v191;
  uint64_t v123 = v190;
  uint64_t v197 = (void *)v120;
  *(void *)(v120 + 64) = v190;
  if (v185)
  {
    sub_10009E6C4(0, &qword_10070AC38);
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v124 = (void *)static OS_dispatch_queue.main.getter();
    long long aBlock = _swiftEmptyArrayStorage;
    sub_100078438(&qword_10070AC40, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
    sub_1000CBE70(&qword_10070AC48);
    sub_100073DF0(&qword_10070AC50, &qword_10070AC48);
    uint64_t v125 = v117;
    Swift::Int v126 = v166;
    uint64_t v127 = v168;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v128 = static OS_dispatch_source.makeTimerSource(flags:queue:)();
    os_log_t v191 = v46;
    uint64_t v129 = (void (*)(id, uint64_t, id, NSObject *, double, double, double, double))v128;

    (*(void (**)(char *, uint64_t))(v167 + 8))(v126, v127);
    uint64_t v195 = v129;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v131 = (void *)swift_allocObject();
    uint64_t v193 = sub_10021ECF0;
    uint64_t v194 = v125;
    v131[2] = v125;
    v131[3] = sub_10021ECF0;
    uint64_t v132 = v162;
    v131[4] = v197;
    v131[5] = v132;
    uint64_t v205 = sub_10021ECF8;
    id v206 = v131;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v202 = 1107296256;
    uint64_t v203 = sub_1000666D8;
    uint64_t v204 = &unk_100696880;
    uint64_t v133 = _Block_copy(&aBlock);
    uint64_t v192 = v192;
    swift_retain();
    swift_retain();
    id v134 = v169;
    static DispatchQoS.unspecified.getter();
    uint64_t v135 = v171;
    sub_1001D8AD0();
    uint64_t v188 = ObjectType;
    OS_dispatch_source.setEventHandler(qos:flags:handler:)();
    _Block_release(v133);
    (*(void (**)(char *, uint64_t))(v173 + 8))(v135, v174);
    (*(void (**)(char *, uint64_t))(v170 + 8))(v134, v172);
    swift_release();
    OS_dispatch_source.resume()();
    uint64_t v136 = v177;
    static DispatchTime.now()();
    uint64_t v137 = v180;
    *uint64_t v180 = 250;
    uint64_t v138 = v182;
    int v139 = *(void (**)(void *, void, uint64_t))(v182 + 104);
    uint64_t v140 = v183;
    v139(v137, enum case for DispatchTimeInterval.milliseconds(_:), v183);
    uint64_t v141 = v178;
    + infix(_:_:)();
    uint64_t v142 = *(void (**)(void *, uint64_t))(v138 + 8);
    v142(v137, v140);
    char v143 = *(void (**)(char *, uint64_t))(v179 + 8);
    v143(v136, v186);
    v139(v137, enum case for DispatchTimeInterval.never(_:), v140);
    uint64_t v144 = v181;
    *uint64_t v181 = 0;
    v139(v144, enum case for DispatchTimeInterval.nanoseconds(_:), v140);
    OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
    v142(v144, v140);
    v142(v137, v140);
    v143(v141, v186);
    uint64_t v188 = swift_getObjectType();
    uint64_t v145 = v163;
    uint64_t v146 = v176;
    os_log_t v147 = v191;
    (*(void (**)(char *, char *, os_log_t))(v163 + 16))(v176, v164, v191);
    unint64_t v148 = (*(unsigned __int8 *)(v145 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    unint64_t v149 = (v175 + v148 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v150 = (v149 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v151 = (v150 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v152 = (v151 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v153 = swift_allocObject();
    char v154 = v189;
    *(void *)(v153 + 16) = v189;
    v161(v153 + v148, v146, v147);
    *(void *)(v153 + v149) = v195;
    uint64_t v155 = (uint64_t (**)())(v153 + v150);
    unint64_t v156 = (uint64_t (*)())v197;
    *uint64_t v155 = v193;
    v155[1] = v156;
    *(void *)(v153 + v151) = v162;
    *(void *)(v153 + v152) = v190;
    *(void *)(v153 + ((v152 + 15) & 0xFFFFFFFFFFFFFFF8)) = v196;
    swift_unknownObjectRetain();
    unint64_t v157 = v192;
    swift_retain();
    swift_retain();
    id v158 = v154;
    swift_unknownObjectRetain();
    DOCNode.fpfs_fetchFPItem(completion:)();

    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, os_log_t))(v163 + 8))(v164, v147);
  }
  else
  {
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v159 = v196;
    swift_retain();
    swift_retain();
    sub_1001D7E4C(v162, v119, v159, v121, v98, v117, v122, v123);

    swift_release();
    swift_release();
    (*(void (**)(char *, NSObject *))(v44 + 8))(v164, v46);
  }
  sub_1000CBBA4((uint64_t)v198, (uint64_t *)&unk_1007069A0);
  swift_release();
  return swift_release();
}

void sub_1001D7E4C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t, id, NSObject *, double, double, double, double), uint64_t a5, uint64_t a6, char a7, NSObject *a8)
{
  uint64_t v117 = a8;
  uint64_t v123 = type metadata accessor for Logger();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v14 = __chkstk_darwin(v123);
  uint64_t v16 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  CGRect v121 = (char *)&v111 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v111 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v111 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = Strong;
    uint64_t v119 = a4;
    uint64_t v26 = a1;
    uint64_t v118 = a5;
    id v27 = [Strong view];
    if (!v27)
    {
      __break(1u);
      return;
    }
    uint64_t v28 = v27;
    uint64_t v29 = (unsigned char *)(a3 + 16);
    id v30 = sub_1001DB0D4(v27);

    int8x16_t v31 = v30;
    swift_beginAccess();
    unsigned char *v29 = 1;
    id v32 = [v30 window];

    if (!v32)
    {
      static Logger.UI.getter();
      id v44 = v26;
      id v45 = v31;
      id v46 = v44;
      unint64_t v47 = v45;
      unint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = swift_slowAlloc();
        char v51 = (void *)swift_slowAlloc();
        CGRect v121 = (char *)swift_slowAlloc();
        Swift::Int v126 = v121;
        *(_DWORD *)uint64_t v50 = 136315650;
        uint64_t v120 = v25;
        v125[0] = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005DC620, (uint64_t *)&v126);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 12) = 2112;
        v125[0] = (uint64_t)v46;
        id v52 = v46;
        uint64_t v117 = v48;
        id v53 = v52;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v51 = v46;

        *(_WORD *)(v50 + 22) = 2112;
        v125[0] = (uint64_t)v47;
        char v54 = v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v51[1] = v47;

        uint64_t v25 = v120;
        uint64_t v55 = v117;
        _os_log_impl((void *)&_mh_execute_header, v117, v49, "%s. Can not compute a frame for cell because cell does not have a window. Returning nil thumbnail and empty rect. Cell: %@ top-most view: %@", (uint8_t *)v50, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v122 + 8))(v16, v123);
      v119(0, 0, 0, 0, 0.0, 0.0, 0.0, 0.0);
      goto LABEL_34;
    }
    uint64_t v120 = v25;
    int v33 = a7 & 1;
    swift_beginAccess();
    BOOL v34 = *(unsigned char *)(a6 + 16) == 1;
    uint64_t v35 = v26;
    os_log_t v113 = v31;
    if (v34)
    {
      static Logger.UI.getter();
      uint64_t v36 = v26;
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v37, v38))
      {
        LODWORD(v116) = v33;
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        v125[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315138;
        uint64_t v40 = (*(uint64_t (**)(void))((swift_isaMask & *v36) + 0x1F8))();
        if (v40)
        {
          id v41 = (void *)v40;
          uint64_t v42 = (uint64_t *)(v40 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v43 = *v42;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v43 = 0;
        }
        uint64_t v124 = v43;
        sub_1000CBE70(&qword_100717520);
        uint64_t v67 = String.init<A>(describing:)();
        uint64_t v124 = sub_10009B0E4(v67, v68, v125);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Timed out (250ms) re-fetching thumbnail for %s", v39, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v65 = *(void (**)(char *, uint64_t))(v122 + 8);
        v65(v23, v123);
        goto LABEL_23;
      }

      uint64_t v65 = *(void (**)(char *, uint64_t))(v122 + 8);
      v65(v23, v123);
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v56 = v26;
      os_log_type_t v57 = Logger.logObject.getter();
      os_log_type_t v58 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v57, v58))
      {
        LODWORD(v116) = v33;
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        v125[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 136315138;
        uint64_t v61 = (*(uint64_t (**)(void))((swift_isaMask & *v56) + 0x1F8))();
        if (v61)
        {
          uint64_t v62 = (void *)v61;
          char v63 = (uint64_t *)(v61 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
          swift_beginAccess();
          uint64_t v64 = *v63;
          swift_unknownObjectRetain();
        }
        else
        {
          uint64_t v64 = 0;
        }
        uint64_t v124 = v64;
        sub_1000CBE70(&qword_100717520);
        uint64_t v69 = String.init<A>(describing:)();
        uint64_t v124 = sub_10009B0E4(v69, v70, v125);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v57, v58, "Updated thumbnail for %s", v60, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v65 = *(void (**)(char *, uint64_t))(v122 + 8);
        v65(v21, v123);
LABEL_23:
        Swift::String v66 = v121;
        int8x16_t v31 = v113;
        uint64_t v35 = v26;
        LOBYTE(v33) = (_BYTE)v116;
        goto LABEL_24;
      }

      uint64_t v65 = *(void (**)(char *, uint64_t))(v122 + 8);
      v65(v21, v123);
    }
    Swift::String v66 = v121;
LABEL_24:
    uint64_t v71 = *(void **)((char *)v35 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
    uint64_t v72 = [v71 addDecoration];
    uint64_t v73 = (char *)v120 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode;
    swift_beginAccess();
    if ((unint64_t)(*(void *)v73 - 1) >= 2) {
      uint64_t v74 = v72;
    }
    else {
      uint64_t v74 = v72 | 2;
    }
    uint64_t v115 = v74;
    id v75 = [v71 layoutIfNeeded];
    double v76 = (*(double (**)(id))((swift_isaMask & *v35) + 0x100))(v75);
    sub_1001D6334(v35, v31, v33, v76, v77, v78, v79);
    double v114 = v80;
    double v82 = v81;
    double v84 = v83;
    double v86 = v85;
    [v71 _continuousCornerRadius];
    double v88 = v87;
    [v71 bounds];
    double v93 = v91;
    double v94 = v92;
    double v95 = v119;
    id v116 = v71;
    if (v88 <= 0.0)
    {
      id v99 = sub_10020A5CC(v117, v91, v92);
    }
    else
    {
      double v96 = v89;
      double v97 = v90;
      [v71 _continuousCornerRadius];
      id v99 = [self bezierPathWithRoundedRect:v96 cornerRadius:v97 v93, v94, v98];
    }
    uint64_t v117 = v99;
    static Logger.UI.getter();
    id v100 = v35;
    id v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v103 = swift_slowAlloc();
      id v112 = v65;
      id v104 = (uint8_t *)v103;
      CGFloat v105 = (void *)swift_slowAlloc();
      *(_DWORD *)id v104 = 138412290;
      uint64_t v124 = (uint64_t)v100;
      os_log_type_t v106 = v100;
      Swift::String v66 = v121;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *CGFloat v105 = v35;

      _os_log_impl((void *)&_mh_execute_header, v101, v102, "calling completion block with cell %@", v104, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      int8x16_t v31 = v113;
      swift_slowDealloc();
      uint64_t v65 = v112;
      swift_slowDealloc();
    }
    else
    {

      id v101 = v100;
    }
    int v107 = v120;

    v65(v66, v123);
    id v108 = v116;
    id v109 = [v116 image];
    uint64_t v110 = v117;
    unint64_t v47 = v117;
    v95(v109, v115, v108, v110, v114, v82, v84, v86);

    uint64_t v25 = v47;
LABEL_34:
  }
}

uint64_t sub_1001D8AD0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

void sub_1001D8BAC(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v43 = a6;
  uint64_t v44 = a5;
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v40 = a9;
    uint64_t v38 = v15;
    uint64_t v19 = self;
    uint64_t v39 = a4;
    uint64_t v20 = (void *)v19;
    id v42 = a1;
    id v41 = [v20 defaultManager];
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v15);
    unint64_t v21 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v22 = (v17 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = a7;
    uint64_t v37 = a8;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v26 + v21, v18, v38);
    *(void *)(v26 + v22) = v39;
    id v27 = (void *)(v26 + v23);
    uint64_t v28 = v43;
    *id v27 = v44;
    v27[1] = v28;
    id v30 = v36;
    uint64_t v29 = v37;
    *(void *)(v26 + v24) = v36;
    *(void *)(v26 + v25) = v29;
    *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v40;
    id v31 = a2;
    swift_unknownObjectRetain();
    swift_retain();
    id v32 = v30;
    swift_unknownObjectRetain();
    swift_retain();
    int v33 = v41;
    BOOL v34 = v42;
    FPItemManager.doc_refetchItem(_:completion:)();
    swift_release();
  }
}

void sub_1001D8DE4(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v40 = a7;
  id v41 = a8;
  uint64_t v38 = a6;
  uint64_t v39 = a2;
  id v42 = a3;
  uint64_t v36 = a1;
  uint64_t v37 = a10;
  uint64_t v34 = a5;
  uint64_t v35 = a9;
  uint64_t v33 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v33 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v33);
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v32 = (v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v14 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v13, (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v33);
  *(void *)(v19 + v32) = v34;
  uint64_t v20 = (void *)(v19 + v14);
  uint64_t v22 = v40;
  unint64_t v21 = v41;
  *uint64_t v20 = v38;
  v20[1] = v22;
  *(void *)(v19 + v15) = v21;
  uint64_t v24 = v35;
  unint64_t v23 = v36;
  *(void *)(v19 + v16) = v36;
  *(void *)(v19 + v17) = v24;
  unint64_t v25 = v39;
  *(void *)(v19 + v18) = v39;
  *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v37;
  aBlock[4] = sub_10021EF50;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100696920;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v25;
  swift_retain();
  id v28 = v42;
  swift_unknownObjectRetain();
  swift_retain();
  id v29 = v21;
  id v30 = v23;
  swift_unknownObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v26);
}

void sub_1001D9058(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t a6, void *a7, void *a8, void *a9, uint64_t a10)
{
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v21 = [a1 cellForItemAtIndexPath:isa];

  if (!v21) {
    goto LABEL_7;
  }
  uint64_t v55 = a4;
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v22 = (void *)swift_dynamicCastClass();
  if (!v22)
  {

    a4 = v55;
LABEL_7:
    swift_getObjectType();
    OS_dispatch_source.cancel()();
    a4(a6);
    return;
  }
  unint64_t v23 = v22;
  if (a7)
  {
    uint64_t v24 = (*(uint64_t (**)(void))((swift_isaMask & *v22) + 0x1F8))();
    if (v24)
    {
      unint64_t v25 = (void *)v24;
      uint64_t v26 = (void *)(v24 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      void *v26 = a7;
      id v27 = a7;
      swift_unknownObjectRelease();
      sub_10008FA2C();
    }
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v53 = (uint64_t)a9;
    id v28 = a9;
    swift_unknownObjectRetain_n();
    id v54 = v28;
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      unint64_t v32 = (_DWORD *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      v57[0] = v52;
      *unint64_t v32 = 136315394;
      unint64_t v48 = v32;
      os_log_type_t v49 = v32 + 1;
      id v33 = [a8 displayName];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_t v50 = v29;
      uint64_t v35 = v34;
      int v51 = v31;
      unint64_t v37 = v36;

      uint64_t v38 = sub_10009B0E4(v35, v37, v57);
      uint64_t v39 = v48;
      uint64_t v58 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v39 + 6) = 2080;
      uint64_t v58 = v53;
      id v40 = v54;
      sub_1000CBE70(&qword_10070AC20);
      uint64_t v41 = String.init<A>(describing:)();
      uint64_t v58 = sub_10009B0E4(v41, v42, v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v43 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "Could not refetch %s: %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v44 = v54;
      swift_unknownObjectRelease_n();
    }
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v19, v17);
  }
  uint64_t v45 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x1F8))(v24);
  if (v45)
  {
    id v46 = (void *)v45;
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    id v21 = v21;
    sub_100574238((uint64_t)v46, a3, a10, v55, a5, v23);

    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
}

uint64_t sub_1001D951C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (unsigned char *)(a2 + 16);
  static Logger.UI.getter();
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = a5;
    *(_WORD *)unint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "thumbnail updated", v15, 2u);
    a5 = v17;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_getObjectType();
  OS_dispatch_source.cancel()();
  uint64_t result = swift_beginAccess();
  if ((*v12 & 1) == 0) {
    return a3(a5);
  }
  return result;
}

unint64_t sub_1001D96D0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v139 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v139 - 8);
  uint64_t v5 = __chkstk_darwin(v139);
  unint64_t v7 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v122 = (char *)&v107 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v107 - v11;
  __chkstk_darwin(v10);
  id v134 = (char *)&v107 - v13;
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Logger();
  uint64_t v138 = *(void (***)(char *, uint64_t))(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  if (!a1)
  {
    unint64_t result = *(void *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!result) {
      return result;
    }
    id v22 = [(id)result indexPathsForVisibleItems];
    uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  static Logger.UI.getter();
  swift_bridgeObjectRetain();
  unint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v132 = v2;
  uint64_t v133 = v7;
  CGRect v121 = v12;
  uint64_t v131 = v16;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v141 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    uint64_t v140 = sub_10009B0E4(0xD00000000000001ALL, 0x80000001005DCCD0, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v26 + 12) = 2048;
    uint64_t v140 = *(void *)(v20 + 16);
    unint64_t v16 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "DOCNodeCollectionDelegate %s updating contents of %ld cells", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    id v27 = v121;
    uint64_t v2 = v132;
    swift_slowDealloc();
    uint64_t v12 = v27;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  v138[1](v19, v17);
  id v28 = v134;
  uint64_t v29 = v20;
  uint64_t v30 = *(void *)(v20 + 16);
  int v31 = v122;
  uint64_t v116 = v29;
  if (v30)
  {
    uint64_t v128 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
    uint64_t v119 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
    uint64_t v118 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
    unint64_t v32 = v29 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v120 = &v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    uint64_t v33 = v4 + 16;
    uint64_t v34 = *(void (***)(char *, uint64_t))(v4 + 16);
    uint64_t v129 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 32);
    uint64_t v127 = (void (**)(char *, char *))(v33 + 16);
    uint64_t v125 = *(void *)(v33 + 56);
    Swift::Int v126 = (void (**)(void))(v33 - 8);
    char v130 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 40);
    unint64_t v112 = (v33 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    long long v111 = xmmword_1005A0030;
    uint64_t v110 = "bserver for: %{public}@";
    unint64_t v109 = 0x80000001005DCC60;
    uint64_t v137 = v33;
    uint64_t v138 = v34;
    while (1)
    {
      uint64_t v38 = v139;
      ((void (*)(char *, unint64_t, uint64_t))v34)(v16, v32, v139);
      uint64_t v124 = *v130;
      v124(v16, 0, 1, v38);
      if ((*v129)(v16, 1, v38) == 1) {
        return swift_bridgeObjectRelease();
      }
      unint64_t v135 = v32;
      uint64_t v136 = v30;
      uint64_t v39 = v139;
      (*v127)(v28, v16);
      unint64_t result = *(void *)&v2[v128];
      if (!result) {
        goto LABEL_83;
      }
      uint64_t v123 = *(void *)&v2[v128];
      if ([(id)result isGathering])
      {
        ((void (*)(char *, char *, uint64_t))v34)(v12, v28, v39);
        id v40 = v34;
        BOOL v41 = 0;
      }
      else
      {
        int v42 = v2[v119];
        ((void (*)(char *, char *, uint64_t))v34)(v12, v28, v39);
        BOOL v41 = v42 == 1 && IndexPath.item.getter() == 0;
        id v40 = v138;
      }
      os_log_t v43 = v12;
      id v44 = *v126;
      uint64_t v35 = v43;
      (*v126)();
      uint64_t v45 = v31;
      id v46 = v31;
      uint64_t v47 = v28;
      ((void (*)(char *, char *, uint64_t))v40)(v46, v28, v39);
      if (v41)
      {
        uint64_t v48 = IndexPath.section.getter();
        ((void (*)(char *, uint64_t))v44)(v45, v39);
        os_log_type_t v49 = v44;
        unint64_t v36 = v47;
        int v31 = v45;
        if (!v48) {
          goto LABEL_11;
        }
      }
      else
      {
        ((void (*)(char *, uint64_t))v44)(v45, v39);
        os_log_type_t v49 = v44;
        unint64_t v36 = v28;
      }
      uint64_t v50 = *(void *)v120;
      swift_bridgeObjectRetain();
      uint64_t v51 = IndexPath.section.getter();
      uint64_t v52 = v36;
      uint64_t v53 = *(void *)(v50 + 16);
      id v54 = v133;
      ((void (*)(char *, char *, uint64_t))v138)(v133, v52, v139);
      if (v51 >= v53)
      {
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v49)(v54, v139);
LABEL_10:
        int v31 = v122;
        uint64_t v35 = v121;
        unint64_t v36 = v134;
LABEL_11:
        ((void (*)(char *, uint64_t))v49)(v36, v139);
        uint64_t v34 = v138;
        uint64_t v37 = v136;
        uint64_t v2 = v132;
        uint64_t v12 = v35;
        id v28 = v36;
        goto LABEL_12;
      }
      uint64_t v55 = IndexPath.item.getter();
      unint64_t result = IndexPath.section.getter();
      if ((result & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        return result;
      }
      if (result >= *(void *)(v50 + 16)) {
        goto LABEL_78;
      }
      uint64_t v56 = *(void *)(v50 + 32 + 40 * result + 32);
      swift_beginAccess();
      unint64_t v57 = *(void *)(v56 + 16);
      if (v57 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v58 = *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      ((void (*)(char *, uint64_t))v49)(v133, v139);
      if (v55 >= v58)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      unint64_t result = IndexPath.section.getter();
      uint64_t v2 = v132;
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_79;
      }
      if (result >= *(void *)(v50 + 16)) {
        goto LABEL_80;
      }
      uint64_t v59 = *(void *)(v50 + 32 + 40 * result + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      id v28 = v134;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v60 = IndexPath.item.getter();
      swift_beginAccess();
      uint64_t v61 = *(void *)(v59 + 16);
      swift_bridgeObjectRetain();
      unint64_t result = swift_release();
      if ((v61 & 0xC000000000000001) != 0)
      {
        uint64_t v62 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v60 & 0x8000000000000000) != 0) {
          goto LABEL_81;
        }
        if (v60 >= *(void *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_82;
        }
        uint64_t v62 = *(void *)(v61 + 8 * v60 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      unint64_t result = (unint64_t)[v2 loadViewIfNeeded];
      char v63 = *(void **)&v2[v118];
      if (!v63) {
        goto LABEL_84;
      }
      id v64 = v63;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v66 = [v64 cellForItemAtIndexPath:isa];

      uint64_t v67 = v66;
      uint64_t v34 = v138;
      if (!v67) {
        goto LABEL_44;
      }
      type metadata accessor for DOCItemCollectionCell();
      unint64_t v68 = (void *)swift_dynamicCastClass();
      if (!v68)
      {

LABEL_44:
        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v49)(v28, v139);
        int v31 = v122;
        uint64_t v37 = v136;
        uint64_t v12 = v121;
        goto LABEL_12;
      }
      id v113 = v67;
      uint64_t v69 = *(uint64_t (**)(void))((swift_isaMask & *v68) + 0x1F8);
      uint64_t v70 = (swift_isaMask & *v68) + 504;
      uint64_t v71 = (unsigned __int8 *)v69();
      if (v71)
      {
        int v115 = v71[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress];
      }
      else
      {
        int v115 = 0;
      }
      uint64_t v72 = v69();
      double v114 = v49;
      uint64_t v117 = v70;
      if (v72)
      {
        uint64_t v73 = (void *)v72;
        uint64_t v74 = *(void **)(v72 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
        if (v74 && *(unsigned char *)(v72 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) == 1)
        {
          *(unsigned char *)(v72 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 0;
          id v75 = v74;
          double v76 = (void *)static DOCLog.UI.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v77 = swift_allocObject();
          *(_OWORD *)(v77 + 16) = v111;
          id v108 = v69;
          *(void *)(v77 + 56) = sub_10009E6C4(0, &qword_10070EB70);
          *(void *)(v77 + 64) = sub_1000C5A24((unint64_t *)&qword_10070AD50, &qword_10070EB70);
          *(void *)(v77 + 32) = v75;
          id v78 = v75;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          NSString v79 = String._bridgeToObjectiveC()();
          [v78 removeObserver:v73 forKeyPath:v79 context:&unk_10071CC00];

          NSString v80 = String._bridgeToObjectiveC()();
          [v78 removeObserver:v73 forKeyPath:v80 context:&unk_10071CC00];

          uint64_t v69 = v108;
          uint64_t v73 = v80;
          id v28 = v134;
        }
      }
      uint64_t v81 = v69();
      if (v81) {
        break;
      }
LABEL_57:
      uint64_t v87 = v69();
      if (v87)
      {
        double v88 = (void *)v87;
        double v89 = (uint64_t *)(v87 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
        swift_beginAccess();
        *double v89 = v62;
        id v28 = v134;
        swift_unknownObjectRetain_n();
        swift_unknownObjectRelease();
        sub_10008FA2C();

        uint64_t v87 = swift_unknownObjectRelease();
      }
      double v90 = (void *)v62;
      double v91 = v69;
      uint64_t v92 = ((uint64_t (*)(uint64_t))v69)(v87);
      uint64_t v37 = v136;
      if (v92)
      {
        double v93 = (unsigned char *)v92;
        BOOL v94 = sub_1000968BC(v90);
        char v95 = v93[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable];
        v93[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isPickable] = v94;
        sub_10009865C(v95);
      }
      if (v115)
      {
        uint64_t v96 = v91();
        uint64_t v2 = v132;
        double v97 = v121;
        if (!v96)
        {
          ((void (*)(char *, uint64_t))v114)(v28, v139);
          swift_unknownObjectRelease();

LABEL_70:
          int v31 = v122;
          uint64_t v34 = v138;
          uint64_t v12 = v97;
          goto LABEL_12;
        }
        double v98 = (void *)v96;
        id v99 = *(void **)(v96 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress);
        if (!v99)
        {
          swift_unknownObjectRelease();

          ((void (*)(char *, uint64_t))v114)(v28, v139);
          goto LABEL_70;
        }
        *(unsigned char *)(v96 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isObservingProgress) = 1;
        id v100 = v99;
        id v101 = (void *)static DOCLog.UI.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v102 = swift_allocObject();
        *(_OWORD *)(v102 + 16) = v111;
        *(void *)(v102 + 56) = sub_10009E6C4(0, &qword_10070EB70);
        *(void *)(v102 + 64) = sub_1000C5A24((unint64_t *)&qword_10070AD50, &qword_10070EB70);
        *(void *)(v102 + 32) = v100;
        id v103 = v100;
        static os_log_type_t.default.getter();
        os_log(_:dso:log:type:_:)();

        uint64_t v12 = v121;
        id v104 = v132;
        swift_bridgeObjectRelease();
        NSString v105 = String._bridgeToObjectiveC()();
        [v103 addObserver:v98 forKeyPath:v105 options:1 context:&unk_10071CC00];

        NSString v106 = String._bridgeToObjectiveC()();
        uint64_t v2 = v104;
        [v103 addObserver:v98 forKeyPath:v106 options:1 context:&unk_10071CC00];
        swift_unknownObjectRelease();

        id v28 = v134;
        ((void (*)(char *, uint64_t))v114)(v134, v139);
        int v31 = v122;
      }
      else
      {
        ((void (*)(char *, uint64_t))v114)(v28, v139);
        swift_unknownObjectRelease();

        uint64_t v2 = v132;
        int v31 = v122;
        uint64_t v12 = v121;
      }
      uint64_t v34 = v138;
LABEL_12:
      unint64_t v32 = v135 + v125;
      uint64_t v30 = v37 - 1;
      unint64_t v16 = v131;
      if (!v30)
      {
        v124(v131, 1, 1, v139);
        return swift_bridgeObjectRelease();
      }
    }
    double v82 = (unsigned char *)v81;
    double v83 = v69;
    double v84 = (void *)(v123 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    if (*(unsigned char *)(v123 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
    {
      double v85 = *(void **)(*v84 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      double v85 = (void *)v84[1];
      swift_unknownObjectRetain();
      if (!v85)
      {
        unsigned __int8 v86 = 0;
        goto LABEL_56;
      }
    }
    unsigned __int8 v86 = [v85 isShared];
    swift_unknownObjectRelease();
LABEL_56:
    uint64_t v69 = v83;
    v82[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isParentItemShared] = v86;

    id v28 = v134;
    goto LABEL_57;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v16, 1, 1, v139);
  return swift_bridgeObjectRelease();
}

void sub_1001DA75C()
{
  uint64_t v0 = type metadata accessor for OSSignpostID();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    static os_signpost_type_t.event.getter();
    updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_100016400();
  }
}

void sub_1001DA8C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100016400();
  }
}

void sub_1001DA91C()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = v1;
  id v18 = [v1 superview];

  uint64_t v3 = v18;
  if (!v18) {
    return;
  }
  uint64_t v4 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView;
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView])
  {
    id v5 = [v0 view];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 bounds];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;

      id v15 = [objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionLoadingView()) initWithFrame:v8, v10, v12, v14];
      [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
      [v18 addSubview:v15];
      Class isa = (Class)(id)DOCConstraintsToResizeWithSuperview();
      if (!isa)
      {
        sub_10009E6C4(0, (unint64_t *)&unk_100706720);
        static Array._unconditionallyBridgeFromObjectiveC(_:)();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      [self activateConstraints:isa];

      uint64_t v17 = *(void **)&v0[v4];
      *(void *)&v0[v4] = v15;

      uint64_t v3 = v17;
      goto LABEL_8;
    }
LABEL_13:
    __break(1u);
    return;
  }
LABEL_8:
}

void sub_1001DAB10()
{
}

void sub_1001DAB18()
{
}

void sub_1001DAB20(char a1)
{
  id v3 = [*(id *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      sub_1001DA91C();
      uint64_t v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView;
      uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView);
      if (v11)
      {
        [*(id *)(v11 + OBJC_IVAR____TtC5Files28DOCItemCollectionLoadingView_stackView) setHidden:a1 & 1];
        double v12 = *(void **)(v1 + v10);
        if (v12)
        {
          [v12 setHidden:0];
        }
      }
    }
  }
}

id sub_1001DAC50(uint64_t a1)
{
  id v3 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 56) = &type metadata for UInt;
  *(void *)(v4 + 64) = &protocol witness table for UInt;
  *(void *)(v4 + 32) = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (v5 && (id v6 = [v5 preparedCells]) != 0)
  {
    uint64_t v7 = v6;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v8 >> 62) {
      goto LABEL_4;
    }
  }
  else
  {
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62)
    {
LABEL_4:
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v9) {
        goto LABEL_25;
      }
      goto LABEL_8;
    }
  }
  uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
  {
LABEL_25:
    return (id)swift_bridgeObjectRelease();
  }
LABEL_8:
  unint64_t v10 = v8 & 0xC000000000000001;
  uint64_t v11 = 4;
  unint64_t v25 = v8;
  while (1)
  {
    id result = v10 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v8 + 8 * v11);
    double v13 = result;
    uint64_t v14 = v11 - 3;
    if (__OFADD__(v11 - 4, 1)) {
      break;
    }
    type metadata accessor for DOCItemCollectionCell();
    id v15 = (void *)swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = (*(uint64_t (**)(void))((swift_isaMask & *v15) + 0x1F8))();
      if (v16)
      {
        uint64_t v17 = (char *)v16;
        uint64_t v18 = v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin;
        uint64_t v19 = *(void *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin);
        char v20 = *(unsigned char *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_itemsOrigin + 8);
        *(void *)uint64_t v18 = a1;
        *(unsigned char *)(v18 + 8) = 0;
        if ((v20 & 1) != 0 || v19 != a1)
        {
          uint64_t v21 = a1;
          uint64_t v22 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
          uint64_t v23 = *(void *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
          if ((v23 & 1) == 0)
          {
            v23 |= 1uLL;
            *(void *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v23;
          }
          if (!*(void *)(v16 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
            && !sub_1000CBC64())
          {
            *(void *)&v17[v22] = 0;
            sub_100090F98(v23, (uint64_t)v17);
          }
          a1 = v21;
          unint64_t v8 = v25;
        }
      }
    }

    ++v11;
    if (v14 == v9) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

void *sub_1001DAF30(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  id result = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if ([result isGathering]) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton);
    }
    double v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v12(v9, a1, v3);
    if (v11) {
      uint64_t v11 = IndexPath.item.getter() == 0;
    }
    double v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v9, v3);
    v12(v7, a1, v3);
    if (v11) {
      uint64_t v11 = IndexPath.section.getter() == 0;
    }
    v13(v7, v3);
    return (void *)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001DB0D4(void *a1)
{
  id v1 = [a1 superview];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)sub_1001DB0D4();

    type metadata accessor for DOCServiceView();
    if (swift_dynamicCastClass()) {
      return v3;
    }
    self;
    if (swift_dynamicCastObjCClass())
    {
      return v3;
    }
    else
    {
      id v5 = a1;

      return v5;
    }
  }
  else
  {
    return a1;
  }
}

char *sub_1001DB1A4(unint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for IndexPath();
  unint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  double v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v16 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v45 - v15);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (uint64_t)&v45 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v60 = (char *)&v45 - v21;
  __chkstk_darwin(v20);
  uint64_t v59 = v1;
  uint64_t v23 = *(void **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView);
  if (!v23) {
    return 0;
  }
  uint64_t v61 = (char *)&v45 - v22;
  id v65 = v23;
  id result = (char *)[v65 preparedCells];
  if (!result) {
    goto LABEL_47;
  }
  unint64_t v25 = result;
  sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v66 = v26;
  if (v26 >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v64 = (char *)v44;
    if (v44) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
  id v64 = *(char **)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v64)
  {
LABEL_43:

    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  uint64_t v51 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19;
  uint64_t v48 = v16;
  os_log_type_t v49 = v13;
  unint64_t v52 = a1;
  a1 = v66;
  uint64_t v53 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton;
  uint64_t v54 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  uint64_t v67 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  unint64_t v68 = v66 & 0xC000000000000001;
  uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  char v63 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v56 = v8;
  unint64_t v57 = v6;
  uint64_t v58 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v19 = 4;
  double v13 = v64;
  while (1)
  {
    if (v68) {
      id v27 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = (char *)*(id *)(a1 + 8 * v19);
    }
    unint64_t v10 = v27;
    id v28 = (char *)(v19 - 3);
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    type metadata accessor for DOCItemCollectionCell();
    uint64_t v29 = swift_dynamicCastClass();
    if (v29) {
      break;
    }

LABEL_7:
    ++v19;
    if (v28 == v13) {
      goto LABEL_43;
    }
  }
  uint64_t v6 = (char *)v29;
  uint64_t v30 = v10;
  id v31 = [v65 indexPathForCell:v6];
  if (!v31)
  {
    (*v67)(v8, 1, 1, v9);
    goto LABEL_22;
  }
  unint64_t v32 = v31;
  uint64_t v33 = v60;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v34 = *v63;
  (*v63)(v8, v33, v9);
  uint64_t v16 = *v67;
  (*v67)(v8, 0, 1, v9);
  uint64_t v35 = *v62;
  if ((*v62)(v8, 1, v9) == 1)
  {
LABEL_22:

    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
LABEL_38:
    a1 = v66;
    double v13 = v64;
    goto LABEL_7;
  }
  v34(v61, v8, v9);
  id result = (char *)IndexPath.count.getter();
  if (result != (char *)2)
  {
LABEL_30:
    uint64_t v37 = (uint64_t)v57;
    v16(v57, 1, 1, v9);
    uint64_t v38 = v61;
    goto LABEL_34;
  }
  unint64_t v36 = *(void **)(v59 + v54);
  if (v36)
  {
    if (([*(id *)(v59 + v54) isGathering] & 1) != 0 || (*(unsigned char *)(v59 + v53) & 1) == 0)
    {
      uint64_t v37 = (uint64_t)v57;
      uint64_t v38 = v61;
      (*v55)(v57, v61, v9);
    }
    else
    {
      if ([v36 isGathering]) {
        LODWORD(v47) = 0;
      }
      else {
        LODWORD(v47) = *(unsigned __int8 *)(v59 + v53);
      }
      uint64_t v39 = v58;
      id v40 = v48;
      uint64_t v50 = *v55;
      v50((char *)v48, v61, v9);
      if (v47) {
        LODWORD(v46) = IndexPath.item.getter() == 0;
      }
      else {
        LODWORD(v46) = 0;
      }
      uint64_t v47 = *v39;
      v47((char *)v40, v9);
      BOOL v41 = v49;
      v50(v49, v61, v9);
      if (v46)
      {
        uint64_t v46 = IndexPath.section.getter();
        v47(v41, v9);
        if (!v46) {
          goto LABEL_30;
        }
      }
      else
      {
        v47(v41, v9);
      }
      uint64_t v37 = (uint64_t)v57;
      uint64_t v38 = v61;
      v50(v57, v61, v9);
    }
    v16((char *)v37, 0, 1, v9);
    if (v35((char *)v37, 1, v9) != 1)
    {
      uint64_t v16 = v51;
      v34((char *)v51, (char *)v37, v9);
      uint64_t v69 = sub_1001BAA44((uint64_t)v16, 0);
      sub_1000CBE70(&qword_100717520);
      char v42 = Optional.isEqualTo(node:)();

      swift_unknownObjectRelease();
      os_log_t v43 = *v58;
      (*v58)((char *)v16, v9);
      v43(v38, v9);
      if (v42)
      {

        swift_bridgeObjectRelease();
        return v6;
      }

      goto LABEL_37;
    }
LABEL_34:
    (*v58)(v38, v9);

    sub_1000CBBA4(v37, (uint64_t *)&unk_1007069A0);
LABEL_37:
    uint64_t v8 = v56;
    goto LABEL_38;
  }
  __break(1u);
LABEL_47:
  __break(1u);
  return result;
}

void sub_1001DB924(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v37 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  unint64_t v36 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v20 = *(void **)&v3[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v20)
  {
    ((void (*)(uint64_t))a2)(v15);
    return;
  }
  uint64_t v32 = v16;
  uint64_t v33 = v8;
  uint64_t v34 = v6;
  uint64_t v35 = v15;
  id v39 = v20;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v22 = [v39 cellForItemAtIndexPath:isa];

  if (v22)
  {
    [v22 frame];
    if (objc_msgSend(v39, "_isRectFullyVisible:"))
    {
      a2();

      goto LABEL_12;
    }
  }
  if ((uint64_t)[v39 numberOfSections] >= 1)
  {
    [v3 loadViewIfNeeded];
    uint64_t v23 = *(void **)&v3[v19];
    if (v23)
    {
      id v24 = v23;
      Class v25 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v24 scrollToItemAtIndexPath:v25 atScrollPosition:0 animated:1];

      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      unint64_t v26 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v32 = *(void *)(v32 + 8);
      ((void (*)(char *, uint64_t))v32)(v14, v35);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a2;
      *(void *)(v27 + 24) = a3;
      aBlock[4] = sub_1000D8564;
      aBlock[5] = v27;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_100697370;
      id v28 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v30 = v36;
      uint64_t v29 = v37;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v29);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v33);
      ((void (*)(char *, uint64_t))v32)(v18, v35);
    }
    else
    {
      __break(1u);
    }
    return;
  }
  a2();
LABEL_12:
  id v31 = v39;
}

void sub_1001DBE5C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v3 = Strong;
  if (!a1)
  {

    return;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v4 = a1;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
  swift_bridgeObjectRelease();
  unint64_t v27 = Available;
  swift_bridgeObjectRetain();
  sub_1001B5B48((uint64_t)v4, Available, (unint64_t *)&qword_1007069C0);
  int64_t v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {

    if (Available >> 62)
    {
      id v25 = v4;
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v26 >= v7)
      {
LABEL_6:
        if ((v7 & 0x8000000000000000) == 0)
        {
          sub_100515458(v7, v7, (uint64_t)v4);
          goto LABEL_11;
        }
        goto LABEL_25;
      }
    }
    else
    {
      int64_t v10 = *(void *)((Available & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v11 = v4;
      if (v10 >= v7) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v12 = v4;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((Available & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((Available & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_26:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
LABEL_11:
  uint64_t v13 = *(void **)&v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (![v13 useSharedQuickLook] || (objc_msgSend(v4, "isFolder") & 1) != 0)
  {

LABEL_14:
    swift_bridgeObjectRelease();
    return;
  }
  id v14 = [v13 sceneIdentifier];
  if (!v14)
  {
    id v24 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();

    goto LABEL_14;
  }
  uint64_t v15 = qword_1007052D8;
  id v16 = v14;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_10071B4C0;
  id v18 = [(id)qword_10071B4C0 objectForKey:v16];
  if (!v18)
  {
    id v19 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
    id v18 = DOCPreviewController.init()();
    [v17 setObject:v18 forKey:v16];
  }

  swift_bridgeObjectRetain();
  sub_1001B5B48((uint64_t)v4, v27, (unint64_t *)&qword_1007069C0);
  unint64_t v21 = v20;
  char v23 = v22;
  swift_bridgeObjectRelease();
  DOCPreviewController.set(_:defaultIndex:)(v27, 0, 0, v21, v23 & 1);

  swift_bridgeObjectRelease();
}

void sub_1001DC204(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  int64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - v12;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (char *)Strong;
    sub_1000CBC00(a2, (uint64_t)v6, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      sub_1000CBBA4((uint64_t)v6, &qword_1007076B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      if (a1)
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
        id v16 = &v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_urlToItemCache];
        swift_beginAccess();
        id v17 = a1;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = *(void *)v16;
        *(void *)id v16 = 0x8000000000000000;
        sub_100205228((uint64_t)v17, (uint64_t)v11, isUniquelyReferenced_nonNull_native, &v21);
        *(void *)id v16 = v21;
        swift_bridgeObjectRelease();
        id v19 = *(void (**)(char *, uint64_t))(v8 + 8);
        v19(v11, v7);
        swift_endAccess();

        v19(v13, v7);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      }
    }
  }
}

void sub_1001DC4B0(uint64_t a1, void *a2, char *a3, void (*a4)(void), uint64_t a5, void *a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v55 = a7;
  uint64_t v56 = a5;
  unint64_t v57 = a4;
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  id v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v18 = (void *)static DOCLog.UI.getter();
  id v58 = Strong;
  if (Strong)
  {
    int v54 = a9;
    LODWORD(v52) = static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    uint64_t v53 = a6;
    uint64_t v20 = (void *)v19;
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    id v21 = [a2 displayName];
    uint64_t v51 = a3;
    id v22 = v21;
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = a2;
    uint64_t v24 = v23;
    uint64_t v26 = v25;

    v20[7] = &type metadata for String;
    v20[8] = sub_100073F48();
    v20[4] = v24;
    v20[5] = v26;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v52 = [self defaultPermission];
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v55, v13);
    unint64_t v28 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v29 = (v15 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v30 = (char *)swift_allocObject();
    id v31 = v16;
    uint64_t v33 = v50;
    uint64_t v32 = v51;
    *((void *)v30 + 2) = v27;
    *((void *)v30 + 3) = v33;
    uint64_t v34 = v57;
    *((void *)v30 + 4) = v32;
    *((void *)v30 + 5) = v34;
    *((void *)v30 + 6) = v56;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v30[v28], v31, v13);
    uint64_t v35 = v53;
    *(void *)&v30[v29] = v53;
    unint64_t v36 = &v30[(v29 + 15) & 0xFFFFFFFFFFFFFFF8];
    *((void *)v36 + 8) = *(void *)(a8 + 64);
    long long v37 = *(_OWORD *)(a8 + 48);
    *((_OWORD *)v36 + 2) = *(_OWORD *)(a8 + 32);
    *((_OWORD *)v36 + 3) = v37;
    long long v38 = *(_OWORD *)(a8 + 16);
    *(_OWORD *)unint64_t v36 = *(_OWORD *)a8;
    *((_OWORD *)v36 + 1) = v38;
    v36[72] = v54 & 1;
    aBlock[4] = sub_10021E578;
    aBlock[5] = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_100696470;
    id v39 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    id v40 = v32;
    swift_retain();
    id v41 = v35;
    sub_10021E3C0((void *)a8);
    swift_release();
    id v42 = v52;
    [v52 adoptPersonaFromItem:v41 andPerformBlock:v39];
    _Block_release(v39);
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v43 = swift_allocObject();
    *(_OWORD *)(v43 + 16) = xmmword_1005A0030;
    id v44 = [a2 displayName];
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v47 = v46;

    *(void *)(v43 + 56) = &type metadata for String;
    *(void *)(v43 + 64) = sub_100073F48();
    *(void *)(v43 + 32) = v45;
    *(void *)(v43 + 40) = v47;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v48 = (void **)&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    os_log_type_t v49 = *v48;
    _DWORD *v48 = 0;
    sub_1000D7C50(v49);

    v57();
  }
}

uint64_t sub_1001DC938(uint64_t a1, void *a2, char *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, void *a7, long long *a8, char a9)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  uint64_t v15 = (void *)static DOCLog.UI.getter();
  if (Strong)
  {
    static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    uint64_t v36 = a5;
    id v17 = [a2 displayName];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v19;

    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100073F48();
    *(void *)(v16 + 32) = v18;
    *(void *)(v16 + 40) = v20;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    [self supportsQuickLookInsteadOfOpen:*(void *)&Strong[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration]];
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = swift_allocObject();
    long long v23 = *a8;
    *(_OWORD *)(v22 + 56) = a8[1];
    long long v24 = a8[3];
    *(_OWORD *)(v22 + 72) = a8[2];
    *(_OWORD *)(v22 + 88) = v24;
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = a3;
    *(void *)(v22 + 32) = a2;
    uint64_t v25 = *((void *)a8 + 8);
    *(_OWORD *)(v22 + 40) = v23;
    *(void *)(v22 + 104) = v25;
    *(void *)(v22 + 112) = a7;
    *(unsigned char *)(v22 + 120) = a9 & 1;
    *(void *)(v22 + 128) = a4;
    *(void *)(v22 + 136) = v36;
    swift_retain();
    uint64_t v26 = a3;
    swift_unknownObjectRetain();
    sub_10021E3C0(a8);
    id v27 = a7;
    swift_retain();
    static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();

    swift_release();
    return swift_release();
  }
  else
  {
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1005A0030;
    id v30 = [a2 displayName];
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    *(void *)(v29 + 56) = &type metadata for String;
    *(void *)(v29 + 64) = sub_100073F48();
    *(void *)(v29 + 32) = v31;
    *(void *)(v29 + 40) = v33;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v34 = (void **)&a3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    uint64_t v35 = *v34;
    *uint64_t v34 = 0;
    sub_1000D7C50(v35);

    return a4();
  }
}

void sub_1001DCC90(char a1, uint64_t a2, void *a3, uint64_t a4, long long *a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v15 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v17 = swift_allocObject();
  long long v18 = *a5;
  *(_OWORD *)(v17 + 56) = a5[1];
  long long v19 = a5[3];
  *(_OWORD *)(v17 + 72) = a5[2];
  *(_OWORD *)(v17 + 88) = v19;
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  *(unsigned char *)(v17 + 32) = a1;
  uint64_t v20 = *((void *)a5 + 8);
  *(_OWORD *)(v17 + 40) = v18;
  *(void *)(v17 + 104) = v20;
  *(void *)(v17 + 112) = v15;
  *(void *)(v17 + 120) = a6;
  *(unsigned char *)(v17 + 128) = a7;
  *(void *)(v17 + 136) = a8;
  *(void *)(v17 + 144) = a9;
  aBlock[4] = sub_10021E77C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006964E8;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a3;
  swift_unknownObjectRetain();
  sub_10021E3C0(a5);
  id v23 = a6;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
}

uint64_t sub_1001DCE30(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, void *a6, int a7, uint64_t (*a8)(void))
{
  uint64_t v124 = a8;
  int v121 = a7;
  id v108 = a6;
  uint64_t v116 = a5;
  uint64_t v118 = a4;
  LODWORD(v123) = a3;
  uint64_t v99 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v96 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for DispatchQoS();
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  BOOL v94 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DispatchTime();
  uint64_t v93 = *(void *)(v103 - 8);
  uint64_t v12 = __chkstk_darwin(v103);
  double v91 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v92 = (char *)&v90 - v14;
  uint64_t v114 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  id v113 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v16 - 8);
  long long v111 = (char *)&v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v18 - 8);
  uint64_t v120 = (char *)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v119 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v107 = (char *)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for Date();
  uint64_t v101 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  id v100 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DOCItemCollectionConfiguration();
  __chkstk_darwin(v23 - 8);
  uint64_t v104 = (uint64_t)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void **)(a1 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
  swift_beginAccess();
  uint64_t v26 = *v25;
  *uint64_t v25 = 0;
  uint64_t v117 = a1;
  sub_1000D7C50(v26);

  id v27 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v28 = swift_allocObject();
  long long v122 = xmmword_1005A0030;
  *(_OWORD *)(v28 + 16) = xmmword_1005A0030;
  uint64_t ObjectType = swift_getObjectType();
  id v29 = [a2 displayName];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  *(void *)(v28 + 56) = &type metadata for String;
  unint64_t v33 = sub_100073F48();
  *(void *)(v28 + 64) = v33;
  *(void *)(v28 + 32) = v30;
  *(void *)(v28 + 40) = v32;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v122;
  id v36 = [a2 displayName];
  uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v39 = v38;

  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = v33;
  *(void *)(v35 + 32) = v37;
  *(void *)(v35 + 40) = v39;
  if ((v123 & 1) == 0)
  {
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    sub_1004E78E0(a2, v118, v117, ObjectType);
    return v124();
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v41 = v119;
  if (Strong)
  {
    id v42 = (void *)Strong;
    uint64_t v43 = v104;
    sub_10008BCB8(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration, v104, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);

    id v44 = *(void **)(v43 + 24);
    id v45 = v44;
    sub_10008BBF0(v43, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionConfiguration);
    if (v44)
    {
      id v46 = [v45 fileProviderItem];

      if (v46)
      {
        swift_beginAccess();
        uint64_t v47 = swift_unknownObjectWeakLoadStrong();
        if (v47)
        {
          uint64_t v48 = (void *)v47;
          id v49 = *(id *)(v47 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);

          id v50 = [v49 hostIdentifier];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          type metadata accessor for DOCSmartFolderManager();
          uint64_t v51 = (void *)static DOCSmartFolderManager.sharedManager.getter();
          id v52 = v46;
          uint64_t v53 = v100;
          Date.init()();
          id v54 = objc_allocWithZone((Class)DOCHotFolderEvent);
          NSString v55 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          Class isa = Date._bridgeToObjectiveC()().super.isa;
          id v46 = [v54 initWithAppBundleIdentifier:v55 folderItem:v52 type:0 lastUsedDate:isa frecency:1.0];

          (*(void (**)(char *, uint64_t))(v101 + 8))(v53, v102);
          DOCSmartFolderManager.register(event:)();
        }
      }
    }
  }
  swift_beginAccess();
  uint64_t v57 = swift_unknownObjectWeakLoadStrong();
  if (!v57)
  {
LABEL_14:
    if (v121)
    {
      swift_beginAccess();
      uint64_t v70 = swift_unknownObjectWeakLoadStrong();
      if (v70
        && (uint64_t v71 = (void *)v70,
            id v72 = *(id *)(v70 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration),
            v71,
            id v73 = [v72 sceneIdentifier],
            v72,
            v73))
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v74 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v75 = qword_1007052D8;
        id v76 = v74;
        if (v75 != -1) {
          swift_once();
        }
        uint64_t v77 = (void *)qword_10071B4C0;
        id v78 = [(id)qword_10071B4C0 objectForKey:v76];
        if (!v78)
        {
          id v79 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
          id v78 = DOCPreviewController.init()();
          [v77 setObject:v78 forKey:v76];
        }

        id v80 = [v78 presentingViewController];
        if (v80)
        {
          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          uint64_t v81 = (void *)static OS_dispatch_queue.main.getter();
          double v82 = v91;
          static DispatchTime.now()();
          double v83 = v92;
          + infix(_:_:)();
          uint64_t v123 = *(void (**)(char *, uint64_t))(v93 + 8);
          v123(v82, v103);
          uint64_t v84 = swift_allocObject();
          swift_unknownObjectWeakInit();
          aBlock[4] = sub_10021E7B8;
          aBlock[5] = v84;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1000666D8;
          void aBlock[3] = &unk_100696538;
          double v85 = _Block_copy(aBlock);
          swift_release();
          unsigned __int8 v86 = v94;
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000CBE70((uint64_t *)&unk_100705390);
          sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
          uint64_t v87 = v96;
          uint64_t v88 = v99;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v85);

          (*(void (**)(char *, uint64_t))(v98 + 8))(v87, v88);
          (*(void (**)(char *, uint64_t))(v95 + 8))(v86, v97);
          v123(v83, v103);
          return v124();
        }
      }
      else
      {
        id v78 = (id)static DOCLog.Source.getter();
        static os_log_type_t.debug.getter();
        os_log(_:dso:log:type:_:)();
      }
    }
    return v124();
  }
  id v58 = (char *)v57;
  (*(void (**)(char *, void, uint64_t))(v105 + 104))(v41, enum case for DOCAnalyticsActionEvent.Action.openIn(_:), v106);
  uint64_t v59 = *(void **)&v58[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_1005A04F0;
  uint64_t v61 = v108;
  *(void *)(v60 + 32) = v108;
  aBlock[0] = v60;
  specialized Array._endMutation()();
  id v62 = v59;
  id v63 = v61;
  DOCAnalyticsActionEvent.FileProvider.init(items:)();
  id v64 = [self mainBundle];
  id v65 = [v64 bundleIdentifier];

  if (v65)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  id v66 = [*(id *)&v58[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
  uint64_t v67 = &v58[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v67 < 3uLL)
  {
    (*(void (**)(char *, void, uint64_t))(v112 + 104))(v113, *(unsigned int *)*(&off_100698830 + *(void *)v67), v114);
    unint64_t v68 = v107;
    DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
    type metadata accessor for DOCAnalyticsManager();
    uint64_t v69 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendActionEvent(_:)();

    (*(void (**)(char *, uint64_t))(v109 + 8))(v68, v110);
    goto LABEL_14;
  }
  aBlock[0] = *(void *)v67;
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

void sub_1001DDDC0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:0 completion:0];
  }
}

uint64_t sub_1001DDE24(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
  id v10 = [a3 displayName];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_100073F48();
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = v13;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  return a4(a1, a2);
}

uint64_t sub_1001DDFBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    int64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "received request to create new folder", v6, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_1001CC114(0, 1);
}

uint64_t sub_1001DE1E4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController____lazy_storage___viewOptionsViewModel);
  }
  else
  {
    uint64_t v2 = sub_10007D23C();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001DE248()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v3 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionLargeTextListCellIdentifier;
  if ((v1 & 1) == 0) {
    uint64_t v3 = &OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionListCellIdentifier;
  }
  uint64_t v4 = (uint64_t *)&v0[*v3];
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  swift_bridgeObjectRetain();
  uint64_t v7 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (!*(void *)v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier];
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionGridCellIdentifier + 8];
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_registeredItemCellClassByIdentifier];
  swift_beginAccess();
  uint64_t v9 = *(void *)v8;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_100042F50(v6, v5);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    return type metadata accessor for DOCItemCollectionGridCell();
  }
  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

Swift::Bool __swiftcall DOCItemCollectionViewController.establishFirstResponder()()
{
  [v0 setNeedsFocusUpdate];
  id v1 = [self sharedManager];
  unsigned __int8 v2 = [v1 requestCurrentFocus:v0];

  return v2;
}

uint64_t sub_1001DE428(char *a1, uint64_t *a2)
{
  uint64_t v71 = *a2;
  uint64_t v5 = a2[2];
  uint64_t v70 = a2[1];
  uint64_t v7 = a2[3];
  uint64_t v6 = a2[4];
  uint64_t v69 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v68 = *(void *)(v69 - 8);
  uint64_t v8 = __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v66 = (char *)&v65 - v10;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v73 = (uint64_t)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v65 - v14;
  uint64_t v74 = v2;
  uint64_t v16 = (void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = *v16;
  sub_1004D749C();
  sub_1004D4CF0();
  id v17 = [a1 traitCollection];
  sub_1004D876C();

  uint64_t v18 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  uint64_t v20 = *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
  uint64_t v72 = v5;
  *(void *)uint64_t v18 = v5;
  *((void *)v18 + 1) = v7;
  swift_bridgeObjectRetain();
  sub_1004D3158(v19, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)(v6 + 32);
  uint64_t v22 = _swiftEmptyArrayStorage;
  long long aBlock = (void **)_swiftEmptyArrayStorage;
  if (v21)
  {
    id v23 = v21;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)aBlock & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v22 = aBlock;
  }

  sub_1004D2F88((uint64_t)v22);
  long long v81 = *(_OWORD *)a2;
  uint64_t v24 = (uint64_t *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
  sub_1000CBE0C((uint64_t)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection], (uint64_t)v82, (uint64_t *)&unk_10070AE80);
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  uint64_t v27 = v70;
  *uint64_t v24 = v71;
  v24[1] = v27;
  void v24[2] = v72;
  v24[3] = v7;
  v24[4] = v6;
  swift_bridgeObjectRetain();
  sub_10021FE8C((uint64_t)&v81);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10021FE8C((uint64_t)&v81);
  swift_retain();
  sub_100220914(v82, (void (*)(void, void, void, void, void))sub_100208814);
  sub_100220130(v25, v26);
  sub_1004D4E8C(v82);
  sub_100220180((uint64_t)&v81);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100220914(v82, (void (*)(void, void, void, void, void))sub_100220130);
  uint64_t v28 = v74;
  uint64_t v29 = v74 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_sortingDescriptor;
  swift_beginAccess();
  sub_1000CBC00(v29, (uint64_t)v15, (uint64_t *)&unk_1007086D0);
  uint64_t v30 = (uint64_t)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
  swift_beginAccess();
  uint64_t v31 = v73;
  sub_1000CBC00(v30, v73, (uint64_t *)&unk_1007086D0);
  swift_beginAccess();
  sub_10009758C((uint64_t)v15, v30, (uint64_t *)&unk_1007086D0);
  swift_endAccess();
  sub_1004D41B0(v31);
  sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007086D0);
  sub_1000CBBA4(v31, (uint64_t *)&unk_1007086D0);
  uint64_t v32 = *(void *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 32);
  unint64_t v33 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
  long long v34 = *(_OWORD *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics + 16);
  *(_OWORD *)unint64_t v33 = *(_OWORD *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_stackViewMetrics);
  *((_OWORD *)v33 + 1) = v34;
  *((void *)v33 + 4) = v32;
  sub_1004D3728();
  *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = *(void *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits);
  swift_retain_n();
  swift_release();
  sub_1004D78E0();
  swift_release();
  char v35 = sub_10008BD6C();
  Class v36 = 0;
  if (v35)
  {
    uint64_t v37 = v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
    swift_beginAccess();
    uint64_t v38 = v68;
    uint64_t v39 = v66;
    uint64_t v40 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v37, v69);
    id v41 = v67;
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v67, enum case for DOCItemGroupingBehavior.none(_:), v40);
    sub_100078438((unint64_t *)&qword_10070AEE0, (void (*)(uint64_t))&type metadata accessor for DOCItemGroupingBehavior);
    LOBYTE(v37) = dispatch thunk of static Equatable.== infix(_:_:)();
    id v42 = *(void (**)(char *, uint64_t))(v38 + 8);
    v42(v41, v40);
    v42(v39, v40);
    Class v36 = 0;
    if ((v37 & 1) == 0) {
      Class v36 = sub_10033F614(0, 0);
    }
  }
  uint64_t v43 = *(void **)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu];
  *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu] = v36;
  id v44 = v36;

  sub_1004D4778();
  if (sub_100208920(v6))
  {
    char v45 = *(unsigned char *)(v6 + 24);
    id v46 = self;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = a1;
    *(unsigned char *)(v47 + 24) = v45;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_100222584;
    *(void *)(v48 + 24) = v47;
    id v79 = sub_1000D8564;
    uint64_t v80 = v48;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_100087990;
    id v78 = &unk_1006985E0;
    id v49 = _Block_copy(&aBlock);
    id v50 = a1;
    swift_retain();
    swift_release();
    [v46 performWithoutAnimation:v49];
    _Block_release(v49);
    LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v49 & 1) == 0)
    {
      uint64_t v52 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v53 = (void (**)(char *))&v50[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      uint64_t v54 = *(void *)&v50[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      char *v53 = sub_1002215FC;
      v53[1] = (void (*)(char *))v52;
      swift_retain_n();
      sub_1000A7258(v54);
      sub_1004D4CF0();
      swift_release_n();
LABEL_13:
      uint64_t v62 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v63 = (void (**)(uint64_t, uint64_t))&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
      uint64_t v64 = *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
      *id v63 = sub_1002215E4;
      v63[1] = (void (*)(uint64_t, uint64_t))v62;
      return sub_1000A7258(v64);
    }
    __break(1u);
  }
  else
  {
    NSString v55 = self;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = a1;
    *(unsigned char *)(v56 + 24) = 0;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = sub_100222584;
    *(void *)(v57 + 24) = v56;
    id v79 = sub_1000D8564;
    uint64_t v80 = v57;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v76 = 1107296256;
    uint64_t v77 = sub_100087990;
    id v78 = &unk_100698568;
    id v58 = _Block_copy(&aBlock);
    uint64_t v59 = a1;
    swift_retain();
    swift_release();
    [v55 performWithoutAnimation:v58];
    _Block_release(v58);
    LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v58 & 1) == 0)
    {
      uint64_t v60 = &v59[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      uint64_t v61 = *(void *)&v59[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      sub_1000A7258(v61);
      sub_1004D4CF0();
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

void sub_1001DEDEC()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10008BD6C() & 1) != 0 || (sub_10001F094())
  {
    [v0 loadViewIfNeeded];
    uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v5)
    {
      uint64_t v6 = qword_100704F68;
      id v7 = v5;
      if (v6 != -1) {
        swift_once();
      }
      NSString v8 = String._bridgeToObjectiveC()();
      IndexPath.section.getter();
      IndexPath.init(item:section:)();
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      id v10 = [v7 supplementaryViewForElementKind:v8 atIndexPath:isa];

      if (v10)
      {
        [v10 frame];
        CGRectGetHeight(v12);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  uint64_t v2 = sub_1000373B0();
  if (*v1 != 2) {
    *uint64_t v1 = 1;
  }
  ((void (*)(uint64_t *, void))v2)(&v3, 0);
}

uint64_t _s5Files31DOCItemCollectionViewControllerC06scrollD18DidEndDeceleratingyySo08UIScrollD0CF_0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutOptimizationContext];
  uint64_t result = swift_beginAccess();
  if (*v9 != 2 && (*v9 & 1) != 0)
  {
    CGRect v12 = sub_1000373B0();
    if (*v11 != 2) {
      *uint64_t v11 = 0;
    }
    uint64_t result = ((uint64_t (*)(void *, void))v12)(aBlock, 0);
    if (*(void *)v9 != 2)
    {
      uint64_t result = sub_100021B28(v0, *(_WORD *)v9 & 0x101);
      if (result)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        uint64_t v17 = static OS_dispatch_queue.main.getter();
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v0;
        aBlock[4] = sub_100220EDC;
        aBlock[5] = v13;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        void aBlock[3] = &unk_100698090;
        uint64_t v14 = _Block_copy(aBlock);
        uint64_t v15 = v0;
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v16 = (void *)v17;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v14);

        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
  }
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.scrollViewDidEndDragging(_:willDecelerate:)(UIScrollView _, Swift::Bool willDecelerate)
{
  if (!willDecelerate) {
    _s5Files31DOCItemCollectionViewControllerC06scrollD18DidEndDeceleratingyySo08UIScrollD0CF_0();
  }
}

uint64_t sub_1001DF4E8(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100220EE4;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_1000D8564;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  uint64_t v8[2] = sub_100087990;
  v8[3] = &unk_100698108;
  uint64_t v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutAnimation:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

void sub_1001DF64C(void *a1)
{
  id v2 = [a1 splitViewController];
  if (v2)
  {
    uint64_t v3 = v2;
    [a1 enclosingTabSwitcherStyle];
    if (DOCTabSwitcherStyle.showsTabs.getter())
    {
      id v4 = [a1 traitCollection];
      __chkstk_darwin(v4);
      id v5 = (id)UITraitCollection.modifyingTraits(_:)();

      goto LABEL_6;
    }
  }
  id v5 = [a1 traitCollection];
LABEL_6:
  id v6 = [a1 view];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 frame];
    uint64_t v9 = v8;
    uint64_t v11 = v10;

    sub_100021F80(v5, v9, v11, 0, 0);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:prefetchItemsAt:)(UICollectionView _, Swift::OpaquePointer prefetchItemsAt)
{
}

void sub_1001DF7C8()
{
  if (!sub_1000CBC64())
  {
    sub_100099DF8((uint64_t)v0);
    sub_10009A978((uint64_t)v0);
    sub_1000929F0();
    swift_bridgeObjectRelease();
    sub_100092D1C();
    sub_100092EFC();
    swift_bridgeObjectRelease();
    sub_100094988();
  }
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:cancelPrefetchingForItemsAt:)(UICollectionView _, Swift::OpaquePointer cancelPrefetchingForItemsAt)
{
}

uint64_t sub_1001DF830(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  sub_100098488(v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1001DF894(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  type metadata accessor for IndexPath();
  uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  a5(v8);

  return swift_bridgeObjectRelease();
}

uint64_t DOCItemCollectionViewController.collectionView(_:canFocusItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_100216658(a2);
}

uint64_t DOCItemCollectionViewController.collectionView(_:shouldDeselectItemAt:)(void *a1)
{
  if ([v1 isEditing]) {
    return 1;
  }
  id v3 = [a1 delegate];
  if (!v3) {
    return 0;
  }
  id v4 = v3;
  if (([v3 respondsToSelector:"collectionView:shouldSelectItemAtIndexPath:"] & 1) == 0)
  {
    swift_unknownObjectRelease();
    return 1;
  }
  swift_unknownObjectRetain();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [v4 collectionView:a1 shouldSelectItemAtIndexPath:isa];
  swift_unknownObjectRelease_n();

  return (uint64_t)v6;
}

uint64_t DOCItemCollectionViewController.collectionView(_:shouldSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  id v60 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v62 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v61 = (char *)&v59 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v59 - v17;
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v22 = __chkstk_darwin(v21);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v59 - v25;
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) == 0
    && (*(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
     || (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) & 1) != 0))
  {
    static Logger.UI.getter();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Inline rename session in progress, skipping cell selection", v31, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  uint64_t v27 = v24;
  uint64_t v59 = v23;
  if (IndexPath.count.getter() != 2) {
    goto LABEL_7;
  }
  uint64_t result = *(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!result)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (([(id)result isGathering] & 1) == 0
    && (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
    && (sub_1001DAF30(a2) & 1) != 0)
  {
LABEL_7:
    id v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
    v63(v18, 1, 1, v19);
LABEL_14:
    sub_1000CBBA4((uint64_t)v18, (uint64_t *)&unk_1007069A0);
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  id v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  v63(v18, 0, 1, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v26, v18, v19);
  uint64_t v32 = (void *)sub_1001BAA44((uint64_t)v26, 0);
  if (v32)
  {
    if (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode))
    {
      unsigned __int8 v33 = [v32 isFolder];
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
      if (v33) {
        return 0;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
      swift_unknownObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v26, v19);
  }
LABEL_15:
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
  {
    if (IndexPath.count.getter() != 2)
    {
LABEL_21:
      v63(v16, 1, 1, v19);
LABEL_27:
      sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007069A0);
      goto LABEL_28;
    }
    uint64_t result = *(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!result)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (([(id)result isGathering] & 1) == 0
      && (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) != 0
      && (sub_1001DAF30(a2) & 1) != 0)
    {
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a2, v19);
    v63(v16, 0, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1) {
      goto LABEL_27;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v27, v16, v19);
    if (!sub_1001BAA44(v27, 0))
    {
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
      goto LABEL_28;
    }
    unint64_t v50 = (unint64_t)sub_10003B6F8(0);
    if (v50 >> 62) {
      uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v51 == 1)
    {
      unint64_t v52 = (unint64_t)sub_10003B6F8(0);
      unint64_t v53 = v52;
      if (v52 >> 62)
      {
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        if (result) {
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t result = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (result)
        {
LABEL_52:
          if ((v53 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_55;
          }
          if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_unknownObjectRetain();
LABEL_55:
            swift_bridgeObjectRelease();
            swift_getObjectType();
            char v54 = DOCNode.isEqualTo(node:)();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
LABEL_69:
            *(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) = v54 & 1;
            goto LABEL_29;
          }
          __break(1u);
          goto LABEL_72;
        }
      }
      swift_bridgeObjectRelease();
    }
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
    swift_unknownObjectRelease();
    char v54 = 0;
    goto LABEL_69;
  }
LABEL_28:
  *(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected) = 0;
LABEL_29:
  if (sub_1001D4DB8(a2))
  {
    uint64_t v34 = v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate;
    if (!swift_unknownObjectWeakLoadStrong()) {
      return 1;
    }
    uint64_t v35 = *(void *)(v34 + 8);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v37 = [v60 layoutAttributesForItemAtIndexPath:isa];

    if (v37)
    {
      [v37 frame];
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      uint64_t v43 = v42;
      uint64_t v45 = v44;
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v41 = 0;
      uint64_t v43 = 0;
      uint64_t v45 = 0;
    }
    v64[0] = v39;
    v64[1] = v41;
    v64[2] = v43;
    v64[3] = v45;
    BOOL v65 = v37 == 0;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v49 = (uint64_t)v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v61, a2, v19);
    uint64_t v47 = 1;
    v63((char *)v49, 0, 1, v19);
    (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(v35 + 16))(v3, v49, v64, ObjectType, v35);
    swift_unknownObjectRelease();
    sub_1000CBBA4(v49, (uint64_t *)&unk_1007069A0);
    return v47;
  }
  if (IndexPath.count.getter() != 2) {
    goto LABEL_38;
  }
  uint64_t result = *(void *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (result)
  {
    if (([(id)result isGathering] & 1) != 0
      || (*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton) & 1) == 0
      || (sub_1001DAF30(a2) & 1) == 0)
    {
      uint64_t v46 = (uint64_t)v62;
      (*(void (**)(void))(v20 + 16))();
      v63((char *)v46, 0, 1, v19);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v46, 1, v19) != 1)
      {
        uint64_t v55 = v59;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v59, v46, v19);
        uint64_t v56 = (void *)sub_1001BAA44(v55, 0);
        if (v56)
        {
          id v57 = [v56 fpfs_fpItem];
          swift_unknownObjectRelease();
          if (v57)
          {
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (!Strong)
            {
              (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v59, v19);

              return 0;
            }
            [Strong didTapOnUnselectableItem:v57];

            swift_unknownObjectRelease();
          }
        }
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v59, v19);
        return 0;
      }
LABEL_40:
      sub_1000CBBA4(v46, (uint64_t *)&unk_1007069A0);
      return 0;
    }
LABEL_38:
    uint64_t v46 = (uint64_t)v62;
    v63(v62, 1, 1, v19);
    goto LABEL_40;
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1001E0654(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(id, char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  LOBYTE(a5) = a5(v12, v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return a5 & 1;
}

uint64_t sub_1001E0768(void *a1)
{
  uint64_t v2 = v1;
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  *(void *)(v4 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
  *(void *)(v4 + 32) = a1;
  sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
  id v5 = a1;
  uint64_t v6 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  id v7 = [self defaultManager];
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v8;
  id v10 = v5;
  swift_retain();
  sub_10053A084(v10, v2, (uint64_t)sub_100220C1C, v9);

  swift_release();

  return swift_release();
}

void sub_1001E0928(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a2 || !a1)
  {
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10059B760;
    *(void *)(v14 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v14 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v14 + 32) = a3;
    if (a2)
    {
      id v15 = a3;
      uint64_t v16 = _convertErrorToNSError(_:)();
      uint64_t v20 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v21 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long v18 = v16;
      sub_1001146DC(&v18, v14 + 72);
    }
    else
    {
      *(void *)(v14 + 96) = &type metadata for String;
      *(void *)(v14 + 104) = sub_100073F48();
      *(void *)(v14 + 72) = 0xD000000000000013;
      *(void *)(v14 + 80) = 0x80000001005DD4C0;
      id v17 = a3;
    }
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    id v13 = (id)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v7 = a1;
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
    *(void *)(v8 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v8 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v8 + 32) = v7;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    id v9 = v7;
    id v10 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a4;
    *(void *)(v11 + 24) = v9;
    uint64_t v21 = (uint64_t)sub_100220C3C;
    uint64_t v22 = v11;
    *(void *)&long long v18 = _NSConcreteStackBlock;
    *((void *)&v18 + 1) = 1107296256;
    uint64_t v19 = sub_1000666D8;
    uint64_t v20 = &unk_100697F78;
    id v12 = _Block_copy(&v18);
    id v13 = v9;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v12);
  }
}

void sub_1001E0C5C(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
    *(void *)(v5 + 32) = a2;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v6 = a2;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000A884;
    void aBlock[3] = &unk_100697FA0;
    uint64_t v8 = _Block_copy(aBlock);
    swift_release();
    [v4 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v8];
    _Block_release(v8);

    swift_bridgeObjectRelease();
  }
}

void DOCItemCollectionViewController.collectionView(_:didSelectItemAt:)(uint64_t a1, uint64_t a2)
{
}

void DOCItemCollectionViewController.collectionView(_:didDeselectItemAt:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_1001E0E04(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void *DOCItemCollectionViewController.collectionView(_:canPerformPrimaryActionForItemAt:)(uint64_t a1, uint64_t a2)
{
  return sub_1001D562C(a2);
}

uint64_t DOCItemCollectionViewController.collectionView(_:performPrimaryActionForItemAt:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = a1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v46 - v9;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)v46 - v16;
  long long v18 = (void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  swift_beginAccess();
  if (*v18 != 2)
  {
    uint64_t v31 = (void *)v53;
    uint64_t v32 = a2;
    return sub_1001E15FC(v31, v32);
  }
  uint64_t v50 = v12;
  uint64_t v51 = v11;
  char v19 = sub_1002167E8();
  uint64_t v20 = v52;
  uint64_t v21 = (void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  if ((v19 & 1) == 0)
  {
    uint64_t v49 = v3;
    static Logger.UI.getter();
    unsigned __int8 v33 = *v21;
    uint64_t v48 = a2;
    uint64_t v34 = a2;
    uint64_t v35 = v5;
    v33(v8, v34, v5);
    Class v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    int v38 = v37;
    BOOL v39 = os_log_type_enabled(v36, v37);
    uint64_t v40 = v50;
    uint64_t v41 = (void *)v53;
    if (v39)
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315394;
      int v47 = v38;
      uint64_t v54 = sub_10009B0E4(0xD000000000000030, 0x80000001005DA3C0, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v42 + 12) = 2080;
      v46[1] = v42 + 14;
      sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v54 = sub_10009B0E4(v43, v44, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v35);
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v47, "%s %s performing primary action", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      uint64_t v41 = (void *)v53;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v35);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v51);
    uint64_t v31 = v41;
    uint64_t v32 = v48;
    return sub_1001E15FC(v31, v32);
  }
  uint64_t v22 = v17;
  static Logger.UI.getter();
  uint64_t v23 = v10;
  uint64_t v24 = a2;
  uint64_t v25 = v5;
  (*v21)(v10, v24, v5);
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v55 = v53;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v54 = sub_10009B0E4(0xD000000000000030, 0x80000001005DA3C0, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v28 + 12) = 2080;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v54 = sub_10009B0E4(v29, v30, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v25);
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s %s navigation action. Error if this was not handled by didSelect:", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v5);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v22, v51);
}

uint64_t sub_1001E15FC(void *a1, uint64_t a2)
{
  uint64_t v316 = type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
  uint64_t v314 = *(void *)(v316 - 8);
  __chkstk_darwin(v316);
  uint64_t v315 = (char *)&v297 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCAnalyticsActionEvent.Source();
  __chkstk_darwin(v5 - 8);
  long long v313 = (char *)&v297 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
  __chkstk_darwin(v7 - 8);
  v324 = (char *)&v297 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = type metadata accessor for DOCAnalyticsActionEvent.Action();
  uint64_t v310 = *(void *)(v311 - 8);
  __chkstk_darwin(v311);
  v323 = (char *)&v297 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCAnalyticsActionEvent();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v325 = (char *)&v297 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  v334 = (char *)&v297 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v340 = (char *)&v297 - v16;
  uint64_t v17 = type metadata accessor for IndexPath();
  uint64_t ObjectType = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(ObjectType + 64);
  uint64_t v20 = __chkstk_darwin(v17);
  v332 = (char *)&v297 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v20);
  v321 = (char *)&v297 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v336 = (char *)&v297 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v342 = (void (*)(uint64_t, uint64_t))((char *)&v297 - v26);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v297 - v27;
  uint64_t v29 = type metadata accessor for Logger();
  uint64_t v347 = *(void *)(v29 - 8);
  uint64_t v30 = __chkstk_darwin(v29);
  v331 = (char *)&v297 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v330 = (char *)&v297 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  long long v327 = (char *)&v297 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v37 = __chkstk_darwin(v36);
  uint64_t v303 = (char *)&v297 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v305 = (char *)&v297 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v304 = (char *)&v297 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  objc_super v302 = (char *)&v297 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v46 = __chkstk_darwin(v45);
  long long v306 = (char *)&v297 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  long long v312 = (char *)&v297 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v322 = (char *)&v297 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  long long v307 = (char *)&v297 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  unint64_t v326 = (char *)&v297 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v320 = (char *)&v297 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v328 = (char *)&v297 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v317 = (char *)&v297 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v333 = (char *)&v297 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v335 = (char *)&v297 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v337 = (char *)&v297 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  uint64_t v72 = (char *)&v297 - v71;
  uint64_t v73 = qword_100736F50 + 1;
  if (__OFADD__(qword_100736F50, 1))
  {
    __break(1u);
LABEL_142:
    swift_bridgeObjectRelease();
    uint64_t v289 = v301;
    static Logger.UI.getter();
    objc_super v290 = Logger.logObject.getter();
    os_log_type_t v291 = static os_log_type_t.default.getter();
    BOOL v292 = os_log_type_enabled(v290, v291);
    int v121 = v341;
    if (v292)
    {
      objc_super v293 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)objc_super v293 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v290, v291, "[TAP][%ld] Unarchiving selected item.", v293, 0xCu);
      swift_slowDealloc();
    }

    v342(v289, v348);
    objc_super v294 = v334;
    sub_1001E0768(v334);
    uint64_t v180 = v337;
    if ((v347 & 1) == 0)
    {
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v329 deselectItemAtIndexPath:isa animated:1];
    }
    swift_unknownObjectRelease();
    return v121(v336, v180);
  }
  uint64_t v308 = v11;
  uint64_t v309 = v10;
  uint64_t v301 = v70;
  uint64_t v318 = v69;
  uint64_t v319 = v19;
  uint64_t v348 = v68;
  ++qword_100736F50;
  static Logger.UI.getter();
  uint64_t v74 = *(void (**)(unint64_t, uint64_t, uint64_t))(ObjectType + 16);
  uint64_t v346 = ObjectType + 16;
  v345 = v74;
  v74((unint64_t)v28, a2, v17);
  uint64_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.default.getter();
  BOOL v77 = os_log_type_enabled(v75, v76);
  uint64_t v344 = a2;
  id v329 = a1;
  uint64_t v338 = v73;
  if (v77)
  {
    uint64_t v78 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v339 = ObjectType;
    aBlock[0] = v79;
    *(_DWORD *)uint64_t v78 = 136315650;
    uint64_t v352 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005DD480, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 12) = 2048;
    uint64_t v352 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v78 + 22) = 2080;
    sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v352 = sub_10009B0E4(v80, v81, aBlock);
    a2 = v344;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v341 = *(uint64_t (**)(char *, char *))(v339 + 8);
    v341(v28, (char *)v17);
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "%s [TAP][%ld] Primary Action (user tapped) at index path: %s", (uint8_t *)v78, 0x20u);
    swift_arrayDestroy();
    uint64_t ObjectType = v339;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v341 = *(uint64_t (**)(char *, char *))(ObjectType + 8);
    v341(v28, (char *)v17);
  }

  double v82 = *(void (**)(char *, uint64_t))(v347 + 8);
  v82(v72, v348);
  double v83 = v343;
  unsigned __int8 v84 = [v343 isEditing];
  unint64_t Available = (unint64_t)v345;
  uint64_t v86 = (uint64_t)v342;
  if ((v84 & 1) == 0)
  {
    uint64_t v87 = v337;
    static Logger.UI.getter();
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v90 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "[TAP][%ld] Deselect item", v90, 0xCu);
      double v83 = v343;
      swift_slowDealloc();
    }

    v82(v87, v348);
    sub_1000CBE70(&qword_100708E80);
    unint64_t v91 = (*(unsigned __int8 *)(ObjectType + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(ObjectType + 80);
    uint64_t v92 = swift_allocObject();
    *(_OWORD *)(v92 + 16) = xmmword_1005A0030;
    a2 = v344;
    unint64_t Available = (unint64_t)v345;
    v345(v92 + v91, v344, v17);
    sub_10000F3B0(0, v92);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v86 = (uint64_t)v342;
  }
  id v93 = [v83 isEditing];
  ((void (*)(uint64_t, uint64_t, uint64_t))Available)(v86, a2, v17);
  if (v93)
  {
    v341((char *)v86, (char *)v17);
  }
  else
  {
    id v93 = sub_1001DAF30(v86);
    v341((char *)v86, (char *)v17);
    if (v93)
    {
      BOOL v94 = v335;
      static Logger.UI.getter();
      uint64_t v95 = Logger.logObject.getter();
      os_log_type_t v96 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v97 = 134217984;
        double v83 = v343;
        aBlock[0] = v338;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "[TAP][%ld] Create new file", v97, 0xCu);
        a2 = v344;
        swift_slowDealloc();
      }

      v82(v94, v348);
      id v93 = *(id *)&v83[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager];
      if (v93)
      {
        DOCItemCollectionViewController.getCurrentLocation()();
        uint64_t v99 = v98;
        sub_1004C86D4(v98);

        a2 = v344;
      }
    }
  }
  if (IndexPath.count.getter() != 2) {
    goto LABEL_21;
  }
  id v100 = *(unsigned char **)&v83[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v100)
  {
    __break(1u);
    goto LABEL_152;
  }
  if ([*(id *)&v83[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection] isGathering] & 1) == 0&& (v83[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__showsCreateButton] & 1) != 0&& (sub_1001DAF30(a2))
  {
LABEL_21:
    uint64_t v101 = v340;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(ObjectType + 56))(v340, 1, 1, v17);
    return sub_1000CBBA4((uint64_t)v101, (uint64_t *)&unk_1007069A0);
  }
  uint64_t v101 = v340;
  ((void (*)(void))Available)();
  uint64_t v102 = *(void (**)(char *, void, uint64_t, uint64_t))(ObjectType + 56);
  v102(v101, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(ObjectType + 48))(v101, 1, v17) == 1) {
    return sub_1000CBBA4((uint64_t)v101, (uint64_t *)&unk_1007069A0);
  }
  objc_super v298 = v100;
  uint64_t v104 = (char *)v17;
  uint64_t v105 = (uint64_t)v336;
  v335 = *(char **)(ObjectType + 32);
  uint64_t v300 = ObjectType + 32;
  ((void (*)(char *, char *, uint64_t))v335)(v336, v101, v17);
  [v83 loadViewIfNeeded];
  uint64_t v106 = (void *)OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v299 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  uint64_t v107 = *(char **)&v83[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v107)
  {
    __break(1u);
    goto LABEL_154;
  }
  uint64_t v108 = (uint64_t)v334;
  uint64_t v109 = (void (*)(char *, uint64_t, char *))v345;
  v345((unint64_t)v334, v344, (uint64_t)v104);
  uint64_t v339 = ObjectType;
  v102((char *)v108, 0, 1, (uint64_t)v104);
  uint64_t v110 = *(void *)&v107[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
       + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  swift_beginAccess();
  swift_retain();
  long long v111 = v107;
  sub_10008C318(v108, v110, (uint64_t *)&unk_1007069A0);
  swift_endAccess();

  swift_release();
  uint64_t v112 = sub_1001BAA44(v105, 0);
  if (!v112)
  {
    v342 = (void (*)(uint64_t, uint64_t))v82;
    uint64_t v127 = v331;
    static Logger.UI.getter();
    uint64_t v128 = v332;
    v109(v332, v105, v104);
    uint64_t v129 = Logger.logObject.getter();
    os_log_type_t v130 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v129, v130))
    {
      uint64_t v131 = v128;
      uint64_t v132 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v132 = 134218242;
      uint64_t v352 = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v132 + 12) = 2080;
      sub_100078438(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v133 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v352 = sub_10009B0E4(v133, v134, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v135 = v341;
      v341(v131, v104);
      _os_log_impl((void *)&_mh_execute_header, v129, v130, "[TAP][%ld] No Node at resolved index path: %s. Bailing out", (uint8_t *)v132, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v342((uint64_t)v127, v348);
      return v135(v336, v104);
    }
    else
    {

      uint64_t v163 = (uint64_t (*)(uint64_t, char *))v341;
      v341(v128, v104);
      v342((uint64_t)v127, v348);
      return v163(v105, v104);
    }
  }
  id v113 = (char *)v112;
  v337 = v104;
  unsigned int v114 = [v83 isEditing];
  v340 = v113;
  if (v114)
  {
    uint64_t v115 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode;
    if (v83[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] != 1
      || ![v113 isFolder])
    {
      unint64_t v150 = v330;
      static Logger.UI.getter();
      unint64_t v151 = v83;
      swift_unknownObjectRetain_n();
      unint64_t v152 = v151;
      uint64_t v153 = Logger.logObject.getter();
      int v154 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v153, (os_log_type_t)v154))
      {
        LODWORD(v346) = v154;
        v342 = (void (*)(uint64_t, uint64_t))v82;
        uint64_t v155 = 5457241;
        uint64_t v156 = swift_slowAlloc();
        v345 = (void (*)(unint64_t, uint64_t, uint64_t))swift_slowAlloc();
        aBlock[0] = (uint64_t)v345;
        *(_DWORD *)uint64_t v156 = 134218498;
        uint64_t v352 = v338;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v156 + 12) = 2080;
        unsigned int v157 = [v152 isEditing];
        BOOL v158 = v157 == 0;
        if (v157) {
          uint64_t v159 = 5457241;
        }
        else {
          uint64_t v159 = 20302;
        }
        unint64_t v160 = 0xE300000000000000;
        if (v158) {
          unint64_t v161 = 0xE200000000000000;
        }
        else {
          unint64_t v161 = 0xE300000000000000;
        }
        uint64_t v352 = sub_10009B0E4(v159, v161, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v156 + 22) = 2080;
        if (v83[v115] == 1)
        {
          if ([v340 isFolder])
          {
            uint64_t v155 = 20302;
            unint64_t v160 = 0xE200000000000000;
          }
          uint64_t v162 = v348;
        }
        else
        {
          uint64_t v162 = v348;
        }
        uint64_t v352 = sub_10009B0E4(v155, v160, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v153, (os_log_type_t)v346, "[TAP][%ld] Selecting the node: isEditing: %s, canMultiSelect: %s", (uint8_t *)v156, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v342((uint64_t)v330, v162);
      }
      else
      {

        swift_unknownObjectRelease_n();
        v82(v150, v348);
      }
      id v186 = v329;
      Class v187 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v186 selectItemAtIndexPath:v187 animated:0 scrollPosition:0];

      v152[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
      id v188 = [v152 viewIfLoaded];
      id v189 = [v188 window];

      uint64_t v190 = v337;
      os_log_t v191 = v336;
      if (v189) {
        sub_1000A6988();
      }
      swift_unknownObjectRelease();
      uint64_t v174 = v191;
      uint64_t v192 = v190;
      return v341(v174, v192);
    }
  }
  v342 = (void (*)(uint64_t, uint64_t))v82;
  uint64_t v116 = v333;
  static Logger.UI.getter();
  uint64_t v117 = Logger.logObject.getter();
  os_log_type_t v118 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v117, v118))
  {
    uint64_t v119 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v119 = 134217984;
    aBlock[0] = v338;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v117, v118, "[TAP][%ld] Performing action (user not in select mode)", v119, 0xCu);
    id v113 = v340;
    swift_slowDealloc();
  }

  v342((uint64_t)v116, v348);
  uint64_t v120 = v343;
  int v121 = v341;
  if (v343[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode] == 1
    && [v113 isFolder]
    && v120[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] == 1)
  {
    long long v122 = v317;
    static Logger.UI.getter();
    uint64_t v123 = Logger.logObject.getter();
    os_log_type_t v124 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v125 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      Swift::Int v126 = "[TAP][%ld] Folder opening prevented while in gesture selection mode. Bailing out";
LABEL_62:
      _os_log_impl((void *)&_mh_execute_header, v123, v124, v126, v125, 0xCu);
      swift_slowDealloc();
      goto LABEL_63;
    }
    goto LABEL_63;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v136 = DOCNode.fpfs_syncFetchFPItem()();
  if (!v136)
  {
    long long v122 = v327;
    static Logger.UI.getter();
    uint64_t v123 = Logger.logObject.getter();
    os_log_type_t v124 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v123, v124))
    {
      uint64_t v125 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v125 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      Swift::Int v126 = "[TAP][%ld] Couldn't fetch FPItem for the current node. Bailing out";
      goto LABEL_62;
    }
LABEL_63:
    swift_unknownObjectRelease();

    v342((uint64_t)v122, v348);
    return v121(v336, v337);
  }
  id v100 = (unsigned char *)v136;
  uint64_t v137 = v328;
  static Logger.UI.getter();
  uint64_t v138 = Logger.logObject.getter();
  os_log_type_t v139 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v138, v139))
  {
    uint64_t v140 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v140 = 134217984;
    uint64_t v120 = v343;
    aBlock[0] = v338;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v138, v139, "[TAP][%ld] FPItem fetched", v140, 0xCu);
    swift_slowDealloc();
  }

  v342((uint64_t)v137, v348);
  id v141 = [v100 copyingProgress];
  if (v141)
  {
    uint64_t v142 = v141;
    if ([v141 isFinished])
    {

      goto LABEL_44;
    }
    uint64_t v175 = v320;
    static Logger.UI.getter();
    uint64_t v176 = Logger.logObject.getter();
    os_log_type_t v177 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v176, v177))
    {
      uint64_t v178 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v178 = 134217984;
      int v121 = v341;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v176, v177, "[TAP][%ld] Item is in the middle of a copy...", v178, 0xCu);
      uint64_t v120 = v343;
      swift_slowDealloc();
    }

    v342((uint64_t)v175, v348);
    uint64_t v179 = &v120[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    uint64_t v180 = v337;
    if (!*(void *)v179)
    {
      uint64_t v193 = v307;
      static Logger.UI.getter();
      uint64_t v194 = Logger.logObject.getter();
      os_log_type_t v195 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v194, v195))
      {
        uint64_t v196 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v196 = 134217984;
        int v121 = v341;
        uint64_t v352 = v338;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v194, v195, "[TAP][%ld] Cancelling the copy", v196, 0xCu);
        swift_slowDealloc();
      }

      v342((uint64_t)v193, v348);
      [v142 cancel];

      swift_unknownObjectRelease();
      return v121(v336, v180);
    }
    static Logger.UI.getter();
    uint64_t v181 = Logger.logObject.getter();
    os_log_type_t v182 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v181, v182))
    {
      uint64_t v183 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v183 = 134217984;
      int v121 = v341;
      uint64_t v352 = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v181, v182, "[TAP][%ld] Deselecting the item. Bailing out", v183, 0xCu);
      uint64_t v120 = v343;
      swift_slowDealloc();
    }

    v342((uint64_t)v326, v348);
    [v120 loadViewIfNeeded];
    uint64_t v106 = *(void **)&v120[v299];
    if (v106)
    {
      id v184 = v106;
      Class v185 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v184 deselectItemAtIndexPath:v185 animated:1];

      swift_unknownObjectRelease();
      return v121(v336, v180);
    }
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
LABEL_44:
  char v143 = v340;
  if (([v340 isReadable] & 1) == 0)
  {
    unint64_t v164 = v322;
    static Logger.UI.getter();
    uint64_t v165 = Logger.logObject.getter();
    os_log_type_t v166 = static os_log_type_t.error.getter();
    BOOL v167 = os_log_type_enabled(v165, v166);
    uint64_t v168 = v336;
    uint64_t v169 = v348;
    if (v167)
    {
      uint64_t v170 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v170 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v165, v166, "[TAP][%ld] Item is not readable. Bailing out", v170, 0xCu);
      char v143 = v340;
      swift_slowDealloc();
    }

    v342((uint64_t)v164, v169);
    NSString v171 = [v143 displayName];
    uint64_t v172 = v143;
    uint64_t v173 = v337;
    if (!v171)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v171 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v172 isFolder];
    DOCAlertItemIsNotReadable();

    swift_unknownObjectRelease();
    uint64_t v174 = v168;
    goto LABEL_100;
  }
  if ([v143 isFolder])
  {
    (*(void (**)(char *, void, uint64_t))(v310 + 104))(v323, enum case for DOCAnalyticsActionEvent.Action.enumerate(_:), v311);
    uint64_t v144 = *(void **)&v120[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v145 = swift_allocObject();
    *(_OWORD *)(v145 + 16) = xmmword_1005A04F0;
    *(void *)(v145 + 32) = v100;
    aBlock[0] = v145;
    specialized Array._endMutation()();
    id v146 = v144;
    os_log_t v147 = v100;
    DOCAnalyticsActionEvent.FileProvider.init(items:)();
    id v148 = [self mainBundle];
    id v149 = [v148 bundleIdentifier];

    if (v149)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v197 = v343;
    id v198 = [*(id *)&v343[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
    DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
    uint64_t v199 = (void **)&v197[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    uint64_t v106 = *v199;
    if ((unint64_t)*v199 < 3)
    {
      (*(void (**)(char *, void, uint64_t))(v314 + 104))(v315, *(unsigned int *)*(&off_100698830 + (void)v106), v316);
      DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
      uint64_t v200 = v312;
      static Logger.UI.getter();
      uint64_t v201 = Logger.logObject.getter();
      os_log_type_t v202 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v201, v202))
      {
        uint64_t v203 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v203 = 134217984;
        aBlock[0] = v338;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v201, v202, "[TAP][%ld] Sending Analytics event.", v203, 0xCu);
        swift_slowDealloc();
      }

      v342((uint64_t)v200, v348);
      type metadata accessor for DOCAnalyticsManager();
      uint64_t v204 = (void *)static DOCAnalyticsManager.shared.getter();
      uint64_t v205 = v325;
      DOCAnalyticsManager.sendActionEvent(_:)();

      (*(void (**)(char *, uint64_t))(v308 + 8))(v205, v309);
      uint64_t v120 = v343;
      goto LABEL_90;
    }
LABEL_155:
    aBlock[0] = (uint64_t)v106;
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    return result;
  }
LABEL_90:
  uint64_t v206 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected;
  if (v120[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_selectedIndexPathWasAlreadySelected])
  {
    BOOL v207 = 1;
  }
  else
  {
    uint64_t v208 = &v120[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    BOOL v207 = *(void *)v208 == 2;
  }
  LODWORD(v347) = v207;
  uint64_t v209 = v344;
  v210 = *(void **)&v120[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if (![v210 isFilesApp]) {
    goto LABEL_97;
  }
  if ((v343[v206] & 1) == 0)
  {
    uint64_t v211 = &v343[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*(void *)v211 == 2) {
      goto LABEL_97;
    }
  }
  if ([v340 isFolder]) {
    goto LABEL_97;
  }
  uint64_t v222 = v306;
  static Logger.UI.getter();
  uint64_t v223 = Logger.logObject.getter();
  os_log_type_t v224 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v223, v224))
  {
    uint64_t v225 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v225 = 134217984;
    aBlock[0] = v338;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v223, v224, "[TAP][%ld] Triggering action in Files for a non folder item.", v225, 0xCu);
    swift_slowDealloc();
  }

  v342((uint64_t)v222, v348);
  v226 = self;
  id v227 = [v226 defaultManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v228 = swift_allocObject();
  *(_OWORD *)(v228 + 16) = xmmword_1005A04F0;
  *(void *)(v228 + 32) = v100;
  aBlock[0] = v228;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  v334 = v100;
  Class v229 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v230 = [v227 eligibleActionsForItems:v229];

  type metadata accessor for FPAction(0);
  sub_100078438((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  uint64_t v231 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v232 = FPActionUnarchive;
  LOBYTE(v229) = sub_1005350BC(v232, v231);

  if ((v229 & 1) == 0) {
    goto LABEL_110;
  }
  char v233 = &v298[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (v298[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    uint64_t v234 = *(void **)(*v233 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
LABEL_108:
    unsigned int v235 = [v234 isWritable];
    swift_unknownObjectRelease();
    if (!v235 || ([v334 isDownloading] & 1) != 0) {
      goto LABEL_110;
    }
    goto LABEL_142;
  }
  uint64_t v234 = (void *)v233[1];
  swift_unknownObjectRetain();
  if (v234) {
    goto LABEL_108;
  }
LABEL_110:
  id v236 = v232;
  char v237 = sub_1005350BC(v236, v231);

  swift_bridgeObjectRelease();
  if ((v237 & 1) == 0) {
    goto LABEL_116;
  }
  id v238 = [*(id *)&v343[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  uint64_t v239 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v241 = v240;
  if (v239 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v241 == v242)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v243 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v243 & 1) == 0) {
      goto LABEL_116;
    }
  }
  if ([v334 isDownloading])
  {
LABEL_116:
    id v244 = v304;
    static Logger.UI.getter();
    uint64_t v245 = Logger.logObject.getter();
    os_log_type_t v246 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v245, v246))
    {
      id v247 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v247 = 134217984;
      aBlock[0] = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v245, v246, "[TAP][%ld] Preparing Quick Look for the preview", v247, 0xCu);
      swift_slowDealloc();
    }

    v342((uint64_t)v244, v348);
    uint64_t v248 = &v343[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t Available = Array<A>.fpfs_syncFetchAvailableFPItems()();
    swift_bridgeObjectRelease();
    if (Available >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v249 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v249 = *(void *)((Available & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v250 = *((void *)v248 + 1);
    uint64_t v209 = v344;
    if (v250 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v251 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v251 == v249) {
        goto LABEL_125;
      }
    }
    else
    {
      uint64_t v251 = *(void *)((v250 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v251 == v249) {
        goto LABEL_125;
      }
    }
    v333 = (char *)Available;
    static Logger.UI.getter();
    uint64_t v252 = Logger.logObject.getter();
    os_log_type_t v253 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v252, v253))
    {
      uint64_t v254 = swift_slowAlloc();
      *(_DWORD *)uint64_t v254 = 134218496;
      uint64_t v350 = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v254 + 12) = 2048;
      uint64_t v350 = v251;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v254 + 22) = 2048;
      uint64_t v350 = v249;
      uint64_t v209 = v344;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v252, v253, "[TAP][%ld] The number of DOCNodes (%ld) is different from the number of FPItems (%ld)", (uint8_t *)v254, 0x20u);
      swift_slowDealloc();
    }

    v342((uint64_t)v305, v348);
    unint64_t Available = (unint64_t)v333;
LABEL_125:
    if (v249 < 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v265 = v303;
      static Logger.UI.getter();
      uint64_t v266 = Logger.logObject.getter();
      os_log_type_t v267 = static os_log_type_t.error.getter();
      BOOL v268 = os_log_type_enabled(v266, v267);
      uint64_t v269 = v336;
      if (v268)
      {
        uint64_t v270 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v270 = 134217984;
        uint64_t v350 = v338;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v266, v267, "[TAP][%ld] Could not get any FPItems to preview", v270, 0xCu);
        swift_slowDealloc();
      }

      swift_unknownObjectRelease();
      v342((uint64_t)v265, v348);
      uint64_t v174 = v269;
      uint64_t v192 = v337;
      return v341(v174, v192);
    }
    if ([v210 useSharedQuickLook])
    {
      id v255 = [v210 sceneIdentifier];
      if (v255)
      {
        uint64_t v256 = qword_1007052D8;
        id v93 = v255;
        if (v256 == -1)
        {
LABEL_129:
          id v257 = (void *)qword_10071B4C0;
          uint64_t v258 = (char *)[(id)qword_10071B4C0 objectForKey:v93];
          if (!v258)
          {
            id v259 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
            uint64_t v258 = (char *)DOCPreviewController.init()();
            [v257 setObject:v258 forKey:v93];
          }

          id v260 = &v258[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
          swift_beginAccess();
          *id v260 = 1;
          *(void *)&v258[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = &protocol witness table for DOCItemCollectionViewController;
          swift_unknownObjectWeakAssign();
          swift_bridgeObjectRetain();
          sub_1001B5B48((uint64_t)v334, Available, (unint64_t *)&qword_1007069C0);
          unint64_t v262 = v261;
          char v264 = v263;
          swift_bridgeObjectRelease();
          DOCPreviewController.set(_:defaultIndex:)(Available, 0, 0, v262, v264 & 1);

          swift_bridgeObjectRelease();
          uint64_t v209 = v344;
          goto LABEL_97;
        }
LABEL_152:
        swift_once();
        goto LABEL_129;
      }
      objc_super v296 = (void *)static DOCLog.Source.getter();
      static os_log_type_t.debug.getter();
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_97:
    uint64_t v212 = v318;
    static Logger.UI.getter();
    uint64_t v213 = Logger.logObject.getter();
    os_log_type_t v214 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v213, v214))
    {
      uint64_t v215 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v215 = 134217984;
      uint64_t v351 = v338;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v213, v214, "[TAP][%ld] Validate Node Selection and perform did pick", v215, 0xCu);
      uint64_t v209 = v344;
      swift_slowDealloc();
    }

    v342(v212, v348);
    uint64_t v216 = v321;
    uint64_t v217 = v209;
    uint64_t v173 = v337;
    v345((unint64_t)v321, v217, (uint64_t)v337);
    unint64_t v218 = (*(unsigned __int8 *)(v339 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
    uint64_t v219 = swift_allocObject();
    *(void *)(v219 + 16) = v338;
    *(unsigned char *)(v219 + 24) = v347;
    id v220 = v329;
    *(void *)(v219 + 32) = v329;
    ((void (*)(unint64_t, char *, char *))v335)(v219 + v218, v216, v173);
    id v221 = v220;
    sub_100201FD8(v340, 0, sub_100220A2C, v219, v343, ObjectType);

    swift_unknownObjectRelease();
    swift_release();
    uint64_t v174 = v336;
LABEL_100:
    uint64_t v192 = v173;
    return v341(v174, v192);
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v272 = v334;
  if (Strong)
  {
    [Strong didTapLocationOf:v334];
    swift_unknownObjectRelease();
  }
  unint64_t v273 = v302;
  static Logger.UI.getter();
  uint64_t v274 = Logger.logObject.getter();
  os_log_type_t v275 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v274, v275))
  {
    uint64_t v276 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v276 = 134217984;
    aBlock[0] = v338;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v274, v275, "[TAP][%ld] Unarchiving selected item from RECENTS. Fetching Parent", v276, 0xCu);
    swift_slowDealloc();
  }

  v342((uint64_t)v273, v348);
  id v277 = [v226 defaultManager];
  id v278 = [v272 parentItemID];
  uint64_t v279 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v280 = v321;
  uint64_t v281 = v337;
  v345((unint64_t)v321, v344, (uint64_t)v337);
  unint64_t v282 = (*(unsigned __int8 *)(v339 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80);
  uint64_t v283 = swift_allocObject();
  uint64_t v284 = v338;
  *(void *)(v283 + 16) = v279;
  *(void *)(v283 + 24) = v284;
  *(void *)(v283 + 32) = v272;
  *(unsigned char *)(v283 + 40) = v347;
  id v285 = v329;
  *(void *)(v283 + 48) = v329;
  ((void (*)(unint64_t, char *, char *))v335)(v283 + v282, v280, v281);
  aBlock[4] = (uint64_t)sub_100220B74;
  aBlock[5] = v283;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10000CAE4;
  void aBlock[3] = (uint64_t)&unk_100697F00;
  unint64_t v286 = _Block_copy(aBlock);
  uint64_t v287 = v272;
  id v288 = v285;
  swift_release();
  [v277 fetchItemForItemID:v278 completionHandler:v286];

  swift_unknownObjectRelease();
  _Block_release(v286);

  return v341(v336, v281);
}

void *DOCItemCollectionViewController._multitaskingDragExclusionRects()()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
  swift_beginAccess();
  if (*(void *)v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = result;
  [result safeAreaInsets];
  double v5 = v4;
  double v7 = v6;

  uint64_t result = [v0 view];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  [result bounds];
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;

  double v17 = sub_10009D0D0(v10, v12, v14, v16, v5, v7);
  double v19 = v18;
  double v21 = v20;
  double v23 = v22;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_collectionViewLayoutTraits])
  {
    swift_retain();
    sub_10004B1F0((uint64_t)v32);
    swift_release();
    double v24 = v34;
    double v25 = v35;
    [v33 spacing];
    double v17 = sub_10009D0D0(v17, v19, v21, v23, v24, v25);
    double v19 = v26;
    double v21 = v27;
    double v23 = v28;
    sub_10004B470((uint64_t)v32);
  }
  id v29 = [self valueWithCGRect:v17, v19, v21, v23];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1005A04F0;
  *(void *)(v30 + 32) = v29;
  uint64_t v31 = v30;
  specialized Array._endMutation()();
  return (void *)v31;
}

void sub_1001E4BD4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, int a6, void *a7, uint64_t a8)
{
  uint64_t v32 = a5;
  uint64_t v33 = a8;
  double v35 = a7;
  int v36 = a6;
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v34 + 64);
  __chkstk_darwin(v11);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  double v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v18 = (void *)Strong;
    if (a1 && !a2)
    {
      id v19 = a1;
      if ([v19 isWritable])
      {
        static Logger.UI.getter();
        double v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.default.getter();
        int v31 = v21;
        if (os_log_type_enabled(v20, v21))
        {
          double v22 = (uint8_t *)swift_slowAlloc();
          id v30 = v19;
          double v23 = v22;
          *(_DWORD *)double v22 = 134217984;
          aBlock[0] = a4;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v31, "[TAP][%ld] Parent is writable, unarchiving...", v23, 0xCu);
          id v19 = v30;
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        sub_1001E0768(v32);
      }
      if ((v36 & 1) == 0)
      {
        uint64_t v24 = v34;
        (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))((char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v33, v11);
        unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
        uint64_t v26 = swift_allocObject();
        double v27 = v35;
        *(void *)(v26 + 16) = v35;
        (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v26 + v25, (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
        aBlock[4] = sub_100220D10;
        aBlock[5] = v26;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        void aBlock[3] = &unk_100697FF0;
        double v28 = _Block_copy(aBlock);
        id v29 = v27;
        swift_release();
        DOCRunInMainThread();

        _Block_release(v28);
        return;
      }
    }
  }
}

void sub_1001E4F3C(uint64_t a1, int a2, void *a3, uint64_t a4)
{
  uint64_t v21 = a1;
  uint64_t v22 = a4;
  int v23 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    double v20 = a3;
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v14 = 134217984;
    aBlock[0] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[TAP][%ld] Validation finished", v15, 0xCu);
    a3 = v20;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v5);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v23 & 1;
  *(void *)(v17 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  aBlock[4] = sub_100220E74;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_100698040;
  double v18 = _Block_copy(aBlock);
  id v19 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

void sub_1001E5230(char a1, void *a2)
{
  if ((a1 & 1) == 0)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v5 = [a2 cellForItemAtIndexPath:isa];

    if (v5)
    {
      [v5 layoutIfNeeded];
    }
    Class v6 = IndexPath._bridgeToObjectiveC()().super.isa;
    [a2 deselectItemAtIndexPath:v6 animated:1];
  }
}

void *DOCItemCollectionViewController.collectionView(_:canPerformAction:forItemAt:withSender:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100217740(a3);
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionView(_:didUpdateFocusIn:with:)(UICollectionView _, UICollectionViewFocusUpdateContext didUpdateFocusIn, UIFocusAnimationCoordinator with)
{
}

void DOCItemCollectionViewController.collectionView(_:didEndDisplaying:forItemAt:)(uint64_t a1, void *a2)
{
}

void DOCItemCollectionViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2)
{
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v3 = (void *)swift_dynamicCastClass();
  if (v3)
  {
    double v4 = *(void (**)(void))((swift_isaMask & *v3) + 0x218);
    id v5 = a2;
    v4();
  }
}

uint64_t DOCItemCollectionViewController.collectionView(_:willDisplaySupplementaryView:forElementKind:at:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100217F74(a2, a5);
}

uint64_t sub_1001E5A2C()
{
  if (!sub_100017F90()
    || ([*(id *)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] isPopoverOrWidget] & 1) != 0|| (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0&& (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]|| (v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    goto LABEL_21;
  }
  id v1 = [v0 presentedViewController];
  if (!v1)
  {
LABEL_18:
    uint64_t v12 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    if (*v12 != 2)
    {
      char v11 = 1;
      return v11 & 1;
    }
    os_log_type_t v13 = &v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v14 = *((void *)v13 + 1);
      uint64_t ObjectType = swift_getObjectType();
      char v11 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 40))(v0, ObjectType, v14);
      swift_unknownObjectRelease();
      return v11 & 1;
    }
LABEL_21:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v2 = v1;
  type metadata accessor for DOCSearchController();
  uint64_t v3 = (char *)swift_dynamicCastClass();
  if (!v3 || (double v4 = v3, ![v3 isActive]))
  {

    goto LABEL_18;
  }
  if ([v4 isActive])
  {
    id v5 = [*(id *)&v4[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController] viewIfLoaded];
    if (v5)
    {
      Class v6 = v5;
      unsigned int v7 = [v5 isHidden];

      if (v7) {
        [v4 setActive:0];
      }
    }
  }
  if ([v4 isActive]
    && (id v8 = [*(id *)&v4[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController] viewIfLoaded]) != 0)
  {
    uint64_t v9 = v8;
    unsigned __int8 v10 = [v8 isHidden];

    char v11 = v10 ^ 1;
  }
  else
  {

    char v11 = 1;
  }
  return v11 & 1;
}

void DOCItemCollectionViewController.collectionView(_:didBeginMultipleSelectionInteractionAt:)(void *a1)
{
  if ((sub_1001E5A2C() & 1) == 0)
  {
    if (v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_forceEditingMode]) {
      return;
    }
    double v4 = "setEditing:";
    id v5 = a1;
    id v6 = 0;
    goto LABEL_11;
  }
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture] = 1;
  if (![a1 isEditing] || (sub_10008762C(), !v3))
  {
LABEL_13:
    id v6 = [a1 isEditing];
    double v4 = "setEditing:animated:";
    id v5 = v1;
LABEL_11:
    [v5 v4:v6];
    return;
  }
  id v7 = v3;
  if ((sub_10017B0C0() & 1) == 0)
  {

    goto LABEL_13;
  }
  sub_100518D94(0, 0, 1);
  [v1 setEditing:[a1 isEditing] animated:1];
}

id DOCItemCollectionViewController.indexPathForPreferredFocusedView(in:)@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v36 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  char v11 = (char *)&v36 - v10;
  __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v37 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v39 = (char *)&v36 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v38 = (char *)&v36 - v21;
  __chkstk_darwin(v20);
  int v23 = (char *)&v36 - v22;
  id result = [v2 loadViewIfNeeded];
  unint64_t v25 = *(char **)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v25)
  {
    uint64_t v26 = (uint64_t)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_indexPathForRememberedFocusNode];
    swift_beginAccess();
    sub_1000CBC00(v26, (uint64_t)v13, (uint64_t *)&unk_1007069A0);
    double v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v27(v13, 1, v14) == 1)
    {
      double v28 = v25;
    }
    else
    {
      int v36 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v36(v23, v13, v14);
      id v29 = v25;
      sub_10038F1AC((uint64_t)v23, 0xD00000000000001FLL, 0x80000001005DA430, (uint64_t)v11);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      if (v27(v11, 1, v14) != 1)
      {

        double v35 = v38;
        int v31 = v36;
        v36(v38, v11, v14);
        goto LABEL_12;
      }
      os_log_type_t v13 = v11;
    }
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007069A0);
    uint64_t v30 = *(void *)&v25[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
        + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
    swift_beginAccess();
    sub_1000CBC00(v30, (uint64_t)v8, (uint64_t *)&unk_1007069A0);
    if (v27(v8, 1, v14) == 1)
    {

LABEL_9:
      uint64_t v33 = v41;
      sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
      uint64_t v34 = 1;
      return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v33, v34, 1, v14);
    }
    int v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    uint64_t v32 = (uint64_t)v39;
    v31(v39, v8, v14);
    id v8 = v40;
    sub_10038F1AC(v32, 0xD000000000000024, 0x80000001005DA400, (uint64_t)v40);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v32, v14);
    if (v27(v8, 1, v14) == 1) {
      goto LABEL_9;
    }
    double v35 = v37;
    v31(v37, v8, v14);
LABEL_12:
    uint64_t v33 = v41;
    v31(v41, v35, v14);
    uint64_t v34 = 0;
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v33, v34, 1, v14);
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCItemCollectionViewController.collectionViewDidEndMultipleSelectionInteraction(_:)(UICollectionView a1)
{
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_isSelectingUsingGesture) = 0;
}

void sub_1001E65C0(char *a1)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = &a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8];
    if (v5)
    {
      uint64_t v7 = *((void *)v4 + 3);
      uint64_t v6 = *((void *)v4 + 4);
      uint64_t v8 = *((void *)v4 + 2);
      v9[0] = *(void *)v4;
      v9[1] = v5;
      _OWORD v9[2] = v8;
      v9[3] = v7;
      v9[4] = v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1001BE97C(v9, a1);

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1001E6698(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10033994C(a2);
  }
}

void sub_1001E66F4(void *a1, uint64_t a2)
{
  uint64_t v5 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A0230;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_100073F48();
  *(void *)(v6 + 32) = 0xD000000000000024;
  *(void *)(v6 + 40) = 0x80000001005DD390;
  *(void *)(v6 + 96) = type metadata accessor for DOCNodeCollection();
  *(void *)(v6 + 104) = sub_100078438((unint64_t *)&unk_10070AE40, (void (*)(uint64_t))type metadata accessor for DOCNodeCollection);
  *(void *)(v6 + 72) = a1;
  id v7 = a1;
  uint64_t v8 = _convertErrorToNSError(_:)();
  *(void *)(v6 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v6 + 144) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v6 + 112) = v8;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v2;
  *(void *)(v9 + 24) = a2;
  v12[4] = sub_1002202AC;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  void v12[2] = sub_1000666D8;
  v12[3] = &unk_100697938;
  uint64_t v10 = _Block_copy(v12);
  id v11 = v2;
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v10);
}

void sub_1001E6910(unsigned char *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v73 = *(void *)(v4 - 8);
  uint64_t v74 = v4;
  __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for DispatchQoS();
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTimeInterval();
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v67 = *(void *)(v10 - 8);
  uint64_t v68 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  os_log_type_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v61 - v14;
  a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preventLoadingView] = 1;
  uint64_t v16 = &a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration];
  id v17 = [*(id *)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier];
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;
  if (v18 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v20 == v21)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      uint64_t v24 = *(void **)&a1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_loadingView];
      if (v24) {
        [v24 setHidden:1];
      }
    }
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = a1;
  *(void *)&long long aBlock = a2;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v26 = a1;
  sub_1000CBE70((uint64_t *)&unk_1007076D0);
  sub_10009E6C4(0, (unint64_t *)&unk_10070AE50);
  if (swift_dynamicCast())
  {
    double v27 = v79;
    double v28 = *(void **)&v16[*(int *)(type metadata accessor for DOCItemCollectionConfiguration() + 48)];
    if (v28 && (id v29 = objc_msgSend(v28, "fpfs_fpItem")) != 0)
    {
      uint64_t v30 = v29;
      uint64_t v63 = v25;
      id v64 = v27;
      id v31 = [v27 userInfo];
      uint64_t v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      if (*(void *)(v32 + 16) && (uint64_t v35 = sub_100042F50(v33, v34), (v36 & 1) != 0))
      {
        sub_10009B208(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&aBlock);
      }
      else
      {
        long long aBlock = 0u;
        long long v76 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((void *)&v76 + 1))
      {
        type metadata accessor for NSFileProviderItemIdentifier(0);
        if (swift_dynamicCast())
        {
          uint64_t v37 = v79;
          id v38 = v64;
          if ([v64 code] == (id)-1005)
          {
            id v39 = [v30 itemIdentifier];
            id v62 = v37;
            uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v42 = v41;
            if (v40 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v42 == v43)
            {

              swift_bridgeObjectRelease_n();
              goto LABEL_27;
            }
            char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v44)
            {
LABEL_27:
              uint64_t v45 = (void *)static DOCLog.UI.getter();
              static os_log_type_t.error.getter();
              sub_1000CBE70((uint64_t *)&unk_100708800);
              uint64_t v46 = swift_allocObject();
              *(_OWORD *)(v46 + 16) = xmmword_10059B760;
              *(void *)(v46 + 56) = &type metadata for String;
              *(void *)(v46 + 64) = sub_100073F48();
              *(void *)(v46 + 32) = 0xD000000000000024;
              *(void *)(v46 + 40) = 0x80000001005DD390;
              *(void *)(v46 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
              *(void *)(v46 + 104) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
              *(void *)(v46 + 72) = v30;
              id v47 = v30;
              os_log(_:dso:log:type:_:)();

              swift_bridgeObjectRelease();
              if (swift_unknownObjectWeakLoadStrong())
              {
                id v48 = [self defaultCenter];
                NSString v49 = String._bridgeToObjectiveC()();
                [v48 postNotificationName:v49 object:0];
                swift_release();

                swift_unknownObjectRelease();
              }
              else
              {
                swift_release();
              }
              return;
            }
          }
          else
          {
          }
        }
        else
        {
        }
      }
      else
      {

        sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
      }
      uint64_t v25 = v63;
    }
    else
    {
    }
  }
  uint64_t v50 = (void *)_convertErrorToNSError(_:)();
  char v51 = NSError.isProviderNotFound.getter();

  if (v51)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v64 = (id)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    void *v9 = 5;
    uint64_t v53 = v65;
    uint64_t v52 = v66;
    (*(void (**)(void *, void, uint64_t))(v65 + 104))(v9, enum case for DispatchTimeInterval.seconds(_:), v66);
    + infix(_:_:)();
    (*(void (**)(void *, uint64_t))(v53 + 8))(v9, v52);
    uint64_t v54 = v68;
    uint64_t v67 = *(void *)(v67 + 8);
    ((void (*)(char *, uint64_t))v67)(v13, v68);
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1002202CC;
    *(void *)(v55 + 24) = v25;
    BOOL v77 = sub_1000D8564;
    uint64_t v78 = v55;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v76 = sub_1000666D8;
    *((void *)&v76 + 1) = &unk_1006979B0;
    uint64_t v56 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v57 = v69;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100078438((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v58 = v71;
    uint64_t v59 = v74;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v60 = v64;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v56);
    swift_release();

    (*(void (**)(char *, uint64_t))(v73 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v72);
    ((void (*)(char *, uint64_t))v67)(v15, v54);
  }
  else
  {
    sub_1001E731C(a2, v26);
    swift_release();
  }
}

void sub_1001E731C(void *a1, char *a2)
{
  uint64_t v4 = self;
  uint64_t v5 = (void *)_convertErrorToNSError(_:)();
  id v6 = [v4 augmentedErrorForError:v5];

  if (!v6)
  {
    swift_errorRetain();
    id v6 = a1;
  }
  uint64_t v7 = &a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v8 = *((void *)v7 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v34 = type metadata accessor for DOCItemCollectionViewController(0);
    unint64_t v32 = (unint64_t)a2;
    uint64_t v10 = *(void (**)(unint64_t *, id, void, uint64_t, uint64_t, uint64_t))(v8 + 8);
    uint64_t v11 = a2;
    swift_errorRetain();
    v10(&v32, v6, 0, 1, ObjectType, v8);
    swift_unknownObjectRelease();
    swift_errorRelease();
    sub_10009B1B8((uint64_t)&v32);
  }
  a2[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v12 = [a2 viewIfLoaded];
  id v13 = [v12 window];

  if (v13) {
    sub_1000A6988();
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithSuiteName:v15];

  if (!v16) {
    goto LABEL_19;
  }
  if ([v16 valueForKey:DOCUserDefaultsKeyReportAllFileProviderErrors])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v31, 0, sizeof(v31));
  }
  sub_1000CBE0C((uint64_t)v31, (uint64_t)&v32, (uint64_t *)&unk_100705D60);
  if (!v34)
  {

    swift_errorRelease();
    sub_1000CBBA4((uint64_t)&v32, (uint64_t *)&unk_100705D60);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_19:
    swift_errorRelease();
    return;
  }
  if (v30 == 1 && DOCIsInternalBuild())
  {
    id v17 = (void *)_convertErrorToNSError(_:)();
    if (NSError.isProviderDomainNotAuthenticated.getter())
    {
      swift_errorRelease();
    }
    else
    {
      uint64_t v18 = (void *)_convertErrorToNSError(_:)();
      unint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      _StringGuts.grow(_:)(49);
      swift_bridgeObjectRelease();
      unint64_t v32 = 0xD000000000000020;
      unint64_t v33 = 0x80000001005DD400;
      id v19 = [v17 domain];
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      v23._uint64_t countAndFlagsBits = v20;
      v23._object = v22;
      String.append(_:)(v23);
      swift_bridgeObjectRelease();
      v24._uint64_t countAndFlagsBits = 0x20727245202D20;
      v24._object = (void *)0xE700000000000000;
      String.append(_:)(v24);
      *(void *)&v31[0] = [v17 code];
      v25._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v25);
      swift_bridgeObjectRelease();
      v26._uint64_t countAndFlagsBits = 168442409;
      v26._object = (void *)0xE400000000000000;
      String.append(_:)(v26);
      id v27 = [v17 userInfo];
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      v28._uint64_t countAndFlagsBits = Dictionary.description.getter();
      String.append(_:)(v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v29 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      DOCPresentAlertForErrorWithForceHandler();
      swift_errorRelease();
    }
  }
  else
  {
    swift_errorRelease();
  }
}

uint64_t sub_1001E77C0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t result = (uint64_t)[a1 isGathering];
  if (result) {
    return result;
  }
  sub_100080930(2);
  sub_10002E650();
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  sub_1001E7A08(a2);
  [*(id *)&v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24] updateUnderlyingNodeToNode:a2];
  sub_10001B01C();
  if (v2[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForHeader] == 1)
  {
    id v6 = [v2 splitViewController];
    if (v6)
    {
      uint64_t v7 = v6;
      [v2 enclosingTabSwitcherStyle];
      if (DOCTabSwitcherStyle.showsTabs.getter())
      {
        id v8 = [v2 traitCollection];
        __chkstk_darwin(v8);
        id v9 = (id)UITraitCollection.modifyingTraits(_:)();

LABEL_8:
        sub_100021F80(v9, 0, 0, 1, 0);

        goto LABEL_9;
      }
    }
    id v9 = [v2 traitCollection];
    goto LABEL_8;
  }
LABEL_9:
  sub_100016C84();
  v3[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
  id v10 = [v3 viewIfLoaded];
  id v11 = [v10 window];

  if (v11) {
    sub_1000A6988();
  }
  swift_getObjectType();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  DOCNode.fpfs_fetchFPItem(completion:)();
  return swift_release_n();
}

void sub_1001E7A08(void *a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView;
  uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView);
  if (v3)
  {
    uint64_t v5 = OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode;
    id v6 = *(void **)&v3[OBJC_IVAR____TtC5Files19DOCStatusFooterView_folderNode];
    swift_unknownObjectRetain();
    uint64_t v7 = v3;
    char v8 = sub_1001B0D70(a1, v6);
    swift_unknownObjectRelease();
    if (v8)
    {
      id v9 = *(void **)&v3[v5];
      swift_unknownObjectRetain();
      uint64_t v10 = swift_unknownObjectRetain();
      sub_1001AED80(v10);
      *(void *)&v3[v5] = a1;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      sub_1001AEF1C(v9);

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      id v11 = *(void **)(v1 + v2);
      *(void *)(v1 + v2) = 0;

      *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsCollectionReload) = 1;
    }
  }
}

void sub_1001E7B24(void *a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    *(void *)(v4 + 24) = a1;
    void v7[4] = sub_10022028C;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    void v7[2] = sub_1000666D8;
    v7[3] = &unk_1006978E8;
    uint64_t v5 = _Block_copy(v7);
    id v6 = a1;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v5);
  }
}

void sub_1001E7C10(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_10057F644(a2);
  }
}

uint64_t sub_1001E7C6C(void *a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v10 - 8);
  uint64_t v125 = (uint64_t)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  id v13 = *(char **)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v16 = (unint64_t)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  os_log_type_t v124 = (char *)&v120 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  Swift::Int v126 = (char *)&v120 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v128 = (char *)&v120 - v22;
  __chkstk_darwin(v21);
  Swift::String v24 = (char *)&v120 - v23;
  static Logger.UI.getter();
  id v25 = a1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  Swift::String v26 = (char *)v25;
  id v27 = Logger.logObject.getter();
  LODWORD(v131) = static os_log_type_t.default.getter();
  BOOL v28 = os_log_type_enabled(v27, (os_log_type_t)v131);
  uint64_t v133 = v26;
  unint64_t v134 = a4;
  unint64_t v127 = a2;
  if (v28)
  {
    os_log_t v123 = v27;
    unint64_t v129 = (unint64_t)v5;
    os_log_type_t v130 = v13;
    unint64_t v135 = v16;
    uint64_t v132 = v12;
    NSString v29 = v26;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v122 = swift_slowAlloc();
    v139[0] = v122;
    *(_DWORD *)uint64_t v30 = 136316418;
    uint64_t v138 = sub_10009B0E4(0xD000000000000043, 0x80000001005DD200, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2080;
    id v31 = v29;
    id v32 = [v31 description];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    uint64_t v138 = sub_10009B0E4(v33, v35, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 22) = 2048;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v36 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v138 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 32) = 2048;
    if ((a3 & 0xC000000000000001) != 0) {
      uint64_t v37 = __CocoaDictionary.count.getter();
    }
    else {
      uint64_t v37 = *(void *)(a3 + 16);
    }
    swift_bridgeObjectRelease();
    uint64_t v138 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 42) = 2080;
    a3 = v134;
    swift_bridgeObjectRetain();
    uint64_t v40 = Array.description.getter();
    unint64_t v42 = v41;
    swift_bridgeObjectRelease();
    uint64_t v138 = sub_10009B0E4(v40, v42, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 52) = 1024;
    id v39 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
    unsigned int v43 = [v31 isGathering];

    LODWORD(v138) = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    os_log_t v44 = v123;
    _os_log_impl((void *)&_mh_execute_header, v123, (os_log_type_t)v131, "DOCNodeCollectionDelegate %s nodeCollection: %s update: %ld replaceItemsByFormerID: %ld deletedItemIDs: %s isGathering: %{BOOL}d", (uint8_t *)v30, 0x3Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v13 = v130;
    id v38 = *((void *)v130 + 1);
    uint64_t v12 = v132;
    ((void (*)(char *, uint64_t))v38)(v24, v132);
    unint64_t v16 = v135;
    uint64_t v5 = (char *)v129;
    Swift::String v26 = v133;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    id v38 = *((void *)v13 + 1);
    ((void (*)(char *, uint64_t))v38)(v24, v12);
    id v39 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
  }
  uint64_t result = (uint64_t)[v26 v39[505]];
  if (result) {
    return result;
  }
  uint64_t v46 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView;
  if (!*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView]
    || !*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_diffableDataSource])
  {
    if (*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {
      unint64_t v51 = sub_10007CC5C(result);
      return DOCItemCollectionViewController.items.setter(v51);
    }
    __break(1u);
    goto LABEL_90;
  }
  uint64_t v47 = *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v47)
  {
LABEL_90:
    __break(1u);
    return result;
  }
  os_log_type_t v130 = v13;
  uint64_t v48 = v47 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  char v49 = *(unsigned char *)(v48 + 16);
  os_log_t v123 = v38;
  if (v49)
  {
    unsigned int v50 = 0;
  }
  else
  {
    id v52 = *(id *)v48;
    unsigned int v50 = [v52 doc_displaysSearchResults];
  }
  uint64_t v53 = v128;
  uint64_t v132 = v12;
  uint64_t v54 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates;
  uint64_t v55 = *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates];
  BOOL v56 = __OFADD__(v55, 1);
  uint64_t v57 = v55 + 1;
  if (v56) {
    goto LABEL_79;
  }
  int v58 = v50 ^ 1;
  *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchUpdates] = v57;
  sub_1001C2978();
  static Logger.UI.getter();
  id v13 = v5;
  uint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.debug.getter();
  BOOL v61 = os_log_type_enabled(v59, v60);
  uint64_t v131 = v13;
  unint64_t v135 = v16;
  unint64_t v129 = (unint64_t)v5;
  uint64_t v120 = v46;
  uint64_t v122 = v54;
  int v121 = v58;
  if (v61)
  {
    uint64_t v62 = swift_slowAlloc();
    v139[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315650;
    uint64_t v138 = sub_10009B0E4(0xD000000000000043, 0x80000001005DD200, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v62 + 12) = 1024;
    LODWORD(v138) = v58;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v62 + 18) = 2048;
    uint64_t v138 = *(void *)&v5[v54];
    id v13 = v131;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    _os_log_impl((void *)&_mh_execute_header, v59, v60, "DOCNodeCollectionDelegate %s animate: %{BOOL}d performingBatchUpdates: %ld", (uint8_t *)v62, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v63 = v128;
  }
  else
  {

    uint64_t v63 = v53;
  }
  uint64_t v64 = v132;
  ((void (*)(char *, uint64_t))v123)(v63, v132);
  unint64_t v16 = v127;
  sub_10013EE10(v127, 0, 0);
  uint64_t v65 = &v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
  swift_beginAccess();
  uint64_t v46 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate;
  *(void *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsBeforeModelUpdate] = *(void *)v65;
  swift_bridgeObjectRetain();
  uint64_t v66 = swift_bridgeObjectRelease();
  unint64_t v67 = sub_10007CC5C(v66);
  DOCItemCollectionViewController.items.setter(v67);
  uint64_t v133 = v65;
  uint64_t v68 = v125;
  sub_10008BCB8((uint64_t)v65, v125, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  uint64_t v69 = swift_bridgeObjectRetain();
  char v70 = sub_10031E074(v69);
  swift_bridgeObjectRelease();
  sub_10008BBF0(v68, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
  a3 = v16 >> 62;
  uint64_t v71 = v126;
  if ((v70 & 1) == 0)
  {
    long long v76 = v124;
    static Logger.UI.getter();
    BOOL v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      v139[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 136315138;
      uint64_t v137 = sub_10009B0E4(0xD000000000000043, 0x80000001005DD200, v139);
      id v13 = v131;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "DOCNodeCollectionDelegate %s Item collection structure changed. Updating snapshot.", v79, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v80 = v124;
      uint64_t v81 = v132;
    }
    else
    {

      uint64_t v80 = v76;
      uint64_t v81 = v64;
    }
    ((void (*)(char *, uint64_t))v123)(v80, v81);
    double v82 = swift_bridgeObjectRetain();
    sub_10007A41C(v82, v121);
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v72 = Logger.logObject.getter();
  os_log_type_t v73 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v72, v73))
  {
    uint64_t v74 = swift_slowAlloc();
    v139[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v74 = 136315394;
    uint64_t v137 = sub_10009B0E4(0xD000000000000043, 0x80000001005DD200, v139);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v74 + 12) = 2048;
    if (a3)
    {
      swift_bridgeObjectRetain();
      uint64_t v75 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v75 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v137 = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "DOCNodeCollectionDelegate %s Item collection structure unchanged. Updating %ld items", (uint8_t *)v74, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    ((void (*)(char *, uint64_t))v123)(v71, v132);
    id v13 = v131;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    ((void (*)(char *, uint64_t))v123)(v71, v64);
  }
  if (a3) {
    goto LABEL_84;
  }
  if (*(uint64_t *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
    goto LABEL_35;
  }
LABEL_32:
  sub_1001D96D0(0);
LABEL_36:
  if (!a3)
  {
    uint64_t v85 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_38;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v85 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_38:
    unint64_t v86 = v129;
    if (v85 >= 1) {
      sub_1001E8E8C(v13);
    }
    if (v134 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v118 < 1) {
        goto LABEL_45;
      }
    }
    else if (*(uint64_t *)((v134 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      goto LABEL_45;
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      id v87 = [self defaultCenter];
      NSString v88 = String._bridgeToObjectiveC()();
      [v87 postNotificationName:v88 object:0];
      swift_unknownObjectRelease();
    }
    sub_1001E8E8C(v13);
LABEL_45:
    uint64_t v89 = *(void *)(v86 + v122);
    BOOL v56 = __OFSUB__(v89, 1);
    uint64_t v90 = v89 - 1;
    if (v56)
    {
      __break(1u);
LABEL_84:
      swift_bridgeObjectRetain();
      uint64_t v119 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v119 >= 1)
      {
LABEL_35:
        double v83 = v13;
        unsigned __int8 v84 = sub_1002069EC(v16, (uint64_t)v83);

        sub_1001D96D0((uint64_t)v84);
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      goto LABEL_32;
    }
    *(void *)(v86 + v122) = v90;
    sub_1001C2978();
    uint64_t v91 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks;
    uint64_t v92 = *(void *)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_postBatchUpdateBlocks];
    uint64_t v93 = *(void *)(v92 + 16);
    if (v93)
    {
      swift_bridgeObjectRetain();
      uint64_t v94 = v92 + 40;
      do
      {
        unint64_t v16 = *(void *)(v94 - 8);
        uint64_t v95 = swift_retain();
        ((void (*)(uint64_t))v16)(v95);
        swift_release();
        v94 += 16;
        --v93;
      }
      while (v93);
      unint64_t v96 = v86;
      swift_bridgeObjectRelease();
      id v13 = v131;
    }
    else
    {
      unint64_t v96 = v86;
    }
    *(void *)&v13[v91] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    *(void *)&v13[v46] = 0;
    swift_bridgeObjectRelease();
    v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_updateStackViewMetrics] = 1;
    sub_100012D80();
    char v97 = sub_10008BD6C();
    unint64_t v98 = v135;
    if ((v97 & 1) == 0 || !*(void *)(v96 + v120)) {
      goto LABEL_69;
    }
    unint64_t v99 = (unint64_t)sub_10001A904();
    unint64_t v100 = v99;
    if (v99 >> 62) {
      break;
    }
    uint64_t v101 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v101) {
      goto LABEL_68;
    }
LABEL_55:
    uint64_t v128 = (char *)v101;
    unint64_t v129 = v100 & 0xC000000000000001;
    a3 = 4;
    unint64_t v127 = v100;
    while (1)
    {
      uint64_t v102 = v129
           ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : (char *)*(id *)(v100 + 8 * a3);
      id v13 = v102;
      if (__OFADD__(a3 - 4, 1)) {
        break;
      }
      uint64_t v103 = (uint64_t *)&v102[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
      uint64_t v104 = *(void *)&v102[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection
                            + 8];
      if (!v104)
      {

        goto LABEL_68;
      }
      unint64_t v134 = a3 - 3;
      uint64_t v105 = *v103;
      unint64_t v16 = v103[3];
      uint64_t v46 = *(void *)v133;
      unint64_t v106 = sub_10020872C(*v103, v104, *(void **)v133);
      if (v107)
      {
        sub_100208814(v105, v104);

        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v98 = v135;
        goto LABEL_68;
      }
      if ((v106 & 0x8000000000000000) != 0) {
        goto LABEL_77;
      }
      if (v106 >= *(void *)(v46 + 16)) {
        goto LABEL_78;
      }
      uint64_t v108 = (void *)(v46 + 40 * v106);
      uint64_t v46 = v108[5];
      uint64_t v109 = v108[6];
      uint64_t v110 = v108[7];
      uint64_t v111 = v108[8];
      v139[0] = v108[4];
      v139[1] = v46;
      v139[2] = v109;
      v139[3] = v110;
      v139[4] = v111;
      sub_100208814(v105, v104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1001DE428(v13, v139);
      unint64_t v100 = v127;
      swift_release();
      uint64_t v112 = v128;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++a3;
      unint64_t v98 = v135;
      if ((char *)v134 == v112) {
        goto LABEL_68;
      }
    }
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
  }
  uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
  if (v101) {
    goto LABEL_55;
  }
LABEL_68:
  swift_bridgeObjectRelease();
  id v13 = v131;
LABEL_69:
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
  id v113 = *(void **)&v13[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__footerView];
  if (v113)
  {
    id v114 = v113;
    sub_1001AF2D4();
  }
  sub_1000B00FC(0);
  sub_1000543A4();
  static Logger.UI.getter();
  uint64_t v115 = Logger.logObject.getter();
  os_log_type_t v116 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v115, v116))
  {
    uint64_t v117 = (uint8_t *)swift_slowAlloc();
    uint64_t v137 = swift_slowAlloc();
    *(_DWORD *)uint64_t v117 = 136315138;
    uint64_t v136 = sub_10009B0E4(0xD000000000000043, 0x80000001005DD200, &v137);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v115, v116, "%s - calling resolvePendingNodeContexts", v117, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  ((void (*)(unint64_t, uint64_t))v123)(v98, v132);
  return sub_10002C81C();
}

void sub_1001E8E8C(char *a1)
{
  uint64_t v2 = self;
  id v3 = [*(id *)&a1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] sceneIdentifier];
  id v4 = [v2 globalTabbedBrowserControllerForIdentifier:v3];

  if (v4)
  {
    id v14 = [v4 effectiveFullBrowser];

    uint64_t v5 = (char *)[v14 effectiveBrowserViewController];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      char v8 = *v7;
      if (*v7 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
      {
        id v9 = v8;

        id v10 = v9;
        uint64_t v11 = a1;
        char v12 = static NSObject.== infix(_:_:)();

        if (v12)
        {
          swift_beginAccess();
          unint64_t v13 = swift_bridgeObjectRetain();
          sub_10057FAE8(v13);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

void sub_1001E9080(char a1)
{
  v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] = (v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_needsForceLayoutForFooter] | a1) & 1;
  id v2 = [v1 viewIfLoaded];
  [v2 setNeedsLayout];
}

void DOCItemCollectionViewController.collectionView(_:willEndContextMenuInteraction:animator:)(uint64_t a1, void *a2, void *a3)
{
}

uint64_t sub_1001E919C(uint64_t a1, uint64_t a2)
{
  id v3 = (void *)(a1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
  uint64_t result = swift_beginAccess();
  if (!*v3)
  {
    unint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_nodes);
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v13 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_4:
        if (v13 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v13; ++i)
        {
          if ((v5 & 0xC000000000000001) != 0)
          {
            unint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            unint64_t v7 = *(void *)(v5 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          char v8 = sub_1001DB1A4(v7);
          if (v8)
          {
            id v9 = v8;
            swift_getObjectType();
            type metadata accessor for DOCItemCollectionGridCell();
            id v10 = (void *)sub_1002208A4((uint64_t)v9);
            if (v10)
            {
              char v12 = *(void (**)(void))((swift_isaMask & *v10) + 0x550);
              uint64_t v11 = v9;
              v12(0);
            }
          }
          swift_unknownObjectRelease();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfiguration:highlightPreviewForItemAt:)(void *a1)
{
  type metadata accessor for DOCNodeContextMenuConfiguration();
  if (!swift_dynamicCastClass()) {
    return 0;
  }
  if ([*(id *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) browserViewContext])
  {
    return 0;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 cellForItemAtIndexPath:isa];

  if (!v6) {
    return 0;
  }
  type metadata accessor for DOCItemCollectionCell();
  unint64_t v7 = (char *)swift_dynamicCastClass();
  if (v7) {
    id v3 = DOCItemCollectionViewController.targetPreview(for:)(v7);
  }
  else {
    id v3 = 0;
  }

  return v3;
}

UITargetedPreview_optional __swiftcall DOCItemCollectionViewController.collectionView(_:previewForHighlightingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForHighlightingContextMenuWithConfiguration)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCNodeContextMenuConfiguration();
  if (!swift_dynamicCastClass()) {
    goto LABEL_14;
  }
  id v14 = *(void **)(v3 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration);
  uint64_t v15 = previewForHighlightingContextMenuWithConfiguration.super.isa;
  if ([v14 browserViewContext])
  {

LABEL_14:
    uint64_t v21 = 0;
    goto LABEL_15;
  }
  unint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_10003B398(v16);
  swift_bridgeObjectRelease();
  if (*((void *)v17 + 2))
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, &v17[(*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)], v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {

    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v19 = [(objc_class *)_.super.super.super.super.isa cellForItemAtIndexPath:isa];

  if (!v19)
  {
LABEL_13:

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_14;
  }
  type metadata accessor for DOCItemCollectionCell();
  uint64_t v20 = (char *)swift_dynamicCastClass();
  if (!v20)
  {

    goto LABEL_13;
  }
  uint64_t v21 = (objc_class *)DOCItemCollectionViewController.targetPreview(for:)(v20);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_15:
  uint64_t v22 = v21;
  result.value.super.Class isa = v22;
  result.is_nil = v13;
  return result;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfiguration:dismissalPreviewForItemAt:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v7 = [v3 collectionView:a1 contextMenuConfiguration:a2 highlightPreviewForItemAtIndexPath:isa];

  return v7;
}

UITargetedPreview_optional __swiftcall DOCItemCollectionViewController.collectionView(_:previewForDismissingContextMenuWithConfiguration:)(UICollectionView _, UIContextMenuConfiguration previewForDismissingContextMenuWithConfiguration)
{
  id v3 = [v2 collectionView:_.super.super.super.super.isa previewForHighlightingContextMenuWithConfiguration:previewForDismissingContextMenuWithConfiguration.super.isa];

  id v4 = (objc_class *)v3;
  result.value.super.Class isa = v4;
  result.is_nil = v5;
  return result;
}

id DOCItemCollectionViewController.collectionView(_:contextMenuConfigurationForItemsAt:point:)(void *a1, void *a2, double a3, double a4)
{
  Swift::Bool v5 = v4;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::Bool v13 = &v39[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  id v19 = &v39[-v18];
  if ((v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename] & 1) == 0
    && (*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController]
     || (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename] & 1) != 0))
  {
    return 0;
  }
  uint64_t v20 = *(void **)&v5[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ([v20 browserViewContext]
    || v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode] == 1
    || ([v20 suppressBlackCallout] & 1) != 0)
  {
    return 0;
  }
  id v21 = [v20 sceneIdentifier];
  uint64_t v22 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v21);

  uint64_t v23 = &v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  if (*(void *)v23)
  {
    static Logger.UI.getter();
    Swift::String v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      Swift::String v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[Interaction] An action was trying to be performed while there is an item trying to be opened.", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  NSString v29 = (void **)&v22[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem];
  swift_beginAccess();
  uint64_t v30 = *v29;
  char *v29 = 0;
  sub_10013FFF4(v30);

  if (!a2[2])
  {
    if (([a1 isEditing] & 1) == 0)
    {
      unint64_t v35 = (void *)swift_allocObject();
      void v35[2] = v5;
      uint64_t v36 = self;
      aBlock[4] = sub_10018DD7C;
      aBlock[5] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (void *)1107296256;
      aBlock[2] = sub_1001FCE6C;
      void aBlock[3] = &unk_100695A70;
      uint64_t v37 = _Block_copy(aBlock);
      id v38 = v5;
      swift_retain();
      swift_release();
      id v27 = [v36 configurationWithIdentifier:0 previewProvider:0 actionProvider:v37];
      swift_release();
      _Block_release(v37);

      return v27;
    }

    return 0;
  }
  id v31 = [a1 indexPathForItemAtPoint:a3, a4];
  if (v31)
  {
    id v32 = v31;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v33 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v17, 0, 1, v33);
  }
  else
  {
    uint64_t v34 = type metadata accessor for IndexPath();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 1, 1, v34);
  }
  sub_1000CBE0C((uint64_t)v17, (uint64_t)v19, (uint64_t *)&unk_1007069A0);
  aBlock[0] = a2;
  swift_bridgeObjectRetain();
  sub_1001FCDC4(aBlock);
  id v27 = (id)sub_1001EA0CC((uint64_t)aBlock[0], (uint64_t)v19);

  swift_release();
  sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_1007069A0);
  return v27;
}