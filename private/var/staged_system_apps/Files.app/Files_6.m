void sub_1003C933C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  void *v35;
  void *v36;
  char *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  char *v47;
  void *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void **aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  void (*v66)();
  void *v67;

  v55 = a6;
  v56 = a7;
  v60 = a5;
  v61 = a4;
  v13 = type metadata accessor for DispatchWorkItemFlags();
  v59 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchQoS();
  v57 = *(void *)(v16 - 8);
  v58 = v16;
  __chkstk_darwin(v16);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for URL();
  v20 = *(void *)(v19 - 8);
  v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19);
  v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v23 = (void *)_convertErrorToNSError(_:)();
    v24 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10059B760;
    *(void *)(v25 + 56) = &type metadata for String;
    *(void *)(v25 + 64) = sub_100073F48();
    *(void *)(v25 + 32) = 0xD00000000000004CLL;
    *(void *)(v25 + 40) = 0x80000001005F0130;
    *(void *)(v25 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v25 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v25 + 72) = v23;
    v26 = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    v27 = swift_allocObject();
    *(void *)(v27 + 16) = v26;
    *(void *)(v27 + 24) = a3;
    v66 = sub_1003CB710;
    v67 = (void *)v27;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_1000666D8;
    v65 = &unk_1006A7AD8;
    v28 = _Block_copy(&aBlock);
    v29 = v26;
    v30 = a3;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v28);

    OS_dispatch_semaphore.signal()();
  }
  else
  {
    v50 = a9;
    v51 = a10;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    v54 = static OS_dispatch_queue.main.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), a8, v19);
    v31 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v32 = (v21 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
    v53 = v13;
    v34 = (char *)swift_allocObject();
    v49 = v18;
    v35 = v55;
    *((void *)v34 + 2) = v60;
    *((void *)v34 + 3) = v35;
    v52 = v15;
    v36 = v56;
    *((void *)v34 + 4) = v56;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v34[v31], v22, v19);
    v37 = &v34[v32];
    v38 = v51;
    *(void *)v37 = v50;
    *((void *)v37 + 1) = v38;
    *(void *)&v34[v33] = 0;
    v39 = v61;
    *(void *)&v34[(v33 + 15) & 0xFFFFFFFFFFFFFFF8] = v61;
    v66 = sub_1003CB65C;
    v67 = v34;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_1000666D8;
    v65 = &unk_1006A7A88;
    v40 = _Block_copy(&aBlock);
    v41 = v60;
    v42 = v35;
    v43 = v36;
    swift_retain();
    v44 = v39;
    swift_release();
    v45 = v49;
    static DispatchQoS.unspecified.getter();
    aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000BAC9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    v47 = v52;
    v46 = v53;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v48 = (void *)v54;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v46);
    (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v58);
  }
}

void sub_1003C991C(void *a1, void *a2, void *a3, uint64_t a4, void (*a5)(id, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  v36 = a5;
  uint64_t v37 = a8;
  uint64_t v34 = a7;
  uint64_t v35 = a6;
  uint64_t v32 = a4;
  id v33 = a3;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = [a1 hostIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = a2;
  Date.init()();
  id v20 = objc_allocWithZone((Class)DOCHotFolderEvent);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v23 = [v20 initWithAppBundleIdentifier:v21 folderItem:v19 type:1 lastUsedDate:isa frecency:1.0];

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  type metadata accessor for DOCSmartFolderManager();
  v24 = (void *)static DOCSmartFolderManager.sharedManager.getter();
  DOCSmartFolderManager.register(event:)();

  id v25 = [v33 transferResults];
  if (v25)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
    sub_1000BAC9C((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    AnyHashable.init<A>(_:)();
    if (*(void *)(v26 + 16) && (unint64_t v27 = sub_10008E070((uint64_t)v38), (v28 & 1) != 0))
    {
      id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)v38);
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_1005A04F0;
      *(void *)(v30 + 32) = v29;
      v38[0] = v30;
      specialized Array._endMutation()();
      id v25 = (id)v38[0];
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)v38);
      id v25 = 0;
    }
  }
  v36(v25, v34);
  swift_bridgeObjectRelease();
  OS_dispatch_semaphore.signal()();
}

uint64_t sub_1003C9CA8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
}

uint64_t type metadata accessor for DOCPasteboardHandler()
{
  return self;
}

uint64_t sub_1003C9E14()
{
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003C9E64()
{
  return sub_1003C7A38(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(char ***)(v0 + 40), *(char ***)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_1003C9E78()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003C9E88(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = _swiftEmptyArrayStorage;
  v8 = self;
  v9 = (void *)swift_allocObject();
  v9[2] = &v15;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1003CA460;
  *(void *)(v10 + 24) = v9;
  aBlock[4] = sub_100162A48;
  aBlock[5] = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  aBlock[3] = &unk_1006A77B8;
  uint64_t v11 = _Block_copy(aBlock);
  id v12 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  [v8 _performAsDataOwner:a1 block:v11];
  _Block_release(v11);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003CA02C(unsigned int (**a1)(char *, uint64_t, uint64_t))
{
  uint64_t v2 = sub_1000CBE70(&qword_100713B78);
  __chkstk_darwin(v2 - 8);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v6 = *(char **)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v9 = result;
    if (result) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(((unint64_t)a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      unint64_t v11 = 0;
      v24 = a1;
      unint64_t v25 = (unint64_t)a1 & 0xC000000000000001;
      NSString v21 = a1 + 4;
      uint64_t v22 = (unint64_t)a1 & 0xFFFFFFFFFFFFFF8;
      a1 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
      id v12 = (void (**)(char *, char *, uint64_t))(v6 + 32);
      v13 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v23 = v9;
      do
      {
        if (v25)
        {
          uint64_t v14 = (unsigned int (*)(char *, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v15 = __OFADD__(v11, 1);
          unint64_t v16 = v11 + 1;
          if (v15) {
            goto LABEL_19;
          }
        }
        else
        {
          if (v11 >= *(void *)(v22 + 16))
          {
            __break(1u);
            return result;
          }
          uint64_t v14 = v21[v11];
          BOOL v15 = __OFADD__(v11, 1);
          unint64_t v16 = v11 + 1;
          if (v15)
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        unint64_t v26 = v16;
        unint64_t v27 = v14;
        uint64_t v6 = (char *)[v14 registeredTypeIdentifiers];
        uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v28 = v17;
        uint64_t v18 = *(void *)(v17 + 16);
        if (v18)
        {
          id v19 = (id *)(v28 + 40);
          do
          {
            uint64_t v6 = (char *)*v19;
            swift_bridgeObjectRetain();
            DOCDragPasteboardType.init(_:)();
            if ((*a1)(v4, 1, v5) == 1)
            {
              sub_1000CBBA4((uint64_t)v4, &qword_100713B78);
            }
            else
            {
              (*v12)(v8, v4, v5);
              char v20 = DOCDragPasteboardType.isFPItemFileOrLocation.getter();
              (*v13)(v8, v5);
              if (v20)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                return 1;
              }
            }
            v19 += 2;
            --v18;
          }
          while (v18);
        }

        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v26;
      }
      while (v26 != v23);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1003CA324()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003CA384(uint64_t a1, uint64_t a2)
{
  return sub_1003C8A9C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(objc_class **)(v2 + 56), *(void **)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_1003CA3C0()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003CA410(unint64_t a1)
{
  return sub_1003C8040(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1003CA420()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003CA460()
{
  return sub_1003C3944(*(uint64_t **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003CA46C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003CA47C(uint64_t a1)
{
  sub_1003C3AAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1003CA484()
{
  return sub_1003CB8B4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1003CA49C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1003CA4CC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003CA514(uint64_t a1)
{
  return sub_1003C85D0(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003CA520()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003CA570()
{
  sub_1003C88E0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t, void))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1003CA580()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1003CA68C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_1003C933C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), v5, *v6, v6[1]);
}

void sub_1003CA738(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, NSObject *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v43 = a2;
  dispatch_group_t v44 = a5;
  uint64_t v14 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002827DC(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    unint64_t v26 = (void *)swift_allocObject();
    v26[2] = a3;
    v26[3] = a4;
    v26[4] = a6;
    v26[5] = a7;
    v26[6] = a8;
    id v27 = a4;
    id v28 = a6;
    swift_retain();
    id v29 = a8;
    uint64_t v30 = a3;
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return;
  }
  dispatch_group_t v44 = a3;
  sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
  NSString v21 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10059B760;
  *(void *)(v22 + 56) = &type metadata for String;
  unint64_t v23 = sub_100073F48();
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 32) = 0xD000000000000060;
  *(void *)(v22 + 40) = 0x80000001005F0460;
  uint64_t v24 = v43;
  if (v43)
  {
    uint64_t v25 = _convertErrorToNSError(_:)();
    v47 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    uint64_t v48 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)&long long aBlock = v25;
    sub_1001146DC(&aBlock, v22 + 72);
  }
  else
  {
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 72) = 0xD000000000000013;
    *(void *)(v22 + 80) = 0x80000001005DD4C0;
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  dispatch_group_leave(v44);
  if (v24)
  {
    swift_errorRetain();
    uint64_t v31 = (void *)_convertErrorToNSError(_:)();
    id v32 = [v31 domain];

    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_12;
      }
    }
    v38 = (void *)_convertErrorToNSError(_:)();
    id v39 = [v38 code];

    if (v39 == (id)-1000)
    {
LABEL_14:
      swift_errorRelease();
      return;
    }
LABEL_12:
    if (a4)
    {
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v24;
      *(void *)(v40 + 24) = a4;
      uint64_t v48 = (uint64_t)sub_1003CB710;
      uint64_t v49 = v40;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v46 = sub_1000666D8;
      v47 = &unk_1006A7CE0;
      v41 = _Block_copy(&aBlock);
      id v42 = a4;
      swift_errorRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v41);
      swift_errorRelease();

      return;
    }
    goto LABEL_14;
  }
}

void sub_1003CAC08(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, NSObject *a5, void *a6, uint64_t a7, void *a8)
{
  uint64_t v43 = a2;
  dispatch_group_t v44 = a5;
  uint64_t v14 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002827DC(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    unint64_t v26 = (void *)swift_allocObject();
    v26[2] = a3;
    v26[3] = a4;
    v26[4] = a6;
    v26[5] = a7;
    v26[6] = a8;
    id v27 = a4;
    id v28 = a6;
    swift_retain();
    id v29 = a8;
    uint64_t v30 = a3;
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return;
  }
  dispatch_group_t v44 = a3;
  sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
  NSString v21 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10059B760;
  *(void *)(v22 + 56) = &type metadata for String;
  unint64_t v23 = sub_100073F48();
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 32) = 0xD000000000000060;
  *(void *)(v22 + 40) = 0x80000001005F0460;
  uint64_t v24 = v43;
  if (v43)
  {
    uint64_t v25 = _convertErrorToNSError(_:)();
    v47 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    uint64_t v48 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)&long long aBlock = v25;
    sub_1001146DC(&aBlock, v22 + 72);
  }
  else
  {
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 72) = 0xD000000000000013;
    *(void *)(v22 + 80) = 0x80000001005DD4C0;
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  dispatch_group_leave(v44);
  if (v24)
  {
    swift_errorRetain();
    uint64_t v31 = (void *)_convertErrorToNSError(_:)();
    id v32 = [v31 domain];

    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;

    if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v37 & 1) == 0) {
        goto LABEL_12;
      }
    }
    v38 = (void *)_convertErrorToNSError(_:)();
    id v39 = [v38 code];

    if (v39 == (id)-1000)
    {
LABEL_14:
      swift_errorRelease();
      return;
    }
LABEL_12:
    if (a4)
    {
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v24;
      *(void *)(v40 + 24) = a4;
      uint64_t v48 = (uint64_t)sub_1003CB710;
      uint64_t v49 = v40;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      v46 = sub_1000666D8;
      v47 = &unk_1006A7FB0;
      v41 = _Block_copy(&aBlock);
      id v42 = a4;
      swift_errorRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v41);
      swift_errorRelease();

      return;
    }
    goto LABEL_14;
  }
}

id sub_1003CB0D8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_bridgeObjectRetain();
  dispatch_semaphore_t v6 = dispatch_semaphore_create(0);
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    v8 = result;
    v28._object = (void *)0x80000001005F0210;
    v9._object = (void *)0x80000001005F01D0;
    v9._countAndFlagsBits = 0x1000000000000032;
    v10._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10._object = (void *)0xEB00000000656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v28._countAndFlagsBits = 0xD000000000000020;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v28);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1005A0030;
    *(void *)(v12 + 56) = &type metadata for String;
    *(void *)(v12 + 64) = sub_100073F48();
    *(void *)(v12 + 32) = a2;
    *(void *)(v12 + 40) = a3;
    swift_bridgeObjectRetain();
    uint64_t v13 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      unint64_t v16 = result;
      v29._countAndFlagsBits = 0xD000000000000022;
      v17._countAndFlagsBits = 0xD000000000000026;
      v29._object = (void *)0x80000001005F0270;
      v17._object = (void *)0x80000001005F0240;
      v18._countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      Swift::String v20 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v29);

      NSString v21 = (Swift::String *)swift_allocObject();
      v21[1]._countAndFlagsBits = v13;
      v21[1]._object = v15;
      v21[2] = v20;
      v21[3]._countAndFlagsBits = v5;
      v21[3]._object = a2;
      v21[4]._countAndFlagsBits = a3;
      v21[4]._object = v6;
      v21[5]._countAndFlagsBits = (uint64_t)a1;
      aBlock[4] = sub_1003CB474;
      aBlock[5] = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006A7998;
      uint64_t v22 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v23 = v6;
      id v24 = a1;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v22);
      OS_dispatch_semaphore.wait()();

      swift_beginAccess();
      uint64_t v25 = *(void *)(v5 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      return (id)v25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003CB3DC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CB414()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_1003CB474()
{
  sub_1003C7378(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_1003CB4AC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

Swift::Int sub_1003CB4F4()
{
  return sub_1003C774C();
}

uint64_t sub_1003CB500()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CB538()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1003CB65C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = (void *)v0[2];
  unint64_t v6 = (void *)v0[3];
  uint64_t v7 = (void *)v0[4];
  v8 = *(void (**)(id, uint64_t))((char *)v0 + v3);
  uint64_t v9 = *(void *)((char *)v0 + v3 + 8);
  uint64_t v10 = *(void *)((char *)v0 + v4);
  uint64_t v11 = *(void *)((char *)v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1003C991C(v5, v6, v7, (uint64_t)v0 + v2, v8, v9, v10, v11);
}

uint64_t sub_1003CB714()
{
  return sub_1003CB8B4((void (*)(void))&_swift_release);
}

uint64_t sub_1003CB72C()
{
  return sub_1003C6B04(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t (*)(uint64_t))sub_1004F28E8);
}

uint64_t sub_1003CB764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003CB9B4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_1003CA738);
}

void sub_1003CB780(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1003C5768(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48), (uint64_t)&unk_1006A7C78, (uint64_t)sub_1003CB800, (uint64_t)&unk_1006A7C90, (uint64_t)&unk_1006A7C28, (uint64_t)sub_1003CB710, &unk_1006A7C40);
}

void sub_1003CB800()
{
}

uint64_t sub_1003CB820(uint64_t a1, uint64_t a2)
{
  return sub_1003CBAE4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1003C6110);
}

void sub_1003CB840(uint64_t (*a1)(BOOL, uint64_t, uint64_t, uint64_t))
{
  sub_1003C68A8(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), a1);
}

uint64_t sub_1003CB864()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CB89C()
{
  return sub_1003CB8B4((void (*)(void))&_swift_release);
}

uint64_t sub_1003CB8B4(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1003CB904()
{
  return sub_1003C6B04(*(void (**)(uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), (uint64_t (*)(uint64_t))sub_1004F2E6C);
}

uint64_t sub_1003CB93C()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003CB99C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003CB9B4(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_1003CAC08);
}

uint64_t sub_1003CB9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a3, v4[2], v4[3], v4[4], v4[5], v4[6], v4[7]);
}

void sub_1003CB9D4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1003C5768(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void **)(v3 + 48), (uint64_t)&unk_1006A7F48, (uint64_t)sub_1003CBA54, (uint64_t)&unk_1006A7F60, (uint64_t)&unk_1006A7EF8, (uint64_t)sub_1003CB710, &unk_1006A7F10);
}

void sub_1003CBA54()
{
}

uint64_t sub_1003CBA74()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003CBACC(uint64_t a1, uint64_t a2)
{
  return sub_1003CBAE4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void))sub_1003C64DC);
}

uint64_t sub_1003CBAE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6]);
}

uint64_t sub_1003CBB00()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003CBB40()
{
  id v0 = (id)_convertErrorToNSError(_:)();
  DOCPresentAlertForError();
}

uint64_t sub_1003CBB90()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

id sub_1003CBCC0(uint64_t a1, uint64_t a2, char a3)
{
  id v6 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
  uint64_t v7 = v6;
  if (!a3)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      id v24 = result;
      v40._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
      v40._object = (void *)0x80000001005F0560;
      v25._uint64_t countAndFlagsBits = 0x4025207265646E55;
      v25._object = (void *)0xE800000000000000;
      v26._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v26._object = (void *)0xEB00000000656C62;
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v40);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1005A0030;
      id v29 = [v7 stringFromByteCount:a1];
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = sub_100073F48();
      *(void *)(v28 + 32) = v30;
      *(void *)(v28 + 40) = v32;
      uint64_t v33 = static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)v33;
    }
    goto LABEL_10;
  }
  if (a3 == 1)
  {
    id v8 = [v6 stringFromByteCount:a1];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [v7 stringFromByteCount:a2];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v17 = result;
      v39._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
      v39._object = (void *)0x80000001005F05A0;
      v18._uint64_t countAndFlagsBits = 0x204025206D6F7246;
      v18._object = (void *)0xED00004025206F74;
      v19._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v19._object = (void *)0xEB00000000656C62;
      v20._uint64_t countAndFlagsBits = 0;
      v20._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v39);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_10059B760;
      *(void *)(v21 + 56) = &type metadata for String;
      unint64_t v22 = sub_100073F48();
      *(void *)(v21 + 32) = v9;
      *(void *)(v21 + 40) = v11;
      *(void *)(v21 + 96) = &type metadata for String;
      *(void *)(v21 + 104) = v22;
      *(void *)(v21 + 64) = v22;
      *(void *)(v21 + 72) = v13;
      *(void *)(v21 + 80) = v15;
      uint64_t v23 = static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)v23;
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v34 = result;
    v41._object = (void *)0x80000001005E9500;
    v35._uint64_t countAndFlagsBits = 2960685;
    v35._object = (void *)0xE300000000000000;
    v36._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v36._object = (void *)0xEB00000000656C62;
    v37._uint64_t countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v41._uint64_t countAndFlagsBits = 0xD000000000000033;
    uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v41)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1003CC054(uint64_t a1, uint64_t a2, char a3)
{
  if (!a3)
  {
    uint64_t v7 = 0x207265646E55;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    uint64_t v7 = 0x206D6F7246;
    v3._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v3);
    swift_bridgeObjectRelease();
    v4._uint64_t countAndFlagsBits = 544175136;
    v4._object = (void *)0xE400000000000000;
    String.append(_:)(v4);
LABEL_5:
    v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    return v7;
  }
  return 0x6E776F6E6B6E55;
}

Swift::Int sub_1003CC170()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v1);
      Hasher._combine(_:)(v2);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void sub_1003CC214()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (!*(unsigned char *)(v0 + 16))
  {
    Hasher._combine(_:)(0);
    Swift::UInt64 v3 = v1;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    Swift::UInt64 v2 = *(void *)(v0 + 8);
    Hasher._combine(_:)(1uLL);
    Hasher._combine(_:)(v1);
    Swift::UInt64 v3 = v2;
LABEL_5:
    Hasher._combine(_:)(v3);
    return;
  }
  Hasher._combine(_:)(2uLL);
}

Swift::Int sub_1003CC28C()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  if (v3)
  {
    if (v3 == 1)
    {
      Hasher._combine(_:)(1uLL);
      Hasher._combine(_:)(v1);
      Hasher._combine(_:)(v2);
    }
    else
    {
      Hasher._combine(_:)(2uLL);
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

uint64_t sub_1003CC32C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  int v5 = *((unsigned __int8 *)a2 + 16);
  if (*((unsigned char *)a2 + 16)) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = v2 == v3;
  }
  unsigned int v7 = v6;
  BOOL v9 = v2 == v3 && a1[1] == v4;
  if (v5 != 1) {
    BOOL v9 = 0;
  }
  BOOL v11 = v5 == 2 && (v4 | v3) == 0;
  if (*((unsigned char *)a1 + 16) != 1) {
    BOOL v9 = v11;
  }
  if (*((unsigned char *)a1 + 16)) {
    return v9;
  }
  else {
    return v7;
  }
}

ValueMetadata *type metadata accessor for DOCItemSizeGroupCategory()
{
  return &type metadata for DOCItemSizeGroupCategory;
}

unint64_t sub_1003CC394()
{
  unint64_t result = qword_100713B80;
  if (!qword_100713B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100713B80);
  }
  return result;
}

uint64_t sub_1003CC3E8(void *a1, uint64_t (*a2)(void, void))
{
  return a2(*a1, a1[1]);
}

uint64_t sub_1003CC41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v8 = (void *)(v3 + 32);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_100300274(v3 + 32, a1);
  swift_unknownObjectRelease();
  int64_t v10 = *(void *)(*(void *)(v3 + 32) + 16);
  if (v10 < v9)
  {
    __break(1u);
LABEL_9:
    uint64_t v4 = sub_10018FE90(0, v4[2] + 1, 1, v4);
    void *v8 = v4;
    goto LABEL_4;
  }
  sub_10051618C(v9, v10);
  uint64_t result = swift_endAccess();
  if (!a2) {
    return result;
  }
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  swift_beginAccess();
  uint64_t v4 = (void *)*v8;
  swift_unknownObjectRetain();
  sub_1000C0640(a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  void *v8 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_9;
  }
LABEL_4:
  unint64_t v14 = v4[2];
  unint64_t v13 = v4[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v4 = sub_10018FE90((void *)(v13 > 1), v14 + 1, 1, v4);
    void *v8 = v4;
  }
  v4[2] = v14 + 1;
  uint64_t v15 = &v4[3 * v14];
  v15[4] = a1;
  v15[5] = sub_1003CD73C;
  v15[6] = v9;
  return swift_endAccess();
}

uint64_t sub_1003CC5A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t DOCFakeStaticContentProgress.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10008E1D0(v1, a1);
}

uint64_t DOCFakeStaticContentProgress.identifier.setter(uint64_t a1)
{
  return sub_1003CC5C8(a1, v1);
}

uint64_t sub_1003CC5C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t (*DOCFakeStaticContentProgress.identifier.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFakeStaticContentProgress.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 20);
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DOCFakeStaticContentProgress()
{
  uint64_t result = qword_100713CF0;
  if (!qword_100713CF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DOCFakeStaticContentProgress.dateStarted.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 20);
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DOCFakeStaticContentProgress.dateStarted.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

id DOCFakeStaticContentProgress.progress.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 24));

  return v1;
}

void DOCFakeStaticContentProgress.progress.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 24);

  *(void *)(v1 + v3) = a1;
}

uint64_t (*DOCFakeStaticContentProgress.progress.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFakeStaticContentProgress.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 28);

  return sub_1003CC8C8(v3, a1);
}

uint64_t sub_1003CC8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressProvidingOperationIconType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DOCFakeStaticContentProgress.iconType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFakeStaticContentProgress() + 28);

  return sub_1003CC970(a1, v3);
}

uint64_t sub_1003CC970(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressProvidingOperationIconType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DOCFakeStaticContentProgress.iconType.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t sub_1003CCA1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for Date();
  BOOL v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

id sub_1003CCA8C(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1003CCA98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003CC8C8(v2 + *(int *)(a1 + 28), a2);
}

uint64_t type metadata accessor for DOCStaticContentOperationSource()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for DOCFakeStaticContentProgress(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    unint64_t v14 = *(void **)((char *)a2 + v12);
    *(void *)((char *)v4 + v12) = v14;
    uint64_t v15 = (void *)((char *)v4 + v13);
    unint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
    id v18 = v14;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v20 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for DOCFakeStaticContentProgress(uint64_t a1, int *a2)
{
  sub_10009B1B8(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[7];
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = type metadata accessor for UTType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  unint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
  id v17 = v13;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v15[1];
    *unint64_t v14 = *v15;
    v14[1] = v20;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v19 = type metadata accessor for UTType();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for DOCFakeStaticContentProgress(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_1002B25D4(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void **)((char *)a2 + v10);
  uint64_t v12 = *(void **)((char *)a1 + v10);
  *(uint64_t *)((char *)a1 + v10) = (uint64_t)v11;
  id v13 = v11;

  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    sub_1003CD0C0((uint64_t)a1 + v14);
    uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v19 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1003CD0C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCProgressProvidingOperationIconType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t initializeWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (void *)(a1 + v11);
  id v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for UTType();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10009B1B8(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_1003CD0C0(a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for UTType();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003CD3B8);
}

uint64_t sub_1003CD3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DOCFakeStaticContentProgress(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003CD4F8);
}

uint64_t sub_1003CD4F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1003CD624()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003CD704()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003CD73C(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_1003CD76C()
{
  id v0 = [self audiovisualTypes];
  type metadata accessor for AVFileType(0);
  uint64_t v1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_100059E2C(0, v2, 0);
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1) {
        sub_100059E2C(v7 > 1, v8 + 1, 1);
      }
      ++v3;
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[2 * v8];
      v9[4] = v4;
      v9[5] = v6;
    }
    while (v2 != v3);
  }
  uint64_t result = swift_bridgeObjectRelease();
  qword_100713D30 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1003CD8A0(char a1)
{
  uint64_t result = 0x6F69736E656D6944;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727544;
      break;
    case 2:
      uint64_t result = 0x736365646F43;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x726F7461657263;
      break;
    case 5:
      uint64_t result = 0x6867697279706F63;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    case 7:
      uint64_t result = 0x747369747261;
      break;
    case 8:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 9:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 10:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 11:
      uint64_t result = 0x6572617774666F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003CDA04(char a1)
{
  uint64_t result = 0x6F69736E656D6944;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E6F697461727544;
      break;
    case 2:
      uint64_t result = 0x736365646F43;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x726F7461657263;
      break;
    case 5:
      uint64_t result = 0x6867697279706F63;
      break;
    case 6:
      uint64_t result = 1701869940;
      break;
    case 7:
      uint64_t result = 0x747369747261;
      break;
    case 8:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 9:
      uint64_t result = 0x656475746974616CLL;
      break;
    case 10:
      uint64_t result = 0x64757469676E6F6CLL;
      break;
    case 11:
      uint64_t result = 0x6572617774666F73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003CDB68(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1003CDA04(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1003CDA04(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1003CDBF4()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1003CDA04(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1003CDC58()
{
  sub_1003CDA04(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003CDCAC()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_1003CDA04(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_1003CDD0C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003D4874(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003CDD3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003CDA04(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1003CDDD8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    if (v1 == 1)
    {
      return sub_1003CDEE8();
    }
    else
    {
      _StringGuts.grow(_:)(17);
      v3._uint64_t countAndFlagsBits = 0x656C646E61686E55;
      v3._object = (void *)0xEF20657361632064;
      String.append(_:)(v3);
      type metadata accessor for DOCMetadataLevelOfDetail(0);
      _print_unlocked<A, B>(_:_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
    }
  }
  else
  {
    return sub_1003CDFA8();
  }
  return result;
}

uint64_t sub_1003CDEE8()
{
  if (*(void *)(v0 + 32)) {
    uint64_t v1 = *(void *)(v0 + 32);
  }
  else {
    uint64_t v1 = sub_1003CE0B8((uint64_t)&off_10068AE90);
  }
  *(void *)(v0 + 32) = v1;
  swift_retain();
  swift_retain();
  swift_release();
  id v2 = *(id *)(v1 + 16);
  sub_1000CBE70((uint64_t *)&unk_100716400);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();

  return v4;
}

uint64_t sub_1003CDFA8()
{
  if (*(void *)(v0 + 40)) {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else {
    uint64_t v1 = sub_1003CE0B8((uint64_t)&off_10068AEC0);
  }
  *(void *)(v0 + 40) = v1;
  swift_retain();
  swift_retain();
  swift_release();
  id v2 = *(id *)(v1 + 16);
  sub_1000CBE70((uint64_t *)&unk_100716400);
  OS_dispatch_queue.sync<A>(execute:)();
  swift_release();

  return v4;
}

uint64_t sub_1003CE0B8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MetadataValueCache();
  swift_allocObject();
  uint64_t v7 = sub_1003D3B88();
  char v8 = dispatch_group_create();
  dispatch_group_enter(v8);
  uint64_t v9 = *(void *)(v2 + 16);
  static TaskPriority.userInitiated.getter();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = a1;
  v11[5] = v9;
  v11[6] = v7;
  v11[7] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v12 = v8;
  sub_1003D3758((uint64_t)v6, (uint64_t)&unk_100713F88, (uint64_t)v11);
  swift_release();
  sub_1000CBBA4((uint64_t)v6, &qword_100707AC0);
  OS_dispatch_group.wait()();

  return v7;
}

uint64_t sub_1003CE23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  return _swift_task_switch(sub_1003CE260, 0, 0);
}

uint64_t sub_1003CE260()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 16);
  *(void *)(v2 + 32) = v1;
  Swift::String v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *Swift::String v3 = v0;
  v3[1] = sub_1003CE34C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_1003CE34C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003CE464, 0, 0);
}

uint64_t sub_1003CE464()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 40));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CE4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  sub_1000CBE70(&qword_100707AC0);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return _swift_task_switch(sub_1003CE56C, 0, 0);
}

uint64_t sub_1003CE56C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v22 = (void *)(v0 + 16);
    uint64_t v4 = (char *)(v2 + 32);
    uint64_t v25 = type metadata accessor for TaskPriority();
    uint64_t v5 = *(void *)(v25 - 8);
    id v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v23 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v26 = v3;
      uint64_t v8 = *(void *)(v1 + 104);
      uint64_t v7 = *(void *)(v1 + 112);
      uint64_t v10 = *(void *)(v1 + 88);
      uint64_t v9 = *(void *)(v1 + 96);
      char v11 = *v4;
      v24(v7, 1, 1, v25);
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = 0;
      *(unsigned char *)(v12 + 32) = v11;
      *(void *)(v12 + 40) = v10;
      *(void *)(v12 + 48) = v9;
      sub_1000CBC00(v7, v8, &qword_100707AC0);
      LODWORD(v8) = (*v23)(v8, 1, v25);
      swift_retain();
      swift_retain();
      uint64_t v13 = *(void *)(v1 + 104);
      if (v8 == 1)
      {
        sub_1000CBBA4(*(void *)(v1 + 104), &qword_100707AC0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v21)(v13, v25);
      }
      if (*(void *)(v12 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v16 = v15;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      ++v4;
      uint64_t v17 = **(void **)(v1 + 72);
      id v18 = (void *)(v16 | v14);
      if (v16 | v14)
      {
        id v18 = v22;
        *uint64_t v22 = 0;
        v22[1] = 0;
        *(void *)(v1 + 32) = v14;
        *(void *)(v1 + 40) = v16;
      }
      uint64_t v6 = *(void *)(v1 + 112);
      *(void *)(v1 + 48) = 1;
      *(void *)(v1 + 56) = v18;
      *(void *)(v1 + 64) = v17;
      swift_task_create();
      swift_release();
      sub_1000CBBA4(v6, &qword_100707AC0);
      uint64_t v3 = v26 - 1;
    }
    while (v26 != 1);
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v1 + 8);
  return v19();
}

uint64_t sub_1003CE844(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 504) = a5;
  *(void *)(v6 + 512) = a6;
  *(unsigned char *)(v6 + 712) = a4;
  uint64_t v7 = type metadata accessor for Logger();
  *(void *)(v6 + 520) = v7;
  *(void *)(v6 + 528) = *(void *)(v7 - 8);
  *(void *)(v6 + 536) = swift_task_alloc();
  return _swift_task_switch(sub_1003CE908, 0, 0);
}

uint64_t sub_1003CE908()
{
  switch(*(unsigned char *)(v0 + 712))
  {
    case 1:
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 560) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1003CF0B0;
      v5[9] = *(void *)(v0 + 504);
      uint64_t v4 = sub_1003D28FC;
      goto LABEL_18;
    case 2:
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 576) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_1003CF39C;
      v6[7] = *(void *)(v0 + 504);
      uint64_t v4 = sub_1003D2C78;
      goto LABEL_18;
    case 3:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierTitle;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003CF688;
      goto LABEL_17;
    case 4:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierCreator;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 608) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003CFB60;
      goto LABEL_17;
    case 5:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierCopyrights;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 624) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003D0038;
      goto LABEL_17;
    case 6:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierType;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 640) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003D0510;
      goto LABEL_17;
    case 7:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierArtist;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 656) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003D09E8;
      goto LABEL_17;
    case 8:
      AVMetadataIdentifier v7 = AVMetadataCommonIdentifierAlbumName;
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 672) = v8;
      void *v8 = v0;
      uint64_t v9 = sub_1003D0EC0;
LABEL_17:
      v8[1] = v9;
      uint64_t v12 = *(void *)(v0 + 504);
      v8[5] = v7;
      v8[6] = v12;
      uint64_t v4 = sub_1003D3E98;
      goto LABEL_18;
    case 9:
    case 0xA:
      swift_task_dealloc();
      uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
      return v1();
    case 0xB:
      uint64_t v10 = *(void **)(*(void *)(v0 + 504) + 16);
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 56) = v0 + 488;
      *(void *)(v0 + 24) = sub_1003D1398;
      uint64_t v11 = swift_continuation_init();
      *(void *)(v0 + 128) = _NSConcreteStackBlock;
      *(void *)(v0 + 136) = 0x40000000;
      *(void *)(v0 + 144) = sub_1003D3D9C;
      *(void *)(v0 + 152) = &unk_1006A8228;
      *(void *)(v0 + 160) = v11;
      [v10 loadTracksWithMediaType:AVMediaTypeVideo completionHandler:v0 + 128];
      return _swift_continuation_await(v0 + 16);
    default:
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 544) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1003CEDC4;
      v3[18] = *(void *)(v0 + 504);
      uint64_t v4 = sub_1003D229C;
LABEL_18:
      return _swift_task_switch(v4, 0, 0);
  }
}

uint64_t sub_1003CEDC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[21] = v3;
  v4[22] = a1;
  v4[23] = a2;
  v4[24] = v2;
  v4[69] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D1CB8;
  }
  else {
    uint64_t v5 = sub_1003CEEE0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CEEE0()
{
  uint64_t v1 = *(void *)(v0 + 184);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003CF0B0(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[25] = v3;
  v4[26] = a1;
  v4[27] = a2;
  v4[28] = v2;
  v4[71] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D1EA4;
  }
  else {
    uint64_t v5 = sub_1003CF1CC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CF1CC()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003CF39C(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[29] = v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[32] = v2;
  v4[73] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D2090;
  }
  else {
    uint64_t v5 = sub_1003CF4B8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CF4B8()
{
  uint64_t v1 = *(void *)(v0 + 248);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003CF688(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[33] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v4[36] = v2;
  v4[75] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003CF974;
  }
  else {
    uint64_t v5 = sub_1003CF7A4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CF7A4()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003CF974()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003CFB60(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[37] = v3;
  v4[38] = a1;
  v4[39] = a2;
  v4[40] = v2;
  v4[77] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003CFE4C;
  }
  else {
    uint64_t v5 = sub_1003CFC7C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CFC7C()
{
  uint64_t v1 = *(void *)(v0 + 312);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003CFE4C()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D0038(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[41] = v3;
  v4[42] = a1;
  v4[43] = a2;
  v4[44] = v2;
  v4[79] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D0324;
  }
  else {
    uint64_t v5 = sub_1003D0154;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D0154()
{
  uint64_t v1 = *(void *)(v0 + 344);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003D0324()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D0510(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[45] = v3;
  v4[46] = a1;
  v4[47] = a2;
  v4[48] = v2;
  v4[81] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D07FC;
  }
  else {
    uint64_t v5 = sub_1003D062C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D062C()
{
  uint64_t v1 = *(void *)(v0 + 376);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003D07FC()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D09E8(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[49] = v3;
  v4[50] = a1;
  v4[51] = a2;
  v4[52] = v2;
  v4[83] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D0CD4;
  }
  else {
    uint64_t v5 = sub_1003D0B04;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D0B04()
{
  uint64_t v1 = *(void *)(v0 + 408);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003D0CD4()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D0EC0(uint64_t a1, uint64_t a2)
{
  char v4 = (void *)*v3;
  v4[53] = v3;
  v4[54] = a1;
  v4[55] = a2;
  v4[56] = v2;
  v4[85] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D11AC;
  }
  else {
    uint64_t v5 = sub_1003D0FDC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D0FDC()
{
  uint64_t v1 = *(void *)(v0 + 440);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003D11AC()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D1398()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 688) = v1;
  if (v1) {
    os_log_type_t v2 = sub_1003D15EC;
  }
  else {
    os_log_type_t v2 = sub_1003D14A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D14A8()
{
  unint64_t v1 = v0[61];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 < 1)
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[87] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003D17E0;
    uint64_t v4 = v0[63];
    v3[5] = AVMetadataCommonIdentifierSoftware;
    v3[6] = v4;
    return _swift_task_switch(sub_1003D3E98, 0, 0);
  }
}

uint64_t sub_1003D15EC()
{
  uint64_t v13 = v0;
  swift_willThrow();
  static Logger.UI.getter();
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D17E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[57] = v3;
  v4[58] = a1;
  v4[59] = a2;
  v4[60] = v2;
  v4[88] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1003D1ACC;
  }
  else {
    uint64_t v5 = sub_1003D18FC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003D18FC()
{
  uint64_t v1 = *(void *)(v0 + 472);
  if (!v1) {
    goto LABEL_3;
  }
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 512);
  char v4 = *(unsigned char *)(v0 + 712);
  uint64_t v5 = *(void **)(v3 + 16);
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  *(void *)(v6 + 32) = v1;
  *(void *)(v6 + 40) = v3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1003D4E4C;
  *(void *)(v7 + 24) = v6;
  *(void *)(v0 + 112) = sub_1000879B8;
  *(void *)(v0 + 120) = v7;
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 1107296256;
  *(void *)(v0 + 96) = sub_100087990;
  *(void *)(v0 + 104) = &unk_1006A8290;
  uint64_t v8 = _Block_copy((const void *)(v0 + 80));
  swift_bridgeObjectRetain();
  uint64_t v9 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v9, v8);

  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  return result;
}

uint64_t sub_1003D1ACC()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D1CB8()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D1EA4()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D2090()
{
  uint64_t v13 = v0;
  static Logger.UI.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[66];
    uint64_t v10 = v0[65];
    uint64_t v11 = v0[67];
    char v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)char v4 = 136315138;
    v0[62] = sub_10009B0E4(0xD000000000000010, 0x80000001005F07C0, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s caught error while fetching media metadata", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v11, v10);
  }
  else
  {
    uint64_t v5 = v0[67];
    uint64_t v6 = v0[66];
    uint64_t v7 = v0[65];
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  }
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D227C()
{
  *(void *)(v1 + 144) = v0;
  return _swift_task_switch(sub_1003D229C, 0, 0);
}

uint64_t sub_1003D229C()
{
  uint64_t v1 = *(void **)(v0[18] + 16);
  v0[2] = v0;
  v0[7] = v0 + 17;
  v0[3] = sub_1003D23AC;
  uint64_t v2 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1003D3D9C;
  v0[13] = &unk_1006A82B8;
  v0[14] = v2;
  [v1 loadTracksWithMediaType:AVMediaTypeVideo completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003D23AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 152) = v1;
  if (v1) {
    uint64_t v2 = sub_1003D2650;
  }
  else {
    uint64_t v2 = sub_1003D24BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D24BC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2[17];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    a1 = swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
        }
        id v4 = *(id *)(v3 + 32);
      }
      v2[20] = v4;
      swift_bridgeObjectRelease();
      sub_1000CBE70(&qword_100713FD0);
      uint64_t v5 = static AVPartialAsyncProperty<A>.naturalSize.getter();
      v2[21] = v5;
      uint64_t v6 = (void *)swift_task_alloc();
      v2[22] = v6;
      *uint64_t v6 = v2;
      v6[1] = sub_1003D26BC;
      a1 = (uint64_t)(v2 + 15);
      a2 = v5;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
    }
  }
  else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void, void))v2[1];
  return v8(0, 0);
}

uint64_t sub_1003D2650()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D26BC()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003D2870;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003D27D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D27D8()
{
  uint64_t v1 = *(void **)(v0 + 160);
  id v2 = (id)DOCLocalizedMetadataStringForWidthByHeight();
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v6(v3, v5);
}

uint64_t sub_1003D2870()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D28DC()
{
  *(void *)(v1 + 72) = v0;
  return _swift_task_switch(sub_1003D28FC, 0, 0);
}

uint64_t sub_1003D28FC()
{
  v0[10] = *(void *)(v0[9] + 16);
  v0[11] = sub_1000CBE70(&qword_100713FD8);
  uint64_t v1 = static AVPartialAsyncProperty<A>.duration.getter();
  v0[12] = v1;
  id v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *id v2 = v0;
  v2[1] = sub_1003D29D4;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 6, v1);
}

uint64_t sub_1003D29D4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_1003D2BF4;
  }
  else
  {
    swift_release();
    id v2 = sub_1003D2AF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D2AF0()
{
  CMTime.seconds.getter();
  static AVPartialAsyncProperty<A>.duration.getter();
  AVAsynchronousKeyValueLoading.status<A>(of:)();
  swift_release();
  id v2 = *(void **)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  int v4 = *(unsigned __int8 *)(v0 + 40);
  if (v4 == 1) {
    uint64_t v5 = (void *)DOCLocalizedMetadataStringForUnavailablePropertyValue();
  }
  else {
    uint64_t v5 = (void *)DOCLocalizedMetadataStringInMMSSForDuration();
  }
  id v6 = v5;
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  sub_1003D4E6C(v2, v1, v3, v4);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v10(v7, v9);
}

uint64_t sub_1003D2BF4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D2C58()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_1003D2C78, 0, 0);
}

uint64_t sub_1003D2C78()
{
  sub_1000CBE70(&qword_100713FE0);
  uint64_t v1 = static AVPartialAsyncProperty<A>.tracks.getter();
  *(void *)(v0 + 64) = v1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *id v2 = v0;
  v2[1] = sub_1003D2D48;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_1003D2D48()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    id v2 = sub_1003D36DC;
  }
  else {
    id v2 = sub_1003D2E78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D2E78()
{
  unint64_t v1 = v0[4];
  v0[11] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v0[12] = v8;
    if (v8)
    {
LABEL_3:
      uint64_t v3 = sub_1000CBE70(&qword_100713FE8);
      v0[13] = v3;
      v0[14] = kCMFormatDescriptionExtension_FormatName;
      v0[15] = _swiftEmptyArrayStorage;
      uint64_t v4 = v0[11];
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(v3, v4);
        }
        id v5 = *(id *)(v4 + 32);
      }
      v0[16] = v5;
      v0[17] = 1;
      uint64_t v6 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
      v0[18] = v6;
      uint64_t v7 = (void *)swift_task_alloc();
      v0[19] = v7;
      *uint64_t v7 = v0;
      v7[1] = sub_1003D3150;
      uint64_t v3 = (uint64_t)(v0 + 5);
      uint64_t v4 = v6;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(v3, v4);
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[12] = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = _swiftEmptyArrayStorage[2];
  if (v9)
  {
    uint64_t v11 = _swiftEmptyArrayStorage[4];
    uint64_t v10 = _swiftEmptyArrayStorage[5];
    uint64_t v12 = v9 - 1;
    if (v9 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v13 = (void **)&_swiftEmptyArrayStorage[7];
      do
      {
        uint64_t v14 = (uint64_t)*(v13 - 1);
        uint64_t v15 = *v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v16._uint64_t countAndFlagsBits = 8236;
        v16._object = (void *)0xE200000000000000;
        String.append(_:)(v16);
        swift_bridgeObjectRetain();
        v17._uint64_t countAndFlagsBits = v14;
        v17._object = v15;
        String.append(_:)(v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = 0;
    uint64_t v10 = 0;
  }
  id v18 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v18(v11, v10);
}

uint64_t sub_1003D3150()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1003D36F4;
  }
  else
  {
    uint64_t v2 = sub_1003D32A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D32A0(id a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(v2 + 40);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    a1 = (id)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v42 = (void *)(v2 + 40);
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 48);
    unint64_t v7 = v3 & 0xC000000000000001;
    v46 = *(void **)(v2 + 120);
    uint64_t v8 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v9 = &type metadata for String;
    unint64_t v44 = v3;
    uint64_t v43 = (void *)(v2 + 48);
    do
    {
      if (v7) {
        uint64_t v10 = (const opaqueCMFormatDescription *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v10 = (const opaqueCMFormatDescription *)*(id *)(v3 + 8 * v5 + 32);
      }
      uint64_t v11 = v10;
      CFPropertyListRef v12 = (id)CMFormatDescriptionGetExtension(v10, *(CFStringRef *)(v2 + 112));
      if (v12 && (*uint64_t v6 = v12, (swift_dynamicCast() & 1) != 0))
      {
        unint64_t v13 = v7;
        uint64_t v14 = v4;
        uint64_t v15 = v9;
        Swift::String v16 = v8;
        uint64_t v18 = *(void *)(v2 + 16);
        uint64_t v17 = *(void *)(v2 + 24);
        uint64_t v19 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = sub_1000825D0(0, v46[2] + 1, 1, v46);
        }
        unint64_t v21 = v19[2];
        unint64_t v20 = v19[3];
        v46 = v19;
        if (v21 >= v20 >> 1) {
          v46 = sub_1000825D0((void *)(v20 > 1), v21 + 1, 1, v19);
        }
        v46[2] = v21 + 1;
        uint64_t v22 = &v46[2 * v21];
        v22[4] = v18;
        v22[5] = v17;

        unint64_t v3 = v44;
        uint64_t v2 = v45;
        uint64_t v8 = v16;
        uint64_t v9 = v15;
        uint64_t v4 = v14;
        unint64_t v7 = v13;
        uint64_t v6 = v43;
      }
      else
      {
      }
      ++v5;
    }
    while (v4 != v5);
  }
  else
  {
    v46 = *(void **)(v2 + 120);
  }
  id v24 = *(void **)(v2 + 128);
  uint64_t v23 = *(void *)(v2 + 136);
  uint64_t v25 = *(void *)(v2 + 96);
  swift_bridgeObjectRelease();

  if (v23 != v25)
  {
    unint64_t v30 = *(void *)(v2 + 136);
    *(void *)(v2 + 120) = v46;
    a2 = *(void *)(v2 + 88);
    if ((a2 & 0xC000000000000001) != 0)
    {
      a1 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      id v31 = a1;
      uint64_t v32 = v42;
    }
    else
    {
      uint64_t v32 = v42;
      if (v30 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_42:
        __break(1u);
        return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
      }
      a1 = *(id *)(a2 + 8 * v30 + 32);
      id v31 = a1;
    }
    *(void *)(v2 + 128) = v31;
    *(void *)(v2 + 136) = v30 + 1;
    if (!__OFADD__(v30, 1))
    {
      uint64_t v33 = static AVPartialAsyncProperty<A>.formatDescriptions.getter();
      *(void *)(v2 + 144) = v33;
      uint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v2 + 152) = v34;
      *uint64_t v34 = v2;
      v34[1] = sub_1003D3150;
      a1 = v32;
      a2 = v33;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(a1, a2);
    }
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v46[2];
  if (v26)
  {
    uint64_t v27 = v46[4];
    uint64_t v28 = v46[5];
    uint64_t v29 = v26 - 1;
    if (v26 == 1)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      Swift::String v35 = (void **)(v46 + 7);
      do
      {
        uint64_t v36 = (uint64_t)*(v35 - 1);
        Swift::String v37 = *v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v38._uint64_t countAndFlagsBits = 8236;
        v38._object = (void *)0xE200000000000000;
        String.append(_:)(v38);
        swift_bridgeObjectRetain();
        v39._uint64_t countAndFlagsBits = v36;
        v39._object = v37;
        String.append(_:)(v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 += 2;
        --v29;
      }
      while (v29);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v2 = v45;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  Swift::String v40 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
  return v40(v27, v28);
}

uint64_t sub_1003D36DC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003D36F4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D3758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v8, &qword_100707AC0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, &qword_100707AC0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1003D394C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCMediaMetadataProvider()
{
  return self;
}

uint64_t sub_1003D39B8(char a1, uint64_t a2, void *a3, uint64_t a4)
{
  _StringGuts.grow(_:)(23);
  v8._object = (void *)0x80000001005F07E0;
  v8._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v8);
  _print_unlocked<A, B>(_:_:)();
  v9._uint64_t countAndFlagsBits = 2112800;
  v9._object = (void *)0xE300000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = a2;
  v10._object = a3;
  String.append(_:)(v10);
  NSLog(_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1003CD8A0(a1);
  uint64_t v13 = v12;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *(void *)(a4 + 24);
  *(void *)(a4 + 24) = 0x8000000000000000;
  sub_1003E068C(a2, (uint64_t)a3, v11, v13, isUniquelyReferenced_nonNull_native);
  *(void *)(a4 + 24) = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1003D3B24()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetadataValueCache()
{
  return self;
}

uint64_t sub_1003D3B88()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  static DispatchQoS.unspecified.getter();
  v8[1] = _swiftEmptyArrayStorage;
  sub_1003D4E80();
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_1001AC13C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v1);
  *(void *)(v0 + 16) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 24) = sub_1004944C8((uint64_t)_swiftEmptyArrayStorage);
  return v0;
}

uint64_t sub_1003D3D9C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_10009E6C4(0, &qword_100714008);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1003D3E78(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return _swift_task_switch(sub_1003D3E98, 0, 0);
}

uint64_t sub_1003D3E98()
{
  sub_1000CBE70(&qword_100713FF0);
  uint64_t v1 = static AVPartialAsyncProperty<A>.commonMetadata.getter();
  *(void *)(v0 + 56) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003D3F68;
  return AVAsynchronousKeyValueLoading.load<A>(_:)(v0 + 32, v1);
}

uint64_t sub_1003D3F68()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003D4428;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003D4084;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D4084()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = self;
  sub_10009E6C4(0, &qword_100713FF8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [v2 metadataItemsFromArray:isa filteredByIdentifier:v1];

  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      if ((v5 & 0xC000000000000001) != 0)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return AVAsynchronousKeyValueLoading.load<A>(_:)(v6, v7);
        }
        id v8 = *(id *)(v5 + 32);
      }
      v0[10] = v8;
      swift_bridgeObjectRelease();
      sub_1000CBE70(&qword_100714000);
      uint64_t v9 = static AVPartialAsyncProperty<A>.stringValue.getter();
      v0[11] = v9;
      Swift::String v10 = (void *)swift_task_alloc();
      v0[12] = v10;
      *Swift::String v10 = v0;
      v10[1] = sub_1003D42A4;
      uint64_t v6 = (uint64_t)(v0 + 2);
      uint64_t v7 = v9;
      return AVAsynchronousKeyValueLoading.load<A>(_:)(v6, v7);
    }
  }
  else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (uint64_t (*)(void, void))v0[1];
  return v12(0, 0);
}

uint64_t sub_1003D42A4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003D448C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003D43C0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003D43C0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v1, v2);
}

uint64_t sub_1003D4428()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D448C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for DOCAssetMetadataFetcher()
{
  return self;
}

void *sub_1003D451C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a2;
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a3, (uint64_t)v11, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  if (qword_100705170 != -1) {
    swift_once();
  }
  uint64_t v16 = (void *)qword_100713D30;
  swift_bridgeObjectRetain();
  id v17 = [a1 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = UTType.identifier.getter();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v21 = sub_100109128(v18, v20, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  id v22 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v23);
  uint64_t v25 = v24;
  id v26 = [v22 initWithURL:v24 options:0];

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  type metadata accessor for DOCMediaMetadataProvider();
  uint64_t v27 = (void *)swift_allocObject();
  type metadata accessor for DOCAssetMetadataFetcher();
  v27[4] = 0;
  v27[5] = 0;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v26;
  uint64_t v29 = v32;
  v27[2] = v28;
  v27[3] = v29;
  return v27;
}

unint64_t sub_1003D4874(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AD50, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return 12;
  }
  else {
    return v3;
  }
}

void *sub_1003D48C0()
{
  sub_100059E2C(0, 12, 0);
  uint64_t v0 = 0;
  uint64_t result = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v2 = 0xEA0000000000736ELL;
    uint64_t v3 = 0x6F69736E656D6944;
    switch(*((unsigned char *)&off_10068AEE8 + v0 + 32))
    {
      case 1:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x6E6F697461727544;
        break;
      case 2:
        unint64_t v2 = 0xE600000000000000;
        uint64_t v3 = 0x736365646F43;
        break;
      case 3:
        unint64_t v2 = 0xE500000000000000;
        uint64_t v3 = 0x656C746974;
        break;
      case 4:
        unint64_t v2 = 0xE700000000000000;
        uint64_t v3 = 0x726F7461657263;
        break;
      case 5:
        unint64_t v2 = 0xEA00000000007374;
        uint64_t v3 = 0x6867697279706F63;
        break;
      case 6:
        unint64_t v2 = 0xE400000000000000;
        uint64_t v3 = 1701869940;
        break;
      case 7:
        unint64_t v2 = 0xE600000000000000;
        uint64_t v3 = 0x747369747261;
        break;
      case 8:
        uint64_t v3 = 0x6D614E6D75626C61;
        goto LABEL_13;
      case 9:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x656475746974616CLL;
        break;
      case 0xA:
        uint64_t v3 = 0x64757469676E6F6CLL;
LABEL_13:
        unint64_t v2 = 0xE900000000000065;
        break;
      case 0xB:
        unint64_t v2 = 0xE800000000000000;
        uint64_t v3 = 0x6572617774666F73;
        break;
      default:
        break;
    }
    uint64_t v7 = result;
    unint64_t v5 = result[2];
    unint64_t v4 = result[3];
    if (v5 >= v4 >> 1)
    {
      sub_100059E2C(v4 > 1, v5 + 1, 1);
      uint64_t result = v7;
    }
    ++v0;
    result[2] = v5 + 1;
    uint64_t v6 = &result[2 * v5];
    v6[4] = v3;
    v6[5] = v2;
  }
  while (v0 != 12);
  return result;
}

uint64_t sub_1003D4AE4@<X0>(void *a1@<X8>)
{
  return sub_1003D4ED8(a1);
}

uint64_t sub_1003D4AFC()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1003D4B54()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_10000CB70;
  *(_OWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 32) = v4;
  return _swift_task_switch(sub_1003CE260, 0, 0);
}

uint64_t sub_1003D4C00()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003D4C38(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_10000CB70;
  return sub_1003CE4C4(a1, a2, v6, v7, v8);
}

uint64_t sub_1003D4CFC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003D4D44(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  char v8 = *(unsigned char *)(v1 + 32);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_1000D1744;
  return sub_1003CE844(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_1003D4E0C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003D4E4C()
{
  return sub_1003D39B8(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003D4E5C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003D4E6C(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 1) {
}
  }

unint64_t sub_1003D4E80()
{
  unint64_t result = qword_1007054C0;
  if (!qword_1007054C0)
  {
    type metadata accessor for OS_dispatch_queue.Attributes();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007054C0);
  }
  return result;
}

uint64_t sub_1003D4ED8@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t getEnumTagSinglePayload for MetadataItem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MetadataItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003D5084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MetadataItem()
{
  return &type metadata for MetadataItem;
}

unint64_t sub_1003D50C0()
{
  unint64_t result = qword_100714010;
  if (!qword_100714010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714010);
  }
  return result;
}

Swift::String *UIDocumentBrowserActionUserInfoClickedItem.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoClickedItem;
}

id DOCItemCollectionViewController.actionContext(from:)()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
  if (*(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbMenu])
  {
    int v3 = *(char **)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_currentClickyOrbConfiguration];
    if (v3)
    {
      if (*(void *)&v3[OBJC_IVAR____TtC5Files31DOCNodeContextMenuConfiguration_presentingNode])
      {
        swift_getObjectType();
        unsigned int v4 = v3;
        swift_unknownObjectRetain();
        uint64_t v5 = (void *)DOCNode.fpfs_syncFetchFPItem()();
        swift_unknownObjectRelease();
        if (v5)
        {
          uint64_t v18 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          *(void *)&long long v17 = v5;
          sub_1000A54B0(&v17, v16);
          id v6 = v5;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_1003E0814(v16, 0xD000000000000039, 0x80000001005D7870, isUniquelyReferenced_nonNull_native);

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
    }
  }
  id v8 = [v1 effectiveAppearance];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v11 = (objc_class *)type metadata accessor for DOCActionContext();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v8;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v9;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v1;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = v1;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v2;
  v19.receiver = v12;
  v19.super_class = v11;
  uint64_t v13 = v1;
  id v14 = v9;
  return [super init];
}

uint64_t type metadata accessor for DOCActionContext()
{
  return self;
}

Swift::String *UIDocumentBrowserActionUserInfoLocationKey.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoLocationKey;
}

Swift::String *UIDocumentBrowserActionUserInfoTagNameKey.unsafeMutableAddressor()
{
  return &UIDocumentBrowserActionUserInfoTagNameKey;
}

id sub_1003D5364()
{
  id v1 = [v0 uiActionDescriptor];
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  id v3 = [v1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = [v2 uiActionProviderIdentifier];
  id v5 = [v2 fileProviderIdentifier];
  id v6 = [v2 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v7 = [v2 predicate];
  id v8 = [v2 displayInline];
  id v9 = objc_allocWithZone((Class)FPUIAction);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v9 initWithIdentifier:v10 uiActionProviderIdentifier:v4 fileProviderIdentifier:v5 displayName:v11 predicate:v7 displayInline:v8];

  return v12;
}

void sub_1003D550C(unint64_t a1)
{
  unint64_t v2 = v1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v16) {
      return;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  id v4 = [v2 uiActionDescriptor];
  if (v4)
  {

    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      id v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_7:
      id v6 = [v5 providerDomainID];
      swift_unknownObjectRelease();
      id v7 = [v2 uiActionProviderDomain];
      if (!v7) {
        goto LABEL_15;
      }
      id v8 = v7;
      id v9 = [v7 identifier];

      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;
      if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
LABEL_15:

          return;
        }
      }
      id v15 = v6;
      sub_1003E648C(a1);

      goto LABEL_15;
    }
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(void **)(a1 + 32);
      swift_unknownObjectRetain();
      goto LABEL_7;
    }
    __break(1u);
  }
}

uint64_t DOCActionContext.userInfo.getter()
{
  return swift_bridgeObjectRetain();
}

void DOCActionContext.init()()
{
}

id DOCActionContext.__deallocating_deinit()
{
  return sub_1003D947C(type metadata accessor for DOCActionContext);
}

uint64_t sub_1003D59B0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003D5A2C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_100169750((uint64_t)_swiftEmptyArrayStorage);
    return v1;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v7 = v6;
      ++v5;
      uint64_t v8 = sub_1003D5A2C();

      sub_100169750(v8);
    }
    while (v3 != v5);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003D5B7C()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xB0))();
  unint64_t v2 = *(void *)((char *)v0 + OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers);
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    sub_100169238((unint64_t)_swiftEmptyArrayStorage);
    return v1;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v3 >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v7 = v6;
      ++v5;
      unint64_t v8 = sub_1003D5B7C();

      sub_100169238(v8);
    }
    while (v3 != v5);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t DOCActionManager.init()()
{
  uint64_t ObjectType = swift_getObjectType();
  id v1 = [self defaultManager];
  id v2 = [self defaultPermission];
  uint64_t v3 = (*(uint64_t (**)(id, id))(ObjectType + 248))(v1, v2);
  swift_deallocPartialClassInstance();
  return v3;
}

id DOCActionManager.init(itemManager:managedPermission:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_forbiddenActionIdentifiers] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_associatedActionManagers] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_actions] = _swiftEmptyArrayStorage;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_actionManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_fpItemManager] = a1;
  *(void *)&v2[OBJC_IVAR____TtC5Files16DOCActionManager_managedPermission] = a2;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCActionManager();
  return [super init];
}

uint64_t sub_1003D5E40(id a1, void (**a2)(char *, uint64_t), int a3, id *a4)
{
  LODWORD(v5) = a3;
  unint64_t v8 = sub_1003D5B7C();
  uint64_t v9 = v8;
  if (v8 >> 62) {
    goto LABEL_35;
  }
  for (uint64_t i = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    id v22 = a4;
    unint64_t v11 = 0;
    unint64_t v12 = v9 & 0xC000000000000001;
    uint64_t v13 = v9 & 0xFFFFFFFFFFFFFF8;
    a4 = (id *)(v9 + 32);
    uint64_t v27 = v9;
    id v26 = (id *)(v9 + 32);
    int v25 = v5;
    uint64_t v23 = v9 & 0xFFFFFFFFFFFFFF8;
    id v24 = a1;
    while (1)
    {
      if (v12)
      {
        id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v11 >= *(void *)(v13 + 16)) {
          goto LABEL_34;
        }
        id v14 = a4[v11];
      }
      id v15 = v14;
      if (__OFADD__(v11++, 1)) {
        break;
      }
      if (([v14 availability] & 2) != 0
        && [v15 navigationSide] == a1
        && (![v15 requiresVersioning] || (v5 & 1) != 0))
      {
        if ([v15 requiresFullyFormedItems])
        {
          if ((unint64_t)a2 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
            if (v9)
            {
LABEL_18:
              uint64_t v5 = 4;
              while (1)
              {
                a4 = (id *)(v5 - 4);
                if (((unint64_t)a2 & 0xC000000000000001) != 0)
                {
                  long long v17 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
                  a1 = (id)(v5 - 3);
                  if (__OFADD__(a4, 1)) {
                    goto LABEL_33;
                  }
                }
                else
                {
                  long long v17 = a2[v5];
                  swift_unknownObjectRetain();
                  a1 = (id)(v5 - 3);
                  if (__OFADD__(a4, 1)) {
                    goto LABEL_33;
                  }
                }
                unsigned int v18 = [v17 isFullyFormed];
                swift_unknownObjectRelease();
                if (!v18) {
                  break;
                }
                ++v5;
                if (a1 == (id)v9) {
                  goto LABEL_26;
                }
              }

              swift_bridgeObjectRelease();
              LODWORD(v5) = v25;
              uint64_t v13 = v23;
              a1 = v24;
              a4 = v26;
              uint64_t v9 = v27;
              goto LABEL_5;
            }
          }
          else
          {
            uint64_t v9 = *(void *)(((unint64_t)a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v9) {
              goto LABEL_18;
            }
          }
LABEL_26:
          swift_bridgeObjectRelease();
          LODWORD(v5) = v25;
          uint64_t v13 = v23;
          a1 = v24;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        a4 = v26;
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v9 = v27;
      }
      else
      {
      }
LABEL_5:
      if (v11 == i)
      {
        swift_bridgeObjectRelease();
        a4 = v22;
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    ;
  }
  swift_bridgeObjectRelease();
LABEL_37:
  swift_bridgeObjectRetain();
  objc_super v19 = a4;
  uint64_t v20 = sub_1003E44C4((unint64_t)_swiftEmptyArrayStorage, a2, v19);
  swift_release();
  swift_bridgeObjectRelease();

  return v20;
}

id sub_1003D6128@<X0>(uint64_t *a1@<X0>, void (**a2)(char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5 = v4;
  uint64_t v10 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v10 - 8);
  v56 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for UTType();
  uint64_t v57 = *(void *)(v59 - 8);
  uint64_t v12 = __chkstk_darwin(v59);
  id v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  v58 = (char *)&v50 - v16;
  __chkstk_darwin(v15);
  v55 = (char *)&v50 - v17;
  uint64_t v18 = *a1;
  unint64_t v19 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v20 >= 1) {
      goto LABEL_3;
    }
LABEL_5:
    char v22 = 0;
    goto LABEL_27;
  }
  uint64_t v20 = *(void *)(((unint64_t)a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v20 < 1) {
    goto LABEL_5;
  }
LABEL_3:
  unsigned int v21 = [(id)v18 supportsMultipleItems];
  if (v20 != 1 && !v21) {
    goto LABEL_5;
  }
  v60._rawValue = a3;
  id v23 = [(id)v18 identifier];
  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v26 = v25;

  uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v54 = v19;
  if (v24 == v27 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
LABEL_10:
    id v30 = [v60._rawValue documentContentTypes];
    v60._rawValue = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    goto LABEL_11;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v29) {
    goto LABEL_10;
  }
  id v35 = [(id)v18 supportedContentTypes];
  uint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    v50 = a2;
    uint64_t v51 = v18;
    uint64_t v52 = a4;
    unint64_t v53 = v5;
    Swift::String v38 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
    Swift::String v39 = (void (**)(char *, uint64_t, uint64_t))(v57 + 32);
    swift_bridgeObjectRetain();
    uint64_t v40 = v36 + 40;
    v60._rawValue = _swiftEmptyArrayStorage;
    uint64_t v41 = v59;
    uint64_t v42 = (uint64_t)v56;
    do
    {
      swift_bridgeObjectRetain();
      UTType.init(_:)();
      if ((*v38)(v42, 1, v41) == 1)
      {
        sub_1000CBBA4(v42, &qword_100708110);
      }
      else
      {
        uint64_t v43 = v42;
        unint64_t v44 = *v39;
        uint64_t v45 = v55;
        (*v39)(v55, v43, v41);
        v44(v58, (uint64_t)v45, v41);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v60._rawValue = (void *)sub_1000B6388(0, *((void *)v60._rawValue + 2) + 1, 1, (unint64_t)v60._rawValue);
        }
        unint64_t v47 = *((void *)v60._rawValue + 2);
        unint64_t v46 = *((void *)v60._rawValue + 3);
        if (v47 >= v46 >> 1) {
          v60._rawValue = (void *)sub_1000B6388(v46 > 1, v47 + 1, 1, (unint64_t)v60._rawValue);
        }
        rawValue = v60._rawValue;
        *((void *)v60._rawValue + 2) = v47 + 1;
        unint64_t v49 = (unint64_t)rawValue
            + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80))
            + *(void *)(v57 + 72) * v47;
        uint64_t v41 = v59;
        v44((char *)v49, (uint64_t)v58, v59);
        uint64_t v42 = (uint64_t)v56;
      }
      v40 += 16;
      --v37;
    }
    while (v37);
    swift_bridgeObjectRelease_n();
    a4 = v52;
    unint64_t v5 = v53;
    a2 = v50;
    uint64_t v18 = v51;
  }
  else
  {
    swift_bridgeObjectRelease();
    v60._rawValue = _swiftEmptyArrayStorage;
  }
LABEL_11:
  if (v54)
  {
    swift_bridgeObjectRetain();
    unint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (v19) {
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v19 = *(void *)(((unint64_t)a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19)
    {
LABEL_13:
      uint64_t v51 = v18;
      uint64_t v52 = a4;
      unint64_t v53 = v5;
      uint64_t v31 = a2;
      unint64_t v5 = (unint64_t)a2 & 0xC000000000000001;
      a2 = (void (**)(char *, uint64_t))(v57 + 8);
      uint64_t v18 = 4;
      while (1)
      {
        a3 = (void *)(v18 - 4);
        if (v5)
        {
          uint64_t v32 = (void (*)(char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
          a4 = v18 - 3;
          if (__OFADD__(a3, 1)) {
            goto LABEL_40;
          }
        }
        else
        {
          uint64_t v32 = v31[v18];
          swift_unknownObjectRetain();
          a4 = v18 - 3;
          if (__OFADD__(a3, 1))
          {
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
        }
        id v33 = [v32 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v33) = UTType.doc_conformsToAny(inContentTypes:)(v60);
        swift_unknownObjectRelease();
        (*a2)(v14, v59);
        if ((v33 & 1) == 0)
        {
          char v22 = 0;
          goto LABEL_25;
        }
        ++v18;
        if (a4 == v19)
        {
          char v22 = 1;
LABEL_25:
          a4 = v52;
          uint64_t v18 = v51;
          goto LABEL_26;
        }
      }
    }
  }
  char v22 = 1;
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_27:
  *(void *)a4 = v18;
  *(unsigned char *)(a4 + 8) = v22;
  return (id)v18;
}

uint64_t sub_1003D66D4(unint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5)
{
  objc_super v6 = v5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  sub_1000CBE70((uint64_t *)&unk_1007141C0);
  inited = (void *)swift_initStackObject();
  inited[3] = v12;
  inited[4] = 1;
  inited[2] = sub_1003ED160;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1003D5B7C();
  uint64_t v15 = sub_1003D764C(a1, a3, a4);
  sub_100169238((unint64_t)v15);
  swift_unknownObjectRetain();
  id v16 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = (unint64_t)sub_1003E663C(v17, v14, (uint64_t)a3, a1, v16, a2, inited);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  if ((v18 & 0x8000000000000000) != 0 || (v18 & 0x4000000000000000) != 0)
  {
    sub_1000C0640(a5);
    unint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v19 = (uint64_t)sub_1002F48F4(v21);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFFF8;
    sub_1000C0640(a5);
    swift_bridgeObjectRetain();
  }
  uint64_t v22 = v19;
  sub_1000C0640(a5);
  sub_1003E7E1C(&v22, a5);
  sub_1000A7258(a5);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1000A7258(a5);
  return v22;
}

uint64_t sub_1003D68D8(id *a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6, uint64_t a7)
{
  unint64_t v8 = v7;
  uint64_t v121 = a7;
  unint64_t v125 = a6;
  v128 = a5;
  uint64_t v13 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v13 - 8);
  v123 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for UTType();
  uint64_t v120 = *(void *)(v126 - 8);
  uint64_t v15 = __chkstk_darwin(v126);
  v122 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v124 = (char *)&v117 - v17;
  id v130 = *a1;
  id v18 = [v130 identifier];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  BOOL v23 = v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22;
  unint64_t v131 = a4;
  if (v23)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_22;
    }
  }
  unint64_t v129 = v7;
  uint64_t v127 = a3;
  if (a2 >> 62) {
    goto LABEL_39;
  }
  uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v25; uint64_t v25 = _CocoaArrayWrapper.endIndex.getter())
  {
    v132 = (void (**)(char *, uint64_t))(a2 & 0xC000000000000001);
    uint64_t v26 = 4;
    while (1)
    {
      id v27 = v132 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 8 * v26);
      uint64_t v28 = v27;
      uint64_t v29 = v26 - 3;
      if (__OFADD__(v26 - 4, 1)) {
        break;
      }
      unint64_t v30 = a2;
      id v31 = [v27 identifier];
      uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v34 = v33;

      if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        return 0;
      }
      char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v37)
      {
LABEL_36:
        swift_bridgeObjectRelease();
        return 0;
      }
      ++v26;
      a2 = v30;
      if (v29 == v25) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  unint64_t v8 = v129;
  a4 = v131;
  a3 = v127;
LABEL_22:
  Swift::String v38 = (char **)v130;
  id v39 = [v130 identifier];
  uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v41;

  if (v40 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v42 == v43)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0) {
      goto LABEL_44;
    }
  }
  if (a3) {
    goto LABEL_33;
  }
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_29;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  uint64_t v45 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v45) {
    goto LABEL_42;
  }
LABEL_29:
  if ((a4 & 0xC000000000000001) != 0) {
    goto LABEL_95;
  }
  if (*(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
    goto LABEL_32;
  }
  __break(1u);
  do
  {
    swift_bridgeObjectRetain();
    uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v82 > 1) {
      return 0;
    }
LABEL_49:
    while (2)
    {
      if (![v38 requiresFullyFormedItems]) {
        goto LABEL_61;
      }
      unint64_t v57 = v8;
      if (!(a4 >> 62))
      {
        uint64_t v58 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v58) {
          goto LABEL_60;
        }
        goto LABEL_52;
      }
      swift_bridgeObjectRetain();
      uint64_t v58 = _CocoaArrayWrapper.endIndex.getter();
      if (!v58)
      {
LABEL_60:
        swift_bridgeObjectRelease();
        unint64_t v8 = v57;
        Swift::String v38 = (char **)v130;
LABEL_61:
        if ([v38 requiresVersioning])
        {
          unint64_t v129 = v8;
          if (a4 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
            if (v63)
            {
LABEL_64:
              uint64_t v64 = self;
              unint64_t v65 = a4;
              a4 = v64;
              unint64_t v8 = v65 & 0xC000000000000001;
              uint64_t v66 = 4;
              while (1)
              {
                uint64_t v67 = v66 - 4;
                if (v8)
                {
                  v68 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v69 = v66 - 3;
                  if (__OFADD__(v67, 1)) {
                    goto LABEL_93;
                  }
                }
                else
                {
                  v68 = *(void **)(v131 + 8 * v66);
                  swift_unknownObjectRetain();
                  uint64_t v69 = v66 - 3;
                  if (__OFADD__(v67, 1)) {
                    goto LABEL_93;
                  }
                }
                id v70 = [v68 providerDomainID];
                v133 = 0;
                id v71 = [(id)a4 providerDomainWithID:v70 cachePolicy:3 error:&v133];
                Swift::String v38 = v133;
                if (!v71) {
                  break;
                }
                v72 = v71;
                v73 = v133;

                unsigned int v74 = [v72 isiCloudDriveProvider];
                swift_unknownObjectRelease();

                ++v66;
                if (v74) {
                  BOOL v75 = v69 == v63;
                }
                else {
                  BOOL v75 = 1;
                }
                if (v75)
                {
                  char v76 = v74 ^ 1;
                  goto LABEL_79;
                }
              }
              v77 = v133;
              _convertNSErrorToError(_:)();

              swift_willThrow();
              swift_errorRelease();
              swift_unknownObjectRelease();
              unint64_t v129 = 0;
              char v76 = 1;
LABEL_79:
              uint64_t v78 = 4;
              Swift::String v38 = (char **)&unk_1006E3000;
              a4 = v131;
              do
              {
                uint64_t v79 = v78 - 4;
                if (v8)
                {
                  a4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  uint64_t v80 = v78 - 3;
                  if (__OFADD__(v79, 1)) {
                    goto LABEL_94;
                  }
                }
                else
                {
                  a4 = *(void *)(a4 + 8 * v78);
                  swift_unknownObjectRetain();
                  uint64_t v80 = v78 - 3;
                  if (__OFADD__(v79, 1)) {
                    goto LABEL_94;
                  }
                }
                if ([(id)a4 isTrashed])
                {
                  swift_bridgeObjectRelease();
                  swift_unknownObjectRelease();
                  return 0;
                }
                unsigned __int8 v81 = [(id)a4 isAnyParentTrashed];
                swift_unknownObjectRelease();
                if (v81) {
                  goto LABEL_36;
                }
                ++v78;
                a4 = v131;
              }
              while (v80 != v63);
              swift_bridgeObjectRelease();
              unint64_t v8 = v129;
              if (v76) {
                return 0;
              }
              Swift::String v38 = (char **)v130;
              goto LABEL_103;
            }
          }
          else
          {
            uint64_t v63 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v63) {
              goto LABEL_64;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v8 = v129;
        }
LABEL_103:
        id v83 = [v38 filteringPredicate];
        sub_1000CBE70((uint64_t *)&unk_1007141D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A0030;
        *(void *)(inited + 32) = 0x7365646F4E636F64;
        *(void *)(inited + 40) = 0xE800000000000000;
        *(void *)(inited + 48) = a4;
        swift_bridgeObjectRetain();
        sub_10049342C(inited);
        sub_1000CBE70((uint64_t *)&unk_100707B20);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        unsigned int v86 = [v83 evaluateWithObject:isa];

        if (!v86) {
          return 0;
        }
        id v87 = sub_1003D5364();
        if (v87)
        {
          v88 = v87;
          sub_1003D550C(v131);
          if ((v89 & 1) == 0 || !sub_1003DEABC())
          {

            return 0;
          }
          v90 = self;
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          Class v91 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          unsigned __int8 v92 = [v90 isAction:v88 eligibleForItems:v91];

          if ((v92 & 1) == 0) {
            return 0;
          }
        }
        unint64_t v93 = v131;
        if (v131 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
          if (!v94)
          {
LABEL_123:
            swift_bridgeObjectRelease();
            return 1;
          }
        }
        else
        {
          uint64_t v94 = *(void *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v94) {
            goto LABEL_123;
          }
        }
        unint64_t v95 = 0;
        unint64_t v96 = v93 & 0xC000000000000001;
        uint64_t v121 = v93 & 0xFFFFFFFFFFFFFF8;
        unint64_t v119 = v93 + 32;
        v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48);
        v98 = (void (**)(char *, uint64_t, uint64_t))(v120 + 32);
        v132 = (void (**)(char *, uint64_t))(v120 + 8);
        v99 = &unk_1006E3000;
        v100 = &selRef_prepareForReuse;
        uint64_t v118 = v94;
        unint64_t v117 = v93 & 0xC000000000000001;
LABEL_111:
        if (v96)
        {
          v101 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v95 >= *(void *)(v121 + 16)) {
            goto LABEL_132;
          }
          v101 = (void *)swift_unknownObjectRetain();
        }
        unint64_t v129 = v8;
        BOOL v102 = __OFADD__(v95, 1);
        unint64_t v103 = v95 + 1;
        if (v102)
        {
          __break(1u);
LABEL_132:
          __break(1u);
        }
        v104 = (const char *)*((void *)v99 + 211);
        v128 = v101;
        id v105 = [v101 v104];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        id v106 = [v130 v100[424]];
        uint64_t v107 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v108 = *(void *)(v107 + 16);
        uint64_t v109 = (uint64_t)v123;
        if (v108)
        {
          unint64_t v125 = v103;
          swift_bridgeObjectRetain();
          uint64_t v127 = v107;
          uint64_t v110 = v107 + 40;
          while (1)
          {
            swift_bridgeObjectRetain_n();
            UTType.init(_:)();
            uint64_t v111 = v126;
            if ((*v97)(v109, 1, v126) == 1)
            {
              sub_1000CBBA4(v109, &qword_100708110);
              swift_bridgeObjectRelease();
            }
            else
            {
              v112 = v122;
              (*v98)(v122, v109, v111);
              uint64_t v113 = v111;
              char v114 = UTType.conforms(to:)();
              v115 = *v132;
              uint64_t v116 = v113;
              uint64_t v109 = (uint64_t)v123;
              (*v132)(v112, v116);
              swift_bridgeObjectRelease();
              if (v114)
              {
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease_n();
                v115(v124, v126);
                unint64_t v95 = v125;
                unint64_t v8 = v129;
                unint64_t v96 = v117;
                v99 = &unk_1006E3000;
                v100 = &selRef_prepareForReuse;
                if (v125 == v118) {
                  goto LABEL_123;
                }
                goto LABEL_111;
              }
            }
            v110 += 16;
            if (!--v108)
            {
              swift_unknownObjectRelease();
              swift_bridgeObjectRelease_n();
              goto LABEL_127;
            }
          }
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
LABEL_127:
        swift_bridgeObjectRelease();
        (*v132)(v124, v126);
        return 0;
      }
LABEL_52:
      unint64_t v59 = a4 & 0xC000000000000001;
      uint64_t v60 = 4;
      Swift::String v38 = &selRef_cellForItemAtIndexPath_;
      while (1)
      {
        uint64_t v61 = v60 - 4;
        if (!v59) {
          break;
        }
        a4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        unint64_t v8 = v60 - 3;
        if (__OFADD__(v61, 1)) {
          goto LABEL_92;
        }
LABEL_58:
        unsigned int v62 = [(id)a4 isFullyFormed];
        swift_unknownObjectRelease();
        if (!v62)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v60;
        a4 = v131;
        if (v8 == v58) {
          goto LABEL_60;
        }
      }
      a4 = *(void *)(a4 + 8 * v60);
      swift_unknownObjectRetain();
      unint64_t v8 = v60 - 3;
      if (!__OFADD__(v61, 1)) {
        goto LABEL_58;
      }
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_32:
      swift_bridgeObjectRelease();
LABEL_33:
      swift_unknownObjectRetain();
      id v46 = [(id)swift_unknownObjectRetain() providerDomainID];
      int v47 = DOCProviderDomainIDIsSharedServerDomainID();

      swift_unknownObjectRelease();
      if (v47)
      {
        swift_unknownObjectRelease();
        return 0;
      }
LABEL_43:
      char v49 = sub_1000301E0(FPActionTag, a4);
      swift_unknownObjectRelease();
      if ((v49 & 1) == 0) {
        return 0;
      }
LABEL_44:
      v50 = (void *)sub_1003D5A2C();
      id v51 = [v38 identifier];
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      LOBYTE(v51) = sub_100109128(v52, v54, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v51) {
        return 0;
      }
      unint64_t v55 = (unint64_t)[v38 availability];
      if ((v125 & ~v55) != 0) {
        return 0;
      }
      unsigned __int8 v56 = [v38 supportsMultipleItems];
      a4 = v131;
      if (v56) {
        continue;
      }
      break;
    }
  }
  while (v131 >> 62);
  if (*(uint64_t *)((v131 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 1) {
    goto LABEL_49;
  }
  return 0;
}

objc_class *sub_1003D764C(unint64_t a1, void *a2, void *a3)
{
  v146 = a3;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = __chkstk_darwin(v6);
  v151 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v153 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v148 = (uint64_t)a2;
  id v131 = v3;
  uint64_t v149 = v7;
  uint64_t v144 = v9;
  if (a2)
  {
    unsigned int v132 = [a2 isWritable];
    int v147 = v132;
  }
  else
  {
    unsigned int v132 = 0;
    int v147 = 1;
  }
  unint64_t v150 = a1;
  id v143 = (id)sub_1003E5F28(a1);
  sub_1000CBE70((uint64_t *)&unk_1007069D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005AA1A0;
  uint64_t v11 = (void *)FPActionTrash;
  *(void *)(inited + 32) = FPActionTrash;
  uint64_t v142 = inited + 32;
  uint64_t v12 = (void *)FPActionUntrash;
  uint64_t v13 = (void *)FPActionFavorite;
  *(void *)(inited + 40) = FPActionUntrash;
  *(void *)(inited + 48) = v13;
  uint64_t v14 = (void *)FPActionDelete;
  uint64_t v15 = (void *)FPActionRename;
  *(void *)(inited + 56) = FPActionDelete;
  *(void *)(inited + 64) = v15;
  uint64_t v16 = (void *)FPActionReparent;
  uint64_t v17 = (void *)FPActionFetchPublishingURL;
  *(void *)(inited + 72) = FPActionReparent;
  *(void *)(inited + 80) = v17;
  id v18 = (void *)FPActionArchive;
  uint64_t v19 = (void *)FPActionUnarchive;
  *(void *)(inited + 88) = FPActionArchive;
  *(void *)(inited + 96) = v19;
  uint64_t v20 = (void *)FPActionTag;
  uint64_t v21 = FPActionEvict;
  id v138 = (id)FPActionEvict;
  *(void *)(inited + 104) = FPActionTag;
  *(void *)(inited + 112) = v21;
  id v137 = (id)FPActionDownload;
  uint64_t v22 = FPActionDownloadRecursively;
  id v140 = (id)FPActionDownloadRecursively;
  *(void *)(inited + 120) = FPActionDownload;
  *(void *)(inited + 128) = v22;
  id v139 = (id)FPActionPin;
  uint64_t v23 = FPActionUnpin;
  id v141 = (id)FPActionUnpin;
  *(void *)(inited + 136) = FPActionPin;
  *(void *)(inited + 144) = v23;
  id v130 = v11;
  id v24 = v12;
  id v145 = v13;
  id v133 = v14;
  id v25 = v15;
  id v129 = v16;
  id v26 = v17;
  id v134 = v18;
  id v135 = v19;
  id v27 = v20;
  id v136 = v138;
  id v137 = v137;
  id v138 = v140;
  id v140 = v139;
  uint64_t v28 = (uint64_t)v141;
  uint64_t v29 = sub_1003E290C(inited, (uint64_t)v143);
  swift_setDeallocating();
  type metadata accessor for FPAction(0);
  swift_arrayDestroy();
  static Logger.UI.getter();
  unint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Shortcuts Contextual Actions enabled", v32, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v144 + 8))(v151, v149);
  uint64_t v33 = (uint64_t)[objc_allocWithZone((Class)WFContextualActionContext) initWithSurface:1];
  id v34 = [self standardClient];
  id v152 = 0;
  id v35 = [v34 contextualActionsForContext:v33 error:&v152];

  id v36 = v152;
  if (v35)
  {
    sub_10009E6C4(0, &qword_100714280);
    uint64_t v149 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v37 = v36;
  }
  else
  {
    id v38 = v152;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v39 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_1005A0030;
    uint64_t v41 = _convertErrorToNSError(_:)();
    *(void *)(v40 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v40 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v40 + 32) = v41;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
    uint64_t v149 = 0;
  }
  uint64_t v144 = 0;
  id v42 = v145;
  char v43 = sub_1005350BC();

  unint64_t v44 = v150;
  uint64_t v45 = v150 >> 62;
  LODWORD(v46) = v147;
  int v47 = &selRef_cellForItemAtIndexPath_;
  uint64_t v142 = v150 >> 62;
  if ((v43 & 1) == 0) {
    goto LABEL_22;
  }
  if (v45) {
    goto LABEL_172;
  }
  uint64_t v48 = *(void **)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v48) {
    goto LABEL_173;
  }
LABEL_12:
  if ((v44 & 0xC000000000000001) != 0) {
    goto LABEL_203;
  }
  if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_205;
  }
  uint64_t v45 = v28;
  char v49 = *(void **)(v44 + 32);
  swift_unknownObjectRetain();
  while (2)
  {
    swift_bridgeObjectRelease();
    id v50 = [v49 providerDomainID];
    char v51 = DOCProviderDomainIDIsSharedServerDomainID();

    if (v51)
    {
      swift_unknownObjectRelease();
      goto LABEL_21;
    }
    sub_100159E40();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_207:
    }
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    sub_10015A230();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_unknownObjectRelease();
    LODWORD(v46) = v147;
LABEL_21:
    uint64_t v28 = v45;
    uint64_t v45 = v142;
LABEL_22:
    uint64_t v52 = v44 & 0xFFFFFFFFFFFFFF8;
    if (!v45) {
      goto LABEL_23;
    }
LABEL_174:
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
LABEL_24:
    id v143 = (id)v33;
    id v145 = (id)v29;
    v151 = (char *)v53;
    if (!v53)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = v148;
      goto LABEL_52;
    }
    uint64_t v29 = v53;
    id v141 = (id)v28;
    uint64_t v45 = v44 & 0xC000000000000001;
    uint64_t v54 = 4;
    uint64_t v28 = (uint64_t)&selRef_cellForItemAtIndexPath_;
    while (1)
    {
      uint64_t v55 = v54 - 4;
      if (v45)
      {
        unsigned __int8 v56 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v57 = __OFADD__(v55, 1);
        uint64_t v58 = v54 - 3;
        if (v57) {
          break;
        }
        goto LABEL_31;
      }
      unsigned __int8 v56 = *(void **)(v44 + 8 * v54);
      swift_unknownObjectRetain();
      BOOL v57 = __OFADD__(v55, 1);
      uint64_t v58 = v54 - 3;
      if (v57) {
        break;
      }
LABEL_31:
      uint64_t v33 = [v56 doc_isCollaborationInvitation];
      swift_unknownObjectRelease();
      if ((v33 & 1) == 0)
      {
        ++v54;
        if (v58 != v29) {
          continue;
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v29 = 4;
      while (1)
      {
        uint64_t v59 = v29 - 4;
        if (v45)
        {
          uint64_t v60 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v28 = v29 - 3;
          if (__OFADD__(v59, 1)) {
            goto LABEL_168;
          }
        }
        else
        {
          uint64_t v60 = *(void **)(v44 + 8 * v29);
          swift_unknownObjectRetain();
          uint64_t v28 = v29 - 3;
          if (__OFADD__(v59, 1)) {
            goto LABEL_168;
          }
        }
        swift_getObjectType();
        id v61 = [v60 providerDomainID];
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = v63;

        if (v62 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v64 == v65) {
          break;
        }
        char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v44 = v150;
        if (v67) {
          goto LABEL_48;
        }
        swift_unknownObjectRelease();
        int v47 = &selRef_cellForItemAtIndexPath_;
LABEL_35:
        ++v29;
        if ((char *)v28 == v151)
        {
          swift_bridgeObjectRelease();
          uint64_t v29 = v148;
          LODWORD(v46) = v147;
          uint64_t v28 = (uint64_t)v141;
          uint64_t v45 = v142;
          if ((v33 & 1) == 0)
          {
LABEL_52:
            if (v45)
            {
              swift_bridgeObjectRetain();
              uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v69 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            id v70 = sub_10015A634(v69);
            if (v153 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v108 < 0)
              {
                __break(1u);
LABEL_172:
                swift_bridgeObjectRetain();
                uint64_t v48 = (void *)_CocoaArrayWrapper.endIndex.getter();
                if (!v48)
                {
LABEL_173:
                  swift_bridgeObjectRelease();
                  uint64_t v52 = v44 & 0xFFFFFFFFFFFFFF8;
                  if (v45) {
                    goto LABEL_174;
                  }
LABEL_23:
                  uint64_t v53 = *(void *)(v52 + 16);
                  swift_bridgeObjectRetain();
                  goto LABEL_24;
                }
                goto LABEL_12;
              }
            }
            sub_10051495C(0, 0, (uint64_t)v70);
          }
LABEL_57:
          char v71 = sub_1003E5230(v44, (void *)v29);
          uint64_t v33 = (uint64_t)v145;
          if (v71)
          {
            sub_100159B04(v29);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            LODWORD(v46) = v147;
          }
          if (!v29)
          {
            sub_100373158();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            LODWORD(v46) = v147;
          }
          id v72 = v133;
          char v73 = sub_1005350BC();

          if (v73 & 1) != 0 || (id v74 = v130, v75 = sub_1005350BC(), v74, (v75))
          {
            sub_10015824C();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              goto LABEL_68;
            }
            goto LABEL_169;
          }
          goto LABEL_69;
        }
      }
      swift_bridgeObjectRelease_n();
      unint64_t v44 = v150;
LABEL_48:
      char isAppContainer = DOCNode.doc_isAppContainerRoot.getter();
      swift_unknownObjectRelease();
      int v47 = &selRef_cellForItemAtIndexPath_;
      if (isAppContainer)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = v148;
        LODWORD(v46) = v147;
        uint64_t v28 = (uint64_t)v141;
        uint64_t v45 = v142;
        goto LABEL_57;
      }
      goto LABEL_35;
    }
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_68:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    LODWORD(v46) = v147;
LABEL_69:
    id v76 = v134;
    int v77 = sub_1005350BC();

    if ((v77 & v46) == 1)
    {
      if (!v29)
      {
        if (v45)
        {
          swift_bridgeObjectRetain();
          uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v78 != 1) {
            goto LABEL_77;
          }
        }
        else if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
        {
          goto LABEL_77;
        }
      }
      sub_10037345C(v29, v29 != 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_177;
      }
      goto LABEL_76;
    }
    while (1)
    {
LABEL_77:
      id v79 = v135;
      int v80 = sub_1005350BC();

      if ((v80 & v46) != 1) {
        goto LABEL_86;
      }
      if (!v29)
      {
        if (v45)
        {
          swift_bridgeObjectRetain();
          uint64_t v81 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v81 != 1) {
            goto LABEL_86;
          }
        }
        else if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
        {
          goto LABEL_86;
        }
      }
      sub_100373854(v29, v29 != 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      LODWORD(v46) = v147;
LABEL_86:
      id v82 = v136;
      char v83 = sub_1005350BC();

      if (v83)
      {
        sub_100373CF8();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        LODWORD(v46) = v147;
      }
      id v84 = v138;
      char v85 = sub_1005350BC();

      if (v85)
      {
        char v86 = 1;
      }
      else
      {
        id v87 = v137;
        char v88 = sub_1005350BC();

        if ((v88 & 1) == 0) {
          goto LABEL_97;
        }
        char v86 = 0;
      }
      sub_100374028(v86);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      LODWORD(v46) = v147;
LABEL_97:
      id v89 = v140;
      char v90 = sub_1005350BC();

      if (v90)
      {
        if (v45)
        {
          swift_bridgeObjectRetain();
          uint64_t v91 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v91 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        sub_100374508(v91);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        LODWORD(v46) = v147;
      }
      id v92 = (id)v28;
      char v93 = sub_1005350BC();

      if (v93)
      {
        if (v45)
        {
          swift_bridgeObjectRetain();
          uint64_t v94 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v94 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        sub_1003747C4(v94);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        LODWORD(v46) = v147;
      }
      if (v45)
      {
        swift_bridgeObjectRetain();
        uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v95 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v96 = v151;
      if (v151) {
        BOOL v97 = v95 == 1;
      }
      else {
        BOOL v97 = 0;
      }
      uint64_t v45 = !v97;
      uint64_t v48 = v146;
      if (!v97) {
        goto LABEL_129;
      }
      if ((v44 & 0xC000000000000001) != 0) {
        break;
      }
      if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        v98 = *(void **)(v44 + 32);
        swift_unknownObjectRetain();
        goto LABEL_125;
      }
      __break(1u);
LABEL_177:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_76:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      LODWORD(v46) = v147;
    }
    swift_bridgeObjectRetain();
    v98 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_125:
    if (![v98 isPinnedSubitem]) {
      goto LABEL_128;
    }
    sub_100374A68();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_205:
    }
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    int v47 = &selRef_cellForItemAtIndexPath_;
LABEL_128:
    swift_unknownObjectRelease();
    LODWORD(v46) = v147;
    unint64_t v96 = v151;
LABEL_129:
    if (v96 && ((v46 ^ 1) & 1) == 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = 4;
      do
      {
        uint64_t v99 = v28 - 4;
        if ((v44 & 0xC000000000000001) != 0)
        {
          v100 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v57 = __OFADD__(v99, 1);
          v101 = (char *)(v28 - 3);
          if (v57) {
            goto LABEL_167;
          }
        }
        else
        {
          v100 = *(void **)(v44 + 8 * v28);
          swift_unknownObjectRetain();
          BOOL v57 = __OFADD__(v99, 1);
          v101 = (char *)(v28 - 3);
          if (v57) {
            goto LABEL_167;
          }
        }
        LODWORD(v46) = [v100 v47[337]];
        swift_unknownObjectRelease();
        if (!v46) {
          break;
        }
        ++v28;
      }
      while (v101 != v151);
      swift_bridgeObjectRelease();
      uint64_t v48 = v146;
    }
    if (([v48 isPickerUI] & 1) == 0 && !objc_msgSend(v48, "isFilesApp"))
    {
      unint64_t v102 = v149;
      if (v149) {
        int v103 = v46;
      }
      else {
        int v103 = 0;
      }
      if (v103 != 1) {
        goto LABEL_180;
      }
LABEL_155:
      if (v102 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
        if (v28) {
          goto LABEL_157;
        }
      }
      else
      {
        uint64_t v28 = *(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v28)
        {
LABEL_157:
          uint64_t v104 = v149;
          if (v28 < 1)
          {
            __break(1u);
            goto LABEL_207;
          }
          unint64_t v46 = 0;
          unint64_t v105 = v149 & 0xC000000000000001;
          do
          {
            if (v105) {
              id v106 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v106 = *(id *)(v104 + 8 * v46 + 32);
            }
            uint64_t v107 = v106;
            sub_100375CB0(v106, v29, v29 != 0);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            int v47 = *(char ***)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if ((unint64_t)v47 >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            ++v46;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            uint64_t v29 = v148;
            uint64_t v104 = v149;
          }
          while (v28 != v46);
        }
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_180;
    }
    uint64_t v28 = (uint64_t)sub_100374D6C();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (v46)
    {
      sub_10009E6C4(0, &qword_100708700);
      sub_10036685C();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      unint64_t v46 = *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v46 >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v28 = (uint64_t)sub_100366E98();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v102 = v149;
      if (v149) {
        goto LABEL_155;
      }
    }
LABEL_180:
    if (v132 && (sub_1000301E0(v129, v44) & 1) != 0)
    {
      uint64_t v28 = (uint64_t)sub_100376038(v29, v44);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v45) {
      goto LABEL_200;
    }
    if ((v44 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v109 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
      goto LABEL_189;
    }
    if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_203:
      uint64_t v45 = v28;
      char v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      continue;
    }
    break;
  }
  uint64_t v109 = *(void **)(v44 + 32);
  swift_unknownObjectRetain();
LABEL_189:
  id v110 = [v109 cachedDomain];
  if (!v110
    || (uint64_t v111 = v110, v112 = [v110 isiCloudDriveProvider], v111, !v112))
  {
LABEL_199:
    swift_unknownObjectRelease();
LABEL_200:
    swift_bridgeObjectRetain();
    id v124 = v131;
    unint64_t v125 = sub_1003E40F0(v33, v44);
    swift_release();

    swift_bridgeObjectRelease();
    sub_100169238((unint64_t)v125);

    unint64_t v126 = v153;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (objc_class *)v126;
  }
  unsigned int v113 = [v109 isFolder];
  uint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  v115 = result;
  if (!v113)
  {
    if (!result) {
      goto LABEL_209;
    }
    unint64_t v117 = 0xD000000000000025;
    unint64_t v118 = 0xD00000000000004ALL;
    unint64_t v127 = 0x80000001005F0E00;
    unint64_t v119 = 0x80000001005F0DB0;
    unint64_t v120 = 0x80000001005F0DE0;
    uint64_t v121 = 0x617A696C61636F4CLL;
    unint64_t v122 = 0xEB00000000656C62;
    v123.super.Class isa = v115;
    unint64_t v116 = 0xD000000000000012;
LABEL_196:
    DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v117, *(Swift::String *)&v121, v123, *(Swift::String *)&v116, *(Swift::String *)&v118);

    sub_10015AAA4();
    swift_bridgeObjectRelease();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_199;
  }
  if (result)
  {
    unint64_t v116 = 0xD000000000000014;
    unint64_t v117 = 0xD000000000000027;
    unint64_t v118 = 0xD00000000000004CLL;
    unint64_t v127 = 0x80000001005F0E80;
    unint64_t v119 = 0x80000001005F0E50;
    unint64_t v120 = 0x80000001005DD020;
    uint64_t v121 = 0x617A696C61636F4CLL;
    unint64_t v122 = 0xEB00000000656C62;
    v123.super.Class isa = v115;
    goto LABEL_196;
  }
  __break(1u);
LABEL_209:
  __break(1u);
  return result;
}

void sub_1003D8D8C(void **a1@<X0>, void *a2@<X1>, void **a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  unint64_t v5 = *a1;
  if (a2)
  {
    id v7 = a2;
    id v8 = [v5 localizedName];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    id v12 = [v7 localizedName];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    if (v9 == v13 && v11 == v15)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0)
      {

        goto LABEL_8;
      }
    }
    id v34 = sub_100157B90(v5, 1);

    id v35 = *a3;
    *a3 = v34;

    goto LABEL_14;
  }
LABEL_8:
  id v18 = [v5 localizedName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v5;
  id v20 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  id v21 = v5;
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v42 = sub_1001622B8;
  uint64_t v43 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_100156760;
  uint64_t v41 = &unk_1006A8870;
  id v24 = _Block_copy(&aBlock);
  id v25 = [v20 initWithIdentifier:v22 localizedTitle:v23 unresolvedHandler:v24];

  _Block_release(v24);
  swift_release();
  id v26 = [v21 bundleIdentifier];
  if (v26)
  {
    id v27 = v26;
    id v28 = sub_1000E8D28(v26);

    [v25 setImage:v28];
  }
  [v25 setMenuSortOrder:8];
  [v25 setSupportsMultipleItems:0];
  [v25 setAvailability:1];
  id v42 = sub_10014DF8C;
  uint64_t v43 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v39 = 1107296256;
  uint64_t v40 = sub_100053508;
  uint64_t v41 = &unk_1006A8898;
  uint64_t v29 = _Block_copy(&aBlock);
  id v30 = [self predicateWithBlock:v29];
  _Block_release(v29);
  swift_release();
  [v25 setFilteringPredicate:v30];

  sub_1000CBE70((uint64_t *)&unk_1007141F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = 0x7365646F4E636F64;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 72) = sub_1000CBE70((uint64_t *)&unk_100707B20);
  *(void *)(inited + 48) = a4;
  swift_bridgeObjectRetain();
  sub_100042C20(inited);
  id v32 = [v25 filteringPredicate];
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  LODWORD(inited) = [v32 evaluateWithObject:isa];

  if (!inited)
  {

LABEL_14:
    id v25 = 0;
  }
  *a5 = v25;
}

id sub_1003D9208()
{
  unint64_t v0 = sub_1003D5B7C();
  unint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_19;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v3);
      id v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 identifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
LABEL_16:
        swift_bridgeObjectRelease_n();
        return v5;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_16;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  id v14 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v15 = String._bridgeToObjectiveC()();
  NSString v16 = String._bridgeToObjectiveC()();
  v19[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
  v19[5] = 0;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1003DECA4;
  v19[3] = &unk_1006A84D8;
  char v17 = _Block_copy(v19);
  id v5 = [v14 initWithIdentifier:v15 localizedTitle:v16 availability:1 handler:v17];

  _Block_release(v17);
  swift_release();
  return v5;
}

id DOCActionManager.__deallocating_deinit()
{
  return sub_1003D947C(type metadata accessor for DOCActionManager);
}

id sub_1003D947C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t DOCActionManager.lookupAndPerform(actionWithIdentifier:on:in:actionContext:)(uint64_t a1, unint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v13 = static String._unconditionallyBridgeFromObjectiveC(_:)() == a1 && v12 == a2;
  unint64_t v14 = a3 >> 62;
  if (v13)
  {
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_10;
    }
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26 > 1000) {
      return result;
    }
  }
  else if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > 1000)
  {
    return result;
  }
LABEL_10:
  uint64_t v27 = v9;
  uint64_t v17 = sub_1003D5B7C();
  swift_bridgeObjectRetain();
  if (v14)
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t v18 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v18 = a3;
  }
  uint64_t v19 = sub_1003D764C(v18, a4, *(void **)(v29 + OBJC_IVAR____TtC5Files16DOCActionContext_configuration));
  swift_bridgeObjectRelease();
  unint64_t v31 = v17;
  sub_100169238((unint64_t)v19);
  unint64_t v20 = v31;
  swift_bridgeObjectRetain();
  id v21 = sub_1003E8554(v20, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
    swift_bridgeObjectRetain();
    if (v14)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v25 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a3 = v25;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    sub_1003EC438(v21, a3, v29);

    return swift_bridgeObjectRelease();
  }
  else
  {
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    NSString v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      id v24 = (uint8_t *)swift_slowAlloc();
      unint64_t v31 = swift_slowAlloc();
      *(_DWORD *)id v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_10009B0E4(a1, a2, (uint64_t *)&v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Cannot find action for identifier: %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v11, v27);
  }
}

uint64_t sub_1003D98D8(int a1, id a2, void *a3)
{
  id v4 = (void (**)(id, Class, uint64_t))[a2 resolvedHandler];
  v16[3] = type metadata accessor for DOCActionContext();
  v16[0] = a3;
  sub_10009E6C4(0, (unint64_t *)&unk_100714270);
  id v5 = a3;
  v6.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  sub_100053674((uint64_t)v16, (uint64_t)v14);
  uint64_t v7 = v15;
  if (v15)
  {
    uint64_t v8 = sub_1000A6B78(v14, v15);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_10009B1B8((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
  }
  v4[2](v4, v6.super.isa, v12);

  _Block_release(v4);
  swift_unknownObjectRelease();
  return sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_100705D60);
}

void sub_1003D9AA0(uint64_t a1, void *a2, uint64_t a3, void *a4, double a5)
{
  id v67 = a4;
  uint64_t v68 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v62 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v62 - v16;
  double Current = CFAbsoluteTimeGetCurrent();
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v69 = v9;
  uint64_t v70 = v8;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v65 = (void (*)(char *, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v65;
    *(_DWORD *)uint64_t v22 = 136315650;
    double v72 = COERCE_DOUBLE(sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, aBlock));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2080;
    double v72 = *(double *)&a1;
    swift_unknownObjectRetain();
    sub_1000CBE70(&qword_100717520);
    uint64_t v66 = (uint64_t)v15;
    uint64_t v23 = String.init<A>(describing:)();
    double v72 = COERCE_DOUBLE(sub_10009B0E4(v23, v24, aBlock));
    uint64_t v8 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2048;
    double v72 = Current - a5;
    uint64_t v15 = (char *)v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s Finished checking for any nodes in protected locations. Found %s. Took: %f", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    uint64_t v9 = v69;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v17, v8);
  if (a1)
  {
    swift_unknownObjectRetain();
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    id v26 = a2;
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      aBlock[0] = v66;
      *(_DWORD *)uint64_t v30 = 136315650;
      LODWORD(v64) = v29;
      double v72 = COERCE_DOUBLE(sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, aBlock));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v65 = v25;
      *(_WORD *)(v30 + 12) = 2080;
      double v72 = *(double *)&a1;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v31 = String.init<A>(describing:)();
      double v72 = COERCE_DOUBLE(sub_10009B0E4(v31, v32, aBlock));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2080;
      id v33 = v26;
      id v34 = [v33 description];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v63 = v12;
      uint64_t v36 = v35;
      unint64_t v38 = v37;

      double v72 = COERCE_DOUBLE(sub_10009B0E4(v36, v38, aBlock));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v64, "%s node %s requires authentication! Auth before running action: %s", (uint8_t *)v30, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v65(v63, v70);
    }
    else
    {

      swift_unknownObjectRelease_n();
      v25(v12, v8);
    }
    id v50 = [self sharedManager];
    char v51 = (void *)swift_allocObject();
    id v53 = v67;
    uint64_t v52 = v68;
    v51[2] = v26;
    v51[3] = v52;
    v51[4] = v53;
    aBlock[4] = (uint64_t)sub_1003EDA14;
    aBlock[5] = (uint64_t)v51;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100007FA4;
    aBlock[3] = (uint64_t)&unk_1006A8DE8;
    uint64_t v54 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    id v55 = v26;
    swift_bridgeObjectRetain();
    id v56 = v53;
    swift_release();
    [v50 authenticateLocationWithNoUI:a1 completion:v54];
    _Block_release(v54);

    swift_unknownObjectRelease_n();
  }
  else
  {
    static Logger.UI.getter();
    id v39 = a2;
    uint64_t v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      uint64_t v65 = v25;
      uint64_t v43 = v42;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315394;
      double v72 = COERCE_DOUBLE(sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, aBlock));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v64 = v43 + 14;
      id v44 = v39;
      uint64_t v66 = (uint64_t)v15;
      id v45 = v44;
      id v46 = [v44 description];
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v49 = v48;

      double v72 = COERCE_DOUBLE(sub_10009B0E4(v47, v49, aBlock));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s no nodes are protected. Skip auth and running action: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v65((char *)v66, v70);
    }
    else
    {

      v25(v15, v8);
    }
    if ([v39 requiresResolvedItems])
    {
      id v57 = v39;
      id v58 = v67;
      sub_1003E8D38(v68, v57, v58);
    }
    else
    {
      id v59 = [v39 unresolvedHandler];
      if (!v59) {
        return;
      }
      uint64_t v60 = (void (**)(void, void, void))v59;
      id v58 = v67;
      _Block_copy(v60);
      sub_1000CBE70((uint64_t *)&unk_100706730);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(void, Class, id))v60)[2](v60, isa, v58);

      _Block_release(v60);
      _Block_release(v60);
    }
  }
}

void sub_1003DA398(char a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v50 - v15;
  if (a1)
  {
    static Logger.UI.getter();
    id v17 = a3;
    unint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v57 = v52;
      *(_DWORD *)uint64_t v21 = 136315394;
      uint64_t v53 = (uint64_t)a5;
      uint64_t v56 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, &v57);
      uint64_t v54 = a4;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v50 = v21 + 14;
      id v22 = v17;
      uint64_t v55 = v10;
      id v23 = v22;
      id v24 = [v22 description];
      int v51 = v20;
      id v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v27 = v11;
      unint64_t v29 = v28;

      uint64_t v30 = v26;
      a5 = (void *)v53;
      uint64_t v56 = sub_10009B0E4(v30, v29, &v57);
      a4 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v51, "%s auth success! Running action: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v55);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
    if ([v17 requiresResolvedItems])
    {
      id v45 = v17;
      id v46 = a5;
      sub_1003E8D38(a4, v45, v46);
    }
    else
    {
      id v47 = [v17 unresolvedHandler];
      if (!v47) {
        return;
      }
      unint64_t v48 = (void (**)(void, void, void))v47;
      id v46 = a5;
      _Block_copy(v48);
      sub_1000CBE70((uint64_t *)&unk_100706730);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      ((void (**)(void, Class, id))v48)[2](v48, isa, v46);

      _Block_release(v48);
      _Block_release(v48);
    }
  }
  else
  {
    static Logger.UI.getter();
    id v31 = a3;
    swift_errorRetain();
    id v32 = v31;
    swift_errorRetain();
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    int v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v55 = v10;
      uint64_t v37 = v36;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v37 = 136315650;
      LODWORD(v52) = v35;
      uint64_t v56 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, &v57);
      uint64_t v54 = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2080;
      id v38 = v32;
      id v39 = [v38 description];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v42 = v41;

      uint64_t v56 = sub_10009B0E4(v40, v42, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v56 = a2;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v43 = String.init<A>(describing:)();
      uint64_t v56 = sub_10009B0E4(v43, v44, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v52, "%s auth before running action failed! Not running action: %s error: %s", (uint8_t *)v37, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v55);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
}

void sub_1003DA994(void *a1, int a2, uint64_t a3, dispatch_group_t group, uint64_t a5)
{
  if (a1)
  {
    uint64_t v7 = (void *)(a5 + 16);
    swift_beginAccess();
    id v8 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = group;
    v18[4] = sub_10021FD14;
    v18[5] = v9;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10000A884;
    v18[3] = &unk_1006A8B18;
    uint64_t v10 = _Block_copy(v18);
    uint64_t v11 = group;
    swift_release();
    [v8 prepareForMode:1 usingBookmark:0 completionBlock:v10];
    _Block_release(v10);
  }
  else
  {
    dispatch_group_leave(group);
    uint64_t v13 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10059B760;
    *(void *)(v14 + 56) = &type metadata for String;
    unint64_t v15 = sub_100073F48();
    *(void *)(v14 + 64) = v15;
    *(void *)(v14 + 32) = 0xD00000000000001BLL;
    *(void *)(v14 + 40) = 0x80000001005F0AC0;
    if (a3)
    {
      uint64_t v16 = _convertErrorToNSError(_:)();
      id v17 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      unint64_t v15 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    }
    else
    {
      *(void *)(v14 + 80) = 0xEB0000000029726FLL;
      uint64_t v16 = 0x727265206C696E28;
      id v17 = &type metadata for String;
    }
    *(void *)(v14 + 96) = v17;
    *(void *)(v14 + 104) = v15;
    *(void *)(v14 + 72) = v16;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1003DAC48(void (*a1)(uint64_t))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DADF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = swift_unknownObjectRetain();
  LOBYTE(a4) = a4(v7, ObjCClassMetadata, ObjectType);
  swift_unknownObjectRelease();
  return a4 & 1;
}

uint64_t sub_1003DAE64(void *a1)
{
  id v2 = [self generalPasteboard];
  id v3 = [v2 itemProviders];

  sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62) {
    goto LABEL_25;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    int v20 = a1;
    unint64_t v6 = 0;
    unint64_t v24 = v4 & 0xC000000000000001;
    uint64_t v23 = v4 & 0xFFFFFFFFFFFFFF8;
    unint64_t v22 = v4 + 32;
    uint64_t v21 = v5;
    while (1)
    {
      if (v24)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v23 + 16)) {
          goto LABEL_24;
        }
        id v7 = *(id *)(v22 + 8 * v6);
      }
      id v8 = v7;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      uint64_t v10 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_10059B760;
      unint64_t v4 = (unint64_t)&type metadata for String;
      *(void *)(v11 + 56) = &type metadata for String;
      *(void *)(v11 + 64) = sub_100073F48();
      strcpy((char *)(v11 + 32), "typeToRequest");
      *(_WORD *)(v11 + 46) = -4864;
      id v12 = [v8 registeredTypeIdentifiers];
      uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)(v11 + 96) = sub_1000CBE70(&qword_10070AEB0);
      *(void *)(v11 + 104) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
      *(void *)(v11 + 72) = v13;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v14 = DOCAcceptableDragPasteboardTypes.getter();
      id v15 = [v8 registeredTypeIdentifiers];
      uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      a1 = *(void **)(v16 + 16);
      if (a1)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v14))
        {
LABEL_5:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
          swift_bridgeObjectRelease();
          if (a1 != (void *)1)
          {
            unint64_t v4 = v16 + 56;
            uint64_t v17 = 1;
            while (1)
            {
              unint64_t v18 = (void *)(v17 + 1);
              if (__OFADD__(v17, 1)) {
                break;
              }
              swift_bridgeObjectRetain();
              if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v14))
              {
                uint64_t v5 = v21;
                goto LABEL_5;
              }
              swift_bridgeObjectRelease();
              ++v17;
              v4 += 16;
              if (v18 == a1) {
                goto LABEL_19;
              }
            }
            __break(1u);
            break;
          }
LABEL_19:
          swift_bridgeObjectRelease_n();

          swift_bridgeObjectRelease();
          uint64_t v5 = v21;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (v6 == v5)
      {
        swift_bridgeObjectRelease();
        a1 = v20;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_27:
  *a1 = _swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DB27C(unint64_t a1, Swift::OpaquePointer a2, void **a3)
{
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v5)
  {
    unint64_t v6 = 0;
    unint64_t v47 = v4 & 0xC000000000000001;
    unint64_t v42 = v4 + 32;
    uint64_t v43 = v4 & 0xFFFFFFFFFFFFFF8;
    unsigned int v57 = enum case for DOCDragPasteboardType.fpItem(_:);
    unsigned int v58 = enum case for DOCFPItemDragPasteboardType.file(_:);
    unsigned int v56 = enum case for DOCFPItemDragPasteboardType.location(_:);
    id v7 = &selRef_prepareForReuse;
    rawValue = a2._rawValue;
    unint64_t v46 = v4;
    uint64_t v44 = v5;
    while (1)
    {
      if (v47)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v43 + 16)) {
          goto LABEL_38;
        }
        id v8 = *(id *)(v42 + 8 * v6);
      }
      uint64_t v9 = v8;
      if (__OFADD__(v6++, 1)) {
        break;
      }
      id v11 = [v8 v7[408]];
      uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v59 = *(void *)(v12 + 16);
      if (v59)
      {
        unint64_t v48 = v9;
        unint64_t v50 = v6;
        sub_1000CBE70(&qword_1007141E0);
        uint64_t v13 = type metadata accessor for DOCDragPasteboardType();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(void *)(v14 + 72);
        unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_10059B760;
        unint64_t v53 = v16;
        unint64_t v17 = v61 + v16;
        uint64_t v18 = type metadata accessor for DOCFPItemDragPasteboardType();
        uint64_t v19 = *(void *)(v18 - 8);
        a2._rawValue = *(void **)(v19 + 104);
        unint64_t v4 = v19 + 104;
        ((void (*)(unint64_t, void, uint64_t))a2._rawValue)(v17, v58, v18);
        int v20 = *(void (**)(unint64_t, void, uint64_t))(v14 + 104);
        v20(v17, v57, v13);
        uint64_t v54 = v15;
        unint64_t v21 = v17 + v15;
        uint64_t v52 = (void (*)(unint64_t, void, uint64_t))a2._rawValue;
        ((void (*)(unint64_t, void, uint64_t))a2._rawValue)(v21, v56, v18);
        uint64_t v55 = v13;
        int v51 = v20;
        v20(v21, v57, v13);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v21) = String.conformsToAnyOf(_:)((Swift::OpaquePointer)v61);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v21)
        {
LABEL_13:
          swift_bridgeObjectRelease_n();

          a2._rawValue = rawValue;
          unint64_t v4 = v46;
          uint64_t v5 = v44;
LABEL_28:
          unint64_t v6 = v50;
          id v7 = &selRef_prepareForReuse;
          goto LABEL_5;
        }
        if (v59 != 1)
        {
          uint64_t v22 = v12 + 56;
          uint64_t v23 = 1;
          while (!__OFADD__(v23, 1))
          {
            uint64_t v60 = v23 + 1;
            uint64_t v62 = v23;
            uint64_t v24 = swift_allocObject();
            *(_OWORD *)(v24 + 16) = xmmword_10059B760;
            v52(v24 + v53, v58, v18);
            a2._rawValue = (void *)v57;
            unint64_t v4 = v14 + 104;
            v51(v24 + v53, v57, v55);
            unint64_t v25 = v24 + v53 + v54;
            v52(v25, v56, v18);
            v51(v25, v57, v55);
            swift_bridgeObjectRetain();
            LOBYTE(v25) = String.conformsToAnyOf(_:)((Swift::OpaquePointer)v24);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v25) {
              goto LABEL_13;
            }
            uint64_t v23 = v62 + 1;
            v22 += 16;
            if (v60 == v59) {
              goto LABEL_19;
            }
          }
          __break(1u);
          goto LABEL_36;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        a2._rawValue = rawValue;
        unint64_t v4 = v46;
        uint64_t v5 = v44;
        uint64_t v9 = v48;
        unint64_t v6 = v50;
        id v7 = &selRef_prepareForReuse;
      }
      swift_bridgeObjectRelease();
      id v26 = [v9 v7[408]];
      uint64_t v27 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v28 = v27[2];
      if (v28)
      {
        uint64_t v30 = v27[4];
        uint64_t v29 = v27[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (String.conformsToAnyOf(_:)(a2))
        {
LABEL_30:
          swift_bridgeObjectRelease_n();
          os_log_type_t v34 = *a3;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *a3 = v34;
          uint64_t v36 = v9;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            os_log_type_t v34 = sub_1000825D0(0, v34[2] + 1, 1, v34);
            *a3 = v34;
          }
          unint64_t v38 = v34[2];
          unint64_t v37 = v34[3];
          if (v38 >= v37 >> 1)
          {
            os_log_type_t v34 = sub_1000825D0((void *)(v37 > 1), v38 + 1, 1, v34);
            *a3 = v34;
          }
          v34[2] = v38 + 1;
          id v39 = &v34[2 * v38];
          v39[4] = v30;
          v39[5] = v29;

          unint64_t v4 = v46;
          goto LABEL_5;
        }
        unint64_t v49 = v9;
        unint64_t v50 = v6;
        swift_bridgeObjectRelease();
        if (v28 != 1)
        {
          id v31 = v27 + 7;
          uint64_t v32 = 1;
          while (1)
          {
            uint64_t v33 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              break;
            }
            uint64_t v30 = *(v31 - 1);
            uint64_t v29 = *v31;
            swift_bridgeObjectRetain();
            if (String.conformsToAnyOf(_:)(a2))
            {
              uint64_t v9 = v49;
              unint64_t v6 = v50;
              id v7 = &selRef_prepareForReuse;
              goto LABEL_30;
            }
            swift_bridgeObjectRelease();
            ++v32;
            v31 += 2;
            if (v33 == v28) {
              goto LABEL_27;
            }
          }
LABEL_36:
          __break(1u);
          break;
        }
LABEL_27:
        swift_bridgeObjectRelease_n();

        goto LABEL_28;
      }

      swift_bridgeObjectRelease();
LABEL_5:
      if (v6 == v5) {
        goto LABEL_40;
      }
    }
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_40:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DB894(id *a1, void *a2, void *a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  *(unsigned char *)(v17 + 32) = a5;
  *(void *)(v17 + 40) = a6;
  *(void *)(v17 + 48) = a7;
  *(void *)(v17 + 56) = a8;
  *(void *)(v17 + 64) = a9;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1003ED400;
  *(void *)(v18 + 24) = v17;
  id v19 = a3;
  id v20 = a4;
  swift_retain();
  swift_bridgeObjectRetain();
  id v21 = a9;
  swift_retain();
  sub_1003C4568(a1, (uint64_t)a1, a2, 1, (uint64_t)sub_1003C3D44, v18);
  swift_release();

  return swift_release();
}

uint64_t sub_1003DB9B4(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  id v12 = [self defaultManager];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v14 = [v12 eligibleActionsForDroppingItems:isa underItem:a2];

  type metadata accessor for FPAction(0);
  sub_100080220((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  uint64_t v15 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  BOOL v20 = v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19;
  unint64_t v44 = a7;
  if (v20) {
    goto LABEL_9;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_6:
    uint64_t v22 = 1;
    goto LABEL_11;
  }
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;
  if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
  {
LABEL_9:
    uint64_t v22 = 1;
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_6;
    }
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39) {
      uint64_t v22 = 1;
    }
    else {
      uint64_t v22 = _stringCompareWithSmolCheck(_:_:expecting:)() & 1;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  unint64_t v27 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_13;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    char v34 = 0;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result) {
    goto LABEL_23;
  }
LABEL_13:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v30 = *(id *)(a1 + 32);
LABEL_16:
    id v31 = v30;
    swift_bridgeObjectRelease();
    id v32 = [self defaultPermission];
    unsigned __int8 v33 = [v32 canItem:v31 performAction:v22 item:a2];

    char v34 = v33 ^ 1;
LABEL_24:
    char v40 = sub_1005350BC(a3, v15);
    swift_bridgeObjectRelease();
    if (v40 & 1) == 0 || (v34) {
      return OS_dispatch_semaphore.signal()();
    }
    unint64_t v41 = (uint64_t *)(a6 + 16);
    if ((a4 & 1) == 0) {
      goto LABEL_33;
    }
    if (v27)
    {
      swift_bridgeObjectRetain();
      uint64_t v42 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v42 == a5)
    {
      a1 = v44;
      if (v44 >> 62) {
        goto LABEL_35;
      }
    }
    else
    {
LABEL_33:
      if (v27)
      {
LABEL_35:
        swift_bridgeObjectRetain();
        uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
    }
    uint64_t v43 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_36:
    swift_beginAccess();
    uint64_t *v41 = v43;
    return OS_dispatch_semaphore.signal()();
  }
  __break(1u);
  return result;
}

id sub_1003DBDDC()
{
  id v1 = [v0 effectiveAppearance];
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v4 = v2;
  unint64_t v5 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v6 = (objc_class *)type metadata accessor for DOCActionContext();
  id v7 = (char *)objc_allocWithZone(v6);
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v1;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v4;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v0;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(void *)&v7[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v5;
  v10.receiver = v7;
  v10.super_class = v6;
  id v8 = v0;
  return [super init];
}

uint64_t DOCActionManager.perform(actionWithIdentifier:with:completionHandler:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v30 = a4;
  uint64_t v35 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)static DOCLog.UI.getter();
  LODWORD(v34) = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0230;
  *(void *)(v13 + 56) = &type metadata for String;
  *(void *)(v13 + 64) = sub_100073F48();
  uint64_t v33 = a1;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  *(void *)(v13 + 96) = sub_1000CBE70(&qword_100714098);
  *(void *)(v13 + 104) = sub_100073DF0((unint64_t *)&unk_1007140A0, &qword_100714098);
  *(void *)(v13 + 72) = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v31 = v5;
  uint64_t v14 = sub_1003D5B7C();
  *(void *)(v13 + 136) = sub_1000CBE70(&qword_100708708);
  *(void *)(v13 + 144) = sub_100073DF0(&qword_1007140B0, &qword_100708708);
  *(void *)(v13 + 112) = v14;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!v15)
  {
LABEL_13:
    uint64_t v24 = (void *)swift_allocObject();
    uint64_t v25 = v30;
    uint64_t v26 = v31;
    v24[2] = v31;
    v24[3] = v25;
    uint64_t v27 = v33;
    v24[4] = v32;
    v24[5] = v27;
    v24[6] = a2;
    swift_bridgeObjectRetain();
    id v28 = v26;
    swift_retain();
    sub_1003DC320((uint64_t)v16, (uint64_t)sub_1003ECFB0, (uint64_t)v24, v27, a2);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v36 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C40(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v34 = a2;
    uint64_t v18 = 0;
    uint64_t v16 = v36;
    do
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v19 = *(id *)(a3 + 8 * v18 + 32);
      }
      BOOL v20 = v19;
      id v21 = [v19 url];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v36 = v16;
      unint64_t v23 = v16[2];
      unint64_t v22 = v16[3];
      if (v23 >= v22 >> 1)
      {
        sub_100190C40(v22 > 1, v23 + 1, 1);
        uint64_t v16 = v36;
      }
      ++v18;
      _OWORD v16[2] = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))((unint64_t)v16+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v23, v11, v35);
    }
    while (v15 != v18);
    a2 = v34;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003DC320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v56 = a3;
  uint64_t v52 = a2;
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  unsigned int v57 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v77 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v74 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v67 = v8;
  __chkstk_darwin(v9);
  char v73 = (char *)v51 - v10;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  id v79 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v85);
  int v80 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v15 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = swift_allocObject();
  *(void *)(v84 + 16) = 0;
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = _swiftEmptyArrayStorage;
  uint64_t v78 = a1;
  uint64_t v20 = *(void *)(a1 + 16);
  sub_10009EEB0(v20, 0);
  specialized Array._endMutation()();
  id v82 = [self defaultManager];
  dispatch_group_t v81 = dispatch_group_create();
  uint64_t v21 = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v16);
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100080220((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_100073DF0((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v53 = v15;
  v51[1] = v21;
  int v80 = (char *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v85 = v20;
  if (v20)
  {
    uint64_t v23 = v77 + 16;
    unint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
    uint64_t v24 = *(unsigned __int8 *)(v77 + 80);
    uint64_t v25 = v78 + ((v24 + 32) & ~v24);
    uint64_t v71 = *(void *)(v77 + 72);
    v77 += 56;
    double v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 32);
    uint64_t v70 = (void (**)(char *, char *, uint64_t))(v23 + 16);
    uint64_t v68 = v24 | 7;
    uint64_t v69 = (v24 + 16) & ~v24;
    unint64_t v67 = (v67 + v69 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v66 = (v67 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v65 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v64 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v63 = (v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v62 = v63 + 8;
    uint64_t v61 = (void (**)(char *, uint64_t))(v23 - 8);
    swift_bridgeObjectRetain();
    uint64_t v26 = v79;
    uint64_t v27 = v73;
    while (1)
    {
      v22(v26, v25, v7);
      id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v77;
      (*(void (**)(char *, void, uint64_t, uint64_t))v77)(v26, 0, 1, v7);
      if ((*v72)(v26, 1, v7) == 1) {
        break;
      }
      uint64_t v60 = v28;
      uint64_t v29 = *v70;
      (*v70)(v27, v26, v7);
      uint64_t v30 = v7;
      dispatch_group_t v31 = v81;
      dispatch_group_enter(v81);
      uint64_t v32 = v74;
      v22(v74, (uint64_t)v27, v30);
      uint64_t v33 = swift_allocObject();
      v29((char *)(v33 + v69), v32, v30);
      uint64_t v34 = (void *)(v33 + v67);
      uint64_t v35 = v76;
      *uint64_t v34 = v75;
      v34[1] = v35;
      uint64_t v36 = v22;
      id v37 = v80;
      *(void *)(v33 + v66) = v80;
      *(void *)(v33 + v65) = v84;
      *(void *)(v33 + v64) = v31;
      *(void *)(v33 + v63) = v83;
      swift_bridgeObjectRetain();
      id v38 = v37;
      unint64_t v22 = v36;
      swift_retain();
      uint64_t v39 = v31;
      uint64_t v7 = v30;
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)();
      uint64_t v26 = v79;
      swift_release();
      (*v61)(v27, v30);
      v25 += v71;
      if (!--v85)
      {
        v60(v26, 1, 1, v30);
        break;
      }
    }
  }
  else
  {
    char v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56);
    swift_bridgeObjectRetain();
    v40(v79, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  unint64_t v41 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t v43 = v56;
  v42[2] = v52;
  v42[3] = v43;
  uint64_t v44 = v83;
  v42[4] = v84;
  v42[5] = v44;
  aBlock[4] = sub_1003ED68C;
  aBlock[5] = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006A8BB8;
  id v45 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  unint64_t v46 = v53;
  static DispatchQoS.unspecified.getter();
  char v86 = _swiftEmptyArrayStorage;
  sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  unint64_t v47 = v57;
  uint64_t v48 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch_group_t v49 = v81;
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v45);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v47, v48);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v46, v55);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1003DCD14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, NSObject *a8, uint64_t a9)
{
  if (!a1)
  {
    id v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005A0500;
    *(void *)(v20 + 56) = &type metadata for String;
    unint64_t v21 = sub_100073F48();
    *(void *)(v20 + 64) = v21;
    *(void *)(v20 + 32) = 0xD000000000000023;
    *(void *)(v20 + 40) = 0x80000001005F0B50;
    URL._bridgeToObjectiveC()((NSURL *)0xD000000000000023);
    uint64_t v23 = v22;
    *(void *)(v20 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v20 + 104) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v20 + 72) = v23;
    if (a2)
    {
      uint64_t v24 = _convertErrorToNSError(_:)();
      uint64_t v25 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v26 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    }
    else
    {
      *(void *)(v20 + 120) = 0xEB0000000029726FLL;
      uint64_t v24 = 0x727265206C696E28;
      uint64_t v25 = &type metadata for String;
      uint64_t v26 = v21;
    }
    *(void *)(v20 + 136) = v25;
    *(void *)(v20 + 144) = v26;
    *(void *)(v20 + 112) = v24;
    *(void *)(v20 + 176) = &type metadata for String;
    *(void *)(v20 + 184) = v21;
    *(void *)(v20 + 152) = a4;
    *(void *)(v20 + 160) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = a7 + 16;
      *(void *)(v27 + 24) = a2;
      uint64_t v28 = swift_allocObject();
      uint64_t v29 = sub_1003ED8A8;
      *(void *)(v28 + 16) = sub_1003ED8A8;
      *(void *)(v28 + 24) = v27;
      id v38 = sub_100162A48;
      uint64_t v39 = v28;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = sub_100087990;
      id v37 = &unk_1006A8C58;
      uint64_t v30 = _Block_copy(&aBlock);
      swift_errorRetain();
      swift_errorRetain();
      swift_retain();
      swift_release();
      dispatch_sync(a6, v30);
      swift_errorRelease();
      _Block_release(v30);
      LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v30 & 1) == 0)
      {
LABEL_11:
        dispatch_group_leave(a8);
        sub_1000A7258((uint64_t)v29);
        return;
      }
      __break(1u);
    }
    uint64_t v29 = 0;
    goto LABEL_11;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a9 + 16;
  *(void *)(v12 + 24) = a1;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1003ED8F8;
  *(void *)(v13 + 24) = v12;
  id v38 = sub_100162A48;
  uint64_t v39 = v13;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_100087990;
  id v37 = &unk_1006A8CD0;
  uint64_t v14 = _Block_copy(&aBlock);
  id v15 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(a6, v14);
  _Block_release(v14);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v14)
  {
    __break(1u);
  }
  else
  {
    dispatch_group_leave(a8);
    swift_release();
  }
}

uint64_t sub_1003DD180(void *a1, uint64_t a2)
{
  *a1 = a2;
  swift_errorRelease();
  return swift_errorRetain();
}

uint64_t sub_1003DD1D0(void *a1, void *a2)
{
  swift_beginAccess();
  id v4 = a2;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_1003DD264(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v7 = 0;
  uint64_t v8 = *(void *)(a3 + 16);
  if (!v8)
  {
    swift_beginAccess();
    uint64_t v7 = *(void *)(a4 + 16);
    swift_bridgeObjectRetain();
  }
  swift_errorRetain();
  a1(v7, v8);
  swift_errorRelease();
  return swift_bridgeObjectRelease();
}

void sub_1003DD310(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (char *)[Strong actionContextFrom:0];
    swift_unknownObjectRelease();
  }
  else
  {
    id v11 = [objc_allocWithZone((Class)DOCAppearance) init];
    id v12 = [objc_allocWithZone((Class)DOCConfiguration) init];
    id v13 = [objc_allocWithZone((Class)UIViewController) init];
    unint64_t v14 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v41 = a3;
    id v15 = (objc_class *)type metadata accessor for DOCActionContext();
    uint64_t v16 = (char *)objc_allocWithZone(v15);
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v11;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v12;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v13;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(void *)&v16[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v14;
    v43.receiver = v16;
    v43.super_class = v15;
    uint64_t v10 = (char *)[v43 init];
    uint64_t v17 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10059B760;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v19 = sub_100073F48();
    *(void *)(v18 + 32) = 0xD000000000000010;
    *(void *)(v18 + 40) = 0x80000001005F0C20;
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v19;
    *(void *)(v18 + 64) = v19;
    *(void *)(v18 + 72) = a1;
    *(void *)(v18 + 80) = a2;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    a3 = v41;
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = swift_unknownObjectWeakLoadStrong();
  if (v20)
  {
    uint64_t v21 = *(void *)(v20 + OBJC_IVAR____TtC5Files27DOCColumnInfoViewController_itemInfoViewController);
    if (v21)
    {
      uint64_t v22 = (unint64_t *)(v21
                               + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_actionsForCurrentActivityViewController);
      swift_beginAccess();
      unint64_t v23 = *v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      unint64_t v23 = sub_100494A88((uint64_t)_swiftEmptyArrayStorage);
    }
    swift_unknownObjectRelease();
    if (*(void *)(v23 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_100042F50(a1, a2);
      if (v31)
      {
        id v29 = *(id *)(*(void *)(v23 + 56) + 8 * v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = a1;
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (!(a3 >> 62))
  {
    if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      unint64_t v42 = a3;
      unint64_t v24 = a3;
      goto LABEL_10;
    }
LABEL_24:
    uint64_t v33 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v37 = a1;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_10059B760;
    *(void *)(v38 + 56) = &type metadata for String;
    unint64_t v39 = sub_100073F48();
    *(void *)(v38 + 32) = 0xD000000000000010;
    *(void *)(v38 + 40) = 0x80000001005F0C20;
    *(void *)(v38 + 96) = &type metadata for String;
    *(void *)(v38 + 104) = v39;
    *(void *)(v38 + 64) = v39;
    *(void *)(v38 + 72) = v37;
    *(void *)(v38 + 80) = a2;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v36 < 1) {
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  unint64_t v24 = _bridgeCocoaArray<A>(_:)();
  unint64_t v42 = a3;
  swift_bridgeObjectRelease();
LABEL_10:
  unint64_t v25 = UIDocumentBrowserActionAvailabilityPreviewPanelActivitySheet;
  id v26 = *(id *)&v10[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  unint64_t v27 = sub_1003D66D4(v24, v25, 0, v26, 0);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRetain();
  uint64_t v28 = a1;
  id v29 = sub_1003E8554(v27, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
LABEL_21:
    uint64_t v33 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_10059B760;
    *(void *)(v34 + 56) = &type metadata for String;
    unint64_t v35 = sub_100073F48();
    *(void *)(v34 + 32) = 0xD000000000000010;
    *(void *)(v34 + 40) = 0x80000001005F0C20;
    *(void *)(v34 + 96) = &type metadata for String;
    *(void *)(v34 + 104) = v35;
    *(void *)(v34 + 64) = v35;
    *(void *)(v34 + 72) = v28;
    *(void *)(v34 + 80) = a2;
    swift_bridgeObjectRetain();
LABEL_25:
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    a5(0);
    goto LABEL_26;
  }
  a3 = v42;
LABEL_16:
  id v32 = v29;
  swift_bridgeObjectRetain();
  if (a3 >> 62)
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v40 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    a3 = v40;
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  sub_1003EC438(v32, a3, (uint64_t)v10);
  swift_bridgeObjectRelease();
  a5(1);

LABEL_26:
}

uint64_t sub_1003DD9FC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager____lazy_storage____lazyActions);
  }
  else
  {
    uint64_t v2 = (*(uint64_t (**)(void))(v0 + OBJC_IVAR____TtC5Files20DOCLazyActionManager_actionsClosure))();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1003DDBD8(uint64_t a1)
{
  id v1 = (id)(*(uint64_t (**)(void))(a1 + 16))();
  sub_10009E6C4(0, &qword_100708700);
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

void sub_1003DDCD8()
{
}

void sub_1003DDD00()
{
}

uint64_t sub_1003DDD30()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DDDC4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  id v4 = (char **)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v43 = (uint64_t)*(v4 - 1);
  __chkstk_darwin(v4);
  unint64_t v41 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v39 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v44 = v9;
    if (v10)
    {
LABEL_3:
      uint64_t v9 = 4;
      do
      {
        uint64_t v11 = v9 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v13 = v9 - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v12 = *(void *)(a1 + 8 * v9);
          swift_unknownObjectRetain();
          uint64_t v13 = v9 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        uint64_t v47 = v12;
        sub_1003DE564((id *)&v47, &v46);
        swift_unknownObjectRelease();
        if (v46)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v9;
      }
      while (v13 != v10);
      swift_bridgeObjectRelease();
      uint64_t v9 = v44;
      uint64_t v14 = aBlock[0];
      if ((unint64_t)aBlock[0] >> 62) {
        goto LABEL_31;
      }
LABEL_15:
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v15) {
        goto LABEL_16;
      }
LABEL_32:
      swift_bridgeObjectRelease_n();
      uint64_t v17 = 0;
      goto LABEL_33;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v44 = v9;
    if (v10) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
    goto LABEL_15;
  }
LABEL_31:
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  if (!v15) {
    goto LABEL_32;
  }
LABEL_16:
  uint64_t v34 = v4;
  uint64_t v16 = self;
  uint64_t v9 = 4;
  id v4 = &selRef_setManageButtonTitle_;
  while (1)
  {
    a1 = v9 - 4;
    if ((v14 & 0xC000000000000001) != 0)
    {
      uint64_t v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v18 = v9 - 3;
      if (__OFADD__(a1, 1)) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v17 = *(void **)(v14 + 8 * v9);
      swift_unknownObjectRetain();
      uint64_t v18 = v9 - 3;
      if (__OFADD__(a1, 1)) {
        goto LABEL_28;
      }
    }
    id v19 = [v16 sharedManager];
    unsigned int v20 = [v19 nodeRequiresAuthentication_Sync:v17];

    if (v20) {
      break;
    }
    swift_unknownObjectRelease();
    ++v9;
    if (v18 == v15)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = 0;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_26:
  id v4 = v34;
  uint64_t v9 = v44;
LABEL_33:
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v47 = sub_10009B0E4(0xD00000000000003CLL, 0x80000001005F0D00, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v47 = (uint64_t)v17;
    swift_unknownObjectRetain();
    sub_1000CBE70(&qword_100717520);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v47 = sub_10009B0E4(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s found first node requiring auth: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v9, v36);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v26 = (void *)static OS_dispatch_queue.main.getter();
  unint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v38;
  v27[2] = v37;
  v27[3] = v28;
  v27[4] = v17;
  aBlock[4] = (uint64_t)sub_1000D4A60;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  aBlock[3] = (uint64_t)&unk_1006A8D98;
  id v29 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v30 = v39;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  char v31 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v29);
  swift_unknownObjectRelease();

  (*(void (**)(char *, char **))(v43 + 8))(v31, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v30, v42);
}

id sub_1003DE564@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v35[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v35[-v10];
  id v12 = *a1;
  id result = [*a1 isFolder];
  if (result)
  {
    v43[2] = (uint64_t)&OBJC_PROTOCOL___FIAppLibrary;
    uint64_t v14 = swift_dynamicCastObjCProtocolConditional();
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v41 = v6;
      swift_unknownObjectRetain();
      static Logger.UI.getter();
      swift_unknownObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        unint64_t v39 = a2;
        uint64_t v19 = v18;
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v40 = v2;
        uint64_t v42 = sub_10009B0E4(0xD00000000000003CLL, 0x80000001005F0D00, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v19 + 12) = 2080;
        uint64_t v42 = v15;
        swift_unknownObjectRetain();
        sub_1000CBE70((uint64_t *)&unk_100714260);
        uint64_t v20 = String.init<A>(describing:)();
        uint64_t v42 = sub_10009B0E4(v20, v21, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s FINode is an app library: %s", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v39;
        swift_slowDealloc();
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v11, v5);
      goto LABEL_11;
    }
    self;
    id result = (id)swift_dynamicCastObjCClass();
    if (result)
    {
      os_log_type_t v22 = result;
      swift_unknownObjectRetain();
      id v23 = [v22 fp_appContainerBundleIdentifier];
      if (v23)
      {

        static Logger.UI.getter();
        swift_unknownObjectRetain_n();
        uint64_t v24 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.debug.getter();
        int v26 = v25;
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v27 = swift_slowAlloc();
          unint64_t v39 = a2;
          uint64_t v28 = v27;
          uint64_t v41 = swift_slowAlloc();
          v43[0] = v41;
          *(_DWORD *)uint64_t v28 = 136315394;
          os_log_t v38 = v24;
          uint64_t v42 = sub_10009B0E4(0xD00000000000003CLL, 0x80000001005F0D00, v43);
          uint64_t v40 = v2;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v28 + 12) = 2080;
          uint64_t v37 = v28 + 14;
          swift_unknownObjectRetain();
          id v29 = [v22 description];
          uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          int v36 = v26;
          uint64_t v31 = v6;
          unint64_t v33 = v32;
          swift_unknownObjectRelease();

          uint64_t v42 = sub_10009B0E4(v30, v33, v43);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          os_log_t v34 = v38;
          _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v36, "%s FPItem is an appcontainer: %s", (uint8_t *)v28, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          a2 = v39;
          swift_slowDealloc();
          swift_unknownObjectRelease();

          (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v9, v5);
        }
        else
        {

          swift_unknownObjectRelease_n();
          (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
        }
LABEL_11:
        *a2 = v12;
        return (id)swift_unknownObjectRetain();
      }
      id result = (id)swift_unknownObjectRelease();
    }
  }
  *a2 = 0;
  return result;
}

uint64_t sub_1003DEABC()
{
  void (*v4)(uint64_t *__return_ptr, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    id v4 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 16);
    uint64_t v5 = swift_retain();
    v4(&v8, v5);
    swift_release();
    uint64_t v3 = v8;
    uint64_t v6 = *(void *)(v1 + 32);
    *(void *)(v1 + 32) = v8;
    swift_bridgeObjectRetain();
    sub_1003ED230(v6);
  }
  sub_1003ED240(v2);
  return v3;
}

uint64_t sub_1003DEB44()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1003DEBD4()
{
  sub_1003DEB44();

  return swift_deallocClassInstance();
}

uint64_t sub_1003DEC28(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100521F28(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1003E2D54(v6);
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_1003DECA4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  type metadata accessor for URL();
  uint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v1(v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003DED18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)*v3;
  unint64_t v14 = sub_10017BB10(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
      return sub_1003EDB70(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_100355A8C();
    goto LABEL_7;
  }
  sub_100349EDC(v17, a3 & 1);
  unint64_t v24 = sub_10017BB10(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1003E237C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
}

id sub_1003DEF28(uint64_t a1, void *a2, char a3, char a4)
{
  uint64_t v5 = (void **)v4;
  char v8 = a3 & 1;
  uint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_10017BBE4(a2, a3 & 1);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = *v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7];
      uint64_t v19 = type metadata accessor for RestorableSettings(0);
      return (id)sub_1003EDB70(a1, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v11, type metadata accessor for RestorableSettings);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_100355CC4();
    goto LABEL_7;
  }
  sub_10034A744(v14, a4 & 1);
  unint64_t v21 = sub_10017BBE4(a2, v8);
  if ((v15 & 1) != (v22 & 1))
  {
LABEL_15:
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v11 = v21;
  uint64_t v17 = *v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1003E22C8(v11, (uint64_t)a2, v8, a1, v17);

  return a2;
}

uint64_t sub_1003DF0A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10017BCC0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
      return sub_1003EDB70(a1, v21 + *(void *)(*(void *)(updated - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_100355F48();
    goto LABEL_7;
  }
  sub_10034AA04(v17, a3 & 1);
  unint64_t v24 = sub_10017BCC0(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1003E237C(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
}

uint64_t sub_1003DF2B0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003E1AE0(a1, a2, a3, (void (*)(void))sub_100356300, (void (*)(void))sub_10034AF1C);
}

uint64_t sub_1003DF2DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100042F50(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10035630C();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 16 * v14;
      uint64_t result = sub_1000F7EE0(*(void *)v21, *(void *)(v21 + 8));
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034AF28(v17, a5 & 1);
  uint64_t v23 = sub_100042F50(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  char v25 = (uint64_t *)(v20[6] + 16 * v14);
  *char v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1003DF464(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10017BD94(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1003564D4();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v21 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v21;
      *(void *)(v19 + 32) = *(void *)(a1 + 32);
      return result;
    }
    goto LABEL_11;
  }
  sub_10034B238(v15, a4 & 1);
  uint64_t v22 = sub_10017BD94(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v24 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v24 = a2;
  v24[1] = a3;
  uint64_t v25 = v18[7] + 40 * v12;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 16) = v26;
  *(void *)(v25 + 32) = *(void *)(a1 + 32);
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v29;

  return sub_1000F7ECC(a2, a3);
}

uint64_t sub_1003DF610(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_10017BDC0(a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1003564F4();
      goto LABEL_7;
    }
    sub_10034B684(v17, a5 & 1);
    unint64_t v28 = sub_10017BDC0(a2, a3, a4);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      uint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7];
    uint64_t v22 = type metadata accessor for Date();
    uint64_t v23 = *(void *)(v22 - 8);
    char v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
    uint64_t v25 = v22;
    uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;
    return v24(v26, a1, v25);
  }
LABEL_13:
  sub_1003E2474(v14, a2, a3, a4, a1, v20);

  return sub_1002F81FC(a2, a3, a4);
}

uint64_t sub_1003DF7B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10017BDC0(a2, a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1003567D8();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 40 * v14;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v23 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)a1;
      *(_OWORD *)(v21 + 16) = v23;
      *(void *)(v21 + 32) = *(void *)(a1 + 32);
      return result;
    }
    goto LABEL_11;
  }
  sub_10034B978(v17, a5 & 1);
  unint64_t v24 = sub_10017BDC0(a2, a3, a4);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v26 = v20[6] + 24 * v14;
  *(void *)uint64_t v26 = a2;
  *(void *)(v26 + 8) = a3;
  *(unsigned char *)(v26 + 16) = a4;
  uint64_t v27 = v20[7] + 40 * v14;
  long long v28 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 16) = v28;
  *(void *)(v27 + 32) = *(void *)(a1 + 32);
  uint64_t v29 = v20[2];
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v31;

  return sub_1002F81FC(a2, a3, a4);
}

uint64_t sub_1003DF984(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, char a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10017BED8(a2, a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1003569DC();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = v20[6] + 24 * v14;
    *(void *)uint64_t v22 = a2;
    *(void *)(v22 + 8) = a3;
    *(unsigned char *)(v22 + 16) = a4;
    *(void *)(v20[7] + 8 * v14) = a1;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  sub_10034BBE4(result, a5 & 1);
  uint64_t result = sub_10017BED8(a2, a3, a4);
  if ((v18 & 1) == (v21 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003DFADC(uint64_t a1, Swift::UInt64 a2, Swift::UInt64 a3, char a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10017BED8(a2, a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a5 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100356B84();
LABEL_7:
    uint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 40 * v14;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v22 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v21 = *(_OWORD *)a1;
      *(_OWORD *)(v21 + 16) = v22;
      *(void *)(v21 + 32) = *(void *)(a1 + 32);
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v24 = v20[6] + 24 * v14;
    *(void *)uint64_t v24 = a2;
    *(void *)(v24 + 8) = a3;
    *(unsigned char *)(v24 + 16) = a4;
    uint64_t v25 = v20[7] + 40 * v14;
    long long v26 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
    *(_OWORD *)(v25 + 16) = v26;
    *(void *)(v25 + 32) = *(void *)(a1 + 32);
    uint64_t v27 = v20[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return result;
    }
    goto LABEL_14;
  }
  sub_10034BF14(result, a5 & 1);
  uint64_t result = sub_10017BED8(a2, a3, a4);
  if ((v18 & 1) == (v23 & 1))
  {
    unint64_t v14 = result;
    uint64_t v20 = (void *)*v6;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003DFC78(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10017BFA8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100356D80();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_unknownObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034C2A4(v15, a4 & 1);
  unint64_t v21 = sub_10017BFA8(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return sub_1002F81E8(a2, a3);
}

uint64_t sub_1003DFDEC(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10017BFA8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100356F38();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      long long v21 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v21;
      *(void *)(v19 + 32) = *(void *)(a1 + 32);
      return result;
    }
    goto LABEL_11;
  }
  sub_10034C5E0(v15, a4 & 1);
  unint64_t v22 = sub_10017BFA8(a2, a3);
  if ((v16 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v22;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v24 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v24 = a2;
  v24[1] = a3;
  uint64_t v25 = v18[7] + 40 * v12;
  long long v26 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
  *(_OWORD *)(v25 + 16) = v26;
  *(void *)(v25 + 32) = *(void *)(a1 + 32);
  uint64_t v27 = v18[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v29;

  return sub_1002F81E8(a2, a3);
}

void sub_1003DFF98(uint64_t a1, void *a2, char a3)
{
}

id sub_1003DFFEC(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1000A54AC(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100357340();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_release();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034CCAC(v12, a3 & 1);
  uint64_t v18 = sub_1000A54AC(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for FPProviderDomainID(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

uint64_t sub_1003E0150(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1000BBA9C(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1003574EC();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      _OWORD v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_10034CFCC(result, a3 & 1);
  uint64_t result = sub_1000BBA9C(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for UIUserInterfaceSizeClass(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E028C(_OWORD *a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10017C130((uint64_t)a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100357690();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034D2A8(result, a2 & 1);
  uint64_t result = sub_10017C130((uint64_t)a1);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  uint64_t v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  char v18 = (_OWORD *)(v16[6] + 160 * v10);
  long long v20 = a1[4];
  long long v19 = a1[5];
  long long v21 = a1[3];
  v18[2] = a1[2];
  v18[3] = v21;
  v18[4] = v20;
  v18[5] = v19;
  long long v22 = a1[1];
  *char v18 = *a1;
  v18[1] = v22;
  long long v23 = a1[6];
  long long v24 = a1[7];
  long long v25 = a1[9];
  v18[8] = a1[8];
  v18[9] = v25;
  void v18[6] = v23;
  v18[7] = v24;
  *(double *)(v16[7] + 8 * v10) = a3;
  uint64_t v26 = v16[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v16[2] = v28;

  return sub_10017FF50((uint64_t)a1);
}

_OWORD *sub_1003E0408(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10008E070(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_100357890();
      goto LABEL_7;
    }
    sub_10034D7AC(v13, a3 & 1);
    unint64_t v19 = sub_10008E070(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_10008E1D0(a2, (uint64_t)v21);
      return sub_1003E252C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  char v17 = (_OWORD *)(v16[7] + 32 * v10);
  sub_10009B1B8((uint64_t)v17);

  return sub_1000A54B0(a1, v17);
}

uint64_t sub_1003E0554(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  char v7 = a2 & 1;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10004F108(a2 & 1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100357D50();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = v7;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      _OWORD v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_10034DF04(result, a3 & 1);
  uint64_t result = sub_10004F108(v7);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E068C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_100042F50(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_100357EF4();
LABEL_7:
    BOOL v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034E1D8(v17, a5 & 1);
  uint64_t v23 = sub_100042F50(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  long long v25 = (uint64_t *)(v20[6] + 16 * v14);
  *long long v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_1003E0814(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100042F50(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10035860C();
      goto LABEL_7;
    }
    sub_10034EAD8(v15, a4 & 1);
    uint64_t v21 = sub_100042F50(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10009B1B8((uint64_t)v19);
    return sub_1000A54B0(a1, v19);
  }
LABEL_13:
  sub_1003E25A8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

id sub_1003E0968(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_1000A54AC(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_100358A8C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_10034F1FC(v12, a3 & 1);
  uint64_t v18 = sub_1000A54AC(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

void sub_1003E0ACC(uint64_t a1, char a2, void *a3, char a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = *v6;
  unint64_t v15 = sub_10017C240((uint64_t)a3);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v19 = v14;
  uint64_t v20 = *(void *)(v13 + 24);
  if (v20 >= v18 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_100358C38();
LABEL_7:
    uint64_t v21 = (void *)*v7;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7] + 32 * v15;

      *(double *)uint64_t v22 = a5;
      *(double *)(v22 + 8) = a6;
      *(void *)(v22 + 16) = a1;
      *(unsigned char *)(v22 + 24) = a2 & 1;
      return;
    }
    goto LABEL_11;
  }
  sub_10034F51C(v18, a4 & 1);
  unint64_t v23 = sub_10017C240((uint64_t)a3);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_17:
    sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v15 = v23;
  uint64_t v21 = (void *)*v7;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  v21[(v15 >> 6) + 8] |= 1 << v15;
  *(void *)(v21[6] + 8 * v15) = a3;
  uint64_t v25 = v21[7] + 32 * v15;
  *(double *)uint64_t v25 = a5;
  *(double *)(v25 + 8) = a6;
  *(void *)(v25 + 16) = a1;
  *(unsigned char *)(v25 + 24) = a2 & 1;
  uint64_t v26 = v21[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v21[2] = v28;

  id v29 = a3;
}

uint64_t sub_1003E0C7C(uint64_t a1, long long *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  long long v23 = *a2;
  unint64_t v10 = sub_10017F0CC(v23, *((uint64_t *)&v23 + 1));
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
      return sub_1003EDB70(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for ScrollPositionInfo.ItemOffset);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_100358FC4();
    goto LABEL_7;
  }
  sub_10034FB60(v13, a3 & 1);
  unint64_t v20 = sub_10017F0CC(v23, *((uint64_t *)&v23 + 1));
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  long long v22 = a2[1];
  sub_1003E2664(v10, (uint64_t)a2, a1, v16);
  sub_10021FE8C((uint64_t)&v23);
  sub_10021FE8C((uint64_t)&v22);
  return swift_retain();
}

void sub_1003E0DF8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10017C344((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10035963C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10034FF94(v12, a3 & 1);
  unint64_t v17 = sub_10017C344((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;

  id v23 = a2;
}

void sub_1003E0F6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100042F50(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100359648();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10034FFA0(v15, a4 & 1);
  uint64_t v20 = sub_100042F50(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

void sub_1003E10DC(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_10017C1F0((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1003597FC();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1003502B0(v12, a3 & 1);
  unint64_t v17 = sub_10017C1F0((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v22;

  id v23 = a2;
}

uint64_t sub_1003E1250(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003E1AE0(a1, a2, a3, (void (*)(void))sub_100359808, (void (*)(void))sub_1003502BC);
}

void sub_1003E127C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10008E070(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_1003599CC();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = 8 * v10;

      *(void *)(v17 + v18) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1003505B0(v13, a3 & 1);
  unint64_t v19 = sub_10008E070(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v10 = v19;
  uint64_t v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_10008E1D0(a2, (uint64_t)v27);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v21 = v16[6] + 40 * v10;
  uint64_t v22 = v28;
  long long v23 = v27[1];
  *(_OWORD *)uint64_t v21 = v27[0];
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = v22;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v24 = v16[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  _OWORD v16[2] = v26;
}

void sub_1003E13E0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v12 = (void *)*v3;
  unint64_t v14 = sub_10017BB10(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_100359BA8();
    goto LABEL_7;
  }
  sub_1003508C4(v17, a3 & 1);
  unint64_t v22 = sub_10017BB10(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100071838(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for URL);
}

id sub_1003E159C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10017C424((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_100359BC8();
      goto LABEL_7;
    }
    sub_100350CE8(v12, a3 & 1);
    unint64_t v23 = sub_10017C424((uint64_t)a2);
    if ((v13 & 1) == (v24 & 1))
    {
      unint64_t v9 = v23;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7];
    uint64_t v17 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v9;
    return (id)v19(v21, a1, v20);
  }
LABEL_13:
  sub_1003E2720(v9, (uint64_t)a2, a1, v15);

  return a2;
}

void sub_1003E171C(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), void (*a6)(void), void (*a7)(void))
{
  uint64_t v12 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a3 & 1) == 0)
  {
    a5();
LABEL_7:
    unint64_t v23 = (void *)*v12;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7];

      *(void *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  a6();
  uint64_t v25 = a4(a2);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_17:
    a7(0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v17 = v25;
  unint64_t v23 = (void *)*v12;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  uint64_t v27 = 8 * v17;
  *(void *)(v23[6] + v27) = a2;
  *(void *)(v23[7] + v27) = a1;
  uint64_t v28 = v23[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v30;

  id v31 = a2;
}

uint64_t sub_1003E18BC(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003E1AE0(a1, a2, a3, (void (*)(void))sub_10035A97C, (void (*)(void))sub_100351F80);
}

uint64_t sub_1003E18E8(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  uint64_t v7 = (void **)v6;
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (void *)*v6;
  unint64_t v20 = sub_10017BCC0(a1);
  uint64_t v21 = v18[2];
  BOOL v22 = (v19 & 1) == 0;
  uint64_t result = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
  }
  else
  {
    char v24 = v19;
    uint64_t v25 = v18[3];
    if (v25 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      char v26 = *v7;
      if (v24)
      {
LABEL_8:
        uint64_t v27 = (double *)(v26[7] + 32 * v20);
        *uint64_t v27 = a3;
        v27[1] = a4;
        _OWORD v27[2] = a5;
        v27[3] = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v25 >= result && (a2 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_10035A9A8();
      goto LABEL_7;
    }
    sub_100351F8C(result, a2 & 1);
    uint64_t result = sub_10017BCC0(a1);
    if ((v24 & 1) == (v28 & 1))
    {
      unint64_t v20 = result;
      char v26 = *v7;
      if (v24) {
        goto LABEL_8;
      }
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
      return sub_1003E27CC(v20, (uint64_t)v17, v26, a3, a4, a5, a6);
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E1AB4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1003E1AE0(a1, a2, a3, (void (*)(void))sub_10035AE24, (void (*)(void))sub_1003526EC);
}

uint64_t sub_1003E1AE0(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void))
{
  char v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_10008E070(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    unint64_t v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  a5();
  unint64_t v23 = sub_10008E070(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_16:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v8;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t result = sub_10008E1D0(a2, (uint64_t)v31);
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = v20[6] + 40 * v14;
  uint64_t v26 = v32;
  long long v27 = v31[1];
  *(_OWORD *)uint64_t v25 = v31[0];
  *(_OWORD *)(v25 + 16) = v27;
  *(void *)(v25 + 32) = v26;
  *(void *)(v20[7] + 8 * v14) = a1;
  uint64_t v28 = v20[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v20[2] = v30;
  return result;
}

void sub_1003E1C5C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10017C05C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10035B004();
    goto LABEL_7;
  }
  sub_100352A08(v17, a3 & 1);
  unint64_t v22 = sub_10017C05C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100071838(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode.DisplayableMode);
}

void sub_1003E1E18(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10017C05C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_10035B024();
    goto LABEL_7;
  }
  sub_100352E2C(v17, a3 & 1);
  unint64_t v22 = sub_10017C05C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_100071838(v14, (uint64_t)v11, a1, v20, (uint64_t (*)(void))&type metadata accessor for DOCItemSortMode.DisplayableMode);
}

id sub_1003E1FD4(long long *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10017C6D4((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_10035B2DC();
      goto LABEL_7;
    }
    sub_100353250(v12, a3 & 1);
    unint64_t v18 = sub_10017C6D4((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for DOCGoToRecentLocation();
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7] + 40 * v9;
    sub_10009B1B8(v16);
    return (id)sub_1001146DC(a1, v16);
  }
LABEL_13:
  sub_1003E28A0(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1003E211C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10017C394(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 < v13 || (a3 & 1) != 0)
    {
      sub_100353530(v13, a3 & 1);
      unint64_t v19 = sub_10017C394(a2);
      if ((v14 & 1) != (v20 & 1))
      {
LABEL_17:
        uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        __break(1u);
        return result;
      }
      unint64_t v10 = v19;
      uint64_t v16 = (void *)*v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
    sub_10035B4A8();
  }
  uint64_t v16 = (void *)*v4;
  if ((v14 & 1) == 0)
  {
LABEL_13:
    uint64_t result = sub_1000CE280(a2, (uint64_t)v32);
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v21 = v16[6] + 56 * v10;
    long long v22 = v32[2];
    long long v23 = v32[1];
    long long v24 = v32[0];
    *(void *)(v21 + 48) = v33;
    *(_OWORD *)uint64_t v21 = v24;
    *(_OWORD *)(v21 + 16) = v23;
    *(_OWORD *)(v21 + 32) = v22;
    uint64_t v25 = v16[7] + 56 * v10;
    uint64_t v26 = *(void *)(a1 + 48);
    long long v28 = *(_OWORD *)(a1 + 16);
    long long v27 = *(_OWORD *)(a1 + 32);
    *(_OWORD *)uint64_t v25 = *(_OWORD *)a1;
    *(_OWORD *)(v25 + 16) = v28;
    *(_OWORD *)(v25 + 32) = v27;
    *(void *)(v25 + 48) = v26;
    uint64_t v29 = v16[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (!v30)
    {
      _OWORD v16[2] = v31;
      return result;
    }
    goto LABEL_16;
  }
LABEL_8:
  uint64_t v17 = v16[7] + 56 * v10;

  return sub_1003ED0C4(a1, v17);
}

uint64_t sub_1003E22C8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a5[6] + 16 * a1;
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = a3 & 1;
  uint64_t v9 = a5[7];
  uint64_t v10 = type metadata accessor for RestorableSettings(0);
  uint64_t result = sub_10035CC88(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for RestorableSettings);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

uint64_t sub_1003E237C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v13 = a4[6];
  uint64_t v14 = a5(0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13 + *(void *)(*(void *)(v14 - 8) + 72) * a1, a2, v14);
  uint64_t v15 = a4[7];
  uint64_t v16 = a6(0);
  uint64_t result = sub_10035CC88(a3, v15 + *(void *)(*(void *)(v16 - 8) + 72) * a1, a7);
  uint64_t v18 = a4[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a4[2] = v20;
  }
  return result;
}

uint64_t sub_1003E2474(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a6[6] + 24 * a1;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(unsigned char *)(v9 + 16) = a4;
  uint64_t v10 = a6[7];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a5, v11);
  uint64_t v13 = a6[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a6[2] = v15;
  }
  return result;
}

_OWORD *sub_1003E252C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1000A54B0(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1003E25A8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  long long v6 = (void *)(a5[6] + 16 * a1);
  *long long v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1000A54B0(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1003E2614(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = a7[6] + 32 * result;
  *(void *)uint64_t v7 = a2;
  *(void *)(v7 + 8) = a3;
  *(void *)(v7 + 16) = a4;
  *(unsigned char *)(v7 + 24) = a5;
  *(void *)(a7[7] + 8 * result) = a6;
  uint64_t v8 = a7[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a7[2] = v10;
  }
  return result;
}

uint64_t sub_1003E2664(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = a4[6] + 40 * a1;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v7 = *(_OWORD *)a2;
  *(_OWORD *)(v7 + 16) = v8;
  *(void *)(v7 + 32) = *(void *)(a2 + 32);
  uint64_t v9 = a4[7];
  uint64_t v10 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  uint64_t result = sub_10035CC88(a3, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, type metadata accessor for ScrollPositionInfo.ItemOffset);
  uint64_t v12 = a4[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a4[2] = v14;
  }
  return result;
}

uint64_t sub_1003E2720(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for URL();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_1003E27CC(unint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  a3[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = a3[6];
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a2, v15);
  uint64_t v17 = (double *)(a3[7] + 32 * a1);
  double *v17 = a4;
  v17[1] = a5;
  v17[2] = a6;
  v17[3] = a7;
  uint64_t v18 = a3[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a3[2] = v20;
  }
  return result;
}

uint64_t sub_1003E28A0(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_1001146DC(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1003E290C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1003E2A94((unint64_t *)((char *)&v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_1003E2A94((unint64_t *)v9, v5, v3, a2);
    uint64_t v8 = v10;
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

void sub_1003E2A94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a2;
  uint64_t v35 = *(void *)(a3 + 16);
  if (!v35)
  {
    uint64_t v30 = 0;
    goto LABEL_29;
  }
  uint64_t v37 = a4 + 56;
  uint64_t v34 = a3 + 32;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v6 = 0;
  uint64_t v38 = v4;
  do
  {
    uint64_t v7 = *(void **)(v34 + 8 * v6);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v36 = v7;
    String.hash(into:)();
    Swift::Int v8 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v10 = v8 & ~v9;
    unint64_t v11 = v10 >> 6;
    uint64_t v12 = 1 << v10;
    if (((1 << v10) & *(void *)(v37 + 8 * (v10 >> 6))) == 0) {
      goto LABEL_3;
    }
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;
    if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = ~v9;
        for (unint64_t i = v10 + 1; ; unint64_t i = v21 + 1)
        {
          unint64_t v21 = i & v19;
          if (((*(void *)(v37 + (((i & v19) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v19)) & 1) == 0) {
            break;
          }
          uint64_t v4 = v38;
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
          {
            swift_bridgeObjectRelease_n();
LABEL_26:

            unint64_t v11 = v21 >> 6;
            uint64_t v12 = 1 << v21;
            goto LABEL_21;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_26;
          }
        }
LABEL_3:

        uint64_t v4 = v38;
        goto LABEL_4;
      }
    }

    uint64_t v4 = v38;
LABEL_21:
    unint64_t v28 = a1[v11];
    a1[v11] = v12 | v28;
    if ((v12 & v28) == 0 && __OFADD__(v32++, 1))
    {
      __break(1u);
      return;
    }
LABEL_4:
    ++v6;
  }
  while (v6 != v35);
  swift_bridgeObjectRelease();
  uint64_t v5 = a2;
  uint64_t v30 = v32;
LABEL_29:
  swift_retain();
  sub_10056C968(a1, v5, v30, v4);
}

Swift::Int sub_1003E2D54(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_1003E3620(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  Swift::Int v120 = result;
  unint64_t v117 = a1;
  if (v3 < 2)
  {
    Swift::Int v8 = (char *)_swiftEmptyArrayStorage;
    uint64_t v133 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v128 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v11 >= 2)
      {
        uint64_t v111 = *v117;
        do
        {
          unint64_t v112 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = *(void *)&v8[16 * v112 + 32];
          uint64_t v114 = *(void *)&v8[16 * v11 + 24];
          sub_1003E37A4((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(void *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::Int v8 = sub_100520230((uint64_t)v8);
          }
          if (v112 >= *((void *)v8 + 2)) {
            goto LABEL_147;
          }
          v115 = &v8[16 * v112 + 32];
          *(void *)v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v8 + 2);
          if (v11 > v116) {
            goto LABEL_148;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((void *)v8 + 2) = v116 - 1;
          unint64_t v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_10009E6C4(0, &qword_100708700);
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  Swift::Int v8 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v125 = v3;
  uint64_t v129 = *a1;
  while (2)
  {
    Swift::Int v12 = v9 + 1;
    Swift::Int v124 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_45;
    }
    uint64_t v121 = v8;
    uint64_t v13 = *(void **)(v10 + 8 * v9);
    id v14 = *(id *)(v10 + 8 * v12);
    id v15 = v13;
    id v16 = [v14 localizedTitle];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    id v20 = [v15 localizedTitle];
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23) {
      int v126 = 0;
    }
    else {
      int v126 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    Swift::Int v12 = v9 + 2;
    Swift::Int v3 = v125;
    if (v9 + 2 >= v125) {
      goto LABEL_36;
    }
    uint64_t v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      Swift::Int v130 = v12;
      char v27 = *(v25 - 1);
      id v28 = *v25;
      id v29 = v27;
      id v30 = [v28 localizedTitle];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      id v34 = [v29 localizedTitle];
      uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if (v126)
        {
          Swift::Int v8 = v121;
          Swift::Int v9 = v124;
          Swift::Int v3 = v125;
          uint64_t v10 = v129;
          Swift::Int v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v26 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 ^ v26)) {
        break;
      }
LABEL_25:
      Swift::Int v12 = v130 + 1;
      ++v25;
      Swift::Int v3 = v125;
      if (v125 == v130 + 1)
      {
        Swift::Int v12 = v125;
        goto LABEL_35;
      }
    }
    Swift::Int v3 = v125;
    Swift::Int v12 = v130;
LABEL_35:
    Swift::Int v9 = v124;
LABEL_36:
    Swift::Int v8 = v121;
    uint64_t v10 = v129;
    if (v126)
    {
LABEL_37:
      if (v12 < v9) {
        goto LABEL_151;
      }
      if (v9 < v12)
      {
        unint64_t v39 = (uint64_t *)(v119 + 8 * v12);
        Swift::Int v40 = v12;
        Swift::Int v41 = v9;
        uint64_t v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10) {
              goto LABEL_156;
            }
            uint64_t v43 = *v42;
            *uint64_t v42 = *v39;
            *unint64_t v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3) {
      goto LABEL_68;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_149;
    }
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9) {
        goto LABEL_144;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::Int v8 = sub_10051F91C(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v63 = *((void *)v8 + 2);
      unint64_t v62 = *((void *)v8 + 3);
      unint64_t v11 = v63 + 1;
      if (v63 >= v62 >> 1) {
        Swift::Int v8 = sub_10051F91C((char *)(v62 > 1), v63 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      unint64_t v64 = v8 + 32;
      unint64_t v65 = &v8[16 * v63 + 32];
      *(void *)unint64_t v65 = v9;
      *((void *)v65 + 1) = v12;
      Swift::Int v132 = v12;
      if (!v63)
      {
        unint64_t v11 = 1;
LABEL_14:
        Swift::Int v3 = v125;
        Swift::Int v9 = v132;
        if (v132 >= v125) {
          goto LABEL_116;
        }
        continue;
      }
      while (1)
      {
        unint64_t v66 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v71 = &v64[16 * v11];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_133;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_134;
          }
          unint64_t v78 = v11 - 2;
          id v79 = &v64[16 * v11 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_136;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_139;
          }
          if (v83 >= v74)
          {
            v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_143;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v95 = *((void *)v8 + 4);
            uint64_t v96 = *((void *)v8 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_99;
          }
          uint64_t v68 = *((void *)v8 + 4);
          uint64_t v67 = *((void *)v8 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_135;
        }
        unint64_t v78 = v11 - 2;
        uint64_t v84 = &v64[16 * v11 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_138;
        }
        char v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_141;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_142;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_105:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v89) {
          goto LABEL_137;
        }
        BOOL v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_140;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10) {
          goto LABEL_155;
        }
        id v106 = &v64[16 * v105];
        uint64_t v107 = *(void *)v106;
        uint64_t v108 = &v64[16 * v66];
        uint64_t v109 = *((void *)v108 + 1);
        sub_1003E37A4((void **)(v10 + 8 * *(void *)v106), (id *)(v10 + 8 * *(void *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1) {
          goto LABEL_127;
        }
        if (v109 < v107) {
          goto LABEL_130;
        }
        if (v66 > *((void *)v8 + 2)) {
          goto LABEL_131;
        }
        *(void *)id v106 = v107;
        *(void *)&v64[16 * v105 + 8] = v109;
        unint64_t v110 = *((void *)v8 + 2);
        if (v66 >= v110) {
          goto LABEL_132;
        }
        unint64_t v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((void *)v8 + 2) = v110 - 1;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v120)) {
    goto LABEL_152;
  }
  if (v9 + v120 >= v3) {
    Swift::Int v44 = v3;
  }
  else {
    Swift::Int v44 = v9 + v120;
  }
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      unint64_t v122 = v8;
      Swift::Int v123 = v44;
      uint64_t v45 = v119 + 8 * v12;
      do
      {
        uint64_t v47 = *(void **)(v10 + 8 * v12);
        uint64_t v127 = v45;
        Swift::Int v131 = v12;
        while (1)
        {
          uint64_t v48 = *(void **)v45;
          id v49 = v47;
          id v50 = v48;
          id v51 = [v49 localizedTitle];
          uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v54 = v53;

          id v55 = [v50 localizedTitle];
          uint64_t v56 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v10 = v129;
            Swift::Int v46 = v131;
            goto LABEL_56;
          }
          char v60 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v129;
          if ((v60 & 1) == 0) {
            break;
          }
          if (!v129) {
            goto LABEL_154;
          }
          uint64_t v61 = *(void **)v45;
          uint64_t v47 = *(void **)(v45 + 8);
          *(void *)uint64_t v45 = v47;
          *(void *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          Swift::Int v46 = v131;
          if (v131 == v9) {
            goto LABEL_56;
          }
        }
        Swift::Int v46 = v131;
LABEL_56:
        Swift::Int v12 = v46 + 1;
        uint64_t v45 = v127 + 8;
        Swift::Int v9 = v124;
      }
      while (v12 != v123);
      Swift::Int v12 = v123;
      Swift::Int v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E3620(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v25 + 8 * a3);
    uint64_t v7 = v23;
    uint64_t v24 = v4;
    uint64_t v26 = a3;
    while (1)
    {
      Swift::Int v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = [v9 localizedTitle];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      id v15 = [v10 localizedTitle];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        Swift::Int result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v24 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      uint64_t v5 = v26;
      if ((v20 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v25) {
        break;
      }
      uint64_t v21 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003E37A4(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  uint64_t v61 = __src;
  char v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    id v51 = v4;
    uint64_t v31 = &v4[v13];
    uint64_t v59 = v31;
    uint64_t v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_10051FAE0(&v61, &v60, &v59);
      return 1;
    }
    uint64_t v32 = v6;
    uint64_t v56 = v7;
    while (1)
    {
      uint64_t v52 = v31;
      uint64_t v54 = v6;
      uint64_t v58 = v5;
      id v34 = *--v31;
      uint64_t v33 = v34;
      uint64_t v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = [v36 localizedTitle];
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v41 = v40;

      id v42 = [v37 localizedTitle];
      uint64_t v43 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v58;
      uint64_t v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      uint64_t v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        *uint64_t v5 = *v32;
      }
      uint64_t v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        uint64_t v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v48 = v58;
    uint64_t v5 = v58 - 1;
LABEL_46:
    uint64_t v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    uint64_t v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      *uint64_t v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v53 = &v4[v10];
    uint64_t v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v57 = v5;
      while (1)
      {
        id v55 = v7;
        uint64_t v14 = v6;
        id v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = [v16 localizedTitle];
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;

        id v22 = [v17 localizedTitle];
        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        id v28 = v14 + 1;
        id v29 = v55;
        id v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          char *v55 = *v14;
        }
LABEL_26:
        uint64_t v7 = v29 + 1;
        if (v4 < v53)
        {
          uint64_t v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        uint64_t v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      id v29 = v55;
      id v30 = v57;
      if (v55 != v4) {
        char *v55 = *v4;
      }
      char v60 = ++v4;
      id v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1003E3BBC(unint64_t a1)
{
  sub_1000CBE70(&qword_100714288);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B7A0;
  Swift::Int v3 = (void *)FPActionTrash;
  *(void *)(inited + 32) = FPActionTrash;
  id v4 = v3;
  id v5 = sub_100156808();
  uint64_t v6 = (void *)FPActionUntrash;
  *(void *)(inited + 40) = v5;
  *(void *)(inited + 48) = v6;
  id v7 = v6;
  id v8 = sub_100156A98();
  int64_t v9 = (void *)FPActionRename;
  *(void *)(inited + 56) = v8;
  *(void *)(inited + 64) = v9;
  id v10 = v9;
  id v11 = sub_100156CD4();
  uint64_t v12 = (void *)FPActionReparent;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = v12;
  if (a1 >> 62)
  {
    id v37 = v12;
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v14 = v12;
  }
  id v15 = sub_100157004(v13);
  id v16 = (void *)FPActionDelete;
  *(void *)(inited + 88) = v15;
  *(void *)(inited + 96) = v16;
  id v17 = v16;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v19 = result;
    v44._object = (void *)0x80000001005F0ED0;
    v20._uint64_t countAndFlagsBits = 0x4E206574656C6544;
    v20._object = (void *)0xEA0000000000776FLL;
    v21._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v21._object = (void *)0xEB00000000656C62;
    v22._uint64_t countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v44._uint64_t countAndFlagsBits = 0xD000000000000044;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v44);

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v23 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    swift_bridgeObjectRetain();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v42 = sub_100152290;
    uint64_t v43 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    uint64_t v41 = &unk_1006A8F00;
    uint64_t v26 = _Block_copy(aBlock);
    id v27 = [v23 initWithIdentifier:v24 localizedTitle:v25 unresolvedHandler:v26];

    _Block_release(v26);
    swift_release();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = [self systemImageNamed:v28];

    [v27 setImage:v29];
    [v27 setAvailability:UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1];
    [v27 setNavigationSide:1];
    [v27 setMenuSortOrder:28];
    [v27 setActionStyle:1];
    [v27 setRequiresFullyFormedItems:0];
    swift_bridgeObjectRelease();
    *(void *)(inited + 104) = v27;
    unint64_t v30 = sub_10049574C(inited);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v31 = objc_allocWithZone((Class)NSUserDefaults);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v33 = [v31 initWithSuiteName:v32];

    if (v33)
    {
      if ([v33 valueForKey:DOCUserDefaultsKeyCopyLinkUIEnabled])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v39, 0, sizeof(v39));
      }
      sub_1000516C4((uint64_t)v39, (uint64_t)aBlock);
      if (v41)
      {
        if ((swift_dynamicCast() & 1) != 0 && v38 == 1)
        {
          id v34 = FPActionFetchPublishingURL;
          id v35 = sub_1001574B8();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          aBlock[0] = v30;
          sub_1003E171C((uint64_t)v35, v34, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_1000A54AC, (void (*)(void))sub_10035A724, (void (*)(void))sub_100351790, type metadata accessor for FPAction);
          unint64_t v30 = aBlock[0];

          swift_bridgeObjectRelease();
        }
        else
        {
        }
      }
      else
      {

        sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
      }
    }
    return (id)v30;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1003E40F0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  id result = (void *)swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (v7) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v13 = v10 + 1;
  if (!__OFADD__(v10, 1))
  {
    if (v13 < v8)
    {
      unint64_t v14 = *(void *)(v4 + 8 * v13);
      ++v10;
      if (v14) {
        goto LABEL_23;
      }
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v10 = v13 + 2;
      if (v13 + 2 >= v8) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v10 = v13 + 3;
      if (v13 + 3 >= v8) {
        goto LABEL_31;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (v14)
      {
LABEL_23:
        unint64_t v7 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v10 << 6); ; unint64_t i = v11 | (v10 << 6))
        {
          id v16 = *(id *)(*(void *)(a1 + 48) + 8 * i);
          id v17 = sub_1003E3BBC(a2);
          if (!v17[2]) {
            break;
          }
          id v18 = v16;
          uint64_t v19 = sub_1000A54AC();
          if ((v20 & 1) == 0)
          {

LABEL_6:
            id result = (void *)swift_bridgeObjectRelease();
            if (!v7) {
              goto LABEL_8;
            }
            goto LABEL_7;
          }
          id v21 = *(id *)(v17[7] + 8 * v19);

          swift_bridgeObjectRelease();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          id result = (void *)specialized Array._endMutation()();
          if (!v7) {
            goto LABEL_8;
          }
LABEL_7:
          unint64_t v11 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }

        goto LABEL_6;
      }
      int64_t v15 = v13 + 4;
      if (v15 < v8)
      {
        unint64_t v14 = *(void *)(v4 + 8 * v15);
        if (v14)
        {
          int64_t v10 = v15;
          goto LABEL_23;
        }
        while (1)
        {
          int64_t v10 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_33;
          }
          if (v10 >= v8) {
            break;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          ++v15;
          if (v14) {
            goto LABEL_23;
          }
        }
      }
    }
LABEL_31:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *sub_1003E4320(unint64_t a1, void *a2, void **a3, uint64_t a4)
{
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v8 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * i);
      int64_t v9 = v8;
      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v16 = v8;
      sub_1003D8D8C(&v16, a2, a3, a4, &v15);
      if (v4)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v15)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v10 == v6)
      {
        swift_bridgeObjectRelease();
        return (void *)v17;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1003E44C4(unint64_t a1, void (**a2)(char *, uint64_t), void *a3)
{
  uint64_t v4 = v3;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t v7 = _swiftEmptyArrayStorage;
    if (!v6) {
      return (uint64_t)v7;
    }
    Swift::String v22 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100190C00(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0) {
      break;
    }
    uint64_t v9 = 0;
    unint64_t v7 = v22;
    while (v6 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      unint64_t v11 = v10;
      id v19 = v10;
      sub_1003D6128((uint64_t *)&v19, a2, a3, (uint64_t)&v20);
      if (v4)
      {
        swift_release();

        return (uint64_t)v7;
      }
      uint64_t v4 = 0;

      uint64_t v12 = v20;
      char v13 = v21;
      Swift::String v22 = v7;
      unint64_t v15 = v7[2];
      unint64_t v14 = v7[3];
      if (v15 >= v14 >> 1)
      {
        sub_100190C00(v14 > 1, v15 + 1, 1);
        unint64_t v7 = v22;
      }
      ++v9;
      v7[2] = v15 + 1;
      id v16 = &v7[2 * v15];
      void v16[4] = v12;
      *((unsigned char *)v16 + 40) = v13;
      if (v6 == v9) {
        return (uint64_t)v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_1003E4658(char a1)
{
  if (a1)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v2 = result;
      v29._object = (void *)0x80000001005D4DE0;
      v3._uint64_t countAndFlagsBits = 0x6574656C6544;
      v3._object = (void *)0xE600000000000000;
      v4._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v4._object = (void *)0xEB00000000656C62;
      v5._uint64_t countAndFlagsBits = 0;
      v5._object = (void *)0xE000000000000000;
      v29._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v29);

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v6 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      swift_bridgeObjectRetain();
      NSString v7 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = sub_100152290;
      uint64_t v28 = 0;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v24 = 1107296256;
      NSString v25 = sub_100156760;
      uint64_t v26 = &unk_1006A8FC8;
      uint64_t v9 = _Block_copy(&aBlock);
      id v10 = [v6 initWithIdentifier:v7 localizedTitle:v8 unresolvedHandler:v9];

      _Block_release(v9);
      swift_release();
      NSString v11 = String._bridgeToObjectiveC()();
      id v12 = [self systemImageNamed:v11];

      [v10 setImage:v12];
      [v10 setAvailability:UIDocumentBrowserActionAvailabilityPreviewQuickActions | 1];
      [v10 setNavigationSide:1];
      [v10 setMenuSortOrder:28];
      [v10 setActionStyle:1];
      [v10 setRequiresFullyFormedItems:0];
      swift_bridgeObjectRelease();
      return v10;
    }
    __break(1u);
  }
  else
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      char v13 = result;
      v30._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
      v30._object = (void *)0x80000001005F0F20;
      v14._uint64_t countAndFlagsBits = 0x41206574656C6544;
      v14._object = (void *)0xEA00000000006C6CLL;
      v15._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v15._object = (void *)0xEB00000000656C62;
      v16._uint64_t countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v30);

      id v17 = objc_allocWithZone((Class)UIDocumentBrowserAction);
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v27 = sub_100152290;
      uint64_t v28 = 0;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v24 = 1107296256;
      NSString v25 = sub_100156760;
      uint64_t v26 = &unk_1006A8FA0;
      uint64_t v20 = _Block_copy(&aBlock);
      id v10 = [v17 initWithIdentifier:v18 localizedTitle:v19 unresolvedHandler:v20];

      _Block_release(v20);
      swift_release();
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = [self systemImageNamed:v21];

      [v10 setImage:v22];
      [v10 setAvailability:1];
      [v10 setNavigationSide:1];
      [v10 setMenuSortOrder:28];
      [v10 setActionStyle:1];
      [v10 setRequiresFullyFormedItems:0];
      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E4B20(unint64_t a1)
{
  Swift::Int v2 = a1;
  int64_t v3 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_81;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_3:
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  unint64_t v48 = v2;
  if (v3 || (v5 = isUniquelyReferenced_nonNull_bridgeObject, uint64_t v6 = v2, (v5 & 1) == 0))
  {
    uint64_t v6 = sub_1000BC324(v2);
    unint64_t v48 = v6;
  }
  unint64_t v47 = v2;
  uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v8)
  {
    Swift::Int v2 = 0;
    uint64_t v9 = v7 + 32;
    uint64_t v10 = v7 + 24;
    while (1)
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      char v12 = DOCNode.isFINode.getter();
      swift_unknownObjectRelease();
      if (v12)
      {
        if (v2 >= v8 - 1) {
          goto LABEL_17;
        }
        char v13 = (void *)(v10 + 8 * v8--);
        while (1)
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          char v14 = DOCNode.isFINode.getter();
          swift_unknownObjectRelease();
          if ((v14 & 1) == 0) {
            break;
          }
          --v8;
          --v13;
          if (v2 >= v8) {
            goto LABEL_17;
          }
        }
        uint64_t v11 = *(void *)(v9 + 8 * v2);
        *(void *)(v9 + 8 * v2) = *v13;
        void *v13 = v11;
      }
      if (++v2 >= v8) {
        goto LABEL_17;
      }
    }
  }
  Swift::Int v2 = 0;
LABEL_17:
  specialized Array._endMutation()();
  id v15 = (id)(v48 >> 62);
  if (v48 >> 62) {
    goto LABEL_84;
  }
  int64_t v3 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3 >= v2) {
    goto LABEL_19;
  }
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  swift_bridgeObjectRetain();
  uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v45 < 0)
  {
LABEL_101:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  int64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v3 >= v2) {
    goto LABEL_40;
  }
LABEL_92:
  __break(1u);
LABEL_93:
  __break(1u);
  do
  {
    swift_bridgeObjectRetain_n();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (!v8) {
      goto LABEL_95;
    }
LABEL_60:
    unint64_t v35 = v3 & 0xC000000000000001;
    unint64_t v1 = 4;
    while (1)
    {
      unint64_t v36 = v1 - 4;
      if (v35)
      {
        id v37 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        Swift::Int v2 = v1 - 3;
        if (__OFADD__(v36, 1)) {
          goto LABEL_80;
        }
      }
      else
      {
        id v37 = *(char **)(v3 + 8 * v1);
        swift_unknownObjectRetain();
        Swift::Int v2 = v1 - 3;
        if (__OFADD__(v36, 1)) {
          goto LABEL_80;
        }
      }
      unsigned int v38 = [v37 isSharedByCurrentUser:v46];
      if (v47)
      {
        swift_bridgeObjectRetain();
        if (!_CocoaArrayWrapper.endIndex.getter())
        {
LABEL_77:
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = 0;
          goto LABEL_96;
        }
      }
      else
      {
        uint64_t v39 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v39) {
          goto LABEL_77;
        }
      }
      if (v35)
      {
        uint64_t v40 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_74;
      }
      if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      uint64_t v40 = *(char **)(v3 + 32);
      swift_unknownObjectRetain();
LABEL_74:
      swift_bridgeObjectRelease();
      id v15 = [v40 isSharedByCurrentUser];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      if (((v38 ^ v15) & 1) == 0)
      {
        ++v1;
        if (v2 != v8) {
          continue;
        }
      }
      uint64_t v33 = v38 ^ v15 ^ 1;
      goto LABEL_96;
    }
    __break(1u);
LABEL_84:
    swift_bridgeObjectRetain();
    int64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v3 < v2)
    {
      __break(1u);
LABEL_100:
      __break(1u);
      goto LABEL_101;
    }
    swift_bridgeObjectRetain();
    uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v43 < v2) {
      goto LABEL_100;
    }
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v44 < v3)
    {
      __break(1u);
      goto LABEL_88;
    }
LABEL_19:
    if (v3 < 0) {
      goto LABEL_89;
    }
    unint64_t v1 = v48 & 0xC000000000000001;
    if ((v48 & 0xC000000000000001) == 0 || v2 == v3) {
      goto LABEL_25;
    }
    if (v2 >= (unint64_t)v3) {
      goto LABEL_93;
    }
    Swift::Int v16 = v2;
    do
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      _ArrayBuffer._typeCheckSlowPath(_:)(v16++);
    }
    while (v3 != v16);
LABEL_25:
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = _CocoaArrayWrapper.subscript.getter();
      int64_t v3 = (int64_t)v19;
      unint64_t v18 = v20;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = v48 & 0xFFFFFFFFFFFFFF8;
      unint64_t v18 = (2 * v3) | 1;
      swift_bridgeObjectRetain();
      int64_t v3 = v2;
    }
    int64_t v21 = v18 >> 1;
    if (v3 != v18 >> 1)
    {
      uint64_t v46 = v17;
      swift_unknownObjectRetain();
      unint64_t v1 = v21 - 1;
      while (v3 < v21)
      {
        self;
        unsigned int v22 = [(id)swift_dynamicCastObjCClassUnconditional() nodePermissions:6291456];
        LOBYTE(v8) = v22 == 0;
        if (v22) {
          BOOL v23 = v1 == v3;
        }
        else {
          BOOL v23 = 1;
        }
        ++v3;
        if (v23)
        {
          swift_unknownObjectRelease();
          unint64_t v1 = v48 & 0xC000000000000001;
          goto LABEL_38;
        }
      }
      __break(1u);
      goto LABEL_79;
    }
    LOBYTE(v8) = 0;
LABEL_38:
    swift_unknownObjectRelease();
    if (v15) {
      goto LABEL_90;
    }
    int64_t v3 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3 < v2) {
      goto LABEL_92;
    }
LABEL_40:
    if (v2 && v1)
    {
      for (Swift::Int i = 0; i != v2; ++i)
      {
        sub_1000CBE70((uint64_t *)&unk_100706730);
        _ArrayBuffer._typeCheckSlowPath(_:)(i);
      }
    }
    if (v15)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v25 = v27;
      Swift::Int v26 = v28;
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      Swift::Int v2 = v30 >> 1;
      if (v26 == v2) {
        goto LABEL_56;
      }
LABEL_48:
      swift_unknownObjectRetain();
      uint64_t v31 = FPActionDelete;
      id v15 = (id)FPActionTrash;
      int64_t v3 = (int64_t)&selRef_cellForItemAtIndexPath_;
      while (v26 < v2)
      {
        unint64_t v1 = *(void *)(v25 + 8 * v26);
        if ([(id)swift_unknownObjectRetain() canPerform:v31])
        {
          swift_unknownObjectRelease();
        }
        else
        {
          unsigned __int8 v32 = [(id)v1 canPerform:v15];
          swift_unknownObjectRelease();
          if ((v32 & 1) == 0)
          {
            swift_unknownObjectRelease_n();
            goto LABEL_57;
          }
        }
        if (v2 == ++v26)
        {
          swift_unknownObjectRelease();
          goto LABEL_56;
        }
      }
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      swift_bridgeObjectRetain();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v41) {
        return 0;
      }
      goto LABEL_3;
    }
    uint64_t v25 = (v48 & 0xFFFFFFFFFFFFFF8) + 32;
    swift_bridgeObjectRetain();
    Swift::Int v26 = 0;
    if (v2) {
      goto LABEL_48;
    }
LABEL_56:
    swift_unknownObjectRelease();
    if (v8)
    {
LABEL_57:
      uint64_t v33 = 0;
      goto LABEL_97;
    }
    unint64_t v34 = swift_bridgeObjectRetain();
    int64_t v3 = (int64_t)sub_100158554(v34);
    swift_bridgeObjectRelease();
    unint64_t v47 = (unint64_t)v3 >> 62;
  }
  while ((unint64_t)v3 >> 62);
  uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v8) {
    goto LABEL_60;
  }
LABEL_95:
  uint64_t v33 = 1;
LABEL_96:
  swift_bridgeObjectRelease_n();
LABEL_97:
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_1003E5230(unint64_t a1, void *a2)
{
  Swift::String v4 = (void *)(a1 >> 62);
  if (a1 >> 62) {
    goto LABEL_40;
  }
  if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    goto LABEL_36;
  }
LABEL_3:
  if (a2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (!v5)
      {
LABEL_19:
        swift_bridgeObjectRelease();
        if ((sub_1000301E0(FPActionCopy, a1) & 1) == 0) {
          goto LABEL_35;
        }
        uint64_t v11 = (void *)FPActionImportHere;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
        *(void *)(inited + 32) = a2;
        unint64_t v19 = inited;
        specialized Array._endMutation()();
        swift_unknownObjectRetain();
        char v13 = sub_1000301E0(v11, v19);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        return v13 & 1;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      if (!v5) {
        goto LABEL_19;
      }
    }
    uint64_t v7 = 4;
    while (1)
    {
      uint64_t v8 = v7 - 4;
      if ((a1 & 0xC000000000000001) != 0)
      {
        Swift::String v4 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = v7 - 3;
        if (__OFADD__(v8, 1)) {
          goto LABEL_38;
        }
      }
      else
      {
        Swift::String v4 = *(void **)(a1 + 8 * v7);
        swift_unknownObjectRetain();
        uint64_t v9 = v7 - 3;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
      }
      unsigned __int8 v10 = [v4 isAppContainer];
      swift_unknownObjectRelease();
      if (v10)
      {
        swift_unknownObjectRelease();
        goto LABEL_22;
      }
      ++v7;
      if (v9 == v5) {
        goto LABEL_19;
      }
    }
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      char v13 = 1;
      return v13 & 1;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_33;
    }
  }
  uint64_t v14 = 4;
  while (1)
  {
    Swift::String v4 = (void *)(v14 - 4);
    if ((a1 & 0xC000000000000001) != 0)
    {
      a2 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v15 = v14 - 3;
      if (__OFADD__(v4, 1))
      {
LABEL_39:
        __break(1u);
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v18 < 1) {
          goto LABEL_36;
        }
        goto LABEL_3;
      }
    }
    else
    {
      a2 = *(void **)(a1 + 8 * v14);
      swift_unknownObjectRetain();
      uint64_t v15 = v14 - 3;
      if (__OFADD__(v4, 1)) {
        goto LABEL_39;
      }
    }
    if (![a2 isWritable]) {
      break;
    }
    unsigned __int8 v16 = [a2 isAppContainer];
    swift_unknownObjectRelease();
    if (v16)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    ++v14;
    if (v15 == v6) {
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  swift_unknownObjectRelease();
LABEL_36:
  char v13 = 0;
  return v13 & 1;
}

void *sub_1003E5508(unint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      sub_1000CBE70(&qword_10070CE50);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A0230;
      uint64_t v15 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
      *(void *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
      unsigned __int8 v16 = (void *)DOCDocumentSourceIdentifierTaggedItems;
      uint64_t v17 = (void *)DOCDocumentSourceIdentifierSearch;
      *(void *)(inited + 40) = DOCDocumentSourceIdentifierTaggedItems;
      *(void *)(inited + 48) = v17;
      id v18 = v15;
      id v19 = v16;
      id v20 = v17;
      char v21 = sub_100082AC0(a4, inited);
      swift_setDeallocating();
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      swift_arrayDestroy();
      if (v21)
      {
        id v22 = sub_1003D9208();
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v59 >= 1) {
            goto LABEL_9;
          }
        }
        else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
        {
LABEL_9:
          id v23 = sub_1003D9208();
          id v24 = [v23 filteringPredicate];

          sub_1000CBE70((uint64_t *)&unk_1007141D0);
          uint64_t v25 = swift_initStackObject();
          *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
          *(void *)(v25 + 32) = 0x7365646F4E636F64;
          *(void *)(v25 + 40) = 0xE800000000000000;
          *(void *)(v25 + 48) = a1;
          swift_bridgeObjectRetain();
          sub_10049342C(v25);
          sub_1000CBE70((uint64_t *)&unk_100707B20);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          unsigned __int16 v27 = (unsigned __int16)[v24 evaluateWithObject:isa];

LABEL_38:
          unint64_t v29 = sub_10018F04C(0, 1, 1, _swiftEmptyArrayStorage);
          unint64_t v61 = v29[2];
          unint64_t v60 = v29[3];
          int64_t v62 = v60 >> 1;
          unint64_t v63 = v61 + 1;
          if (v60 >> 1 <= v61)
          {
            unint64_t v29 = sub_10018F04C((void *)(v60 > 1), v61 + 1, 1, v29);
            unint64_t v60 = v29[3];
            int64_t v62 = v60 >> 1;
          }
          v29[2] = v63;
          unint64_t v64 = &v29[2 * v61];
          v64[4] = v22;
          *((_WORD *)v64 + 20) = v27 | 0x100;
          if (v62 < (uint64_t)(v61 + 2)) {
            unint64_t v29 = sub_10018F04C((void *)(v60 > 1), v61 + 2, 1, v29);
          }
          v29[2] = v61 + 2;
          unint64_t v65 = &v29[2 * v63];
          v65[4] = 0;
          *((_WORD *)v65 + 20) = 0;
          id v66 = sub_100157004(1);
          char v67 = sub_1000301E0(FPActionReparent, a1);
          unint64_t v69 = v29[2];
          unint64_t v68 = v29[3];
          int64_t v70 = v68 >> 1;
          unint64_t v71 = v69 + 1;
          if (v68 >> 1 <= v69)
          {
            unint64_t v29 = sub_10018F04C((void *)(v68 > 1), v69 + 1, 1, v29);
            unint64_t v68 = v29[3];
            int64_t v70 = v68 >> 1;
          }
          v29[2] = v71;
          uint64_t v72 = &v29[2 * v69];
          v72[4] = v66;
          *((_WORD *)v72 + 20) = v67 & 1 | 0x100;
          if (v70 < (uint64_t)(v69 + 2)) {
            unint64_t v29 = sub_10018F04C((void *)(v68 > 1), v69 + 2, 1, v29);
          }
          v29[2] = v69 + 2;
          uint64_t v73 = &v29[2 * v71];
          v73[4] = 0;
          *((_WORD *)v73 + 20) = 0;
          id v74 = sub_10015824C();
          char v75 = sub_1003E4B20(a1);
          unint64_t v77 = v29[2];
          unint64_t v76 = v29[3];
          if (v77 >= v76 >> 1) {
            unint64_t v29 = sub_10018F04C((void *)(v76 > 1), v77 + 1, 1, v29);
          }
          v29[2] = v77 + 1;
          unint64_t v78 = &v29[2 * v77];
          v78[4] = v74;
          *((_WORD *)v78 + 20) = v75 & 1 | 0x100;
          return v29;
        }
        unsigned __int16 v27 = 0;
        goto LABEL_38;
      }
      uint64_t v52 = a3;
      if (!a3) {
        uint64_t v52 = (void *)sub_10015983C(a1);
      }
      swift_unknownObjectRetain();
      id v53 = sub_1003D9208();
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v79 >= 1) {
          goto LABEL_34;
        }
      }
      else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
      {
LABEL_34:
        id v54 = sub_1003D9208();
        id v55 = [v54 filteringPredicate];

        sub_1000CBE70((uint64_t *)&unk_1007141D0);
        uint64_t v56 = swift_initStackObject();
        *(_OWORD *)(v56 + 16) = xmmword_1005A0030;
        *(void *)(v56 + 32) = 0x7365646F4E636F64;
        *(void *)(v56 + 40) = 0xE800000000000000;
        *(void *)(v56 + 48) = a1;
        swift_bridgeObjectRetain();
        sub_10049342C(v56);
        sub_1000CBE70((uint64_t *)&unk_100707B20);
        Class v57 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        unsigned __int16 v58 = (unsigned __int16)[v55 evaluateWithObject:v57];

LABEL_51:
        unint64_t v29 = sub_10018F04C(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v81 = v29[2];
        unint64_t v80 = v29[3];
        int64_t v82 = v80 >> 1;
        unint64_t v83 = v81 + 1;
        if (v80 >> 1 <= v81)
        {
          unint64_t v29 = sub_10018F04C((void *)(v80 > 1), v81 + 1, 1, v29);
          unint64_t v80 = v29[3];
          int64_t v82 = v80 >> 1;
        }
        v29[2] = v83;
        uint64_t v84 = &v29[2 * v81];
        v84[4] = v53;
        *((_WORD *)v84 + 20) = v58 | 0x100;
        if (v82 < (uint64_t)(v81 + 2)) {
          unint64_t v29 = sub_10018F04C((void *)(v80 > 1), v81 + 2, 1, v29);
        }
        v29[2] = v81 + 2;
        uint64_t v85 = &v29[2 * v83];
        v85[4] = 0;
        *((_WORD *)v85 + 20) = 0;
        id v86 = sub_100159B04((uint64_t)v52);
        char v87 = sub_1003E5230(a1, v52);
        unint64_t v89 = v29[2];
        unint64_t v88 = v29[3];
        int64_t v90 = v88 >> 1;
        unint64_t v91 = v89 + 1;
        if (v88 >> 1 <= v89)
        {
          char v107 = v87;
          unint64_t v29 = sub_10018F04C((void *)(v88 > 1), v89 + 1, 1, v29);
          char v87 = v107;
          unint64_t v88 = v29[3];
          int64_t v90 = v88 >> 1;
        }
        v29[2] = v91;
        uint64_t v92 = &v29[2 * v89];
        v92[4] = v86;
        *((_WORD *)v92 + 20) = v87 & 1 | 0x100;
        if (v90 < (uint64_t)(v89 + 2)) {
          unint64_t v29 = sub_10018F04C((void *)(v88 > 1), v89 + 2, 1, v29);
        }
        v29[2] = v89 + 2;
        uint64_t v93 = &v29[2 * v91];
        v93[4] = 0;
        *((_WORD *)v93 + 20) = 0;
        id v94 = sub_100157004(1);
        char v95 = sub_1000301E0(FPActionReparent, a1);
        unint64_t v97 = v29[2];
        unint64_t v96 = v29[3];
        int64_t v98 = v96 >> 1;
        unint64_t v99 = v97 + 1;
        if (v96 >> 1 <= v97)
        {
          char v108 = v95;
          unint64_t v29 = sub_10018F04C((void *)(v96 > 1), v97 + 1, 1, v29);
          char v95 = v108;
          unint64_t v96 = v29[3];
          int64_t v98 = v96 >> 1;
        }
        v29[2] = v99;
        uint64_t v100 = &v29[2 * v97];
        v100[4] = v94;
        *((_WORD *)v100 + 20) = v95 & 1 | 0x100;
        if (v98 < (uint64_t)(v97 + 2)) {
          unint64_t v29 = sub_10018F04C((void *)(v96 > 1), v97 + 2, 1, v29);
        }
        v29[2] = v97 + 2;
        v101 = &v29[2 * v99];
        v101[4] = 0;
        *((_WORD *)v101 + 20) = 0;
        id v102 = sub_10015824C();
        char v103 = sub_1003E4B20(a1);
        unint64_t v105 = v29[2];
        unint64_t v104 = v29[3];
        if (v105 >= v104 >> 1) {
          unint64_t v29 = sub_10018F04C((void *)(v104 > 1), v105 + 1, 1, v29);
        }
        v29[2] = v105 + 1;
        id v106 = &v29[2 * v105];
        v106[4] = v102;
        *((_WORD *)v106 + 20) = v103 & 1 | 0x100;
        swift_unknownObjectRelease();
        return v29;
      }
      unsigned __int16 v58 = 0;
      goto LABEL_51;
    }
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v28) {
    a1 = a2;
  }
  unint64_t v29 = sub_10018F04C(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v31 = v29[2];
  unint64_t v30 = v29[3];
  if (v31 >= v30 >> 1) {
    unint64_t v29 = sub_10018F04C((void *)(v30 > 1), v31 + 1, 1, v29);
  }
  v29[2] = v31 + 1;
  unsigned __int8 v32 = &v29[2 * v31];
  v32[4] = 0;
  *((_WORD *)v32 + 20) = 0;
  if (v28) {
    id v33 = sub_100156A98();
  }
  else {
    id v33 = sub_100158084();
  }
  id v34 = v33;
  char v35 = sub_1000301E0(FPActionUntrash, a1);
  unint64_t v37 = v29[2];
  unint64_t v36 = v29[3];
  int64_t v38 = v36 >> 1;
  unint64_t v39 = v37 + 1;
  if (v36 >> 1 <= v37)
  {
    unint64_t v29 = sub_10018F04C((void *)(v36 > 1), v37 + 1, 1, v29);
    unint64_t v36 = v29[3];
    int64_t v38 = v36 >> 1;
  }
  v29[2] = v39;
  uint64_t v40 = &v29[2 * v37];
  v40[4] = v34;
  *((_WORD *)v40 + 20) = v35 & 1 | ((v28 != 0) << 8);
  if (v38 < (uint64_t)(v37 + 2)) {
    unint64_t v29 = sub_10018F04C((void *)(v36 > 1), v37 + 2, 1, v29);
  }
  __int16 v41 = (v28 != 0) << 8;
  v29[2] = v37 + 2;
  id v42 = &v29[2 * v39];
  v42[4] = 0;
  *((_WORD *)v42 + 20) = 0;
  id v43 = sub_1003E4658(v28 != 0);
  char v44 = sub_1000301E0(FPActionDelete, a1);
  unint64_t v46 = v29[2];
  unint64_t v45 = v29[3];
  int64_t v47 = v45 >> 1;
  unint64_t v48 = v46 + 1;
  if (v45 >> 1 <= v46)
  {
    unint64_t v29 = sub_10018F04C((void *)(v45 > 1), v46 + 1, 1, v29);
    unint64_t v45 = v29[3];
    int64_t v47 = v45 >> 1;
  }
  v29[2] = v48;
  unint64_t v49 = &v29[2 * v46];
  v49[4] = v43;
  *((_WORD *)v49 + 20) = v41 | v44 & 1;
  if (v47 < (uint64_t)(v46 + 2)) {
    unint64_t v29 = sub_10018F04C((void *)(v45 > 1), v46 + 2, 1, v29);
  }
  v29[2] = v46 + 2;
  id v50 = &v29[2 * v48];
  v50[4] = 0;
  *((_WORD *)v50 + 20) = 0;
  return v29;
}

uint64_t sub_1003E5F28(unint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCNodeType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = &_swiftEmptySetSingleton;
  if (!v7) {
    return (uint64_t)v8;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    swift_unknownObjectRetain();
  }
  swift_getObjectType();
  DOCNode.nodeType.getter();
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v9 == enum case for DOCNodeType.FPItem(_:))
  {
    id v10 = [self defaultManager];
    if (v6)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v11)
        {
          uint64_t v12 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
          do
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
              break;
            }
            v12 += 8;
            --v11;
          }
          while (v11);
        }
      }
    }
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v17 = [v10 eligibleActionsForItems:isa];

    type metadata accessor for FPAction(0);
    sub_100080220((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v8 = (void *)static Set._unconditionallyBridgeFromObjectiveC(_:)();

    swift_unknownObjectRelease();
    return (uint64_t)v8;
  }
  if (v9 == enum case for DOCNodeType.FINode(_:))
  {
    unsigned __int16 v27 = &_swiftEmptySetSingleton;
    if (v6)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      swift_bridgeObjectRetain();
      uint64_t v18 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v18;
    }
    else
    {
      uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      if (!swift_dynamicCastMetatype())
      {
        uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
          uint64_t v15 = v13 + 32;
          while (1)
          {
            self;
            if (!swift_dynamicCastObjCClass()) {
              break;
            }
            v15 += 8;
            if (!--v14) {
              goto LABEL_26;
            }
          }
          a1 = v13 | 1;
          if ((v13 | 1uLL) >> 62)
          {
LABEL_36:
            swift_bridgeObjectRetain();
            uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
            if (!v19) {
              goto LABEL_37;
            }
LABEL_28:
            if (v19 >= 1)
            {
              uint64_t v20 = 0;
              do
              {
                if ((a1 & 0xC000000000000001) != 0) {
                  id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v21 = *(id *)(a1 + 8 * v20 + 32);
                }
                id v22 = v21;
                ++v20;
                id v23 = [v21 eligibleActions];
                type metadata accessor for FPAction(0);
                sub_100080220((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
                uint64_t v24 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

                sub_1003AB6B4(v24);
              }
              while (v19 != v20);
              goto LABEL_37;
            }
            goto LABEL_42;
          }
LABEL_27:
          uint64_t v19 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v19)
          {
LABEL_37:
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease_n();
            return (uint64_t)v27;
          }
          goto LABEL_28;
        }
      }
    }
LABEL_26:
    if (a1 >> 62) {
      goto LABEL_36;
    }
    goto LABEL_27;
  }
LABEL_43:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E648C(unint64_t a1)
{
  uint64_t v2 = v1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v18 = v2;
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v7 = *(void **)(a1 + 8 * v5);
          swift_unknownObjectRetain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        uint64_t v2 = v4;
        id v9 = [v7 providerDomainID:v18];
        uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v12 = v11;
        if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
        {
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v15 & 1) == 0)
          {
            uint64_t v16 = 0;
            goto LABEL_21;
          }
        }
        ++v5;
        uint64_t v4 = v2;
        if (v8 == v2)
        {
          uint64_t v16 = 1;
          goto LABEL_21;
        }
      }
    }
  }
  uint64_t v16 = 1;
LABEL_21:
  swift_bridgeObjectRelease();
  return v16;
}

void *sub_1003E663C(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t a6, void *a7)
{
  uint64_t v8 = v7;
  uint64_t v26 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
    while (1)
    {
      unint64_t v15 = 0;
      uint64_t v22 = v14;
      id v21 = a7;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v17 = v16;
        unint64_t v18 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_17;
        }
        id v25 = v16;
        char v19 = sub_1003D68D8(&v25, a2, a3, a4, a5, a6, (uint64_t)a7);
        if (v8)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a7;
        }
        if (v19)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v8 = 0;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          a7 = v21;
        }
        else
        {
        }
        ++v15;
        if (v18 == v22)
        {
          a7 = v26;
          goto LABEL_20;
        }
      }
      if (v15 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (!v14) {
        goto LABEL_19;
      }
    }
    id v16 = *(id *)(a1 + 8 * v15 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a7 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a7;
}

uint64_t sub_1003E6814(void **__src, void **a2, unint64_t a3, void **__dst, uint64_t a5)
{
  uint64_t v5 = (uint64_t (*)(void))a5;
  uint64_t v6 = __dst;
  uint64_t v7 = a2;
  uint64_t v8 = __src;
  int64_t v9 = (char *)a2 - (char *)__src;
  int64_t v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v10 = (char *)a2 - (char *)__src;
  }
  uint64_t v11 = v10 >> 3;
  uint64_t v12 = a3 - (void)a2;
  uint64_t v13 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v13 = a3 - (void)a2;
  }
  uint64_t v14 = v13 >> 3;
  uint64_t v59 = __src;
  unsigned __int16 v58 = __dst;
  if (v11 >= v13 >> 3)
  {
    if (v12 < -7) {
      goto LABEL_50;
    }
    if (__dst != a2 || &a2[v14] <= __dst) {
      memmove(__dst, a2, 8 * v14);
    }
    unint64_t v29 = &v6[v14];
    Class v57 = v29;
    uint64_t v59 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_49:
      sub_10051FAE0(&v59, &v58, &v57);
      return 1;
    }
    unint64_t v30 = (void **)(a3 - 8);
    unint64_t v31 = v7;
    id v51 = v6;
    uint64_t v52 = v5;
    id v50 = v8;
    while (1)
    {
      id v54 = v30 + 1;
      unint64_t v56 = (unint64_t)v29;
      id v33 = v29 - 1;
      unsigned __int8 v32 = *(v29 - 1);
      id v34 = *--v31;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v32;
      *(void *)(v35 + 24) = v34;
      id v36 = v32;
      id v37 = v34;
      int64_t v38 = v37;
      if (v5)
      {
        sub_1000C0640((uint64_t)v5);
        id v39 = v38;
        id v40 = v36;
        char v41 = v5();
        uint64_t v42 = (uint64_t)v5;
        char v43 = v41;
        sub_1000A7258(v42);

        swift_release();
        if (v43) {
          goto LABEL_35;
        }
      }
      else
      {
        id v45 = v37;
        id v46 = v36;
        id v49 = [v46 menuSortOrder];
        id v47 = [v45 menuSortOrder];

        swift_release();
        if (v49 < v47)
        {
LABEL_35:
          unint64_t v29 = (void **)v56;
          unint64_t v44 = (unint64_t)v50;
          if (v54 != v7 || v30 >= v7) {
            *unint64_t v30 = *v31;
          }
          uint64_t v59 = v31;
          goto LABEL_46;
        }
      }
      Class v57 = v33;
      unint64_t v44 = (unint64_t)v50;
      if ((unint64_t)v54 >= v56 && (unint64_t)v30 < v56)
      {
        uint64_t v5 = v52;
        if (v54 != (void **)v56) {
          *unint64_t v30 = *v33;
        }
        unint64_t v31 = v7;
        unint64_t v29 = v33;
        goto LABEL_47;
      }
      *unint64_t v30 = *v33;
      unint64_t v31 = v7;
      unint64_t v29 = v33;
LABEL_46:
      uint64_t v5 = v52;
LABEL_47:
      if ((unint64_t)v31 > v44)
      {
        --v30;
        uint64_t v7 = v31;
        if (v29 > v51) {
          continue;
        }
      }
      goto LABEL_49;
    }
  }
  if (v9 >= -7)
  {
    if (__dst != __src || &__src[v11] <= __dst) {
      memmove(__dst, __src, 8 * v11);
    }
    id v53 = &v6[v11];
    Class v57 = v53;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        unint64_t v15 = v8;
        id v16 = *v7;
        id v17 = v6;
        unint64_t v18 = *v6;
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v16;
        *(void *)(v19 + 24) = v18;
        id v20 = v16;
        id v21 = v18;
        id v22 = v20;
        id v23 = v22;
        if (v5)
        {
          sub_1000C0640((uint64_t)v5);
          char v24 = ((uint64_t (*)(void *, id, uint64_t (*)(), uint64_t))v5)(v23, v21, sub_1003ED1A0, v19);
          sub_1000A7258((uint64_t)v5);

          swift_release();
          if ((v24 & 1) == 0) {
            goto LABEL_20;
          }
        }
        else
        {
          id v27 = [v22 menuSortOrder];
          id v28 = [v21 menuSortOrder];

          swift_release();
          if (v27 >= v28)
          {
LABEL_20:
            uint64_t v26 = v15;
            if (v15 != v17) {
              *unint64_t v15 = *v17;
            }
            uint64_t v6 = v17 + 1;
            unsigned __int16 v58 = v17 + 1;
            id v25 = v7;
            goto LABEL_23;
          }
        }
        id v25 = v7 + 1;
        uint64_t v26 = v15;
        if (v15 < v7 || v15 >= v25 || v15 != v7) {
          *unint64_t v15 = *v7;
        }
        uint64_t v6 = v17;
LABEL_23:
        uint64_t v8 = v26 + 1;
        uint64_t v59 = v8;
        if (v6 < v53)
        {
          uint64_t v7 = v25;
          if ((unint64_t)v25 < a3) {
            continue;
          }
        }
        goto LABEL_49;
      }
    }
    goto LABEL_49;
  }
LABEL_50:
  sub_1000A7258(a5);
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003E6CB0(uint64_t *a1, uint64_t a2)
{
  Swift::Int v5 = a1[1];
  sub_1000C0640(a2);
  sub_1000C0640(a2);
  v220 = (uint64_t (*)(void))a2;
  sub_1000C0640(a2);
  Swift::Int v6 = _minimumMergeRunLength(_:)(v5);
  Swift::Int v191 = v5;
  if (v6 >= v5)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v5 >= 2)
      {
        uint64_t v11 = *a1;
        sub_1000C0640(a2);
        uint64_t v12 = -1;
        uint64_t v13 = 1;
        uint64_t v14 = v11;
        do
        {
          uint64_t v207 = v14;
          uint64_t v210 = v13;
          unint64_t v15 = *(void **)(v11 + 8 * v13);
          uint64_t v215 = v12;
          do
          {
            id v16 = *(void **)v14;
            uint64_t v17 = swift_allocObject();
            *(void *)(v17 + 16) = v15;
            *(void *)(v17 + 24) = v16;
            id v18 = v15;
            id v19 = v16;
            id v20 = v19;
            if (v220)
            {
              sub_1000C0640((uint64_t)v220);
              id v21 = v20;
              id v22 = v18;
              char v23 = v220();
              sub_1000A7258((uint64_t)v220);

              swift_release();
              if ((v23 & 1) == 0) {
                break;
              }
            }
            else
            {
              id v24 = v19;
              id v25 = v18;
              id v26 = [v25 menuSortOrder];
              id v27 = [v24 menuSortOrder];

              swift_release();
              if (v26 >= v27) {
                break;
              }
            }
            if (!v11) {
              goto LABEL_215;
            }
            id v28 = *(void **)v14;
            unint64_t v15 = *(void **)(v14 + 8);
            *(void *)uint64_t v14 = v15;
            *(void *)(v14 + 8) = v28;
            v14 -= 8;
          }
          while (!__CFADD__(v12++, 1));
          uint64_t v13 = v210 + 1;
          uint64_t v14 = v207 + 8;
          uint64_t v12 = v215 - 1;
        }
        while (v210 + 1 != v191);
        sub_1000A7258((uint64_t)v220);
      }
      sub_1000A7258((uint64_t)v220);
      sub_1000A7258((uint64_t)v220);
      return sub_1000A7258((uint64_t)v220);
    }
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    __break(1u);
LABEL_217:
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    __break(1u);
LABEL_218:
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    __break(1u);
LABEL_219:
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_220:
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    sub_1000A7258((uint64_t)v220);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 < -1) {
    goto LABEL_220;
  }
  v187 = a1;
  Swift::Int v188 = v6;
  if (v5 >= 2)
  {
    uint64_t v8 = v7 >> 1;
    sub_10009E6C4(0, &qword_100708700);
    uint64_t v9 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    int64_t v10 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v221 = v9;
LABEL_22:
    Swift::Int v31 = 0;
    unint64_t v30 = (char *)_swiftEmptyArrayStorage;
    uint64_t v32 = *a1;
    uint64_t v189 = *a1 - 8;
    Swift::Int v33 = v5;
    v205 = v10;
    uint64_t v203 = *a1;
    while (1)
    {
      Swift::Int v35 = v31 + 1;
      Swift::Int v211 = v31;
      if (v31 + 1 >= v33) {
        goto LABEL_48;
      }
      v192 = v30;
      id v36 = *(void **)(v32 + 8 * v35);
      id v37 = *(void **)(v32 + 8 * v31);
      uint64_t v38 = swift_allocObject();
      *(void *)(v38 + 16) = v36;
      *(void *)(v38 + 24) = v37;
      id v39 = v36;
      id v40 = v37;
      char v41 = v40;
      if (v220)
      {
        sub_1000C0640((uint64_t)v220);
        id v42 = v41;
        id v43 = v39;
        int v44 = v220();
        sub_1000A7258((uint64_t)v220);

        swift_release();
      }
      else
      {
        id v45 = v40;
        id v46 = v39;
        id v47 = [v46 menuSortOrder];
        id v48 = [v45 menuSortOrder];

        swift_release();
        int v44 = v47 < v48;
      }
      Swift::Int v35 = v31 + 2;
      Swift::Int v33 = v191;
      if (v31 + 2 < v191)
      {
        Swift::Int v49 = v31 + 1;
        do
        {
          id v55 = *(void **)(v203 + 8 * v35);
          unint64_t v56 = *(void **)(v203 + 8 * v49);
          uint64_t v57 = swift_allocObject();
          *(void *)(v57 + 16) = v55;
          *(void *)(v57 + 24) = v56;
          id v58 = v55;
          id v59 = v56;
          unint64_t v60 = v59;
          if (v220)
          {
            sub_1000C0640((uint64_t)v220);
            id v61 = v60;
            id v62 = v58;
            int v63 = v220();
            sub_1000A7258((uint64_t)v220);

            swift_release();
            if ((v44 ^ v63))
            {
LABEL_35:
              Swift::Int v33 = v191;
              if ((v44 & 1) == 0) {
                goto LABEL_36;
              }
LABEL_39:
              Swift::Int v31 = v211;
              uint64_t v32 = v203;
              if (v35 >= v211)
              {
                if (v211 < v35)
                {
                  unint64_t v64 = (uint64_t *)(v189 + 8 * v35);
                  Swift::Int v65 = v35;
                  Swift::Int v66 = v211;
                  char v67 = (uint64_t *)(v203 + 8 * v211);
                  unint64_t v30 = v192;
                  int64_t v10 = v205;
                  while (1)
                  {
                    if (v66 != --v65)
                    {
                      if (!v203) {
                        goto LABEL_217;
                      }
                      uint64_t v68 = *v67;
                      *char v67 = *v64;
                      *unint64_t v64 = v68;
                    }
                    ++v66;
                    --v64;
                    ++v67;
                    if (v66 >= v65) {
                      goto LABEL_48;
                    }
                  }
                }
                unint64_t v30 = v192;
                int64_t v10 = v205;
                goto LABEL_48;
              }
LABEL_210:
              __break(1u);
LABEL_211:
              __break(1u);
              goto LABEL_212;
            }
          }
          else
          {
            id v50 = v59;
            id v51 = v58;
            id v52 = [v51 menuSortOrder];
            id v53 = [v50 menuSortOrder];

            swift_release();
            if ((v44 & 1) == v52 >= v53) {
              goto LABEL_35;
            }
          }
          Swift::Int v54 = v35 + 1;
          Swift::Int v49 = v35;
          Swift::Int v35 = v54;
          Swift::Int v33 = v191;
        }
        while (v54 < v191);
        Swift::Int v35 = v54;
      }
      if (v44) {
        goto LABEL_39;
      }
LABEL_36:
      unint64_t v30 = v192;
      int64_t v10 = v205;
      uint64_t v32 = v203;
      Swift::Int v31 = v211;
LABEL_48:
      Swift::Int v190 = v35;
      if (v35 < v33)
      {
        if (__OFSUB__(v35, v31)) {
          goto LABEL_205;
        }
        if (v35 - v31 < v188)
        {
          if (__OFADD__(v31, v188)) {
            goto LABEL_211;
          }
          if (v31 + v188 >= v33) {
            Swift::Int v69 = v33;
          }
          else {
            Swift::Int v69 = v31 + v188;
          }
          if (v69 < v31)
          {
LABEL_212:
            __break(1u);
LABEL_213:
            sub_1000A7258((uint64_t)v220);
            sub_1000A7258((uint64_t)v220);
            sub_1000A7258((uint64_t)v220);
            __break(1u);
            goto LABEL_214;
          }
          if (v35 != v69)
          {
            v193 = v30;
            uint64_t v70 = v189 + 8 * v35;
            Swift::Int v71 = v35;
            Swift::Int v208 = v69;
            do
            {
              uint64_t v72 = *(void **)(v32 + 8 * v71);
              uint64_t v216 = v70;
              do
              {
                uint64_t v73 = *(void **)v70;
                uint64_t v74 = swift_allocObject();
                *(void *)(v74 + 16) = v72;
                *(void *)(v74 + 24) = v73;
                id v75 = v72;
                id v76 = v73;
                unint64_t v77 = v76;
                if (v220)
                {
                  sub_1000C0640((uint64_t)v220);
                  id v78 = v77;
                  id v79 = v75;
                  char v80 = v220();
                  sub_1000A7258((uint64_t)v220);

                  swift_release();
                  uint64_t v32 = v203;
                  if ((v80 & 1) == 0) {
                    break;
                  }
                }
                else
                {
                  id v81 = v76;
                  id v82 = v75;
                  id v83 = [v82 menuSortOrder];
                  id v84 = [v81 menuSortOrder];

                  swift_release();
                  uint64_t v32 = v203;
                  if (v83 >= v84) {
                    break;
                  }
                }
                if (!v32) {
                  goto LABEL_213;
                }
                uint64_t v85 = *(void **)v70;
                uint64_t v72 = *(void **)(v70 + 8);
                *(void *)uint64_t v70 = v72;
                *(void *)(v70 + 8) = v85;
                v70 -= 8;
                ++v31;
              }
              while (v71 != v31);
              ++v71;
              uint64_t v70 = v216 + 8;
              Swift::Int v31 = v211;
            }
            while (v71 != v208);
            Swift::Int v190 = v208;
            unint64_t v30 = v193;
            int64_t v10 = v205;
          }
        }
      }
      if (v190 < v31) {
        goto LABEL_204;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v30 = sub_10051F91C(0, *((void *)v30 + 2) + 1, 1, v30);
      }
      unint64_t v87 = *((void *)v30 + 2);
      unint64_t v86 = *((void *)v30 + 3);
      unint64_t v34 = v87 + 1;
      uint64_t v32 = v203;
      if (v87 >= v86 >> 1)
      {
        v176 = sub_10051F91C((char *)(v86 > 1), v87 + 1, 1, v30);
        uint64_t v32 = v203;
        unint64_t v30 = v176;
      }
      *((void *)v30 + 2) = v34;
      unint64_t v88 = v30 + 32;
      unint64_t v89 = &v30[16 * v87 + 32];
      *(void *)unint64_t v89 = v31;
      *((void *)v89 + 1) = v190;
      if (v87)
      {
        v194 = v30;
        v200 = v30 + 32;
        while (1)
        {
          unint64_t v90 = v34 - 1;
          if (v34 >= 4)
          {
            char v95 = &v88[16 * v34];
            uint64_t v96 = *((void *)v95 - 8);
            uint64_t v97 = *((void *)v95 - 7);
            BOOL v101 = __OFSUB__(v97, v96);
            uint64_t v98 = v97 - v96;
            if (v101) {
              goto LABEL_193;
            }
            uint64_t v100 = *((void *)v95 - 6);
            uint64_t v99 = *((void *)v95 - 5);
            BOOL v101 = __OFSUB__(v99, v100);
            uint64_t v93 = v99 - v100;
            char v94 = v101;
            if (v101) {
              goto LABEL_194;
            }
            unint64_t v102 = v34 - 2;
            char v103 = &v88[16 * v34 - 32];
            uint64_t v105 = *(void *)v103;
            uint64_t v104 = *((void *)v103 + 1);
            BOOL v101 = __OFSUB__(v104, v105);
            uint64_t v106 = v104 - v105;
            if (v101) {
              goto LABEL_196;
            }
            BOOL v101 = __OFADD__(v93, v106);
            uint64_t v107 = v93 + v106;
            if (v101) {
              goto LABEL_199;
            }
            if (v107 >= v98)
            {
              Swift::Int v125 = &v88[16 * v90];
              uint64_t v127 = *(void *)v125;
              uint64_t v126 = *((void *)v125 + 1);
              BOOL v101 = __OFSUB__(v126, v127);
              uint64_t v128 = v126 - v127;
              if (v101) {
                goto LABEL_203;
              }
              BOOL v118 = v93 < v128;
              goto LABEL_106;
            }
          }
          else
          {
            if (v34 != 3)
            {
              uint64_t v119 = *((void *)v30 + 4);
              uint64_t v120 = *((void *)v30 + 5);
              BOOL v101 = __OFSUB__(v120, v119);
              uint64_t v112 = v120 - v119;
              char v113 = v101;
              goto LABEL_100;
            }
            uint64_t v92 = *((void *)v30 + 4);
            uint64_t v91 = *((void *)v30 + 5);
            BOOL v101 = __OFSUB__(v91, v92);
            uint64_t v93 = v91 - v92;
            char v94 = v101;
          }
          if (v94) {
            goto LABEL_195;
          }
          unint64_t v102 = v34 - 2;
          char v108 = &v88[16 * v34 - 32];
          uint64_t v110 = *(void *)v108;
          uint64_t v109 = *((void *)v108 + 1);
          BOOL v111 = __OFSUB__(v109, v110);
          uint64_t v112 = v109 - v110;
          char v113 = v111;
          if (v111) {
            goto LABEL_198;
          }
          uint64_t v114 = &v88[16 * v90];
          uint64_t v116 = *(void *)v114;
          uint64_t v115 = *((void *)v114 + 1);
          BOOL v101 = __OFSUB__(v115, v116);
          uint64_t v117 = v115 - v116;
          if (v101) {
            goto LABEL_201;
          }
          if (__OFADD__(v112, v117)) {
            goto LABEL_202;
          }
          if (v112 + v117 >= v93)
          {
            BOOL v118 = v93 < v117;
LABEL_106:
            if (v118) {
              unint64_t v90 = v102;
            }
            goto LABEL_108;
          }
LABEL_100:
          if (v113) {
            goto LABEL_197;
          }
          uint64_t v121 = &v88[16 * v90];
          uint64_t v123 = *(void *)v121;
          uint64_t v122 = *((void *)v121 + 1);
          BOOL v101 = __OFSUB__(v122, v123);
          uint64_t v124 = v122 - v123;
          if (v101) {
            goto LABEL_200;
          }
          if (v124 < v112) {
            goto LABEL_24;
          }
LABEL_108:
          unint64_t v129 = v90 - 1;
          if (v90 - 1 >= v34)
          {
            __break(1u);
LABEL_190:
            __break(1u);
LABEL_191:
            __break(1u);
LABEL_192:
            __break(1u);
LABEL_193:
            __break(1u);
LABEL_194:
            __break(1u);
LABEL_195:
            __break(1u);
LABEL_196:
            __break(1u);
LABEL_197:
            __break(1u);
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
            goto LABEL_210;
          }
          if (!v32) {
            goto LABEL_216;
          }
          Swift::Int v130 = &v88[16 * v90];
          uint64_t v131 = *(void *)v130;
          uint64_t v201 = *(void *)&v88[16 * v129];
          uint64_t v202 = *((void *)v130 + 1);
          Swift::Int v132 = (void **)(v32 + 8 * v201);
          uint64_t v133 = (void **)(v32 + 8 * *(void *)v130);
          unint64_t v134 = v32 + 8 * v202;
          uint64_t v135 = (char *)v133 - (char *)v132;
          uint64_t v136 = (char *)v133 - (char *)v132 + 7;
          if ((char *)v133 - (char *)v132 >= 0) {
            uint64_t v136 = (char *)v133 - (char *)v132;
          }
          uint64_t v137 = v136 >> 3;
          unint64_t v212 = v32 + 8 * v202;
          uint64_t v138 = v134 - (void)v133;
          uint64_t v139 = v134 - (void)v133 + 7;
          if ((uint64_t)(v134 - (void)v133) >= 0) {
            uint64_t v139 = v134 - (void)v133;
          }
          uint64_t v140 = v139 >> 3;
          unint64_t v198 = v90 - 1;
          int64_t v199 = v90;
          __dst = &v88[16 * v90];
          v197 = &v88[16 * v129];
          if (v137 >= v139 >> 3)
          {
            if (v138 < -7) {
              goto LABEL_219;
            }
            if ((unint64_t)v10 >= v134 || v10 < v133)
            {
              sub_1000C0640((uint64_t)v220);
            }
            else
            {
              sub_1000C0640((uint64_t)v220);
              if (v10 == v133) {
                goto LABEL_154;
              }
            }
            memmove(v10, v133, 8 * v140);
LABEL_154:
            id v141 = &v10[v140];
            if (v201 >= v131 || v138 < 8) {
              goto LABEL_141;
            }
            v204 = v132;
            v161 = (void **)(v189 + 8 * v202);
            while (2)
            {
              v209 = v161 + 1;
              v213 = v133;
              unint64_t v218 = (unint64_t)v141;
              v162 = *--v141;
              v163 = *(v133 - 1);
              v206 = v133 - 1;
              uint64_t v164 = swift_allocObject();
              *(void *)(v164 + 16) = v162;
              *(void *)(v164 + 24) = v163;
              id v165 = v162;
              id v166 = v163;
              v167 = v166;
              if (v220)
              {
                sub_1000C0640((uint64_t)v220);
                id v168 = v167;
                id v169 = v165;
                char v170 = v220();
                sub_1000A7258((uint64_t)v220);

                swift_release();
                if (v170) {
                  goto LABEL_159;
                }
LABEL_163:
                uint64_t v133 = v213;
                v171 = v141;
                if (v209 != (void **)v218)
                {
                  int64_t v10 = v205;
                  goto LABEL_168;
                }
                int64_t v10 = v205;
                if ((unint64_t)v161 >= v218) {
                  goto LABEL_168;
                }
              }
              else
              {
                id v172 = v166;
                id v173 = v165;
                id v174 = [v173 menuSortOrder];
                id v175 = [v172 menuSortOrder];

                swift_release();
                if (v174 >= v175) {
                  goto LABEL_163;
                }
LABEL_159:
                id v141 = (void **)v218;
                if (v209 != v213)
                {
                  int64_t v10 = v205;
                  v171 = v206;
                  uint64_t v133 = v206;
                  goto LABEL_168;
                }
                v171 = v206;
                uint64_t v133 = v206;
                int64_t v10 = v205;
                if (v161 >= v213) {
LABEL_168:
                }
                  *v161 = *v171;
              }
              if (v204 >= v133) {
                goto LABEL_141;
              }
              --v161;
              if (v10 >= v141) {
                goto LABEL_141;
              }
              continue;
            }
          }
          if (v135 < -7) {
            goto LABEL_219;
          }
          if (v10 < v132 || v10 >= v133)
          {
            sub_1000C0640((uint64_t)v220);
LABEL_126:
            memmove(v10, v132, 8 * v137);
            goto LABEL_127;
          }
          sub_1000C0640((uint64_t)v220);
          if (v10 != v132) {
            goto LABEL_126;
          }
LABEL_127:
          id v141 = &v10[v137];
          if (v131 < v202 && v135 >= 8)
          {
            v217 = v141;
            do
            {
              uint64_t v142 = v133;
              id v143 = *v133;
              uint64_t v144 = *v10;
              uint64_t v145 = swift_allocObject();
              *(void *)(v145 + 16) = v143;
              *(void *)(v145 + 24) = v144;
              id v146 = v143;
              id v147 = v144;
              uint64_t v148 = v147;
              if (v220)
              {
                sub_1000C0640((uint64_t)v220);
                id v149 = v148;
                id v150 = v146;
                char v151 = v220();
                sub_1000A7258((uint64_t)v220);

                swift_release();
                if ((v151 & 1) == 0) {
                  goto LABEL_136;
                }
              }
              else
              {
                id v154 = v147;
                id v155 = v146;
                id v156 = [v155 menuSortOrder];
                id v157 = [v154 menuSortOrder];

                swift_release();
                if (v156 >= v157)
                {
LABEL_136:
                  id v152 = v10;
                  BOOL v153 = v132 == v10++;
                  uint64_t v133 = v142;
                  id v141 = v217;
                  if (v153) {
                    goto LABEL_138;
                  }
LABEL_137:
                  *Swift::Int v132 = *v152;
                  goto LABEL_138;
                }
              }
              id v152 = v142;
              uint64_t v133 = v142 + 1;
              BOOL v153 = v132 == v142;
              id v141 = v217;
              if (!v153) {
                goto LABEL_137;
              }
LABEL_138:
              ++v132;
            }
            while (v10 < v141 && (unint64_t)v133 < v212);
          }
          uint64_t v133 = v132;
LABEL_141:
          uint64_t v158 = (char *)v141 - (char *)v10 + 7;
          if ((char *)v141 - (char *)v10 >= 0) {
            uint64_t v158 = (char *)v141 - (char *)v10;
          }
          if ((char *)v141 - (char *)v10 <= -8) {
            goto LABEL_219;
          }
          uint64_t v159 = v158 >> 3;
          if (v133 != v10 || v133 >= &v10[v159]) {
            memmove(v133, v10, 8 * v159);
          }
          sub_1000A7258((uint64_t)v220);
          if (v202 < v201) {
            goto LABEL_190;
          }
          unint64_t v30 = v194;
          if (v199 > *((void *)v194 + 2)) {
            goto LABEL_191;
          }
          *(void *)v197 = v201;
          *(void *)&v200[16 * v198 + 8] = v202;
          unint64_t v160 = *((void *)v194 + 2);
          if (v199 >= (uint64_t)v160) {
            goto LABEL_192;
          }
          unint64_t v34 = v160 - 1;
          memmove(__dst, __dst + 16, 16 * (v160 - 1 - v199));
          unint64_t v88 = v200;
          *((void *)v194 + 2) = v160 - 1;
          int64_t v10 = v205;
          uint64_t v32 = v203;
          if (v160 <= 2) {
            goto LABEL_24;
          }
        }
      }
      unint64_t v34 = 1;
LABEL_24:
      Swift::Int v31 = v190;
      Swift::Int v33 = v191;
      if (v190 >= v191) {
        goto LABEL_175;
      }
    }
  }
  unint64_t v30 = (char *)_swiftEmptyArrayStorage;
  uint64_t v221 = (uint64_t)_swiftEmptyArrayStorage;
  int64_t v10 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
  if (v5 == 1) {
    goto LABEL_22;
  }
  unint64_t v34 = _swiftEmptyArrayStorage[2];
LABEL_175:
  if (v34 >= 2)
  {
    uint64_t v178 = *v187;
    uint64_t v214 = *v187;
    while (v34 >= 2)
    {
      if (!v178) {
        goto LABEL_218;
      }
      uint64_t v195 = (uint64_t)v30;
      unint64_t v219 = v34 - 2;
      uint64_t v179 = *(void *)&v30[16 * v34];
      uint64_t v180 = *(void *)&v30[16 * v34 + 24];
      v181 = (void **)(v178 + 8 * v179);
      v182 = (void **)(v178 + 8 * *(void *)&v30[16 * v34 + 16]);
      unint64_t v183 = v178 + 8 * v180;
      sub_1000C0640((uint64_t)v220);
      sub_1003E6814(v181, v182, v183, v10, (uint64_t)v220);
      if (v2)
      {
        sub_1000A7258((uint64_t)v220);
        swift_bridgeObjectRelease();
        *(void *)((v221 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
        specialized Array._endMutation()();
        swift_bridgeObjectRelease();
        sub_1000A7258((uint64_t)v220);
        sub_1000A7258((uint64_t)v220);
        uint64_t v186 = (uint64_t)v220;
        return sub_1000A7258(v186);
      }
      sub_1000A7258((uint64_t)v220);
      if (v180 < v179) {
        goto LABEL_207;
      }
      unint64_t v30 = (char *)v195;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v30 = sub_100520230(v195);
      }
      if (v219 >= *((void *)v30 + 2)) {
        goto LABEL_208;
      }
      v184 = &v30[16 * v219 + 32];
      *(void *)v184 = v179;
      *((void *)v184 + 1) = v180;
      unint64_t v185 = *((void *)v30 + 2);
      if (v34 > v185) {
        goto LABEL_209;
      }
      memmove(&v30[16 * v34 + 16], &v30[16 * v34 + 32], 16 * (v185 - v34));
      *((void *)v30 + 2) = v185 - 1;
      unint64_t v34 = v185 - 1;
      uint64_t v178 = v214;
      if (v185 <= 2) {
        goto LABEL_186;
      }
    }
    goto LABEL_206;
  }
LABEL_186:
  swift_bridgeObjectRelease();
  *(void *)((v221 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();
  sub_1000A7258((uint64_t)v220);
  sub_1000A7258((uint64_t)v220);
  uint64_t v186 = (uint64_t)v220;
  return sub_1000A7258(v186);
}

uint64_t sub_1003E7E1C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  sub_1000C0640(a2);
  sub_1000C0640(a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_100521F28(v4);
    *a1 = v4;
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  sub_1000C0640(a2);
  sub_1003E6CB0(v8, a2);
  sub_1000A7258(a2);
  specialized ContiguousArray._endMutation()();
  sub_1000A7258(a2);
  return sub_1000A7258(a2);
}

void *sub_1003E7EF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v51 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v50 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v49 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v48 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a5;
  v17[6] = a6;
  v17[7] = a7;
  id v18 = a2;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (All)
  {
    unint64_t v20 = All;
    id v52 = v17;
    dispatch_group_t v21 = dispatch_group_create();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = _swiftEmptyArrayStorage;
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFFF8;
    uint64_t v55 = v20;
    if (v20 >> 62)
    {
      uint64_t v24 = v13;
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = v13;
      uint64_t v25 = *(void *)(v23 + 16);
    }
    id v26 = v52;
    id v27 = &off_10059B000;
    uint64_t v47 = v15;
    if (!v25)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = v24;
LABEL_16:
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v55 = static OS_dispatch_queue.main.getter();
      char v41 = (void *)swift_allocObject();
      v41[2] = sub_1003EDAC0;
      v41[3] = v26;
      v41[4] = v22;
      id v61 = sub_1003EDE78;
      id v62 = v41;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v58 = *((void *)v27 + 233);
      id v59 = sub_1000666D8;
      unint64_t v60 = &unk_1006A90B8;
      id v42 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      id v43 = v48;
      static DispatchQoS.unspecified.getter();
      unint64_t v56 = _swiftEmptyArrayStorage;
      sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      int v44 = v50;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v45 = (void *)v55;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v42);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v40);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v47);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    uint64_t result = self;
    id v54 = result;
    if (v25 >= 1)
    {
      uint64_t v46 = v24;
      uint64_t v29 = 0;
      uint64_t v30 = v55;
      unint64_t v53 = v55 & 0xC000000000000001;
      do
      {
        uint64_t v39 = v25;
        if (v53) {
          id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v31 = *(id *)(v30 + 8 * v29 + 32);
        }
        uint64_t v32 = v31;
        ++v29;
        dispatch_group_enter(v21);
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = v21;
        *(void *)(v33 + 24) = v22;
        swift_retain();
        unint64_t v34 = v21;
        id v35 = [v54 defaultManager];
        id v36 = (void *)swift_allocObject();
        v36[2] = sub_1003EDE10;
        v36[3] = v33;
        v36[4] = 0;
        v36[5] = 0;
        v36[6] = v32;
        id v61 = sub_1003ED5E4;
        id v62 = v36;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v58 = 1107296256;
        id v59 = sub_1001B6B50;
        unint64_t v60 = &unk_1006A9068;
        id v37 = _Block_copy(&aBlock);
        swift_retain();
        id v38 = v32;
        swift_release();
        [v35 fetchURLForItem:v38 completionHandler:v37];
        _Block_release(v37);

        swift_release();
        uint64_t v25 = v39;
        uint64_t v30 = v55;
      }
      while (v39 != v29);
      swift_bridgeObjectRelease();
      uint64_t v40 = v46;
      id v26 = v52;
      id v27 = &off_10059B000;
      goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    sub_100562BEC((unint64_t)_swiftEmptyArrayStorage, v18, a3, a4, a5, a6, a7);
    return (void *)swift_release();
  }
  return result;
}

void *sub_1003E8554(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        uint64_t v13 = v10;
        uint64_t v14 = a3;
        id v15 = [v10 identifier:v22];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1003E86FC(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v44 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  *(void *)(v16 + 32) = a4;
  *(void *)(v16 + 40) = a5;
  *(unsigned char *)(v16 + 48) = a6;
  swift_unknownObjectRetain();
  id v17 = a2;
  swift_bridgeObjectRetain();
  id v18 = a4;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (All)
  {
    unint64_t v20 = All;
    uint64_t v47 = v16;
    id v42 = v13;
    uint64_t v43 = v14;
    dispatch_group_t v21 = dispatch_group_create();
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = _swiftEmptyArrayStorage;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v23 = v47;
    unint64_t v24 = &off_10059B000;
    if (!v22)
    {
      swift_bridgeObjectRelease();
LABEL_16:
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      id v49 = (id)static OS_dispatch_queue.main.getter();
      id v36 = (void *)swift_allocObject();
      v36[2] = sub_1003ED58C;
      v36[3] = v23;
      v36[4] = v50;
      unint64_t v56 = sub_1003ED600;
      uint64_t v57 = v36;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v53 = *((void *)v24 + 233);
      id v54 = sub_1000666D8;
      uint64_t v55 = &unk_1006A8AC8;
      id v37 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      id v38 = v44;
      static DispatchQoS.unspecified.getter();
      uint64_t v51 = _swiftEmptyArrayStorage;
      sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v39 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v40 = v49;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v37);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v39, v11);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v43);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    uint64_t result = self;
    id v49 = result;
    if (v22 >= 1)
    {
      uint64_t v41 = v11;
      uint64_t v26 = 0;
      unint64_t v48 = v20 & 0xC000000000000001;
      unint64_t v27 = v20;
      do
      {
        if (v48) {
          id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v28 = *(id *)(v20 + 8 * v26 + 32);
        }
        uint64_t v29 = v28;
        ++v26;
        dispatch_group_enter(v21);
        uint64_t v30 = swift_allocObject();
        *(void *)(v30 + 16) = v21;
        *(void *)(v30 + 24) = v50;
        swift_retain();
        id v31 = v21;
        id v32 = [v49 defaultManager];
        uint64_t v33 = (void *)swift_allocObject();
        v33[2] = sub_1003ED5D8;
        v33[3] = v30;
        v33[4] = 0;
        v33[5] = 0;
        v33[6] = v29;
        unint64_t v56 = sub_1003ED5E4;
        uint64_t v57 = v33;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v53 = 1107296256;
        id v54 = sub_1001B6B50;
        uint64_t v55 = &unk_1006A8A78;
        unint64_t v34 = _Block_copy(&aBlock);
        swift_retain();
        id v35 = v29;
        swift_release();
        [v32 fetchURLForItem:v35 completionHandler:v34];
        _Block_release(v34);

        swift_release();
        unint64_t v20 = v27;
      }
      while (v22 != v26);
      swift_bridgeObjectRelease();
      uint64_t v11 = v41;
      uint64_t v23 = v47;
      unint64_t v24 = &off_10059B000;
      goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    sub_100176F08((uint64_t)_swiftEmptyArrayStorage, v17, a3, v18, a5, a6 & 1);
    return (void *)swift_release();
  }
  return result;
}

void *sub_1003E8D38(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v46 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  id v13 = a2;
  id v14 = a3;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (All)
  {
    unint64_t v16 = All;
    uint64_t v17 = v5;
    uint64_t v42 = v12;
    dispatch_group_t v18 = dispatch_group_create();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = _swiftEmptyArrayStorage;
    uint64_t v49 = v16;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = v49;
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    dispatch_group_t v21 = &off_10059B000;
    uint64_t v44 = v9;
    uint64_t v45 = v6;
    uint64_t v43 = v8;
    uint64_t v41 = v11;
    if (!v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v33 = v17;
LABEL_16:
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v49 = static OS_dispatch_queue.main.getter();
      unint64_t v34 = (void *)swift_allocObject();
      uint64_t v35 = v42;
      v34[2] = sub_1003EDA20;
      v34[3] = v35;
      v34[4] = v19;
      uint64_t v55 = sub_1003EDE78;
      unint64_t v56 = v34;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v52 = *((void *)v21 + 233);
      uint64_t v53 = sub_1000666D8;
      id v54 = &unk_1006A8ED8;
      id v36 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      id v37 = v41;
      static DispatchQoS.unspecified.getter();
      uint64_t v50 = _swiftEmptyArrayStorage;
      sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      id v38 = v43;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v39 = (void *)v49;
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v33);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v37, v44);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    uint64_t result = self;
    id v48 = result;
    if (v20 >= 1)
    {
      uint64_t v40 = v17;
      uint64_t v23 = 0;
      unint64_t v47 = v16 & 0xC000000000000001;
      uint64_t v24 = v20;
      do
      {
        if (v47) {
          id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v25 = *(id *)(v16 + 8 * v23 + 32);
        }
        uint64_t v26 = v25;
        ++v23;
        dispatch_group_enter(v18);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v18;
        *(void *)(v27 + 24) = v19;
        swift_retain();
        id v28 = v18;
        id v29 = [v48 defaultManager];
        uint64_t v30 = (void *)swift_allocObject();
        v30[2] = sub_1003EDE10;
        v30[3] = v27;
        v30[4] = 0;
        v30[5] = 0;
        v30[6] = v26;
        uint64_t v55 = sub_1003ED5E4;
        unint64_t v56 = v30;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v52 = 1107296256;
        uint64_t v53 = sub_1001B6B50;
        id v54 = &unk_1006A8E88;
        id v31 = _Block_copy(&aBlock);
        swift_retain();
        id v32 = v26;
        swift_release();
        [v29 fetchURLForItem:v32 completionHandler:v31];
        _Block_release(v31);

        swift_release();
        unint64_t v16 = v49;
      }
      while (v24 != v23);
      swift_bridgeObjectRelease();
      uint64_t v33 = v40;
      dispatch_group_t v21 = &off_10059B000;
      goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    sub_1003D98D8((int)_swiftEmptyArrayStorage, v13, v14);
    return (void *)swift_release();
  }
  return result;
}

void *sub_1003E9354(uint64_t a1, uint64_t (*a2)(void *), uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
  if (!All) {
    return (void *)a2(_swiftEmptyArrayStorage);
  }
  unint64_t v14 = All;
  uint64_t v43 = v6;
  uint64_t v39 = v12;
  dispatch_group_t v15 = dispatch_group_create();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = _swiftEmptyArrayStorage;
  unint64_t v45 = v14;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = v45;
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = v46;
  }
  else
  {
    uint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v41 = v8;
  uint64_t v42 = v9;
  uint64_t v40 = v10;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v43;
LABEL_14:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v46 = static OS_dispatch_queue.main.getter();
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = a2;
    v30[3] = a3;
    v30[4] = v16;
    uint64_t v52 = sub_1003EDE78;
    uint64_t v53 = v30;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_1000666D8;
    uint64_t v51 = &unk_1006A9180;
    id v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    id v32 = v39;
    static DispatchQoS.unspecified.getter();
    unint64_t v47 = _swiftEmptyArrayStorage;
    sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v33 = v41;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v34 = (void *)v46;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v31);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v33, v5);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v42);
    swift_release();
    return (void *)swift_release();
  }
  uint64_t v46 = v17;
  uint64_t result = self;
  id v44 = result;
  if (v46 >= 1)
  {
    id v36 = a2;
    uint64_t v37 = a3;
    uint64_t v38 = v5;
    uint64_t v19 = 0;
    unint64_t v20 = v14 & 0xC000000000000001;
    do
    {
      if (v20) {
        id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v21 = *(id *)(v14 + 8 * v19 + 32);
      }
      uint64_t v22 = v21;
      ++v19;
      dispatch_group_enter(v15);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v15;
      *(void *)(v23 + 24) = v16;
      uint64_t v24 = v15;
      swift_retain();
      id v25 = [v44 defaultManager];
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = sub_1003EDE10;
      v26[3] = v23;
      v26[4] = 0;
      v26[5] = 0;
      v26[6] = v22;
      uint64_t v52 = sub_1003ED5E4;
      uint64_t v53 = v26;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v49 = 1107296256;
      uint64_t v50 = sub_1001B6B50;
      uint64_t v51 = &unk_1006A9130;
      uint64_t v27 = _Block_copy(&aBlock);
      swift_retain();
      id v28 = v22;
      swift_release();
      [v25 fetchURLForItem:v28 completionHandler:v27];
      _Block_release(v27);

      swift_release();
      unint64_t v14 = v45;
    }
    while (v46 != v19);
    swift_bridgeObjectRelease();
    a3 = v37;
    uint64_t v5 = v38;
    uint64_t v29 = v43;
    a2 = v36;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_1003E98F0()
{
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  id v1 = [v0 description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1003E99C0(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t result = DOCAcceptableDragPasteboardTypes.getter();
  uint64_t v11 = result;
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(result + 16);
  if (v12)
  {
    unint64_t v13 = 0;
    uint64_t v35 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v36 = v3 + 16;
    id v31 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
    uint64_t v32 = v12;
    uint64_t v33 = result;
    unint64_t v34 = v6;
    while (v13 < *(void *)(v11 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v15 = *(void *)(v3 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v8, v11 + v14 + v15 * v13, v2);
      if (DOCDragPasteboardType.isFPItemFileOrLocation.getter())
      {
        uint64_t result = (*v31)(v8, v2);
      }
      else
      {
        uint64_t v16 = *v35;
        (*v35)(v6, v8, v2);
        uint64_t v17 = aBlock[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190EA0(0, *(void *)(v17 + 16) + 1, 1);
          uint64_t v17 = aBlock[0];
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_100190EA0(v18 > 1, v19 + 1, 1);
          uint64_t v17 = aBlock[0];
        }
        *(void *)(v17 + 16) = v19 + 1;
        unint64_t v20 = v17 + v14 + v19 * v15;
        uint64_t v6 = v34;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v16)(v20, v34, v2);
        aBlock[0] = v17;
        uint64_t v12 = v32;
        uint64_t v11 = v33;
      }
      if (v12 == ++v13)
      {
        uint64_t v9 = (void *)aBlock[0];
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    if (v29 == 1) {
      uint64_t v21 = 2;
    }
    else {
      uint64_t v21 = v29 == 2;
    }
    uint64_t v22 = self;
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = v30;
    v23[3] = v9;
    v23[4] = &v38;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1003ED48C;
    *(void *)(v24 + 24) = v23;
    aBlock[4] = sub_100162A48;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087990;
    void aBlock[3] = &unk_1006A8820;
    id v25 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v22 _performAsDataOwner:v21 block:v25];
    _Block_release(v25);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      uint64_t v27 = v38;
      swift_release();
      return (uint64_t)v27;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E9D70(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5, int a6)
{
  uint64_t v68 = a5;
  Swift::Int v69 = a2;
  uint64_t v70 = a1;
  uint64_t v9 = type metadata accessor for DispatchTimeInterval();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = (void *)type metadata accessor for DispatchTime();
  uint64_t v14 = *(v13 - 1);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v58 - v18;
  uint64_t v20 = swift_allocObject();
  uint64_t v71 = a4;
  uint64_t v72 = v20;
  *(void *)(v20 + 16) = 0;
  int v67 = a6;
  unint64_t v64 = v13;
  uint64_t v65 = v9;
  uint64_t v62 = v14;
  uint64_t v63 = v10;
  uint64_t v58 = (uint64_t *)(v20 + 16);
  id v59 = v12;
  unint64_t v60 = v17;
  id v61 = v19;
  if ((a6 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)a3;
    goto LABEL_23;
  }
  uint64_t v21 = a3 & 0xFFFFFFFFFFFFFF8;
  unint64_t isEscapingClosureAtFileLocation = (unint64_t)a3 >> 62;
  if (!((unint64_t)a3 >> 62))
  {
    if (*(uint64_t *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 5) {
      uint64_t v23 = 5;
    }
    else {
      uint64_t v23 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  while (1)
  {
    if (a3 < 0) {
      uint64_t v26 = a3;
    }
    else {
      uint64_t v26 = v21;
    }
    swift_bridgeObjectRetain();
    int64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v55 < 0)
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      swift_unknownObjectRelease();
LABEL_16:
      uint64_t v28 = sub_1002F522C(v10, (uint64_t)v13, v26, v27);
      swift_unknownObjectRelease();
      goto LABEL_23;
    }
    if (v27 >= 5) {
      uint64_t v56 = 5;
    }
    else {
      uint64_t v56 = v27;
    }
    if (v27 >= 0) {
      uint64_t v23 = v56;
    }
    else {
      uint64_t v23 = 5;
    }
    swift_bridgeObjectRetain();
    uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v57 < v23)
    {
      __break(1u);
      return result;
    }
LABEL_7:
    if ((a3 & 0xC000000000000001) != 0 && v23)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
      Swift::Int v24 = 0;
      do
      {
        Swift::Int v25 = v24 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v24);
        Swift::Int v24 = v25;
      }
      while (v23 != v25);
    }
    if (isEscapingClosureAtFileLocation)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.subscript.getter();
      unint64_t v13 = v29;
      uint64_t v26 = v30;
      int64_t v27 = v31;
      swift_bridgeObjectRelease_n();
      if ((v27 & 1) == 0) {
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v10 = a3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v13 = (void *)((a3 & 0xFFFFFFFFFFFFFF8) + 32);
      int64_t v27 = (2 * v23) | 1;
      if ((v27 & 1) == 0) {
        goto LABEL_16;
      }
    }
    type metadata accessor for __ContiguousArrayStorageBase();
    swift_unknownObjectRetain_n();
    uint64_t v32 = (void *)swift_dynamicCastClass();
    if (!v32)
    {
      swift_unknownObjectRelease();
      uint64_t v32 = _swiftEmptyArrayStorage;
    }
    uint64_t v33 = v32[2];
    swift_release();
    if (__OFSUB__((unint64_t)v27 >> 1, v26)) {
      goto LABEL_34;
    }
    if (v33 != ((unint64_t)v27 >> 1) - v26) {
      goto LABEL_35;
    }
    uint64_t v28 = (void *)swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (!v28)
    {
      swift_unknownObjectRelease();
      uint64_t v28 = _swiftEmptyArrayStorage;
    }
LABEL_23:
    dispatch_semaphore_t v34 = dispatch_semaphore_create(0);
    id v66 = self;
    uint64_t v10 = swift_allocObject();
    uint64_t v35 = v68;
    uint64_t v36 = v69;
    *(void *)(v10 + 16) = v28;
    *(void *)(v10 + 24) = v35;
    uint64_t v37 = v70;
    *(void *)(v10 + 32) = v36;
    *(void *)(v10 + 40) = v37;
    *(unsigned char *)(v10 + 48) = v67 & 1;
    uint64_t v38 = v72;
    *(void *)(v10 + 56) = 5;
    *(void *)(v10 + 64) = v38;
    *(void *)(v10 + 72) = a3;
    *(void *)(v10 + 80) = v34;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_1003ED360;
    *(void *)(v39 + 24) = v10;
    aBlock[4] = sub_100162A48;
    aBlock[5] = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087990;
    void aBlock[3] = &unk_1006A8758;
    unint64_t v13 = _Block_copy(aBlock);
    id v40 = v35;
    id v41 = v36;
    id v42 = v37;
    swift_retain();
    uint64_t v43 = v34;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    [v66 _performAsDataOwner:v71 block:v13];
    _Block_release(v13);
    unint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
  }
  id v44 = v60;
  static DispatchTime.now()();
  unint64_t v45 = v59;
  *id v59 = 5;
  uint64_t v46 = v63;
  uint64_t v47 = v65;
  (*(void (**)(void *, void, uint64_t))(v63 + 104))(v45, enum case for DispatchTimeInterval.seconds(_:), v65);
  id v48 = v61;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v46 + 8))(v45, v47);
  uint64_t v49 = *(void (**)(char *, void *))(v62 + 8);
  uint64_t v50 = v44;
  uint64_t v51 = v64;
  v49(v50, v64);
  OS_dispatch_semaphore.wait(timeout:)();
  v49(v48, v51);
  LOBYTE(v47) = static DispatchTimeoutResult.== infix(_:_:)();

  if (v47)
  {
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v53 = v58;
    swift_beginAccess();
    uint64_t v52 = *v53;
  }
  swift_release();
  swift_release();
  return v52;
}

uint64_t sub_1003EA398(void *a1, char a2)
{
  if ([a1 isTrashed]) {
    return 0;
  }
  id v4 = [self defaultPermission];
  id v5 = [v4 dataOwnerStateForNode:a1];

  unint64_t v24 = (unint64_t)_swiftEmptyArrayStorage;
  if (v5 == (id)1) {
    uint64_t v6 = 2;
  }
  else {
    uint64_t v6 = v5 == (id)2;
  }
  uint64_t v7 = self;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = &v24;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1003EDE5C;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_100162A48;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  void aBlock[3] = &unk_1006A8F78;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [(id)v7 _performAsDataOwner:v6 block:v10];
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v7)
  {
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
  if (v24 >> 62) {
    goto LABEL_15;
  }
  if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_8:
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1003E99C0(v11, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v12 + 16))
  {
    id v13 = [self defaultManager];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v15 = [v13 eligibleActionsForDroppingUTIs:isa underItem:a1];

    type metadata accessor for FPAction(0);
    sub_100080220((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v16 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v17 = FPActionCopy;
    LOBYTE(isa) = sub_1005350BC(v17, v16);

    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
    if (isa) {
      uint64_t v18 = *(void *)(v12 + 16);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v19 = (void *)FPActionCopy;
    uint64_t v20 = v24;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1003E9D70(v19, a1, v20, v6, 0, a2 & 1);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1003EA75C(void *a1, void *a2, char a3)
{
  id v6 = [self defaultPermission];
  id v7 = [v6 dataOwnerStateForNode:a1];

  unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
  if (v7 == (id)1) {
    uint64_t v8 = 2;
  }
  else {
    uint64_t v8 = v7 == (id)2;
  }
  uint64_t v9 = self;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = &v25;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1003ED2BC;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1000879B8;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  void aBlock[3] = &unk_1006A86B8;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v9 _performAsDataOwner:v8 block:v12];
  _Block_release(v12);
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12)
  {
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_11;
    }
    goto LABEL_7;
  }
  if (v25 >> 62) {
    goto LABEL_15;
  }
  if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_11:
    uint64_t v16 = 0;
    goto LABEL_12;
  }
LABEL_7:
  if ([a1 isTrashed]) {
    goto LABEL_11;
  }
  id v13 = [v9 generalPasteboard];
  id v14 = [v13 pasteboardTypes];

  id v15 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  LOBYTE(v14) = sub_100109128(0xD00000000000001DLL, 0x80000001005F0A80, v15);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_1003E99C0(v17, (uint64_t)v7);
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    if (!v19)
    {
      uint64_t v21 = (void *)FPActionReparent;
      uint64_t v22 = v25;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1003E9D70(v21, a1, v22, v8, a2, a3 & 1);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  uint64_t v16 = 0;
LABEL_12:
  swift_release();
  swift_bridgeObjectRelease();
  return v16;
}

void **sub_1003EAAA4()
{
  swift_getObjectType();
  uint64_t v0 = DOCNode.documentAttributes.getter();
  if (!v0) {
    return (void **)_swiftEmptyArrayStorage;
  }
  id v1 = (void *)v0;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A00D0;
  uint64_t v3 = self;
  id v4 = [v3 localizedStringShowInMail];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_100371914;
  uint64_t v38 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_100156760;
  uint64_t v36 = &unk_1006A88C0;
  uint64_t v8 = _Block_copy(&aBlock);
  id v9 = [v5 initWithIdentifier:v6 localizedTitle:v7 unresolvedHandler:v8];

  _Block_release(v8);
  swift_release();
  [v9 setAvailability:UIDocumentBrowserActionAvailabilityAttributionView];
  NSString v10 = String._bridgeToObjectiveC()();
  uint64_t v11 = self;
  id v12 = [v11 systemImageNamed:v10];

  [v9 setImage:v12];
  [v9 setSupportsMultipleItems:0];
  *(void *)(v2 + 32) = v9;
  id v13 = [v1 sender];
  id v14 = [v3 localizedStringReply:v13];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  uint64_t v32 = v1;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_100371A50;
  uint64_t v38 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_100156760;
  uint64_t v36 = &unk_1006A88E8;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = [v15 initWithIdentifier:v16 localizedTitle:v17 unresolvedHandler:v18];

  _Block_release(v18);
  swift_release();
  [v19 setAvailability:UIDocumentBrowserActionAvailabilityAttributionView | 1];
  [v19 setMenuSortOrder:29];
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v11 systemImageNamed:v20];

  [v19 setImage:v21];
  [v19 setSupportsMultipleItems:0];

  *(void *)(v2 + 40) = v19;
  id v22 = [v3 localizedStringRemove];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v23 = objc_allocWithZone((Class)UIDocumentBrowserAction);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_100371ED8;
  uint64_t v38 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_100156760;
  uint64_t v36 = &unk_1006A8910;
  uint64_t v26 = _Block_copy(&aBlock);
  id v27 = [v23 initWithIdentifier:v24 localizedTitle:v25 unresolvedHandler:v26];

  _Block_release(v26);
  swift_release();
  [v27 setAvailability:UIDocumentBrowserActionAvailabilityAttributionView];
  NSString v28 = String._bridgeToObjectiveC()();
  id v29 = [v11 systemImageNamed:v28];

  [v27 setImage:v29];
  [v27 setSupportsMultipleItems:0];
  [v27 setActionStyle:1];
  *(void *)(v2 + 48) = v27;
  long long aBlock = (void **)v2;
  specialized Array._endMutation()();
  uint64_t v30 = aBlock;

  return v30;
}

void *sub_1003EB0B4(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v3 = DOCNode.fpfs_syncFetchFPItem()();
  id v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    id v5 = (void *)v3;
    uint64_t v6 = FPItem.collaborationHighlight.getter();
    if (v6)
    {
      NSString v7 = (void *)v6;
      unint64_t v43 = (unint64_t)_swiftEmptyArrayStorage;
      if (objc_msgSend(v5, "doc_isCollaborationInvitation"))
      {
        id v8 = [v7 hideContextMenu];
        if (v8)
        {
          id v9 = v8;
          id v10 = [v8 identifier];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v11 = [v9 title];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = v9;
          id v13 = objc_allocWithZone((Class)UIDocumentBrowserAction);
          id v36 = v9;
          NSString v14 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          NSString v15 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v41 = sub_1003ED4E0;
          uint64_t v42 = v12;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v38 = 1107296256;
          uint64_t v39 = sub_100156760;
          id v40 = &unk_1006A89B0;
          NSString v16 = _Block_copy(&aBlock);
          id v17 = [v13 initWithIdentifier:v14 localizedTitle:v15 unresolvedHandler:v16];

          _Block_release(v16);
          swift_release();
          NSString v18 = String._bridgeToObjectiveC()();
          id v19 = [self systemImageNamed:v18];

          [v17 setImage:v19];
          [v17 setAvailability:1];
          [v17 setMenuSortOrder:28];
          [v17 setActionStyle:1];
          id v20 = v17;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      id v21 = [v7 replyContextMenuWithPresentingViewController:a2 v36];
      if (v21)
      {
        id v22 = v21;
        id v23 = [v21 identifier];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v24 = [v22 title];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = v22;
        id v26 = objc_allocWithZone((Class)UIDocumentBrowserAction);
        id v27 = v22;
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v29 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v41 = sub_1003ED4E0;
        uint64_t v42 = v25;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v38 = 1107296256;
        uint64_t v39 = sub_100156760;
        id v40 = &unk_1006A8960;
        uint64_t v30 = _Block_copy(&aBlock);
        id v31 = [v26 initWithIdentifier:v28 localizedTitle:v29 unresolvedHandler:v30];

        _Block_release(v30);
        swift_release();
        NSString v32 = String._bridgeToObjectiveC()();
        id v33 = [self systemImageNamed:v32];

        [v31 setImage:v33];
        [v31 setAvailability:1];
        [v31 setMenuSortOrder:29];
        id v34 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        id v27 = v7;
      }

      return (void *)v43;
    }
    else
    {
    }
  }
  return v4;
}

void *sub_1003EB648(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DOCNodeCollaborationType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!(a1 >> 62))
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      swift_bridgeObjectRetain();
      goto LABEL_4;
    }
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v19 != 1) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v10 = *(void *)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  DOCNode.collaborationType.getter();
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v11 == enum case for DOCNodeCollaborationType.sharedWithYou(_:))
  {
    uint64_t v12 = sub_1003EB0B4(v10, a2);
LABEL_11:
    unint64_t v13 = (unint64_t)v12;
    goto LABEL_14;
  }
  if (v11 == enum case for DOCNodeCollaborationType.returnToSender(_:))
  {
    uint64_t v12 = sub_1003EAAA4();
    goto LABEL_11;
  }
  if (v11 == enum case for DOCNodeCollaborationType.none(_:))
  {
    unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_14:
    id v22 = _swiftEmptyArrayStorage;
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v14)
      {
LABEL_16:
        if (v14 >= 1)
        {
          for (uint64_t i = 0; i != v14; ++i)
          {
            if ((v13 & 0xC000000000000001) != 0) {
              id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v16 = *(id *)(v13 + 8 * i + 32);
            }
            id v17 = v16;
            if ((a3 & ~(unint64_t)[v16 availability]) != 0)
            {
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
          }
          swift_bridgeObjectRelease();
          NSString v18 = v22;
          goto LABEL_33;
        }
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14) {
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
    NSString v18 = _swiftEmptyArrayStorage;
LABEL_33:
    swift_unknownObjectRelease();
    return v18;
  }
LABEL_37:
  uint64_t result = (void *)_diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

void *sub_1003EB96C(unint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v70 = *(void ***)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v71 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v62 - v7;
  uint64_t v72 = type metadata accessor for LaunchUtils.LaunchAction();
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v9 = __chkstk_darwin(v72);
  int v11 = (void **)((char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v73 = (char *)&v62 - v12;
  uint64_t v13 = type metadata accessor for UTType();
  uint64_t v14 = *(void (***)(char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [self contextMenuShowsOpenWithApp];
  id v18 = [v17 isEnabled];

  if (!v18 || ![a2 isFilesApp]) {
    return _swiftEmptyArrayStorage;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v59 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v59 != 1) {
      return _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter())
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
      return _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_getObjectType();
  uint64_t v19 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (!v19) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v68 = v4;
  id v20 = v19;
  id v21 = [v19 filename];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v69 = v20;
  id v22 = [v20 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  UTType.identifier.getter();
  v14[1](v16, v13);
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v25 = [self documentProxyForName:v23 type:v24 MIMEType:0 isContentManaged:1 sourceAuditToken:0];

  uint64_t v26 = static LaunchUtils.allOpeningApps(for:requireOpenInPlace:)();
  if (!v26)
  {

    return _swiftEmptyArrayStorage;
  }
  unint64_t v27 = v26;
  id v67 = v25;
  NSString v28 = v73;
  static LaunchUtils.launchAction(for:urlManagedState:providerBundleId:appContainerBundleId:requireOpenIn:preferQuickLook:)();
  uint64_t v29 = v74;
  id v18 = (id)v72;
  (*(void (**)(void **, char *, uint64_t))(v74 + 16))(v11, v28, v72);
  int v30 = (*(uint64_t (**)(void **, id))(v29 + 88))(v11, v18);
  if (v30 == enum case for LaunchUtils.LaunchAction.openInApp(_:))
  {
    (*(void (**)(void **, id))(v29 + 96))(v11, v18);
    id v31 = *v11;
    swift_bridgeObjectRelease();
    id v32 = v31;
    static Logger.UI.getter();
    int v11 = (void **)v32;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    int v34 = v33;
    BOOL v35 = os_log_type_enabled((os_log_t)v29, v33);
    uint64_t v14 = (void (**)(char *, uint64_t))v70;
    if (v35)
    {
      int v66 = v34;
      id v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      v77[0] = v65;
      os_log_t v64 = (os_log_t)v29;
      uint64_t v63 = v36;
      *(_DWORD *)id v36 = 136315138;
      id v37 = [v11 localizedName:v36 + 4];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      id v18 = (id)v72;
      uint64_t v76 = sub_10009B0E4(v38, v40, v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v41 = v64;
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v66, "A default app exists and is %s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_21:
      uint64_t v4 = v68;
      v14[1](v8, v68);
      goto LABEL_22;
    }
LABEL_20:

    goto LABEL_21;
  }
  id v31 = 0;
  uint64_t v4 = v68;
  uint64_t v14 = (void (**)(char *, uint64_t))v70;
  if (v30 != enum case for LaunchUtils.LaunchAction.installConfiguration(_:)
    && v30 != enum case for LaunchUtils.LaunchAction.quicklook(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    goto LABEL_20;
  }
LABEL_22:
  id v79 = 0;
  int v11 = v31;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  unint64_t v44 = (unint64_t)sub_1003E4320(v27, v31, &v79, a1);

  swift_bridgeObjectRelease();
  if ((v44 & 0x8000000000000000) == 0 && (v44 & 0x4000000000000000) == 0)
  {
    uint64_t v45 = v44 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    goto LABEL_25;
  }
LABEL_41:
  unint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v45 = (uint64_t)sub_1002F48F4(v60);
  swift_bridgeObjectRelease();
LABEL_25:
  v77[0] = v45;
  sub_1003DEC28(v77);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = v77[0];
    uint64_t v78 = v77[0];
    if (v79)
    {
      uint64_t v47 = v79;
      if (v46 < 0 || (v46 & 0x4000000000000000) != 0)
      {
        swift_retain();
        uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
        swift_release();
        if (v61 < 0)
        {
          __break(1u);
          goto LABEL_44;
        }
      }
      sub_10051495C(0, 0, (uint64_t)v47);
    }
    id v48 = v71;
    static Logger.UI.getter();
    swift_bridgeObjectRetain();
    uint64_t v46 = Logger.logObject.getter();
    LOBYTE(v45) = static os_log_type_t.info.getter();
    if (!os_log_type_enabled((os_log_t)v46, (os_log_type_t)v45))
    {
      swift_bridgeObjectRelease_n();

      v14[1](v48, v4);
      (*(void (**)(char *, id))(v74 + 8))(v73, v18);
      goto LABEL_35;
    }
    uint64_t v70 = v11;
    uint64_t v47 = (_WORD *)swift_slowAlloc();
    v77[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v47 = 136315650;
    sub_10009E6C4(0, &qword_1007141E8);
    swift_bridgeObjectRetain();
    uint64_t v49 = Array.description.getter();
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_10009B0E4(v49, v51, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v47[6] = 2080;
    swift_beginAccess();
    unint64_t v52 = v78;
    sub_10009E6C4(0, &qword_100708700);
    swift_bridgeObjectRetain();
    uint64_t v53 = Array.description.getter();
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    uint64_t v75 = sub_10009B0E4(v53, v55, v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v47[11] = 2048;
    if (!(v52 >> 62))
    {
      uint64_t v56 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_33:
      uint64_t v57 = v68;
      uint64_t v58 = v72;
      uint64_t v75 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v46, (os_log_type_t)v45, "browser actions of %s is %s with %ld actions created", (uint8_t *)v47, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v14[1](v71, v57);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v58);
LABEL_35:
      swift_beginAccess();
      uint64_t v42 = v78;

      return (void *)v42;
    }
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void sub_1003EC438(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v92 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v90 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v91 = type metadata accessor for DispatchQoS();
  uint64_t v89 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  unint64_t v88 = &v78[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  unint64_t v87 = *(void (***)(void, void, void))(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v86 = &v78[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v78[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v15 = &v78[-v14];
  if (![a1 requiresAuthentication]) {
    goto LABEL_5;
  }
  id v16 = self;
  uint64_t v17 = v10;
  uint64_t v18 = v9;
  id v19 = [v16 sharedManager];
  unsigned int v20 = [v19 hasAnyProtectedApps];

  uint64_t v9 = v18;
  uint64_t v10 = v17;
  if (v20)
  {
    id v84 = v16;
    double Current = CFAbsoluteTimeGetCurrent();
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    id v22 = a1;
    NSString v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    int v25 = v24;
    BOOL v26 = os_log_type_enabled(v23, v24);
    uint64_t v82 = v4;
    if (v26)
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_t v80 = v23;
      uint64_t v28 = v27;
      uint64_t v81 = swift_slowAlloc();
      aBlock[0] = v81;
      *(_DWORD *)uint64_t v28 = 136315650;
      id v83 = v22;
      uint64_t v96 = (void *)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, aBlock);
      uint64_t v85 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v29 = Array.description.getter();
      int v79 = v25;
      uint64_t v30 = v29;
      uint64_t v31 = v7;
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      uint64_t v96 = (void *)sub_10009B0E4(v30, v33, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 22) = 2080;
      id v34 = v83;
      id v35 = [v34 description];
      uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v38 = v37;

      uint64_t v7 = v31;
      uint64_t v39 = v36;
      id v22 = v83;
      uint64_t v96 = (void *)sub_10009B0E4(v39, v38, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v40 = v80;
      _os_log_impl((void *)&_mh_execute_header, v80, (os_log_type_t)v79, "%s action requires auth. Checking for any nodes in protected locations: %s action: %s", (uint8_t *)v28, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v85);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v15, v9);
    }
    id v59 = v84;
    id v60 = [v84 sharedManager];
    uint64_t v61 = (double *)swift_allocObject();
    v61[2] = Current;
    *((void *)v61 + 3) = v22;
    uint64_t v62 = (void *)v93;
    *((void *)v61 + 4) = v94;
    *((void *)v61 + 5) = v62;
    swift_bridgeObjectRetain_n();
    id v63 = v22;
    id v64 = v62;
    id v65 = v63;
    id v66 = v64;
    id v67 = [v59 sharedManager];
    LODWORD(v64) = [v67 hasAnyProtectedApps];

    if (v64)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      id v69 = v86;
      uint64_t v68 = v87;
      ((void (**)(unsigned char *, void, uint64_t))v87)[13](v86, enum case for DispatchQoS.QoSClass.userInitiated(_:), v7);
      uint64_t v93 = static OS_dispatch_queue.global(qos:)();
      ((void (*)(unsigned char *, uint64_t))v68[1])(v69, v7);
      uint64_t v70 = (void *)swift_allocObject();
      v70[2] = v94;
      v70[3] = sub_1003ED958;
      v70[4] = v61;
      aBlock[4] = (uint64_t)sub_1003ED9A8;
      aBlock[5] = (uint64_t)v70;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1000666D8;
      void aBlock[3] = (uint64_t)&unk_1006A8D48;
      uint64_t v71 = _Block_copy(aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v87 = (void (**)(void, void, void))v66;
      uint64_t v72 = v88;
      static DispatchQoS.unspecified.getter();
      uint64_t v96 = _swiftEmptyArrayStorage;
      sub_100080220((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v73 = v65;
      uint64_t v74 = v60;
      uint64_t v75 = v90;
      uint64_t v76 = v82;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      unint64_t v77 = (void *)v93;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v71);

      (*(void (**)(unsigned char *, uint64_t))(v92 + 8))(v75, v76);
      (*(void (**)(unsigned char *, uint64_t))(v89 + 8))(v72, v91);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      sub_1003D9AA0(0, v65, v94, v66, Current);

      swift_bridgeObjectRelease();
    }
    swift_release();
  }
  else
  {
LABEL_5:
    static Logger.UI.getter();
    id v41 = a1;
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.debug.getter();
    int v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      aBlock[0] = v91;
      *(_DWORD *)uint64_t v45 = 136315394;
      LODWORD(v90) = v44;
      uint64_t v96 = (void *)sub_10009B0E4(0xD00000000000001CLL, 0x80000001005F0CE0, aBlock);
      uint64_t v92 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v89 = v45 + 14;
      id v46 = v41;
      id v47 = [v46 description];
      uint64_t v85 = v9;
      id v48 = v47;
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      unint64_t v52 = (void *)v93;
      uint64_t v96 = (void *)sub_10009B0E4(v49, v51, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, (os_log_type_t)v90, "%s no auth needed before running action: %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v92 + 8))(v13, v85);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
      unint64_t v52 = (void *)v93;
    }
    if ([v41 requiresResolvedItems])
    {
      id v53 = v41;
      id v54 = v52;
      sub_1003E8D38(v94, v53, v54);
    }
    else
    {
      id v55 = [v41 unresolvedHandler];
      if (v55)
      {
        uint64_t v56 = (void (**)(void, void, void))v55;
        id v57 = v52;
        _Block_copy(v56);
        sub_1000CBE70((uint64_t *)&unk_100706730);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        ((void (**)(void, Class, id))v56)[2](v56, isa, v57);

        _Block_release(v56);
        _Block_release(v56);
      }
    }
  }
}

uint64_t sub_1003ECF68()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003ECFB0(unint64_t a1)
{
  uint64_t v2 = (void (*)(uint64_t))v1[3];
  if (a1)
  {
    uint64_t v4 = v1[5];
    uint64_t v5 = v1[6];
    uint64_t v6 = v1[2];
    sub_1003DD310(v4, v5, a1, v6, v2);
  }
  else
  {
    ((void (*)(void))v2)();
  }
}

uint64_t sub_1003ED008()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCActionManager.LazyItems()
{
  return sub_1000D21B0();
}

uint64_t sub_1003ED0C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003ED120()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ED158()
{
  return sub_1003DDBD8(*(void *)(v0 + 16));
}

uint64_t sub_1003ED160@<X0>(uint64_t *a1@<X8>)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  uint64_t result = Array<A>.fpfs_syncFetchAllFPItems()();
  *a1 = result;
  return result;
}

uint64_t sub_1003ED1A4()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_1003ED1E4()
{
  unint64_t v1 = *(void **)(v0 + 24);
  id v2 = [*(id *)(v0 + 16) menuSortOrder];
  return v2 < [v1 menuSortOrder];
}

uint64_t sub_1003ED230(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003ED240(uint64_t result)
{
  if (result != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1003ED250(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003ED2AC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ED2BC()
{
  return sub_1003DAE64(*(void **)(v0 + 16));
}

uint64_t sub_1003ED2D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED2E8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ED2F8()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1003ED360()
{
  return sub_1003DB894(*(id **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80));
}

uint64_t sub_1003ED398()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED3A8()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003ED400(unint64_t a1)
{
  return sub_1003DB9B4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1003ED414()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED44C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003ED48C()
{
  v1._rawValue = *(void **)(v0 + 24);
  return sub_1003DB27C(*(void *)(v0 + 16), v1, *(void ***)(v0 + 32));
}

uint64_t sub_1003ED498()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED4A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003ED4E4()
{
  Swift::OpaquePointer v1 = (void (**)(void))[*(id *)(v0 + 16) actionBlock];
  v1[2]();

  _Block_release(v1);
}

uint64_t sub_1003ED53C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_1003ED58C(uint64_t a1)
{
  return sub_100176F08(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48));
}

uint64_t sub_1003ED59C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003ED5D8(void *a1, int a2, uint64_t a3)
{
  sub_1003DA994(a1, a2, a3, *(dispatch_group_t *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1003ED5E8()
{
  return sub_1003EDB20((void (*)(void))&_swift_release);
}

uint64_t sub_1003ED600()
{
  return sub_1003DAC48(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_1003ED60C()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003ED644()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003ED68C()
{
  return sub_1003DD264(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1003ED698()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1003ED790(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  sub_1003DCD14(a1, a2, v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + v7 + 8), *(NSObject **)(v2 + v8), *(void *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(NSObject **)(v2 + ((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003ED870()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED8A8()
{
  return sub_1003DD180(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003ED8B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED8C0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED8F8()
{
  return sub_1003DD1D0(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003ED900()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003ED910()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1003ED958(uint64_t a1)
{
  sub_1003D9AA0(a1, *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(double *)(v1 + 16));
}

uint64_t sub_1003ED968()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003ED9A8()
{
  return sub_1003DDDC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1003ED9B4()
{
  return sub_1003EDB20((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_1003ED9CC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1003EDA14(char a1, uint64_t a2)
{
  sub_1003DA398(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1003EDA20(int a1)
{
  return sub_1003D98D8(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003EDA30()
{
  return sub_1003EDB20((void (*)(void))&_swift_release);
}

uint64_t sub_1003EDA48()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003EDA58()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003EDA68()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1003EDAC0(unint64_t a1)
{
  sub_100562BEC(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1003EDAD8()
{
  return sub_1003EDB20((void (*)(void))&_swift_release);
}

uint64_t sub_1003EDAF8(uint64_t a1, uint64_t a2)
{
  return sub_1003F3B44(a1, a2, *(void (**)(id, char *, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(uint8_t **)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_1003EDB08()
{
  return sub_1003EDB20((void (*)(void))&_swift_release);
}

uint64_t sub_1003EDB20(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1003EDB70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for DOCActionToolbarItemDescriptor(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for DOCActionToolbarItemDescriptor(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCActionToolbarItemDescriptor(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 10)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCActionToolbarItemDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(_WORD *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1003EDD68(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    uint64_t v2 = a2 ^ 0x80000000;
    *(_WORD *)(result + 8) = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for DOCActionToolbarItemDescriptor()
{
  return &type metadata for DOCActionToolbarItemDescriptor;
}

id sub_1003EDEA0(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  __asm { FMOV            V1.2D, #12.0 }
  *(_OWORD *)uint64_t v3 = xmmword_1005AA2D0;
  *((_OWORD *)v3 + 1) = _Q1;
  *((_OWORD *)v3 + 2) = xmmword_1005AA2E0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___iconImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButtonContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___mainContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel] = a1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateHeaderView();
  swift_retain();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1003EE0E0();

  swift_release();
  return v9;
}

uint64_t sub_1003EDFB8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel);
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_beginAccess();
  swift_retain();
  sub_1001144AC((uint64_t)v5, v2 + 40);
  swift_endAccess();
  uint64_t v3 = *(void **)(v2 + 88);
  *(void *)(v2 + 88) = 1;
  sub_1000D8158(v3);
  swift_release();
  *(void *)(*(void *)(v0 + v1) + 24) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1003EE05C(uint64_t a1, void *a2)
{
  sub_1003EF44C(a2);
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1003EE0E0()
{
  uint64_t v1 = v0;
  id v2 = sub_1003EEB50();
  [v1 addSubview:v2];

  uint64_t v3 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A1560;
  id v5 = sub_1003EEB50();
  id v6 = [v5 leadingAnchor];

  id v7 = [v1 leadingAnchor];
  id v8 = [v6 constraintEqualToAnchor:v7];

  *(void *)(v4 + 32) = v8;
  id v9 = sub_1003EEB50();
  id v10 = [v9 trailingAnchor];

  id v11 = [v1 trailingAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  *(void *)(v4 + 40) = v12;
  id v13 = sub_1003EEB50();
  id v14 = [v13 topAnchor];

  id v15 = [v1 topAnchor];
  id v16 = (double *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  double v17 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics];
  id v18 = [v14 constraintEqualToAnchor:v15 constant:v17];

  *(void *)(v4 + 48) = v18;
  id v19 = sub_1003EEB50();
  id v20 = [v19 bottomAnchor];

  id v21 = [v1 bottomAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 constant:-v17];

  *(void *)(v4 + 56) = v22;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];

  id v24 = sub_1003EEB50();
  [v24 setDirectionalLayoutMargins:v16[3], v16[2], v16[3], v16[2]];

  id v25 = sub_1003EEB50();
  [v25 setLayoutMarginsRelativeArrangement:1];
}

id sub_1003EE3F8()
{
  return sub_1003EE86C(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___iconImageView, (uint64_t (*)(void))sub_1003EE418);
}

id sub_1003EE418()
{
  id v0 = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v1 = self;
  id v2 = [v1 configurationWithTextStyle:UIFontTextStyleSubheadline];
  id v3 = [v1 configurationWithWeight:6];

  [v0 setPreferredSymbolConfiguration:v2];
  id v4 = [self systemOrangeColor];
  [v0 setTintColor:v4];

  return v0;
}

id sub_1003EE53C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleLabel;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    id v5 = sub_1003EF7D0();
    [v4 setFont:v5];

    [v4 setAdjustsFontForContentSizeCategory:1];
    [v4 setTextAlignment:1];
    [v4 setNumberOfLines:0];
    id v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1003EE610()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleContainer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleContainer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___titleContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics + 40)];
    [v4 setAlignment:2];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1003EE6F4()
{
  return sub_1003EEB70(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_1003EE714);
}

id sub_1003EE714(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  id v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  id v6 = [self secondaryLabelColor];
  [v2 setTextColor:v6];

  return v2;
}

id sub_1003EE84C()
{
  return sub_1003EE86C(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButton, (uint64_t (*)(void))sub_1003EE8CC);
}

id sub_1003EE86C(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1003EE8CC()
{
  uint64_t v0 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)UIButton) init];
  static UIButton.Configuration.plain()();

  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.TitleAlignment.center(_:), v3);
  UIButton.Configuration.titleAlignment.setter();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  UIButton.configuration.setter();
  [v11 setDeliversTouchesForGesturesToSuperview:0];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

id sub_1003EEB50()
{
  return sub_1003EEB70(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___mainContainer, (uint64_t (*)(uint64_t))sub_1003EEBD4);
}

id sub_1003EEB70(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1003EEBD4(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UIStackView) init];
  [v2 setAxis:1];
  [v2 setDistribution:0];
  uint64_t v3 = a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics;
  [v2 setSpacing:*(double *)(a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_metrics + 32)];
  [v2 setAlignment:3];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v4 = self;
  id v5 = v2;
  id v6 = [v4 quaternarySystemFillColor];
  [v5 setBackgroundColor:v6];

  id v7 = [v5 layer];
  [v7 setCornerRadius:*(double *)(v3 + 8)];

  return v5;
}

void sub_1003EED08(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100706748);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  id v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  if (!a1) {
    return;
  }
  id v14 = a1;
  id v15 = [v14 actions];
  sub_10009E6C4(0, &qword_100707440);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    double v17 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_4;
    }
  }
  else
  {
    double v17 = *(void **)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
LABEL_4:
      if ((v16 & 0xC000000000000001) != 0)
      {
        id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        id v18 = *(id *)(v16 + 32);
      }
      double v17 = v18;
    }
  }
  swift_bridgeObjectRelease();
  id v19 = sub_1003EE84C();
  UIButton.configuration.getter();
  uint64_t v20 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v13, 1, v20))
  {
    sub_1002B91A4((uint64_t)v13, (uint64_t)v11);
    UIButton.configuration.setter();

    sub_1002B920C((uint64_t)v13);
  }
  else
  {
    id v32 = v14;
    if (v17)
    {
      id v21 = [v17 title];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v31 = 0;
    }
    id v22 = self;
    id v23 = [v2 traitCollection];
    id v24 = [v22 preferredFontForTextStyle:UIFontTextStyleSubheadline compatibleWithTraitCollection:v23];

    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    id v33 = v24;
    sub_1002DC380();
    AttributedString.subscript.setter();
    uint64_t v26 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v7, 0, 1, v26);
    UIButton.Configuration.attributedTitle.setter();
    UIButton.configuration.setter();

    id v14 = v32;
  }
  id v27 = sub_1003EE84C();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  *(void *)(swift_allocObject() + 16) = v17;
  id v28 = v17;
  uint64_t v29 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v27 setDoc_primaryAction:v29];
}

void sub_1003EF1D0(void *a1)
{
  id v2 = sub_1003EE610();
  id v3 = [v2 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v6 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * v6 + 32);
    }
    uint64_t v8 = v7;
    ++v6;
    id v9 = sub_1003EE610();
    [v9 removeArrangedSubview:v8];

    [v8 removeFromSuperview];
  }
  while (v5 != v6);
LABEL_10:
  swift_bridgeObjectRelease_n();
  id v10 = sub_1003EE610();
  id v11 = sub_1003EE3F8();
  [v10 addArrangedSubview:v11];

  id v12 = sub_1003EE610();
  id v13 = sub_1003EE53C();
  [v12 addArrangedSubview:v13];

  if (a1)
  {
    id v14 = a1;
    id v15 = sub_1003EE3F8();
    id v16 = [v14 icon];
    [v15 setImage:v16];

    id v17 = v14;
    id v18 = sub_1003EE53C();
    id v19 = [v17 title];
    [v18 setText:v19];
  }
}

void sub_1003EF44C(void *a1)
{
  id v3 = sub_1003EEB50();
  id v4 = [v3 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7 + 32);
    }
    id v9 = v8;
    ++v7;
    id v10 = sub_1003EEB50();
    [v10 removeArrangedSubview:v9];

    [v9 removeFromSuperview];
  }
  while (v6 != v7);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v11 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_viewModel);
  id v13 = *(void **)(v12 + 80);
  if (!v13)
  {
    swift_retain();
    goto LABEL_16;
  }
  swift_retain();
  if (![v13 contentType])
  {
    swift_release();
    goto LABEL_18;
  }
  id v14 = *(void **)(v12 + 80);
  if (!v14)
  {
LABEL_16:
    swift_release();
    goto LABEL_19;
  }
  id v15 = [v14 contentType];
  swift_release();
  if (v15 == (id)1)
  {
LABEL_18:
    id v16 = sub_1003EEB50();
    id v17 = sub_1003EE610();
    [v16 addArrangedSubview:v17];
  }
LABEL_19:
  uint64_t v18 = *(void *)(v1 + v11);
  id v19 = *(void **)(v18 + 80);
  if (!v19)
  {
    swift_retain();
    goto LABEL_25;
  }
  swift_retain();
  if (![v19 contentType])
  {
    swift_release();
    goto LABEL_27;
  }
  uint64_t v20 = *(void **)(v18 + 80);
  if (!v20)
  {
LABEL_25:
    swift_release();
    goto LABEL_28;
  }
  id v21 = [v20 contentType];
  swift_release();
  if (v21 == (id)1)
  {
LABEL_27:
    id v22 = sub_1003EEB50();
    id v23 = sub_1003EE6F4();
    [v22 addArrangedSubview:v23];
  }
LABEL_28:
  uint64_t v24 = *(void *)(v1 + v11);
  id v25 = *(void **)(v24 + 80);
  if (v25)
  {
    swift_retain();
    if (![v25 contentType])
    {
      swift_release();
LABEL_36:
      id v28 = sub_1003EEB50();
      id v29 = sub_1003EE84C();
      [v28 addArrangedSubview:v29];

      goto LABEL_37;
    }
    uint64_t v26 = *(void **)(v24 + 80);
    if (v26)
    {
      id v27 = [v26 contentType];
      swift_release();
      if (v27 != (id)1) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
  }
  else
  {
    swift_retain();
  }
  swift_release();
LABEL_37:
  sub_1003EF1D0(a1);
  if (a1)
  {
    id v30 = a1;
    id v31 = sub_1003EE6F4();
    id v32 = [v30 subTitle];
    [v31 setText:v32];
  }

  sub_1003EED08(a1);
}

id sub_1003EF7D0()
{
  sub_1000CBE70(&qword_100709D58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = UIFontDescriptorTextStyleAttribute;
  type metadata accessor for TextStyle(0);
  *(void *)(inited + 40) = UIFontTextStyleSubheadline;
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = UIFontDescriptorTraitsAttribute;
  sub_1000CBE70(&qword_100709D60);
  uint64_t v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0030;
  *(void *)(v3 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v3 + 40) = UIFontWeightSemibold;
  id v4 = UIFontDescriptorTextStyleAttribute;
  unint64_t v5 = UIFontTextStyleSubheadline;
  uint64_t v6 = UIFontDescriptorTraitsAttribute;
  uint64_t v7 = UIFontWeightTrait;
  unint64_t v8 = sub_100493E54(v3);
  *(void *)(inited + 104) = sub_1000CBE70((uint64_t *)&unk_10070C650);
  *(void *)(inited + 80) = v8;
  sub_100493F60(inited);
  id v9 = objc_allocWithZone((Class)UIFontDescriptor);
  type metadata accessor for AttributeName(0);
  sub_1001B0D18();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithFontAttributes:isa];

  uint64_t v12 = self;
  id v13 = [v0 traitCollection];
  id v14 = [v12 preferredFontForTextStyle:v5 compatibleWithTraitCollection:v13];

  [v14 pointSize];
  double v16 = v15;

  id v17 = [v12 fontWithDescriptor:v11 size:v16];
  return v17;
}

void sub_1003EFA20()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView_delegate);
  swift_release();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___actionButtonContainerView));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateHeaderView____lazy_storage___mainContainer);
}

id sub_1003EFAD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateHeaderView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCFileProviderSyncStateHeaderView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DOCFileProviderSyncStateHeaderView.Metrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCFileProviderSyncStateHeaderView.Metrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateHeaderView.Metrics()
{
  return &type metadata for DOCFileProviderSyncStateHeaderView.Metrics;
}

uint64_t sub_1003EFC4C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003EFC84()
{
  return [*(id *)(v0 + 16) performAction];
}

uint64_t sub_1003EFCA0()
{
  return 8;
}

uint64_t sub_1003EFCAC()
{
  return swift_release();
}

uint64_t sub_1003EFCB4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1003EFCC8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003EFCD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *unint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  unint64_t v8 = *(NSObject **)(v1 + 32);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1003F1EFC;
  *(void *)(v9 + 24) = v1;
  aBlock[4] = sub_100162A48;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  void aBlock[3] = &unk_1006A9850;
  id v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v10);
  _Block_release(v10);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1003EFEFC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if ((v8 & 1) == 0)
  {
    swift_beginAccess();
    *(unsigned char *)(a1 + 16) = 1;
    static os_signpost_type_t.event.getter();
    uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    uint64_t v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    a2(v10);
  }
  return v8 ^ 1u;
}

uint64_t sub_1003F008C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for OSSignpostID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    swift_beginAccess();
    *(unsigned char *)(a1 + 16) = 1;
    static os_signpost_type_t.event.getter();
    uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
    static OSSignpostID.exclusive.getter();
    os_signpost(_:dso:log:name:signpostID:_:_:)();

    uint64_t v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    return a2(v10);
  }
  return result;
}

uint64_t sub_1003F0218(uint64_t a1, void (*a2)(uint64_t))
{
  char v2 = sub_1003EFEFC(a1, a2);
  sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
  uint64_t v3 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  unint64_t v5 = sub_100073F48();
  uint64_t v6 = 28526;
  if (v2) {
    uint64_t v6 = 7562617;
  }
  unint64_t v7 = 0xE200000000000000;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = v5;
  if (v2) {
    unint64_t v7 = 0xE300000000000000;
  }
  *(void *)(v4 + 32) = v6;
  *(void *)(v4 + 40) = v7;
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003F030C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_beginAccess();
    uint64_t v8 = *(void *)(a2 + 16);
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v10 = (void *)(a4 + 16);
      id v77 = self;
      swift_bridgeObjectRetain();
      uint64_t v79 = v9 - 1;
      uint64_t v11 = 32;
      uint64_t v75 = a3;
      for (i = v8; ; uint64_t v8 = i)
      {
        uint64_t v78 = v11;
        long long v12 = *(_OWORD *)(v8 + v11);
        long long v13 = *(_OWORD *)(v8 + v11 + 32);
        long long v96 = *(_OWORD *)(v8 + v11 + 16);
        long long v97 = v13;
        long long v95 = v12;
        long long v14 = *(_OWORD *)(v8 + v11 + 48);
        long long v15 = *(_OWORD *)(v8 + v11 + 64);
        long long v16 = *(_OWORD *)(v8 + v11 + 96);
        long long v100 = *(_OWORD *)(v8 + v11 + 80);
        long long v101 = v16;
        long long v98 = v14;
        long long v99 = v15;
        long long v17 = *(_OWORD *)(v8 + v11 + 112);
        long long v18 = *(_OWORD *)(v8 + v11 + 128);
        long long v19 = *(_OWORD *)(v8 + v11 + 160);
        long long v104 = *(_OWORD *)(v8 + v11 + 144);
        long long v105 = v19;
        long long v102 = v17;
        long long v103 = v18;
        long long v20 = *(_OWORD *)(v8 + v11 + 176);
        long long v21 = *(_OWORD *)(v8 + v11 + 192);
        long long v22 = *(_OWORD *)(v8 + v11 + 208);
        char v109 = *(unsigned char *)(v8 + v11 + 224);
        long long v107 = v21;
        long long v108 = v22;
        long long v106 = v20;
        long long v23 = v95;
        sub_1003F1D54((uint64_t)&v95);
        sub_10035BB8C((void *)&v95 + 1);
        sub_1000A3084((uint64_t)&v96);
        uint64_t v24 = (void *)*((void *)&v108 + 1);
        *(_OWORD *)&v110[136] = v105;
        *(_OWORD *)&v110[152] = v106;
        *(_OWORD *)&v110[168] = v107;
        *(_OWORD *)&v110[184] = v108;
        *(_OWORD *)&v110[72] = v101;
        *(_OWORD *)&v110[88] = v102;
        *(_OWORD *)&v110[104] = v103;
        *(_OWORD *)&v110[120] = v104;
        *(_OWORD *)&v110[8] = v97;
        *(_OWORD *)&v110[24] = v98;
        *(_OWORD *)&v110[40] = v99;
        *(_OWORD *)&v110[56] = v100;
        *(void *)uint64_t v110 = a3;
        v110[200] = v109;
        if (v109 == 1)
        {
          sub_1000A2E70((uint64_t)&v97);
          double v25 = 0.0;
        }
        else
        {
          double v26 = *(double *)&v100;
          if (*(double *)&v102 < *(double *)&v100) {
            double v26 = *(double *)&v102;
          }
          double v27 = floor(v26);
          sub_1000A2E70((uint64_t)&v97);
          double v25 = v27 / 1.41421356;
        }
        id v28 = v24;
        id v29 = (id)v23;
        swift_unknownObjectRetain();
        long long v30 = v100;
        [v28 displayScale];
        id v32 = [objc_allocWithZone((Class)DOCThumbnailDescriptor) initWithSize:a3 minimumSize:1 scale:1 style:[*((id *)&v23 + 1) isFolder] isFolded:v30 isInteractive:v25 isFolder:v31];
        id v33 = [v77 sharedGenerator];
        id v34 = [v33 thumbnailForNode:*((void *)&v23 + 1) descriptor:v32];

        swift_beginAccess();
        sub_1000A3128((uint64_t)v110);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v94 = (void *)*v10;
        uint64_t v36 = v94;
        unint64_t v37 = v10;
        *uint64_t v10 = 0x8000000000000000;
        unint64_t v39 = sub_100088020((uint64_t)v29);
        uint64_t v40 = v36[2];
        BOOL v41 = (v38 & 1) == 0;
        uint64_t v42 = v40 + v41;
        if (__OFADD__(v40, v41)) {
          break;
        }
        char v43 = v38;
        if (v36[3] >= v42)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10035A730();
          }
        }
        else
        {
          sub_100351AC0(v42, isUniquelyReferenced_nonNull_native);
          unint64_t v44 = sub_100088020((uint64_t)v29);
          if ((v43 & 1) != (v45 & 1)) {
            goto LABEL_26;
          }
          unint64_t v39 = v44;
        }
        long long v92 = *(_OWORD *)&v110[160];
        v93[0] = *(_OWORD *)&v110[176];
        *(_OWORD *)((char *)v93 + 9) = *(_OWORD *)&v110[185];
        long long v88 = *(_OWORD *)&v110[96];
        long long v89 = *(_OWORD *)&v110[112];
        long long v90 = *(_OWORD *)&v110[128];
        long long v91 = *(_OWORD *)&v110[144];
        long long v84 = *(_OWORD *)&v110[32];
        long long v85 = *(_OWORD *)&v110[48];
        long long v86 = *(_OWORD *)&v110[64];
        long long v87 = *(_OWORD *)&v110[80];
        long long v82 = *(_OWORD *)v110;
        long long v83 = *(_OWORD *)&v110[16];
        if (v43)
        {
          id v46 = v94;
          uint64_t v47 = v94[7] + 224 * v39;
          long long v48 = *(_OWORD *)(v47 + 16);
          v80[0] = *(_OWORD *)v47;
          v80[1] = v48;
          long long v49 = *(_OWORD *)(v47 + 80);
          long long v51 = *(_OWORD *)(v47 + 32);
          long long v50 = *(_OWORD *)(v47 + 48);
          v80[4] = *(_OWORD *)(v47 + 64);
          v80[5] = v49;
          v80[2] = v51;
          v80[3] = v50;
          long long v52 = *(_OWORD *)(v47 + 144);
          long long v54 = *(_OWORD *)(v47 + 96);
          long long v53 = *(_OWORD *)(v47 + 112);
          v80[8] = *(_OWORD *)(v47 + 128);
          v80[9] = v52;
          v80[6] = v54;
          v80[7] = v53;
          long long v56 = *(_OWORD *)(v47 + 176);
          long long v55 = *(_OWORD *)(v47 + 192);
          long long v57 = *(_OWORD *)(v47 + 160);
          *(_OWORD *)((char *)v81 + 9) = *(_OWORD *)(v47 + 201);
          v80[11] = v56;
          v81[0] = v55;
          v80[10] = v57;
          sub_1003F1B70((uint64_t)v80);
          *(void *)uint64_t v47 = *((void *)&v23 + 1);
          *(void *)(v47 + 8) = v34;
          long long v58 = v93[0];
          *(_OWORD *)(v47 + 176) = v92;
          *(_OWORD *)(v47 + 192) = v58;
          *(_OWORD *)(v47 + 201) = *(_OWORD *)((char *)v93 + 9);
          long long v59 = v89;
          *(_OWORD *)(v47 + 112) = v88;
          *(_OWORD *)(v47 + 128) = v59;
          long long v60 = v91;
          *(_OWORD *)(v47 + 144) = v90;
          *(_OWORD *)(v47 + 160) = v60;
          long long v61 = v85;
          *(_OWORD *)(v47 + 48) = v84;
          *(_OWORD *)(v47 + 64) = v61;
          long long v62 = v87;
          *(_OWORD *)(v47 + 80) = v86;
          *(_OWORD *)(v47 + 96) = v62;
          long long v63 = v83;
          *(_OWORD *)(v47 + 16) = v82;
          *(_OWORD *)(v47 + 32) = v63;
        }
        else
        {
          id v46 = v94;
          v94[(v39 >> 6) + 8] |= 1 << v39;
          *(void *)(v46[6] + 8 * v39) = v23;
          uint64_t v64 = v46[7] + 224 * v39;
          *(void *)uint64_t v64 = *((void *)&v23 + 1);
          *(void *)(v64 + 8) = v34;
          long long v65 = v85;
          *(_OWORD *)(v64 + 48) = v84;
          *(_OWORD *)(v64 + 64) = v65;
          long long v66 = v83;
          *(_OWORD *)(v64 + 16) = v82;
          *(_OWORD *)(v64 + 32) = v66;
          long long v67 = v89;
          *(_OWORD *)(v64 + 112) = v88;
          *(_OWORD *)(v64 + 128) = v67;
          long long v68 = v87;
          *(_OWORD *)(v64 + 80) = v86;
          *(_OWORD *)(v64 + 96) = v68;
          *(_OWORD *)(v64 + 201) = *(_OWORD *)((char *)v93 + 9);
          long long v69 = v93[0];
          *(_OWORD *)(v64 + 176) = v92;
          *(_OWORD *)(v64 + 192) = v69;
          long long v70 = v91;
          *(_OWORD *)(v64 + 144) = v90;
          *(_OWORD *)(v64 + 160) = v70;
          uint64_t v71 = v46[2];
          BOOL v72 = __OFADD__(v71, 1);
          uint64_t v73 = v71 + 1;
          if (v72) {
            goto LABEL_25;
          }
          v46[2] = v73;
          id v74 = v29;
        }
        uint64_t v10 = v37;
        *unint64_t v37 = v46;

        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1000A30E0((uint64_t)v110);
        swift_unknownObjectRelease();
        sub_1003F1DC8((uint64_t)&v95);
        a3 = v75;
        if (!v79)
        {
          swift_release();
          return swift_bridgeObjectRelease();
        }
        --v79;
        uint64_t v11 = v78 + 232;
      }
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      sub_10009E6C4(0, &qword_100714430);
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003F0884(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  unint64_t v7 = a1;
  long long v8 = *(_OWORD *)(a4 + 144);
  long long v113 = *(_OWORD *)(a4 + 128);
  long long v114 = v8;
  long long v115 = *(_OWORD *)(a4 + 160);
  uint64_t v116 = *(void *)(a4 + 176);
  long long v9 = *(_OWORD *)(a4 + 80);
  long long v109 = *(_OWORD *)(a4 + 64);
  long long v110 = v9;
  long long v10 = *(_OWORD *)(a4 + 112);
  long long v111 = *(_OWORD *)(a4 + 96);
  long long v112 = v10;
  long long v11 = *(_OWORD *)(a4 + 16);
  long long v105 = *(_OWORD *)a4;
  long long v106 = v11;
  long long v12 = *(_OWORD *)(a4 + 48);
  long long v107 = *(_OWORD *)(a4 + 32);
  long long v108 = v12;
  if (a1 >> 62) {
    goto LABEL_27;
  }
  uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v13)
  {
    while (1)
    {
      double v14 = *(double *)(a4 + 48);
      double v15 = *(double *)(a4 + 56);
      id v69 = self;
      uint64_t v67 = v13 - 1;
      if (v13 < 1) {
        break;
      }
      uint64_t v16 = 0;
      long long v17 = a6 + 2;
      unint64_t v68 = v7 & 0xC000000000000001;
      long long v18 = (SEL *)&unk_1006E3000;
      unint64_t v66 = v7;
      while (1)
      {
        uint64_t v73 = v16;
        if (v68)
        {
          long long v19 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          long long v19 = *(void **)(v7 + 8 * v16 + 32);
          swift_unknownObjectRetain();
        }
        sub_1000A2E70(a4);
        id v20 = a5;
        unsigned __int8 v21 = [v19 v18[440]];
        double v22 = 0.0;
        if ((v21 & 1) == 0)
        {
          double v23 = *(double *)(a4 + 80);
          if (v23 >= v14) {
            double v23 = v14;
          }
          double v22 = floor(v23) / 1.41421356;
        }
        [v20 displayScale:v66];
        id v25 = [objc_allocWithZone((Class)DOCThumbnailDescriptor) initWithSize:a3 minimumSize:1 scale:1 style:[v19 v18[440]] isFolded:v14 isInteractive:v15 isFolder:v22 v24];
        id v26 = [v69 sharedGenerator];
        id v27 = [v26 thumbnailForNode:v19 descriptor:v25];

        *(void *)&long long v91 = v27;
        *((void *)&v91 + 1) = a3;
        long long v100 = v113;
        long long v101 = v114;
        long long v102 = v115;
        *(void *)&long long v103 = v116;
        long long v96 = v109;
        long long v97 = v110;
        long long v98 = v111;
        long long v99 = v112;
        long long v92 = v105;
        long long v93 = v106;
        long long v94 = v107;
        long long v95 = v108;
        *((void *)&v103 + 1) = v20;
        unsigned __int8 v104 = v21;
        id v28 = [v19 thumbnailIdentifier];
        swift_beginAccess();
        swift_unknownObjectRetain();
        sub_1003F1BFC(&v91);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        long long v90 = (void *)*v17;
        a6 = v90;
        void *v17 = 0x8000000000000000;
        unint64_t v7 = sub_100088020((uint64_t)v28);
        uint64_t v31 = a6[2];
        BOOL v32 = (v30 & 1) == 0;
        uint64_t v33 = v31 + v32;
        if (__OFADD__(v31, v32)) {
          break;
        }
        char v34 = v30;
        if (a6[3] >= v33)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_10035A730();
          }
        }
        else
        {
          sub_100351AC0(v33, isUniquelyReferenced_nonNull_native);
          unint64_t v35 = sub_100088020((uint64_t)v28);
          if ((v34 & 1) != (v36 & 1)) {
            goto LABEL_32;
          }
          unint64_t v7 = v35;
        }
        long long v86 = v101;
        long long v87 = v102;
        long long v88 = v103;
        unsigned __int8 v89 = v104;
        long long v82 = v97;
        long long v83 = v98;
        long long v84 = v99;
        long long v85 = v100;
        long long v78 = v93;
        long long v79 = v94;
        long long v80 = v95;
        long long v81 = v96;
        long long v76 = v91;
        long long v77 = v92;
        if (v34)
        {
          a6 = v90;
          uint64_t v37 = v90[7] + 224 * v7;
          long long v38 = *(_OWORD *)(v37 + 16);
          v74[0] = *(_OWORD *)v37;
          v74[1] = v38;
          long long v39 = *(_OWORD *)(v37 + 80);
          long long v41 = *(_OWORD *)(v37 + 32);
          long long v40 = *(_OWORD *)(v37 + 48);
          v74[4] = *(_OWORD *)(v37 + 64);
          v74[5] = v39;
          v74[2] = v41;
          v74[3] = v40;
          long long v42 = *(_OWORD *)(v37 + 144);
          long long v44 = *(_OWORD *)(v37 + 96);
          long long v43 = *(_OWORD *)(v37 + 112);
          v74[8] = *(_OWORD *)(v37 + 128);
          v74[9] = v42;
          v74[6] = v44;
          v74[7] = v43;
          long long v46 = *(_OWORD *)(v37 + 176);
          long long v45 = *(_OWORD *)(v37 + 192);
          long long v47 = *(_OWORD *)(v37 + 160);
          *(_OWORD *)((char *)v75 + 9) = *(_OWORD *)(v37 + 201);
          v74[11] = v46;
          v75[0] = v45;
          v74[10] = v47;
          sub_1003F1B70((uint64_t)v74);
          long long v48 = v87;
          *(_OWORD *)(v37 + 168) = v86;
          *(_OWORD *)(v37 + 184) = v48;
          *(_OWORD *)(v37 + 200) = v88;
          long long v49 = v83;
          *(_OWORD *)(v37 + 104) = v82;
          *(_OWORD *)(v37 + 120) = v49;
          long long v50 = v85;
          *(_OWORD *)(v37 + 136) = v84;
          *(_OWORD *)(v37 + 152) = v50;
          long long v51 = v79;
          *(_OWORD *)(v37 + 40) = v78;
          *(_OWORD *)(v37 + 56) = v51;
          long long v52 = v81;
          *(_OWORD *)(v37 + 72) = v80;
          *(_OWORD *)(v37 + 88) = v52;
          long long v53 = v77;
          *(_OWORD *)(v37 + 8) = v76;
          *(void *)uint64_t v37 = v19;
          *(unsigned char *)(v37 + 216) = v89;
          *(_OWORD *)(v37 + 24) = v53;
        }
        else
        {
          a6 = v90;
          v90[(v7 >> 6) + 8] |= 1 << v7;
          *(void *)(a6[6] + 8 * v7) = v28;
          uint64_t v54 = a6[7] + 224 * v7;
          long long v55 = v77;
          *(_OWORD *)(v54 + 8) = v76;
          *(_OWORD *)(v54 + 24) = v55;
          long long v56 = v80;
          *(_OWORD *)(v54 + 88) = v81;
          *(_OWORD *)(v54 + 72) = v56;
          long long v57 = v78;
          *(_OWORD *)(v54 + 56) = v79;
          *(_OWORD *)(v54 + 40) = v57;
          long long v58 = v84;
          *(_OWORD *)(v54 + 152) = v85;
          *(_OWORD *)(v54 + 136) = v58;
          long long v59 = v82;
          *(_OWORD *)(v54 + 120) = v83;
          *(_OWORD *)(v54 + 104) = v59;
          *(_OWORD *)(v54 + 200) = v88;
          long long v60 = v86;
          *(_OWORD *)(v54 + 184) = v87;
          *(void *)uint64_t v54 = v19;
          *(unsigned char *)(v54 + 216) = v89;
          *(_OWORD *)(v54 + 168) = v60;
          uint64_t v61 = a6[2];
          BOOL v62 = __OFADD__(v61, 1);
          uint64_t v63 = v61 + 1;
          if (v62) {
            goto LABEL_26;
          }
          a6[2] = v63;
          id v64 = v28;
        }
        void *v17 = a6;

        swift_bridgeObjectRelease();
        swift_endAccess();
        sub_1000A3084((uint64_t)&v91);
        swift_unknownObjectRelease();
        unint64_t v7 = v66;
        if (v67 == v73) {
          return swift_bridgeObjectRelease();
        }
        uint64_t v16 = v73 + 1;
        long long v18 = (SEL *)&unk_1006E3000;
      }
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (!v13) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_32:
    sub_10009E6C4(0, &qword_100714430);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
LABEL_28:
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1003F0E44(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  uint64_t v4 = *a2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = 0x8000000000000000;
  sub_1003F1380(v4, (uint64_t)sub_1003F1700, 0, isUniquelyReferenced_nonNull_native, &v7);
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1)
{
  swift_unknownObjectRelease();

  char v2 = *(void **)(a1 + 200);
}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  uint64_t v6 = *(void **)(a2 + 32);
  uint64_t v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v11 = *(void **)(a2 + 200);
  *(void *)(a1 + 200) = v11;
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  swift_unknownObjectRetain();
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v11;
  return a1;
}

uint64_t assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  unint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v7 = *(void **)(a2 + 32);
  long long v8 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  id v9 = v7;

  long long v10 = *(void **)(a2 + 40);
  long long v11 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v10;
  id v12 = v10;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  id v13 = *(void **)(a2 + 200);
  id v14 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  long long v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  id v9 = *(void **)(a1 + 200);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);

  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 209)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailPoolEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 208) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 209) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 209) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1003F1330()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003F1370()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1380(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v84 = a1;
  uint64_t v85 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v86 = v8;
  uint64_t v87 = 0;
  uint64_t v88 = v11 & v9;
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1003F17F8((uint64_t)&v70);
  sub_1000CBE0C((uint64_t)&v70, (uint64_t)v68, &qword_100714428);
  sub_1000CBE0C((uint64_t)v68, (uint64_t)v69, &qword_100714428);
  if (sub_1000CBEB4(v69) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10026AD14();
    return swift_release();
  }
  while (1)
  {
    uint64_t v31 = v70;
    long long v65 = v81;
    long long v66 = v82;
    v67[0] = v83[0];
    *(_OWORD *)((char *)v67 + 9) = *(_OWORD *)((char *)v83 + 9);
    long long v61 = v77;
    long long v62 = v78;
    long long v63 = v79;
    long long v64 = v80;
    long long v57 = v73;
    long long v58 = v74;
    long long v59 = v75;
    long long v60 = v76;
    long long v55 = v71;
    long long v56 = v72;
    BOOL v32 = (void *)*a5;
    unint64_t v34 = sub_100088020((uint64_t)v70);
    uint64_t v35 = v32[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v32[3] >= v37)
    {
      if (a4)
      {
        if (v33) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_10035A730();
        if (v38) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_100351AC0(v37, a4 & 1);
      unint64_t v39 = sub_100088020((uint64_t)v31);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_22;
      }
      unint64_t v34 = v39;
      if (v38)
      {
LABEL_7:
        id v13 = (void *)*a5;

        id v14 = (_OWORD *)(v13[7] + 224 * v34);
        long long v15 = v14[1];
        v53[0] = *v14;
        v53[1] = v15;
        long long v16 = v14[5];
        long long v18 = v14[2];
        long long v17 = v14[3];
        v53[4] = v14[4];
        v53[5] = v16;
        v53[2] = v18;
        v53[3] = v17;
        long long v19 = v14[6];
        long long v20 = v14[7];
        long long v21 = v14[9];
        v53[8] = v14[8];
        v53[9] = v21;
        v53[6] = v19;
        v53[7] = v20;
        long long v22 = v14[10];
        long long v23 = v14[11];
        long long v24 = v14[12];
        *(_OWORD *)&v54[9] = *(_OWORD *)((char *)v14 + 201);
        v53[11] = v23;
        *(_OWORD *)uint64_t v54 = v24;
        v53[10] = v22;
        sub_1003F1B70((uint64_t)v53);
        long long v25 = v66;
        v14[10] = v65;
        v14[11] = v25;
        v14[12] = v67[0];
        *(_OWORD *)((char *)v14 + 201) = *(_OWORD *)((char *)v67 + 9);
        long long v26 = v62;
        v14[6] = v61;
        v14[7] = v26;
        long long v27 = v64;
        v14[8] = v63;
        v14[9] = v27;
        long long v28 = v58;
        v14[2] = v57;
        void v14[3] = v28;
        long long v29 = v60;
        v14[4] = v59;
        v14[5] = v29;
        long long v30 = v56;
        *id v14 = v55;
        v14[1] = v30;
        goto LABEL_8;
      }
    }
    long long v41 = (void *)*a5;
    *(void *)(*a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    *(void *)(v41[6] + 8 * v34) = v31;
    long long v42 = (_OWORD *)(v41[7] + 224 * v34);
    long long v43 = v60;
    v42[4] = v59;
    v42[5] = v43;
    long long v44 = v58;
    v42[2] = v57;
    v42[3] = v44;
    long long v45 = v64;
    v42[8] = v63;
    v42[9] = v45;
    long long v46 = v62;
    v42[6] = v61;
    v42[7] = v46;
    *(_OWORD *)((char *)v42 + 201) = *(_OWORD *)((char *)v67 + 9);
    long long v47 = v67[0];
    long long v48 = v65;
    v42[11] = v66;
    v42[12] = v47;
    v42[10] = v48;
    long long v49 = v56;
    *long long v42 = v55;
    v42[1] = v49;
    uint64_t v50 = v41[2];
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51) {
      goto LABEL_21;
    }
    v41[2] = v52;
LABEL_8:
    sub_1003F17F8((uint64_t)&v70);
    sub_1000CBE0C((uint64_t)&v70, (uint64_t)v68, &qword_100714428);
    sub_1000CBE0C((uint64_t)v68, (uint64_t)v69, &qword_100714428);
    a4 = 1;
    if (sub_1000CBEB4(v69) == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_10009E6C4(0, &qword_100714430);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_1003F1700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  long long v3 = *(_OWORD *)(a1 + 184);
  v11[10] = *(_OWORD *)(a1 + 168);
  v11[11] = v3;
  v12[0] = *(_OWORD *)(a1 + 200);
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(a1 + 209);
  long long v4 = *(_OWORD *)(a1 + 120);
  v11[6] = *(_OWORD *)(a1 + 104);
  v11[7] = v4;
  long long v5 = *(_OWORD *)(a1 + 152);
  v11[8] = *(_OWORD *)(a1 + 136);
  v11[9] = v5;
  long long v6 = *(_OWORD *)(a1 + 56);
  v11[2] = *(_OWORD *)(a1 + 40);
  v11[3] = v6;
  long long v7 = *(_OWORD *)(a1 + 88);
  v11[4] = *(_OWORD *)(a1 + 72);
  v11[5] = v7;
  long long v8 = *(_OWORD *)(a1 + 24);
  v11[0] = *(_OWORD *)(a1 + 8);
  v11[1] = v8;
  *(_OWORD *)(a2 + 168) = *(_OWORD *)(a1 + 168);
  *(_OWORD *)(a2 + 184) = *(_OWORD *)(a1 + 184);
  *(_OWORD *)(a2 + 200) = *(_OWORD *)(a1 + 200);
  *(_OWORD *)(a2 + 209) = *(_OWORD *)(a1 + 209);
  *(_OWORD *)(a2 + 104) = *(_OWORD *)(a1 + 104);
  *(_OWORD *)(a2 + 120) = *(_OWORD *)(a1 + 120);
  *(_OWORD *)(a2 + 136) = *(_OWORD *)(a1 + 136);
  *(_OWORD *)(a2 + 152) = *(_OWORD *)(a1 + 152);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 72) = *(_OWORD *)(a1 + 72);
  *(_OWORD *)(a2 + 88) = *(_OWORD *)(a1 + 88);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(void *)a2 = v2;
  id v9 = v2;
  return sub_10035BB8C(v11);
}

uint64_t sub_1003F17F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (v4)
  {
    uint64_t v7 = (v4 - 1) & v4;
    unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
    uint64_t v9 = *(void *)(v3 + 56);
    uint64_t v10 = *(void **)(*(void *)(v3 + 48) + 8 * v8);
    uint64_t v11 = (long long *)(v9 + 224 * v8);
    long long v12 = v11[1];
    long long v33 = *v11;
    long long v34 = v12;
    long long v13 = v11[2];
    long long v14 = v11[3];
    long long v15 = v11[5];
    long long v37 = v11[4];
    long long v38 = v15;
    long long v35 = v13;
    long long v36 = v14;
    long long v16 = v11[6];
    long long v17 = v11[7];
    long long v18 = v11[9];
    long long v41 = v11[8];
    long long v42 = v18;
    long long v39 = v16;
    long long v40 = v17;
    long long v19 = v11[10];
    long long v20 = v11[11];
    long long v21 = v11[12];
    *(_OWORD *)((char *)v45 + 9) = *(long long *)((char *)v11 + 201);
    long long v44 = v20;
    v45[0] = v21;
    long long v43 = v19;
    *(void *)long long v46 = v10;
    *(_OWORD *)&v46[40] = v35;
    *(_OWORD *)&v46[56] = v36;
    *(_OWORD *)&v46[72] = v37;
    *(_OWORD *)&v46[88] = v38;
    *(_OWORD *)&v46[104] = v39;
    *(_OWORD *)&v46[120] = v40;
    *(_OWORD *)&v46[136] = v41;
    *(_OWORD *)&v46[152] = v18;
    *(_OWORD *)&v46[168] = v19;
    *(_OWORD *)&v46[184] = v20;
    *(_OWORD *)&v46[200] = v21;
    *(_OWORD *)&v46[209] = *(_OWORD *)((char *)v45 + 9);
    *(_OWORD *)&v46[24] = v34;
    *(_OWORD *)&v46[8] = v33;
    v1[3] = v6;
    v1[4] = v7;
    long long v22 = (void (*)(_OWORD *))v1[5];
    v31[12] = *(_OWORD *)&v46[192];
    v31[13] = *(_OWORD *)&v46[208];
    char v32 = v46[224];
    v31[8] = *(_OWORD *)&v46[128];
    v31[9] = *(_OWORD *)&v46[144];
    v31[10] = *(_OWORD *)&v46[160];
    v31[11] = *(_OWORD *)&v46[176];
    v31[4] = *(_OWORD *)&v46[64];
    v31[5] = *(_OWORD *)&v46[80];
    v31[6] = *(_OWORD *)&v46[96];
    v31[7] = *(_OWORD *)&v46[112];
    v31[0] = *(_OWORD *)v46;
    v31[1] = *(_OWORD *)&v46[16];
    _OWORD v31[2] = *(_OWORD *)&v46[32];
    v31[3] = *(_OWORD *)&v46[48];
    id v23 = v10;
    sub_10035BB8C(&v33);
    v22(v31);
    sub_1003F1DC8((uint64_t)v46);
    return DOCSplitBrowserViewController.didCommitPreview(of:)(a1);
  }
  int64_t v25 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
  }
  else
  {
    int64_t v26 = (unint64_t)(v1[2] + 64) >> 6;
    if (v25 < v26)
    {
      uint64_t v27 = v1[1];
      unint64_t v28 = *(void *)(v27 + 8 * v25);
      if (v28)
      {
LABEL_7:
        uint64_t v7 = (v28 - 1) & v28;
        unint64_t v8 = __clz(__rbit64(v28)) + (v25 << 6);
        int64_t v6 = v25;
        goto LABEL_3;
      }
      int64_t v29 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v26)
      {
        unint64_t v28 = *(void *)(v27 + 8 * v29);
        if (v28)
        {
LABEL_10:
          int64_t v25 = v29;
          goto LABEL_7;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v26)
        {
          unint64_t v28 = *(void *)(v27 + 8 * (v5 + 3));
          if (v28)
          {
            int64_t v25 = v5 + 3;
            goto LABEL_7;
          }
          int64_t v29 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v26)
          {
            unint64_t v28 = *(void *)(v27 + 8 * v29);
            if (v28) {
              goto LABEL_10;
            }
            int64_t v25 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v26)
            {
              unint64_t v28 = *(void *)(v27 + 8 * v25);
              if (v28) {
                goto LABEL_7;
              }
              int64_t v6 = v26 - 1;
              int64_t v30 = v5 + 6;
              while (v26 != v30)
              {
                unint64_t v28 = *(void *)(v27 + 8 * v30++);
                if (v28)
                {
                  int64_t v25 = v30 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    sub_1003F1BD4((uint64_t)v46);
    return sub_1000CBE0C((uint64_t)v46, a1, &qword_100714428);
  }
  return result;
}

uint64_t sub_1003F1A74()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F1AAC()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_1003F1B14()
{
  return sub_1003F0884(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + 40, *(void **)(v0 + 224), *(void **)(v0 + 232));
}

uint64_t sub_1003F1B28()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1B60()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1B70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 40);
  unint64_t v4 = *(void **)(a1 + 48);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

double sub_1003F1BD4(uint64_t a1)
{
  *(unsigned char *)(a1 + 224) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void *sub_1003F1BFC(void *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[4];
  unint64_t v4 = (void *)a1[5];
  int64_t v5 = (void *)a1[25];
  swift_unknownObjectRetain();
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  id v9 = v5;
  return a1;
}

uint64_t sub_1003F1C54()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003F1C8C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1C9C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F1CD4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003F1D1C()
{
  return sub_1003F030C(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1003F1D28()
{
  return sub_1003F0E44(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1003F1D44()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1D54(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 48);
  unint64_t v4 = *(void **)(a1 + 56);
  int64_t v5 = *(void **)(a1 + 216);
  id v6 = *(id *)a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v7 = v2;
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  return a1;
}

uint64_t sub_1003F1DC8(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 32);
  unint64_t v4 = *(void **)(a1 + 48);
  int64_t v5 = *(void **)(a1 + 56);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return a1;
}

void sub_1003F1E3C()
{
}

uint64_t sub_1003F1E44()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003F1E84()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F1E94()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F1EA8()
{
  return sub_1003F008C(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1003F1EB8()
{
  return sub_1003F0218(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1003F1EC4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F1EFC()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = &_swiftEmptyDictionarySingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003F1F40()
{
  return _swift_deallocObject(v0, 32, 7);
}

void destroy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 192);
}

uint64_t initializeWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  unint64_t v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  int64_t v5 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  id v7 = *(void **)(a2 + 192);
  *(void *)(a1 + 192) = v7;
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  id v8 = v3;
  id v9 = v4;
  id v10 = v5;
  id v11 = v7;
  return a1;
}

uint64_t assignWithCopy for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  unint64_t v4 = *(void **)(a2 + 8);
  int64_t v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v7 = *(void **)(a2 + 24);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 32);
  id v11 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v10;
  id v12 = v10;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  long long v13 = *(void **)(a2 + 192);
  long long v14 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = v13;
  id v15 = v13;

  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

__n128 initializeWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  long long v5 = *(void **)(a1 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v6 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  long long v9 = *(void **)(a1 + 192);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);

  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 201)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 200) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 201) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 201) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters()
{
  return &type metadata for DOCThumbnailLoadingPool.DOCThumbnailRequestParameters;
}

uint64_t DOCNode.newFolderButtonMode(for:)(void *a1)
{
  if (![v1 isFolder]) {
    return 2;
  }
  id v3 = [a1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;
  if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7) {
    goto LABEL_14;
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
LABEL_15:

    return 2;
  }
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;
  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15) {
    goto LABEL_15;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19) {
    goto LABEL_14;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22) {
    goto LABEL_15;
  }
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;
  if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26) {
    goto LABEL_14;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v27) {
    goto LABEL_15;
  }
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;
  if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31) {
    goto LABEL_14;
  }
  char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_15;
  }
  uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v34;
  if (v33 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v35 == v36) {
    goto LABEL_14;
  }
  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v37) {
    goto LABEL_15;
  }
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v40 = v39;
  if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41)
  {

    uint64_t v20 = 2;
    swift_bridgeObjectRelease_n();
    return v20;
  }
  char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v42 & 1) == 0 && ([v1 isTrashed] & 1) == 0)
  {
    type metadata accessor for DOCActionManager();
    return sub_10000FFC4(v1) & 1;
  }
  return 2;
}

void FPItem.createDOCItemBookmark(bookmark:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = [self defaultManager];
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  v10[6] = v4;
  v13[4] = sub_1003ED5E4;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1001B6B50;
  v13[3] = &unk_1006A9928;
  uint64_t v11 = _Block_copy(v13);
  swift_bridgeObjectRetain();
  id v12 = v4;
  swift_retain();
  swift_release();
  [v9 fetchURLForItem:v12 completionHandler:v11];
  _Block_release(v11);
}

uint64_t NSURL.bumpLastOpenDate(completionHandler:)()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  URL.bumpLastOpenDate(delay:completionHandler:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t NSURL.fetchItem(bumpLastOpenDate:configuration:completionHandler:)(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [self defaultManager];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  *(void *)(v13 + 24) = a4;
  *(void *)(v13 + 32) = a2;
  *(unsigned char *)(v13 + 40) = a1;
  swift_retain();
  id v14 = a2;
  FPItemManager.doc_fetchItem(for:completionHandler:)();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1003F2BF0(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5, char a6)
{
  if (a1)
  {
    id v10 = a1;
    if ([a5 interactionModeForPreparing]
      && ([a5 neverCreateBookmarkForOpenInPlace] & 1) == 0)
    {
      id v19 = [a5 hostIdentifier];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v20;

      if ((a6 & 1) == 0) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
      if ((a6 & 1) == 0)
      {
LABEL_6:
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = a3;
        *(void *)(v13 + 24) = a4;
        id v14 = self;
        swift_retain();
        id v15 = [v14 defaultManager];
        uint64_t v16 = (void *)swift_allocObject();
        _OWORD v16[2] = sub_1003F4818;
        v16[3] = v13;
        void v16[4] = v11;
        v16[5] = v12;
        v16[6] = v10;
        v21[4] = sub_1003ED5E4;
        v21[5] = v16;
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 1107296256;
        v21[2] = sub_1001B6B50;
        v21[3] = &unk_1006A9BB0;
        uint64_t v17 = _Block_copy(v21);
        swift_bridgeObjectRetain();
        id v18 = v10;
        swift_retain();
        swift_release();
        [v15 fetchURLForItem:v18 completionHandler:v17];
        _Block_release(v17);

        swift_bridgeObjectRelease();
        swift_release();

        return;
      }
    }
    FPItem.bumpLastOpenDate(delay:)(0.0);
    goto LABEL_6;
  }
  a3();
}

void sub_1003F2E08(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a3)
  {
    ((void (*)(void, uint64_t))a4)(0, a3);
  }
  else if (a1)
  {
    id v6 = a1;
    ((void (*)(void *, void))a4)(a1, 0);
  }
  else
  {
    type metadata accessor for UIDocumentBrowserError(0);
    sub_1003F4024((uint64_t)_swiftEmptyArrayStorage);
    sub_1003F4824();
    _BridgedStoredNSError.init(_:userInfo:)();
    a4(0);
  }
}

void URL.createDOCItemBookmark(bookmark:fpItem:completion:)(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id, char *, void), uint64_t a5)
{
  uint64_t v30 = a4;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  if (a2)
  {
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v15);
    uint64_t v17 = v16;
    NSString v18 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v12);
    unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v30;
    *(void *)(v20 + 24) = a5;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v19, (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    *(void *)(v20 + ((v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    aBlock[4] = sub_1003F441C;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6C98;
    void aBlock[3] = &unk_1006A99A0;
    long long v21 = _Block_copy(aBlock);
    id v22 = a3;
    swift_retain();
    swift_release();
    FPExtendBookmarkForDocumentURL();
    _Block_release(v21);
  }
  else
  {
    id v23 = objc_allocWithZone((Class)DOCItemBookmark);
    id v24 = a3;
    URL._bridgeToObjectiveC()(v25);
    char v27 = v26;
    id v28 = [v23 initWithURL:v26 fileProviderItem:v24];

    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, v5, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    v30(v28, v11, 0);

    sub_1001939F8((uint64_t)v11);
  }
}

void sub_1003F33D0(uint64_t a1, void *a2, void (*a3)(void, uint64_t, void), uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v67 = a1;
  unint64_t v68 = a6;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  id v69 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  NSString v18 = (char *)&v59 - v17;
  uint64_t v19 = type metadata accessor for Logger();
  __chkstk_darwin(v19);
  __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v59 - v24;
  long long v70 = a3;
  if (a2)
  {
    uint64_t v67 = v23;
    unint64_t v68 = v21;
    uint64_t v66 = a4;
    uint64_t v26 = v22;
    static Logger.Picker.getter();
    char v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v27(v15, a5, v12);
    os_log_t v28 = a2;
    long long v65 = v26;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v63 = v13;
      long long v64 = v12;
      int v60 = v31;
      uint64_t v33 = v32;
      uint64_t v34 = (void *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v72 = v61;
      *(_DWORD *)uint64_t v33 = 138412546;
      uint64_t v62 = a5;
      os_log_t v59 = v29;
      URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
      uint64_t v36 = v35;
      uint64_t v71 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v34 = v36;
      (*(void (**)(char *, NSObject *))(v63 + 8))(v15, v64);
      *(_WORD *)(v33 + 12) = 2080;
      uint64_t v71 = (uint64_t)a2;
      char v37 = v28;
      sub_1000CBE70(&qword_100714438);
      uint64_t v38 = String.init<A>(describing:)();
      uint64_t v71 = sub_10009B0E4(v38, v39, &v72);
      a5 = v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v28 = v59;
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v60, "Error while extending bookmark for %@ with error %s", (uint8_t *)v33, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v13 = v63;
      uint64_t v12 = (uint64_t)v64;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), void *))(v67 + 8))(v65, v68);
    uint64_t v48 = (uint64_t)v69;
    long long v47 = v70;
    v27(v69, a5, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v48, 0, 1, v12);
    v47(0, v48, 0);
    sub_1001939F8(v48);
  }
  else
  {
    uint64_t v40 = v68;
    if (v67)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v41 = objc_allocWithZone((Class)DOCItemBookmark);
      id v42 = v40;
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v44 = [v41 initWithBookmarkableString:v43 fileProviderItem:v42];

      uint64_t v45 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v69, a5, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v45, 0, 1, v12);
      id v46 = v44;
      v70(v44, v45, 0);

      sub_1001939F8(v45);
      URL.stopAccessingSecurityScopedResource()();

      return;
    }
    uint64_t v67 = v23;
    unint64_t v68 = v21;
    static Logger.Picker.getter();
    long long v49 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v62 = a5;
    long long v65 = v49;
    v49(v18, a5, v12);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    BOOL v52 = os_log_type_enabled(v50, v51);
    long long v53 = v70;
    uint64_t v54 = a4;
    if (v52)
    {
      long long v64 = v50;
      long long v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v66 = v54;
      *(_DWORD *)long long v55 = 138412290;
      URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
      uint64_t v57 = v56;
      uint64_t v72 = v56;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v63 = v57;
      uint64_t v50 = v64;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "bookmark for %@ is nil", v55, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      long long v53 = v70;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    }

    (*(void (**)(char *, void *))(v67 + 8))(v25, v68);
    uint64_t v58 = (uint64_t)v69;
    v65(v69, v62, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v58, 0, 1, v12);
    v53(0, v58, 0);
    sub_1001939F8(v58);
  }
  URL.stopAccessingSecurityScopedResource()();
}

uint64_t sub_1003F3B44(uint64_t a1, uint64_t a2, void (*a3)(id, char *, uint64_t), uint64_t a4, uint64_t a5, uint8_t *a6, void *a7)
{
  unint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v43 = a4;
  id v44 = a3;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v16 - 8);
  NSString v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v21 = (char *)&v39 - v20;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v40 = (void *)v22;
    static Logger.Picker.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)os_log_t v28 = 136315138;
      unint64_t v39 = v28 + 4;
      swift_getErrorValue();
      uint64_t v29 = Error.localizedDescription.getter();
      uint64_t v45 = sub_10009B0E4(v29, v30, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Error while fetching item : %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v12, v42);
    char v37 = v44;
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v23 + 56))(v18, 1, 1, v40);
    v37(0, v18, a2);
  }
  else
  {
    uint64_t v31 = a5;
    uint64_t v33 = (uint64_t)v39;
    uint64_t v32 = v40;
    sub_1000CBC00(a1, (uint64_t)v21, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
      URL.createDOCItemBookmark(bookmark:fpItem:completion:)(v31, v33, v32, v44, v43);
      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    }
    sub_1001939F8((uint64_t)v21);
    static Logger.Picker.getter();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Error while fetching item URL is nil", v36, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v42);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, 1, 1, v22);
    v44(0, v18, 0);
  }
  return sub_1001939F8((uint64_t)v18);
}

unint64_t sub_1003F4024(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_1007179C0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v6, (uint64_t)&v15, &qword_100714440);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1003F415C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1000A54B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003F415C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_1003F41D4(a1, a2, v4);
}

unint64_t sub_1003F41D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

void sub_1003F4324(void *a1, uint64_t a2)
{
  sub_1003F2BF0(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_1003F4334()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1003F441C(uint64_t a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void (**)(void, uint64_t, void))(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1003F33D0(a1, a2, v7, v8, v2 + v6, v9);
}

uint64_t getEnumTagSinglePayload for BookmarkInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BookmarkInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookmarkInfo()
{
  return &type metadata for BookmarkInfo;
}

uint64_t getEnumTagSinglePayload for DOCButtonMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003F463CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for DOCButtonMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1003F4724);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCButtonMode()
{
  return &type metadata for DOCButtonMode;
}

uint64_t sub_1003F475C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F4794(uint64_t a1, uint64_t a2)
{
  return sub_10043B0C8(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1003F47A0()
{
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1003F47E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003F4818(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1003F2E08(a1, a2, a3, *(void (**)(void))(v3 + 16));
}

unint64_t sub_1003F4824()
{
  unint64_t result = qword_1007060E8;
  if (!qword_1007060E8)
  {
    type metadata accessor for UIDocumentBrowserError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007060E8);
  }
  return result;
}

Class sub_1003F4890()
{
  uint64_t v1 = type metadata accessor for UIListContentConfiguration.ImageProperties();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  int v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v5 - 8);
  unsigned int v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  UICollectionViewCell.contentConfiguration.getter();
  if (v18)
  {
    sub_1000CBE70(&qword_100714448);
    int v12 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, v12 ^ 1u, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      goto LABEL_6;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v17, &qword_1007160C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  }
  static UIListContentConfiguration.cell()();
  sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007160B0);
LABEL_6:
  UIListContentConfiguration.imageProperties.getter();
  Class result = (Class)[v0 tintColor];
  if (result)
  {
    Class v14 = result;
    Class isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)result).super.isa;

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return isa;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003F4B70()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_1003F4BA4()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t static FavoriteFolderOperation.typeDisplayRepresentation.getter()
{
  return TypeDisplayRepresentation.init(stringLiteral:)(0x6F6974617265704FLL, 0xE90000000000006ELL);
}

_UNKNOWN **static FavoriteFolderOperation.allCases.getter()
{
  return &off_10068AF80;
}

uint64_t FavoriteFolderOperation.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x657469726F766166;
  }
  if (a1 == 1) {
    return 0x69726F7661666E75;
  }
  return 0x656C67676F74;
}

uint64_t sub_1003F4C60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1004C08C8(*a1, *a2);
}

Swift::Int sub_1003F4C6C()
{
  return Hasher._finalize()();
}

uint64_t sub_1003F4D10()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1003F4DA0()
{
  return Hasher._finalize()();
}

unint64_t sub_1003F4E40@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s5Files23FavoriteFolderOperationO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1003F4E70(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xEA00000000006574;
  uint64_t v5 = 0x69726F7661666E75;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656C67676F74;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x657469726F766166;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1003F4ED0(void *a1@<X8>)
{
  *a1 = &off_10068AFA8;
}

uint64_t sub_1003F4EE0(uint64_t a1)
{
  unint64_t v2 = sub_1003F89A8();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1003F4F2C(uint64_t a1)
{
  unint64_t v2 = sub_1003F8904();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1003F4F78()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737468);
  sub_10009D098(v6, (uint64_t)qword_100737468);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_1003F5190()
{
  uint64_t v0 = sub_1000CBE70(&qword_100714508);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100714510);
  __chkstk_darwin(v1);
  sub_100381030();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F15A0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000025;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714518);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714520);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_1003F5374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[72] = a3;
  v3[71] = a2;
  v3[70] = a1;
  uint64_t v4 = type metadata accessor for DOCFileEntity();
  v3[73] = v4;
  v3[74] = *(void *)(v4 - 8);
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  uint64_t v5 = sub_1000CBE70(&qword_1007144F0);
  v3[78] = v5;
  v3[79] = *(void *)(v5 - 8);
  v3[80] = swift_task_alloc();
  sub_1000CBE70(&qword_1007144F8);
  v3[81] = swift_task_alloc();
  v3[82] = swift_task_alloc();
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  return _swift_task_switch(sub_1003F5528, 0, 0);
}

uint64_t sub_1003F5528()
{
  uint64_t v1 = *(void *)(v0 + 576);
  Swift::String v2 = (_OWORD *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 568);
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = *(void *)(*(void *)(v0 + 528) + 16);
  *(void *)(v0 + 696) = v4;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 464) = v3;
  *(void *)(v0 + 472) = v1;
  *(void *)(v0 + 704) = sub_1003F8DD4();
  uint64_t v5 = (void *)ProgressReportingIntent.progress.getter();
  [v5 setTotalUnitCount:0];

  if (!v4)
  {
    *(_OWORD *)(v0 + 480) = *v2;
    goto LABEL_23;
  }
  IntentParameter.wrappedValue.getter();
  if (*(unsigned char *)(v0 + 940))
  {
    if (*(unsigned char *)(v0 + 940) == 1)
    {
      uint64_t v6 = IntentParameter.wrappedValue.getter();
      uint64_t v9 = *(void *)(v0 + 552);
      *(void *)(v0 + 784) = v9;
      uint64_t v10 = *(void *)(v9 + 16);
      *(void *)(v0 + 792) = v10;
      if (!v10)
      {
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 664), 1, 1, *(void *)(v0 + 624));
        uint64_t v17 = *(void *)(v0 + 792);
LABEL_15:
        *(void *)(v0 + 800) = v17;
        uint64_t v36 = *(void *)(v0 + 672);
        uint64_t v37 = *(void *)(v0 + 632);
        uint64_t v38 = *(void *)(v0 + 624);
        sub_1003F8E28(*(void *)(v0 + 664), v36);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v36, 1, v38) != 1)
        {
          unint64_t v39 = *(void **)(v0 + 672);
          uint64_t v40 = *(void *)(v0 + 624);
          uint64_t v41 = *(void *)(v0 + 608);
          *(void *)(v0 + 808) = *v39;
          sub_100142DFC((uint64_t)v39 + *(int *)(v40 + 48), v41);
          static Task<>.checkCancellation()();
          *(void *)(v0 + 816) = 0;
          type metadata accessor for MainActor();
          *(void *)(v0 + 824) = static MainActor.shared.getter();
          uint64_t v57 = dispatch thunk of Actor.unownedExecutor.getter();
          uint64_t v8 = v58;
          *(void *)(v0 + 832) = v57;
          *(void *)(v0 + 840) = v58;
          os_log_t v59 = sub_1003F6350;
          goto LABEL_28;
        }
        goto LABEL_22;
      }
      if (*(void *)(v9 + 16))
      {
        uint64_t v11 = *(void **)(v0 + 664);
        uint64_t v12 = *(void *)(v0 + 632);
        uint64_t v13 = *(void *)(v0 + 624);
        uint64_t v14 = *(unsigned __int8 *)(*(void *)(v0 + 592) + 80);
        uint64_t v15 = *(void *)(v0 + 640) + *(int *)(v13 + 48);
        sub_1001173A0(v9 + ((v14 + 32) & ~v14), v15);
        uint64_t v16 = (uint64_t)v11 + *(int *)(v13 + 48);
        *uint64_t v11 = 0;
        sub_100142DFC(v15, v16);
        uint64_t v17 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v13);
        goto LABEL_15;
      }
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v6 = IntentParameter.wrappedValue.getter();
    uint64_t v27 = *(void *)(v0 + 536);
    *(void *)(v0 + 856) = v27;
    uint64_t v28 = *(void *)(v27 + 16);
    *(void *)(v0 + 864) = v28;
    if (v28)
    {
      if (!*(void *)(v27 + 16))
      {
LABEL_33:
        __break(1u);
        return _swift_task_switch(v6, v7, v8);
      }
      uint64_t v29 = *(void **)(v0 + 648);
      uint64_t v30 = *(void *)(v0 + 632);
      uint64_t v31 = *(void *)(v0 + 624);
      uint64_t v32 = *(unsigned __int8 *)(*(void *)(v0 + 592) + 80);
      uint64_t v33 = *(void *)(v0 + 640) + *(int *)(v31 + 48);
      sub_1001173A0(v27 + ((v32 + 32) & ~v32), v33);
      uint64_t v34 = (uint64_t)v29 + *(int *)(v31 + 48);
      *uint64_t v29 = 0;
      sub_100142DFC(v33, v34);
      uint64_t v35 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(v29, 0, 1, v31);
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 648), 1, 1, *(void *)(v0 + 624));
      uint64_t v35 = *(void *)(v0 + 864);
    }
    *(void *)(v0 + 872) = v35;
    uint64_t v48 = *(void *)(v0 + 656);
    uint64_t v49 = *(void *)(v0 + 632);
    uint64_t v50 = *(void *)(v0 + 624);
    sub_1003F8E28(*(void *)(v0 + 648), v48);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v48, 1, v50) == 1) {
      goto LABEL_22;
    }
    long long v53 = *(void **)(v0 + 656);
    uint64_t v54 = *(void *)(v0 + 624);
    uint64_t v55 = *(void *)(v0 + 600);
    *(void *)(v0 + 880) = *v53;
    sub_100142DFC((uint64_t)v53 + *(int *)(v54 + 48), v55);
    static Task<>.checkCancellation()();
    *(void *)(v0 + 888) = 0;
    type metadata accessor for MainActor();
    *(void *)(v0 + 896) = static MainActor.shared.getter();
    uint64_t v57 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v61;
    *(void *)(v0 + 904) = v57;
    *(void *)(v0 + 912) = v61;
    os_log_t v59 = sub_1003F6A1C;
LABEL_28:
    uint64_t v6 = (uint64_t)v59;
    uint64_t v7 = v57;
    return _swift_task_switch(v6, v7, v8);
  }
  uint64_t v6 = IntentParameter.wrappedValue.getter();
  uint64_t v18 = *(void *)(v0 + 544);
  *(void *)(v0 + 712) = v18;
  uint64_t v19 = *(void *)(v18 + 16);
  *(void *)(v0 + 720) = v19;
  if (v19)
  {
    if (!*(void *)(v18 + 16))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v20 = *(void **)(v0 + 680);
    uint64_t v21 = *(void *)(v0 + 632);
    uint64_t v22 = *(void *)(v0 + 624);
    uint64_t v23 = *(unsigned __int8 *)(*(void *)(v0 + 592) + 80);
    uint64_t v24 = *(void *)(v0 + 640) + *(int *)(v22 + 48);
    sub_1001173A0(v18 + ((v23 + 32) & ~v23), v24);
    uint64_t v25 = (uint64_t)v20 + *(int *)(v22 + 48);
    *uint64_t v20 = 0;
    sub_100142DFC(v24, v25);
    uint64_t v26 = 1;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v22);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 680), 1, 1, *(void *)(v0 + 624));
    uint64_t v26 = *(void *)(v0 + 720);
  }
  *(void *)(v0 + 728) = v26;
  uint64_t v42 = *(void *)(v0 + 688);
  uint64_t v43 = *(void *)(v0 + 632);
  uint64_t v44 = *(void *)(v0 + 624);
  sub_1003F8E28(*(void *)(v0 + 680), v42);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v42, 1, v44) != 1)
  {
    uint64_t v45 = *(void **)(v0 + 688);
    uint64_t v46 = *(void *)(v0 + 624);
    uint64_t v47 = *(void *)(v0 + 616);
    *(void *)(v0 + 736) = *v45;
    sub_100142DFC((uint64_t)v45 + *(int *)(v46 + 48), v47);
    static Task<>.checkCancellation()();
    *(void *)(v0 + 744) = 0;
    type metadata accessor for MainActor();
    *(void *)(v0 + 752) = static MainActor.shared.getter();
    uint64_t v57 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v60;
    *(void *)(v0 + 760) = v57;
    *(void *)(v0 + 768) = v60;
    os_log_t v59 = sub_1003F5C84;
    goto LABEL_28;
  }
LABEL_22:
  long long v62 = *v2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 496) = v62;
LABEL_23:
  os_log_type_t v51 = (void *)ProgressReportingIntent.progress.getter();
  [v51 setTotalUnitCount:100];

  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v52 = *(uint64_t (**)(void))(v0 + 8);
  return v52();
}

uint64_t sub_1003F5C84()
{
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[73];
  id v3 = [self sharedManager];
  v0[97] = v3;
  uint64_t v4 = *(void *)(v1 + *(int *)(v2 + 32));
  v0[18] = v0;
  v0[23] = (char *)v0 + 937;
  v0[19] = sub_1003F5DCC;
  uint64_t v5 = swift_continuation_init();
  v0[49] = _NSConcreteStackBlock;
  v0[50] = 0x40000000;
  v0[51] = sub_1003F755C;
  v0[52] = &unk_1006A9D30;
  v0[53] = v5;
  [v3 addFavorite:v4 completion:v0 + 49];
  return _swift_continuation_await(v0 + 18);
}

uint64_t sub_1003F5DCC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 768);
  uint64_t v2 = *(void *)(*(void *)v0 + 760);
  return _swift_task_switch(sub_1003F5ED4, v2, v1);
}

uint64_t sub_1003F5ED4()
{
  uint64_t v1 = *(void **)(v0 + 776);
  swift_release();

  return _swift_task_switch(sub_1003F5F44, 0, 0);
}

uint64_t sub_1003F5F44()
{
  uint64_t v1 = *(void *)(v0 + 736);
  *(_OWORD *)(v0 + 432) = *(_OWORD *)(v0 + 568);
  uint64_t v2 = (uint64_t (*)())ProgressReportingIntent.progress.getter();
  uint64_t v5 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = v2;
  uint64_t v7 = *(void *)(v0 + 616);
  [v2 setTotalUnitCount:v5 / *(void *)(v0 + 696)];

  uint64_t v2 = (uint64_t (*)())sub_100117404(v7);
  uint64_t v8 = *(void *)(v0 + 744);
  unint64_t v9 = *(void *)(v0 + 728);
  if (v9 == *(void *)(v0 + 720))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 680), 1, 1, *(void *)(v0 + 624));
    unint64_t v10 = *(void *)(v0 + 720);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v0 + 712);
  if (v9 >= *(void *)(v11 + 16))
  {
LABEL_17:
    __break(1u);
    return _swift_task_switch(v2, v3, v4);
  }
  uint64_t v12 = *(unint64_t **)(v0 + 680);
  uint64_t v13 = *(void *)(v0 + 632);
  uint64_t v14 = *(void *)(v0 + 624);
  unint64_t v10 = v9 + 1;
  uint64_t v15 = *(void *)(v0 + 640) + *(int *)(v14 + 48);
  sub_1001173A0(v11+ ((*(unsigned __int8 *)(*(void *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 592) + 80))+ *(void *)(*(void *)(v0 + 592) + 72) * v9, v15);
  uint64_t v16 = (uint64_t)v12 + *(int *)(v14 + 48);
  *uint64_t v12 = v9;
  sub_100142DFC(v15, v16);
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
LABEL_6:
  *(void *)(v0 + 728) = v10;
  uint64_t v17 = *(void *)(v0 + 688);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 624);
  sub_1003F8E28(*(void *)(v0 + 680), v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) != 1)
  {
    uint64_t v22 = *(void **)(v0 + 688);
    uint64_t v23 = *(void *)(v0 + 624);
    uint64_t v24 = *(void *)(v0 + 616);
    *(void *)(v0 + 736) = *v22;
    sub_100142DFC((uint64_t)v22 + *(int *)(v23 + 48), v24);
    static Task<>.checkCancellation()();
    *(void *)(v0 + 744) = v8;
    if (v8)
    {
      sub_100117404(*(void *)(v0 + 616));
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_10;
    }
    type metadata accessor for MainActor();
    *(void *)(v0 + 752) = static MainActor.shared.getter();
    uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v27;
    *(void *)(v0 + 760) = v26;
    *(void *)(v0 + 768) = v27;
    uint64_t v2 = sub_1003F5C84;
    uint64_t v3 = v26;
    return _swift_task_switch(v2, v3, v4);
  }
  long long v28 = *(_OWORD *)(v0 + 568);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 496) = v28;
  uint64_t v20 = (void *)ProgressReportingIntent.progress.getter();
  [v20 setTotalUnitCount:100];

  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v21();
}

uint64_t sub_1003F6350()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[73];
  id v3 = [self sharedManager];
  v0[106] = v3;
  uint64_t v4 = *(void *)(v1 + *(int *)(v2 + 32));
  v0[26] = v0;
  v0[31] = v0 + 117;
  v0[27] = sub_1003F6498;
  uint64_t v5 = swift_continuation_init();
  v0[34] = _NSConcreteStackBlock;
  v0[35] = 0x40000000;
  v0[36] = sub_1003F755C;
  v0[37] = &unk_1006A9D18;
  v0[38] = v5;
  [v3 removeFavorite:v4 completion:v0 + 34];
  return _swift_continuation_await(v0 + 26);
}

uint64_t sub_1003F6498()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 840);
  uint64_t v2 = *(void *)(*(void *)v0 + 832);
  return _swift_task_switch(sub_1003F65A0, v2, v1);
}

uint64_t sub_1003F65A0()
{
  uint64_t v1 = *(void **)(v0 + 848);
  swift_release();

  return _swift_task_switch(sub_1003F6610, 0, 0);
}

uint64_t sub_1003F6610()
{
  uint64_t v1 = *(void *)(v0 + 808);
  *(_OWORD *)(v0 + 512) = *(_OWORD *)(v0 + 568);
  uint64_t v2 = (uint64_t (*)())ProgressReportingIntent.progress.getter();
  uint64_t v5 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = v2;
  uint64_t v7 = *(void *)(v0 + 608);
  [v2 setTotalUnitCount:v5 / *(void *)(v0 + 696)];

  uint64_t v2 = (uint64_t (*)())sub_100117404(v7);
  uint64_t v8 = *(void *)(v0 + 816);
  unint64_t v9 = *(void *)(v0 + 800);
  if (v9 == *(void *)(v0 + 792))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 664), 1, 1, *(void *)(v0 + 624));
    unint64_t v10 = *(void *)(v0 + 792);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v0 + 784);
  if (v9 >= *(void *)(v11 + 16))
  {
LABEL_17:
    __break(1u);
    return _swift_task_switch(v2, v3, v4);
  }
  uint64_t v12 = *(unint64_t **)(v0 + 664);
  uint64_t v13 = *(void *)(v0 + 632);
  uint64_t v14 = *(void *)(v0 + 624);
  unint64_t v10 = v9 + 1;
  uint64_t v15 = *(void *)(v0 + 640) + *(int *)(v14 + 48);
  sub_1001173A0(v11+ ((*(unsigned __int8 *)(*(void *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 592) + 80))+ *(void *)(*(void *)(v0 + 592) + 72) * v9, v15);
  uint64_t v16 = (uint64_t)v12 + *(int *)(v14 + 48);
  *uint64_t v12 = v9;
  sub_100142DFC(v15, v16);
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
LABEL_6:
  *(void *)(v0 + 800) = v10;
  uint64_t v17 = *(void *)(v0 + 672);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 624);
  sub_1003F8E28(*(void *)(v0 + 664), v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) != 1)
  {
    uint64_t v22 = *(void **)(v0 + 672);
    uint64_t v23 = *(void *)(v0 + 624);
    uint64_t v24 = *(void *)(v0 + 608);
    *(void *)(v0 + 808) = *v22;
    sub_100142DFC((uint64_t)v22 + *(int *)(v23 + 48), v24);
    static Task<>.checkCancellation()();
    *(void *)(v0 + 816) = v8;
    if (v8)
    {
      sub_100117404(*(void *)(v0 + 608));
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_10;
    }
    type metadata accessor for MainActor();
    *(void *)(v0 + 824) = static MainActor.shared.getter();
    uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v27;
    *(void *)(v0 + 832) = v26;
    *(void *)(v0 + 840) = v27;
    uint64_t v2 = sub_1003F6350;
    uint64_t v3 = v26;
    return _swift_task_switch(v2, v3, v4);
  }
  long long v28 = *(_OWORD *)(v0 + 568);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 496) = v28;
  uint64_t v20 = (void *)ProgressReportingIntent.progress.getter();
  [v20 setTotalUnitCount:100];

  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v21();
}

uint64_t sub_1003F6A1C()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[73];
  uint64_t v3 = self;
  id v4 = [v3 sharedManager];
  id v5 = [v4 favoritedLocations];

  sub_1002FFBD4();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v7 = *(id *)(v1 + *(int *)(v2 + 32));
  LOBYTE(v5) = sub_100109110((uint64_t)v7, v6);

  swift_bridgeObjectRelease();
  id v8 = [v3 sharedManager];
  if (v5)
  {
    v0[115] = v8;
    v0[2] = v0;
    v0[7] = (char *)v0 + 939;
    v0[3] = sub_1003F6CA4;
    uint64_t v9 = swift_continuation_init();
    v0[39] = _NSConcreteStackBlock;
    v0[40] = 0x40000000;
    v0[41] = sub_1003F755C;
    v0[42] = &unk_1006A9D00;
    v0[43] = v9;
    [v8 removeFavorite:v7 completion:v0 + 39];
    unint64_t v10 = v0 + 2;
  }
  else
  {
    v0[116] = v8;
    v0[10] = v0;
    v0[15] = (char *)v0 + 938;
    v0[11] = sub_1003F6E1C;
    uint64_t v11 = swift_continuation_init();
    v0[44] = _NSConcreteStackBlock;
    v0[45] = 0x40000000;
    v0[46] = sub_1003F755C;
    v0[47] = &unk_1006A9CE8;
    v0[48] = v11;
    [v8 addFavorite:v7 completion:v0 + 44];
    unint64_t v10 = v0 + 10;
  }
  return _swift_continuation_await(v10);
}

uint64_t sub_1003F6CA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 912);
  uint64_t v2 = *(void *)(*(void *)v0 + 904);
  return _swift_task_switch(sub_1003F6DAC, v2, v1);
}

uint64_t sub_1003F6DAC()
{
  uint64_t v1 = *(void **)(v0 + 920);
  swift_release();

  return _swift_task_switch(sub_1003F6F94, 0, 0);
}

uint64_t sub_1003F6E1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 912);
  uint64_t v2 = *(void *)(*(void *)v0 + 904);
  return _swift_task_switch(sub_1003F6F24, v2, v1);
}

uint64_t sub_1003F6F24()
{
  uint64_t v1 = *(void **)(v0 + 928);
  swift_release();

  return _swift_task_switch(sub_1003F6F94, 0, 0);
}

uint64_t sub_1003F6F94()
{
  uint64_t v1 = *(void *)(v0 + 880);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 568);
  uint64_t v2 = (uint64_t (*)())ProgressReportingIntent.progress.getter();
  uint64_t v5 = 100 * v1;
  if ((unsigned __int128)(v1 * (__int128)100) >> 64 != (100 * v1) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v6 = v2;
  uint64_t v7 = *(void *)(v0 + 600);
  [v2 setTotalUnitCount:v5 / *(void *)(v0 + 696)];

  uint64_t v2 = (uint64_t (*)())sub_100117404(v7);
  uint64_t v8 = *(void *)(v0 + 888);
  unint64_t v9 = *(void *)(v0 + 872);
  if (v9 == *(void *)(v0 + 864))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 632) + 56))(*(void *)(v0 + 648), 1, 1, *(void *)(v0 + 624));
    unint64_t v10 = *(void *)(v0 + 864);
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(v0 + 856);
  if (v9 >= *(void *)(v11 + 16))
  {
LABEL_17:
    __break(1u);
    return _swift_task_switch(v2, v3, v4);
  }
  uint64_t v12 = *(unint64_t **)(v0 + 648);
  uint64_t v13 = *(void *)(v0 + 632);
  uint64_t v14 = *(void *)(v0 + 624);
  unint64_t v10 = v9 + 1;
  uint64_t v15 = *(void *)(v0 + 640) + *(int *)(v14 + 48);
  sub_1001173A0(v11+ ((*(unsigned __int8 *)(*(void *)(v0 + 592) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0 + 592) + 80))+ *(void *)(*(void *)(v0 + 592) + 72) * v9, v15);
  uint64_t v16 = (uint64_t)v12 + *(int *)(v14 + 48);
  *uint64_t v12 = v9;
  sub_100142DFC(v15, v16);
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(v13 + 56))(v12, 0, 1, v14);
LABEL_6:
  *(void *)(v0 + 872) = v10;
  uint64_t v17 = *(void *)(v0 + 656);
  uint64_t v18 = *(void *)(v0 + 632);
  uint64_t v19 = *(void *)(v0 + 624);
  sub_1003F8E28(*(void *)(v0 + 648), v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v17, 1, v19) != 1)
  {
    uint64_t v22 = *(void **)(v0 + 656);
    uint64_t v23 = *(void *)(v0 + 624);
    uint64_t v24 = *(void *)(v0 + 600);
    *(void *)(v0 + 880) = *v22;
    sub_100142DFC((uint64_t)v22 + *(int *)(v23 + 48), v24);
    static Task<>.checkCancellation()();
    *(void *)(v0 + 888) = v8;
    if (v8)
    {
      sub_100117404(*(void *)(v0 + 600));
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_10;
    }
    type metadata accessor for MainActor();
    *(void *)(v0 + 896) = static MainActor.shared.getter();
    uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v27;
    *(void *)(v0 + 904) = v26;
    *(void *)(v0 + 912) = v27;
    uint64_t v2 = sub_1003F6A1C;
    uint64_t v3 = v26;
    return _swift_task_switch(v2, v3, v4);
  }
  long long v28 = *(_OWORD *)(v0 + 568);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 496) = v28;
  uint64_t v20 = (void *)ProgressReportingIntent.progress.getter();
  [v20 setTotalUnitCount:100];

  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
LABEL_10:
  return v21();
}

uint64_t sub_1003F73A0@<X0>(uint64_t a1@<X8>)
{
  if (qword_100705178 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_100737468);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1003F744C(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *unint64_t v6 = v2;
  v6[1] = sub_10000CB70;
  return sub_1003F5374(a1, v5, v4);
}

uint64_t sub_1003F74F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1003F7580();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1003F7520(uint64_t a1)
{
  unint64_t v2 = sub_100381030();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_1003F755C(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_1003F7580()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v51 = v0;
  uint64_t v52 = v1;
  __chkstk_darwin(v0);
  uint64_t v50 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v49 = &v32[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v48 = &v32[-v6];
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v7 - 8);
  uint64_t v46 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  *(void *)&long long v45 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v47 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = sub_1000CBE70(&qword_1007144E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v33 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v34 = v9;
  v18(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v36 = v18;
  uint64_t v35 = v10 + 104;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v18(v12, v17, v9);
  uint64_t v19 = v46;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v20 = *(void (**)(unsigned char *, void, uint64_t, void))(v15 + 56);
  uint64_t v38 = v15 + 56;
  unint64_t v39 = v20;
  v20(v19, 0, 1, v45);
  LOBYTE(v53) = 0;
  uint64_t v21 = type metadata accessor for IntentDialog();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v40 = v23;
  uint64_t v37 = v22 + 56;
  v23(v48, 1, 1, v21);
  v23(v49, 1, 1, v21);
  unsigned int v41 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v24 = *(void (**)(void))(v52 + 104);
  v52 += 104;
  uint64_t v42 = (void (*)(unsigned char *, void, uint64_t))v24;
  v24(v50);
  sub_1003F89A8();
  uint64_t v44 = IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  uint64_t v43 = sub_1000CBE70(&qword_1007075E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = v33;
  uint64_t v26 = v34;
  uint64_t v27 = v36;
  v36(v12, v33, v34);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v27(v12, v25, v26);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v39(v19, 0, 1, v45);
  uint64_t v55 = 0;
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  uint64_t v28 = swift_allocObject();
  long long v45 = xmmword_1005A0030;
  *(_OWORD *)(v28 + 16) = xmmword_1005A0030;
  static UTType.folder.getter();
  uint64_t v29 = v40;
  v40(v48, 1, 1, v21);
  v29(v49, 1, 1, v21);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v45;
  static UTType.folder.getter();
  type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject();
  uint64_t v53 = sub_100308720(v30, 1);
  uint64_t v54 = 2;
  v42(v50, v41, v51);
  sub_100142D4C();
  sub_1003F8D7C();
  IntentParameter<>.init<A>(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
  return v44;
}

unint64_t _s5Files23FavoriteFolderOperationO26caseDisplayRepresentationsSDyAC10AppIntents0F14RepresentationVGvgZ_0()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007080D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v58 = &v34[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v2 - 8);
  uint64_t v48 = &v34[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v57 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  uint64_t v54 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v38 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000CBE70(&qword_100714528);
  uint64_t v12 = sub_1000CBE70(&qword_100714530);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  uint64_t v15 = v12 - 8;
  uint64_t v55 = v12 - 8;
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v45 = v14;
  uint64_t v46 = 2 * v14;
  uint64_t v17 = swift_allocObject();
  uint64_t v47 = v17;
  *(_OWORD *)(v17 + 16) = xmmword_1005A0230;
  unint64_t v56 = v17 + v16;
  unint64_t v44 = v17 + v16 + *(int *)(v15 + 56);
  *(unsigned char *)(v17 + v16) = 0;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(unsigned char *, void, uint64_t))(v4 + 104);
  uint64_t v36 = v4 + 104;
  uint64_t v37 = v19;
  unsigned int v35 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  v19(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v57);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v53 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v20 = v48;
  v53(v48, 1, 1, v9);
  uint64_t v51 = type metadata accessor for DisplayRepresentation.Image();
  uint64_t v21 = *(void *)(v51 - 8);
  uint64_t v50 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v52 = v21 + 56;
  v50(v58, 1, 1, v51);
  uint64_t v22 = sub_1000CBE70(&qword_1007080D8);
  uint64_t v49 = v10 + 56;
  uint64_t v23 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v42 = ((v23 + 32) & ~v23) + *(void *)(v10 + 72);
  uint64_t v43 = v22;
  uint64_t v40 = (v23 + 32) & ~v23;
  uint64_t v41 = v23 | 7;
  uint64_t v24 = swift_allocObject();
  long long v39 = xmmword_1005A0030;
  *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = v18;
  uint64_t v26 = v57;
  uint64_t v27 = v37;
  v37(v6, v25, v57);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v28 = v58;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  uint64_t v29 = (unsigned char *)(v56 + v45);
  v45 += v56 + *(int *)(v55 + 56);
  *uint64_t v29 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v30 = v35;
  v27(v6, v35, v26);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v53(v20, 1, 1, v54);
  v50(v28, 1, 1, v51);
  *(_OWORD *)(swift_allocObject() + 16) = v39;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v27(v6, v30, v26);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v31 = v48;
  uint64_t v32 = v58;
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v56 + v46) = 2;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v27(v6, v30, v57);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v53(v31, 1, 1, v54);
  v50(v32, 1, 1, v51);
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_100495884(v47);
}

unint64_t _s5Files23FavoriteFolderOperationO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AF18, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_1003F86B4()
{
  unint64_t result = qword_100714450;
  if (!qword_100714450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714450);
  }
  return result;
}

unint64_t sub_1003F870C()
{
  unint64_t result = qword_100714458;
  if (!qword_100714458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714458);
  }
  return result;
}

unint64_t sub_1003F8764()
{
  unint64_t result = qword_100714460;
  if (!qword_100714460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714460);
  }
  return result;
}

unint64_t sub_1003F87BC()
{
  unint64_t result = qword_100714468;
  if (!qword_100714468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714468);
  }
  return result;
}

uint64_t sub_1003F8810()
{
  return sub_100073DF0(&qword_100714470, &qword_100714478);
}

unint64_t sub_1003F8850()
{
  unint64_t result = qword_100714480;
  if (!qword_100714480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714480);
  }
  return result;
}

unint64_t sub_1003F88A8()
{
  unint64_t result = qword_100714488;
  if (!qword_100714488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714488);
  }
  return result;
}

unint64_t sub_1003F8904()
{
  unint64_t result = qword_100714490;
  if (!qword_100714490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714490);
  }
  return result;
}

uint64_t sub_1003F8958()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1003F89A8()
{
  unint64_t result = qword_100714498;
  if (!qword_100714498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714498);
  }
  return result;
}

unint64_t sub_1003F8A00()
{
  unint64_t result = qword_1007144A0;
  if (!qword_1007144A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007144A0);
  }
  return result;
}

unint64_t sub_1003F8A58()
{
  unint64_t result = qword_1007144A8;
  if (!qword_1007144A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007144A8);
  }
  return result;
}

unint64_t sub_1003F8AB0()
{
  unint64_t result = qword_1007144B0;
  if (!qword_1007144B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007144B0);
  }
  return result;
}

unint64_t sub_1003F8B0C()
{
  unint64_t result = qword_1007144B8;
  if (!qword_1007144B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007144B8);
  }
  return result;
}

unint64_t sub_1003F8B64()
{
  unint64_t result = qword_1007144C0;
  if (!qword_1007144C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007144C0);
  }
  return result;
}

uint64_t sub_1003F8BB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003F8BD4()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for FavoriteFolderOperation(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003F8CBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FavoriteFolderOperation()
{
  return &type metadata for FavoriteFolderOperation;
}

ValueMetadata *type metadata accessor for FavoriteFoldersIntent()
{
  return &type metadata for FavoriteFoldersIntent;
}

uint64_t sub_1003F8D04()
{
  return sub_100073DF0(&qword_1007144D0, &qword_1007144D8);
}

uint64_t sub_1003F8D40()
{
  return sub_100073DF0(&qword_100712F60, &qword_10071B630);
}

unint64_t sub_1003F8D7C()
{
  unint64_t result = qword_1007075F0;
  if (!qword_1007075F0)
  {
    type metadata accessor for DOCFileEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1007075F0);
  }
  return result;
}

unint64_t sub_1003F8DD4()
{
  unint64_t result = qword_100714500;
  if (!qword_100714500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714500);
  }
  return result;
}

uint64_t sub_1003F8E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007144F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003F8E90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1003F8EBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCViewOptionsSection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003F8FB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewOptionsSection()
{
  return &type metadata for DOCViewOptionsSection;
}

unint64_t sub_1003F8FF0()
{
  unint64_t result = qword_100714538;
  if (!qword_100714538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714538);
  }
  return result;
}

void sub_1003F9044(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_1003F9054()
{
  unint64_t result = qword_100714540;
  if (!qword_100714540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714540);
  }
  return result;
}

char *sub_1003F90A8(void *a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item] = a1;
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_destinationFolder] = a2;
  *(void *)&v3[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager] = a3;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for DOCUnarchiveOperation();
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  uint64_t v10 = (char *)[v14 initWithItem:v7 destinationFolder:v8];
  uint64_t v11 = *(void **)&v10[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager];
  uint64_t v12 = v10;
  [v11 registerUndoOperationForSender:v12];

  return v12;
}

id sub_1003F9204()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v2 = result;
    v3._uint64_t countAndFlagsBits = 0x1000000000000029;
    v12._object = (void *)0x80000001005F1840;
    v3._object = (void *)0x80000001005F17F0;
    v4._object = (void *)0x80000001005F1820;
    v5._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v5._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0x1000000000000013;
    v12._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v5, (NSBundle)v2, v4, v12);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1005A0030;
    id v7 = [*(id *)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item) displayName];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 64) = sub_100073F48();
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v10;
    uint64_t v11 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1003F9374()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_item);
  Swift::String v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_destinationFolder);
  Swift::String v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DOCUnarchiveOperation());
  Swift::String v5 = sub_1003F90A8(v1, v2, v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  v10[4] = sub_1003F9758;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10000CAE4;
  v10[3] = &unk_1006A9E00;
  id v7 = _Block_copy(v10);
  uint64_t v8 = v5;
  swift_release();
  [v8 setUnarchiveCompletionBlock:v7];
  _Block_release(v7);

  return v8;
}

uint64_t sub_1003F94F4()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem];
  if (!v1) {
    return 0;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A04F0;
  *(void *)(v2 + 32) = v1;
  specialized Array._endMutation()();
  Swift::String v3 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_undoManager];
  objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
  id v4 = v1;
  id v5 = v3;
  uint64_t v6 = v0;
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)();
}

id sub_1003F965C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCUnarchiveOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCUnarchiveOperation()
{
  return self;
}

uint64_t sub_1003F9720()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003F9758(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  id v4 = *(id *)(v2 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem);
  *(void *)(v2 + OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem) = a1;
  id v3 = a1;
}

void sub_1003F97A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert;
  id v7 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert);
  if (v7) {
    [v7 dismissViewControllerAnimated:1 completion:0];
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  *id v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v8 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v8)
  {
    uint64_t v9 = *(void **)(a1 + v6);
    *(void *)(a1 + v6) = 0;

    if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state))
    {
      if (*(unsigned char *)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state) == 1) {
        sub_1003F9FA8();
      }
      else {
        sub_1003FAA00();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1003F9920(unsigned __int8 a1)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state;
  int v8 = v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state];
  uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  *uint64_t v6 = v9;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  id v10 = v9;
  LOBYTE(v9) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v9)
  {
    v1[v7] = a1;
    if (v8 != a1)
    {
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v1;
      aBlock[4] = sub_1003FF07C;
      aBlock[5] = v11;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006A9FF8;
      Swift::String v12 = _Block_copy(aBlock);
      uint64_t v13 = v1;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v12);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003F9AF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  v18[0] = 47;
  v18[1] = 0xE100000000000000;
  id v10 = [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration) hostIdentifier:47 0xE100000000000000];
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  v14._uint64_t countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  URLComponents.path.setter();
  URLComponents.url.getter();
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v5, v15);
  }
  return result;
}

uint64_t sub_1003F9D44(uint64_t a1, uint64_t a2)
{
  return sub_1003FEC74(a2);
}

CFNotificationCenterRef sub_1003F9D4C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [self defaultCenter];
  [v2 removeObserver:v0];

  CFNotificationCenterRef result = CFNotificationCenterGetDistributedCenter();
  if (result)
  {
    uint64_t v4 = result;
    CFNotificationCenterRemoveEveryObserver(v4, v0);

    v5.receiver = v0;
    v5.super_class = ObjectType;
    return (CFNotificationCenterRef)[super dealloc];
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1003F9FA8()
{
  uint64_t v1 = v0;
  id v2 = (void *)type metadata accessor for Logger();
  uint64_t v88 = *(v2 - 1);
  id v89 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchPredicate();
  uint64_t v87 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for DOCDeviceModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [*(id *)&v0[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration] hostIdentifier];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  id v16 = objc_allocWithZone((Class)LSApplicationRecord);
  id v17 = sub_100237C64(v13, v15, 0);
  uint64_t v85 = v11;
  uint64_t v86 = v9;
  long long v83 = v7;
  uint64_t v84 = v5;
  if (v17)
  {
    id v89 = v17;
    id v21 = [v17 localizedName];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    id v25 = (id)_DocumentManagerBundle();
    if (!v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v26 = v25;
    v27._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v96._uint64_t countAndFlagsBits = 0xD000000000000082;
    v96._object = (void *)0x80000001005F1970;
    v27._object = (void *)0x80000001005F1940;
    v28._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v28._object = (void *)0xEB00000000656C62;
    v29._uint64_t countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v96);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_100073F48();
    *(void *)(v30 + 32) = v22;
    *(void *)(v30 + 40) = v24;
    String.init(format:_:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = v85;
    static DOCDeviceModel.current.getter();
    int v32 = (*(uint64_t (**)(char *, uint64_t))(v86 + 88))(v31, v8);
    unsigned int v33 = v1;
    if (v32 == enum case for DOCDeviceModel.iPhone(_:))
    {
LABEL_8:
      uint64_t v34 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v34)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      unsigned int v35 = v34;
      unint64_t v36 = 0xD000000000000061;
      unint64_t v82 = 0x80000001005F1C90;
      uint64_t v37 = "New documents will be saved to iCloud Drive. Existing documents on your iPhone will not be moved.";
      goto LABEL_16;
    }
    if (v32 == enum case for DOCDeviceModel.iPad(_:))
    {
      uint64_t v38 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v38)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      unsigned int v35 = v38;
      unint64_t v36 = 0xD00000000000005FLL;
      unint64_t v82 = 0x80000001005F1C90;
      uint64_t v37 = "New documents will be saved to iCloud Drive. Existing documents on your iPad will not be moved.";
    }
    else
    {
      if (v32 != enum case for DOCDeviceModel.iPodTouch(_:))
      {
        if (v32 == enum case for DOCDeviceModel.vision(_:))
        {
          long long v81 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v81)
          {
LABEL_35:
            __break(1u);
            return;
          }
          unsigned int v35 = v81;
          unint64_t v36 = 0xD00000000000006BLL;
          unint64_t v46 = 0xD000000000000089;
          unint64_t v82 = 0x80000001005F1A70;
          unint64_t v40 = 0x80000001005F1A00;
          uint64_t v41 = 0x617A696C61636F4CLL;
          unint64_t v42 = 0xEB00000000656C62;
          v43.super.Class isa = v35;
          uint64_t v44 = 0;
          unint64_t v45 = 0xE000000000000000;
          goto LABEL_17;
        }
        if (v32 != enum case for DOCDeviceModel.other(_:))
        {
          _diagnoseUnexpectedEnumCase<A>(type:)();
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        goto LABEL_8;
      }
      long long v39 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v39)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      unsigned int v35 = v39;
      unint64_t v36 = 0xD00000000000005FLL;
      unint64_t v82 = 0x80000001005F1C90;
      uint64_t v37 = "New documents will be saved to iCloud Drive. Existing documents on your iPod will not be moved.";
    }
LABEL_16:
    unint64_t v40 = (unint64_t)(v37 - 32) | 0x8000000000000000;
    uint64_t v41 = 0x617A696C61636F4CLL;
    unint64_t v42 = 0xEB00000000656C62;
    v43.super.Class isa = v35;
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    unint64_t v46 = 0xD000000000000084;
LABEL_17:
    DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v36, *(Swift::String *)&v41, v43, *(Swift::String *)&v44, *(Swift::String *)(&v82 - 1));

    String.init(format:_:)();
    swift_bridgeObjectRelease();
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v48 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v49 = [self alertControllerWithTitle:v47 message:v48 preferredStyle:1];

    id v50 = (id)_DocumentManagerBundle();
    if (!v50)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v51 = v50;
    v52._uint64_t countAndFlagsBits = 0xD000000000000010;
    v97._uint64_t countAndFlagsBits = 0xD0000000000000B5;
    v97._object = (void *)0x80000001005F1B20;
    v52._object = (void *)0x80000001005F1B00;
    v53._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v53._object = (void *)0xEB00000000656C62;
    v54._uint64_t countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v97);

    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = v33;
    *(void *)(v55 + 24) = v49;
    id v56 = v33;
    id v57 = v49;
    NSString v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v94 = sub_1003FF26C;
    uint64_t v95 = v55;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v91 = 1107296256;
    long long v92 = sub_10041B2E4;
    long long v93 = &unk_1006AA048;
    os_log_t v59 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v60 = self;
    id v61 = [v60 actionWithTitle:v58 style:0 handler:v59];
    _Block_release(v59);

    [v57 addAction:v61];
    id v62 = (id)_DocumentManagerBundle();
    if (!v62)
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    uint64_t v63 = v62;
    v98._uint64_t countAndFlagsBits = 0xD000000000000030;
    v98._object = (void *)0x80000001005F1BE0;
    v64._uint64_t countAndFlagsBits = 0x776F4E20746F4ELL;
    v64._object = (void *)0xE700000000000000;
    v65._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v65._object = (void *)0xEB00000000656C62;
    v66._uint64_t countAndFlagsBits = 0;
    v66._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v98);

    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v56;
    *(void *)(v67 + 24) = v57;
    unint64_t v68 = (char *)v56;
    id v69 = v57;
    NSString v70 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v94 = sub_1003FF268;
    uint64_t v95 = v67;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v91 = 1107296256;
    long long v92 = sub_10041B2E4;
    long long v93 = &unk_1006AA098;
    uint64_t v71 = _Block_copy(&aBlock);
    swift_release();
    id v72 = [v60 actionWithTitle:v70 style:0 handler:v71];
    _Block_release(v71);

    [v69 addAction:v72];
    [v69 setPreferredAction:v61];
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v73 = v69;
    uint64_t v74 = static OS_dispatch_queue.main.getter();
    long long v76 = v83;
    uint64_t v75 = v84;
    *long long v83 = v74;
    uint64_t v77 = v87;
    (*(void (**)(uint64_t *, void, uint64_t))(v87 + 104))(v76, enum case for DispatchPredicate.onQueue(_:), v75);
    LOBYTE(v69) = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v77 + 8))(v76, v75);
    if (v69)
    {
      long long v78 = *(void **)&v68[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert];
      *(void *)&v68[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert] = v73;

      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        long long v80 = Strong;
        [Strong presentViewController:v73 animated:1 completion:0];
      }
      return;
    }
    goto LABEL_28;
  }
  static Logger.UI.getter();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to load hostApplicationRecord, so can not present promptToUseICloudOrLocal()", v20, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, id))(v88 + 8))(v4, v89);
}

uint64_t sub_1003FAA00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [*(id *)&v0[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration] hostIdentifier];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;

  id v10 = objc_allocWithZone((Class)LSApplicationRecord);
  id v11 = sub_100237C64(v7, v9, 0);
  id v16 = v11;
  if (v11)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v1;
    id v18 = v16;
    id v19 = v1;
    sub_1003FBDA4((uint64_t)sub_1003FF0CC, v17);

    return swift_release();
  }
  else
  {
    static Logger.UI.getter();
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to load hostApplicationRecord, so can not present promptToUseOtherOrLocal()", v14, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1003FAC30(void *a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)&v1[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_1003FF0C4;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AA0E8;
  id v12 = _Block_copy(aBlock);
  os_log_type_t v13 = v1;
  id v14 = a1;
  static DispatchQoS.unspecified.getter();
  v16[1] = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1003FAEE4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert);
  if (v2)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_100711140);
    id v4 = a2;
    id v5 = v2;
    LOBYTE(a2) = static NSObject.== infix(_:_:)();

    if (a2)
    {
      uint64_t v6 = sub_1003F9920(0);
      sub_10001C980(v6);
    }
  }
}

void sub_1003FAF80(char a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  *(unsigned char *)(v6 + 32) = a1;
  v10[4] = sub_1003FF11C;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000666D8;
  v10[3] = &unk_1006AA1D8;
  uint64_t v7 = _Block_copy(v10);
  id v8 = a2;
  id v9 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

void sub_1003FB05C(void *a1, void *a2, int a3)
{
  int v88 = a3;
  uint64_t v87 = a2;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v84 = *(void *)(v4 - 8);
  uint64_t v85 = v4;
  __chkstk_darwin(v4);
  long long v83 = (uint64_t *)((char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for DOCDeviceModel();
  uint64_t v81 = *(void *)(v6 - 8);
  uint64_t v82 = v6;
  __chkstk_darwin(v6);
  long long v80 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 localizedName];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  id v12 = (id)_DocumentManagerBundle();
  if (!v12) {
    goto LABEL_29;
  }
  os_log_type_t v13 = v12;
  v14._uint64_t countAndFlagsBits = 0xD000000000000024;
  v95._uint64_t countAndFlagsBits = 0xD000000000000069;
  v95._object = (void *)0x80000001005F1E10;
  v14._object = (void *)0x80000001005F1DE0;
  v15._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v15._object = (void *)0xEB00000000656C62;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v95);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v17 = swift_allocObject();
  long long v86 = xmmword_1005A0030;
  *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
  *(void *)(v17 + 56) = &type metadata for String;
  unint64_t v18 = sub_100073F48();
  *(void *)(v17 + 64) = v18;
  *(void *)(v17 + 32) = v9;
  *(void *)(v17 + 40) = v11;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v19 = (id)_DocumentManagerBundle();
  if (!v19)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v20 = v19;
  v21._uint64_t countAndFlagsBits = 0xD000000000000068;
  v96._uint64_t countAndFlagsBits = 0xD00000000000006BLL;
  v96._object = (void *)0x80000001005F1EF0;
  v21._object = (void *)0x80000001005F1E80;
  v22._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v22._object = (void *)0xEB00000000656C62;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v96);

  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v86;
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = v18;
  *(void *)(v24 + 32) = v9;
  *(void *)(v24 + 40) = v11;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = [self alertControllerWithTitle:v25 message:v26 preferredStyle:1];

  id v28 = (id)_DocumentManagerBundle();
  if (!v28)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  Swift::String v29 = v28;
  v30._uint64_t countAndFlagsBits = 0xD000000000000013;
  v97._uint64_t countAndFlagsBits = 0xD000000000000074;
  v97._object = (void *)0x80000001005F1F80;
  v30._object = (void *)0x80000001005F1F60;
  v31._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v31._object = (void *)0xEB00000000656C62;
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v97);

  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v34 = swift_allocObject();
  unsigned int v35 = v87;
  *(void *)(v34 + 16) = v87;
  long long v93 = sub_1003FF128;
  uint64_t v94 = v34;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v90 = 1107296256;
  uint64_t v91 = sub_1000666D8;
  long long v92 = &unk_1006AA228;
  unint64_t v36 = _Block_copy(&aBlock);
  uint64_t v37 = v35;
  swift_release();
  long long v93 = variable initialization expression of DOCButton.hoverEffectsAllowedIfInteractionDisabled;
  uint64_t v94 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v90 = 1107296256;
  uint64_t v91 = sub_1003FBC0C;
  long long v92 = &unk_1006AA250;
  uint64_t v38 = _Block_copy(&aBlock);
  [v27 _addActionWithTitle:v33 style:0 handler:v36 shouldDismissHandler:v38];
  _Block_release(v38);
  _Block_release(v36);

  if ((v88 & 1) == 0)
  {
    id v49 = v80;
    static DOCDeviceModel.current.getter();
    int v50 = (*(uint64_t (**)(char *, uint64_t))(v81 + 88))(v49, v82);
    if (v50 == enum case for DOCDeviceModel.iPhone(_:))
    {
LABEL_8:
      uint64_t v51 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v51)
      {
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      Swift::String v52 = v51;
      unint64_t v53 = 0xD000000000000011;
      unint64_t v79 = 0x80000001005F20C0;
      unint64_t v54 = 0x80000001005F20A0;
      goto LABEL_17;
    }
    if (v50 == enum case for DOCDeviceModel.iPad(_:))
    {
      uint64_t v55 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v55)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      Swift::String v52 = v55;
      unint64_t v79 = 0x80000001005F20C0;
      unint64_t v53 = 0x206F742065766153;
      uint64_t v56 = 0x61506920794DLL;
    }
    else
    {
      if (v50 != enum case for DOCDeviceModel.iPodTouch(_:))
      {
        if (v50 == enum case for DOCDeviceModel.vision(_:))
        {
          long long v78 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v78)
          {
LABEL_36:
            __break(1u);
            return;
          }
          Swift::String v52 = v78;
          unint64_t v53 = 0xD00000000000001BLL;
          unint64_t v63 = 0xD000000000000077;
          unint64_t v79 = 0x80000001005F2020;
          unint64_t v54 = 0x80000001005F2000;
          uint64_t v58 = 0x617A696C61636F4CLL;
          unint64_t v59 = 0xEB00000000656C62;
          v60.super.Class isa = v52;
          uint64_t v61 = 0;
          unint64_t v62 = 0xE000000000000000;
          goto LABEL_18;
        }
        if (v50 != enum case for DOCDeviceModel.other(_:))
        {
          _diagnoseUnexpectedEnumCase<A>(type:)();
          __break(1u);
          goto LABEL_28;
        }
        goto LABEL_8;
      }
      id v57 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v57)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      Swift::String v52 = v57;
      unint64_t v79 = 0x80000001005F20C0;
      unint64_t v53 = 0x206F742065766153;
      uint64_t v56 = 0x6F506920794DLL;
    }
    unint64_t v54 = v56 & 0xFFFFFFFFFFFFLL | 0xEF64000000000000;
LABEL_17:
    uint64_t v58 = 0x617A696C61636F4CLL;
    unint64_t v59 = 0xEB00000000656C62;
    v60.super.Class isa = v52;
    uint64_t v61 = 0;
    unint64_t v62 = 0xE000000000000000;
    unint64_t v63 = 0xD000000000000072;
LABEL_18:
    DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v53, *(Swift::String *)&v58, v60, *(Swift::String *)&v61, *(Swift::String *)(&v79 - 1));

    String.init(format:_:)();
    swift_bridgeObjectRelease();
    uint64_t v64 = swift_allocObject();
    *(void *)(v64 + 16) = v37;
    *(void *)(v64 + 24) = v27;
    Swift::String v65 = v37;
    id v66 = v27;
    NSString v47 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    long long v93 = sub_1003FF130;
    uint64_t v94 = v64;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v90 = 1107296256;
    NSString v48 = &unk_1006AA2A0;
    goto LABEL_19;
  }
  id v39 = (id)_DocumentManagerBundle();
  if (!v39)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v40 = v39;
  v41._uint64_t countAndFlagsBits = 0xD000000000000010;
  v98._uint64_t countAndFlagsBits = 0xD0000000000000B5;
  v98._object = (void *)0x80000001005F1B20;
  v41._object = (void *)0x80000001005F1B00;
  v42._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v42._object = (void *)0xEB00000000656C62;
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v98);

  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v37;
  *(void *)(v44 + 24) = v27;
  unint64_t v45 = v37;
  id v46 = v27;
  NSString v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  long long v93 = sub_1003FF14C;
  uint64_t v94 = v44;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v90 = 1107296256;
  NSString v48 = &unk_1006AA2F0;
LABEL_19:
  uint64_t v91 = sub_10041B2E4;
  long long v92 = v48;
  uint64_t v67 = _Block_copy(&aBlock);
  swift_release();
  id v68 = [self actionWithTitle:v47 style:0 handler:v67];
  _Block_release(v67);

  [v27 addAction:v68];
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v69 = v27;
  uint64_t v70 = static OS_dispatch_queue.main.getter();
  id v72 = v83;
  uint64_t v71 = v84;
  *long long v83 = v70;
  uint64_t v73 = v85;
  (*(void (**)(uint64_t *, void, uint64_t))(v71 + 104))(v72, enum case for DispatchPredicate.onQueue(_:), v85);
  char v74 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v71 + 8))(v72, v73);
  if ((v74 & 1) == 0)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v75 = *(void **)&v37[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert];
  *(void *)&v37[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_alert] = v69;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v77 = Strong;
    [Strong presentViewController:v69 animated:1 completion:0];
  }
}

void sub_1003FBAE8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self defaultWorkspace];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1003F9AF4((uint64_t)v3);
    URL._bridgeToObjectiveC()(v6);
    id v8 = v7;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    [v5 openSensitiveURL:v8 withOptions:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003FBC0C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  LOBYTE(v1) = v1(v2);
  swift_release();
  return v1 & 1;
}

uint64_t sub_1003FBC4C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  NSString v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v6)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [self setDefaultSourceIdentifier:v5 forBundleIdentifier:v6];

  return sub_1003FAC30(a3);
}

uint64_t sub_1003FBCF8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = DOCDocumentSourceIdentifierLocal;
  NSString v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v5)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [self setDefaultSourceIdentifier:v4 forBundleIdentifier:v5];

  return sub_1003FAC30(a3);
}

uint64_t sub_1003FBDA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver);
  swift_retain();
  [v7 startObservingSources];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1003FF0D4;
  *(void *)(v8 + 24) = v5;
  v11[4] = sub_100317CE8;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000704F8;
  v11[3] = &unk_1006AA188;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v7 retrieveSourcesForConfiguration:v6 usingBlock:v9];
  _Block_release(v9);
  return swift_release();
}

uint64_t sub_1003FBEF4(unint64_t a1, uint64_t (*a2)(BOOL))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  return a2(v3 != 0);
}

uint64_t sub_1003FBF70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration);
  uint64_t v7 = *(void **)(v2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_sourceObserver);
  swift_retain();
  [v7 startObservingSources];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1003FF1B0;
  *(void *)(v8 + 24) = v5;
  v11[4] = sub_100317CE8;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000704F8;
  v11[3] = &unk_1006AA4D0;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v7 retrieveSourcesForConfiguration:v6 usingBlock:v9];
  _Block_release(v9);
  return swift_release();
}

void sub_1003FC0C0(unint64_t a1, void (*a2)(void))
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    uint64_t v6 = 0;
    if ((a1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_6;
    }
    while (1)
    {
      uint64_t v7 = (char *)*(id *)(a1 + 8 * v5);
LABEL_6:
      uint64_t v8 = v7;
      BOOL v9 = __OFADD__(v6, 1);
      uint64_t v10 = v6 + 1;
      if (v9) {
        break;
      }
      uint64_t v11 = *(void **)&v7[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v11)
      {
        id v13 = v8;
        if ([v11 isMainiCloudDriveDomain])
        {
          swift_bridgeObjectRelease();
          id v12 = v13;
          goto LABEL_18;
        }

        if (v10 == v4) {
          goto LABEL_17;
        }
      }
      else
      {

        if (v10 == v4) {
          goto LABEL_17;
        }
      }
      uint64_t v6 = ++v5 - 4;
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_4;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_17:
  swift_bridgeObjectRelease();
  id v12 = 0;
LABEL_18:
  id v14 = v12;
  a2();
}

uint64_t sub_1003FC21C(uint64_t a1, char *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  Swift::String v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)&a2[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a2;
  v17[4] = a3;
  v17[5] = a4;
  v17[6] = a5;
  aBlock[4] = sub_1003FF06C;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006A9FA8;
  unint64_t v18 = _Block_copy(aBlock);
  id v19 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = a2;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v23);
  return swift_release();
}

void sub_1003FC4F8(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint8_t *a5)
{
  v187 = a5;
  uint64_t v185 = a4;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v172 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  id v175 = (char *)&v172 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  v176 = (char *)&v172 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v178 = (char *)&v172 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  v177 = (char *)&v172 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v179 = (char *)&v172 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  v181 = (char *)&v172 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v186 = (char *)&v172 - v26;
  __chkstk_darwin(v25);
  id v28 = (char *)&v172 - v27;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v189 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v189 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  sub_1003FD924(a1);
  if (v29)
  {
    Swift::String v30 = v29;
    id v31 = [v29 identifier];
  }
  else
  {
    id v31 = (id)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  }
  static Logger.UI.getter();
  id v32 = a3;
  id v33 = v31;
  id v34 = v32;
  id v35 = v33;
  unint64_t v36 = Logger.logObject.getter();
  uint64_t v37 = (uint64_t)a3;
  os_log_type_t v38 = static os_log_type_t.info.getter();
  BOOL v39 = os_log_type_enabled(v36, v38);
  uint64_t v190 = v37;
  id v188 = v34;
  if (v39)
  {
    id v182 = v35;
    uint64_t v183 = v9;
    uint64_t v184 = v8;
    uint64_t v40 = swift_slowAlloc();
    Swift::String v41 = (void *)swift_slowAlloc();
    uint64_t v173 = swift_slowAlloc();
    v192[0] = v173;
    *(_DWORD *)uint64_t v40 = 138412802;
    uint64_t v174 = a2;
    uint64_t v180 = v12;
    if (v37)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = (uint64_t)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10009E6C4(0, &qword_100707988);
      uint64_t v42 = NSString.init(stringLiteral:)();
    }
    uint64_t v191 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v41 = v42;
    id v34 = v188;

    *(_WORD *)(v40 + 12) = 2080;
    if (v189 <= 0) {
      uint64_t v63 = 20302;
    }
    else {
      uint64_t v63 = 5457241;
    }
    if (v189 <= 0) {
      unint64_t v64 = 0xE200000000000000;
    }
    else {
      unint64_t v64 = 0xE300000000000000;
    }
    uint64_t v191 = sub_10009B0E4(v63, v64, v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2080;
    Swift::String v65 = v182;
    uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v191 = sub_10009B0E4(v66, v67, v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v38, "[Default Source UI] Default provider: %@ iCloud Drive enabled: %s, relevantiCloudSourceIdentifier: %s", (uint8_t *)v40, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v35 = v65;
    swift_slowDealloc();

    uint64_t v9 = v183;
    uint64_t v8 = v184;
    Swift::String v43 = *(void (**)(char *, uint64_t))(v183 + 8);
    v43(v28, v184);
    a2 = v174;
    uint64_t v12 = v180;
    if (!v190) {
      goto LABEL_30;
    }
  }
  else
  {

    Swift::String v43 = *(void (**)(char *, uint64_t))(v9 + 8);
    v43(v28, v8);
    if (!v190)
    {
LABEL_30:
      id v68 = (void *)DOCDocumentSourceIdentifierLocalAutomatic;
      if (v189 > 0) {
        id v68 = v35;
      }
      id v69 = v68;
      uint64_t v70 = v186;
      static Logger.UI.getter();
      uint64_t v71 = v187;
      swift_bridgeObjectRetain_n();
      id v72 = v69;
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.info.getter();
      int v75 = v74;
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v76 = swift_slowAlloc();
        uint64_t v190 = swift_slowAlloc();
        v192[0] = v190;
        *(_DWORD *)uint64_t v76 = 136315394;
        uint64_t v189 = (uint64_t)v43;
        swift_bridgeObjectRetain();
        uint64_t v191 = sub_10009B0E4(v185, (unint64_t)v71, v192);
        LODWORD(v188) = v75;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v76 + 12) = 2080;
        id v182 = (id)(v76 + 14);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v184 = v8;
        NSString v77 = String._bridgeToObjectiveC()();
        uint64_t v183 = v9;
        long long v78 = v77;
        swift_bridgeObjectRelease();
        id v79 = [v78 description];
        uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v82 = v81;

        uint64_t v191 = sub_10009B0E4(v80, v82, v192);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, (os_log_type_t)v188, "[Default Source UI] (nil, _): First launch of %s, setting default provider to %s", (uint8_t *)v76, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v189)(v186, v184);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v43(v70, v8);
      }
      long long v83 = self;
      NSString v84 = String._bridgeToObjectiveC()();
      [v83 setDefaultSourceIdentifier:v72 forBundleIdentifier:v84];

      sub_1003F9920(0);
      goto LABEL_50;
    }
  }
  if (v189 <= 0)
  {
    id v182 = v35;
    id v50 = v34;
    uint64_t v51 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
    uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v54 = v53;
    if (v52 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v54 == v55)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v85 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v85 & 1) == 0)
      {
        uint64_t v108 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v110 = v109;
        if (v108 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v110 == v111)
        {
          swift_bridgeObjectRelease_n();
          id v35 = v182;
        }
        else
        {
          char v112 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v35 = v182;
          if ((v112 & 1) == 0) {
            goto LABEL_60;
          }
        }

        long long v113 = v177;
        static Logger.UI.getter();
        long long v114 = Logger.logObject.getter();
        os_log_type_t v115 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v114, v115))
        {
          uint64_t v116 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v116 = 0;
          _os_log_impl((void *)&_mh_execute_header, v114, v115, "[Default Source UI] (DOCDocumentSourceIdentifier.localAutomatic?, false): iCloud Drive is not available, but we're already in localAuto, so no alert", v116, 2u);
          swift_slowDealloc();
        }

        v43(v113, v8);
        unsigned __int8 v62 = 0;
        goto LABEL_21;
      }
    }

    long long v86 = v179;
    static Logger.UI.getter();
    uint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v87, v88))
    {
      id v89 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v89 = 0;
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "[Default Source UI] (.iCloudCurrent?, false): iCloud Drive is no longer available, showing prompt saying we've switched to local storage", v89, 2u);
      swift_slowDealloc();
    }

    v43(v86, v8);
    sub_1003F9920(2u);
    goto LABEL_40;
  }
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;
  if (v44 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v46 != v47)
  {
    char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
    id v48 = v188;
    id v57 = v188;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_18;
    }
LABEL_60:
    uint64_t v117 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v119 = v118;
    if (v117 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v119 == v120)
    {
      swift_bridgeObjectRelease_n();
LABEL_64:

      uint64_t v122 = v178;
      static Logger.UI.getter();
      uint64_t v123 = Logger.logObject.getter();
      os_log_type_t v124 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v123, v124))
      {
        Swift::Int v125 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)Swift::Int v125 = 0;
        _os_log_impl((void *)&_mh_execute_header, v123, v124, "[Default Source UI] (DOCDocumentSourceIdentifier.local?, _): iCloud Drive is not available, but we're already in local, so no alert", v125, 2u);
        uint64_t v122 = v178;
        swift_slowDealloc();
      }

      v43(v122, v8);
      sub_1003F9920(0);
      goto LABEL_41;
    }
    char v121 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v121) {
      goto LABEL_64;
    }
    id v182 = v35;
    uint64_t v180 = v12;
    if (v189 >= 1)
    {
      id v126 = v188;
      uint64_t v127 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
      uint64_t v128 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v130 = v129;
      if (v128 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v130 == v131) {
        goto LABEL_70;
      }
      char v132 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v132) {
        goto LABEL_73;
      }
      uint64_t v142 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v144 = v143;
      if (v142 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v144 == v145)
      {
LABEL_71:
        swift_bridgeObjectRelease_n();
LABEL_73:

        uint64_t v133 = v176;
        static Logger.UI.getter();
        id v134 = v126;
        uint64_t v135 = Logger.logObject.getter();
        os_log_type_t v136 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v135, v136))
        {
          uint64_t v189 = (uint64_t)v43;
          uint64_t v137 = (uint8_t *)swift_slowAlloc();
          uint64_t v138 = swift_slowAlloc();
          *(_DWORD *)uint64_t v137 = 136315138;
          id v188 = v137 + 4;
          uint64_t v191 = v190;
          v192[0] = v138;
          id v139 = v134;
          sub_1000CBE70((uint64_t *)&unk_100711B40);
          uint64_t v140 = String.init<A>(describing:)();
          uint64_t v191 = sub_10009B0E4(v140, v141, v192);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          Swift::String v43 = (void (*)(char *, uint64_t))v189;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v135, v136, "[Default Source UI] Should update saved identifier with a real iCloud Domain: %s", v137, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v43(v176, v8);
          uint64_t v12 = v180;
          id v35 = v182;
          goto LABEL_41;
        }

        v43(v133, v8);
        goto LABEL_89;
      }
      char v146 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v146) {
        goto LABEL_73;
      }
      id v147 = v126;
      uint64_t v127 = (void *)static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter();
      uint64_t v148 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v150 = v149;
      if (v148 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v150 == v151)
      {
LABEL_70:

        goto LABEL_71;
      }
      char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v152) {
        goto LABEL_73;
      }
      uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v155 = v154;
      if (v153 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v155 == v156) {
        goto LABEL_71;
      }
      char v157 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v157) {
        goto LABEL_73;
      }
    }
    uint64_t v158 = v175;
    static Logger.UI.getter();
    id v159 = v188;
    unint64_t v160 = Logger.logObject.getter();
    os_log_type_t v161 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v160, v161))
    {
      uint64_t v189 = (uint64_t)v43;
      v162 = (uint8_t *)swift_slowAlloc();
      id v188 = (id)swift_slowAlloc();
      v192[0] = (uint64_t)v188;
      *(_DWORD *)v162 = 136315138;
      uint64_t v186 = (char *)(v162 + 4);
      v187 = v162;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v184 = v8;
      uint64_t v163 = v9;
      NSString v164 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v165 = [v164 description];
      uint64_t v166 = a2;
      uint64_t v167 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v169 = v168;

      uint64_t v9 = v163;
      uint64_t v8 = v184;
      uint64_t v170 = v167;
      a2 = v166;
      uint64_t v191 = sub_10009B0E4(v170, v169, v192);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      Swift::String v43 = (void (*)(char *, uint64_t))v189;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v160, v161, "[Default Source UI] Verifying %s is still available", v187, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v171 = v175;
    }
    else
    {

      v171 = v158;
    }
    v43(v171, v8);
    sub_1003FDBD0(v159);

LABEL_89:
    uint64_t v12 = v180;
LABEL_40:
    id v35 = v182;
    goto LABEL_41;
  }
  id v48 = v188;
  id v49 = v188;
  swift_bridgeObjectRelease_n();
LABEL_18:

  uint64_t v58 = v181;
  static Logger.UI.getter();
  unint64_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "[Default Source UI] (DOCDocumentSourceIdentifier.localAutomatic?, true): iCloud Drive is available, showing prompt to select between iCloud Drive and local storage", v61, 2u);
    swift_slowDealloc();
  }

  v43(v58, v8);
  unsigned __int8 v62 = 1;
LABEL_21:
  sub_1003F9920(v62);
LABEL_41:
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_state))
  {

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v189 = (uint64_t)v43;
  uint64_t v90 = v35;
  uint64_t v91 = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v94 = v93;

  v95._uint64_t countAndFlagsBits = v92;
  v95._object = v94;
  LOBYTE(v91) = String.hasPrefix(_:)(v95);
  swift_bridgeObjectRelease();
  if (v91)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v96._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Bool v97 = String.hasPrefix(_:)(v96);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v97)
    {

      return;
    }
  }
  static Logger.UI.getter();
  id v72 = v90;
  Swift::String v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v98, v99))
  {
    long long v100 = (uint8_t *)swift_slowAlloc();
    uint64_t v101 = swift_slowAlloc();
    uint64_t v191 = (uint64_t)v72;
    v192[0] = v101;
    uint64_t v180 = v12;
    *(_DWORD *)long long v100 = 136315138;
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v184 = v8;
    id v102 = v72;
    uint64_t v183 = v9;
    id v103 = v102;
    uint64_t v104 = String.init<A>(describing:)();
    uint64_t v191 = sub_10009B0E4(v104, v105, v192);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "[Default Source UI] Updating saved identifier with a real iCloud Domain: %s", v100, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v106 = v184;
    long long v107 = v180;
  }
  else
  {

    long long v107 = v12;
    uint64_t v106 = v8;
  }
  ((void (*)(char *, uint64_t))v189)(v107, v106);
  sub_1003FDBD0(v72);
LABEL_50:
}

void sub_1003FD924(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = a1 & 0xC000000000000001;
    uint64_t v5 = 4;
    do
    {
      if (v4) {
        uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v6 = (char *)*(id *)(a1 + 8 * v5);
      }
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
      {
        __break(1u);
        goto LABEL_24;
      }
      uint64_t v9 = *(void **)&v6[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v9 && [v9 isEnterpriseDomain])
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }

      ++v5;
    }
    while (v8 != v3);
    swift_bridgeObjectRelease();
    uint64_t v7 = 0;
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v10 = 4;
    while (1)
    {
      uint64_t v11 = v4 ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : (char *)*(id *)(a1 + 8 * v10);
      uint64_t v12 = v11;
      uint64_t v13 = v10 - 3;
      if (__OFADD__(v10 - 4, 1)) {
        break;
      }
      uint64_t v14 = *(void **)&v11[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v14 && [v14 isMainiCloudDriveDomain])
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }

      ++v10;
      if (v13 == v3)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        goto LABEL_27;
      }
    }
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
  uint64_t v7 = 0;
LABEL_27:
  id v15 = [self defaultPermission];
  NSString v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                              + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration), "hostIdentifier"));
  if (!v16)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v17 = [v15 dataOwnerStateForBundleIdentifier:v16];

  if (v17 == (id)1 && v7 != 0)
  {

    return;
  }
  if (v12 || !v3) {
    goto LABEL_35;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    *(id *)(a1 + 32);
LABEL_35:

    return;
  }
  __break(1u);
}

void sub_1003FDBD0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  Swift::String v96 = (void (*)(char *, uint64_t))((char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::Bool v97 = (char *)v90 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v94 = (char *)v90 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v90 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v90 - v13;
  static Logger.UI.getter();
  id v15 = a1;
  NSString v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v99 = v15;
  uint64_t v100 = v2;
  uint64_t v98 = v3;
  uint64_t v95 = (uint64_t)v12;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v103 = (char *)sub_10009B0E4(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "[Default Source UI]: Updating Alert State for %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v14, v100);
  }
  else
  {

    uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v14, v2);
  }
  NSString v23 = [*(id *)(v101 + OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_configuration) hostIdentifier];
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = 0;
  dispatch_semaphore_t v25 = dispatch_semaphore_create(0);
  uint64_t v26 = self;
  NSString v27 = String._bridgeToObjectiveC()();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v25;
  *(void *)(v28 + 24) = v24;
  aBlock[4] = (uint64_t)sub_1003FF1A8;
  aBlock[5] = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10000CAE4;
  void aBlock[3] = (uint64_t)&unk_1006AA368;
  Swift::String v29 = _Block_copy(aBlock);
  Swift::String v30 = v25;
  swift_retain();
  swift_release();
  id v93 = v26;
  id v31 = v26;
  id v32 = v99;
  [v31 defaultSourceForBundleIdentifier:v27 selectedSourceIdentifier:v99 completionBlock:v29];
  _Block_release(v29);

  OS_dispatch_semaphore.wait()();
  swift_beginAccess();
  id v33 = *(void **)(v24 + 16);
  id v34 = v33;
  swift_bridgeObjectRelease();
  swift_release();
  if (v33)
  {
    Swift::String v96 = v22;
    id v35 = [v34 identifier];
    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;
    if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0)
      {
        id v60 = [v34 identifier];
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;
        if (v61 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v63 == v64)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v65 & 1) == 0)
          {
            NSString v77 = v94;
            static Logger.UI.getter();
            id v78 = v32;
            id v79 = Logger.logObject.getter();
            os_log_type_t v80 = static os_log_type_t.info.getter();
            int v81 = v80;
            if (os_log_type_enabled(v79, v80))
            {
              LODWORD(v97) = v81;
              unint64_t v82 = (uint8_t *)swift_slowAlloc();
              uint64_t v95 = swift_slowAlloc();
              id v103 = (char *)v95;
              *(_DWORD *)unint64_t v82 = 136315138;
              v90[1] = v82 + 4;
              uint64_t v91 = v82;
              static String._unconditionallyBridgeFromObjectiveC(_:)();
              NSString v83 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v84 = [v83 description];
              uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              id v92 = v34;
              unint64_t v87 = v86;

              uint64_t v102 = sub_10009B0E4(v85, v87, (uint64_t *)&v103);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              id v34 = v92;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v79, (os_log_type_t)v97, "[Default Source UI]: %s is no longer available -- switching to iCloud Drive", v91, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              os_log_type_t v88 = v94;
            }
            else
            {

              os_log_type_t v88 = v77;
            }
            v96(v88, v100);
            id v89 = [v34 identifier];
            [v93 setDefaultSourceIdentifier:v89 forBundleIdentifier:v23];

            goto LABEL_18;
          }
        }

        uint64_t v66 = v95;
        static Logger.UI.getter();
        id v67 = v32;
        id v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          Swift::Bool v97 = (char *)swift_slowAlloc();
          id v103 = v97;
          *(_DWORD *)uint64_t v70 = 136315138;
          uint64_t v94 = (char *)(v70 + 4);
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          id v92 = v34;
          NSString v71 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v72 = [v71 description];
          uint64_t v73 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v75 = v74;

          id v34 = v92;
          uint64_t v102 = sub_10009B0E4(v73, v75, (uint64_t *)&v103);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "[Default Source UI]: %s is no longer available -- switching to local", v70, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v76 = v95;
        }
        else
        {

          uint64_t v76 = v66;
        }
        v96((char *)v76, v100);
        unsigned __int8 v59 = 2;
        goto LABEL_19;
      }
    }
    id v48 = v97;
    static Logger.UI.getter();
    id v49 = v32;
    id v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v50, v51))
    {
      id v92 = v34;
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      id v103 = (char *)v95;
      *(_DWORD *)uint64_t v52 = 136315138;
      uint64_t v94 = (char *)(v52 + 4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v53 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v54 = [v53 description];
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v57 = v56;

      uint64_t v102 = sub_10009B0E4(v55, v57, (uint64_t *)&v103);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      id v34 = v92;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "[Default Source UI]: %s is still available, nothing to do", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v58 = v97;
    }
    else
    {

      uint64_t v58 = v48;
    }
    v96(v58, v100);
LABEL_18:
    unsigned __int8 v59 = 0;
LABEL_19:
    sub_1003F9920(v59);

    return;
  }

  uint64_t v40 = (char *)v96;
  static Logger.UI.getter();
  id v41 = v32;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    id v103 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v44 = 136315138;
    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v102 = sub_10009B0E4(v45, v46, (uint64_t *)&v103);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "[Default Source UI]: no default source for %s", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v22(v40, v100);
}

Swift::Int sub_1003FE7F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    static Logger.UI.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v27 = v8;
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v30[0] = v26;
      *(_DWORD *)uint64_t v14 = 136315138;
      v24[1] = v14 + 4;
      id v15 = (void *)_convertErrorToNSError(_:)();
      id v16 = [v15 description];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v25 = v9;
      uint64_t v18 = v17;
      uint64_t v28 = a3;
      unint64_t v20 = v19;

      uint64_t v29 = sub_10009B0E4(v18, v20, v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to fetch default source: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v27);
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  else
  {
    swift_beginAccess();
    unint64_t v21 = *(void **)(a4 + 16);
    *(void *)(a4 + 16) = a1;
    id v22 = a1;
  }
  return OS_dispatch_semaphore.signal()();
}

uint64_t type metadata accessor for DOCDefaultSourceUIManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCDefaultSourceUIManager.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *CFNotificationCenterRef result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003FEBE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *CFNotificationCenterRef result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDefaultSourceUIManager.State()
{
  return &type metadata for DOCDefaultSourceUIManager.State;
}

unint64_t sub_1003FEC20()
{
  unint64_t result = qword_1007145F0;
  if (!qword_1007145F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007145F0);
  }
  return result;
}

uint64_t sub_1003FEC74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v16 = result;
    type metadata accessor for DOCDefaultSourceUIManager();
    swift_unknownObjectRetain();
    uint64_t v11 = (char *)swift_dynamicCastClassUnconditional();
    v15[1] = *(void *)&v11[OBJC_IVAR____TtC5Files25DOCDefaultSourceUIManager_queue];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    aBlock[4] = sub_1000D6C30;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AA458;
    os_log_type_t v13 = _Block_copy(aBlock);
    uint64_t v14 = v11;
    static DispatchQoS.unspecified.getter();
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v16);

    return swift_release();
  }
  return result;
}

uint64_t sub_1003FEF58()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FEF90()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003FEFD8(uint64_t a1)
{
  return sub_1003FC21C(a1, *(char **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003FEFE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003FF01C()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1003FF06C()
{
  sub_1003FC4F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(uint8_t **)(v0 + 48));
}

void sub_1003FF07C()
{
  sub_1003F97A4(*(void *)(v0 + 16));
}

uint64_t sub_1003FF084()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003FF0C4()
{
  sub_1003FAEE4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1003FF0CC(char a1)
{
  sub_1003FAF80(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003FF0D4(unint64_t a1)
{
  return sub_1003FBEF4(a1, *(uint64_t (**)(BOOL))(v1 + 16));
}

uint64_t sub_1003FF0DC()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_1003FF11C()
{
  sub_1003FB05C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

void sub_1003FF128()
{
}

uint64_t sub_1003FF130(uint64_t a1)
{
  return sub_1003FBCF8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003FF14C(uint64_t a1)
{
  return sub_1003FBC4C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1003FF168()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_1003FF1A8(void *a1, uint64_t a2)
{
  return sub_1003FE7F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1003FF1B0(unint64_t a1)
{
  sub_1003FC0C0(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1003FF270(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for URL();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  return _swift_task_switch(sub_1003FF334, 0, 0);
}

uint64_t sub_1003FF334()
{
  id v1 = [objc_allocWithZone((Class)DOCConfiguration) init];
  v0[11] = v1;
  [v1 setHostIdentifier:DOCDocumentsAppBundleIdentifier];
  id v2 = [v1 hostIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v3 = objc_allocWithZone((Class)DOCSourceObserver);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithUserAction:1 hostIdentifier:v4];
  v0[12] = v5;

  uint64_t v6 = (void *)swift_task_alloc();
  v0[13] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003FF4A0;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[7];
  v6[4] = v5;
  v6[5] = v8;
  uint64_t v6[2] = v7;
  v6[3] = v1;
  return _swift_task_switch(sub_100401760, 0, 0);
}

uint64_t sub_1003FF4A0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1003FF7B8;
  }
  else {
    id v2 = sub_1003FF5B4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003FF5B4()
{
  uint64_t v1 = v0[6];
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      id v5 = (void *)v0[11];
      uint64_t v4 = (void *)v0[12];
      uint64_t v7 = v0[9];
      uint64_t v6 = v0[10];
      uint64_t v8 = v0[8];
      URL.appendingPathComponent(_:)();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
      swift_task_dealloc();
      uint64_t v9 = (uint64_t (*)(void))v0[1];
      uint64_t result = v9();
      break;
    default:
      _StringGuts.grow(_:)(53);
      v0[2] = 0;
      v0[3] = 0xE000000000000000;
      v2._object = (void *)0x80000001005F2420;
      v2._uint64_t countAndFlagsBits = 0xD000000000000033;
      String.append(_:)(v2);
      v0[4] = v1;
      _print_unlocked<A, B>(_:_:)();
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      break;
  }
  return result;
}

uint64_t sub_1003FF7B8()
{
  uint64_t v1 = *(void **)(v0 + 88);

  swift_task_dealloc();
  Swift::String v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1003FF82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  uint64_t v8 = v7;
  unint64_t v9 = 0xE900000000000073;
  uint64_t v10 = 0x746E656D75636F44;
  unint64_t v11 = 0xE900000000000073;
  switch(a1)
  {
    case 0:
      goto LABEL_5;
    case 1:
      unint64_t v11 = 0xE700000000000000;
      uint64_t v10 = 0x706F746B736544;
      goto LABEL_5;
    case 2:
      uint64_t v10 = 0x64616F6C6E776F44;
      goto LABEL_5;
    case 3:
      unint64_t v11 = 0xEB00000000657669;
      uint64_t v10 = 0x724464756F6C4369;
LABEL_5:
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_100073F48();
      *(void *)(v8 + 32) = v10;
      *(void *)(v8 + 40) = v11;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v12 = sub_100301B1C;
      uint64_t v13 = 0x746E656D75636F44;
      switch(a1)
      {
        case 0:
          goto LABEL_9;
        case 1:
          uint64_t v12 = sub_100301B1C;
          unint64_t v9 = 0xE700000000000000;
          uint64_t v13 = 0x706F746B736544;
          goto LABEL_9;
        case 2:
          id v14 = [objc_allocWithZone((Class)DOCDownloadSettings) init];
          id v15 = (void *)swift_allocObject();
          void v15[2] = 2;
          v15[3] = a2;
          v15[4] = a3;
          v19[4] = sub_100402E6C;
          v19[5] = v15;
          v19[0] = _NSConcreteStackBlock;
          v19[1] = 1107296256;
          v19[2] = sub_10000CAE4;
          v19[3] = &unk_1006AA818;
          uint64_t v16 = _Block_copy(v19);
          swift_retain();
          swift_release();
          [v14 fetchDefaultDownloadsLocationItem:v16];
          _Block_release(v16);

          return;
        case 3:
          uint64_t v13 = 0;
          uint64_t v12 = sub_1003019E0;
          unint64_t v9 = 0xE000000000000000;
LABEL_9:
          uint64_t v17 = (void *)swift_allocObject();
          v17[2] = a1;
          v17[3] = a2;
          v17[4] = a3;
          uint64_t v18 = (void *)swift_allocObject();
          void v18[2] = a1;
          v18[3] = v12;
          v18[4] = v17;
          v18[5] = a1;
          void v18[6] = a2;
          v18[7] = a3;
          v18[8] = v13;
          v18[9] = v9;
          swift_retain_n();
          swift_retain();
          sub_1003FBF70((uint64_t)sub_100301A88, (uint64_t)v18);
          swift_release();
          swift_release();
          return;
        default:
          goto LABEL_12;
      }
    default:
      break;
  }
LABEL_12:
  v19[0] = a1;
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  JUMPOUT(0x1003FFBF4);
}

uint64_t sub_1003FFC14(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = static DOCLog.UI.getter();
  int v10 = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10059B760;
  uint64_t v12 = (void *)v11;
  v24[1] = v10;
  uint64_t v25 = (void *)v9;
  unint64_t v13 = 0xE900000000000073;
  uint64_t v14 = 0x746E656D75636F44;
  switch(a1)
  {
    case 0:
      break;
    case 1:
      unint64_t v13 = 0xE700000000000000;
      uint64_t v14 = 0x706F746B736544;
      break;
    case 2:
      uint64_t v14 = 0x64616F6C6E776F44;
      break;
    case 3:
      unint64_t v13 = 0xEB00000000657669;
      uint64_t v14 = 0x724464756F6C4369;
      break;
    default:
      *(void *)&long long v26 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
      JUMPOUT(0x1003FFF54);
  }
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_100073F48();
  v12[8] = v15;
  v12[4] = v14;
  v12[5] = v13;
  sub_1000CBC00(a2, (uint64_t)v8, &qword_1007076B0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16) == 1)
  {
    uint64_t v28 = 0;
    long long v26 = 0u;
    long long v27 = 0u;
    unint64_t v19 = v25;
LABEL_9:
    v12[12] = &type metadata for String;
    v12[13] = v15;
    v12[9] = 0x296C696E28;
    v12[10] = 0xE500000000000000;
    sub_1000CBBA4((uint64_t)&v26, (uint64_t *)&unk_100709680);
    goto LABEL_10;
  }
  URL._bridgeToObjectiveC()(v18);
  unint64_t v20 = a3;
  uint64_t v22 = v21;
  *((void *)&v27 + 1) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
  uint64_t v28 = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
  *(void *)&long long v26 = v22;
  a3 = v20;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
  unint64_t v19 = v25;
  if (!*((void *)&v27 + 1)) {
    goto LABEL_9;
  }
  sub_1001146DC(&v26, (uint64_t)(v12 + 9));
LABEL_10:
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  return a3(a2);
}

void sub_1003FFF64(char *a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v17 - 8);
  unint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    unint64_t v20 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v20)
    {
      uint64_t v38 = a9;
      uint64_t v21 = self;
      uint64_t v37 = a4;
      uint64_t v22 = a3;
      NSString v23 = (void *)v21;
      uint64_t v39 = a1;
      id v24 = v20;
      id v25 = [v23 defaultManager];
      long long v26 = (void *)swift_allocObject();
      v26[2] = v24;
      v26[3] = a2;
      v26[4] = a5;
      v26[5] = a6;
      v26[6] = a7;
      v26[7] = a8;
      v26[8] = v38;
      v26[9] = v22;
      v26[10] = v37;
      unint64_t v43 = (unint64_t)sub_100402A64;
      uint64_t v44 = v26;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      id v41 = sub_10000CAE4;
      uint64_t v42 = &unk_1006AA520;
      long long v27 = _Block_copy(&aBlock);
      id v28 = v24;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_release();
      [v25 doc_fetchRootItemForProviderDomain:v28 completionHandler:v27];
      _Block_release(v27);

      return;
    }
  }
  uint64_t v39 = (char *)a3;
  uint64_t v29 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v30 = swift_allocObject();
  id v31 = (void *)v30;
  *(_OWORD *)(v30 + 16) = xmmword_10059B760;
  if (a1)
  {
    uint64_t v42 = (void *)type metadata accessor for DOCFileProviderSource(0);
    unint64_t v43 = sub_100402A08();
    *(void *)&long long aBlock = a1;
    sub_1001146DC(&aBlock, (uint64_t)(v31 + 4));
  }
  else
  {
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_100073F48();
    v31[4] = 0x72756F73206F6E28;
    v31[5] = 0xEB00000000296563;
    if (a2 > 3)
    {
LABEL_9:
      *(void *)&long long aBlock = a2;
      id v33 = a1;
      _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
      __break(1u);
LABEL_10:
      uint64_t v32 = 0x64616F6C6E776F44;
      goto LABEL_12;
    }
  }
  a3 = (void *)0xE900000000000073;
  uint64_t v32 = 0x746E656D75636F44;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      a3 = (void *)0xE700000000000000;
      uint64_t v32 = 0x706F746B736544;
      break;
    case 2uLL:
      goto LABEL_10;
    case 3uLL:
      a3 = (void *)0xEB00000000657669;
      uint64_t v32 = 0x724464756F6C4369;
      break;
    default:
      goto LABEL_9;
  }
LABEL_12:
  v31[12] = &type metadata for String;
  v31[13] = sub_100073F48();
  v31[9] = v32;
  v31[10] = a3;
  id v34 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v35 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v19, 1, 1, v35);
  ((void (*)(char *))v39)(v19);
  sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
}

void sub_10040037C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v51 = a4;
  uint64_t v18 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  uint64_t v20 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v24 = (char *)&v46 - v23;
  if (a1)
  {
    id v25 = self;
    id v26 = a1;
    id v27 = [v25 defaultManager];
    id v28 = (void *)swift_allocObject();
    uint64_t v29 = v51;
    v28[2] = v26;
    v28[3] = v29;
    v28[4] = a5;
    v28[5] = a6;
    v28[6] = a7;
    v28[7] = a8;
    v28[8] = a9;
    v28[9] = a10;
    v28[10] = a11;
    uint64_t v55 = (uint64_t (*)())sub_100402AAC;
    unint64_t v56 = v28;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    NSString v53 = sub_1001B6B50;
    id v54 = &unk_1006AA5C0;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v27 fetchURLForItem:v31 completionHandler:v30];
    _Block_release(v30);
  }
  else
  {
    uint64_t v46 = a2;
    uint64_t v49 = v22;
    uint64_t v50 = a5;
    uint64_t v48 = a7;
    uint64_t v32 = (void *)static DOCLog.UI.getter();
    int v47 = static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1005A0230;
    *(void *)(v33 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
    *(void *)(v33 + 64) = sub_1000C5A24(&qword_10071B8E0, (unint64_t *)&unk_1007076A0);
    *(void *)(v33 + 32) = a3;
    unint64_t v34 = 0xE900000000000073;
    uint64_t v35 = 0x746E656D75636F44;
    switch(v51)
    {
      case 0:
        break;
      case 1:
        unint64_t v34 = 0xE700000000000000;
        uint64_t v35 = 0x706F746B736544;
        break;
      case 2:
        uint64_t v35 = 0x64616F6C6E776F44;
        break;
      case 3:
        unint64_t v34 = 0xEB00000000657669;
        uint64_t v35 = 0x724464756F6C4369;
        break;
      default:
        *(void *)&long long aBlock = v51;
        id v45 = a3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x1004008E8);
    }
    *(void *)(v33 + 96) = &type metadata for String;
    unint64_t v36 = sub_100073F48();
    *(void *)(v33 + 104) = v36;
    *(void *)(v33 + 72) = v35;
    *(void *)(v33 + 80) = v34;
    if (v46)
    {
      id v37 = a3;
      uint64_t v38 = _convertErrorToNSError(_:)();
      id v54 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v55 = (uint64_t (*)())sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v38;
      sub_1001146DC(&aBlock, v33 + 112);
    }
    else
    {
      *(void *)(v33 + 136) = &type metadata for String;
      *(void *)(v33 + 144) = v36;
      *(void *)(v33 + 112) = 7104878;
      *(void *)(v33 + 120) = 0xE300000000000000;
      id v39 = a3;
    }
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v40 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v24, 1, 1, v40);
    sub_1000CBC00((uint64_t)v24, (uint64_t)v21, &qword_1007076B0);
    unint64_t v41 = (*(unsigned __int8 *)(v49 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = v50;
    sub_10032D1DC((uint64_t)v21, v42 + v41);
    unint64_t v43 = (void *)(v42 + ((v19 + v41 + 7) & 0xFFFFFFFFFFFFFFF8));
    *unint64_t v43 = a6;
    v43[1] = v48;
    uint64_t v55 = sub_100402AA4;
    unint64_t v56 = (void *)v42;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    NSString v53 = sub_1000666D8;
    id v54 = &unk_1006AA570;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v44);
    sub_1000CBBA4((uint64_t)v24, &qword_1007076B0);
  }
}

uint64_t sub_1004008F8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, void (*a10)(char *))
{
  id v45 = a8;
  uint64_t v46 = a4;
  uint64_t v51 = a6;
  uint64_t v52 = a7;
  uint64_t v50 = a5;
  uint64_t v47 = a2;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v48 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v48 + 64);
  uint64_t v14 = __chkstk_darwin(v12 - 8);
  uint64_t v49 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v45 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v45 - v18;
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  id v24 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v26 = (char *)&v45 - v25;
  sub_1000CBC00(a1, (uint64_t)v19, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    id v45 = v17;
    sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
    id v27 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1005A0230;
    *(void *)(v28 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v28 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v28 + 32) = a3;
    unint64_t v29 = 0xE900000000000073;
    uint64_t v30 = 0x746E656D75636F44;
    switch(v46)
    {
      case 0:
        break;
      case 1:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x706F746B736544;
        break;
      case 2:
        uint64_t v30 = 0x64616F6C6E776F44;
        break;
      case 3:
        unint64_t v29 = 0xEB00000000657669;
        uint64_t v30 = 0x724464756F6C4369;
        break;
      default:
        *(void *)&long long aBlock = v46;
        id v44 = a3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x100400EECLL);
    }
    *(void *)(v28 + 96) = &type metadata for String;
    unint64_t v33 = sub_100073F48();
    *(void *)(v28 + 104) = v33;
    *(void *)(v28 + 72) = v30;
    *(void *)(v28 + 80) = v29;
    if (v47)
    {
      id v34 = a3;
      uint64_t v35 = _convertErrorToNSError(_:)();
      uint64_t v55 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      unint64_t v56 = (uint64_t (*)())sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v35;
      sub_1001146DC(&aBlock, v28 + 112);
    }
    else
    {
      *(void *)(v28 + 136) = &type metadata for String;
      *(void *)(v28 + 144) = v33;
      *(void *)(v28 + 112) = 7104878;
      *(void *)(v28 + 120) = 0xE300000000000000;
      id v36 = a3;
    }
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v37 = (uint64_t)v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v45, 1, 1, v20);
    uint64_t v38 = v49;
    sub_1000CBC00(v37, v49, &qword_1007076B0);
    unint64_t v39 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v50;
    sub_10032D1DC(v38, v40 + v39);
    unint64_t v41 = (void *)(v40 + ((v13 + v39 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v42 = v52;
    void *v41 = v51;
    v41[1] = v42;
    unint64_t v56 = sub_100402AA4;
    uint64_t v57 = v40;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    id v54 = sub_1000666D8;
    uint64_t v55 = &unk_1006AA610;
    unint64_t v43 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v43);
    return sub_1000CBBA4(v37, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    URL.appendingPathComponent(_:)();
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v17, v24, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    a10(v17);
    sub_1000CBBA4((uint64_t)v17, &qword_1007076B0);
    id v31 = *(void (**)(char *, uint64_t))(v21 + 8);
    v31(v24, v20);
    return ((uint64_t (*)(char *, uint64_t))v31)(v26, v20);
  }
}

uint64_t sub_100400EFC(void *a1, uint64_t a2, void **a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  uint64_t v12 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v46 - v18;
  __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v46 - v21;
  if (a2)
  {
    uint64_t v47 = v20;
    uint64_t v48 = a4;
    uint64_t v49 = a5;
    uint64_t v23 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10059B760;
    uint64_t v25 = (void *)v24;
    unint64_t v26 = 0xE900000000000073;
    uint64_t v27 = 0x746E656D75636F44;
    switch((unint64_t)a3)
    {
      case 0uLL:
        break;
      case 1uLL:
        unint64_t v26 = 0xE700000000000000;
        uint64_t v27 = 0x706F746B736544;
        break;
      case 2uLL:
        uint64_t v27 = 0x64616F6C6E776F44;
        break;
      case 3uLL:
        unint64_t v26 = 0xEB00000000657669;
        uint64_t v27 = 0x724464756F6C4369;
        break;
      default:
        long long aBlock = a3;
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        JUMPOUT(0x1004014C8);
    }
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_100073F48();
    v25[4] = v27;
    v25[5] = v26;
    uint64_t v32 = _convertErrorToNSError(_:)();
    v25[12] = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    v25[13] = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    v25[9] = v32;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v33 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v16, 1, 1, v33);
    sub_1000CBC00((uint64_t)v16, (uint64_t)v13, &qword_1007076B0);
    unint64_t v34 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = a3;
    sub_10032D1DC((uint64_t)v13, v35 + v34);
    id v36 = (void *)(v35 + ((v11 + v34 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v37 = v49;
    *id v36 = v48;
    v36[1] = v37;
    id v54 = sub_100402AA4;
    uint64_t v55 = v35;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1000666D8;
    NSString v53 = &unk_1006AA958;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
  else
  {
    uint64_t v28 = v20;
    if (a1)
    {
      id v29 = [a1 fileURL];
      if (v29)
      {
        uint64_t v30 = v29;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = type metadata accessor for URL();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v19, 0, 1, v31);
      }
      else
      {
        uint64_t v41 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v19, 1, 1, v41);
      }
      uint64_t v39 = a4;
      sub_10032D1DC((uint64_t)v19, (uint64_t)v22);
    }
    else
    {
      uint64_t v39 = a4;
      uint64_t v40 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v22, 1, 1, v40);
    }
    sub_1000CBC00((uint64_t)v22, (uint64_t)v16, &qword_1007076B0);
    unint64_t v42 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = a3;
    sub_10032D1DC((uint64_t)v16, v43 + v42);
    id v44 = (void *)(v43 + ((v11 + v42 + 7) & 0xFFFFFFFFFFFFFFF8));
    *id v44 = v39;
    v44[1] = a5;
    id v54 = sub_100402AA4;
    uint64_t v55 = v43;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v51 = 1107296256;
    uint64_t v52 = sub_1000666D8;
    NSString v53 = &unk_1006AA908;
    uint64_t v38 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v16 = v22;
  }
  DOCRunInMainThread();
  _Block_release(v38);
  return sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
}

void sub_1004014D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  sub_1000CBC00(a1, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1007076B0);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  sub_10032D1DC((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11);
  uint64_t v13 = (void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v13 = a3;
  v13[1] = a4;
  aBlock[4] = sub_100402AA4;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AA660;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v14);
}

id sub_1004016AC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNamedLocationResolver();
  return [super dealloc];
}

uint64_t sub_10040173C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return _swift_task_switch(sub_100401760, 0, 0);
}

uint64_t sub_100401760()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  uint64_t v4 = type metadata accessor for URL();
  *uint64_t v3 = v0;
  v3[1] = sub_10040185C;
  uint64_t v5 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000042, 0x80000001005F2460, sub_100402AF0, v2, v4);
}

uint64_t sub_10040185C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100401998, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100401998()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004019FC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_100714648);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  double v9 = __chkstk_darwin(v6);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6, v9);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  sub_100402C04(a2, a3, (uint64_t)sub_100402B90, v11);
  return swift_release();
}

uint64_t sub_100401B48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000CBC00(a1, (uint64_t)v8, &qword_100714650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10[1] = *v8;
    sub_1000CBE70(&qword_100714648);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    (*(void (**)(char *, void *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1000CBE70(&qword_100714648);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_100401CD4(char *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - v14;
  if (a1)
  {
    uint64_t v16 = *(void **)&a1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    if (v16)
    {
      uint64_t v17 = self;
      uint64_t v18 = a1;
      id v19 = v16;
      id v20 = [v17 defaultManager];
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = v19;
      v21[3] = a2;
      v21[4] = a3;
      aBlock[4] = (uint64_t)sub_100402E18;
      aBlock[5] = (uint64_t)v21;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10000CAE4;
      void aBlock[3] = (uint64_t)&unk_1006AA778;
      uint64_t v22 = _Block_copy(aBlock);
      id v23 = v19;
      swift_retain();
      swift_release();
      [v20 doc_fetchRootItemForProviderDomain:v23 completionHandler:v22];
      _Block_release(v22);

      return;
    }
    uint64_t v27 = a1;
    static Logger.AppIntents.getter();
    uint64_t v47 = v27;
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      os_log_t v45 = v28;
      uint64_t v31 = swift_slowAlloc();
      int v43 = v30;
      uint64_t v32 = (uint8_t *)v31;
      uint64_t v44 = swift_slowAlloc();
      aBlock[0] = v44;
      uint64_t v46 = a3;
      *(_DWORD *)uint64_t v32 = 136315138;
      uint64_t v41 = v32 + 4;
      unint64_t v42 = v32;
      uint64_t v33 = v47;
      unint64_t v34 = a2;
      id v35 = [v33 description];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v37 = v36;

      a2 = v34;
      void aBlock[6] = sub_10009B0E4(v40, v37, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v38 = v45;
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v43, "Unable to obtain provider domain for iCloud Drive source %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      os_log_t v38 = v47;
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_100402DC0();
    uint64_t *v8 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    a2(v8);
  }
  else
  {
    static Logger.AppIntents.getter();
    uint64_t v24 = Logger.logObject.getter();
    uint64_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v25, "Unable to obtain iCloud Drive source", v26, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    sub_100402DC0();
    uint64_t *v8 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    a2(v8);
  }
  sub_1000CBBA4((uint64_t)v8, &qword_100714650);
}

void sub_1004021F4(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v9 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v16 = self;
    id v17 = a1;
    id v18 = [v16 defaultManager];
    id v19 = (void *)swift_allocObject();
    v19[2] = v17;
    v19[3] = a4;
    v19[4] = a5;
    aBlock[4] = sub_100402E28;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6B50;
    void aBlock[3] = &unk_1006AA7C8;
    id v20 = _Block_copy(aBlock);
    id v21 = v17;
    swift_retain();
    swift_release();
    [v18 fetchURLForItem:v21 completionHandler:v20];
    _Block_release(v20);
  }
  else
  {
    uint64_t v33 = a4;
    static Logger.AppIntents.getter();
    uint64_t v22 = a3;
    id v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v32 = a5;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v29 = (void *)swift_slowAlloc();
      int v30 = v25;
      *(_DWORD *)uint64_t v25 = 138412290;
      uint64_t v28 = v25 + 4;
      aBlock[0] = v22;
      unint64_t v26 = v22;
      uint64_t v31 = v9;
      uint64_t v27 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_type_t v29 = v22;

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to obtain root item for provider domain %@", v30, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v23 = v22;
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_100402DC0();
    *uint64_t v11 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33(v11);
    sub_1000CBBA4((uint64_t)v11, &qword_100714650);
  }
}

uint64_t sub_1004025B0(uint64_t a1, uint64_t a2, uint8_t *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v31 = a3;
  uint64_t v6 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v6);
  uint64_t v8 = (void *)((char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v14, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    v29[1] = v6;
    uint64_t v30 = v9;
    sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
    static Logger.AppIntents.getter();
    id v19 = v31;
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    uint64_t v22 = v11;
    if (os_log_type_enabled(v20, v21))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v24 = (void *)swift_slowAlloc();
      uint64_t v31 = v23;
      *(_DWORD *)id v23 = 138412290;
      id v35 = v19;
      uint64_t v25 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v24 = v19;

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to obtain root item URL for root item %@", v31, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v20 = v19;
    }
    uint64_t v27 = v30;
    uint64_t v28 = v32;

    (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v27);
    sub_100402DC0();
    uint64_t *v8 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    v33(v8);
    return sub_1000CBBA4((uint64_t)v8, &qword_100714650);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v8, v18, v15);
    swift_storeEnumTagMultiPayload();
    v33(v8);
    sub_1000CBBA4((uint64_t)v8, &qword_100714650);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

unint64_t sub_100402A08()
{
  unint64_t result = qword_10070B668;
  if (!qword_10070B668)
  {
    type metadata accessor for DOCFileProviderSource(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B668);
  }
  return result;
}

void sub_100402A64(void *a1, uint64_t a2)
{
  sub_10040037C(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_100402AAC(uint64_t a1, uint64_t a2)
{
  return sub_1004008F8(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(char **)(v2 + 56), *(void *)(v2 + 64), *(void (**)(char *))(v2 + 72));
}

uint64_t sub_100402AF0(uint64_t a1)
{
  return sub_1004019FC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100402AFC()
{
  uint64_t v1 = sub_1000CBE70(&qword_100714648);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100402B90(uint64_t a1)
{
  sub_1000CBE70(&qword_100714648);

  return sub_100401B48(a1);
}

uint64_t sub_100402C04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100402DB8;
  *(void *)(v9 + 24) = v8;
  swift_retain();
  swift_retain();
  [a2 startObservingSources];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1003175E8;
  *(void *)(v10 + 24) = v9;
  v13[4] = sub_1003175F0;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000704F8;
  v13[3] = &unk_1006AA728;
  uint64_t v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  [a2 retrieveSourcesForConfiguration:a1 usingBlock:v11];
  _Block_release(v11);
  swift_release();
  return swift_release();
}

uint64_t sub_100402D80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100402DB8(char *a1)
{
  sub_100401CD4(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100402DC0()
{
  unint64_t result = qword_100714658;
  if (!qword_100714658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714658);
  }
  return result;
}

void sub_100402E18(void *a1, uint64_t a2)
{
  sub_1004021F4(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100402E28(uint64_t a1, uint64_t a2)
{
  return sub_1004025B0(a1, a2, *(uint8_t **)(v2 + 16), *(void (**)(uint64_t *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100402E34()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100402E6C(void *a1, uint64_t a2)
{
  return sub_100400EFC(a1, a2, *(void ***)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100402E78()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100402EC8()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100403008()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1003FFC14(v3, v0 + v2, v4);
}

unsigned char *storeEnumTagSinglePayload for DOCNamedLocationResolver.ResolverError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10040313CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNamedLocationResolver.ResolverError()
{
  return &type metadata for DOCNamedLocationResolver.ResolverError;
}

unint64_t sub_100403178()
{
  unint64_t result = qword_100714660;
  if (!qword_100714660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714660);
  }
  return result;
}

uint64_t NSProgress.isDownloadingOperation.getter()
{
  return sub_100403424((void **)&NSProgressFileOperationKindDownloading);
}

uint64_t sub_100403228()
{
  id v1 = [v0 userInfo];
  type metadata accessor for ProgressUserInfoKey(0);
  sub_10019B018();
  uint64_t v2 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v2 + 16))
  {
    long long v8 = 0u;
    long long v9 = 0u;
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  int v3 = NSProgressFileOperationKindKey;
  uint64_t v4 = sub_1000A54AC(v3);
  if ((v5 & 1) == 0)
  {
    long long v8 = 0u;
    long long v9 = 0u;

    goto LABEL_9;
  }
  sub_10009B208(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v8);

  swift_bridgeObjectRelease();
  if (!*((void *)&v9 + 1))
  {
LABEL_10:
    sub_10006273C((uint64_t)&v8);
    return 0;
  }
  type metadata accessor for FileOperationKind(0);
  if (swift_dynamicCast()) {
    return v7;
  }
  else {
    return 0;
  }
}

uint64_t sub_100403354(void *a1, uint64_t a2, void **a3)
{
  id v4 = a1;
  uint64_t v5 = sub_100403228();
  if (v5)
  {
    uint64_t v6 = (void *)v5;
    uint64_t v7 = *a3;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
    if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11) {
      char v13 = 1;
    }
    else {
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    id v14 = v7;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {

    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t NSProgress.isUploadingOperation.getter()
{
  return sub_100403424((void **)&NSProgressFileOperationKindUploading);
}

uint64_t sub_100403424(void **a1)
{
  uint64_t v2 = sub_100403228();
  if (v2)
  {
    int v3 = (void *)v2;
    id v4 = *a1;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;
    if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8) {
      char v10 = 1;
    }
    else {
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    id v11 = v4;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

id sub_1004034D8(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = (objc_class *)type metadata accessor for DOCCircularCancelButton();
  v17.receiver = v1;
  v17.super_class = v10;
  id v11 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v12 = self;
  id v13 = v11;

  static UIButton.Configuration.borderless()();
  sub_10040371C();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v5, v9, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  id v14 = v13;
  UIButton.configuration.setter();

  [v14 setDoc_primaryAction:a1];
  v16.receiver = v14;
  v16.super_class = v10;
  [super setTranslatesAutoresizingMaskIntoConstraints:0];

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v14;
}

void sub_10040371C()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v29 = *(void *)(v0 - 8);
  uint64_t v30 = v0;
  __chkstk_darwin(v0);
  uint64_t v28 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v2 = *(void *)(v31 - 8);
  uint64_t v3 = __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v27 - v6;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [self systemImageNamed:v8];

  if (v9)
  {
    [v9 alignmentRectInsets];
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16 + -0.5;
    UIButton.Configuration.contentInsets.setter();
    id v18 = [v9 imageWithAlignmentRectInsets:v11, v17, v13, v15];
    UIButton.Configuration.image.setter();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v19 = swift_allocObject();
    long long v27 = xmmword_1005A00D0;
    *(_OWORD *)(v19 + 16) = xmmword_1005A00D0;
    id v20 = self;
    *(void *)(v19 + 32) = [v20 configurationWithWeight:6];
    *(void *)(v19 + 40) = [v20 configurationWithTextStyle:UIFontTextStyleSubheadline];
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v27;
    uint64_t v22 = self;
    *(void *)(v21 + 32) = [v22 secondaryLabelColor];
    *(void *)(v21 + 40) = [v22 clearColor];
    *(void *)(v21 + 48) = [v22 clearColor];
    unint64_t v32 = v21;
    specialized Array._endMutation()();
    sub_100403D08();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v24 = [v20 configurationWithPaletteColors:isa];

    *(void *)(v19 + 48) = v24;
    unint64_t v32 = v19;
    specialized Array._endMutation()();
    sub_100296658(v32);
    swift_bridgeObjectRelease();
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
    static UIBackgroundConfiguration.clear()();
    id v25 = [self effectWithStyle:6];
    UIBackgroundConfiguration.visualEffect.setter();
    UIBackgroundConfiguration.cornerRadius.setter();
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v28, enum case for UIButton.Configuration.CornerStyle.dynamic(_:), v30);
    UIButton.Configuration.cornerStyle.setter();
    uint64_t v26 = v31;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v31);
    UIButton.Configuration.background.setter();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v26);
  }
  else
  {
    __break(1u);
  }
}

id sub_100403CB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCircularCancelButton();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCCircularCancelButton()
{
  return self;
}

unint64_t sub_100403D08()
{
  unint64_t result = qword_1007088B0;
  if (!qword_1007088B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007088B0);
  }
  return result;
}

void *sub_100403D48(CGFloat a1, CGFloat a2)
{
  id v5 = [v2 traitCollection];
  id v6 = [v5 layoutDirection];

  if (v6 == (id)1) {
    double v7 = -25.0;
  }
  else {
    double v7 = 0.0;
  }
  id v8 = [v2 traitCollection];
  [v8 layoutDirection];

  [v2 bounds];
  v16.origin.x = sub_10009D0D0(v9, v10, v11, v12, 0.0, v7);
  v15.x = a1;
  v15.y = a2;
  if (!CGRectContainsPoint(v16, v15)) {
    return 0;
  }
  id v13 = v2;
  return v2;
}

uint64_t sub_100403E48(unint64_t a1, uint64_t a2, void (*a3)(unint64_t, uint64_t, __n128), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  double v9 = *(void (***)(char *, char *, uint64_t))(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v55 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v54);
  double v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  __chkstk_darwin(v13 - 8);
  CGPoint v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v18 = (char *)&v41 - v17;
  uint64_t v19 = type metadata accessor for DOCFileOperation();
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v53 = v19;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23.n128_f64[0] = __chkstk_darwin(v22);
  uint64_t v56 = (uint64_t)&v41 - v24;
  if (!a1) {
    goto LABEL_20;
  }
  uint64_t v46 = v9;
  if (!(a1 >> 62))
  {
    uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  if (!v25)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    a1 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_20:
    a3(a1, a2, v23);
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  unsigned __int8 v59 = _swiftEmptyArrayStorage;
  uint64_t v51 = v25;
  uint64_t result = sub_100190C7C(0, v25 & ~(v25 >> 63), 0);
  if ((v51 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = a2;
    uint64_t v43 = a4;
    uint64_t v44 = a3;
    uint64_t v27 = 0;
    unint64_t v49 = a1 & 0xC000000000000001;
    unint64_t v50 = a1;
    uint64_t v47 = (unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 6);
    uint64_t v48 = (void (**)(char *, void, uint64_t, uint64_t))(v46 + 7);
    v46 += 4;
    uint64_t v45 = (unint64_t)v46 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    do
    {
      if (v49) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v28 = *(id *)(v50 + 8 * v27 + 32);
      }
      uint64_t v29 = v28;
      id v57 = [v28 operationID];
      sub_10009E6C4(0, &qword_1007146C8);
      sub_100404B30();
      AnyHashable.init<A>(_:)();
      id v30 = [v29 progress];
      id v31 = [v29 dateStarted];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      (*v48)(v18, 0, 1, v8);
      id v32 = [v29 utType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      swift_storeEnumTagMultiPayload();
      sub_10008E1D0((uint64_t)v58, (uint64_t)v21);
      *((void *)v21 + 5) = v30;
      sub_1001653A8((uint64_t)v18, (uint64_t)v15);
      if ((*v47)(v15, 1, v8) == 1)
      {
        uint64_t v33 = v55;
        Date.init(timeIntervalSinceNow:)();
        sub_100165410((uint64_t)v18);
        sub_10008E17C((uint64_t)v58);
        sub_100165410((uint64_t)v15);
        uint64_t v34 = *v46;
      }
      else
      {
        sub_100165410((uint64_t)v18);
        sub_10008E17C((uint64_t)v58);
        uint64_t v34 = *v46;
        uint64_t v33 = v55;
        (*v46)(v55, v15, v8);
      }
      uint64_t v35 = v53;
      v34(&v21[*(int *)(v53 + 24)], v33, v8);
      sub_100404B98((uint64_t)v12, (uint64_t)&v21[*(int *)(v35 + 28)], (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
      sub_100404B98((uint64_t)v21, v56, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);

      unint64_t v36 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190C7C(0, v36[2] + 1, 1);
        unint64_t v36 = v59;
      }
      uint64_t v37 = v51;
      unint64_t v39 = v36[2];
      unint64_t v38 = v36[3];
      if (v39 >= v38 >> 1)
      {
        sub_100190C7C(v38 > 1, v39 + 1, 1);
        uint64_t v37 = v51;
        unint64_t v36 = v59;
      }
      ++v27;
      v36[2] = v39 + 1;
      sub_100404B98(v56, (uint64_t)v36+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v39, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    }
    while (v37 != v27);
    swift_bridgeObjectRelease();
    v44((unint64_t)v36, v42, v40);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10040442C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_10009E6C4(0, &qword_1007146C0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void (*sub_1004044D0(void *a1))(objc_super **a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files26DOCDSFileServiceConnection_didUpdateInProgressFileOperationsHandler;
  v3[10] = v1;
  v3[11] = v4;
  swift_beginAccess();
  return sub_10040453C;
}

void sub_10040453C(objc_super **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    receiver = (char *)v3[5].receiver;
    id v5 = (uint64_t *)&receiver[(unint64_t)v3[5].super_class];
    uint64_t v6 = *v5;
    if (*v5)
    {
      uint64_t v7 = v5[1];
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      *(void *)(v8 + 24) = v7;
      v3[2].receiver = sub_1000D8564;
      v3[2].super_class = (Class)v8;
      v3->receiver = _NSConcreteStackBlock;
      v3->super_class = (Class)1107296256;
      v3[1].receiver = sub_1000666D8;
      v3[1].super_class = (Class)&unk_1006AAB00;
      double v9 = _Block_copy(v3);
      swift_retain_n();
      swift_release();
      uint64_t v10 = type metadata accessor for DOCDSFileServiceConnection();
      v3[4].receiver = receiver;
      v3[4].super_class = (Class)v10;
      [v3 + 4 setDidUpdateInProgressOperationsHandler:v9];
      _Block_release(v9);
      sub_1000A7258(v6);
    }
    else
    {
      uint64_t v11 = type metadata accessor for DOCDSFileServiceConnection();
      v3[3].receiver = receiver;
      v3[3].super_class = (Class)v11;
      [v3 + 3 setDidUpdateInProgressOperationsHandler:0];
    }
  }

  free(v3);
}

id sub_1004046E4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDSFileServiceConnection();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCDSFileServiceConnection()
{
  return self;
}

void sub_100404750(uint64_t a1, uint64_t a2)
{
  id v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v8[4] = sub_100404B28;
  v8[5] = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  uint64_t v8[2] = sub_10040442C;
  v8[3] = &unk_1006AAAB0;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v5 requestInProgressOperationsWithResponseBlock:v7];
  _Block_release(v7);
}

uint64_t sub_100404834()
{
  uint64_t v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC5Files26DOCDSFileServiceConnection_didUpdateInProgressFileOperationsHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1000C0640(*v1);
  return v2;
}

uint64_t sub_100404894(uint64_t a1, uint64_t a2)
{
  sub_100404984(a1, a2);

  return sub_1000A7258(a1);
}

void (*sub_1004048E0(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1004044D0(v2);
  return sub_10040493C;
}

void sub_10040493C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

id sub_100404984(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files26DOCDSFileServiceConnection_didUpdateInProgressFileOperationsHandler];
  swift_beginAccess();
  uint64_t v6 = *v5;
  *id v5 = a1;
  v5[1] = a2;
  sub_1000C0640(a1);
  sub_1000A7258(v6);
  uint64_t v7 = *v5;
  if (*v5)
  {
    uint64_t v8 = v5[1];
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = sub_100045B40;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AAA60;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain_n();
    swift_release();
    v12.receiver = v2;
    v12.super_class = (Class)type metadata accessor for DOCDSFileServiceConnection();
    [super setDidUpdateInProgressOperationsHandler:v10];
    _Block_release(v10);
    return (id)sub_1000A7258(v7);
  }
  else
  {
    v14.receiver = v2;
    v14.super_class = (Class)type metadata accessor for DOCDSFileServiceConnection();
    return [super setDidUpdateInProgressOperationsHandler:0];
  }
}

uint64_t sub_100404AF0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100404B28(unint64_t a1, uint64_t a2)
{
  return sub_100403E48(a1, a2, *(void (**)(unint64_t, uint64_t, __n128))(v2 + 16), *(void *)(v2 + 24));
}

unint64_t sub_100404B30()
{
  unint64_t result = qword_1007146D0;
  if (!qword_1007146D0)
  {
    sub_10009E6C4(255, &qword_1007146C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007146D0);
  }
  return result;
}

uint64_t sub_100404B98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_100404C20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSharedServerSource();
  return [super dealloc];
}

uint64_t sub_100404C58()
{
  return type metadata accessor for DOCSharedServerSource();
}

unint64_t sub_100404C64()
{
  unint64_t result = qword_100714710;
  if (!qword_100714710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714710);
  }
  return result;
}

unint64_t sub_100404CBC()
{
  unint64_t result = qword_100714718;
  if (!qword_100714718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714718);
  }
  return result;
}

uint64_t sub_100404D10()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100404D44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100404D60()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737480);
  sub_10009D098(v6, (uint64_t)qword_100737480);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_100404F70()
{
  uint64_t v0 = sub_1000CBE70(&qword_100714740);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100714748);
  __chkstk_darwin(v1);
  sub_100381084();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F2770;
  v2._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714750);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100405110()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_100737498);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_100737498);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100405198(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for Logger();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return _swift_task_switch(sub_100405258, 0, 0);
}

uint64_t sub_100405258()
{
  static Logger.AppIntents.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[GetFilesIntent] Performing Get Files intent", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[6];

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  IntentParameter.wrappedValue.getter();
  v0[3] = v0[2];
  sub_1000CBE70((uint64_t *)&unk_10070C060);
  sub_100142E60();
  static IntentResult.result<A>(value:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1004053B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_100705180, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100737480, a1);
}

uint64_t sub_1004053F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_100705188, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737498, a1);
}

uint64_t sub_100405430(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CB70;
  return sub_100405198(a1, v4);
}

uint64_t sub_1004054D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100405580();
  *a1 = result;
  return result;
}

uint64_t sub_1004054F8(uint64_t a1)
{
  unint64_t v2 = sub_100381084();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for GetFilesIntent()
{
  return &type metadata for GetFilesIntent;
}

uint64_t sub_100405544()
{
  return sub_100073DF0(&qword_100714728, &qword_100714730);
}

uint64_t sub_100405580()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v25 = (char *)v24 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v6 - 8);
  id v30 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v24[0] = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[1] = sub_1000CBE70(&qword_1007075E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v18(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v18(v11, v17, v8);
  uint64_t v19 = v30;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  uint64_t v33 = 0;
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  uint64_t v20 = type metadata accessor for IntentDialog();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v25, 1, 1, v20);
  v21(v26, 1, 1, v20);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
  static UTType.item.getter();
  type metadata accessor for FileEntitySpotlight.Source();
  swift_allocObject();
  uint64_t v31 = sub_100308720(v22, 1);
  uint64_t v32 = 2;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_100142D4C();
  sub_1000CBF40(&qword_1007075F0);
  return IntentParameter<>.init<A>(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
}

uint64_t sub_100405BD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_100405BFC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 sourceIdentifier];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8) {
    int v10 = 1;
  }
  else {
    int v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = &selRef_originalSourceIdentifier;
  if ((v10 & 1) == 0) {
    uint64_t v11 = &selRef_sourceIdentifier;
  }
  id v12 = [a1 *v11];
  id v13 = [a1 node];
  if (!v13)
  {
    if ((v10 & 1) == 0)
    {
      unsigned int v14 = 0;
      goto LABEL_16;
    }
LABEL_14:
    id v15 = [a1 fileProviderItem];

    unsigned int v14 = v15 == 0;
    goto LABEL_16;
  }
  unsigned int v14 = [v13 isRootItem];
  swift_unknownObjectRelease();
  if ((v14 & 1) == 0 && ((v10 ^ 1) & 1) == 0) {
    goto LABEL_14;
  }
LABEL_16:
  sub_100365984();
  if (static NSObject.== infix(_:_:)())
  {
LABEL_17:

    return 1;
  }
  if (v14)
  {
    id v17 = [v2 fileProviderItem];

    if (!v17)
    {
      id v23 = [v2 sourceIdentifier];
      uint64_t v24 = v23;
      if (v12)
      {
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v27 = v26;
        if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
        {

          swift_bridgeObjectRelease_n();
          goto LABEL_17;
        }
        char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_17;
        }
      }
      else
      {
      }
    }
  }
  id v18 = [a1 fileProviderItem];
  if (!v18) {
    goto LABEL_25;
  }
  uint64_t v19 = v18;
  id v20 = [v2 fileProviderItem];
  if (!v20)
  {

LABEL_25:
    return 0;
  }
  uint64_t v21 = v20;
  char v22 = static NSObject.== infix(_:_:)();

  return (v22 & 1) != 0;
}

BOOL static DOCGridSpecTextSize.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t DOCGridSpecTextSize.rawValue.getter(uint64_t result)
{
  return result;
}

BOOL static DOCGridSpecTextSize.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

unint64_t sub_100405EF0@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s5Files19DOCGridSpecTextSizeO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

BOOL sub_100405F1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_100405F30(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_100405F44(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_100405F58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t _s5Files19DOCGridSpecTextSizeO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 4) {
    return 4;
  }
  return result;
}

unint64_t sub_100405F80()
{
  unint64_t result = qword_100714758;
  if (!qword_100714758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714758);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCGridSpecTextSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004060A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCGridSpecTextSize()
{
  return &type metadata for DOCGridSpecTextSize;
}

id DOCFileOperationsManager.__allocating_init(serviceImpl:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_10003CCE8(a1, v3);
  id v6 = sub_100409078(v5, v1, v3, v4);
  sub_10009B1B8(a1);
  return v6;
}

id DOCFileOperationsManager.init(serviceImpl:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = sub_10003CCE8(a1, v3);
  double v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  id v10 = sub_100408EC4((uint64_t)v8, v1, v3, v4);
  sub_10009B1B8(a1);
  return v10;
}

uint64_t DOCFileOperationsManager.unorderedFileOperations.getter()
{
  uint64_t v1 = type metadata accessor for DOCFileOperation();
  uint64_t v30 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess();
  uint64_t v5 = *v4;
  int64_t v6 = *(void *)(*v4 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  unint64_t v39 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_100190C7C(0, v6, 0);
  uint64_t result = sub_100408BF0(v5);
  uint64_t v9 = result;
  int v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = v5 + 64;
  char v14 = *(unsigned char *)(v5 + 32);
  uint64_t v27 = v5 + 80;
  char v29 = v3;
  int64_t v28 = v6;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << v14)
  {
    unint64_t v17 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_27;
    }
    sub_10008E1D0(*(void *)(v5 + 48) + 40 * v9, (uint64_t)v37);
    uint64_t v38 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
    uint64_t v18 = v38;
    sub_10008E1D0((uint64_t)v37, (uint64_t)v35);
    *((void *)&v36 + 1) = v18;
    v33[0] = v35[0];
    v33[1] = v35[1];
    long long v34 = v36;
    swift_retain_n();
    sub_1000CBBA4((uint64_t)v37, &qword_100714768);
    sub_10008E1D0((uint64_t)v33, (uint64_t)v31);
    uint64_t v32 = *((void *)&v34 + 1);
    sub_1001B3654(*((void *)&v34 + 1) + *(void *)(**((void **)&v34 + 1) + 312), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    sub_10008E17C((uint64_t)v31);
    sub_1000CBBA4((uint64_t)v33, &qword_100714768);
    uint64_t v7 = v39;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100190C7C(0, v7[2] + 1, 1);
      uint64_t v7 = v39;
    }
    unint64_t v20 = v7[2];
    unint64_t v19 = v7[3];
    if (v20 >= v19 >> 1)
    {
      sub_100190C7C(v19 > 1, v20 + 1, 1);
      uint64_t v7 = v39;
    }
    v7[2] = v20 + 1;
    uint64_t v21 = (uint64_t)v7
        + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
        + *(void *)(v30 + 72) * v20;
    uint64_t v3 = v29;
    uint64_t result = sub_100114104((uint64_t)v29, v21);
    char v14 = *(unsigned char *)(v5 + 32);
    unint64_t v15 = 1 << v14;
    if (v9 >= 1 << v14) {
      goto LABEL_28;
    }
    uint64_t v22 = *(void *)(v13 + 8 * v17);
    if ((v22 & (1 << v9)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_30;
    }
    unint64_t v23 = v22 & (-2 << (v9 & 0x3F));
    if (v23)
    {
      unint64_t v15 = __clz(__rbit64(v23)) | v9 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v28;
    }
    else
    {
      unint64_t v24 = v17 + 1;
      unint64_t v25 = (v15 + 63) >> 6;
      int64_t v16 = v28;
      if (v17 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v13 + 8 * v24);
        if (v26)
        {
LABEL_22:
          unint64_t v15 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v17)
          {
            unint64_t v26 = *(void *)(v27 + 8 * v17++);
            if (v26)
            {
              unint64_t v24 = v17 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    uint64_t v9 = v15;
    if (v12 == v16)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t DOCFileOperationsManager.addObserver(_:)(uint64_t a1)
{
  swift_getObjectType();

  return sub_100408C78(a1, v1);
}

uint64_t DOCFileOperationsManager.removeObserver(_:)(uint64_t a1)
{
  swift_retain();
  sub_1004089D4(a1);
  swift_release();

  return sub_100406D58();
}

uint64_t sub_100406674()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007147D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v38 = (uint64_t)v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v35 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v36 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
  uint64_t v33 = *(void *)(updated - 8);
  uint64_t v34 = updated;
  __chkstk_darwin(updated);
  int64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_10070B6D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v37 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (unint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers) + 16);
  swift_beginAccess();
  unint64_t v10 = *v9;
  uint64_t v41 = _swiftEmptyArrayStorage;
  if (v10 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    uint64_t v40 = v0;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    char v14 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v40 = v0;
  if (!v11) {
    goto LABEL_14;
  }
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v0 = v40;
  char v14 = v41;
LABEL_15:
  unint64_t *v9 = (unint64_t)v14;
  swift_bridgeObjectRelease();
  if (!(*v9 >> 62))
  {
    uint64_t v15 = *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_release();
    if (v15 != 1) {
      return result;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v31 == 1)
  {
LABEL_17:
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v19 = *(void *)(v17 + 32);
    sub_10003CCE8(v17, v18);
    unint64_t v20 = *(void (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v19 + 24);
    swift_retain();
    v20(sub_100409B54, v16, v18, v19);
    swift_endAccess();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_100409B54;
    *(void *)(v21 + 24) = v16;
    v32[1] = v16;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v22 = (uint64_t)v6;
    UUID.init()();
    uint64_t v23 = v34;
    unint64_t v24 = (uint64_t (**)())&v6[*(int *)(v34 + 20)];
    void *v24 = sub_100045B40;
    v24[1] = (uint64_t (*)())v21;
    uint64_t v26 = v35;
    uint64_t v25 = (uint64_t)v36;
    v32[0] = *(void *)(v35 + 16);
    uint64_t v27 = v39;
    ((void (*)(char *, uint64_t, uint64_t))v32[0])(v36, v22, v39);
    uint64_t v28 = v38;
    sub_1001B3654(v22, v38, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v23);
    swift_beginAccess();
    sub_1004F1FC0(v28, v25);
    swift_endAccess();
    uint64_t v29 = (uint64_t)v37;
    ((void (*)(char *, uint64_t, uint64_t))v32[0])(v37, v22, v27);
    sub_100409B94(v22, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v27);
    uint64_t v30 = v40 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance;
    swift_beginAccess();
    sub_100409BF4(v29, v30);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

void sub_100406C40()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    os_log_type_t v2 = static os_log_type_t.default.getter();
    sub_100408050(v2, 0xD00000000000001BLL, 0x80000001005F2980);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    aBlock[4] = sub_100409C94;
    aBlock[5] = v3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AACF8;
    uint64_t v4 = _Block_copy(aBlock);
    id v5 = v1;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v4);
  }
}

uint64_t sub_100406D58()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007147D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_10070B6D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v32 = (uint64_t)&v27 - v6;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v0;
  unint64_t v10 = (unint64_t *)(*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers) + 16);
  swift_beginAccess();
  unint64_t v11 = *v10;
  uint64_t v34 = _swiftEmptyArrayStorage;
  if (v11 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v12 = result;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v15 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_14;
  }
LABEL_3:
  if (v12 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v31 = v8;
  for (uint64_t i = 0; i != v12; ++i)
  {
    if ((v11 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = v34;
  uint64_t v8 = v31;
LABEL_15:
  *unint64_t v10 = (unint64_t)v15;
  swift_bridgeObjectRelease();
  if (*v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26) {
      return result;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((*v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_release();
    if (v16) {
      return result;
    }
  }
  uint64_t v17 = v33;
  uint64_t v18 = v33 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl;
  swift_beginAccess();
  uint64_t v19 = *(void *)(v18 + 24);
  uint64_t v20 = *(void *)(v18 + 32);
  sub_10003CCE8(v18, v19);
  (*(void (**)(void, void, uint64_t, uint64_t))(v20 + 24))(0, 0, v19, v20);
  swift_endAccess();
  uint64_t v21 = v17 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance;
  swift_beginAccess();
  uint64_t v22 = v32;
  sub_100292D3C(v21, v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v22, 1, v7) == 1) {
    return sub_1000CBBA4(v22, &qword_10070B6D0);
  }
  uint64_t v23 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v28, v22, v7);
  swift_beginAccess();
  swift_retain();
  uint64_t v24 = v29;
  sub_1004FCF78(v23, v29);
  sub_1000CBBA4(v24, &qword_1007147D8);
  swift_endAccess();
  swift_release();
  uint64_t v25 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v30, 1, 1, v7);
  swift_beginAccess();
  sub_100409BF4(v25, v21);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v23, v7);
}

void sub_100407238()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate) == 1)
  {
    uint64_t v1 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_hasUpdateInProgress;
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_hasUpdateInProgress) & 1) == 0)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate) = 0;
      *(unsigned char *)(v0 + v1) = 1;
      uint64_t v2 = v0 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl;
      swift_beginAccess();
      sub_1000D4774(v2, (uint64_t)&v15);
      sub_1000CBE70(&qword_1007147D0);
      uint64_t v3 = String.init<A>(describing:)();
      uint64_t v5 = v4;
      unint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD000000000000024;
      unint64_t v16 = 0x80000001005F28B0;
      v6._uint64_t countAndFlagsBits = v3;
      v6._object = v5;
      String.append(_:)(v6);
      uint64_t v7 = v15;
      unint64_t v8 = v16;
      os_log_type_t v9 = static os_log_type_t.default.getter();
      sub_100408050(v9, v7, v8);
      swift_bridgeObjectRelease();
      sub_1000D4774(v2, (uint64_t)&v15);
      uint64_t v10 = v17;
      uint64_t v11 = v18;
      sub_1000A6B78(&v15, v17);
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v13 = (void *)swift_allocObject();
      v13[2] = v12;
      v13[3] = v3;
      v13[4] = v5;
      char v14 = *(void (**)(void (*)(uint64_t, uint64_t), void *, uint64_t, uint64_t))(v11 + 8);
      swift_retain();
      v14(sub_1004092F0, v13, v10, v11);
      swift_release();
      swift_release();
      sub_10009B1B8((uint64_t)&v15);
    }
  }
}

void sub_100407414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    if (a2)
    {
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v11 = Error.localizedDescription.getter();
      uint64_t v13 = v12;
      os_log_type_t v14 = static os_log_type_t.fault.getter();
      long long aBlock = 0;
      unint64_t v21 = 0xE000000000000000;
      _StringGuts.grow(_:)(60);
      v15._object = (void *)0x80000001005F28E0;
      v15._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
      String.append(_:)(v15);
      v16._uint64_t countAndFlagsBits = v11;
      v16._object = v13;
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      sub_100408050(v14, 0, 0xE000000000000000);
      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
    else
    {
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v10;
      v17[3] = a4;
      v17[4] = a5;
      v17[5] = a1;
      uint64_t v24 = sub_100409344;
      uint64_t v25 = v17;
      long long aBlock = _NSConcreteStackBlock;
      unint64_t v21 = 1107296256;
      uint64_t v22 = sub_1000666D8;
      uint64_t v23 = &unk_1006AAC58;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      id v19 = v10;
      swift_bridgeObjectRetain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v18);
    }
  }
}

uint64_t sub_1004075F0(char *a1, uint64_t a2, void *a3, void *a4)
{
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = a2;
  v8._object = a3;
  String.append(_:)(v8);
  v9._uint64_t countAndFlagsBits = 8250;
  v9._object = (void *)0xE200000000000000;
  String.append(_:)(v9);
  if (a4)
  {
    type metadata accessor for DOCFileOperation();
    uint64_t v10 = Array.description.getter();
    unint64_t v12 = v11;
    uint64_t v13 = a4;
  }
  else
  {
    unint64_t v12 = 0xE500000000000000;
    uint64_t v10 = 0x2A6C696E2ALL;
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v14 = v12;
  String.append(_:)(*(Swift::String *)&v10);
  swift_bridgeObjectRelease();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  sub_100408050(v15, 0xD000000000000022, 0x80000001005F2920);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)&a1[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProvider];
  swift_beginAccess();
  uint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100169C4C(v17);
  uint64_t v18 = a1;
  swift_bridgeObjectRetain();
  sub_100409724((uint64_t)v18, v18, (uint64_t)v13);
  swift_bridgeObjectRelease();

  uint64_t v19 = swift_bridgeObjectRelease_n();
  v18[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_hasUpdateInProgress] = 0;
  return sub_100407238(v19);
}

uint64_t sub_100407798(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  uint64_t v8 = type metadata accessor for DOCFileOperation();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v14 = (char *)&v37 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v37 - v15;
  sub_10008E1D0(a1, (uint64_t)v41);
  if (*(void *)(a2 + 16) && (unint64_t v17 = sub_10008E070((uint64_t)v41), (v18 & 1) != 0))
  {
    uint64_t v19 = *(void *)(*(void *)(a2 + 56) + 8 * v17);
    swift_retain();
  }
  else
  {
    sub_1001B3654(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    type metadata accessor for DOCFileOperationProgress(0);
    uint64_t v20 = swift_allocObject();
    sub_1001B3654((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    sub_1001B3654((uint64_t)v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    uint64_t v19 = sub_1004A9794((uint64_t)v14, (uint64_t)v11, (uint64_t)&off_10068AFD0, v20);
    sub_100409B94((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
    swift_beginAccess();
    int v21 = *(unsigned __int8 *)(v19 + 24);
    *(unsigned char *)(v19 + 24) = 1;
    if (v21 != 1) {
      sub_1002B59AC();
    }
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10008E1D0((uint64_t)v41, (uint64_t)v39);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v22;
    long long v24 = v39[1];
    *(_OWORD *)(v23 + 24) = v39[0];
    *(_OWORD *)(v23 + 40) = v24;
    *(void *)(v23 + 56) = v40;
    uint64_t v25 = (uint64_t *)(v19 + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess();
    uint64_t v26 = *v25;
    *uint64_t v25 = (uint64_t)sub_100409B40;
    v25[1] = v23;
    sub_1000A7258(v26);
    *(void *)&v39[0] = 0;
    *((void *)&v39[0] + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    id v27 = [a3 description];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();

    *(void *)&v39[0] = v28;
    *((void *)&v39[0] + 1) = v30;
    v31._object = (void *)0x80000001005F2950;
    v31._uint64_t countAndFlagsBits = 0xD000000000000021;
    String.append(_:)(v31);
    v32._uint64_t countAndFlagsBits = sub_100408368(0);
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    long long v33 = v39[0];
    os_log_type_t v34 = static os_log_type_t.default.getter();
    sub_100408050(v34, v33, *((unint64_t *)&v33 + 1));
    swift_bridgeObjectRelease();
  }
  sub_10008E1D0((uint64_t)v41, (uint64_t)v39);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = *a4;
  *a4 = 0x8000000000000000;
  sub_1003E18BC(v19, (uint64_t)v39, isUniquelyReferenced_nonNull_native);
  *a4 = v38;
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)v39);
  swift_release();
  return sub_10008E17C((uint64_t)v41);
}

void sub_100407B14(unsigned char *a1)
{
  if ((a1[*(void *)(*(void *)a1 + 336)] & 0xFE) != 2)
  {
    swift_beginAccess();
    char v2 = a1[24];
    a1[24] = 0;
    if (v2)
    {
      type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
      swift_retain();
      sub_1000CBE70((uint64_t *)&unk_10070D200);
      swift_dynamicCast();
      uint64_t v3 = v8;
      uint64_t v4 = v9;
      sub_1000A6B78(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v4 + 40))(v3, v4);
      sub_10009B1B8((uint64_t)v7);
    }
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      Swift::String v6 = (void *)Strong;
      __chkstk_darwin(Strong);
      sub_100407C78((void (*)(void))sub_100409B4C);
    }
  }
}

uint64_t sub_100407C78(void (*a1)(void))
{
  uint64_t v2 = v1;
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100166FC4(v4);
  a1();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_100166FC4(v6);
  LOBYTE(a1) = sub_10047E400(v7, v5);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers) + 16);
    swift_beginAccess();
    uint64_t v10 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v11 = result;
      if (!result) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_15;
      }
    }
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_release();
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t *v9 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v13 = *v9;
    if ((unint64_t)*v9 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v14 = result;
      if (result)
      {
LABEL_17:
        if (v14 >= 1)
        {
          for (uint64_t j = 0; j != v14; ++j)
          {
            if ((v13 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              [Strong didUpdateInProgressOperationsIn:v2];
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_27;
        }
LABEL_30:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v14) {
        goto LABEL_17;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_100407F64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10008E070(a2);
  LOBYTE(a2) = v5;
  swift_bridgeObjectRelease();
  if (a2)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v3;
    uint64_t v9 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10035A97C();
      uint64_t v7 = v9;
    }
    sub_10008E17C(*(void *)(v7 + 48) + 40 * v4);
    sub_1003541FC(v4, v7);
    *uint64_t v3 = v7;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100408050(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_100704EC8 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_100736E98;
  uint64_t result = os_log_type_enabled((os_log_t)qword_100736E98, a1);
  if (result)
  {
    id v9 = v3;
    swift_bridgeObjectRetain_n();
    id v10 = v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412546;
    id v13 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v12 = v10;

    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10009B0E4(a2, a3, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, a1, "[%@] %s", (uint8_t *)v11, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    return swift_slowDealloc();
  }
  return result;
}

void DOCFileOperationsManager.init()()
{
}

id DOCFileOperationsManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileOperationsManager();
  [super dealloc];
}

uint64_t sub_100408368(int a1)
{
  uint64_t v2 = v1;
  int v55 = a1;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = (void *)(v1 + *(void *)(*(void *)v1 + 352));
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  uint64_t v15 = sub_1000A6B78(v12, v13);
  uint64_t v16 = *(void *)(v13 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v54 - v17;
  (*(void (**)(char *))(v16 + 16))((char *)&v54 - v17);
  uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 24))(v13, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v13);
  id v20 = [v19 fileURL];

  if (v20)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v21 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v21, 1, v3);
  sub_10032D1DC((uint64_t)v9, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
  {
    sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    uint64_t v22 = (void *)0xE500000000000000;
    uint64_t v23 = 0x273F3F3F27;
  }
  else
  {
    long long v24 = v56;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v56, v11, v3);
    sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
    uint64_t v23 = URL.lastPathComponent.getter();
    uint64_t v22 = v25;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v24, v3);
  }
  sub_10008E1D0(v2 + *(void *)(*(void *)v2 + 320), (uint64_t)&v57);
  AnyHashable.description.getter();
  sub_10008E17C((uint64_t)&v57);
  sub_100062330(6);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v56 = (char *)v23;
  uint64_t v54 = v27;
  if (v55)
  {
    uint64_t v57 = 32;
    unint64_t v58 = 0xE100000000000000;
    uint64_t v28 = v12[3];
    uint64_t v29 = v12[4];
    uint64_t v30 = sub_1000A6B78(v12, v28);
    uint64_t v31 = *(void *)(v28 - 8);
    __chkstk_darwin(v30);
    long long v33 = (char *)&v54 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v33);
    os_log_type_t v34 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 24))(v28, v29);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v28);
    id v35 = [v34 description:v54];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v38 = v37;

    v39._uint64_t countAndFlagsBits = v36;
    v39._object = v38;
    String.append(_:)(v39);
    swift_bridgeObjectRelease();
    v40._uint64_t countAndFlagsBits = 59;
    v40._object = (void *)0xE100000000000000;
    String.append(_:)(v40);
    uint64_t v42 = v57;
    uint64_t v41 = (void *)v58;
  }
  else
  {
    uint64_t v42 = 0;
    uint64_t v41 = (void *)0xE000000000000000;
  }
  uint64_t v57 = 0;
  unint64_t v58 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  uint64_t v57 = 60;
  unint64_t v58 = 0xE100000000000000;
  v43._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v43);
  swift_bridgeObjectRelease();
  v44._uint64_t countAndFlagsBits = 0x496775626564203ALL;
  v44._object = (void *)0xEC000000203D2044;
  String.append(_:)(v44);
  swift_bridgeObjectRetain();
  v45._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v46._uint64_t countAndFlagsBits = 0x203D204449706F20;
  v46._object = (void *)0xE800000000000000;
  String.append(_:)(v46);
  v47._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v48._uint64_t countAndFlagsBits = 0x3D20656C6966203BLL;
  v48._object = (void *)0xEA00000000002720;
  String.append(_:)(v48);
  v49._uint64_t countAndFlagsBits = (uint64_t)v56;
  v49._object = v22;
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  v50._uint64_t countAndFlagsBits = 15143;
  v50._object = (void *)0xE200000000000000;
  String.append(_:)(v50);
  v51._uint64_t countAndFlagsBits = v42;
  v51._object = v41;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  v52._uint64_t countAndFlagsBits = 62;
  v52._object = (void *)0xE100000000000000;
  String.append(_:)(v52);
  return v57;
}

uint64_t sub_1004089D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + 16);
  swift_beginAccess();
  unint64_t v4 = *(void *)(v1 + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_14;
    }
  }
  if (v5 < 1) {
    goto LABEL_19;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
LABEL_14:
  swift_bridgeObjectRelease();
  *uint64_t v3 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v8 = sub_100409350(v3, a1);
  uint64_t result = swift_unknownObjectRelease();
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v9 >= v8) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v8)
    {
LABEL_16:
      sub_1005166B8(v8, v9);
      return swift_endAccess();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_100408BF0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100408C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  uint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers);
  swift_beginAccess();
  unint64_t v6 = *(void *)(v5 + 16);
  char v18 = _swiftEmptyArrayStorage;
  if (v6 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v7 = result;
    uint64_t v17 = v4;
    if (result) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    unint64_t v10 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = v4;
  if (!v7) {
    goto LABEL_14;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v16 = a1;
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_unknownObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v10 = v18;
  a1 = v16;
LABEL_15:
  *(void *)(v5 + 16) = v10;
  uint64_t v11 = swift_bridgeObjectRelease();
  unint64_t v12 = *(void *)(v5 + 16);
  __chkstk_darwin(v11);
  void v15[2] = a1;
  swift_bridgeObjectRetain();
  char v13 = sub_1001B5048((uint64_t (*)(uint64_t *))sub_1001146F4, (uint64_t)v15, v12);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    uint64_t v14 = *(void *)(a2 + v17);
    swift_retain();
    sub_1002FB058(a1, v14);
    swift_release();
    sub_100407238();
    return sub_100406674();
  }
  return result;
}

id sub_100408EC4(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  v17[3] = a3;
  v17[4] = a4;
  uint64_t v7 = sub_100052C70(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v7, a1, a3);
  uint64_t v8 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID;
  uint64_t v9 = a2;
  *(void *)&a2[v8] = sub_1004932E0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers;
  sub_1000CBE70(&qword_1007054E8);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = _swiftEmptyArrayStorage;
  *(void *)&v9[v10] = v11;
  unint64_t v12 = &v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProviderObservance];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate] = 1;
  v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_hasUpdateInProgress] = 0;
  sub_1000D4774((uint64_t)v17, (uint64_t)&v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_impl]);
  if (qword_100704F08 != -1) {
    swift_once();
  }
  *(void *)&v9[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_testablesProvider] = qword_100736ED8;
  swift_retain();

  v16.receiver = v9;
  v16.super_class = (Class)type metadata accessor for DOCFileOperationsManager();
  id v14 = [super init];
  sub_10009B1B8((uint64_t)v17);
  return v14;
}

id sub_100409078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCFileOperationsManager());
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_100408EC4((uint64_t)v9, v10, a3, a4);
}

uint64_t type metadata accessor for DOCFileOperationsManager()
{
  uint64_t result = qword_1007147C0;
  if (!qword_1007147C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004091AC()
{
  return type metadata accessor for DOCFileOperationsManager();
}

void sub_1004091B4()
{
  sub_100005A90();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100409278()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004092B0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004092F0(uint64_t a1, uint64_t a2)
{
  sub_100407414(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1004092FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100409344()
{
  return sub_1004075F0(*(char **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100409350(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *a1;
  if ((unint64_t)*a1 >> 62) {
    goto LABEL_64;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    unint64_t v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      swift_release();
      if (Strong)
      {
        swift_unknownObjectRelease();
        if (Strong == a2) {
          break;
        }
      }
      unint64_t v8 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        if (!v5) {
          goto LABEL_11;
        }
        goto LABEL_3;
      }
      ++v6;
      if (v8 == v5) {
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v11 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else if (!((unint64_t)*a1 >> 62))
    {
      if (v11 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v4 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_54;
            }
            if (v4 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_55;
            }
            swift_retain();
          }
          uint64_t v13 = swift_unknownObjectWeakLoadStrong();
          swift_release();
          if (v13)
          {
            swift_unknownObjectRelease();
            if (v13 == a2) {
              goto LABEL_44;
            }
          }
          if (v4 != v6) {
            break;
          }
LABEL_43:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_57;
          }
LABEL_44:
          unint64_t v21 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_56;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v22 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v21 == v22) {
            return v6;
          }
        }
        uint64_t v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v14 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v4 & 0x8000000000000000) != 0) {
              goto LABEL_60;
            }
            if (v4 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_61;
            }
            uint64_t v16 = *(void *)(v14 + 8 * i);
            swift_retain();
            goto LABEL_32;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_58;
          }
          if (v6 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_59;
          }
          uint64_t v15 = *(void *)(v14 + 8 * v6 + 32);
          swift_retain();
          if ((v14 & 0xC000000000000001) == 0) {
            goto LABEL_29;
          }
        }
        uint64_t v16 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v14 = *a1;
LABEL_32:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v14;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v14 < 0 || (v14 & 0x4000000000000000) != 0)
        {
          uint64_t v14 = sub_1000BC324(v14);
          *a1 = v14;
        }
        *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;
        swift_release();
        specialized Array._endMutation()();
        uint64_t v18 = *a1;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v18;
        if (!v19 || v18 < 0 || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v18 = sub_1000BC324(v18);
          *a1 = v18;
        }
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_62;
        }
        if (v4 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_63;
        }
        *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v15;
        swift_release();
        specialized Array._endMutation()();
        goto LABEL_43;
      }
      return v6;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11 != v24) {
      goto LABEL_17;
    }
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  unint64_t v9 = *a1;
  if (!(v9 >> 62)) {
    return *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100409724(uint64_t a1, char *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_100166FC4(v5);
  uint64_t v7 = (uint64_t *)&a2[OBJC_IVAR____TtC5Files24DOCFileOperationsManager_trackedItemsByID];
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_1004932E0((uint64_t)_swiftEmptyArrayStorage);
  v28[0] = v9;
  uint64_t v10 = *(void *)(a3 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(type metadata accessor for DOCFileOperation() - 8);
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100407798(v12, v8, a2, (uint64_t *)v28);
      v12 += v13;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v28[0];
  }
  else
  {
    uint64_t v14 = v9;
    swift_bridgeObjectRelease();
  }
  *uint64_t v7 = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_100166FC4(v15);
  char v17 = sub_10047E400(v16, v6);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v17 & 1) == 0)
  {
    int v19 = (uint64_t *)(*(void *)(a1 + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_observers) + 16);
    swift_beginAccess();
    uint64_t v20 = *v19;
    if ((unint64_t)*v19 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v21 = result;
      if (!result) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v21) {
        goto LABEL_20;
      }
    }
    if (v21 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_release();
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    *int v19 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v23 = *v19;
    if ((unint64_t)*v19 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v24 = result;
      if (result)
      {
LABEL_22:
        if (v24 >= 1)
        {
          for (uint64_t j = 0; j != v24; ++j)
          {
            if ((v23 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              [Strong didUpdateInProgressOperationsIn:a1];
              swift_release();
              swift_unknownObjectRelease();
            }
            else
            {
              swift_release();
            }
          }
          goto LABEL_32;
        }
LABEL_35:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v24) {
        goto LABEL_22;
      }
    }
LABEL_32:
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_100409B00()
{
  swift_release();
  sub_10009B1B8(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100409B40(unsigned char *a1)
{
}

uint64_t sub_100409B4C()
{
  return sub_100407F64(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_100409B54()
{
}

uint64_t sub_100409B5C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100409B94(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100409BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070B6D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100409C5C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100409C94()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files24DOCFileOperationsManager_needsUpdate) = 1;
  sub_100407238();
}

void DOCSplitBrowserViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v13 = [v4 fullDocumentManagerViewController];
  uint64_t v8 = (char *)[v13 effectiveBrowserViewController];
  if (v8)
  {
    id v9 = v8;
    uint64_t v10 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v11 = *v10;
    if (v11 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
    {
      id v12 = v11;

      id v9 = v12;
      DOCItemCollectionViewController.prepareSnapshotForSplitStateChanging(fromState:toState:alongside:)(a1, a2, a3);
    }
    else
    {
    }
  }
  else
  {
  }
}

void sub_100409F0C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 fullDocumentManagerViewController];
  uint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v2;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10040AE40;
  *(void *)(v7 + 24) = v6;
  uint64_t v20 = (uint64_t (*)(void))sub_1000879B8;
  uint64_t v21 = v7;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_100087990;
  int v19 = &unk_1006AAD70;
  uint64_t v8 = _Block_copy(&v16);
  id v9 = v4;
  id v10 = v2;
  swift_retain();
  swift_release();
  [(id)v5 performWithoutAnimation:v8];
  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = DOCSplitBrowserViewController.didCommitPreview(of:);
    uint64_t v21 = 0;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_100045AE0;
    int v19 = &unk_1006AAD98;
    uint64_t v11 = _Block_copy(&v16);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v9;
    *(void *)(v12 + 24) = v10;
    uint64_t v20 = (uint64_t (*)(void))sub_10040AE40;
    uint64_t v21 = v12;
    uint64_t v16 = _NSConcreteStackBlock;
    uint64_t v17 = 1107296256;
    uint64_t v18 = sub_100045AE0;
    int v19 = &unk_1006AADE8;
    id v13 = _Block_copy(&v16);
    id v14 = v9;
    id v15 = v10;
    swift_release();
    [a1 animateAlongsideTransition:v11 completion:v13];
    _Block_release(v13);
    _Block_release(v11);
    swift_release();
  }
}

void sub_10040A1B8(void *a1)
{
  uint64_t v2 = type metadata accessor for UITraitOverrides();
  [a1 enclosingUIPHorizontalInset];
  double v4 = v3;
  if (sub_10040A304()) {
    double v5 = 160.0;
  }
  else {
    double v5 = 0.0;
  }
  if (v5 != v4)
  {
    UIViewController.traitOverrides.getter();
    UIMutableTraits.enclosingUIPHorizontalInset.setter();
    UIViewController.traitOverrides.setter();
    [a1 setAdditionalSafeAreaInsets:0.0, v5, 0.0, v5];
    [a1 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
    id v6 = [a1 view];
    if (v6)
    {
      uint64_t v7 = v6;
      [v6 layoutBelowIfNeeded];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10040A304()
{
  id v1 = [v0 fullDocumentManagerViewController];
  uint64_t v2 = (char *)[v1 dataSource];
  uint64_t v3 = *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle];

  if (v3 != 2)
  {
    id v4 = [v0 doc_splitViewState];
    unsigned __int8 v5 = [v4 isSidebarShownInOverlay];

    id v6 = [v0 enclosingTabSwitcherStyle];
    if ([v0 enclosedInUIPDocumentLanding])
    {
      id v7 = [v0 doc_splitViewState];
      unsigned __int8 v8 = [v7 isSidebarShownInline];

      if ((v8 & 1) != 0 || (id v9 = [v0 preferredSplitBehavior], v9 == (id)1))
      {
        if (v6 == (id)2) {
          char v13 = 1;
        }
        else {
          char v13 = v5;
        }
        if (v13) {
          return 1;
        }
      }
      else if (!v9)
      {
        unsigned int v10 = [v0 _canTileSidebarColumn:0];
        char v11 = v6 == (id)2 ? 1 : v5;
        if (v10 && (v11 & 1) != 0) {
          return 1;
        }
      }
    }
  }
  return 0;
}

id DOCSplitBrowserViewController.target(forAction:withSender:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = [v3 fullDocumentManagerViewController];
  DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(a1, a2);
  char v9 = v8;

  if (v9)
  {
    id v17 = [v30 fullDocumentManagerViewController];
    sub_100053674(a2, (uint64_t)&v31);
    uint64_t v18 = *((void *)&v32 + 1);
    if (*((void *)&v32 + 1))
    {
      int v19 = sub_1000A6B78(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v20 = *(void *)(v18 - 8);
      double v21 = __chkstk_darwin(v19);
      uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v20 + 16))(v23, v21);
      uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      sub_10009B1B8((uint64_t)&v31);
    }
    else
    {
      uint64_t v24 = 0;
    }
    id v28 = [v17 targetForAction:a1 withSender:v24];

    swift_unknownObjectRelease();
    if (v28)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v31 = 0u;
      long long v32 = 0u;
    }
    return (id)sub_1000516C4((uint64_t)&v31, a3);
  }
  else
  {
    sub_100053674(a2, (uint64_t)&v31);
    uint64_t v10 = *((void *)&v32 + 1);
    if (*((void *)&v32 + 1))
    {
      char v11 = sub_1000A6B78(&v31, *((uint64_t *)&v32 + 1));
      uint64_t v12 = *(void *)(v10 - 8);
      double v13 = __chkstk_darwin(v11);
      id v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v12 + 16))(v15, v13);
      uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
      sub_10009B1B8((uint64_t)&v31);
    }
    else
    {
      uint64_t v16 = 0;
    }
    unsigned int v25 = [v30 canPerformAction:a1 withSender:v16];
    id result = (id)swift_unknownObjectRelease();
    if (v25)
    {
      *(void *)(a3 + 24) = sub_10040A810();
      id v27 = v30;
      *(void *)a3 = v30;
      return v27;
    }
    else
    {
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
  }
  return result;
}

unint64_t sub_10040A810()
{
  unint64_t result = qword_1007147E0;
  if (!qword_1007147E0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007147E0);
  }
  return result;
}

BOOL DOCSplitBrowserViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  if (static Selector.== infix(_:_:)())
  {
    return sub_10040AB7C(a1, a2);
  }
  else
  {
    sub_100053674(a2, (uint64_t)v15);
    uint64_t v6 = v16;
    if (v16)
    {
      id v7 = sub_1000A6B78(v15, v16);
      uint64_t v8 = *(void *)(v6 - 8);
      double v9 = __chkstk_darwin(v7);
      char v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
      sub_10009B1B8((uint64_t)v15);
    }
    else
    {
      uint64_t v12 = 0;
    }
    v14.receiver = v2;
    v14.super_class = (Class)DOCSplitBrowserViewController;
    [super canPerformAction:a1 withSender:v12];
    swift_unknownObjectRelease();
    return (BOOL)v13;
  }
}

BOOL sub_10040AB7C(uint64_t a1, uint64_t a2)
{
  if ([self enclosingTabSwitcherCanBeFloating])
  {
    id v5 = [v2 doc_splitViewState];
    unsigned __int8 v6 = [v5 isSidebarShown];

    return (v6 & 1) != 0 || [v2 enclosingTabSwitcherStyle] == (id)2;
  }
  else
  {
    sub_100053674(a2, (uint64_t)v17);
    uint64_t v8 = v18;
    if (v18)
    {
      double v9 = sub_1000A6B78(v17, v18);
      uint64_t v10 = *(void *)(v8 - 8);
      double v11 = __chkstk_darwin(v9);
      id v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v10 + 16))(v13, v11);
      uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
      sub_10009B1B8((uint64_t)v17);
    }
    else
    {
      uint64_t v14 = 0;
    }
    v16.receiver = v2;
    v16.super_class = (Class)DOCSplitBrowserViewController;
    [super canPerformAction:a1 withSender:v14];
    swift_unknownObjectRelease();
  }
  return (BOOL)v7;
}

uint64_t type metadata accessor for UIPDocumentLandingSettings()
{
  return self;
}

uint64_t sub_10040AE00()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10040AE40()
{
  sub_10040A1B8(*(void **)(v0 + 16));
}

uint64_t sub_10040AE48()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t static DOCItemCollectionContext.== infix(_:_:)(char a1, char a2)
{
  if (a1 == 2)
  {
    if (a2 != 2) {
      return 0;
    }
  }
  else if (a1 == 3)
  {
    if (a2 != 3) {
      return 0;
    }
  }
  else if ((a2 & 0xFE) == 2)
  {
    return 0;
  }
  return 1;
}

id static DOCItemCollectionContext.recentsItemCollectionContext(for:)(void *a1)
{
  return [a1 forPickingDocuments];
}

uint64_t sub_10040AED4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2)
  {
    if (v3 == 2) {
      return 1;
    }
  }
  else if (v2 == 3)
  {
    if (v3 == 3) {
      return 1;
    }
  }
  else if ((v3 & 0xFE) != 2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_10040AF1C(void *a1, void *a2, void *a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for DOCNodeType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  DOCNode.nodeType.getter();
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == enum case for DOCNodeType.FPItem(_:))
  {
    id v13 = [self defaultManager];
    self;
    id v14 = [v13 collectionForFolderItem:swift_dynamicCastObjCClassUnconditional()];

    objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    id v15 = a1;
    id v16 = v14;
    sub_1000B3300(v16, a1);
    uint64_t v18 = v17;

    id v19 = a2;
LABEL_5:

    return v18;
  }
  if (v12 == enum case for DOCNodeType.FINode(_:))
  {
    uint64_t v20 = objc_allocWithZone((Class)type metadata accessor for DOCFileSystemCollection());
    id v19 = a3;
    id v21 = a1;
    id v22 = a2;
    id v23 = sub_10040BCAC(v21, a2, a3, a4 | ((HIDWORD(a4) & 1) << 32), v20);

    id v24 = objc_allocWithZone((Class)type metadata accessor for DOCNodeCollection());
    sub_100033F8C(v23);
    uint64_t v18 = v25;

    goto LABEL_5;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10040B234);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCItemCollectionContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10040B31CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionContext()
{
  return &type metadata for DOCItemCollectionContext;
}

char *initializeBufferWithCopyOfBuffer for DOCItemCollectionConfiguration(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unsigned int v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    unsigned int v7 = a1;
    unsigned int v8 = a2[1];
    *((void *)a1 + 1) = v8;
    a1[16] = *((unsigned char *)a2 + 16);
    uint64_t v9 = a2[3];
    *((void *)a1 + 3) = v9;
    uint64_t v10 = a3[8];
    __dst = &a1[v10];
    double v11 = (char *)a2 + v10;
    uint64_t v12 = type metadata accessor for DOCItemSortMode();
    uint64_t v13 = *(void *)(v12 - 8);
    id v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    id v14 = v4;
    id v15 = v8;
    id v16 = v9;
    if (v30(v11, 1, v12))
    {
      uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
      memcpy(__dst, v11, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v18 = a3[10];
    v7[a3[9]] = *((unsigned char *)a2 + a3[9]);
    id v19 = &v7[v18];
    uint64_t v20 = (char **)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *(void *)id v19 = *v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = a3[11];
    uint64_t v23 = a3[12];
    id v24 = *(char **)((char *)a2 + v22);
    *(void *)&v7[v22] = v24;
    *(void *)&v7[v23] = *(char **)((char *)a2 + v23);
    uint64_t v25 = a3[13];
    uint64_t v26 = *(char **)((char *)a2 + v25);
    *(void *)&v7[v25] = v26;
    swift_bridgeObjectRetain();
    id v27 = v24;
    swift_unknownObjectRetain();
    id v28 = v26;
  }
  return v7;
}

uint64_t assignWithCopy for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a2;
  unsigned int v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v12 = *(void **)(a1 + 24);
  uint64_t v13 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v13;
  id v14 = v13;

  uint64_t v15 = a3[8];
  id v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for DOCItemSortMode();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    uint64_t v23 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_7:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[11];
  id v28 = *(void **)(a1 + v27);
  uint64_t v29 = *(void **)(a2 + v27);
  *(void *)(a1 + v27) = v29;
  id v30 = v29;

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v31 = a3[13];
  long long v32 = *(void **)(a1 + v31);
  long long v33 = *(void **)(a2 + v31);
  *(void *)(a1 + v31) = v33;
  id v34 = v33;

  return a1;
}

uint64_t initializeWithTake for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = a3[8];
  unsigned int v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for DOCItemSortMode();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  unsigned int v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for DOCItemSortMode();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[11];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);

  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_unknownObjectRelease();
  uint64_t v25 = a3[13];
  uint64_t v26 = *(void **)(a1 + v25);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040BB38);
}

uint64_t sub_10040BB38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040BC00);
}

void *sub_10040BC00(void *result, uint64_t a2, int a3, uint64_t a4)
{
  unsigned int v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 32);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

id sub_10040BCAC(void *a1, void *a2, void *a3, unint64_t a4, unsigned char *a5)
{
  unint64_t v104 = a4;
  id v99 = a3;
  uint64_t v95 = a2;
  uint64_t v101 = a1;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  uint64_t v94 = v7;
  uint64_t v8 = __chkstk_darwin(v6);
  id v89 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v88 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v91 = (char *)&v88 - v13;
  __chkstk_darwin(v12);
  id v92 = (char *)&v88 - v14;
  uint64_t v15 = type metadata accessor for OSSignpostID();
  uint64_t v102 = *(void *)(v15 - 8);
  uint64_t v103 = v15;
  __chkstk_darwin(v15);
  uint64_t v100 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v17 - 8);
  uint64_t v97 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v18 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v20 = (char *)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v21);
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isGathering] = 1;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_isFullyPopulated] = 0;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__nodes] = _swiftEmptyArrayStorage;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection__isObserving] = 0;
  uint64_t v22 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock;
  sub_1000CBE70(qword_100714940);
  uint64_t v23 = swift_allocObject();
  *(_DWORD *)(v23 + 16) = 0;
  *(void *)&a5[v22] = v23;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_shouldStopAccessing] = 0;
  a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_domainState] = 0;
  uint64_t v98 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_source] = 0;
  *(void *)&a5[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserverToken] = 0;
  uint64_t v96 = OBJC_IVAR____TtC5Files23DOCFileSystemCollection_workQueue;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  v107[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_1003D4E80();
  uint64_t v24 = a5;
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_1001AC13C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v97);
  uint64_t v25 = v24;
  static DispatchQoS.unspecified.getter();
  uint64_t v26 = v99;
  *(void *)&a5[v96] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_iCloudRootNodeObservation] = 0;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = 0;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sortDescriptors] = _swiftEmptyArrayStorage;
  uint64_t v27 = &_swiftEmptySetSingleton;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_propertiesImpactingSort] = &_swiftEmptySetSingleton;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter()) {
      sub_1004A0910((unint64_t)_swiftEmptyArrayStorage);
    }
    else {
      uint64_t v27 = &_swiftEmptySetSingleton;
    }
  }
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesWithPendingUpdates] = v27;
  id v28 = &v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval];
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodesUpdatesFlushInterval] = 100;
  uint64_t v29 = enum case for DispatchTimeInterval.milliseconds(_:);
  uint64_t v30 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
  uint64_t v31 = &v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_lastFlushTime];
  uint64_t v32 = type metadata accessor for DispatchTime();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_hasScheduledUpdate] = 0;
  v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_dispatchedUpdateIsPending] = 0;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observer] = 0;
  long long v33 = v101;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode] = v101;
  id v34 = *(void **)&a5[v98];
  *(void *)&a5[v98] = v26;
  id v35 = v33;
  id v36 = v26;

  if ((v104 & (unint64_t)&_mh_execute_header) != 0) {
    int v37 = 19;
  }
  else {
    int v37 = v104 | 0x13;
  }
  *(_DWORD *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_nodeObservationOptions] = v37;
  static os_signpost_type_t.event.getter();
  uint64_t updated = (void *)updatePointsOfInterestHandler.getter();
  Swift::String v39 = v100;
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:_:_:)();

  (*(void (**)(char *, uint64_t))(v102 + 8))(v39, v103);
  type metadata accessor for DOCRootNode();
  uint64_t v40 = swift_dynamicCastClass();
  if (v40)
  {
    uint64_t v41 = (void *)v40;
    swift_unknownObjectRetain();
    uint64_t v42 = v92;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    Swift::String v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.info.getter();
    Swift::String v45 = &selRef_prepareForReuse;
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v103 = swift_slowAlloc();
      v107[0] = v103;
      *(_DWORD *)uint64_t v46 = 136446466;
      unint64_t v104 = (unint64_t)v25;
      uint64_t v105 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2080;
      uint64_t v102 = v46 + 14;
      Swift::String v47 = v26;
      id v48 = [v41 source];
      id v49 = [v48 displayName];

      uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v52 = v51;

      uint64_t v25 = (char *)v104;
      uint64_t v53 = v50;
      uint64_t v26 = v47;
      Swift::String v45 = &selRef_prepareForReuse;
      uint64_t v105 = sub_10009B0E4(v53, v52, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "[DSEnumeration] %{public}s: node is RootNode so using underlyingNode: %s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v94 + 8))(v92, v93);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v94 + 8))(v42, v93);
    }
    uint64_t v64 = v95;
    id v55 = [v41 v45[376]];

    goto LABEL_19;
  }
  type metadata accessor for DOCICloudRootNode();
  uint64_t v54 = swift_dynamicCastClass();
  if (v54)
  {
    id v55 = (id)v54;
    swift_unknownObjectRetain();
    uint64_t v56 = v91;
    static Logger.Enumeration.getter();
    swift_unknownObjectRetain_n();
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v59 = 136446466;
      uint64_t v60 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v107);
      unint64_t v104 = (unint64_t)v25;
      uint64_t v105 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v59 + 12) = 2080;
      uint64_t v61 = (void *)dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();

      if (v61) {
        uint64_t v62 = 0xD000000000000032;
      }
      else {
        uint64_t v62 = 0xD00000000000002ALL;
      }
      if (v61) {
        unint64_t v63 = 0x80000001005EF630;
      }
      else {
        unint64_t v63 = 0x80000001005EF670;
      }
      uint64_t v105 = sub_10009B0E4(v62, v63, v107);
      uint64_t v25 = (char *)v104;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "[DSEnumeration] %{public}s: node is DOCICloudRootNode, using: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v94 + 8))(v91, v93);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v94 + 8))(v56, v93);
    }
    uint64_t v64 = v95;
    uint64_t v80 = dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();
    if (v80)
    {
      int v81 = (void *)v80;

      id v55 = v81;
    }
LABEL_19:
    *(void *)&v25[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v55;
    id v65 = 0;
    if (!v64) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  self;
  uint64_t v75 = swift_dynamicCastObjCClass();
  if (v75)
  {
    id v55 = (id)v75;
    swift_unknownObjectRetain();
    uint64_t v76 = v90;
    static Logger.Enumeration.getter();
    NSString v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v77, v78))
    {
      id v79 = (uint8_t *)swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)id v79 = 136446210;
      uint64_t v105 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[DSEnumeration] %{public}s: node is a regular node", v79, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v94 + 8))(v90, v93);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v94 + 8))(v76, v93);
    }
    uint64_t v64 = v95;
    goto LABEL_19;
  }
  unint64_t v82 = v89;
  static Logger.Enumeration.getter();
  swift_unknownObjectRetain_n();
  NSString v83 = Logger.logObject.getter();
  os_log_type_t v84 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v85 = 136446466;
    uint64_t v105 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005EF600, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v85 + 12) = 2080;
    sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
    uint64_t v86 = DOCNode.nodeDescription.getter();
    uint64_t v105 = sub_10009B0E4(v86, v87, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "[DSEnumeration] %{public}s: DOCFileSystemCollection initiated with a non-FINode DOCNode %s", (uint8_t *)v85, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v94 + 8))(v89, v93);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v94 + 8))(v82, v93);
  }
  uint64_t v64 = v95;
  *(void *)&v24[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_internalObservedNode] = v35;
  swift_unknownObjectRetain();
  id v65 = 0;
  if (v64)
  {
LABEL_20:
    if (v26)
    {
      uint64_t v66 = self;
      id v67 = v64;
      id v68 = [v66 defaultPermission];
      id v69 = [v68 userActionForConfiguration:v67];

      id v70 = [v67 hostIdentifier];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v71 = objc_allocWithZone((Class)DOCSourceObserver);
      NSString v72 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v65 = [v71 initWithUserAction:v69 hostIdentifier:v72];
    }
  }
LABEL_22:
  *(void *)&v25[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_sourceObserver] = v65;

  uint64_t v73 = (objc_class *)type metadata accessor for DOCFileSystemCollection();
  v106.receiver = v25;
  v106.super_class = v73;
  return [super init];
}

void DOCDiffable.dds.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t DOCDiffable.snapshot(empty:)(char a1)
{
  if ((a1 & 1) == 0) {
    return dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
  }
  type metadata accessor for DOCDiffableIdentifier();
  type metadata accessor for DOCDiffableIdentifier();
  swift_getWitnessTable();
  swift_getWitnessTable();

  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t type metadata accessor for DOCDiffableIdentifier()
{
  return sub_1000D21B0();
}

uint64_t DOCDiffableIdentifier.description.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  double v3 = __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(v5 + 28), v2, v3);
  return String.init<A>(describing:)();
}

Swift::Int DOCDiffableIdentifier.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_10040CDF0()
{
  Hasher.init(_seed:)();
  DOCDiffableIdentifier.hash(into:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10040CE2C()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for DOCDiffable()
{
  return sub_1000D21B0();
}

uint64_t sub_10040CE68()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10040CF04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 40) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v4 + v7 + 40) & ~v7, ((unint64_t)a2 + v7 + 40) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_10040D03C(uint64_t a1, uint64_t a2)
{
  sub_10009B1B8(a1);
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_10040D0AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t *sub_10040D158(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1002B25D4(a1, a2);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_10040D1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_10040D24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009B1B8(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_10040D2D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 40) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 40) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 3);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_10040D478(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 40) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x10040D6E4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 40] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(a1 + 8) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 3) = a2 - 1;
        }
      }
      return;
  }
}

unint64_t sub_10040D710()
{
  unint64_t result = qword_100714A48;
  if (!qword_100714A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714A48);
  }
  return result;
}

unint64_t sub_10040D768()
{
  unint64_t result = qword_100714A50;
  if (!qword_100714A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714A50);
  }
  return result;
}

uint64_t sub_10040D7BC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_10040D7F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10040D80C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  double v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_1007374B8);
  sub_10009D098(v6, (uint64_t)qword_1007374B8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_10040DA20()
{
  uint64_t v0 = sub_1000CBE70(&qword_100714A78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100714A80);
  __chkstk_darwin(v1);
  sub_1001AE94C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F2B60;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714A88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10040DBC0(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for OpenURLIntent();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  sub_1000CBE70(&qword_1007076B0);
  v2[20] = swift_task_alloc();
  uint64_t Name = type metadata accessor for DeepLinkComponents.QueryName();
  v2[21] = Name;
  v2[22] = *(void *)(Name - 8);
  v2[23] = swift_task_alloc();
  sub_1000CBE70(&qword_10070BB00);
  v2[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URLComponents();
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  v2[27] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v2[28] = v6;
  v2[29] = *(void *)(v6 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = type metadata accessor for DOCFileEntity();
  v2[35] = swift_task_alloc();
  return _swift_task_switch(sub_10040DE4C, 0, 0);
}

uint64_t sub_10040DE4C()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[32];
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = *(void **)(v1 + *(int *)(v2 + 32));
  v0[36] = v4;
  id v5 = v4;
  sub_100117404(v1);
  id v6 = [self defaultManager];
  v0[37] = v6;
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_10040DFA8;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100388CB0;
  v0[13] = &unk_1006AAF20;
  v0[14] = v7;
  [v6 fetchURLForItem:v5 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10040DFA8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 304) = v1;
  if (v1) {
    uint64_t v2 = sub_10040E750;
  }
  else {
    uint64_t v2 = sub_10040E0B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10040E0B8()
{
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[24];
  id v5 = *(void (**)(void))(v0[29] + 32);
  ((void (*)(void, void, void))v5)(v0[33], v0[32], v0[28]);

  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    id v6 = (void *)v0[36];
    uint64_t v7 = v0[33];
    uint64_t v9 = v0[28];
    uint64_t v8 = v0[29];
    sub_1000CBBA4(v0[24], &qword_10070BB00);
    uint64_t v10 = type metadata accessor for DeepLinkError();
    sub_1000CC014(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for DeepLinkError.deeplinkConstructionError(_:), v10);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    goto LABEL_7;
  }
  uint64_t v41 = v5;
  uint64_t v44 = v0[29];
  uint64_t v45 = v0[28];
  uint64_t v12 = v0[23];
  uint64_t v14 = v0[21];
  uint64_t v13 = v0[22];
  uint64_t v43 = v0[20];
  (*(void (**)(void))(v0[26] + 32))();
  static DeepLinkLocation.filesAppURLScheme.getter();
  URLComponents.scheme.setter();
  sub_1000CBE70(&qword_10070BB10);
  type metadata accessor for URLQueryItem();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  int v15 = *(void (**)(uint64_t, void, uint64_t))(v13 + 104);
  v15(v12, enum case for DeepLinkComponents.QueryName.reveal(_:), v14);
  DeepLinkComponents.QueryName.rawValue.getter();
  unsigned int v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v12, v14);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  v15(v12, enum case for DeepLinkComponents.QueryName.showcontents(_:), v14);
  DeepLinkComponents.QueryName.rawValue.getter();
  v16(v12, v14);
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v43, 1, v45);
  unint64_t v18 = (void *)v0[36];
  if (v17 == 1)
  {
    uint64_t v19 = v0[33];
    uint64_t v20 = v0[28];
    uint64_t v21 = v0[29];
    uint64_t v23 = v0[26];
    uint64_t v22 = v0[27];
    uint64_t v24 = v0[25];
    sub_1000CBBA4(v0[20], &qword_1007076B0);
    uint64_t v25 = type metadata accessor for DeepLinkError();
    sub_1000CC014(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, enum case for DeepLinkError.deeplinkConstructionError(_:), v25);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    goto LABEL_5;
  }
  uint64_t v42 = v0[33];
  uint64_t v28 = v0[31];
  uint64_t v29 = v0[29];
  uint64_t v30 = v0[30];
  uint64_t v31 = v0[28];
  uint64_t v38 = (void *)v0[36];
  uint64_t v32 = v0[26];
  uint64_t v39 = v0[25];
  uint64_t v40 = v0[27];
  uint64_t v33 = v0[19];
  uint64_t v34 = v0[17];
  uint64_t v35 = v0[18];
  v41(v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v30, v28, v31);
  OpenURLIntent.init(_:)();
  sub_1000CC014(&qword_10070BB18, (void (*)(uint64_t))&type metadata accessor for OpenURLIntent);
  static IntentResult.result<A>(opensIntent:)();

  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
  id v36 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v36(v28, v31);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v40, v39);
  v36(v42, v31);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v27();
}

uint64_t sub_10040E750()
{
  uint64_t v1 = (void *)v0[37];
  uint64_t v2 = (void *)v0[36];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10040E84C@<X0>(uint64_t a1@<X8>)
{
  if (qword_100705190 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_1007374B8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10040E8F8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CB70;
  return sub_10040DBC0(a1, v4);
}

uint64_t sub_10040E998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10040F190();
  *a1 = result;
  return result;
}

uint64_t sub_10040E9C0(uint64_t a1)
{
  unint64_t v2 = sub_1001AE94C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for RevealFileIntent()
{
  return &type metadata for RevealFileIntent;
}

uint64_t sub_10040EA0C()
{
  return sub_100073DF0(&qword_100714A60, &qword_100714A68);
}

uint64_t sub_10040EA48(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v1 = type metadata accessor for DOCFileEntity();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v44 = (uint64_t)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v43 = (uint64_t)v32 - v4;
  uint64_t v5 = type metadata accessor for InputConnectionBehavior();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007075E0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v39 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v36 = (char *)v32 - v10;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v34 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v13 - 8);
  uint64_t v33 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Locale();
  __chkstk_darwin(v19 - 8);
  uint64_t v20 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v20 - 8);
  v32[0] = type metadata accessor for LocalizedStringResource();
  uint64_t v21 = *(void *)(v32[0] - 8);
  __chkstk_darwin(v32[0]);
  v32[1] = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v23 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
  v24(v18, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v24(v18, v23, v15);
  uint64_t v25 = v33;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, void))(v21 + 56))(v25, 0, 1, v32[0]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v34, 1, 1, v38);
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  uint64_t v26 = type metadata accessor for IntentDialog();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  v27(v36, 1, 1, v26);
  v27(v39, 1, 1, v26);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  sub_1000CC014(&qword_1007075F0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  uint64_t v28 = IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  uint64_t v29 = v45;
  uint64_t v30 = v43;
  sub_1001173A0(v45, v43);
  sub_1001173A0(v30, v44);
  swift_retain();
  IntentParameter.wrappedValue.setter();
  sub_100117404(v30);
  swift_release();
  sub_100117404(v29);
  return v28;
}

uint64_t sub_10040F190()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v31 = *(void *)(v0 - 8);
  uint64_t v32 = v0;
  __chkstk_darwin(v0);
  uint64_t v30 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v29 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v28 = (char *)&v24 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v26 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v8 - 8);
  uint64_t v25 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v24 = type metadata accessor for LocalizedStringResource();
  uint64_t v16 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v18(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v18(v13, v17, v10);
  uint64_t v19 = v25;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v24);
  uint64_t v20 = type metadata accessor for DOCFileEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v26, 1, 1, v20);
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  uint64_t v21 = type metadata accessor for IntentDialog();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v28, 1, 1, v21);
  v22(v29, 1, 1, v21);
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, enum case for InputConnectionBehavior.default(_:), v32);
  sub_1000CC014(&qword_1007075F0, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  return IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_10040F804@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

void sub_10040F830()
{
  id v0 = [objc_allocWithZone((Class)_UIVisualEffectViewBackdropCaptureGroup) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setGroupName:v1];

  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setGroupNamespace:v2];

  qword_1007374D0 = (uint64_t)v0;
}

id sub_10040F8F4(void *a1, void *a2, void *a3)
{
  swift_getObjectType();
  uint64_t v7 = sub_1000CBE70(&qword_100708758);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView] = 0;
  if (a3)
  {
    uint64_t v10 = v3;
    id v11 = a3;
  }
  else
  {
    id v12 = objc_allocWithZone((Class)DOCAppearance);
    uint64_t v13 = v3;
    id v11 = [v12 init];
  }
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_configuration] = a1;
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_captureGroup] = a2;
  *(void *)&v3[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_appearance] = v11;
  id v14 = a2;
  id v15 = v11;
  id v16 = a3;
  id v17 = a1;

  unint64_t v18 = (objc_class *)type metadata accessor for DOCSystemMaterialBackgroundView();
  v23.receiver = v3;
  v23.super_class = v18;
  id v19 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10040FAF4();
  uint64_t v20 = type metadata accessor for DOCTraitChangeObservingOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 1, 1, v20);
  id v21 = v19;
  UIView.registerForTabSwitcherTraitChanges<A>(options:_:)();

  swift_unknownObjectRelease();
  sub_1000CBBA4((uint64_t)v9, &qword_100708758);
  return v21;
}

void sub_10040FAF4()
{
  NSString v1 = v0;
  id v2 = [self effectWithStyle:8];
  id v3 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v2];

  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_captureGroup];
  if (v4)
  {
    id v5 = v4;
    id v6 = [v3 _captureGroup];
    id v7 = [v5 groupName];
    [v6 setGroupName:v7];

    id v8 = [v3 _captureGroup];
    id v9 = [v5 groupNamespace];
    [v8 setGroupNamespace:v9];
  }
  id v10 = [objc_allocWithZone((Class)UIView) init];
  [v10 setAlpha:0.6];
  id v11 = [self clearColor];
  [v1 setBackgroundColor:v11];

  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0C30;
  *(void *)(inited + 32) = v3;
  *(void *)(inited + 40) = v10;
  uint64_t v24 = inited;
  specialized Array._endMutation()();
  if ((v24 & 0xC000000000000001) != 0)
  {
    id v22 = v10;
    id v23 = v3;
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    uint64_t v13 = *(void **)(v24 + 32);
    id v14 = v10;
    id v15 = v3;
    id v16 = v13;
  }
  id v17 = v16;
  [v1 bounds];
  [v17 setFrame:];
  [v17 setAutoresizingMask:18];
  [v1 addSubview:v17];

  if ((v24 & 0xC000000000000001) != 0) {
    id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v18 = *(id *)(v24 + 40);
  }
  id v19 = v18;
  [v1 bounds];
  [v19 setFrame:];
  [v19 setAutoresizingMask:18];
  [v1 addSubview:v19];
  swift_bridgeObjectRelease();

  uint64_t v20 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView];
  *(void *)&v1[OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView] = v10;
  id v21 = v10;

  sub_10040FE08();
  sub_10040FE08();
}

void sub_10040FE08()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_appearance);
    id v3 = v1;
    id v4 = v2;
    [v4 copy];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_100410324();
    swift_dynamicCast();
    id v5 = v20;

    [v20 setForceClearBackground:0];
    id v6 = [v20 backgroundColor];
    [v3 setBackgroundColor:v6];

    id v7 = [*(id *)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_configuration) hostIdentifier];
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;

    if (v8 == 0xD000000000000028 && v10 == 0x80000001005F2C50)
    {
      swift_bridgeObjectRelease();
      char v11 = 1;
    }
    else
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
    }
    id v12 = [self standardUserDefaults];
    char v13 = sub_1004100F0(0xD000000000000014, 0x80000001005F2C80, v11 & 1);

    if (v13)
    {
      id v14 = [v3 layer];
      id v15 = [self orangeColor];
      id v16 = [v15 CGColor];

      [v14 setBorderColor:v16];
      id v17 = [v3 layer];
      [v17 setBorderWidth:8.0];

      id v18 = [v3 layer];
      [v18 setCornerRadius:16.0];

      id v19 = [v3 layer];
      [v19 setMaskedCorners:12];

      id v3 = v20;
      id v5 = v19;
    }
  }
}

uint64_t sub_1004100F0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v3 objectForKey:v5];

  if (v6)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100705D60);
    NSString v7 = String._bridgeToObjectiveC()();
    a3 = [v3 BOOLForKey:v7];
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100705D60);
  }
  return a3 & 1;
}

void sub_100410200()
{
  NSString v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files31DOCSystemMaterialBackgroundView_topView);
}

id sub_100410260()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSystemMaterialBackgroundView();
  [super dealloc];
}

uint64_t type metadata accessor for DOCSystemMaterialBackgroundView()
{
  return self;
}

unint64_t sub_100410324()
{
  unint64_t result = qword_10070D090;
  if (!qword_10070D090)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070D090);
  }
  return result;
}

void sub_100410364()
{
}

uint64_t sub_100410388@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if ((result & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, &qword_100712FA0);
    sub_1000B86A8((unint64_t *)&qword_100712FA8, &qword_100712FA0);
    Set.Iterator.init(_cocoa:)();
    unint64_t result = v10;
    uint64_t v3 = v11;
    long long v4 = v12;
    uint64_t v5 = v13;
  }
  else
  {
    uint64_t v6 = -1;
    uint64_t v7 = -1 << *(unsigned char *)(result + 32);
    uint64_t v8 = ~v7;
    uint64_t v3 = result + 56;
    uint64_t v9 = -v7;
    if (v9 < 64) {
      uint64_t v6 = ~(-1 << v9);
    }
    uint64_t v5 = v6 & *(void *)(result + 56);
    long long v4 = (unint64_t)v8;
  }
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v3;
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v5;
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100410478()
{
  NSString v1 = v0;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    if (__CocoaSet.Iterator.next()())
    {
      sub_10009E6C4(0, &qword_100712FA0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      if (v15) {
        goto LABEL_6;
      }
    }
    return;
  }
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  if (v2)
  {
    uint64_t v4 = (v2 - 1) & v2;
    unint64_t v5 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_4:
    uint64_t v6 = *(void **)(*(void *)(*v0 + 48) + 8 * v5);
    id v7 = v6;
    goto LABEL_5;
  }
  int64_t v9 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
LABEL_35:
    __break(1u);
    return;
  }
  int64_t v10 = (unint64_t)(v0[2] + 64) >> 6;
  if (v9 >= v10)
  {
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    goto LABEL_5;
  }
  uint64_t v11 = v0[1];
  unint64_t v12 = *(void *)(v11 + 8 * v9);
  if (v12)
  {
LABEL_14:
    uint64_t v4 = (v12 - 1) & v12;
    unint64_t v5 = __clz(__rbit64(v12)) + (v9 << 6);
    int64_t v3 = v9;
    goto LABEL_4;
  }
  int64_t v13 = v3 + 2;
  if (v3 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v12 = *(void *)(v11 + 8 * v13);
  if (v12)
  {
LABEL_19:
    int64_t v9 = v13;
    goto LABEL_14;
  }
  if (v3 + 3 >= v10) {
    goto LABEL_32;
  }
  unint64_t v12 = *(void *)(v11 + 8 * (v3 + 3));
  if (v12)
  {
    int64_t v9 = v3 + 3;
    goto LABEL_14;
  }
  int64_t v13 = v3 + 4;
  if (v3 + 4 < v10)
  {
    unint64_t v12 = *(void *)(v11 + 8 * v13);
    if (v12) {
      goto LABEL_19;
    }
    int64_t v9 = v3 + 5;
    if (v3 + 5 < v10)
    {
      unint64_t v12 = *(void *)(v11 + 8 * v9);
      if (v12) {
        goto LABEL_14;
      }
      int64_t v9 = v10 - 1;
      int64_t v14 = v3 + 6;
      while (v10 != v14)
      {
        unint64_t v12 = *(void *)(v11 + 8 * v14++);
        if (v12)
        {
          int64_t v9 = v14 - 1;
          goto LABEL_14;
        }
      }
LABEL_31:
      uint64_t v6 = 0;
      uint64_t v4 = 0;
      int64_t v3 = v9;
      goto LABEL_5;
    }
LABEL_32:
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    int64_t v3 = v13;
    goto LABEL_5;
  }
  uint64_t v6 = 0;
  uint64_t v4 = 0;
  v3 += 3;
LABEL_5:
  v1[3] = v3;
  v1[4] = v4;
  if (v6)
  {
LABEL_6:
    uint64_t v8 = v1[5];
    if (!__OFADD__(v8, 1))
    {
      v1[5] = v8 + 1;
      return;
    }
    __break(1u);
    goto LABEL_35;
  }
}

void sub_100410678(void *a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for AppDelegate();
  [super buildMenuWithBuilder:a1];
  sub_10009E6C4(0, &qword_100714BE8);
  id v3 = [a1 system];
  id v4 = [self mainSystem];
  char v5 = static NSObject.== infix(_:_:)();

  if (v5)
  {
    id v6 = [objc_allocWithZone((Class)DOCKeyCommandController) init];
    [v6 buildWithBuilder:a1];
  }
}

id sub_10041096C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppDelegate();
  return [super dealloc];
}

void sub_1004109B0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v67 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v5 = (char *)&v64 - v4;
  id v6 = [self sharedApplication];
  static Logger.StateStore.getter();
  id v7 = v6;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v69 = v1;
  if (v10)
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v68 = v0;
    uint64_t v12 = v11;
    uint64_t v71 = swift_slowAlloc();
    uint64_t v76 = v71;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v72 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F2D20, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v70 = v12 + 14;
    id v13 = [v7 openSessions];
    sub_10009E6C4(0, (unint64_t *)&unk_10070D320);
    sub_1000B86A8((unint64_t *)&unk_10070BDC0, (unint64_t *)&unk_10070D320);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = Set.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v72 = sub_10009B0E4(v14, v16, &v76);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v0 = v68;
    swift_slowDealloc();

    id v17 = *(void (**)(char *, uint64_t))(v69 + 8);
  }
  else
  {

    id v17 = *(void (**)(char *, uint64_t))(v1 + 8);
  }
  v17(v5, v0);
  id v18 = [v7 connectedScenes];
  sub_10009E6C4(0, &qword_100712FA0);
  sub_1000B86A8((unint64_t *)&qword_100712FA8, &qword_100712FA0);
  uint64_t v19 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100410388(v19, (uint64_t)&v76);
  sub_100410478();
  if (!v20)
  {
LABEL_15:
    sub_10026AD14();

    return;
  }
  id v21 = v20;
  while (1)
  {
    if (![v21 delegate]) {
      goto LABEL_7;
    }
    type metadata accessor for BrowserSceneDelegate();
    uint64_t v23 = swift_dynamicCastClass();
    if (v23)
    {
      uint64_t v24 = *(void **)(v23 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v24) {
        break;
      }
    }
    swift_unknownObjectRelease();
LABEL_7:

    sub_100410478();
    id v21 = v22;
    if (!v22) {
      goto LABEL_15;
    }
  }
  id v65 = v17;
  uint64_t v68 = v0;
  id v25 = v24;
  id v26 = [v25 configuration];

  swift_unknownObjectRelease();
  sub_10026AD14();
  id v64 = v26;
  id v66 = v7;
  id v27 = [v7 openSessions];
  sub_10009E6C4(0, (unint64_t *)&unk_10070D320);
  sub_1000B86A8((unint64_t *)&unk_10070BDC0, (unint64_t *)&unk_10070D320);
  uint64_t v28 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v71 = v28 & 0xC000000000000001;
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t v29 = __CocoaSet.count.getter();
    if (v29) {
      goto LABEL_13;
    }
LABEL_17:
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v54 = v67;
    static Logger.StateStore.getter();
    swift_bridgeObjectRetain_n();
    id v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v55, v56))
    {
      uint64_t v57 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 136315394;
      uint64_t v72 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F2D20, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v57 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v58 = Array.description.getter();
      unint64_t v60 = v59;
      swift_bridgeObjectRelease();
      uint64_t v72 = sub_10009B0E4(v58, v60, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "%s: purging application state excluding openSessionIdentifiers: %s", (uint8_t *)v57, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v65(v54, v68);
    id v61 = [self sharedStore];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unint64_t v63 = v64;
    [v61 purgeApplicationStateExcludingIdentifiers:isa configuration:v64];
  }
  else
  {
    uint64_t v29 = *(void *)(v28 + 16);
    if (!v29) {
      goto LABEL_17;
    }
LABEL_13:
    uint64_t v75 = _swiftEmptyArrayStorage;
    sub_100059E2C(0, v29 & ~(v29 >> 63), 0);
    if (v71)
    {
      uint64_t v30 = __CocoaSet.startIndex.getter();
      unsigned __int8 v32 = 1;
    }
    else
    {
      uint64_t v30 = sub_10029D4FC(v28);
      unsigned __int8 v32 = v33 & 1;
    }
    uint64_t v72 = v30;
    uint64_t v73 = v31;
    unsigned __int8 v74 = v32;
    if ((v29 & 0x8000000000000000) == 0)
    {
      uint64_t v34 = v28 & 0xFFFFFFFFFFFFFF8;
      if (v28 < 0) {
        uint64_t v34 = v28;
      }
      uint64_t v70 = v34;
      do
      {
        while (1)
        {
          uint64_t v40 = v72;
          uint64_t v41 = v73;
          uint64_t v42 = v74;
          sub_10029D784(v72, v73, v74, v28);
          uint64_t v44 = v43;
          id v45 = [v43 persistentIdentifier];
          uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v48 = v47;

          id v49 = v75;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100059E2C(0, v49[2] + 1, 1);
            id v49 = v75;
          }
          unint64_t v51 = v49[2];
          unint64_t v50 = v49[3];
          if (v51 >= v50 >> 1)
          {
            sub_100059E2C(v50 > 1, v51 + 1, 1);
            id v49 = v75;
          }
          v49[2] = v51 + 1;
          unint64_t v52 = &v49[2 * v51];
          v52[4] = v46;
          v52[5] = v48;
          if (v71) {
            break;
          }
          uint64_t v35 = sub_100544444(v40, v41, v42, v28);
          uint64_t v37 = v36;
          char v39 = v38;
          sub_1000D3250(v40, v41, v42);
          uint64_t v72 = v35;
          uint64_t v73 = v37;
          unsigned __int8 v74 = v39 & 1;
          if (!--v29) {
            goto LABEL_33;
          }
        }
        if ((v42 & 1) == 0) {
          goto LABEL_39;
        }
        if (__CocoaSet.Index.handleBitPattern.getter()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_1000CBE70((uint64_t *)&unk_100714BD0);
        uint64_t v53 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
        __CocoaSet.formIndex(after:isUnique:)();
        v53(&v76, 0);
        --v29;
      }
      while (v29);
LABEL_33:
      sub_1000D3250(v72, v73, v74);
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    __break(1u);
LABEL_39:
    __break(1u);
  }
}

void sub_100411320(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v68 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)&v65 - v8;
  static Logger.StateStore.getter();
  swift_bridgeObjectRetain_n();
  BOOL v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v69 = v5;
    uint64_t v70 = v4;
    uint64_t v77 = v13;
    *(_DWORD *)uint64_t v12 = 136315394;
    unint64_t v72 = (unint64_t)a1;
    uint64_t v73 = sub_10009B0E4(0xD000000000000027, 0x80000001005F2CF0, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v71 = v12 + 14;
    sub_10009E6C4(0, (unint64_t *)&unk_10070D320);
    sub_1000B86A8((unint64_t *)&unk_10070BDC0, (unint64_t *)&unk_10070D320);
    swift_bridgeObjectRetain();
    uint64_t v14 = Set.description.getter();
    unint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = v14;
    a1 = (void *)v72;
    uint64_t v73 = sub_10009B0E4(v17, v16, &v77);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    uint64_t v5 = v69;
    uint64_t v4 = v70;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v9, v4);
  id v19 = [a1 connectedScenes];
  sub_10009E6C4(0, &qword_100712FA0);
  sub_1000B86A8((unint64_t *)&qword_100712FA8, &qword_100712FA0);
  uint64_t v20 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100410388(v20, (uint64_t)&v77);
  sub_100410478();
  if (!v21)
  {
LABEL_13:
    sub_10026AD14();
    return;
  }
  id v22 = v21;
  while (1)
  {
    if (![v22 delegate]) {
      goto LABEL_7;
    }
    type metadata accessor for BrowserSceneDelegate();
    uint64_t v24 = swift_dynamicCastClass();
    if (v24)
    {
      id v25 = *(void **)(v24 + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
      if (v25) {
        break;
      }
    }
    swift_unknownObjectRelease();
LABEL_7:

    sub_100410478();
    id v22 = v23;
    if (!v23) {
      goto LABEL_13;
    }
  }
  id v67 = v18;
  id v26 = v25;
  id v27 = [v26 configuration];

  swift_unknownObjectRelease();
  sub_10026AD14();
  unint64_t v72 = a2 & 0xC000000000000001;
  uint64_t v69 = v5;
  uint64_t v70 = v4;
  id v66 = v27;
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v28 = v27;
    uint64_t v29 = __CocoaSet.count.getter();
  }
  else
  {
    uint64_t v29 = *(void *)(a2 + 16);
    id v30 = v27;
  }
  if (!v29) {
    goto LABEL_34;
  }
  uint64_t v76 = _swiftEmptyArrayStorage;
  sub_100059E2C(0, v29 & ~(v29 >> 63), 0);
  if (v72)
  {
    uint64_t v31 = __CocoaSet.startIndex.getter();
    unsigned __int8 v33 = 1;
  }
  else
  {
    uint64_t v31 = sub_10029D4FC(a2);
    unsigned __int8 v33 = v34 & 1;
  }
  uint64_t v73 = v31;
  uint64_t v74 = v32;
  unsigned __int8 v75 = v33;
  if (v29 < 0)
  {
    __break(1u);
LABEL_39:
    __break(1u);
  }
  else
  {
    uint64_t v35 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0) {
      uint64_t v35 = a2;
    }
    uint64_t v71 = v35;
    do
    {
      while (1)
      {
        uint64_t v41 = v73;
        uint64_t v42 = v74;
        uint64_t v43 = v75;
        sub_10029D784(v73, v74, v75, a2);
        id v45 = v44;
        id v46 = [v44 persistentIdentifier];
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v49 = v48;

        unint64_t v50 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100059E2C(0, v50[2] + 1, 1);
          unint64_t v50 = v76;
        }
        unint64_t v52 = v50[2];
        unint64_t v51 = v50[3];
        if (v52 >= v51 >> 1)
        {
          sub_100059E2C(v51 > 1, v52 + 1, 1);
          unint64_t v50 = v76;
        }
        v50[2] = v52 + 1;
        uint64_t v53 = &v50[2 * v52];
        v53[4] = v47;
        v53[5] = v49;
        if (v72) {
          break;
        }
        uint64_t v36 = sub_100544444(v41, v42, v43, a2);
        uint64_t v38 = v37;
        char v40 = v39;
        sub_1000D3250(v41, v42, v43);
        uint64_t v73 = v36;
        uint64_t v74 = v38;
        unsigned __int8 v75 = v40 & 1;
        if (!--v29) {
          goto LABEL_33;
        }
      }
      if ((v43 & 1) == 0) {
        goto LABEL_39;
      }
      if (__CocoaSet.Index.handleBitPattern.getter()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_1000CBE70((uint64_t *)&unk_100714BD0);
      uint64_t v54 = (void (*)(uint64_t *, void))Set.Index._asCocoa.modify();
      __CocoaSet.formIndex(after:isUnique:)();
      v54(&v77, 0);
      --v29;
    }
    while (v29);
LABEL_33:
    sub_1000D3250(v73, v74, v75);
LABEL_34:
    id v55 = v68;
    static Logger.StateStore.getter();
    swift_bridgeObjectRetain_n();
    os_log_type_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315394;
      uint64_t v73 = sub_10009B0E4(0xD000000000000027, 0x80000001005F2CF0, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v58 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = Array.description.getter();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      uint64_t v73 = sub_10009B0E4(v59, v61, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s: purging application state for sessionIdentifiers: %s", (uint8_t *)v58, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v67(v55, v70);
    id v62 = [self sharedStore];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v64 = v66;
    [v62 purgeApplicationStateForIdentifiers:isa configuration:v66];
  }
}

void sub_100411BA4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

void sub_100411C10(uint64_t *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  unint64_t v5 = (unint64_t)*v3 >> 62;
  if (v5)
  {
LABEL_40:
    swift_bridgeObjectRetain_n();
    char v34 = a1;
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
LABEL_41:
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v6 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v7 = a1;
  if (!v6) {
    goto LABEL_41;
  }
LABEL_3:
  unint64_t v35 = v5;
  uint64_t v36 = (void *)v1;
  uint64_t v37 = a1;
  unint64_t v5 = 0;
  a1 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      uint64_t v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v8 = (char *)*(id *)(v4 + 8 * v5 + 32);
    }
    os_log_type_t v9 = v8;
    BOOL v10 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    os_log_type_t v11 = *v10;
    if (!*v10) {
      goto LABEL_19;
    }
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12) {
      goto LABEL_19;
    }
    uint64_t v13 = v12;
    uint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v14) {
      goto LABEL_48;
    }
    uint64_t v15 = v14 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v15 + 16))
    {
      uint64_t v1 = *(void *)(*(void *)v15 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      id v16 = v11;
      swift_unknownObjectRetain();
LABEL_13:
      id v18 = [*(id *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) identifier];
      id v19 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v18 node:v1];
      swift_unknownObjectRelease();

      goto LABEL_14;
    }
    uint64_t v1 = *(void *)(v15 + 8);
    id v17 = v11;
    swift_unknownObjectRetain();
    if (v1) {
      goto LABEL_13;
    }
    id v21 = *(void **)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
    if (v21) {
      break;
    }

    os_log_type_t v9 = v17;
LABEL_19:

LABEL_20:
    unint64_t v22 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    ++v5;
    if (v22 == v6)
    {
      swift_bridgeObjectRelease();

      return;
    }
  }
  id v19 = v21;
LABEL_14:
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  uint64_t v20 = v37;
  uint64_t v1 = static NSObject.== infix(_:_:)();

  if ((v1 & 1) == 0) {
    goto LABEL_20;
  }

  if (v35)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t v24 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v1 = v23 - v24;
  if (__OFSUB__(v23, v24))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  if (v1 < 1) {
    return;
  }
  id v25 = [v36 collectionView];
  if (!v25) {
    goto LABEL_49;
  }
  id v26 = v25;
  a1 = (uint64_t *)[v25 numberOfItemsInSection:0];

  id v27 = [v36 collectionView];
  if (v27)
  {
    id v28 = v27;
    id v29 = [v27 visibleCells];

    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v5 >> 62))
    {
      uint64_t v30 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_33;
      }
LABEL_45:
      swift_bridgeObjectRelease_n();
      return;
    }
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    if (!v30) {
      goto LABEL_45;
    }
LABEL_33:
    if (v30 >= 1)
    {
      uint64_t v31 = 0;
      do
      {
        if ((v5 & 0xC000000000000001) != 0) {
          id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v32 = *(id *)(v5 + 8 * v31 + 32);
        }
        unsigned __int8 v33 = v32;
        ++v31;
        uint64_t v38 = v32;
        sub_100414FDC(&v38, v36, (char *)a1, v1);
      }
      while (v30 != v31);
      goto LABEL_45;
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_100412088(void *a1, int a2, void (*a3)(void), uint64_t a4)
{
  unint64_t v5 = v4;
  uint64_t v39 = a4;
  int v34 = a2;
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v8 - 8);
  BOOL v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v41 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v37 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_100714E28);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v35 = [v5 doc_hasAppearedOrIsAppearing];
  char v40 = v5;
  uint64_t v16 = (uint64_t)&v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  swift_beginAccess();
  uint64_t v17 = type metadata accessor for ScrollToItem(0);
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    id v19 = *(void (**)(void))(v16 + *(int *)(v17 + 24));
    if (v19)
    {
      swift_retain();
      v19(0);
      sub_1000A7258((uint64_t)v19);
    }
  }
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v20(v15, 1, 1, v17);
  swift_beginAccess();
  sub_10008C318((uint64_t)v15, v16, &qword_100714E28);
  uint64_t result = swift_endAccess();
  if (a1)
  {
    uint64_t v36 = v11;
    uint64_t v38 = a3;
    unint64_t v22 = (unint64_t *)&v40[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    unint64_t v23 = *v22;
    swift_bridgeObjectRetain();
    id v24 = a1;
    sub_1001B5E08((uint64_t)v24, v23);
    char v26 = v25;
    swift_bridgeObjectRelease();
    if (v26)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v10, 1, 1, v36);
    }
    else
    {
      IndexPath.init(item:section:)();
      uint64_t v27 = v41;
      uint64_t v28 = v36;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v10, 0, 1, v36);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v28) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v37, v10, v28);
        uint64_t v29 = v39;
        if (v35)
        {
          sub_1000C0640((uint64_t)v38);
          uint64_t v30 = v38;
          uint64_t v31 = v29;
        }
        else
        {
          uint64_t v30 = 0;
          uint64_t v31 = 0;
        }
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v15, v37, v28);
        v15[*(int *)(v17 + 20)] = v34 & 1;
        id v32 = &v15[*(int *)(v17 + 24)];
        *(void *)id v32 = v30;
        *((void *)v32 + 1) = v31;
        v20(v15, 0, 1, v17);
        swift_beginAccess();
        sub_1000C0640((uint64_t)v30);
        sub_10008C318((uint64_t)v15, v16, &qword_100714E28);
        swift_endAccess();
        if (*(void *)&v40[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs])
        {
          sub_100418738(1);
          uint64_t v28 = v36;
        }
        if (v38) {
          char v33 = v35;
        }
        else {
          char v33 = 1;
        }
        if ((v33 & 1) == 0)
        {
          v38(0);
          uint64_t v28 = v36;
        }

        sub_1000A7258((uint64_t)v30);
        return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v37, v28);
      }
    }

    uint64_t result = sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_1007069A0);
    a3 = v38;
  }
  if (a3) {
    return ((uint64_t (*)(void))a3)(0);
  }
  return result;
}

uint64_t sub_100412574(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(a2 + 16))(a2, a1 & 1);
}

void sub_10041258C(char a1, char a2)
{
  uint64_t v3 = v2;
  v12.receiver = v3;
  v12.super_class = (Class)swift_getObjectType();
  [super setEditing:a1 & 1 animated:a2 & 1];
  uint64_t v6 = &v3[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  unint64_t v7 = *(void *)v6;
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t v9 = v8 - 1;
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v10 = *(id *)(v7 + 8 * v9 + 32);
LABEL_8:
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    [v11 setEditing:a1 & 1 animated:a2 & 1];

    return;
  }
  __break(1u);
}

uint64_t sub_1004126CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a3, a1, a2);
}

uint64_t sub_1004126E8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

uint64_t sub_100412700(double a1, double a2, double a3, double a4)
{
  id v9 = [v4 collectionView];
  if (!v9) {
    return 1;
  }
  id v10 = v9;
  [v9 bounds];
  double v12 = v11;
  double v14 = v13;

  if (v12 != a3 || v14 != a4) {
    return 1;
  }
  v17.receiver = v4;
  v17.super_class = (Class)type metadata accessor for DOCColumnLayout();
  return (uint64_t)[super shouldInvalidateLayoutForBoundsChange:a1, a2, a3, a4];
}

id sub_100412890()
{
  return sub_1004129C8(0, type metadata accessor for DOCColumnLayout);
}

uint64_t type metadata accessor for DOCColumnLayout()
{
  return self;
}

id sub_100412960(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  v7.receiver = a1;
  v7.super_class = (Class)a5(a4);
  return [super initWithCoder:a3];
}

id sub_1004129B0(uint64_t a1)
{
  return sub_1004129C8(a1, type metadata accessor for DOCColumnViewControllerCollectionView);
}

id sub_1004129C8(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCColumnViewControllerCollectionView()
{
  return self;
}

uint64_t sub_100412A24()
{
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  type metadata accessor for IndexPath();
  sub_10041D754(qword_1007097E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  v1._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0x74616D696E61202CLL;
  v2._object = (void *)0xEB000000003D6465;
  String.append(_:)(v2);
  uint64_t v3 = type metadata accessor for ScrollToItem(0);
  BOOL v4 = *(unsigned char *)(v0 + *(int *)(v3 + 20)) == 0;
  if (*(unsigned char *)(v0 + *(int *)(v3 + 20))) {
    uint64_t v5 = 1702195828;
  }
  else {
    uint64_t v5 = 0x65736C6166;
  }
  if (v4) {
    unint64_t v6 = 0xE500000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  unint64_t v7 = v6;
  String.append(_:)(*(Swift::String *)&v5);
  swift_bridgeObjectRelease();
  return 0x7461507865646E69;
}

uint64_t sub_100412C5C(unint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  uint64_t v7 = *v6;
  swift_bridgeObjectRetain();
  sub_100412F6C(a1);
  *unint64_t v6 = a1;
  swift_bridgeObjectRelease();
  unint64_t v8 = swift_bridgeObjectRetain();
  LOBYTE(a1) = sub_10028ED04(v8, v7);
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    uint64_t v30 = v7;
    uint64_t v31 = v1;
    uint64_t v29 = v6;
    uint64_t v9 = *v6;
    if ((unint64_t)*v6 >> 62) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v11 = 0;
      uint64_t v32 = v9 + 32;
      while (1)
      {
        double v14 = (v9 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)(v32 + 8 * v11);
        double v13 = v14;
        if (__OFADD__(v11++, 1)) {
          break;
        }
        uint64_t v16 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        objc_super v17 = *v16;
        if (v17)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v18 = swift_dynamicCastClass();
          if (v18)
          {
            uint64_t v19 = v18;
            uint64_t v20 = (uint64_t *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
            swift_beginAccess();
            uint64_t v21 = *v20;
            *uint64_t v20 = 2;
            if (v21 != 2)
            {
              uint64_t v22 = v19 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
              swift_beginAccess();
              sub_10041D864(v22, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
              uint64_t v23 = *(void *)(*(void *)v5 + 16);
              if (v23)
              {
                id v24 = (uint64_t *)(*(void *)v5 + 64);
                do
                {
                  uint64_t v25 = *v24;
                  v24 += 5;
                  *(unsigned char *)(v25 + 24) = *(unsigned char *)(v25 + 25);
                  --v23;
                }
                while (v23);
              }
              id v12 = v17;
              sub_10041D79C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
              sub_10001E85C();

              double v13 = v12;
            }
          }
        }

        if (v11 == v10) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain_n();
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    char v26 = v31;
    if (objc_msgSend(v31, "isViewLoaded", v29, v30))
    {
      uint64_t v27 = swift_bridgeObjectRetain();
      sub_100413804(v27);
      swift_bridgeObjectRelease();
    }
    else
    {
      v26[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
    }
  }
  return swift_bridgeObjectRelease();
}

void sub_100412F6C(unint64_t a1)
{
  uint64_t v3 = (char **)type metadata accessor for Logger();
  uint64_t v4 = (void (**)(void, void))*(v3 - 1);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (void *)((char *)v49 - v9);
  __chkstk_darwin(v8);
  uint64_t v12 = (uint64_t)v49 - v11;
  double v13 = (void *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v14 = swift_bridgeObjectRetain();
  unsigned __int8 v15 = sub_10028ED04(v14, a1);
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    uint64_t v16 = *v13;
    if (*v13 >> 62)
    {
LABEL_24:
      swift_bridgeObjectRetain_n();
      uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v57 = (uint64_t)v7;
      if (v17)
      {
LABEL_4:
        unint64_t v52 = (uint64_t *)v12;
        uint64_t v53 = (void (*)(uint64_t *, char **))a1;
        unint64_t v51 = v10;
        id v55 = v4;
        os_log_type_t v56 = v3;
        uint64_t v54 = v13;
        a1 = v16 & 0xC000000000000001;
        uint64_t v12 = 4;
        uint64_t v10 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
        uint64_t v3 = &selRef_cellForItemAtIndexPath_;
        while (1)
        {
          double v13 = (void *)(v12 - 4);
          if (a1) {
            uint64_t v18 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v18 = (char *)*(id *)(v16 + 8 * v12);
          }
          uint64_t v4 = (void (**)(void, void))v18;
          uint64_t v7 = (char *)(v12 - 3);
          if (__OFADD__(v13, 1))
          {
            __break(1u);
            goto LABEL_24;
          }
          uint64_t v19 = &v18[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          if (*(void *)v19)
          {
            type metadata accessor for DOCItemCollectionViewController(0);
            uint64_t v20 = (void *)swift_dynamicCastClass();
            if (v20)
            {
              if ([v20 isFirstResponder]) {
                break;
              }
            }
          }

          ++v12;
          if (v7 == (char *)v17)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v27 = 0;
            double v13 = v54;
            uint64_t v4 = v55;
            uint64_t v3 = v56;
            uint64_t v7 = (char *)v57;
            goto LABEL_26;
          }
        }
        uint64_t v21 = v52;
        static Logger.UI.getter();
        uint64_t v22 = v4;
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = swift_slowAlloc();
          unint64_t v50 = (void *)swift_slowAlloc();
          unint64_t v59 = swift_slowAlloc();
          *(_DWORD *)uint64_t v25 = 136315394;
          uint64_t v58 = sub_10009B0E4(0xD000000000000014, 0x80000001005F2EC0, (uint64_t *)&v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v25 + 12) = 2112;
          v49[1] = v25 + 14;
          uint64_t v58 = (uint64_t)v22;
          char v26 = v22;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v50 = v22;

          _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s willSet found existing first responder: %@", (uint8_t *)v25, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v4 = v55;
        uint64_t v3 = v56;
        uint64_t v28 = (void (*)(uint64_t *, char **))v55[1];
        v28(v21, v56);
        swift_bridgeObjectRelease_n();
        uint64_t v7 = (char *)v57;
        unint64_t v29 = (unint64_t)v53;
        uint64_t v30 = v22;
        char v31 = sub_10010942C((uint64_t)v30, v29);
        double v13 = v54;
        uint64_t v27 = v22;
        if (v31)
        {

          goto LABEL_26;
        }
        uint64_t v32 = v51;
        static Logger.UI.getter();
        char v33 = v30;
        int v34 = Logger.logObject.getter();
        os_log_type_t v35 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = swift_slowAlloc();
          unint64_t v52 = (uint64_t *)swift_slowAlloc();
          uint64_t v57 = swift_slowAlloc();
          unint64_t v59 = v57;
          *(_DWORD *)uint64_t v36 = 136315394;
          uint64_t v58 = sub_10009B0E4(0xD000000000000014, 0x80000001005F2EC0, (uint64_t *)&v59);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v36 + 12) = 2112;
          uint64_t v53 = v28;
          uint64_t v58 = (uint64_t)v33;
          uint64_t v37 = v33;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *unint64_t v52 = (uint64_t)v27;

          double v13 = v54;
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s willSet new containers do not contain current responder, resigning from: %@", (uint8_t *)v36, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v53(v32, v56);
        }
        else
        {

          v28(v32, v56);
        }
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
        *(void *)(inited + 32) = v33;
        unint64_t v59 = inited;
        specialized Array._endMutation()();
        unint64_t v39 = v59;
        char v40 = v33;
        sub_10041D040(v39);
        swift_bridgeObjectRelease();

LABEL_29:
        uint64_t v44 = *v13;
        if (*v13 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
          if (v45) {
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v45 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          if (v45)
          {
LABEL_31:
            if (v45 < 1)
            {
              __break(1u);
              return;
            }
            for (uint64_t i = 0; i != v45; ++i)
            {
              if ((v44 & 0xC000000000000001) != 0) {
                id v47 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v47 = *(id *)(v44 + 8 * i + 32);
              }
              uint64_t v48 = v47;
              sub_10033681C(0);
            }
          }
        }
        swift_bridgeObjectRelease_n();

        return;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      uint64_t v57 = (uint64_t)v7;
      if (v17) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v27 = 0;
LABEL_26:
    static Logger.UI.getter();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      unint64_t v59 = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      uint64_t v58 = sub_10009B0E4(0xD000000000000014, 0x80000001005F2EC0, (uint64_t *)&v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s willSet new containers contain current responder. Do not resign responder", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (**)(uint64_t, char **))v4)[1](v57, v3);
    }
    else
    {

      ((void (**)(char *, char **))v4)[1](v7, v3);
    }
    goto LABEL_29;
  }
}

uint64_t sub_100413804(uint64_t a1)
{
  unint64_t v64 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v64);
  uint64_t v3 = (void *)sub_1000CBE70(&qword_100714E18);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v58 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v9 = (uint64_t)&v53 - v8;
  uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource];
  if (v10)
  {
    uint64_t v55 = v7;
    unint64_t v59 = v1;
    v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
    id v56 = v10;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
    if (NSDiffableDataSourceSnapshot.numberOfSections.getter() == 1)
    {
      uint64_t v65 = 0;
      unint64_t v11 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
      unint64_t v12 = v11;
      if (v11 >> 62)
      {
        if (_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v12 & 0xC000000000000001) != 0) {
          goto LABEL_96;
        }
        if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_98:
          __break(1u);
          JUMPOUT(0x10041417CLL);
        }
        for (id i = *(id *)(v12 + 32); ; id i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)())
        {
          id v57 = i;
          swift_bridgeObjectRelease();
          if ((unint64_t)a1 >> 62)
          {
LABEL_9:
            swift_bridgeObjectRetain();
            uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v54 = v9;
            if (!v14) {
              goto LABEL_10;
            }
          }
          else
          {
LABEL_14:
            uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            uint64_t v54 = v9;
            if (!v15)
            {
LABEL_10:
              swift_bridgeObjectRelease();
              uint64_t v9 = v57 == 0;
              goto LABEL_25;
            }
          }
          if ((a1 & 0xC000000000000001) != 0)
          {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_95;
            }
            id v16 = *(id *)(a1 + 32);
          }
          uint64_t v17 = v16;
          swift_bridgeObjectRelease();
          if (!v57)
          {
            if (!v17)
            {
              uint64_t v9 = 1;
              goto LABEL_25;
            }

LABEL_23:
            uint64_t v9 = 0;
            goto LABEL_25;
          }
          if (!v17) {
            goto LABEL_23;
          }
          type metadata accessor for DOCBrowserContainerController();
          id v18 = v57;
          uint64_t v9 = static NSObject.== infix(_:_:)();

LABEL_25:
          type metadata accessor for DOCBrowserContainerController();
          sub_10041D754(&qword_100714E20, (void (*)(uint64_t))type metadata accessor for DOCBrowserContainerController);
          uint64_t v19 = v58;
          NSDiffableDataSourceSnapshot.init()();
          NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100689C98);
          uint64_t v65 = 0;
          char v66 = 1;
          uint64_t v53 = v3;
          uint64_t v20 = NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
          __chkstk_darwin(v20);
          *((unsigned char *)&v53 - 32) = (v9 & 1) == 0;
          *(&v53 - 3) = v56;
          *(&v53 - 2) = v19;
          *(&v53 - 1) = (void *)a1;
          uint64_t v21 = v59;
          UIViewController.doc_performBlock(allowingAnimations:block:)();
          sub_100414694();
          sub_100415894();
          id v22 = [v21 collectionView];
          if (!v22) {
            goto LABEL_41;
          }
          uint64_t v3 = v22;
          id v23 = [v22 preparedCells];
          if (!v23) {
            goto LABEL_98;
          }
          os_log_type_t v24 = v23;
          sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
          unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          id v63 = v3;
          if (v25 >> 62)
          {
            swift_bridgeObjectRetain();
            a1 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (!a1) {
              goto LABEL_40;
            }
          }
          else
          {
            a1 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (!a1) {
              goto LABEL_40;
            }
          }
          if (a1 >= 1)
          {
            uint64_t v26 = 0;
            do
            {
              if ((v25 & 0xC000000000000001) != 0) {
                id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v27 = *(id *)(v25 + 8 * v26 + 32);
              }
              uint64_t v28 = v27;
              type metadata accessor for DOCColumnViewCell();
              uint64_t v29 = swift_dynamicCastClass();
              if (v29)
              {
                uint64_t v30 = (id *)(v29 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
                swift_beginAccess();
                if (*v30)
                {
                  id v31 = *v30;
                  UIViewController.traitOverrides.getter();
                  UIMutableTraits.horizontalSizeClass.setter();
                  UIViewController.traitOverrides.setter();

                  uint64_t v28 = v31;
                }
              }
              ++v26;
            }
            while (a1 != v26);
LABEL_40:

            swift_bridgeObjectRelease();
LABEL_41:
            uint64_t v32 = v59;
            sub_100415B50();
            sub_100415EAC();
            sub_100416434();
            char v33 = (unint64_t *)&v32[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
            swift_beginAccess();
            unint64_t v64 = *v33;
            if (v64 >> 62) {
              goto LABEL_91;
            }
            id v34 = *(id *)((v64 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v34) {
              goto LABEL_92;
            }
LABEL_43:
            unint64_t v35 = 0;
            unint64_t v36 = v64 & 0xC000000000000001;
            unint64_t v60 = v64 + 32;
            uint64_t v61 = v64 & 0xFFFFFFFFFFFFFF8;
            unint64_t v62 = v64 & 0xC000000000000001;
            id v63 = v34;
            while (1)
            {
              if (v36)
              {
                id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                if (v35 >= *(void *)(v61 + 16)) {
                  goto LABEL_89;
                }
                id v37 = *(id *)(v60 + 8 * v35);
              }
              uint64_t v38 = v37;
              if (__OFADD__(v35++, 1))
              {
                __break(1u);
LABEL_89:
                __break(1u);
                goto LABEL_90;
              }
              char v40 = *((unsigned char *)v37 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding);
              *((unsigned char *)v37 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding) = 0;
              if (v40)
              {
                id v41 = [v37 childViewControllers];
                sub_10009E6C4(0, (unint64_t *)&qword_100707710);
                unint64_t v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

                if (v42 >> 62)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v43 = _CocoaArrayWrapper.endIndex.getter();
                  if (v43)
                  {
LABEL_54:
                    uint64_t v44 = v43 - 1;
                    if (v43 >= 1)
                    {
                      uint64_t v45 = 0;
                      if ((v42 & 0xC000000000000001) == 0)
                      {
LABEL_59:
                        id v46 = *(id *)(v42 + 8 * v45 + 32);
                        goto LABEL_60;
                      }
                      while (1)
                      {
                        id v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_60:
                        id v47 = v46;
                        unsigned int v48 = [v46 _appearState];
                        if (v48 != [v38 _appearState])
                        {
                          unsigned int v49 = [v47 _appearState];
                          unsigned int v50 = [v38 _appearState];
                          switch(v49)
                          {
                            case 0u:
                              if (v50 == 2)
                              {
                                [v47 beginAppearanceTransition:1 animated:0];
                                goto LABEL_83;
                              }
                              if (v50 == 1) {
                                goto LABEL_76;
                              }
                              break;
                            case 1u:
                              switch(v50)
                              {
                                case 0u:
                                  [v47 endAppearanceTransition];
                                  [v47 beginAppearanceTransition:0 animated:0];
                                  goto LABEL_83;
                                case 3u:
                                  [v47 endAppearanceTransition];
                                  goto LABEL_81;
                                case 2u:
                                  goto LABEL_83;
                              }
                              break;
                            case 2u:
                              if (v50 == 3)
                              {
LABEL_81:
                                [v47 beginAppearanceTransition:0 animated:0];
                              }
                              else if (!v50)
                              {
                                [v47 beginAppearanceTransition:0 animated:0];
                                goto LABEL_83;
                              }
                              break;
                            case 3u:
                              switch(v50)
                              {
                                case 0u:
                                  goto LABEL_83;
                                case 2u:
                                  [v47 endAppearanceTransition];
                                  [v47 beginAppearanceTransition:1 animated:0];
LABEL_83:
                                  [v47 endAppearanceTransition];
                                  break;
                                case 1u:
                                  [v47 endAppearanceTransition];
LABEL_76:
                                  [v47 beginAppearanceTransition:1 animated:0];
                                  break;
                              }
                              break;
                            default:
                              break;
                          }
                        }

                        if (v44 == v45) {
                          goto LABEL_44;
                        }
                        ++v45;
                        if ((v42 & 0xC000000000000001) == 0) {
                          goto LABEL_59;
                        }
                      }
                    }
LABEL_90:
                    __break(1u);
LABEL_91:
                    swift_bridgeObjectRetain();
                    id v34 = (id)_CocoaArrayWrapper.endIndex.getter();
                    if (!v34)
                    {
LABEL_92:
                      swift_bridgeObjectRelease();
                      sub_100416838();
                      sub_100416BA8();

                      unint64_t v51 = *(void (**)(uint64_t, void *))(v55 + 8);
                      unint64_t v52 = v53;
                      v51(v54, v53);
                      return ((uint64_t (*)(char *, void *))v51)(v58, v52);
                    }
                    goto LABEL_43;
                  }
                }
                else
                {
                  uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  swift_bridgeObjectRetain();
                  if (v43) {
                    goto LABEL_54;
                  }
                }
LABEL_44:
                swift_bridgeObjectRelease_n();
                unint64_t v36 = v62;
                id v34 = v63;
              }

              if ((id)v35 == v34) {
                goto LABEL_92;
              }
            }
          }
LABEL_95:
          __break(1u);
LABEL_96:
          ;
        }
      }
      swift_bridgeObjectRelease();
    }
    id v57 = 0;
    if (!((unint64_t)a1 >> 62)) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_10041418C()
{
  return sub_1004141C4((unint64_t)&OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems);
}

uint64_t sub_1004141A8()
{
  return sub_1004141C4((unint64_t)&OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems, &OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems);
}

uint64_t sub_1004141C4(unint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = (uint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  uint64_t v31 = *v5;
  if ((unint64_t)*v5 >> 62) {
    goto LABEL_46;
  }
  uint64_t v6 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 0;
    uint64_t v32 = *(void *)a1;
    while (1)
    {
      uint64_t v8 = (v31 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(v31 + 32 + 8 * v7);
      uint64_t v9 = v8;
      BOOL v10 = __OFADD__(v7, 1);
      uint64_t v11 = v7 + 1;
      if (v10) {
        break;
      }
      uint64_t v37 = *a2;
      *(void *)&v8[*a2] = *(void *)(v33 + v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v12 = [v9 childViewControllers];
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      a1 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)&long long v38 = _swiftEmptyArrayStorage;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v35 = v11;
        if (!v13)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v13 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v35 = v11;
        if (!v13) {
          goto LABEL_24;
        }
      }
      if (v13 < 1) {
        goto LABEL_44;
      }
      for (uint64_t i = 0; i != v13; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(a1 + 8 * i + 32);
        }
        id v16 = v15;
        type metadata accessor for DOCBrowserContainedViewController();
        if (swift_dynamicCastClass())
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v17 = v38;
LABEL_25:
      swift_bridgeObjectRelease();
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
        if (!v18) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v18) {
          goto LABEL_4;
        }
      }
      if (v18 < 1) {
        goto LABEL_45;
      }
      for (uint64_t j = 0; j != v18; ++j)
      {
        if ((v17 & 0xC000000000000001) != 0) {
          uint64_t v20 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v20 = (char *)*(id *)(v17 + 8 * j + 32);
        }
        a1 = (unint64_t)v20;
        *(void *)&v20[*a3] = *(void *)&v9[v37];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v21 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation) = 0;
        id v22 = [(id)a1 viewIfLoaded];
        id v23 = [v22 window];

        if (v23)
        {
          int v24 = *(unsigned __int8 *)(a1 + v21);
          if (v24 != 2)
          {
            sub_1000A6AA0();
            char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
            swift_release();
            if (valid & 1) == 0 && (objc_msgSend((id)a1, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              id v26 = (id)a1;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v27 = v24 & 1;
                uint64_t v28 = *((void *)&v39 + 1);
                uint64_t v29 = v40;
                sub_1000A6B78(&v38, *((uint64_t *)&v39 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 8))(v27, v28, v29);
                sub_10009B1B8((uint64_t)&v38);
              }
              else
              {
                uint64_t v40 = 0;
                long long v38 = 0u;
                long long v39 = 0u;
                sub_1000CBBA4((uint64_t)&v38, &qword_100714E40);
              }
              *(unsigned char *)(a1 + v21) = 2;
            }
          }
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      uint64_t v7 = v35;
      if (v35 == v6) {
        return swift_bridgeObjectRelease_n();
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain_n();
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_100414694()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  uint64_t v54 = v1;
  uint64_t v56 = *v1;
  if ((unint64_t)*v1 >> 62) {
    goto LABEL_46;
  }
  uint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 0;
    uint64_t v59 = OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems;
    uint64_t v58 = v2;
    while (1)
    {
      uint64_t v4 = (v56 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(v56 + 32 + 8 * v3);
      uint64_t v5 = v4;
      BOOL v6 = __OFADD__(v3, 1);
      uint64_t v7 = v3 + 1;
      if (v6) {
        break;
      }
      uint64_t v65 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems;
      *(void *)&v4[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalLeadingNavigationBarButtonItems] = *(void *)(v62 + v59);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v8 = [v5 childViewControllers];
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)&long long v67 = _swiftEmptyArrayStorage;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v63 = v7;
        if (!v10)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        uint64_t v63 = v7;
        if (!v10) {
          goto LABEL_24;
        }
      }
      if (v10 < 1) {
        goto LABEL_44;
      }
      for (uint64_t i = 0; i != v10; ++i)
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v12 = *(id *)(v9 + 8 * i + 32);
        }
        uint64_t v13 = v12;
        type metadata accessor for DOCBrowserContainedViewController();
        if (swift_dynamicCastClass())
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v14 = v67;
LABEL_25:
      swift_bridgeObjectRelease();
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
        if (!v15) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v15) {
          goto LABEL_4;
        }
      }
      if (v15 < 1) {
        goto LABEL_45;
      }
      for (uint64_t j = 0; j != v15; ++j)
      {
        if ((v14 & 0xC000000000000001) != 0) {
          unint64_t v17 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unint64_t v17 = (char *)*(id *)(v14 + 8 * j + 32);
        }
        uint64_t v18 = v17;
        *(void *)&v17[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalLeadingNavigationBarButtonItems] = *(void *)&v5[v65];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v19 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v18[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v20 = [v18 viewIfLoaded];
        id v21 = [v20 window];

        if (v21)
        {
          int v22 = v18[v19];
          if (v22 != 2)
          {
            sub_1000A6AA0();
            char valid = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
            swift_release();
            if (valid & 1) == 0 && (objc_msgSend(v18, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              int v24 = v18;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v25 = v22 & 1;
                uint64_t v27 = *((void *)&v68 + 1);
                uint64_t v26 = v69;
                sub_1000A6B78(&v67, *((uint64_t *)&v68 + 1));
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 8))(v25, v27, v26);
                sub_10009B1B8((uint64_t)&v67);
              }
              else
              {
                uint64_t v69 = 0;
                long long v67 = 0u;
                long long v68 = 0u;
                sub_1000CBBA4((uint64_t)&v67, &qword_100714E40);
              }
              v18[v19] = 2;
            }
          }
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

      uint64_t v3 = v63;
      if (v63 == v58) {
        goto LABEL_47;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain_n();
  }
LABEL_47:
  swift_bridgeObjectRelease_n();
  uint64_t v55 = *v54;
  if ((unint64_t)*v54 >> 62) {
    goto LABEL_92;
  }
  uint64_t v28 = *(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  uint64_t v60 = v28;
  if (v28)
  {
LABEL_49:
    uint64_t v29 = 0;
    uint64_t v57 = OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems;
    do
    {
      if ((v55 & 0xC000000000000001) != 0) {
        uint64_t v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v30 = (char *)*(id *)(v55 + 32 + 8 * v29);
      }
      char v66 = v30;
      BOOL v6 = __OFADD__(v29++, 1);
      if (v6)
      {
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        swift_bridgeObjectRetain_n();
        uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
        if (!v60) {
          return swift_bridgeObjectRelease_n();
        }
        goto LABEL_49;
      }
      uint64_t v64 = OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems;
      *(void *)&v30[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_additionalTrailingNavigationBarButtonItems] = *(void *)(v62 + v57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v31 = [v66 childViewControllers];
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      *(void *)&long long v67 = _swiftEmptyArrayStorage;
      if (v32 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        if (!v33)
        {
LABEL_70:
          swift_bridgeObjectRelease();
          unint64_t v37 = (unint64_t)_swiftEmptyArrayStorage;
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v33) {
          goto LABEL_70;
        }
      }
      if (v33 < 1) {
        goto LABEL_90;
      }
      for (uint64_t k = 0; k != v33; ++k)
      {
        if ((v32 & 0xC000000000000001) != 0) {
          id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v35 = *(id *)(v32 + 8 * k + 32);
        }
        unint64_t v36 = v35;
        type metadata accessor for DOCBrowserContainedViewController();
        if (swift_dynamicCastClass())
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v37 = v67;
LABEL_71:
      swift_bridgeObjectRelease();
      if (v37 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
        if (!v38) {
          goto LABEL_50;
        }
      }
      else
      {
        uint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v38) {
          goto LABEL_50;
        }
      }
      if (v38 < 1) {
        goto LABEL_91;
      }
      uint64_t v39 = 0;
      uint64_t v61 = v29;
      do
      {
        if ((v37 & 0xC000000000000001) != 0) {
          uint64_t v40 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v40 = (char *)*(id *)(v37 + 8 * v39 + 32);
        }
        id v41 = v40;
        *(void *)&v40[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_additionalTrailingNavigationBarButtonItems] = *(void *)&v66[v64];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v42 = OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation;
        v41[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_needsOverlayUpdateWithAnimation] = 0;
        id v43 = [v41 viewIfLoaded];
        id v44 = [v43 window];

        if (v44)
        {
          int v45 = v41[v42];
          if (v45 != 2)
          {
            sub_1000A6AA0();
            char v46 = dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
            swift_release();
            if (v46 & 1) == 0 && (objc_msgSend(v41, "doc_hasAppearedOrIsAppearing"))
            {
              type metadata accessor for DOCBrowserContainedViewController();
              id v47 = v41;
              sub_1000CBE70(&qword_100711800);
              if (swift_dynamicCast())
              {
                uint64_t v48 = v45 & 1;
                uint64_t v49 = *((void *)&v68 + 1);
                uint64_t v50 = v69;
                sub_1000A6B78(&v67, *((uint64_t *)&v68 + 1));
                unint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 8);
                uint64_t v52 = v50;
                uint64_t v29 = v61;
                v51(v48, v49, v52);
                sub_10009B1B8((uint64_t)&v67);
              }
              else
              {
                uint64_t v69 = 0;
                long long v67 = 0u;
                long long v68 = 0u;
                sub_1000CBBA4((uint64_t)&v67, &qword_100714E40);
              }
              v41[v42] = 2;
            }
          }
        }

        ++v39;
      }
      while (v38 != v39);
LABEL_50:
      swift_bridgeObjectRelease_n();
    }
    while (v29 != v60);
  }
  return swift_bridgeObjectRelease_n();
}

void sub_100414FDC(void **a1, void *a2, char *a3, uint64_t a4)
{
  id v44 = a3;
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v45 - 8);
  uint64_t v12 = __chkstk_darwin(v45);
  unint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v40 - v15;
  unint64_t v17 = *a1;
  id v18 = [a2 collectionView];
  if (!v18) {
    goto LABEL_25;
  }
  uint64_t v19 = v18;
  id v20 = [v18 indexPathForCell:v17];

  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v45);
    goto LABEL_18;
  }
  id v43 = v16;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  id v21 = (void *)(v11 + 32);
  int v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v23 = v45;
  v22(v10, v14, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v23) == 1)
  {
LABEL_18:
    sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_1007069A0);
    return;
  }
  uint64_t v42 = v4;
  uint64_t v24 = a4;
  unint64_t v25 = (unint64_t)v43;
  v22(v43, v10, v23);
  type metadata accessor for DOCColumnViewCell();
  uint64_t v26 = swift_dynamicCastClass();
  if (!v26)
  {
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v25, v23);
    return;
  }
  uint64_t v27 = v26;
  uint64_t v28 = v17;
  uint64_t v29 = IndexPath.item.getter();
  uint64_t v30 = &v44[-v24];
  if (__OFSUB__(v44, v24))
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v31 = v29;
  double v32 = 0.0;
  if (v29 < (uint64_t)v30) {
    double v32 = 1.0;
  }
  [v28 setAlpha:v32];
  uint64_t v33 = (void **)(v27 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  swift_beginAccess();
  id v21 = *v33;
  if (!v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v23);
    swift_endAccess();

    return;
  }
  id v44 = v28;
  swift_endAccess();
  uint64_t v28 = (char *)OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled;
  *((unsigned char *)v21 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_isUserInteractionEnabled) = v31 < (uint64_t)v30;
  id v34 = v21;
  unint64_t v35 = (unint64_t)sub_10007679C();
  unint64_t v25 = v35;
  id v41 = v34;
  if (v35 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    if (v36) {
      goto LABEL_11;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v43, v45);
    return;
  }
  uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v36) {
    goto LABEL_23;
  }
LABEL_11:
  if (v36 >= 1)
  {
    for (uint64_t i = 0; i != v36; ++i)
    {
      if ((v25 & 0xC000000000000001) != 0) {
        uint64_t v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v38 = *(id *)(v25 + 8 * i + 32);
      }
      uint64_t v39 = v38;
      (*(void (**)(void))((swift_isaMask & *v38) + 0x208))(v28[(void)v21]);
    }
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
}

uint64_t sub_100415444(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v3 = (void *)Strong;
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v6 = [a1 dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  type metadata accessor for DOCColumnViewCell();
  uint64_t v7 = (char *)swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = v7;
    sub_10041A0DC(v7);

    return (uint64_t)v8;
  }

  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100415588(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_100714E18);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a3, v7);
  *(void *)(swift_allocObject() + 16) = a4;
  swift_bridgeObjectRetain();
  if (a1) {
    dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
  }
  else {
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100415720(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v5 = (char *)*(id *)(a1 + 8 * i + 32);
      }
      id v6 = v5;
      uint64_t v7 = (void **)&v5[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v8 = *v7;
      if (v8)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass())
        {
          id v9 = v8;
          sub_1000B145C();

          id v6 = v9;
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100415894()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  unint64_t v3 = *(void *)v2;
  if (*(void *)v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v4)
    {
LABEL_3:
      if (v4 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v4; ++i)
      {
        if ((v3 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v3 + 8 * i + 32);
        }
        uint64_t v7 = v6;
        sub_10033681C(0);
      }
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t v8 = *(void *)v2;
  if (v8 >> 62) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v9)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    id v15 = 0;
    goto LABEL_22;
  }
  while (1)
  {
    while (__OFSUB__(v9--, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain_n();
      unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        goto LABEL_20;
      }
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_18;
    }
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_26;
    }
    if (v9 >= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_27;
    }
    uint64_t v11 = (char *)*(id *)(v8 + 32 + 8 * v9);
LABEL_18:
    uint64_t v12 = v11;
    uint64_t v13 = *(void *)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource + 8];
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(ObjectType, v13)) {
      break;
    }

    if (!v9) {
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();
  id v15 = v12;
  id v16 = [v1 navigationItem];
  sub_10033681C(v16);

LABEL_22:
  id v17 = [self defaultCenter];
  if (qword_1007051A0 != -1) {
    swift_once();
  }
  [v17 postNotificationName:qword_1007374D8 object:v1];
}

void sub_100415B50()
{
  uint64_t v1 = v0;
  if (![v0 isViewLoaded]) {
    return;
  }
  id v2 = [v0 collectionViewLayout];
  type metadata accessor for DOCColumnLayout();
  uint64_t v3 = swift_dynamicCastClass();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    id v5 = [v0 view];
    if (!v5)
    {
      __break(1u);
      goto LABEL_27;
    }
    id v6 = v5;
    [v5 frame];
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGFloat v14 = v13;

    v47.origin.x = v8;
    v47.origin.y = v10;
    v47.size.width = v12;
    v47.size.height = v14;
    if (CGRectGetWidth(v47) > 0.0)
    {
      id v15 = [v1 traitCollection];
      id v16 = [v1 view];
      if (v16)
      {
        id v17 = v16;
        type metadata accessor for DOCColumnViewSpecs();
        [v17 bounds];

        id v18 = (id)DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)();
        id v45 = v18;
        if (sub_1004185A0(0))
        {
          id v45 = (id)dispatch thunk of DOCColumnViewSpecs.fullBrowserColumnWidthSpec.getter();
        }
        uint64_t v19 = OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs;
        id v20 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs];
        if (v20)
        {
          id v21 = v45;
          id v22 = v20;
          char v23 = static NSObject.== infix(_:_:)();

          if (v23)
          {
LABEL_16:
            uint64_t v40 = (double *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
            if ((v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset + 16] & 1) == 0)
            {
              double v42 = *v40;
              double v41 = v40[1];
              id v43 = [v1 collectionView];
              if (v43)
              {
                id v44 = v43;
                [v43 setContentOffset:v42, v41];
              }
              *uint64_t v40 = 0.0;
              v40[1] = 0.0;
              *((unsigned char *)v40 + 16) = 1;
            }
            if ([v1 _appearState] == 2) {
              sub_100418738(0);
            }

            unint64_t v25 = v45;
            goto LABEL_23;
          }
          uint64_t v24 = *(void **)&v1[v19];
        }
        else
        {
          uint64_t v24 = 0;
        }
        *(void *)&v1[v19] = v45;
        id v26 = v45;

        id v27 = v2;
        DOCColumnViewSpecs.columnWidth.getter();
        double v29 = v28;
        id v30 = [v1 view];
        if (v30)
        {
          uint64_t v31 = v30;
          [v30 bounds];
          CGFloat v33 = v32;
          CGFloat v35 = v34;
          CGFloat v37 = v36;
          CGFloat v39 = v38;

          v48.origin.x = v33;
          v48.origin.y = v35;
          v48.size.width = v37;
          v48.size.height = v39;
          [v4 setItemSize:v29, CGRectGetHeight(v48)];

          goto LABEL_16;
        }
LABEL_28:
        __break(1u);
        return;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
  }
  unint64_t v25 = v2;
LABEL_23:
}

void sub_100415EAC()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  sub_10041D3E8(1, v2);
  unint64_t v4 = v3;
  uint64_t v6 = v5;
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  int64_t v9 = v8 >> 1;
  uint64_t v48 = (v8 >> 1) - v6;
  if (v8 >> 1 == v6)
  {
LABEL_43:
    unint64_t v4 = *v1;
    if (*v1 >> 62) {
      goto LABEL_65;
    }
    uint64_t v37 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v37) {
      goto LABEL_45;
    }
LABEL_66:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  swift_unknownObjectRetain();
  uint64_t v10 = 0;
  char v46 = v1;
  unint64_t v47 = v4 + 8 * v6;
  while (v6 + v10 < v9)
  {
    unint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_61;
    }
    id v15 = *(void **)(v47 + 8 * v10);
    type metadata accessor for DOCItemCollectionContainerDataSource();
    uint64_t v16 = swift_dynamicCastClass();
    if (!v16) {
      goto LABEL_57;
    }
    unint64_t v4 = v16;
    swift_beginAccess();
    unint64_t v17 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      id v30 = v15;
      swift_unknownObjectRetain();
      uint64_t v31 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_endAccess();
      uint64_t v19 = *(void **)(v31 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource);
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      if (object_getClass(v19) != (Class)_TtC5Files30DOCItemInfoContainerDataSource || v19 == 0) {
        goto LABEL_36;
      }
LABEL_17:
      uint64_t v23 = v6;
      uint64_t v24 = v9;
      unint64_t v25 = v19[6];
      if (v25 >> 62)
      {
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v33 == 1)
        {
LABEL_19:
          unint64_t v27 = v19[6];
          if (v27 >> 62)
          {
            swift_bridgeObjectRetain();
            if (_CocoaArrayWrapper.endIndex.getter())
            {
LABEL_21:
              if ((v27 & 0xC000000000000001) != 0)
              {
                uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                int64_t v9 = v24;
              }
              else
              {
                if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_64;
                }
                int64_t v9 = v24;
                uint64_t v29 = *(void *)(v27 + 32);
                swift_unknownObjectRetain();
              }
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              uint64_t v6 = v23;
              uint64_t v1 = v46;
              goto LABEL_39;
            }
          }
          else
          {
            uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v28) {
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_unknownObjectRetain();
        if (v26 == 1) {
          goto LABEL_19;
        }
      }
      swift_unknownObjectRelease();
      int64_t v9 = v24;
      uint64_t v6 = v23;
      uint64_t v1 = v46;
      goto LABEL_36;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      goto LABEL_62;
    }
    if (v14 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_63;
    }
    uint64_t v18 = *(void *)(v17 + 8 * v14 + 32);
    swift_endAccess();
    uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_dataSource);
    Class = (__objc2_class *)object_getClass(v19);
    id v21 = v15;
    swift_unknownObjectRetain();
    if (Class == _TtC5Files30DOCItemInfoContainerDataSource && v19 != 0)
    {
      swift_unknownObjectRetain();
      goto LABEL_17;
    }
    swift_unknownObjectRetain();
LABEL_36:
    uint64_t v34 = swift_dynamicCastClass();
    if (!v34)
    {
      swift_unknownObjectRelease();

LABEL_56:
      swift_unknownObjectRelease();
LABEL_57:
      swift_unknownObjectRelease_n();
      return;
    }
    id v35 = [*(id *)(v34 + 40) node];
    if (!v35)
    {

      swift_unknownObjectRelease();
      goto LABEL_56;
    }
    uint64_t v29 = (uint64_t)v35;
LABEL_39:
    *(void *)(v4 + 104) = v29;
    swift_unknownObjectRetain_n();
    swift_unknownObjectRelease();
    double v36 = *(void **)(v4 + 112);
    if (v36)
    {
      uint64_t v11 = *(void *)(v4 + 104);
      swift_unknownObjectRetain();
      id v12 = v36;
      uint64_t v13 = v11;
      unint64_t v4 = (unint64_t)v12;
      sub_1000B63C0(v13);
      swift_unknownObjectRelease_n();
    }
    else
    {
      swift_unknownObjectRelease_n();
    }

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    if (v48 == ++v10)
    {
      swift_unknownObjectRelease();
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  swift_bridgeObjectRetain();
  uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
  if (!v37) {
    goto LABEL_66;
  }
LABEL_45:
  unint64_t v38 = v37 - 1;
  if (__OFSUB__(v37, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_68:
    id v39 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_50;
  }
  if ((v38 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_70;
  }
  if (v38 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_70:
    __break(1u);
    return;
  }
  id v39 = *(id *)(v4 + 8 * v38 + 32);
LABEL_50:
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  type metadata accessor for DOCItemCollectionContainerDataSource();
  uint64_t v41 = swift_dynamicCastClass();
  if (v41)
  {
    uint64_t v42 = v41;
    *(void *)(v41 + 104) = 0;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    id v43 = *(void **)(v42 + 112);
    if (v43)
    {
      uint64_t v44 = *(void *)(v42 + 104);
      swift_unknownObjectRetain();
      id v45 = v43;
      sub_1000B63C0(v44);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
    }
  }
  else
  {

    swift_unknownObjectRelease();
  }
}

void sub_100416434()
{
  uint64_t v1 = v0;
  id v2 = [v0 collectionView];
  if (!v2) {
    return;
  }
  id v60 = v2;
  if (v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] == 1)
  {
    [v2 contentOffset];
    if (v3 < 0.0)
    {
      uint64_t v4 = OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator;
      uint64_t v5 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
      if (v5)
      {
        uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
        id v7 = v6;
      }
      else
      {
        id v7 = [objc_allocWithZone((Class)DOCSeparatorView) init];
        uint64_t v6 = 0;
        uint64_t v5 = *(void **)&v0[v4];
      }
      *(void *)&v0[v4] = v7;
      id v11 = v7;
      id v12 = v6;

      [v11 frame];
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      uint64_t v19 = self;
      id v20 = [v1 traitCollection];
      [v19 separatorThicknessForTraitCollection:v20];
      double v22 = v21;

      id v23 = [v1 view];
      if (v23)
      {
        uint64_t v24 = v23;
        char v25 = UIView.doc_isRTL.getter();

        double v26 = 0.0;
        if (v25)
        {
          id v27 = [v1 collectionView];
          if (!v27)
          {
LABEL_35:
            __break(1u);
            return;
          }
          uint64_t v28 = v27;
          [v27 frame];
          CGFloat v30 = v29;
          CGFloat v32 = v31;
          CGFloat v34 = v33;
          CGFloat v36 = v35;

          v62.origin.x = v30;
          v62.origin.y = v32;
          v62.size.width = v34;
          v62.size.height = v36;
          double MaxX = CGRectGetMaxX(v62);
          v63.origin.x = v14;
          v63.origin.y = v16;
          v63.size.width = v22;
          v63.size.height = v18;
          double v26 = MaxX - CGRectGetWidth(v63);
        }
        id v38 = [v1 collectionView];
        if (v38)
        {
          id v39 = v38;
          [v38 frame];
          CGFloat v41 = v40;
          CGFloat v43 = v42;
          CGFloat v45 = v44;
          CGFloat v47 = v46;

          v64.origin.x = v41;
          v64.origin.y = v43;
          v64.size.width = v45;
          v64.size.height = v47;
          double MinY = CGRectGetMinY(v64);
          id v49 = [v1 collectionView];
          if (v49)
          {
            uint64_t v50 = v49;
            [v49 frame];
            double v52 = v51;

            [v11 setFrame:v26 MinY:v22 v52];
            [v11 setHidden:0];
            id v53 = [v11 superview];
            id v54 = [v1 collectionView];
            uint64_t v55 = v54;
            if (v53)
            {
              if (v54)
              {
                sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
                id v56 = v53;
                char v57 = static NSObject.== infix(_:_:)();

                if (v57) {
                  goto LABEL_27;
                }
LABEL_25:
                id v58 = [v1 collectionView];
                if (v58)
                {
                  uint64_t v59 = v58;
                  [v58 addSubview:v11];

                  goto LABEL_27;
                }
                goto LABEL_34;
              }
              uint64_t v55 = v53;
            }
            else if (!v54)
            {
              goto LABEL_27;
            }

            goto LABEL_25;
          }
LABEL_33:
          __break(1u);
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_33;
    }
  }
  uint64_t v8 = OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator;
  int64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator];
  if (v9)
  {
    [v9 setHidden:1];
    uint64_t v10 = *(void **)&v1[v8];
    if (v10)
    {
      id v11 = v10;
      [v11 removeFromSuperview];
LABEL_27:
    }
  }
}

void sub_100416838()
{
  id v1 = [v0 collectionView];
  if (!v1) {
    goto LABEL_40;
  }
  id v2 = v1;
  id v3 = [v1 visibleCells];

  sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    int64_t v9 = (unint64_t *)&v22[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    if (*v9 >> 62) {
      goto LABEL_36;
    }
    uint64_t v10 = *(void *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      unint64_t v11 = *v9;
      swift_bridgeObjectRetain();
      if (v10 >= 2) {
        unint64_t v11 = sub_10041A71C(1, v11);
      }
      if (v11 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v12)
        {
LABEL_34:
          swift_bridgeObjectRelease();
          return;
        }
      }
      else
      {
        uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v12) {
          goto LABEL_34;
        }
      }
      uint64_t v13 = 4;
      while (1)
      {
        int64_t v9 = (unint64_t *)(v13 - 4);
        CGFloat v14 = (v11 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)(v11 + 8 * v13);
        double v15 = v14;
        uint64_t v16 = v13 - 3;
        if (__OFADD__(v9, 1)) {
          break;
        }
        type metadata accessor for DOCItemCollectionContainerDataSource();
        uint64_t v17 = swift_dynamicCastClass();
        if (!v17)
        {
          swift_bridgeObjectRelease();

          return;
        }
        if (!*(void *)(v17 + 104)
          || (CGFloat v18 = (void **)&v15[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController],
              swift_beginAccess(),
              (uint64_t v19 = *v18) == 0)
          || (type metadata accessor for DOCItemCollectionViewController(0), !swift_dynamicCastClass()))
        {

          goto LABEL_34;
        }
        swift_unknownObjectRetain();
        id v20 = v19;
        double v21 = sub_1001B9BE0();

        if (!v21)
        {

          swift_unknownObjectRelease();
          goto LABEL_34;
        }
        [v22 setNeedsFocusUpdate];

        swift_unknownObjectRelease();
        ++v13;
        if (v16 == v12) {
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_36:
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_13;
  }
LABEL_4:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      type metadata accessor for DOCColumnViewCell();
      if (swift_dynamicCastClass()) {
        sub_1003A00E0(0);
      }
    }
    goto LABEL_13;
  }
  __break(1u);
LABEL_40:
  __break(1u);
}

uint64_t sub_100416BA8()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
LABEL_51:
    swift_bridgeObjectRetain_n();
    unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_48;
    }
  }
  else
  {
    unint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v3) {
      goto LABEL_48;
    }
  }
  unint64_t v4 = v2 & 0xC000000000000001;
  uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  v2 += 32;
  while (1)
  {
    BOOL v6 = __OFSUB__(v3--, 1);
    if (v6) {
      goto LABEL_47;
    }
    if (v4)
    {
      id v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v3 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      if (v3 >= *(void *)(v5 + 16)) {
        goto LABEL_50;
      }
      id v7 = (char *)*(id *)(v2 + 8 * v3);
    }
    double v33 = v7;
    uint64_t v8 = &v7[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    if (*(void *)v8)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      if (swift_dynamicCastClass()) {
        break;
      }
    }

    if (!v3) {
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v9 = *v1;
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    unint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (!v10)
  {
LABEL_42:

    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = DOCDocumentSourceIdentifierSearch;
  while (1)
  {
    BOOL v6 = __OFSUB__(v10--, 1);
    if (v6) {
      break;
    }
    if ((v9 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_45;
      }
      if (v10 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_46;
      }
      uint64_t v12 = (char *)*(id *)(v9 + 32 + 8 * v10);
    }
    unint64_t v11 = v12;
    uint64_t v13 = (void **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    CGFloat v14 = *v13;
    if (*v13)
    {
      uint64_t v15 = swift_dynamicCastClass();
      if (v15)
      {
        uint64_t v16 = (char *)v15;
        sub_10009E6C4(0, (unint64_t *)&qword_100706710);
        id v17 = v14;
        if (static NSObject.== infix(_:_:)())
        {
          CGFloat v18 = *(void **)&v16[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
          if (([v18 isPopoverOrWidget] & 1) == 0
            && (![v18 isPickerUI]
             || v16[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_allowsPickingMultipleItems] == 1))
          {
            id v22 = [*(id *)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration] identifier:v32];
            uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v25 = v24;
            if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
            {

              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v28 & 1) == 0)
              {
                BOOL v19 = 1;
                goto LABEL_30;
              }
            }
            id v29 = [v16 traitCollection];
            id v30 = [v29 horizontalSizeClass];

            BOOL v19 = v30 != (id)1;
            goto LABEL_30;
          }
        }
        BOOL v19 = 0;
LABEL_30:
        id v20 = *(void **)&v16[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
        if (v20)
        {
          id v21 = v20;
          [v21 setAllowsMultipleSelection:v19];
        }
        unint64_t v11 = v17;
      }
    }

    if (!v10) {
      goto LABEL_42;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100416FE0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController];
  }
  else
  {
    unint64_t v3 = v0;
    sub_1000CBE70((uint64_t *)&unk_100714E48);
    swift_allocObject();
    unint64_t v4 = v0;
    uint64_t v2 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)&v3[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_1004170E4(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs] = 0;
  unint64_t v4 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  uint64_t v6 = type metadata accessor for ScrollToItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  id v7 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext];
  uint64_t active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 56))(v7, 1, 1, active);
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController] = 0;
  v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_configuration] = a1;
  id v9 = objc_allocWithZone((Class)type metadata accessor for DOCColumnLayout());
  id v10 = a1;
  id v11 = [v9 init];
  [v11 setScrollDirection:1];
  [v11 setMinimumLineSpacing:0.0];
  [v11 setMinimumInteritemSpacing:0.0];
  v19.receiver = v1;
  v19.super_class = ObjectType;
  id v12 = [super initWithCollectionViewLayout:v11];
  sub_100416FE0();
  if (qword_100704F48 != -1) {
    swift_once();
  }
  uint64_t v13 = self;
  id v14 = [v13 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v18, (uint64_t *)&unk_100705D60);
  sub_100416FE0();
  if (qword_100704F30 != -1) {
    swift_once();
  }
  id v15 = [v13 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v18, (uint64_t *)&unk_100705D60);
  sub_100416FE0();
  if (qword_100704F38 != -1) {
    swift_once();
  }
  id v16 = [v13 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();

  swift_release();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v18, (uint64_t *)&unk_100705D60);
  return v12;
}

void sub_100417524(char *a1)
{
  if ([a1 isViewLoaded])
  {
    Notification.object.getter();
    if (!v14)
    {
      sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_100705D60);
      return;
    }
    type metadata accessor for DOCItemCollectionViewController(0);
    if (swift_dynamicCast())
    {
      uint64_t v2 = &a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
      swift_beginAccess();
      uint64_t v3 = *(void *)v2;
      if (*(void *)v2 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        if (v4) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v4)
        {
LABEL_6:
          if (v4 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v4; ++i)
          {
            if ((v3 & 0xC000000000000001) != 0) {
              uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v6 = (char *)*(id *)(v3 + 8 * i + 32);
            }
            id v7 = v6;
            uint64_t v8 = (void **)&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
            swift_beginAccess();
            id v9 = *v8;
            if (*v8 && swift_dynamicCastClass())
            {
              id v10 = v9;

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v11 = sub_100109444((uint64_t)v12, (unint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      if (v11)
      {
        sub_100416838();
        sub_100416BA8();
      }
    }
  }
}

void sub_100417798(char *a1)
{
  if ([a1 isViewLoaded])
  {
    Notification.object.getter();
    if (!v14)
    {
      sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_100705D60);
      return;
    }
    type metadata accessor for DOCItemCollectionViewController(0);
    if (swift_dynamicCast())
    {
      uint64_t v2 = &a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
      swift_beginAccess();
      uint64_t v3 = *(void *)v2;
      if (*(void *)v2 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
        if (v4) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v4)
        {
LABEL_6:
          if (v4 < 1)
          {
            __break(1u);
            return;
          }
          for (uint64_t i = 0; i != v4; ++i)
          {
            if ((v3 & 0xC000000000000001) != 0) {
              uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v6 = (char *)*(id *)(v3 + 8 * i + 32);
            }
            id v7 = v6;
            uint64_t v8 = (void **)&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
            swift_beginAccess();
            id v9 = *v8;
            if (*v8 && swift_dynamicCastClass())
            {
              id v10 = v9;

              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
              if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              }
              specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized Array._endMutation()();
            }
            else
            {
            }
          }
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v11 = sub_100109444((uint64_t)v12, (unint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRelease();
      if (v11) {
        sub_100416838();
      }
    }
  }
}

uint64_t sub_100417A6C()
{
  v14.receiver = v0;
  v14.super_class = (Class)swift_getObjectType();
  id v1 = [super description];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  uint64_t v15 = v2;
  uint64_t v16 = v4;
  id v5 = [v0 navigationItem];
  id v6 = [v5 title];

  if (v6)
  {
    unint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = v8;
  }
  else
  {
    id v9 = (void *)0x80000001005F3100;
    unint64_t v7 = 0xD00000000000001ALL;
  }
  v10._uint64_t countAndFlagsBits = v7;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 34;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  v12._uint64_t countAndFlagsBits = 8736;
  v12._object = (void *)0xE200000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  return v15;
}

void sub_100417BB8()
{
  id v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v2 = [v0 collectionView];
  if (!v2) {
    goto LABEL_29;
  }
  uint64_t v3 = v2;
  type metadata accessor for DOCColumnViewCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v5 = String._bridgeToObjectiveC()();
  [v3 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v5];

  [v3 setAllowsSelection:0];
  [v3 setAlwaysBounceHorizontal:1];
  [v3 setPreservesSuperviewLayoutMargins:0];
  id v6 = self;
  id v7 = v3;
  id v8 = [v6 clearColor];
  [v7 setBackgroundColor:v8];

  [v7 setContentInsetAdjustmentBehavior:2];
  id v9 = v7;
  NSString v10 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration();
  if (!v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v9 setFocusGroupIdentifier:v10];

  [v9 setAllowsFocus:0];
  id v11 = [v9 subviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13)
    {
LABEL_6:
      sub_10009E6C4(0, &qword_100714EC8);
      uint64_t v14 = swift_getObjCClassFromMetadata();
      if (v13 < 1)
      {
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v15 = v14;
      id v28 = v9;
      for (uint64_t i = 0; i != v13; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v17 = *(id *)(v12 + 8 * i + 32);
        }
        long long v18 = v17;
        if (objc_msgSend(v17, "isKindOfClass:", v15, v28))
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_27;
      }
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_27;
  }
LABEL_19:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_27:
    swift_retain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_21;
  }
  uint64_t v19 = _swiftEmptyArrayStorage[2];
  swift_retain();
  if (v19)
  {
LABEL_21:
    if (v19 >= 1)
    {
      for (uint64_t j = 0; j != v19; ++j)
      {
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v21 = (id)_swiftEmptyArrayStorage[j + 4];
        }
        id v22 = v21;
        [v21 removeFromSuperview];
      }
      goto LABEL_28;
    }
LABEL_33:
    __break(1u);
    return;
  }
LABEL_28:
  swift_release_n();
  type metadata accessor for DOCColumnViewControllerCollectionView();
  swift_dynamicCastClassUnconditional();
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10041E998;
  *(void *)(v24 + 24) = v23;
  id v25 = objc_allocWithZone((Class)sub_1000CBE70(&qword_100714ED0));
  uint64_t v26 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  id v27 = *(void **)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource];
  *(void *)&v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = v26;

LABEL_29:
  if (v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] == 1)
  {
    sub_100414694();
    sub_100415894();
  }
}

void sub_1004180C4(char a1)
{
  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  if (v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] == 1)
  {
    swift_beginAccess();
    uint64_t v3 = swift_bridgeObjectRetain();
    sub_100413804(v3);
    swift_bridgeObjectRelease();
  }
  id v4 = [v1 collectionView];
  NSString v5 = v4;
  if (v4)
  {
    [v4 contentOffset];
    uint64_t v7 = v6;
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  NSString v10 = &v1[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(void *)NSString v10 = v7;
  *((void *)v10 + 1) = v9;
  v10[16] = v5 == 0;
  sub_100415894();
}

uint64_t sub_10041821C(char a1)
{
  v9.receiver = v1;
  v9.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  id v3 = [v1 collectionView];
  if (v3)
  {
    id v4 = v3;
    NSString v5 = (id)DOCFocusGroupIdentifierBrowserFromConfiguration();
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v4 setFocusGroupIdentifier:v5];
  }
  id v6 = [v1 collectionView];
  if (v6)
  {
    uint64_t v7 = v6;
    [v6 setDelegate:v1];
  }
  sub_100415EAC();
  sub_100416838();
  return sub_100416BA8();
}

void sub_1004183D8()
{
  id v1 = [v0 collectionView];
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = [v1 preparedCells];
  if (!v3) {
    goto LABEL_17;
  }
  id v4 = v3;
  sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_5:
      if (v6 >= 1)
      {
        uint64_t v7 = 0;
        do
        {
          if ((v5 & 0xC000000000000001) != 0) {
            id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v8 = *(id *)(v5 + 8 * v7 + 32);
          }
          objc_super v9 = v8;
          ++v7;
          type metadata accessor for DOCColumnViewCell();
          swift_dynamicCastClass();
        }
        while (v6 != v7);
        goto LABEL_13;
      }
      __break(1u);
LABEL_17:
      __break(1u);
      return;
    }
  }
LABEL_13:

  swift_bridgeObjectRelease();
}

uint64_t sub_1004185A0(unint64_t a1)
{
  if (a1)
  {
    unint64_t v2 = a1;
    if (!(a1 >> 62)) {
      goto LABEL_3;
    }
  }
  else
  {
    objc_super v9 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
    swift_beginAccess();
    unint64_t v2 = *v9;
    swift_bridgeObjectRetain();
    if (!(v2 >> 62))
    {
LABEL_3:
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v3 == 1) {
        goto LABEL_4;
      }
LABEL_12:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v10 != 1) {
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

    if (Strong)
    {
      char v8 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x218))();

      return v8 & 1;
    }
LABEL_13:
    char v8 = 0;
    return v8 & 1;
  }
  if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v2 + 32);
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100418738(int a1)
{
  unint64_t v2 = v1;
  int v56 = a1;
  uint64_t v51 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v55 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  id v53 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for DispatchQoS();
  uint64_t v52 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t active = (char *)type metadata accessor for ActiveScrollItemContext(0);
  __chkstk_darwin(active);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100714E28);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = type metadata accessor for ScrollToItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v47 - v18;
  __chkstk_darwin(v17);
  id v21 = (char *)&v47 - v20;
  id v58 = v2;
  uint64_t v22 = (uint64_t)v2 + OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem;
  swift_beginAccess();
  sub_1000CBC00(v22, (uint64_t)v12, &qword_100714E28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_1000CBBA4((uint64_t)v12, &qword_100714E28);
  }
  uint64_t v48 = v19;
  uint64_t v49 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)active;
  sub_10041D7FC((uint64_t)v12, (uint64_t)v21, type metadata accessor for ScrollToItem);
  uint64_t v47 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
  swift_beginAccess();
  sub_10008C318((uint64_t)v10, v22, &qword_100714E28);
  swift_endAccess();
  id v25 = v58;
  id v26 = [v58 collectionView];
  if (!v26) {
    goto LABEL_8;
  }
  id v27 = v26;
  type metadata accessor for DOCColumnViewControllerCollectionView();
  uint64_t v28 = swift_dynamicCastClass();
  if (!v28)
  {

LABEL_8:
    double v40 = *(void (**)(void))&v21[*(int *)(v13 + 24)];
    if (v40)
    {
      swift_retain();
      v40(0);
      sub_1000A7258((uint64_t)v40);
    }
    uint64_t v39 = (uint64_t)v21;
    return sub_10041D79C(v39, type metadata accessor for ScrollToItem);
  }
  objc_super v29 = (void *)v28;
  sub_10041D864((uint64_t)v21, (uint64_t)v6, type metadata accessor for ScrollToItem);
  *(void *)&v6[*(int *)(v24 + 20)] = v29;
  id v30 = v27;
  uint64_t active = v6;
  uint64_t v31 = (uint64_t)v6;
  uint64_t v32 = v25;
  sub_100418E84(v31);
  uint64_t v33 = (uint64_t)v48;
  sub_10041D864((uint64_t)v21, (uint64_t)v48, type metadata accessor for ScrollToItem);
  uint64_t v34 = v49;
  sub_10041D864(v33, v49, type metadata accessor for ScrollToItem);
  unint64_t v35 = (*(unsigned __int8 *)(v47 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v29;
  sub_10041D7FC(v33, v36 + v35, type metadata accessor for ScrollToItem);
  *(void *)(v36 + ((v15 + v35 + 7) & 0xFFFFFFFFFFFFFFF8)) = v32;
  id v37 = v30;
  id v38 = v32;
  if (v56)
  {
    sub_100419024(v29, v34);

    swift_release();
    sub_10041D79C(v34, type metadata accessor for ScrollToItem);
    sub_10041D79C((uint64_t)active, type metadata accessor for ActiveScrollItemContext);
    uint64_t v39 = (uint64_t)v21;
  }
  else
  {
    sub_10041D79C(v34, type metadata accessor for ScrollToItem);
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v41 = static OS_dispatch_queue.main.getter();
    id v58 = v21;
    double v42 = (void *)v41;
    aBlock[4] = sub_10041D6C4;
    aBlock[5] = v36;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AAFB0;
    CGFloat v43 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    double v44 = v50;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10041D754((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    CGFloat v45 = v53;
    uint64_t v46 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v43);

    swift_release();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v44, v54);
    sub_10041D79C((uint64_t)active, type metadata accessor for ActiveScrollItemContext);
    uint64_t v39 = (uint64_t)v58;
  }
  return sub_10041D79C(v39, type metadata accessor for ScrollToItem);
}

void sub_100418E84(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_100714E30);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100419448(0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  uint64_t v10 = 0xD000000000000014;
  unint64_t v11 = 0x80000001005F2FF0;
  v6._uint64_t countAndFlagsBits = sub_100412A24();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  sub_100419234(v10, v11);
  swift_bridgeObjectRelease();
  sub_10041D864(a1, (uint64_t)v5, type metadata accessor for ActiveScrollItemContext);
  uint64_t active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(active - 8) + 56))(v5, 0, 1, active);
  uint64_t v8 = v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext;
  swift_beginAccess();
  sub_10008C318((uint64_t)v5, v8, (uint64_t *)&unk_100714E30);
  swift_endAccess();
  sub_100567494();
}

uint64_t sub_100419024(void *a1, uint64_t a2)
{
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v5 = [a1 layoutAttributesForItemAtIndexPath:isa];

  if (v5)
  {
    [v5 frame];
    double MaxX = CGRectGetMaxX(v20);
    [a1 visibleSize];
    double v8 = MaxX - v7;
    if (v8 < 0.0) {
      double v9 = 0.0;
    }
    else {
      double v9 = v8;
    }
    [a1 contentOffset];
    double v11 = v10;
    _StringGuts.grow(_:)(35);
    v12._object = (void *)0x80000001005F2FB0;
    v12._uint64_t countAndFlagsBits = 0xD000000000000015;
    String.append(_:)(v12);
    type metadata accessor for CGPoint(0);
    _print_unlocked<A, B>(_:_:)();
    v13._uint64_t countAndFlagsBits = 0x6574616D696E6120;
    v13._object = (void *)0xEA00000000003D64;
    String.append(_:)(v13);
    uint64_t v14 = type metadata accessor for ScrollToItem(0);
    uint64_t v15 = *(unsigned __int8 *)(a2 + *(int *)(v14 + 20));
    if (*(unsigned char *)(a2 + *(int *)(v14 + 20))) {
      uint64_t v16 = 1702195828;
    }
    else {
      uint64_t v16 = 0x65736C6166;
    }
    if (v15) {
      unint64_t v17 = 0xE400000000000000;
    }
    else {
      unint64_t v17 = 0xE500000000000000;
    }
    unint64_t v18 = v17;
    String.append(_:)(*(Swift::String *)&v16);
    swift_bridgeObjectRelease();
    sub_100419234(0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    [a1 setContentOffset:v15 animated:v9];
  }
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for ScrollToItem(0) + 20)) != 1) {
    return sub_100419448(1);
  }
  uint64_t result = (uint64_t)[a1 isScrollAnimating];
  if ((result & 1) == 0) {
    return sub_100419448(1);
  }
  return result;
}

uint64_t sub_100419234(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  double v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v4;
    uint64_t v11 = a1;
    Swift::String v12 = (uint8_t *)v10;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)Swift::String v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10009B0E4(v11, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[ScrollToItem] %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100419448(char a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_100714E30);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v8 = (char *)&v18 - v7;
  uint64_t active = type metadata accessor for ActiveScrollItemContext(0);
  uint64_t v10 = *(void *)(active - 8);
  __chkstk_darwin(active);
  Swift::String v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext;
  swift_beginAccess();
  sub_1000CBC00(v13, (uint64_t)v8, (uint64_t *)&unk_100714E30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, active) == 1) {
    return sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_100714E30);
  }
  sub_10041D7FC((uint64_t)v8, (uint64_t)v12, type metadata accessor for ActiveScrollItemContext);
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  uint64_t v18 = 0xD000000000000013;
  unint64_t v19 = 0x80000001005F2FD0;
  v15._uint64_t countAndFlagsBits = sub_100412A24();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  sub_100419234(v18, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, active);
  swift_beginAccess();
  sub_10008C318((uint64_t)v6, v13, (uint64_t *)&unk_100714E30);
  swift_endAccess();
  id v16 = *(id *)&v12[*(int *)(active + 20)];
  sub_100567554();

  uint64_t v17 = *(void (**)(void))&v12[*(int *)(type metadata accessor for ScrollToItem(0) + 24)];
  if (v17)
  {
    swift_retain();
    v17(a1 & 1);
    sub_1000A7258((uint64_t)v17);
  }
  return sub_10041D79C((uint64_t)v12, type metadata accessor for ActiveScrollItemContext);
}

void sub_1004197EC(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v6 - 8);
  double v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (unint64_t *)&v3[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  unint64_t v14 = *v13;
  swift_bridgeObjectRetain();
  sub_1001B5E08((uint64_t)a1, v14);
  char v16 = v15;
  swift_bridgeObjectRelease();
  if (v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  IndexPath.init(item:section:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007069A0);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  id v17 = [v3 collectionView];
  if (v17)
  {
    uint64_t v18 = v17;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v20 = [v18 layoutAttributesForItemAtIndexPath:isa];

    if (!v20)
    {
LABEL_12:
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      return;
    }
    id v21 = [v3 collectionView];
    if (v21)
    {
      uint64_t v22 = v21;
      [v20 frame];
      unsigned __int8 v23 = [v22 _isRectFullyVisible:];

      if (v23)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

        return;
      }
      sub_100412088(a1, a2 & 1, 0, 0);

      goto LABEL_12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100419AF4(uint64_t a1, char a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = type metadata accessor for UITraitOverrides();
  double v7 = __chkstk_darwin(v6);
  v20.receiver = v2;
  v20.super_class = ObjectType;
  [super viewDidMoveToWindow:a1 shouldAppearOrDisappear:a2 & 1];
  if (a1)
  {
    id v8 = [v2 collectionView];
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = [v8 preparedCells];
      if (!v10) {
        goto LABEL_19;
      }
      uint64_t v11 = v10;
      sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
      unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v13) {
          goto LABEL_6;
        }
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v13)
        {
LABEL_6:
          if (v13 >= 1)
          {
            for (uint64_t i = 0; i != v13; ++i)
            {
              if ((v12 & 0xC000000000000001) != 0) {
                id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v15 = *(id *)(v12 + 8 * i + 32);
              }
              char v16 = v15;
              type metadata accessor for DOCColumnViewCell();
              uint64_t v17 = swift_dynamicCastClass();
              if (v17)
              {
                uint64_t v18 = (id *)(v17 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
                swift_beginAccess();
                if (*v18)
                {
                  id v19 = *v18;
                  UIViewController.traitOverrides.getter();
                  UIMutableTraits.horizontalSizeClass.setter();
                  UIViewController.traitOverrides.setter();

                  char v16 = v19;
                }
              }
            }
            goto LABEL_16;
          }
          __break(1u);
LABEL_19:
          __break(1u);
          return;
        }
      }
LABEL_16:

      swift_bridgeObjectRelease();
    }
  }
}

void sub_100419DC0(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = type metadata accessor for UITraitOverrides();
  double v5 = __chkstk_darwin(v4);
  v18.receiver = v1;
  v18.super_class = ObjectType;
  [super traitCollectionDidChange:a1, v5];
  id v6 = [v1 collectionView];
  if (v6)
  {
    double v7 = v6;
    id v8 = [v6 preparedCells];
    if (!v8) {
      goto LABEL_18;
    }
    uint64_t v9 = v8;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11)
      {
LABEL_5:
        if (v11 >= 1)
        {
          for (uint64_t i = 0; i != v11; ++i)
          {
            if ((v10 & 0xC000000000000001) != 0) {
              id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v13 = *(id *)(v10 + 8 * i + 32);
            }
            unint64_t v14 = v13;
            type metadata accessor for DOCColumnViewCell();
            uint64_t v15 = swift_dynamicCastClass();
            if (v15)
            {
              char v16 = (id *)(v15 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
              swift_beginAccess();
              if (*v16)
              {
                id v17 = *v16;
                UIViewController.traitOverrides.getter();
                UIMutableTraits.horizontalSizeClass.setter();
                UIViewController.traitOverrides.setter();

                unint64_t v14 = v17;
              }
            }
          }
          goto LABEL_15;
        }
        __break(1u);
LABEL_18:
        __break(1u);
        return;
      }
    }
LABEL_15:

    swift_bridgeObjectRelease();
  }
}

void sub_10041A0DC(char *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v4);
  unint64_t v5 = IndexPath.item.getter();
  id v6 = &v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  uint64_t v7 = *(void *)v6;
  if ((*(void *)v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v5 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v8 = *(id *)(v7 + 8 * v5 + 32);
LABEL_5:
  uint64_t v9 = v8;
  swift_endAccess();
  id v10 = [v9 parentViewController];
  if (v10)
  {
    uint64_t v11 = v10;
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    unint64_t v12 = v2;
    id v13 = v11;
    LOBYTE(v11) = static NSObject.== infix(_:_:)();

    if (v11)
    {
      unint64_t v14 = (void **)&a1[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
      swift_beginAccess();
      uint64_t v15 = *v14;
      if (*v14)
      {
        type metadata accessor for DOCBrowserContainerController();
        char v16 = v9;
        id v17 = v15;
        char v18 = static NSObject.== infix(_:_:)();

        if (v18)
        {
          int v19 = v16[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding];
          v16[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 0;
          if (v19 == 1) {
            sub_1003349C8();
          }
          goto LABEL_17;
        }
      }
    }
  }
  [v9 doc_removeFromParentWithRemoveSubviewBlock:0];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = v9;
  aBlock[4] = sub_10041E958;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  void aBlock[3] = &unk_1006AB258;
  id v21 = _Block_copy(aBlock);
  char v16 = v9;
  uint64_t v22 = a1;
  swift_release();
  [v2 doc_addChildViewController:v16 addSubviewBlock:v21];
  _Block_release(v21);
  unsigned __int8 v23 = (id *)&v22[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess();
  if (!*v23) {
    goto LABEL_17;
  }
  id v24 = *v23;
  UIViewController.traitOverrides.getter();
  UIMutableTraits.horizontalSizeClass.setter();
  UIViewController.traitOverrides.setter();

  if (!*v23) {
    goto LABEL_17;
  }
  id v25 = (id *)((char *)*v23 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  if (!*v25) {
    goto LABEL_17;
  }
  id v26 = (unsigned __int8 *)*v25;
  id v27 = [v26 view];
  if (!v27) {
    goto LABEL_21;
  }
  uint64_t v28 = v27;
  id v29 = [v2 view];
  if (v29)
  {
    id v30 = v29;
    [v29 layoutMargins];
    double v32 = v31;
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;

    [v28 setLayoutMargins:v32, v34, v36, v38];
    char v16 = v26;
LABEL_17:

    return;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_10041A71C(uint64_t a1, unint64_t a2)
{
  if (a1 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v2 = a2;
  uint64_t v3 = a1;
  if (a1)
  {
    id v29 = _swiftEmptyArrayStorage;
    id v30 = _swiftEmptyArrayStorage;
    if (!(a2 >> 62))
    {
      uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4)
      {
LABEL_5:
        if ((v2 & 0xC000000000000001) != 0)
        {
          uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v6 = 0;
          uint64_t v7 = 1;
          while (1)
          {
            uint64_t v9 = (uint64_t)v29;
            unint64_t v10 = v29[2];
            if ((uint64_t)v10 < v3)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
              if (v6 >= v10) {
                goto LABEL_36;
              }
              id v11 = (id)v29[v6 + 4];
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                uint64_t v9 = sub_100521F28((uint64_t)v29);
                id v29 = (void *)v9;
              }
              if (v6 >= *(void *)(v9 + 16)) {
                goto LABEL_37;
              }
              uint64_t v12 = v9 + 8 * v6;

              *(void *)(v12 + 32) = v5;
              specialized ContiguousArray._endMutation()();
              if ((uint64_t)++v6 >= v3)
              {
                if (v4 == v7) {
                  goto LABEL_42;
                }
                unint64_t v6 = 0;
                goto LABEL_9;
              }
            }
            if (v4 == v7) {
              goto LABEL_42;
            }
LABEL_9:
            uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (__OFADD__(v7++, 1))
            {
              __break(1u);
LABEL_35:
              __break(1u);
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
LABEL_38:
              __break(1u);
              goto LABEL_39;
            }
          }
        }
        uint64_t v14 = v2 & 0xFFFFFFFFFFFFFF8;
        if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_35;
        }
        uint64_t v15 = 0;
        unint64_t v16 = 0;
        uint64_t v17 = v4 - 1;
        unint64_t v28 = v2;
        while (1)
        {
          int v19 = *(void **)(v2 + 8 * v15 + 32);
          uint64_t v20 = (uint64_t)v29;
          unint64_t v21 = v29[2];
          if ((uint64_t)v21 < v3) {
            break;
          }
          if (v16 >= v21) {
            goto LABEL_38;
          }
          unint64_t v2 = v17;
          uint64_t v22 = (void *)v29[v16 + 4];
          id v23 = v19;
          id v24 = v22;
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v20 = sub_100521F28((uint64_t)v29);
            id v29 = (void *)v20;
          }
          if (v16 >= *(void *)(v20 + 16))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          uint64_t v25 = v20 + 8 * v16;

          *(void *)(v25 + 32) = v23;
          specialized ContiguousArray._endMutation()();
          ++v16;
          unint64_t v2 = v28;
          if ((uint64_t)v16 < v3) {
            goto LABEL_24;
          }
          if (v17 == v15) {
            goto LABEL_42;
          }
          unint64_t v16 = 0;
LABEL_25:
          if ((unint64_t)++v15 >= *(void *)(v14 + 16)) {
            goto LABEL_35;
          }
        }
        id v18 = v19;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_24:
        if (v17 == v15) {
          goto LABEL_42;
        }
        goto LABEL_25;
      }
      goto LABEL_42;
    }
LABEL_41:
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_5;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    id v13 = v30;
    swift_release();
    return (uint64_t)v13;
  }
  if ((a2 & 0x8000000000000000) != 0 || (a2 & 0x4000000000000000) != 0)
  {
    id v27 = sub_1002F48C8(a2);
    swift_bridgeObjectRelease();
    return (uint64_t)v27;
  }
  return a2 & 0xFFFFFFFFFFFFFF8;
}

int64_t sub_10041AB30()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v2 = (unint64_t *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  if (!(*v2 >> 62))
  {
    if (*(uint64_t *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
      goto LABEL_3;
    }
LABEL_20:
    v12.receiver = v0;
    v12.super_class = ObjectType;
    id v10 = [super preferredFocusEnvironments];
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    return v8;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v9 < 1) {
    goto LABEL_20;
  }
LABEL_3:
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v2;
  unint64_t v5 = v4 >> 62;
  if (v3 < 2)
  {
LABEL_13:
    if (!v5)
    {
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      swift_bridgeObjectRelease();
      return v4;
    }
LABEL_26:
    swift_bridgeObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_10070D080);
    uint64_t v8 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    return v8;
  }
  if (!v5)
  {
    uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!__OFSUB__(0, v6)) {
      goto LABEL_8;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (__OFSUB__(0, v6)) {
    goto LABEL_25;
  }
LABEL_8:
  if (!v6)
  {
    int64_t result = 0;
    goto LABEL_16;
  }
  int64_t result = v6 - 1;
  if (__OFSUB__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    unint64_t v5 = result | v6;
    if (((result | v6) & 0x8000000000000000) == 0)
    {
      if (v6 < result)
      {
        __break(1u);
        goto LABEL_13;
      }
LABEL_16:
      uint64_t v8 = (uint64_t)sub_1002F5A24((uint64_t **)result, 0, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
      {
        sub_1000CBE70((uint64_t *)&unk_10070D080);
        uint64_t v11 = _bridgeCocoaArray<A>(_:)();
        swift_release_n();
        return v11;
      }
      else
      {
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        swift_release();
      }
      return v8;
    }
  }
  __break(1u);
  return result;
}

void sub_10041AE98()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_12;
  }
LABEL_3:
  unint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1))
  {
    __break(1u);
  }
  else if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v4 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v5 = *(id *)(v2 + 8 * v4 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return;
  }
  id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    aBlock[4] = DOCSplitBrowserViewController.didCommitPreview(of:);
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000A884;
    void aBlock[3] = &unk_1006AB208;
    uint64_t v9 = _Block_copy(aBlock);
    [v8 beginLoadingAdditionalParents:v9];
    _Block_release(v9);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void sub_10041B268(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = (void **)(a2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
  swift_beginAccess();
  id v5 = *v4;
  void *v4 = a3;
  id v6 = a3;
  sub_10039FBB0(v5);
}

void sub_10041B2E4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_10041B404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = (unint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v8 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v7 = v8;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7;
  }
  type metadata accessor for DOCTransitionableProxy();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v7;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v10 = (NSURL *)(v8 & 0xFFFFFFFFFFFFFF8);
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  URL._bridgeToObjectiveC()(v10);
  objc_super v12 = v11;
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100045AE0;
  void aBlock[3] = &unk_1006AB1E0;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v9 getTransitionControllerForURL:v12 completionBlock:v13];
  _Block_release(v13);
  swift_release();
}

uint64_t sub_10041B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (unint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v8 = *v7;
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v9 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v8 = v9;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8;
  }
  type metadata accessor for DOCTransitionableProxy();
  id v10 = (void *)swift_allocObject();
  void v10[2] = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100045AE0;
  void aBlock[3] = &unk_1006AB190;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 getTransitionControllerForItem:a1 completionBlock:v11];
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_10041B92C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (unint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v8 = *v7;
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v9 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v8 = v9;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8;
  }
  type metadata accessor for DOCTransitionableProxy();
  id v10 = (void *)swift_allocObject();
  void v10[2] = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100045AE0;
  void aBlock[3] = &unk_1006AB140;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 getPopoverTrackerForItem:a1 completionBlock:v11];
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_10041BB38(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (unint64_t *)(v4 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v10 = *v9;
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v11 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v10 = v11;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v10;
  }
  type metadata accessor for DOCTransitionableProxy();
  objc_super v12 = (void *)swift_allocObject();
  _OWORD v12[2] = v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6C98;
  void aBlock[3] = &unk_1006AB0F0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v12 getViewFor:a1 waitForNewThumbnail:a2 & 1 :v13];
  _Block_release(v13);
  return swift_release();
}

uint64_t sub_10041BDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = (unint64_t *)(v3 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v8 = *v7;
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v9 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v8 = v9;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v9 = v8;
  }
  type metadata accessor for DOCTransitionableProxy();
  unint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v8;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  aBlock[4] = a2;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100411BA4;
  void aBlock[3] = &unk_1006AB0A0;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v10 getCellFor:a1 :v11];
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_10041BFDC(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(id, uint64_t, uint64_t))
{
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  id v13 = a3;
  id v14 = a1;
  a7(v13, a6, v12);

  return swift_release();
}

void sub_10041C084(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = (unint64_t *)(v4 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v9 = *v8;
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_100714E58);
    uint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v9 = v10;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v9;
  }
  type metadata accessor for DOCTransitionableProxy();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v9;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_5:
  }
    sub_100161A24(0xD00000000000003BLL, 0x80000001005F3010);
LABEL_6:
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  aBlock[4] = a3;
  aBlock[5] = a4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000A884;
  void aBlock[3] = &unk_1006AB050;
  id v13 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v11 revealWithItems:isa selectEvenIfVisible:a2 & 1 completionBlock:v13];
  _Block_release(v13);
  swift_release();
}

void *sub_10041C36C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for ScrollToItem(0);
    *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    if (*v11)
    {
      uint64_t v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    }
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = *(void **)((char *)a2 + v14);
    *(void *)((char *)a1 + v14) = v15;
    id v16 = v15;
  }
  return a1;
}

void sub_10041C47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(type metadata accessor for ScrollToItem(0) + 24))) {
    swift_release();
  }
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_10041C510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ScrollToItem(0);
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  if (*v10)
  {
    uint64_t v11 = v10[1];
    void *v9 = *v10;
    v9[1] = v11;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v13;
  id v14 = v13;
  return a1;
}

uint64_t sub_10041C5D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ScrollToItem(0);
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a1 + v8);
  uint64_t v12 = *(void *)(a2 + v8);
  if (!v11)
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(v10 + 8);
      void *v9 = v12;
      v9[1] = v14;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v10 + 8);
  void *v9 = v12;
  v9[1] = v13;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v15 = *(int *)(a3 + 20);
  id v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  return a1;
}

uint64_t sub_10041C6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ScrollToItem(0);
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = v10[1];
    void *v9 = v11;
    v9[1] = v12;
  }
  else
  {
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  }
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10041C788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ScrollToItem(0);
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = a2 + v8;
  uint64_t v11 = *(void *)(a1 + v8);
  uint64_t v12 = *(void *)(a2 + v8);
  if (!v11)
  {
    if (v12)
    {
      uint64_t v14 = *(void *)(v10 + 8);
      void *v9 = v12;
      v9[1] = v14;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    goto LABEL_8;
  }
  if (!v12)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)(v10 + 8);
  void *v9 = v12;
  v9[1] = v13;
  swift_release();
LABEL_8:
  uint64_t v15 = *(int *)(a3 + 20);
  id v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);

  return a1;
}

uint64_t sub_10041C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041C88C);
}

uint64_t sub_10041C88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ScrollToItem(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10041C94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041C960);
}

uint64_t sub_10041C960(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ScrollToItem(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void *sub_10041CA1C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    if (*v10)
    {
      uint64_t v11 = v10[1];
      void *v9 = *v10;
      v9[1] = v11;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
  }
  return a1;
}

uint64_t sub_10041CB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_10041CB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*v9)
  {
    uint64_t v10 = v9[1];
    void *v8 = *v9;
    v8[1] = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_10041CC40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a1 + v7);
  uint64_t v11 = *(void *)(a2 + v7);
  if (!v10)
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(v9 + 8);
      void *v8 = v11;
      v8[1] = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v12 = *(void *)(v9 + 8);
  void *v8 = v11;
  v8[1] = v12;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_10041CD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  if (*v9)
  {
    uint64_t v11 = v9[1];
    void *v8 = v10;
    v8[1] = v11;
  }
  else
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  return a1;
}

uint64_t sub_10041CDB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  if (!*(void *)(a1 + v7))
  {
    if (v10)
    {
      uint64_t v12 = v9[1];
      void *v8 = v10;
      v8[1] = v12;
      return a1;
    }
LABEL_7:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    return a1;
  }
  if (!v10)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v11 = v9[1];
  void *v8 = v10;
  v8[1] = v11;
  swift_release();
  return a1;
}

uint64_t sub_10041CE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10041CE94);
}

uint64_t sub_10041CE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_10041CF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10041CF74);
}

uint64_t sub_10041CF74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_10041D030()
{
  return sub_100415588(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

id sub_10041D040(unint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&ObjectType - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v31 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    if (v30) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v30 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v30)
    {
LABEL_3:
      unint64_t v5 = v31 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v7 = &selRef_cellForItemAtIndexPath_;
      while (1)
      {
        if (v5) {
          uint64_t v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v8 = (char *)*(id *)(v31 + 8 * v6);
        }
        uint64_t v9 = v8;
        uint64_t v10 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_22;
        }
        int v11 = (void **)&v8[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v12 = *v11;
        if (*v11)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v13 = (void *)swift_dynamicCastClass();
          if (v13) {
            id v14 = v12;
          }
        }
        else
        {
          uint64_t v13 = 0;
        }
        [v13 v7[398]];

        uint64_t v15 = *v11;
        if (v15)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v16 = swift_dynamicCastClass();
          if (v16)
          {
            uint64_t v17 = (char *)v16;
            id v18 = v15;
            id result = [v17 loadViewIfNeeded];
            uint64_t v20 = *(void **)&v17[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
            if (!v20)
            {
              __break(1u);
              return result;
            }
            unint64_t v21 = v20;

            uint64_t v22 = type metadata accessor for IndexPath();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v4, 1, 1, v22);
            uint64_t v23 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
            uint64_t v24 = *(void *)&v21[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState]
                + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
            swift_beginAccess();
            swift_retain();
            sub_10008C318((uint64_t)v4, v24, (uint64_t *)&unk_1007069A0);
            swift_endAccess();
            swift_release();
            uint64_t v25 = *(void *)&v21[v23];
            if (*(unsigned char *)(v25 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) == 1)
            {
              id v26 = &v21[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate];
              if (swift_unknownObjectWeakLoadStrong())
              {
                uint64_t v27 = *((void *)v26 + 1);
                uint64_t ObjectType = swift_getObjectType();
                uint64_t v28 = v25 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
                swift_beginAccess();
                sub_1000CBC00(v28, (uint64_t)v4, (uint64_t *)&unk_1007069A0);
                (*(void (**)(char *, _UNKNOWN **, char *, uint64_t, uint64_t))(v27 + 16))(v21, &off_1006AF4A8, v4, ObjectType, v27);
                swift_unknownObjectRelease();
                sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007069A0);
              }
            }

            uint64_t v7 = &selRef_cellForItemAtIndexPath_;
          }
        }

        ++v6;
        if (v10 == v30) {
          return (id)swift_bridgeObjectRelease();
        }
      }
    }
  }

  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_10041D3E8(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    uint64_t v12 = v11 - v3;
    if (__OFSUB__(v11, v3))
    {
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    if (v14 < 0)
    {
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= (v12 & ~(v12 >> 63)) || v13 <= -1) {
      uint64_t v16 = v12 & ~(v12 >> 63);
    }
    else {
      uint64_t v16 = v13;
    }
    if (v12 >= 1) {
      uint64_t v7 = v16;
    }
    else {
      uint64_t v7 = v12 & ~(v12 >> 63);
    }
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    id result = swift_bridgeObjectRelease();
    if (v17 >= v7) {
      goto LABEL_10;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5 >= ((v5 - result) & ~((uint64_t)(v5 - result) >> 63))) {
    uint64_t v6 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  else {
    uint64_t v6 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)(v5 - result) >= 1) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = (v5 - result) & ~((uint64_t)(v5 - result) >> 63);
  }
  if ((uint64_t)v5 < v7) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    type metadata accessor for DOCBrowserContainerController();
    Swift::Int v8 = 0;
    do
    {
      Swift::Int v9 = v8 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v8);
      Swift::Int v8 = v9;
    }
    while (v7 != v9);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v10;
}

uint64_t sub_10041D5AC()
{
  uint64_t v1 = (int *)(type metadata accessor for ScrollToItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  if (*(void *)(v0 + v3 + v1[8])) {
    swift_release();
  }
  unint64_t v6 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = v6 + 8;

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_10041D6C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ScrollToItem(0) - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100419024(v2, v3);
}

uint64_t sub_10041D754(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10041D79C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10041D7FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10041D864(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10041D8CC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041D904()
{
  return sub_100415720(*(void *)(v0 + 16));
}

uint64_t sub_10041D920()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041D958(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

void sub_10041D970()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalLeadingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_additionalTrailingNavigationBarButtonItems] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_diffableDataSource] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_columnViewSpecs] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_oldContentOffset];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  v1[16] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_pendingScrollToItem];
  uint64_t v3 = type metadata accessor for ScrollToItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = &v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_activeScrollToItemContext];
  uint64_t active = type metadata accessor for ActiveScrollItemContext(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(active - 8) + 56))(v4, 1, 1, active);
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController____lazy_storage___notificationsController] = 0;
  v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files23DOCColumnViewController_fakeLeadingSeparator] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10041DAF8(void *a1, void *a2)
{
  id v2 = [a1 collectionView];
  if (!v2) {
    return;
  }
  uint64_t v3 = v2;
  id v4 = [v2 preparedCells];
  if (!v4)
  {
LABEL_26:
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
LABEL_21:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_21;
  }
LABEL_5:
  if (v7 < 1)
  {
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v27 = v3;
  uint64_t v8 = 0;
  while (1)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v6 + 8 * v8 + 32);
    }
    id v18 = v19;
    type metadata accessor for DOCColumnViewCell();
    uint64_t v20 = swift_dynamicCastClass();
    if (!v20) {
      goto LABEL_8;
    }
    unint64_t v21 = (void *)(v20 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
    swift_beginAccess();
    if (!*v21) {
      goto LABEL_8;
    }
    uint64_t v22 = (id *)(*v21 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess();
    if (!*v22) {
      goto LABEL_8;
    }
    id v23 = *v22;
    id v24 = [v23 view:v27];
    if (!v24) {
      goto LABEL_25;
    }
    uint64_t v25 = v24;
    id v26 = [a2 view];
    if (!v26) {
      break;
    }
    Swift::Int v9 = v26;
    [v26 layoutMargins];
    double v11 = v10;
    double v13 = v12;
    double v15 = v14;
    double v17 = v16;

    [v25 setLayoutMargins:v11, v13, v15, v17];
    id v18 = v23;
LABEL_8:
    ++v8;

    if (v7 == v8) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:

  swift_bridgeObjectRelease();
}

void sub_10041DD9C(void *a1, void *a2)
{
  id v3 = [a1 collectionView];
  if (v3)
  {
    id v4 = v3;
    id v5 = [v3 preparedCells];
    if (!v5) {
      goto LABEL_39;
    }
    unint64_t v6 = v5;
    sub_10009E6C4(0, (unint64_t *)&unk_100705CD0);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_5:
        uint64_t v51 = v8;
        if (v8 >= 1)
        {
          uint64_t v47 = v4;
          unint64_t v48 = v7;
          uint64_t v9 = 0;
          unint64_t v10 = v7 & 0xC000000000000001;
          uint64_t v11 = v8;
          uint64_t v49 = a2;
          unint64_t v50 = v7 & 0xC000000000000001;
          while (1)
          {
            if (v10) {
              id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v12 = *(id *)(v7 + 8 * v9 + 32);
            }
            double v13 = v12;
            type metadata accessor for DOCColumnViewCell();
            uint64_t v14 = swift_dynamicCastClass();
            if (v14)
            {
              double v15 = (void *)v14;
              double v16 = (id *)(v14 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
              swift_beginAccess();
              id v17 = *v16;
              if (*v16)
              {
                sub_10009E6C4(0, (unint64_t *)&qword_100707710);
                id v18 = v17;
                id v19 = a2;
                char v20 = static NSObject.== infix(_:_:)();

                if (v20)
                {
                  id v21 = *v16;
                  *double v16 = 0;
                  if (v21)
                  {
                    id v22 = v21;
                    id v23 = [v22 viewIfLoaded:v47];
                    id v24 = [v23 superview];

                    id v25 = [v15 contentView];
                    id v26 = v25;
                    if (v24)
                    {
                      if (v25)
                      {
                        sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
                        id v27 = v22;
                        id v28 = v24;
                        char v29 = static NSObject.== infix(_:_:)();

                        id v22 = v27;
                        unint64_t v7 = v48;

                        id v26 = v22;
                        if ((v29 & 1) == 0) {
                          goto LABEL_24;
                        }
LABEL_21:
                        [v22 doc_removeFromParentWithRemoveSubviewBlock:0];
                        id v30 = [v22 viewIfLoaded];
                        [v30 removeFromSuperview];
                        id v26 = v22;
                      }
                      else
                      {
                        id v30 = v22;
                        id v26 = v24;
                      }
                    }
                    else
                    {
                      id v30 = v22;
                      if (!v25) {
                        goto LABEL_21;
                      }
                    }

LABEL_24:
                    if (*v16)
                    {
                      id v31 = *v16;
                      id v32 = [v15 contentView];
                      id v33 = [v31 view];
                      if (!v33) {
                        goto LABEL_37;
                      }
                      double v34 = v33;
                      id v35 = v22;
                      [v32 addSubview:v33];

                      id v36 = [v31 view];
                      if (!v36) {
                        goto LABEL_38;
                      }
                      double v37 = v36;
                      id v38 = [v15 contentView];
                      [v38 bounds];
                      double v40 = v39;
                      double v42 = v41;
                      double v44 = v43;
                      double v46 = v45;

                      [v37 setFrame:v40, v42, v44, v46];
                      sub_10039FE98();
                      sub_1003A00E0(0);

                      double v13 = v35;
                      unint64_t v10 = v50;
                      uint64_t v11 = v51;
                      a2 = v49;
                    }
                    else
                    {
                      id v31 = v22;
                      a2 = v49;
                      unint64_t v10 = v50;
                      uint64_t v11 = v51;
                    }

                    double v13 = v31;
                    goto LABEL_8;
                  }
                }
                unint64_t v10 = v50;
                uint64_t v11 = v51;
              }
            }
LABEL_8:
            ++v9;

            if (v11 == v9)
            {

              swift_bridgeObjectRelease();
              return;
            }
          }
        }
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
    }

    swift_bridgeObjectRelease();
  }
}

void sub_10041E228(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = &v46[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = IndexPath.item.getter();
  uint64_t v8 = (unint64_t *)(v2 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
  swift_beginAccess();
  unint64_t v9 = *v8;
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v11 = v10 - 1;
    if (!__OFSUB__(v10, 1)) {
      goto LABEL_3;
    }
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v11 = v45 - 1;
  if (__OFSUB__(v45, 1)) {
    goto LABEL_30;
  }
LABEL_3:
  if (v7 == v11) {
    sub_100415894();
  }
  type metadata accessor for DOCColumnViewCell();
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12) {
    goto LABEL_34;
  }
  double v13 = (char *)v12;
  id v14 = a1;
  sub_10041A0DC(v13);
  double v15 = (id *)&v13[OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController];
  swift_beginAccess();
  if (!*v15)
  {
LABEL_27:
    sub_1003A00E0(0);

    return;
  }
  double v16 = (void **)((char *)*v15 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
  swift_beginAccess();
  id v17 = *v16;
  if (!*v16 || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v18 = swift_dynamicCastClass()) == 0))
  {
LABEL_25:
    if (*v15) {
      [*v15 _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
    }
    goto LABEL_27;
  }
  id v19 = (unsigned char *)v18;
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  id v21 = v17;
  if (!Strong)
  {
LABEL_19:
    v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_wantsToReuseView] = 0;
    double v39 = (uint64_t *)&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode];
    swift_beginAccess();
    uint64_t v40 = *v39;
    *double v39 = 2;
    if (v40 != 2)
    {
      uint64_t v41 = (uint64_t)&v19[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
      swift_beginAccess();
      sub_10041D864(v41, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
      uint64_t v42 = *(void *)(*(void *)v6 + 16);
      if (v42)
      {
        double v43 = (uint64_t *)(*(void *)v6 + 64);
        do
        {
          uint64_t v44 = *v43;
          v43 += 5;
          *(unsigned char *)(v44 + 24) = *(unsigned char *)(v44 + 25);
          --v42;
        }
        while (v42);
      }
      sub_10041D79C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for DOCItemCollectionFPController);
      sub_10001E85C();
    }

    goto LABEL_25;
  }
  id v22 = [v19 parentViewController];
  if (!v22 || (id v23 = v22, v22, v23 != Strong))
  {
    swift_unknownObjectRelease();
    goto LABEL_19;
  }
  id v24 = [v19 view];
  if (!v24) {
    goto LABEL_31;
  }
  id v25 = v24;
  id v26 = [v24 superview];

  if (v26)
  {
LABEL_18:
    swift_unknownObjectRelease();

    goto LABEL_19;
  }
  id v27 = [Strong view];
  if (v27)
  {
    id v28 = v27;
    [v27 bounds];
    double v30 = v29;
    double v32 = v31;
    double v34 = v33;
    double v36 = v35;

    [v25 setFrame:v30, v32, v34, v36];
    [v25 setAutoresizingMask:18];
    id v37 = [Strong view];
    if (v37)
    {
      id v38 = v37;
      [v37 addSubview:v25];

      [Strong _doc_ipi_updateContentOverlayInsetsForSelfAndChildren];
      sub_10006936C();
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10041E6BC(void *a1)
{
  type metadata accessor for DOCColumnViewCell();
  uint64_t v2 = swift_dynamicCastClass();
  if (v2)
  {
    id v3 = (id *)(v2 + OBJC_IVAR____TtC5Files17DOCColumnViewCell_browserContainerController);
    swift_beginAccess();
    id v4 = *v3;
    if (*v3)
    {
      id v5 = a1;
      id v6 = v4;
      char v7 = sub_10039FDBC(v6);

      if (v7)
      {
        if (*v3)
        {
          id v8 = *v3;
          sub_10033681C(0);

          id v5 = v8;
        }
      }
    }
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

void sub_10041E7C4(void *a1)
{
  [a1 contentOffset];
  if (v2 <= -100.0)
  {
    id v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers);
    swift_beginAccess();
    unint64_t v4 = *v3;
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      if (v5)
      {
LABEL_4:
        unint64_t v6 = v5 - 1;
        if (__OFSUB__(v5, 1))
        {
          __break(1u);
        }
        else if ((v4 & 0xC000000000000001) == 0)
        {
          if ((v6 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v6 < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
            goto LABEL_9;
          }
          __break(1u);
          return;
        }
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v8 = v7;
        swift_bridgeObjectRelease();
        id Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          unsigned __int8 v10 = [Strong canLoadAdditionalParents];

          swift_unknownObjectRelease();
          if (v10) {
            sub_10041AE98();
          }
        }
        else
        {
        }
        return;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10041E918()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10041E958(uint64_t a1)
{
  sub_10041B268(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10041E960()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10041E998(void *a1)
{
  return sub_100415444(a1);
}

uint64_t sub_10041E9A0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t static NavigationDirection.typeDisplayRepresentation.getter()
{
  return TypeDisplayRepresentation.init(stringLiteral:)(0x6F69746365726944, 0xE90000000000006ELL);
}

Files::NavigationDirection_optional __swiftcall NavigationDirection.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AFF8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Files_NavigationDirection_forward;
  }
  else {
    v4.value = Files_NavigationDirection_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static NavigationDirection.allCases.getter()
{
  return &off_10068B048;
}

uint64_t NavigationDirection.rawValue.getter(char a1)
{
  if (a1) {
    return 0x64726177726F66;
  }
  else {
    return 1801675106;
  }
}

uint64_t sub_10041EAE0(char *a1, char *a2)
{
  return sub_1004C0FB8(*a1, *a2);
}

Swift::Int sub_10041EAEC()
{
  return Hasher._finalize()();
}

uint64_t sub_10041EB68()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10041EBD0()
{
  return Hasher._finalize()();
}

uint64_t sub_10041EC48@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068AFF8, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10041ECA8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1801675106;
  if (*v1) {
    uint64_t v2 = 0x64726177726F66;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_10041ECE0(void *a1@<X8>)
{
  *a1 = &off_10068B070;
}

uint64_t sub_10041ECF0(uint64_t a1)
{
  unint64_t v2 = sub_10041FBB0();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_10041ED3C(uint64_t a1)
{
  unint64_t v2 = sub_10041FB0C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_10041ED88()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_1007374E8);
  sub_10009D098(v6, (uint64_t)qword_1007374E8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_10041EF94()
{
  uint64_t v0 = sub_1000CBE70(&qword_100714F78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100714F80);
  __chkstk_darwin(v1);
  sub_10039B864();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F3290;
  v2._uint64_t countAndFlagsBits = 0xD000000000000026;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714F88);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10041F134()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_100737500);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_100737500);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_10041F1BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_1007051A8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_1007374E8, a1);
}

uint64_t sub_10041F1F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_1007051B0, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737500, a1);
}

uint64_t sub_10041F230(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10041F250, 0, 0);
}

uint64_t sub_10041F250()
{
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10041F2B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10041FF80();
  *a1 = result;
  return result;
}

uint64_t sub_10041F2DC(uint64_t a1)
{
  unint64_t v2 = sub_10039B864();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t _s5Files19NavigationDirectionO26caseDisplayRepresentationsSDyAC10AppIntents0E14RepresentationVGvgZ_0()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007080D0);
  __chkstk_darwin(v0 - 8);
  double v35 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v2 - 8);
  double v34 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  unsigned __int8 v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v26 = v11;
  uint64_t v37 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_1000CBE70(&qword_100714F90);
  uint64_t v12 = (int *)(sub_1000CBE70(&qword_100714F98) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v32 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v33 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_10059B760;
  unint64_t v16 = v15 + v14;
  unint64_t v28 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  id v25 = v10;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  unsigned int v29 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v17 = *(void (**)(void))(v4 + 104);
  uint64_t v30 = v4 + 104;
  double v31 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v37 += 56;
  id v27 = v18;
  id v19 = v34;
  v18(v34, 1, 1, v11);
  uint64_t v20 = type metadata accessor for DisplayRepresentation.Image();
  id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  id v22 = v35;
  v21(v35, 1, 1, v20);
  DisplayRepresentation.init(title:subtitle:image:)();
  id v23 = (unsigned char *)(v16 + v32);
  v32 += v16 + v12[14];
  *id v23 = 1;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v31(v6, v29, v36);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v27(v19, 1, 1, v26);
  v21(v22, 1, 1, v20);
  DisplayRepresentation.init(title:subtitle:image:)();
  return sub_100495A7C(v33);
}

unint64_t sub_10041F868()
{
  unint64_t result = qword_100714ED8;
  if (!qword_100714ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714ED8);
  }
  return result;
}

unint64_t sub_10041F8C0()
{
  unint64_t result = qword_100714EE0;
  if (!qword_100714EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714EE0);
  }
  return result;
}

unint64_t sub_10041F918()
{
  unint64_t result = qword_100714EE8;
  if (!qword_100714EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714EE8);
  }
  return result;
}

unint64_t sub_10041F970()
{
  unint64_t result = qword_100714EF0;
  if (!qword_100714EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714EF0);
  }
  return result;
}

uint64_t sub_10041F9C4()
{
  return sub_100073DF0(&qword_100714EF8, &qword_100714F00);
}

unint64_t sub_10041FA04()
{
  unint64_t result = qword_100714F08;
  if (!qword_100714F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F08);
  }
  return result;
}

unint64_t sub_10041FA5C()
{
  unint64_t result = qword_100714F10;
  if (!qword_100714F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F10);
  }
  return result;
}

unint64_t sub_10041FAB4()
{
  unint64_t result = qword_100714F18;
  if (!qword_100714F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F18);
  }
  return result;
}

unint64_t sub_10041FB0C()
{
  unint64_t result = qword_100714F20;
  if (!qword_100714F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F20);
  }
  return result;
}

uint64_t sub_10041FB60()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10041FBB0()
{
  unint64_t result = qword_100714F28;
  if (!qword_100714F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F28);
  }
  return result;
}

unint64_t sub_10041FC08()
{
  unint64_t result = qword_100714F30;
  if (!qword_100714F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F30);
  }
  return result;
}

unint64_t sub_10041FC60()
{
  unint64_t result = qword_100714F38;
  if (!qword_100714F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F38);
  }
  return result;
}

unint64_t sub_10041FCB8()
{
  unint64_t result = qword_100714F40;
  if (!qword_100714F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F40);
  }
  return result;
}

unint64_t sub_10041FD10()
{
  unint64_t result = qword_100714F48;
  if (!qword_100714F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F48);
  }
  return result;
}

unint64_t sub_10041FD68()
{
  unint64_t result = qword_100714F50;
  if (!qword_100714F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714F50);
  }
  return result;
}

uint64_t sub_10041FDBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10041FDD8()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for NavigationDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10041FEC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationDirection()
{
  return &type metadata for NavigationDirection;
}

ValueMetadata *type metadata accessor for NavigateHistoryIntent()
{
  return &type metadata for NavigateHistoryIntent;
}

uint64_t sub_10041FF08()
{
  return sub_100073DF0(&qword_100714F60, &qword_100714F68);
}

uint64_t sub_10041FF44()
{
  return sub_100073DF0(&qword_100712F60, &qword_10071B630);
}

uint64_t sub_10041FF80()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  id v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v25 = (char *)&v21 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v6 - 8);
  id v24 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v22 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v23 = sub_1000CBE70(&qword_100714F70);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v16(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v16(v11, v15, v8);
  id v17 = v24;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v22);
  char v30 = 0;
  uint64_t v18 = type metadata accessor for IntentDialog();
  id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v25, 1, 1, v18);
  v19(v26, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_10041FBB0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t sub_1004204B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1004204E4()
{
  unint64_t result = qword_100714FA0;
  if (!qword_100714FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714FA0);
  }
  return result;
}

unint64_t sub_10042053C()
{
  unint64_t result = qword_100714FA8;
  if (!qword_100714FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100714FA8);
  }
  return result;
}

uint64_t sub_100420590()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004205AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004205C8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737518);
  sub_10009D098(v6, (uint64_t)qword_100737518);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_1004207D8()
{
  uint64_t v0 = sub_1000CBE70(&qword_100714FC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100714FD0);
  __chkstk_darwin(v1);
  sub_100421058();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F3540;
  v2._uint64_t countAndFlagsBits = 0xD000000000000028;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100714FD8);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100420978()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_100737530);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_100737530);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  Swift::String v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100420A00@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_1007051B8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100737518, a1);
}

uint64_t sub_100420A38@<X0>(uint64_t a1@<X8>)
{
  return sub_1001416C4(&qword_1007051C0, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737530, a1);
}

uint64_t sub_100420A74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100420B24();
  *a1 = result;
  return result;
}

uint64_t sub_100420A9C(uint64_t a1)
{
  unint64_t v2 = sub_100421058();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for NavigateQuickLookIntent()
{
  return &type metadata for NavigateQuickLookIntent;
}

uint64_t sub_100420AE8()
{
  return sub_100073DF0(&qword_100714FB8, &qword_100714FC0);
}

uint64_t sub_100420B24()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  id v27 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v25 = (char *)&v21 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v6 - 8);
  id v24 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  uint64_t v22 = type metadata accessor for LocalizedStringResource();
  uint64_t v14 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v23 = sub_1000CBE70(&qword_100714F70);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v15 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v16(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v16(v11, v15, v8);
  id v17 = v24;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v22);
  char v30 = 0;
  uint64_t v18 = type metadata accessor for IntentDialog();
  id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v25, 1, 1, v18);
  v19(v26, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_10041FBB0();
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

unint64_t sub_100421058()
{
  unint64_t result = qword_10071B620;
  if (!qword_10071B620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B620);
  }
  return result;
}

uint64_t sub_1004210AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t DOCSourceByType.regularSources.getter(unint64_t a1)
{
  return sub_1004210E8(a1, 0);
}

unint64_t DOCSourceByType.sharedSources.getter(unint64_t a1)
{
  return sub_1004210E8(a1, 1);
}

unint64_t sub_1004210E8(unint64_t result, char a2)
{
  if (!*(void *)(result + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t result = sub_10004F108(a2);
  if ((v2 & 1) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }

  return swift_bridgeObjectRetain();
}

char *DOCSourceOrderObserver.__allocating_init(configuration:sourceObserver:updateBlock:)(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(a1, a2, a3, a4);
}

id sub_100421264(void *a1, uint64_t a2)
{
  type metadata accessor for DOCSharedServerSource();
  uint64_t v6 = swift_dynamicCastClass();
  uint64_t v7 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v2 + 16);
  if (!*(void *)(v8 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  LOBYTE(v6) = v6 != 0;
  unint64_t v9 = sub_10004F108(v6);
  if ((v10 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  unint64_t v19 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
  swift_bridgeObjectRetain_n();
  id v3 = a1;
  unint64_t v11 = sub_100421810(v19, v3);
  LOBYTE(a1) = v12;
  swift_bridgeObjectRelease();

  if (a1)
  {
    swift_bridgeObjectRelease();
    return (id)((a1 & 1) == 0);
  }

  if (!(v19 >> 62))
  {
    uint64_t v13 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = v3;
    if (v13 >= a2) {
      goto LABEL_6;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_12:
  id v16 = v3;
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  id result = (id)swift_bridgeObjectRelease();
  if (v17 < a2) {
    goto LABEL_13;
  }
LABEL_6:
  if ((a2 & 0x8000000000000000) == 0)
  {
    sub_100515118(a2, a2, (uint64_t)v3);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_1003E0554(v19, v6, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v18;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return (id)((a1 & 1) == 0);
  }
LABEL_14:
  __break(1u);
  return result;
}

id DOCSourceOrderObserver.__deallocating_deinit()
{
  uint64_t v1 = v0;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserverToken]) {
    [v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver] removeSubscriberForToken:];
  }
  uint64_t v2 = OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation;
  id v3 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceOrderObservation];
  if (v3)
  {
    id v4 = v3;
    dispatch thunk of NSKeyValueObservation.invalidate()();

    id v3 = *(void **)&v1[v2];
  }
  *(void *)&v1[v2] = 0;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DOCSourceOrderObserver();
  return [super dealloc];
}

void sub_100421590(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 DOCSourceOrderKey];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a2 = v5;
}

void sub_1004215F8(void *a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*a1) {
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else {
    v3.super.Class isa = 0;
  }
  Class isa = v3.super.isa;
  [v2 setDOCSourceOrderKey:];
}

void DOCSourceOrderObserver.init()()
{
}

uint64_t sub_1004216D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

ValueMetadata *type metadata accessor for DOCSourceByType()
{
  return &type metadata for DOCSourceByType;
}

unsigned char *storeEnumTagSinglePayload for DOCSourceType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004217E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100421810(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v5)
  {
    uint64_t v6 = 0;
    uint64_t v18 = v3;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 identifier:v18];
      id v10 = [a2 identifier];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
      if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
      {

        swift_bridgeObjectRelease_n();
        return v6;
      }
      uint64_t v3 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3) {
        return v6;
      }
      uint64_t v16 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      ++v6;
      if (v16 == v5) {
        return 0;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1004219C0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id DOCInlineRenameOverlayView.hitTest(_:with:)(uint64_t a1, CGFloat a2, CGFloat a3)
{
  unsigned int v4 = v3;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong
    || (id v9 = (void *)Strong,
        id v10 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView),
        id v11 = v10,
        v9,
        !v10))
  {
    v33.receiver = v4;
    v33.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
    return [super hitTest:a1 withEvent:a2];
  }
  sub_100421CF0(v4);
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;
  id v20 = sub_1002A90B0();
  id v21 = [v20 superview];

  if (v21)
  {
    id v22 = sub_1002A90B0();
    [v4 convertPoint:v22 toCoordinateSpace:a2];
    double v24 = v23;
    double v26 = v25;

    id v27 = sub_1002A90B0();
    id v28 = [v27 hitTest:a1 withEvent:v24 v26];

    if (v28)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
      if ([v28 isKindOfClass:swift_getObjCClassFromMetadata()])
      {

        return v28;
      }
    }
  }
  [v4 convertPoint:v11 toCoordinateSpace:a2, a3];
  id v29 = [v11 hitTest:a1];
  if (v29)
  {
    id v28 = v29;
  }
  else
  {
    v35.origin.x = v13;
    v35.origin.y = v15;
    v35.size.width = v17;
    v35.size.height = v19;
    v34.x = a2;
    v34.y = a3;
    BOOL v30 = CGRectContainsPoint(v35, v34);

    if (v30)
    {
      return 0;
    }
    else
    {
      id v31 = v4;
      return v4;
    }
  }
  return v28;
}

uint64_t type metadata accessor for DOCInlineRenameOverlayView()
{
  return self;
}

void sub_100421CF0(void *a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    unsigned int v4 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    id v5 = v4;

    if (v4)
    {
      [v5 frame:0.0, 0.0];
      double v7 = v6;
      double v9 = v8;
      double v11 = v10;
      double v13 = v12;
      double v14 = (void *)swift_unknownObjectWeakLoadStrong();
      [a1 convertRect:v14 fromView:v7];
      double v16 = v15;
      double v18 = v17;
      double v20 = v19;
      double v22 = v21;

      sub_10009D0D0(v16, v18, v20, v22, -5.0, -5.0);
    }
  }
}

id DOCInlineRenameOverlayView.init(frame:)(double a1, double a2, double a3, double a4)
{
  swift_unknownObjectWeakInit();
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id DOCInlineRenameOverlayView.init(coder:)(void *a1)
{
  swift_unknownObjectWeakInit();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  [super initWithCoder:a1];

  return v3;
}

id DOCInlineRenameOverlayView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInlineRenameOverlayView();
  return [super dealloc];
}

uint64_t sub_100422020()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  objc_super v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_retain_n();
  double v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  int v8 = v7;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v24 = v22;
    *(_DWORD *)uint64_t v9 = 136315650;
    int v21 = v8;
    uint64_t v23 = sub_10009B0E4(0x4E746E6572727563, 0xEB0000000065646FLL, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2080;
    id v10 = [*(id *)(v1 + 64) filename];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v20 = v2;
    uint64_t v12 = v11;
    unint64_t v14 = v13;

    uint64_t v23 = sub_10009B0E4(v12, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v15 = DOCNode.nodeDescription.getter();
    unint64_t v17 = v16;
    swift_unknownObjectRelease();
    uint64_t v23 = sub_10009B0E4(v15, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, (os_log_type_t)v21, "%s fileName: %s node: %s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v20);
  }
  else
  {

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_100422320(id *a1)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_type_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  id v10 = (char *)&v63 - v9;
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v63 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v63 - v14;
  static Logger.Rename.getter();
  swift_retain_n();
  unint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v70 = v4;
  char v66 = v13;
  if (v18)
  {
    uint64_t v19 = swift_slowAlloc();
    long long v67 = v7;
    uint64_t v20 = v19;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v72 = v64;
    *(_DWORD *)uint64_t v20 = 136315650;
    uint64_t Strong = sub_10009B0E4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
    uint64_t v65 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2080;
    id v21 = [v1[8] filename];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v68 = v3;
    uint64_t v23 = v22;
    unint64_t v25 = v24;

    uint64_t Strong = sub_10009B0E4(v23, v25, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2080;
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v26 = DOCNode.nodeDescription.getter();
    unint64_t v28 = v27;
    swift_unknownObjectRelease();
    uint64_t v29 = v26;
    uint64_t v2 = v1;
    uint64_t Strong = sub_10009B0E4(v29, v28, &v72);
    id v10 = v65;
    uint64_t v4 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    uint64_t v3 = v68;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s didSet fileName: %s node: %s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    os_log_type_t v7 = v67;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  BOOL v30 = *(char **)(v4 + 8);
  ((void (*)(char *, uint64_t))v30)(v15, v3);
  id v31 = v69;
  if (v69 && (uint64_t v32 = swift_unknownObjectWeakLoadStrong()) != 0)
  {
    objc_super v33 = (void *)v32;
    uint64_t v69 = v2;
    type metadata accessor for DOCItemCollectionCell();
    CGPoint v34 = v31;
    if (static NSObject.== infix(_:_:)())
    {
      static Logger.Rename.getter();
      CGRect v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v65 = v10;
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        uint64_t v72 = swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 136315138;
        uint64_t Strong = sub_10009B0E4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "%s current item cell and previous cell are the same. No need to re-host renaming between cells. Resuming first responder if needed.", v37, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v30)(v65, v3);
      }
      else
      {

        ((void (*)(char *, uint64_t))v30)(v10, v3);
      }
      sub_100423564();
    }
    else
    {
      unint64_t v50 = v66;
      static Logger.Rename.getter();
      uint64_t v51 = v34;
      id v52 = v33;
      id v53 = v51;
      id v54 = v52;
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        uint64_t v58 = swift_slowAlloc();
        uint64_t v65 = v30;
        uint64_t v72 = v58;
        *(_DWORD *)uint64_t v57 = 136315650;
        uint64_t Strong = sub_10009B0E4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 12) = 2080;
        uint64_t Strong = (uint64_t)v53;
        uint64_t v68 = v3;
        uint64_t v59 = String.init<A>(describing:)();
        uint64_t Strong = sub_10009B0E4(v59, v60, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 22) = 2080;
        uint64_t Strong = (uint64_t)v54;
        uint64_t v61 = String.init<A>(describing:)();
        uint64_t Strong = sub_10009B0E4(v61, v62, &v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "%s moving rename from: %s to: %s", (uint8_t *)v57, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        ((void (*)(char *, uint64_t))v65)(v50, v68);
      }
      else
      {

        ((void (*)(char *, uint64_t))v30)(v50, v3);
      }
      sub_100423C00(v53, v54);
    }
  }
  else
  {
    static Logger.Rename.getter();
    swift_retain_n();
    id v38 = v31;
    double v39 = Logger.logObject.getter();
    uint64_t v40 = v7;
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v39, v41))
    {
      uint64_t v42 = swift_slowAlloc();
      long long v67 = v40;
      uint64_t v43 = v42;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v65 = v30;
      uint64_t v72 = v44;
      *(_DWORD *)uint64_t v43 = 136315650;
      uint64_t Strong = sub_10009B0E4(0x49746E6572727563, 0xEF6C6C65436D6574, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v43 + 12) = 2080;
      uint64_t Strong = (uint64_t)v31;
      uint64_t v45 = v38;
      sub_1000CBE70((uint64_t *)&unk_100715418);
      uint64_t v46 = String.init<A>(describing:)();
      uint64_t v68 = v3;
      uint64_t Strong = sub_10009B0E4(v46, v47, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2080;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      uint64_t v48 = String.init<A>(describing:)();
      uint64_t Strong = sub_10009B0E4(v48, v49, &v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v41, "%s oldValue: %s or currentItemCell: %s were nil. Not updating renaming session.", (uint8_t *)v43, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(char *, uint64_t))v65)(v67, v68);
    }
    else
    {

      swift_release_n();
      ((void (*)(char *, uint64_t))v30)(v40, v3);
    }
  }
}

uint64_t sub_100422CDC()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    uint64_t v2 = v0;
    sub_1000CBE70(&qword_100715410);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)(v2 + 88) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t *NSNotificationName.DOCInlineRenameControllerWillBeginRename.unsafeMutableAddressor()
{
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  return &static NSNotificationName.DOCInlineRenameControllerWillBeginRename;
}

void sub_100422DAC(uint64_t a1)
{
  Notification.object.getter();
  sub_1000CBE70((uint64_t *)&unk_100705D60);
  if ((swift_dynamicCast() & 1) == 0 || (swift_unknownObjectRelease(), v2 != a1)) {
    sub_100425850();
  }
}

void sub_100422E2C()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (v2)
    {
      id v3 = [self defaultCenter];
      if (qword_1007051C8 != -1) {
        swift_once();
      }
      [v3 postNotificationName:static NSNotificationName.DOCInlineRenameControllerWillBeginRename object:v0];

      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v4 = *(void *)(v0 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v4 + 32))(ObjectType, v4);
        swift_unknownObjectRelease();
      }
      uint64_t v6 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      os_log_type_t v7 = sub_100363A04((uint64_t)sub_100427AF4, v6, (uint64_t)sub_100427AF4, v6);
      swift_release_n();
      *(void *)(v1 + 80) = v7;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))((swift_isaMask & *Strong) + 0x3C0))(v1);
      uint64_t v8 = *(void **)(v1 + 32);
      if (v8)
      {
        Class v9 = v8;
        id v10 = [Strong window];
        if (v10)
        {
          uint64_t v11 = v10;
          [v10 addSubview:v9];
          Class isa = (Class)(id)DOCConstraintsToResizeWithReferenceView();
          if (!isa)
          {
            sub_10009E6C4(0, (unint64_t *)&unk_100706720);
            static Array._unconditionallyBridgeFromObjectiveC(_:)();
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }
          [self activateConstraints:isa];

          Class v9 = isa;
        }
      }
      sub_100425CD4();
    }
  }
}

void sub_100423100()
{
  uint64_t v0 = (void *)type metadata accessor for Logger();
  uint64_t v1 = *(v0 - 1);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v26 - v5;
  static Logger.Rename.getter();
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v0;
    id v10 = v4;
    uint64_t v11 = v1;
    uint64_t v12 = (uint8_t *)v9;
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v33 = sub_10009B0E4(0x6E65526573756170, 0xED00002928656D61, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s if needed", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = v11;
    uint64_t v4 = v10;
    uint64_t v0 = v32;
    swift_slowDealloc();
  }

  unint64_t v13 = *(void (**)(char *, void *))(v1 + 8);
  v13(v6, v0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v15 = (void *)Strong;
    unint64_t v16 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v16)
    {
      id v17 = v16;
      if ([v17 isFirstResponder])
      {
        static Logger.Rename.getter();
        BOOL v18 = v17;
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.debug.getter();
        int v21 = v20;
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v22 = swift_slowAlloc();
          uint64_t v32 = v18;
          uint64_t v23 = v22;
          uint64_t v29 = (void *)swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          uint64_t v34 = v31;
          *(_DWORD *)uint64_t v23 = 136315394;
          os_log_t v28 = v19;
          uint64_t v33 = sub_10009B0E4(0x6E65526573756170, 0xED00002928656D61, &v34);
          int v27 = v21;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v23 + 12) = 2112;
          v26[1] = v23 + 14;
          uint64_t v30 = v1;
          uint64_t v33 = (uint64_t)v32;
          unint64_t v24 = v32;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v29 = v16;

          os_log_t v25 = v28;
          _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v27, "%s resigning: %@ first responder.", (uint8_t *)v23, 0x16u);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          BOOL v18 = v32;
          swift_slowDealloc();
        }
        else
        {
        }
        v13(v4, v0);
        [v18 resignFirstResponder];
      }
    }
    else
    {
      id v17 = (id)Strong;
    }
  }
}

void sub_100423564()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  unint64_t v47 = &v40[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __chkstk_darwin(v4);
  os_log_type_t v8 = &v40[-v7];
  __chkstk_darwin(v6);
  id v10 = &v40[-v9];
  static Logger.Rename.getter();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v46 = v1;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v48 = sub_10009B0E4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s if needed", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v15(v10, v2);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = (void *)Strong;
    BOOL v18 = *(void **)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v18)
    {
      id v19 = v18;
      if ([v19 isFirstResponder])
      {

        return;
      }
      static Logger.Rename.getter();
      id v20 = v19;
      int v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.debug.getter();
      int v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        uint64_t v44 = swift_slowAlloc();
        uint64_t v49 = v44;
        *(_DWORD *)uint64_t v24 = 136315394;
        uint64_t v45 = (void (*)(unsigned char *, uint64_t))v2;
        uint64_t v46 = v3;
        uint64_t v48 = sub_10009B0E4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v24 + 12) = 2112;
        uint64_t v43 = v8;
        uint64_t v48 = (uint64_t)v20;
        id v25 = v20;
        int v41 = v23;
        uint64_t v26 = v21;
        id v27 = v25;
        uint64_t v2 = (uint64_t)v45;
        uint64_t v3 = v46;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v42 = v18;

        _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v41, "%s setting: %@ to first responder.", (uint8_t *)v24, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        os_log_t v28 = v43;
      }
      else
      {

        os_log_t v28 = v8;
      }
      v15(v28, v2);
      id v29 = [v20 window];
      if (v29)
      {
        uint64_t v30 = v29;
        id v31 = [v29 windowScene];
        if (v31)
        {
          uint64_t v32 = v31;
          id v33 = [v31 focusSystem];

          if (v33)
          {

            if ([v30 isFocused])
            {
              [v20 becomeFirstResponder];
            }
            else
            {
              uint64_t v34 = v20;
              CGRect v35 = v47;
              static Logger.Rename.getter();
              os_log_type_t v36 = Logger.logObject.getter();
              os_log_type_t v37 = static os_log_type_t.debug.getter();
              if (os_log_type_enabled(v36, v37))
              {
                uint64_t v45 = v15;
                id v38 = (uint8_t *)swift_slowAlloc();
                uint64_t v39 = swift_slowAlloc();
                uint64_t v46 = v3;
                uint64_t v49 = v39;
                *(_DWORD *)id v38 = 136315138;
                uint64_t v48 = sub_10009B0E4(0x6552656D75736572, 0xEE002928656D616ELL, &v49);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s skipping first responder because window isn't key", v38, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                v45(v47, v2);
              }
              else
              {

                v15(v35, v2);
              }
            }
            return;
          }
        }
      }
      [v20 becomeFirstResponder];
    }
  }
}

void sub_100423C00(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  id v10 = a1;
  id v11 = a2;
  os_log_type_t v12 = v10;
  uint64_t v13 = v11;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v32 = v3;
    uint64_t v17 = v16;
    BOOL v18 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v34 = v29;
    *(_DWORD *)uint64_t v17 = 136315650;
    uint64_t v31 = v6;
    uint64_t v33 = sub_10009B0E4(0xD000000000000014, 0x80000001005F39F0, &v34);
    uint64_t v30 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2112;
    uint64_t v33 = (uint64_t)v12;
    id v19 = v12;
    os_log_t v28 = v14;
    id v20 = v13;
    id v21 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *BOOL v18 = v12;

    *(_WORD *)(v17 + 22) = 2112;
    uint64_t v33 = (uint64_t)v20;
    id v22 = v20;
    uint64_t v13 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v18[1] = v20;

    os_log_t v23 = v28;
    _os_log_impl((void *)&_mh_execute_header, v28, v15, "%s from: %@, to: %@", (uint8_t *)v17, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v3 = v32;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*((unsigned char *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming) == 1)
  {
    uint64_t v24 = *(void **)((char *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView);
    if (v24)
    {
      *(void *)((char *)v12 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameController) = 0;
      id v25 = v24;
      swift_release();
      (*(void (**)(void, void))((swift_isaMask & *v12) + 0x3C8))(0, 0);
      (*(void (**)(id))((swift_isaMask & *v13) + 0x3E0))(v25);
      (*(void (**)(uint64_t))((swift_isaMask & *v13) + 0x3C0))(v3);
      if (*(void *)(v3 + 32))
      {
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakAssign();

        id v25 = (id)Strong;
      }
    }
  }
}

void sub_100424068(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    id v10 = (char *)(*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();

    if (v10)
    {
      id v11 = &v10[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node];
      swift_beginAccess();
      uint64_t v12 = *(void *)v11;
      if (v12 && a2)
      {
        *(void *)(v4 + 48) = a1;
        *(void *)(v4 + 56) = a2;
        swift_bridgeObjectRetain_n();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        swift_getObjectType();
        uint64_t v13 = swift_allocObject();
        swift_weakInit();
        uint64_t v14 = swift_allocObject();
        *(void *)(v14 + 16) = v13;
        *(void *)(v14 + 24) = v10;
        *(void *)(v14 + 32) = v12;
        *(unsigned char *)(v14 + 40) = a3 & 1;
        *(void *)(v14 + 48) = a1;
        *(void *)(v14 + 56) = a2;
        swift_unknownObjectRetain();
        swift_retain();
        os_log_type_t v15 = v10;
        DOCNode.fpfs_fetchFPItem(completion:)();

        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
      }
    }
  }
}

void sub_100424220(void *a1, uint64_t a2, void *a3, uint64_t a4, int a5, void *a6, uint64_t a7)
{
  id v36 = a6;
  int v35 = a5;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  os_log_type_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v33 = v17;
    uint64_t v34 = v18;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v21 = a3;
    id v22 = a1;
    uint64_t v32 = v13;
    uint64_t v23 = v12;
    uint64_t v24 = a7;
    id v25 = v22;
    uint64_t v31 = static OS_dispatch_queue.main.getter();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a2;
    *(void *)(v26 + 24) = a3;
    *(void *)(v26 + 32) = a4;
    *(unsigned char *)(v26 + 40) = v35 & 1;
    id v27 = v36;
    *(void *)(v26 + 48) = v25;
    *(void *)(v26 + 56) = v27;
    *(void *)(v26 + 64) = v24;
    aBlock[4] = sub_100427A3C;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006AB620;
    os_log_t v28 = _Block_copy(aBlock);
    id v36 = v25;
    swift_retain();
    id v29 = v21;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v30 = (void *)v31;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v23);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v34);
  }
}

void *sub_10042452C(uint64_t a1, uint64_t a2, void *a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for UTType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = result;
    id result = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
    if (result)
    {
      if ([result shouldShowFileExtensions]) {
        goto LABEL_7;
      }
      uint64_t v23 = a5;
      if (qword_1007051D0 != -1) {
        swift_once();
      }
      id v19 = [a3 contentType:v23];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      char v20 = sub_1000A3170();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      a5 = v23;
      if (v20) {
LABEL_7:
      }
        a4 = 1;
      id v21 = (void *)swift_allocObject();
      v21[2] = v18;
      v21[3] = a6;
      v21[4] = a7;
      v21[5] = a3;
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = a3;
      swift_unknownObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_100425ED0(a5, a6, a7, a4 & 1, (void (*)(void))sub_100427A9C, (uint64_t)v21, (void (*)(id, uint64_t))sub_100427AEC, v22);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1004247A0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, NSObject *a5, NSObject *a6, void *a7)
{
  os_log_t v66 = a5;
  os_log_t v67 = a6;
  unsigned int v68 = a3;
  uint64_t v69 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v64 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin(v19);
  id v21 = (char *)&v64 - v20;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = Strong;
    uint64_t v65 = (*(uint64_t (**)(void))((swift_isaMask & *Strong) + 0x1F8))();
    if (v65)
    {
      uint64_t v24 = v68;
      if ((v68 & 0x100) != 0)
      {
        swift_errorRetain();
        static Logger.Rename.getter();
        swift_errorRetain();
        swift_errorRetain();
        os_log_type_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = swift_slowAlloc();
          os_log_t v67 = (os_log_t)swift_slowAlloc();
          os_log_t v71 = v67;
          *(_DWORD *)uint64_t v39 = 136315394;
          os_log_t v66 = v37;
          uint64_t v70 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, (uint64_t *)&v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v39 + 12) = 2080;
          swift_getErrorValue();
          uint64_t v40 = Error.localizedDescription.getter();
          uint64_t v70 = sub_10009B0E4(v40, v41, (uint64_t *)&v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100312438(a1, a2, v68, 1);
          sub_100312438(a1, a2, v68, 1);
          os_log_t v42 = v66;
          _os_log_impl((void *)&_mh_execute_header, v66, v38, "%s: renaming failed with error: %s", (uint8_t *)v39, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v24 = v68;
          swift_slowDealloc();

          sub_100312438(a1, a2, v24, 1);
        }
        else
        {
          sub_100312438(a1, a2, v24, 1);
          sub_100312438(a1, a2, v24, 1);
          swift_errorRelease();
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v69);
      }
      else
      {
        if (*((unsigned char *)v23 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming))
        {
          static Logger.Rename.getter();
          id v25 = Logger.logObject.getter();
          os_log_type_t v26 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v25, v26))
          {
            id v27 = (uint8_t *)swift_slowAlloc();
            os_log_t v71 = (os_log_t)swift_slowAlloc();
            *(_DWORD *)id v27 = 136315138;
            uint64_t v70 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, (uint64_t *)&v71);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: renaming ended with success", v27, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v69);
          os_log_t v28 = (char *)v65;
          if (v68)
          {
            NSString v52 = String._bridgeToObjectiveC()();
            id v53 = [v52 stringByDeletingPathExtension];

            uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v56 = v55;

            uint64_t v57 = (uint64_t *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
            uint64_t v33 = *(void *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle];
            uint64_t v30 = *(void *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8];
            *uint64_t v57 = v54;
            v57[1] = v56;
          }
          else
          {
            id v29 = (void *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
            uint64_t v31 = *(void *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle);
            uint64_t v30 = *(void *)(v65 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
            os_log_t v32 = v67;
            *id v29 = v66;
            v29[1] = v32;
            swift_bridgeObjectRetain();
            uint64_t v33 = v31;
          }
          sub_10056F320(v33, v30);
          swift_bridgeObjectRelease();
          id v58 = [a7 filename];
          if (!v58)
          {
            __break(1u);
            return;
          }
          uint64_t v59 = v58;
          id v60 = [v58 stringByDeletingPathExtension];

          uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v62 = v61;

          uint64_t v63 = (uint64_t *)&v28[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameOldTitle];
          *uint64_t v63 = v24;
          v63[1] = v62;
          swift_bridgeObjectRelease();
          LOWORD(v24) = v68;
          goto LABEL_25;
        }
        static Logger.Rename.getter();
        swift_unknownObjectRetain_n();
        uint64_t v43 = Logger.logObject.getter();
        os_log_type_t v44 = static os_log_type_t.info.getter();
        int v45 = v44;
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v46 = swift_slowAlloc();
          LODWORD(v67) = v45;
          uint64_t v47 = v46;
          os_log_t v66 = (os_log_t)swift_slowAlloc();
          os_log_t v71 = v66;
          *(_DWORD *)uint64_t v47 = 136315394;
          uint64_t v70 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, (uint64_t *)&v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v47 + 12) = 2080;
          id v48 = [a7 description:v47 + 14];
          uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v51 = v50;

          uint64_t v70 = sub_10009B0E4(v49, v51, (uint64_t *)&v71);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v67, "%s: renaming for %s ended with success but cell was not being renamed", (uint8_t *)v47, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v69);
        LOWORD(v24) = v68;
      }
      os_log_t v28 = (char *)v65;
LABEL_25:
      (*(void (**)(BOOL, void))((swift_isaMask & *v23) + 0x3C8))((v24 & 0x100) == 0, 0);

      return;
    }
  }
  static Logger.Rename.getter();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v34, v35))
  {
    id v36 = (uint8_t *)swift_slowAlloc();
    os_log_t v71 = (os_log_t)swift_slowAlloc();
    *(_DWORD *)id v36 = 136315138;
    uint64_t v70 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, (uint64_t *)&v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: no cell or cell content. Bailing on rename completion handler.", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v69);
}

uint64_t sub_1004250BC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v51[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v51[-v11];
  __chkstk_darwin(v13);
  uint64_t v15 = &v51[-v14];
  if (a2)
  {
    swift_errorRetain();
    static Logger.Rename.getter();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v19 = 136315650;
      int v52 = v18;
      uint64_t v56 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2080;
      id v20 = [a3 description];
      uint64_t v55 = v7;
      id v21 = v20;
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v6;
      unint64_t v24 = v23;

      uint64_t v56 = sub_10009B0E4(v22, v24, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v25 = Error.localizedDescription.getter();
      uint64_t v56 = sub_10009B0E4(v25, v26, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v52, "%s: finished block has been called for renaming %s with error: %s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v15, v54);
    }
    else
    {
      swift_errorRelease();
      swift_unknownObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v15, v6);
    }
  }
  else if (a1)
  {
    id v28 = a1;
    static Logger.Rename.getter();
    swift_unknownObjectRetain_n();
    id v29 = v28;
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.info.getter();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      int v52 = v32;
      uint64_t v34 = v33;
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v55 = v7;
      uint64_t v56 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2080;
      id v35 = [a3 description];
      uint64_t v54 = v6;
      id v36 = v35;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;

      uint64_t v56 = sub_10009B0E4(v37, v39, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 22) = 2080;
      id v40 = [v29 description];
      uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      uint64_t v56 = sub_10009B0E4(v41, v43, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v52, "%s: finished block has been called for renaming %s with renamed item: %s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v9, v54);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  else
  {
    static Logger.Rename.getter();
    swift_unknownObjectRetain_n();
    os_log_type_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v46 = 136315394;
      uint64_t v55 = v7;
      uint64_t v56 = sub_10009B0E4(0xD00000000000002ELL, 0x80000001005F39C0, &v57);
      uint64_t v54 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2080;
      id v47 = [a3 description];
      uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v50 = v49;

      uint64_t v56 = sub_10009B0E4(v48, v50, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "%s: finished block has been called for renaming %s without FPItem", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v55 + 8))(v12, v54);
    }
    else
    {

      swift_unknownObjectRelease_n();
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v12, v6);
    }
  }
}

void sub_100425850()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v10 = sub_10009B0E4(0x65526C65636E6163, 0xEE002928656D616ELL, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (v9) {
      (*(void (**)(void, void))((swift_isaMask & *v8) + 0x3C8))(0, 0);
    }
  }
}

uint64_t sub_100425A9C(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    int v16 = (int)v3;
    uint64_t v3 = (uint8_t *)v10;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v17 = sub_10009B0E4(0xD000000000000012, 0x80000001005DD430, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v3) = v16;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = *(void **)(v2 + 32);
  if (v11) {
    [v11 removeFromSuperview];
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v13 + 40))(v3 & 1, ObjectType, v13);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100425CD4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v11 = (char *)Strong;
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectRelease();
  if (v2)
  {
    if ((*(unsigned char *)(v0 + 40) & 1) != 0
      || (id v3 = [self currentDevice],
          int IsHardwareKeyboardAttached = GSEventIsHardwareKeyboardAttached(),
          v3,
          IsHardwareKeyboardAttached))
    {
      uint64_t v5 = v11;
      uint64_t v6 = *(void **)&v11[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
      if (v6)
      {
        uint64_t v7 = *(char **)(v0 + 64);
        swift_unknownObjectRetain();
        id v8 = v6;
        sub_1002A8D10(v7);
LABEL_11:
        swift_unknownObjectRelease();

        uint64_t v5 = v8;
      }
    }
    else
    {
      uint64_t v5 = v11;
      os_log_type_t v9 = *(void **)&v11[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
      if (v9)
      {
        uint64_t v10 = *(char **)(v0 + 64);
        swift_unknownObjectRetain();
        id v8 = v9;
        sub_1002A8EA8(v10);
        goto LABEL_11;
      }
    }
  }
  else
  {
    uint64_t v5 = v11;
  }
}

uint64_t DOCInlineRenameController.deinit()
{
  sub_100426400();
  swift_beginAccess();
  if (*(double *)(v0 + 96) != 0.0) {
    sub_100426F28();
  }
  sub_10003A094(v0 + 16);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DOCInlineRenameController.__deallocating_deinit()
{
  DOCInlineRenameController.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_100425ED0(void *a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t a6, void (*a7)(id, uint64_t), uint64_t a8)
{
  if (v8[19])
  {
    sub_1002EEF3C();
    swift_allocError();
    *uint64_t v14 = 1;
    a5();
    swift_errorRelease();
    uint64_t v15 = swift_allocError();
    *int v16 = 1;
LABEL_11:
    a7(a1, v15);
    return swift_errorRelease();
  }
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v19 = v8[3],
        uint64_t ObjectType = swift_getObjectType(),
        id v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(ObjectType, v19),
        swift_unknownObjectRelease(),
        !v21))
  {
    sub_1002EEF3C();
    swift_allocError();
    *id v28 = 0;
    a5();
    swift_errorRelease();
    uint64_t v15 = swift_allocError();
    *id v29 = 0;
    goto LABEL_11;
  }
  type metadata accessor for DOCItemRenameOperation();
  uint64_t v22 = (void *)swift_allocObject();
  v22[3] = v21;
  v22[4] = 0;
  void v22[2] = a1;
  v8[19] = v22;
  id v23 = a1;
  id v24 = v21;
  uint64_t result = swift_release();
  uint64_t v26 = v8[19];
  if (v26 && (*(void *)(v26 + 32) = v8[18], swift_retain(), result = swift_release(), (id v27 = (id *)v8[19]) != 0))
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10055FC64(a2, a3, a4 & 1, a7, a8, v27, (uint64_t)v8, (uint64_t (*)(void, void, void))a5, a6);

    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100426164(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t (*a5)(void, void, void), uint64_t a6)
{
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v22 = a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v23 = a6;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    id v24 = a5;
    uint64_t v27 = v19;
    uint64_t v21 = a4;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v26 = sub_10009B0E4(0xD000000000000049, 0x80000001005F3970, &v27);
    a4 = v21;
    a2 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s performItemRename completed", v18, 0xCu);
    swift_arrayDestroy();
    a5 = v24;
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  *(void *)(a4 + 152) = 0;
  swift_release();
  return a5(a1, a2, a3 & 0x1FF);
}

uint64_t sub_1004263A0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100426548();
    return swift_release();
  }
  return result;
}

uint64_t sub_100426400()
{
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (!v2) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v2) {
      goto LABEL_10;
    }
  }
  uint64_t result = self;
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = (void *)result;
  uint64_t v5 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v6 = *(void *)(v1 + 8 * v5 + 32);
      swift_unknownObjectRetain();
    }
    ++v5;
    id v7 = [v4 defaultCenter];
    [v7 removeObserver:v6];
    swift_unknownObjectRelease();
  }
  while (v2 != v5);
LABEL_10:
  swift_bridgeObjectRelease_n();
  *(void *)(v0 + 80) = _swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

uint64_t sub_100426548()
{
  uint64_t v1 = v0;
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v3 = Strong[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];

    char v4 = v3 ^ 1;
  }
  else
  {
    char v4 = 0;
  }
  uint64_t v5 = Notification.userInfo.getter();
  if (!v5)
  {
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_15:
    sub_10006273C((uint64_t)&v19);
    int8x16_t v13 = 0uLL;
    char v15 = 1;
    int8x16_t v14 = 0uLL;
    goto LABEL_16;
  }
  uint64_t v6 = v5;
  *(void *)&long long v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *((void *)&v19 + 1) = v7;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v6 + 16) && (unint64_t v8 = sub_10008E070((uint64_t)v18), (v9 & 1) != 0))
  {
    sub_10009B208(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    goto LABEL_15;
  }
  type metadata accessor for CGRect(0);
  int v10 = swift_dynamicCast();
  if (v10) {
    unint64_t v11 = -1;
  }
  else {
    unint64_t v11 = 0;
  }
  int8x16_t v12 = (int8x16_t)vdupq_n_s64(v11);
  int8x16_t v13 = vandq_s8(v18[0], v12);
  int8x16_t v14 = vandq_s8(v18[1], v12);
  char v15 = v10 ^ 1;
LABEL_16:
  *(int8x16_t *)(v1 + 104) = v13;
  *(int8x16_t *)(v1 + 120) = v14;
  *(unsigned char *)(v1 + 136) = v15;
  uint64_t v16 = Notification.userInfo.getter();
  sub_1004269D4(v16, v4 & 1);
  return swift_bridgeObjectRelease();
}

void sub_1004266C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (Strong[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming] == 1)
    {
      int8x16_t v14 = Strong;
      sub_1002D1698();
      uint64_t v7 = v14;

      return;
    }
  }
  static Logger.Rename.getter();
  swift_retain_n();
  unint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v15 = sub_10009B0E4(0x764F706154646964, 0xEF292879616C7265, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v15 = v1;
    type metadata accessor for DOCInlineRenameController();
    swift_retain();
    uint64_t v11 = String.init<A>(describing:)();
    uint64_t v15 = sub_10009B0E4(v11, v12, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s inline rename overlay view tapped but the rename text view was missing. Cancelling rename. Self: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100425A9C(0);
}

void sub_1004269D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v10 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
    if (v12)
    {
      id v62 = v12;
      id v13 = [v12 window];

      if (v13)
      {
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10))
        {
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_beginAccess();
          [v62 doc_adjustForAutomaticKeyboardInfo:isa animated:1 lastAdjustment:v3 + 96];
          swift_endAccess();
        }
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v16 = (char *)Strong;
          [v62 bounds];
          double v18 = v17;
          double v20 = v19;
          double v22 = v21;
          double v24 = v23;
          [v62 adjustedContentInset];
          v70.origin.x = sub_10009D0D0(v18, v20, v22, v24, v25, v26);
          double Height = CGRectGetHeight(v70);
          [v16 frame];
          if (Height < CGRectGetHeight(v71)
            && (uint64_t v28 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView,
                (id v29 = *(void **)&v16[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView]) != 0)
            && (a2 & 1) == 0)
          {
            id v40 = v29;
            [v40 bounds];
            os_log_type_t v45 = *(void **)&v16[v28];
            if (!v45)
            {
              __break(1u);
              return;
            }
            double v46 = v41;
            double v47 = v42;
            double v48 = v43;
            double v49 = v44;
            id v50 = v45;
            [v62 convertRect:v50 fromCoordinateSpace:v46, v47, v48, v49];
            double v52 = v51;
            double v54 = v53;
            double v56 = v55;
            double v58 = v57;

            double v65 = v52;
            double v66 = v54;
            double v67 = v56;
            double v68 = v58 + 5.0;
          }
          else
          {
            [v16 frame];
            double v65 = v30;
            double v66 = v31;
            double v67 = v32;
            double v68 = v33;
          }
          static Logger.Rename.getter();
          uint64_t v34 = Logger.logObject.getter();
          os_log_type_t v35 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v36 = swift_slowAlloc();
            uint64_t v60 = swift_slowAlloc();
            v64[0] = v60;
            *(_DWORD *)uint64_t v36 = 136315394;
            uint64_t v63 = sub_10009B0E4(0xD000000000000023, 0x80000001005F3940, v64);
            uint64_t v61 = v16;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v36 + 12) = 2080;
            uint64_t v37 = CGRect.debugDescription.getter();
            uint64_t v63 = sub_10009B0E4(v37, v38, v64);
            uint64_t v16 = v61;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s rename cell frame: %s", (uint8_t *)v36, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          swift_beginAccess();
          [v62 scrollRectToVisible:1 v65 v66 v67 v68];
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      else
      {
        swift_unknownObjectRelease();
        id v39 = v62;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void sub_100426F28()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v48[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    *(void *)&long long v46 = sub_10009B0E4(0xD000000000000019, 0x80000001005F3A10, v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s restoring scroll view's offset", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v9 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
    if (v11)
    {
      unint64_t v12 = v11;
      if ((*(unsigned char *)(v1 + 136) & 1) == 0)
      {
        CGFloat v13 = *(double *)(v1 + 120);
        v44[0] = *(void *)(v1 + 128);
        CGFloat v15 = *(double *)(v1 + 104);
        CGFloat v14 = *(double *)(v1 + 112);
        id v16 = [v11 window];
        if (v16)
        {
          id v17 = v16;
          id v18 = [v16 screen];
          [v18 bounds];
          CGFloat v20 = v19;
          CGFloat v22 = v21;
          CGFloat v24 = v23;
          CGFloat v26 = v25;
        }
        else
        {
          id v17 = [self mainScreen];
          [v17 bounds];
          CGFloat v20 = v27;
          CGFloat v22 = v28;
          CGFloat v24 = v29;
          CGFloat v26 = v30;
        }

        unint64_t v31 = sub_100494384((uint64_t)_swiftEmptyArrayStorage);
        *(void *)&long long v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *((void *)&v46 + 1) = v32;
        AnyHashable.init<A>(_:)();
        v49.origin.x = v20;
        v49.origin.y = v22;
        v49.size.width = v24;
        v49.size.height = v26;
        CGFloat MinX = CGRectGetMinX(v49);
        v50.origin.x = v20;
        v50.origin.y = v22;
        v50.size.width = v24;
        v50.size.height = v26;
        CGFloat Height = CGRectGetHeight(v50);
        v51.origin.x = v15;
        v51.origin.y = v14;
        v51.size.width = v13;
        CGFloat v35 = *(double *)v44;
        *(void *)&v51.size.height = v44[0];
        CGFloat Width = CGRectGetWidth(v51);
        v52.origin.x = v15;
        v52.origin.y = v14;
        v52.size.width = v13;
        v52.size.height = v35;
        CGFloat v37 = CGRectGetHeight(v52);
        type metadata accessor for CGRect(0);
        uint64_t v47 = v38;
        id v39 = (CGFloat *)swift_allocObject();
        *(void *)&long long v46 = v39;
        _OWORD v39[2] = MinX;
        v39[3] = Height;
        v39[4] = Width;
        v39[5] = v37;
        sub_1000A54B0(&v46, v45);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v44[1] = v31;
        sub_1003E0408(v45, (uint64_t)v48, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        sub_10008E17C((uint64_t)v48);
        if ((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9))
        {
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          [v12 doc_adjustForAutomaticKeyboardInfo:isa animated:1 lastAdjustment:v1 + 96];
          swift_endAccess();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          double v43 = Strong;
          [Strong frame];
          [v12 scrollRectToVisible:1 animated:YES];
        }
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

NSString sub_100427420()
{
  NSString result = String._bridgeToObjectiveC()();
  static NSNotificationName.DOCInlineRenameControllerWillBeginRename = (uint64_t)result;
  return result;
}

id static NSNotificationName.DOCInlineRenameControllerWillBeginRename.getter()
{
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)static NSNotificationName.DOCInlineRenameControllerWillBeginRename;

  return v0;
}

uint64_t type metadata accessor for DOCInlineRenameController()
{
  return self;
}

uint64_t sub_1004274D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(void *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 24) = &protocol witness table for DOCItemCollectionViewController;
  swift_unknownObjectWeakAssign();
  id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain();
  id v7 = [v6 initWithTarget:a4 action:"didTapOverlay"];
  id v8 = [objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  [v8 addGestureRecognizer:v7];
  uint64_t v10 = *(void **)(a4 + 32);
  *(void *)(a4 + 32) = v8;

  sub_100422CDC();
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  id v11 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10006273C((uint64_t)&v13);
  return a4;
}

uint64_t sub_100427710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(void *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 24) = &off_1006B7B00;
  swift_unknownObjectWeakAssign();
  id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain();
  id v7 = [v6 initWithTarget:a4 action:"didTapOverlay"];
  id v8 = [objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  [v8 addGestureRecognizer:v7];
  uint64_t v10 = *(void **)(a4 + 32);
  *(void *)(a4 + 32) = v8;

  sub_100422CDC();
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  id v11 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_10006273C((uint64_t)&v13);
  return a4;
}

uint64_t sub_100427948()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100427980()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1004279D0(void *a1)
{
  sub_100424220(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1004279E4()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void *sub_100427A3C()
{
  return sub_10042452C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_100427A54()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100427A9C(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_1004247A0(a1, a2, a3 & 0x1FF, *(void *)(v3 + 16), *(NSObject **)(v3 + 24), *(NSObject **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_100427AB4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100427AEC(void *a1, uint64_t a2)
{
  return sub_1004250BC(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100427AF4()
{
  return sub_1004263A0();
}

uint64_t sub_100427AFC()
{
  return _swift_deallocObject(v0, 48, 7);
}

BOOL sub_100427B1C(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[6];
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  void v13[6] = v3;
  v14[0] = v6;
  long long v8 = a2[2];
  long long v9 = a2[3];
  long long v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  long long v11 = a2[4];
  void v14[3] = v9;
  v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return sub_1004282A8((uint64_t)v13, (uint64_t)v14);
}

Swift::Int sub_100427B84()
{
  return Hasher._finalize()();
}

Swift::Int sub_100427BC8()
{
  return Hasher._finalize()();
}

void sub_100427C04()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v0[2];
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Swift::UInt64 v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v0[3];
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v0[5];
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v7;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v8;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  Hasher._combine(_:)(v11);
}

Swift::Int sub_100427CA8()
{
  Hasher.init(_seed:)();
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  Hasher._combine(_:)(v1);
  if ((v0[1] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v0[1];
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((v0[2] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v0[2];
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Swift::UInt64 v4 = v0[4];
  if ((v0[3] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = v0[3];
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v4;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  if ((v0[5] & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v0[5];
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v7;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v8;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  Hasher._combine(_:)(v11);
  return Hasher._finalize()();
}

BOOL sub_100427D84(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  v7[2] = a1[2];
  void v7[3] = v3;
  long long v4 = a2[1];
  v8[0] = *a2;
  v8[1] = v4;
  long long v5 = a2[3];
  uint64_t v8[2] = a2[2];
  v8[3] = v5;
  return sub_100428224((double *)v7, (double *)v8);
}

Swift::Int sub_100427DD8()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Swift::UInt64 v3 = v0[2];
  Swift::UInt64 v4 = v0[3];
  Swift::UInt64 v5 = v0[4];
  Swift::UInt64 v6 = v0[5];
  Swift::UInt64 v7 = v0[6];
  Swift::UInt64 v8 = v0[7];
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = v1;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v2;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v3;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  Hasher._combine(_:)(v11);
  if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v12 = v4;
  }
  else {
    Swift::UInt64 v12 = 0;
  }
  Hasher._combine(_:)(v12);
  if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v13 = v5;
  }
  else {
    Swift::UInt64 v13 = 0;
  }
  Hasher._combine(_:)(v13);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v14 = v6;
  }
  else {
    Swift::UInt64 v14 = 0;
  }
  Hasher._combine(_:)(v14);
  if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v15 = v7;
  }
  else {
    Swift::UInt64 v15 = 0;
  }
  Hasher._combine(_:)(v15);
  if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = v8;
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  Hasher._combine(_:)(v16);
  return Hasher._finalize()();
}

BOOL static DOCUniformHorizontalEdgeInsets.__derived_struct_equals(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  BOOL v6 = a1 == a4;
  if (a2 != a5) {
    BOOL v6 = 0;
  }
  return a3 == a6 && v6;
}

void DOCUniformHorizontalEdgeInsets.hash(into:)(double a1, double a2, double a3)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  Hasher._combine(_:)(v6);
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = *(void *)&a3;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  Hasher._combine(_:)(v7);
}

Swift::Int DOCUniformHorizontalEdgeInsets.hashValue.getter(double a1, double a2, double a3)
{
  return Hasher._finalize()();
}

Swift::Int sub_100427FA0()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  Hasher.init(_seed:)();
  DOCUniformHorizontalEdgeInsets.hash(into:)(v1, v2, v3);
  return Hasher._finalize()();
}

void sub_100428004()
{
  DOCUniformHorizontalEdgeInsets.hash(into:)(*v0, v0[1], v0[2]);
}

Swift::Int sub_100428010()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  Hasher.init(_seed:)();
  DOCUniformHorizontalEdgeInsets.hash(into:)(v1, v2, v3);
  return Hasher._finalize()();
}

unint64_t sub_100428074()
{
  unint64_t result = qword_100715420;
  if (!qword_100715420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715420);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUniformHorizontalEdgeInsets()
{
  return &type metadata for DOCUniformHorizontalEdgeInsets;
}

Swift::Int sub_1004280D8(double a1, double a2)
{
  Hasher.init(_seed:)();
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v5 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v5 = 0;
  }
  Hasher._combine(_:)(v5);
  return Hasher._finalize()();
}

BOOL sub_100428148(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

Swift::Int sub_100428174()
{
  return sub_1004280D8(*v0, v0[1]);
}

void sub_10042817C()
{
  Swift::UInt64 v1 = v0[1];
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *v0;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1004281C4()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
  return Hasher._finalize()();
}

BOOL sub_100428224(double *a1, double *a2)
{
  BOOL result = 0;
  if (*a1 == *a2
    && a1[1] == a2[1]
    && a1[2] == a2[2]
    && a1[3] == a2[3]
    && a1[4] == a2[4]
    && a1[5] == a2[5]
    && a1[6] == a2[6]
    && a1[7] == a2[7])
  {
    return 1;
  }
  return result;
}

BOOL sub_1004282A8(uint64_t a1, uint64_t a2)
{
  Swift::UInt64 v4 = *(void **)a1;
  id v20 = *(id *)a2;
  id v21 = v4;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;
  if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
  {
    sub_1000CED00(&v21);
    sub_1000CED00(&v20);
    swift_bridgeObjectRelease_n();
    sub_1000CF6B4(&v20);
    sub_1000CF6B4(&v21);
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000CED00(&v21);
    sub_1000CED00(&v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CF6B4(&v20);
    sub_1000CF6B4(&v21);
    BOOL result = 0;
    if ((v10 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  Swift::UInt64 v12 = *(void **)(a1 + 16);
  id v18 = *(id *)(a2 + 16);
  id v19 = v12;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    sub_1000CED00(&v19);
    sub_1000CED00(&v18);
    swift_bridgeObjectRelease_n();
    sub_1000CF6B4(&v18);
    sub_1000CF6B4(&v19);
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1000CED00(&v19);
    sub_1000CED00(&v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000CF6B4(&v18);
    sub_1000CF6B4(&v19);
    BOOL result = 0;
    if ((v17 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24)
    || *(void *)(a1 + 32) != *(void *)(a2 + 32)
    || ((*(unsigned __int8 *)(a1 + 40) ^ *(unsigned __int8 *)(a2 + 40)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 41) ^ *(unsigned __int8 *)(a2 + 41)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 42) ^ *(unsigned __int8 *)(a2 + 42)) & 1) != 0)
  {
    return 0;
  }
  BOOL result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 48), *(float64x2_t *)(a2 + 48)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 64), *(float64x2_t *)(a2 + 64)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 80) == *(double *)(a2 + 80))
  {
    return *(double *)(a1 + 88) == *(double *)(a2 + 88)
        && *(double *)(a1 + 96) == *(double *)(a2 + 96)
        && *(double *)(a1 + 104) == *(double *)(a2 + 104);
  }
  return result;
}

uint64_t _s4SpecV13LayoutMetricsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s4SpecV13LayoutMetricsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 64) = v3;
  return result;
}

ValueMetadata *_s4SpecV13LayoutMetricsVMa()
{
  return &_s4SpecV13LayoutMetricsVN;
}

ValueMetadata *type metadata accessor for DOCGridItemSpacing()
{
  return &type metadata for DOCGridItemSpacing;
}

uint64_t _s4SpecVwcp(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 41) = *(_WORD *)(a2 + 41);
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  id v8 = v3;
  id v9 = v5;
  return a1;
}

uint64_t _s4SpecVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  long long v7 = *(void **)(a2 + 16);
  id v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t _s4SpecVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  id v6 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  return a1;
}

uint64_t _s4SpecVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s4SpecVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)BOOL result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s4SpecVMa()
{
  return &_s4SpecVN;
}

unint64_t sub_100428804()
{
  unint64_t result = qword_100715428;
  if (!qword_100715428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715428);
  }
  return result;
}

unint64_t sub_10042885C()
{
  unint64_t result = qword_100715430;
  if (!qword_100715430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715430);
  }
  return result;
}

unint64_t sub_1004288B4()
{
  unint64_t result = qword_100715438;
  if (!qword_100715438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100715438);
  }
  return result;
}

id sub_100428994()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSearchBar();
  return [super dealloc];
}

id sub_1004289D8()
{
  return *(id *)(*v0 + OBJC_IVAR____TtC5Files12DOCSearchBar_configuration);
}

id sub_1004289EC(void *a1)
{
  id result = [self enclosingTabSwitcherCanBeFloating];
  if (result)
  {
    return [a1 _setOverrideInlineInactiveWidth:1.79769313e308];
  }
  return result;
}

uint64_t sub_100428A58()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

void sub_100428AB8(char a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithSuiteName:v3];

  if (v4)
  {
    [v4 setBool:a1 & 1 forKey:DOCUserDefaultsForceShowFilenameExtensionsKey];
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

id sub_100428BCC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 forceDisplayFilenameExtensions];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100428C00(unsigned __int8 *a1, id *a2)
{
  return [*a2 setForceDisplayFilenameExtensions:*a1];
}

id sub_100428C24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionGridCell_Base();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCItemCollectionGridCell_Base()
{
  return self;
}

uint64_t sub_100428C7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  int v34 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v29 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v10 = *(void *)(v29 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v29);
  double v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + qword_100736EF0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  uint64_t v16 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v29);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = v18 + v11;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v33;
  *(void *)(v20 + 16) = v32;
  *(void *)(v20 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v15, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v18, v28, v16);
  *(unsigned char *)(v20 + v19) = v34;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v30, v16);
  *(unsigned char *)(v7 + 32) = 1;
  uint64_t v22 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  uint64_t v23 = type metadata accessor for UICellAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = v36;
  *(void *)(v7 + 16) = v35;
  *(void *)(v7 + 24) = v24;
  *(void *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_100689BB0;
  *(unsigned char *)(v7 + 32) = 1;
  double v25 = (uint64_t (**)(uint64_t))(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *double v25 = sub_100431794;
  v25[1] = (uint64_t (*)(uint64_t))v20;
  return v7;
}

uint64_t sub_100428F84(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  int v34 = a4;
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v29 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v10 = *(void *)(v29 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v29);
  double v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + qword_100736EF0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
  uint64_t v16 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v29);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v14 + *(unsigned __int8 *)(v10 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = v18 + v11;
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v33;
  *(void *)(v20 + 16) = v32;
  *(void *)(v20 + 24) = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v20 + v17, v15, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v18, v28, v16);
  *(unsigned char *)(v20 + v19) = v34;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v31, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v30, v16);
  *(unsigned char *)(v7 + 32) = 1;
  uint64_t v22 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  uint64_t v23 = type metadata accessor for UICellAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = v36;
  *(void *)(v7 + 16) = v35;
  *(void *)(v7 + 24) = v24;
  *(void *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_100689BE0;
  *(unsigned char *)(v7 + 32) = 1;
  double v25 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v7
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *double v25 = sub_10043176C;
  v25[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v20;
  return v7;
}

uint64_t sub_10042928C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a6;
  uint64_t v34 = a7;
  uint64_t v31 = a3;
  uint64_t v32 = a5;
  int v35 = a4;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v30 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v10 = *(void *)(v30 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v30);
  uint64_t v29 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  double v15 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + qword_100736EF0) = 0;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v16, a5, v12, v15);
  uint64_t v17 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v30);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + *(unsigned __int8 *)(v10 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = v19 + v11;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v34;
  *(void *)(v21 + 16) = v33;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v18, v16, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v21 + v19, v29, v17);
  *(unsigned char *)(v21 + v20) = v35;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v32, v12);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v17);
  *(unsigned char *)(v7 + 32) = 1;
  uint64_t v23 = v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
  uint64_t v24 = type metadata accessor for UICellAccessory();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v37;
  *(void *)(v7 + 16) = v36;
  *(void *)(v7 + 24) = v25;
  *(void *)(v7 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles) = &off_10068A1D8;
  *(unsigned char *)(v7 + 32) = 1;
  CGFloat v26 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v7
                                                   + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider);
  *CGFloat v26 = sub_100431E10;
  v26[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v21;
  return v7;
}

uint64_t sub_100429594(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v35 = a5;
  uint64_t v32 = a4;
  uint64_t v6 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v9 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v31 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = (void *)a2(v12);
  sub_1000CBE70(&qword_100716090);
  uint64_t v16 = swift_dynamicCastClassUnconditional();
  uint64_t v17 = qword_100736EF0;
  unint64_t v18 = *(void **)(v16 + qword_100736EF0);
  *(void *)(v16 + qword_100736EF0) = v15;
  id v19 = v15;
  swift_retain();

  uint64_t v20 = *(void (**)(id))(*(void *)v16 + 248);
  id v29 = v19;
  v20(v19);
  uint64_t v21 = *(void **)(v16 + v17);
  if (v21)
  {
    uint64_t v22 = *(void (**)(void))(*(void *)v16 + 256);
    id v23 = v21;
    v22();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v31, v32, v30);
  uint64_t v24 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v25 = *(void *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v8, v35, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
  id v26 = v29;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v14, v34);
}

uint64_t sub_100429900@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, int a4@<W5>, uint64_t *a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v28 = a5;
  uint64_t v29 = a2;
  int v32 = a4;
  uint64_t v30 = a3;
  uint64_t v31 = a6;
  uint64_t v7 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = (void *)a1(v16);
  sub_1000CBE70(v28);
  uint64_t v20 = swift_dynamicCastClassUnconditional();
  uint64_t v21 = *(void **)(v20 + qword_100736EF0);
  *(void *)(v20 + qword_100736EF0) = v19;
  id v22 = v19;
  swift_retain();

  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v29, v10);
  uint64_t v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v9, v30, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v9, 0, 1, v23);
  id v25 = v22;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_100429BD0(uint64_t result)
{
  int v2 = *((unsigned __int8 *)v1 + qword_100715650);
  *((unsigned char *)v1 + qword_100715650) = result;
  if (result == 2)
  {
    if (v2 != 2)
    {
      return sub_100429E10(0xD000000000000013, 0x80000001005F4270);
    }
  }
  else if (v2 == 2 || ((((v2 & 1) == 0) ^ result) & 1) == 0)
  {
    uint64_t v3 = result & 1;
    uint64_t v4 = sub_10042E2D0();
    *(unsigned char *)(v4 + qword_100715EA0) = v3;
    uint64_t v5 = *(void **)(v4 + qword_100736EF0);
    if (v5) {
      [v5 setOn:v3 animated:0];
    }
    swift_release();
    uint64_t v6 = sub_10042E2D0();
    uint64_t v7 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78));
    swift_beginAccess();
    swift_retain();
    unint64_t v8 = swift_bridgeObjectRetain();
    char v9 = sub_100556550(v8, v6);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v9 & 1) == 0)
    {
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      sub_100429FC8();
    }
    return swift_release();
  }
  return result;
}

void sub_100429DC4(uint64_t a1, void *a2)
{
  int v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t sub_100429E10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess();
  if ((unint64_t)*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1004310E8(v5, a1, a2);
  swift_bridgeObjectRelease();
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v8 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v7) {
      goto LABEL_5;
    }
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v8 < v7) {
    goto LABEL_11;
  }
LABEL_5:
  sub_100516334(v7, v8);
  uint64_t result = swift_endAccess();
  unint64_t v10 = *v5;
  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) == v6) {
      return result;
    }
    return sub_100429FC8();
  }
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 == v6) {
    return result;
  }
  return sub_100429FC8();
}

uint64_t sub_100429FC8()
{
  uint64_t v1 = sub_1000CBE70(&qword_10070A178);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v55 = (uint64_t)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  double v54 = (char *)&v45 - v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = type metadata accessor for UICellAccessory();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v57 = (char *)&v45 - v12;
  int v13 = *((unsigned __int8 *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
  id v14 = [v0 traitCollection];
  id v15 = [v14 sourceOutlineStyle];

  uint64_t v16 = *(void *)((swift_isaMask & *v0) + 0x78);
  long long v46 = v0;
  uint64_t v17 = (void *)((char *)v0 + v16);
  swift_beginAccess();
  unint64_t v18 = *v17;
  id v19 = (char *)_swiftEmptyArrayStorage;
  unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  if (v18 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    double v53 = v11;
    if (v20) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    double v53 = v11;
    if (v20)
    {
LABEL_3:
      unint64_t v21 = 0;
      id v19 = (char *)(v18 & 0xC000000000000001);
      unint64_t v50 = v18 + 32;
      uint64_t v51 = v18 & 0xFFFFFFFFFFFFFF8;
      unint64_t v52 = v18 & 0xC000000000000001;
      while (1)
      {
        while (1)
        {
          if (v19)
          {
            uint64_t v22 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            BOOL v23 = __OFADD__(v21++, 1);
            if (v23) {
              goto LABEL_31;
            }
          }
          else
          {
            if (v21 >= *(void *)(v51 + 16)) {
              goto LABEL_32;
            }
            uint64_t v22 = *(void *)(v50 + 8 * v21);
            swift_retain();
            BOOL v23 = __OFADD__(v21++, 1);
            if (v23)
            {
LABEL_31:
              __break(1u);
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
          }
          if (!v13 || *(unsigned char *)(v22 + 32) != 1)
          {
            uint64_t v24 = *(void **)(v22 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_applicableStyles);
            uint64_t v25 = v24[2];
            if (v25) {
              break;
            }
          }
          swift_release();
          if (v21 == v20) {
            goto LABEL_29;
          }
        }
        uint64_t v11 = (char *)v20;
        if ((id)v24[4] != v15)
        {
          if (v25 == 1) {
            goto LABEL_17;
          }
          if ((id)v24[5] != v15)
          {
            if (v25 == 2) {
              goto LABEL_17;
            }
            if ((id)v24[6] != v15) {
              break;
            }
          }
        }
LABEL_15:
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_18:
        id v19 = (char *)v52;
        if (v21 == v20)
        {
LABEL_29:
          swift_bridgeObjectRelease();
          unint64_t v28 = v58;
          id v19 = (char *)_swiftEmptyArrayStorage;
          if ((v58 & 0x8000000000000000) == 0) {
            goto LABEL_36;
          }
          goto LABEL_52;
        }
      }
      if (v25 != 3)
      {
        uint64_t v26 = 7;
        do
        {
          uint64_t v27 = v26 - 3;
          if (__OFADD__(v26 - 4, 1)) {
            goto LABEL_33;
          }
          if ((id)v24[v26] == v15) {
            goto LABEL_15;
          }
          ++v26;
        }
        while (v27 != v25);
      }
LABEL_17:
      swift_release();
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_52;
  }
LABEL_36:
  if ((v28 & 0x4000000000000000) == 0)
  {
    uint64_t v29 = *(void *)(v28 + 16);
    if (v29) {
      goto LABEL_38;
    }
LABEL_53:
    swift_release();
    return UICollectionViewListCell.accessories.setter();
  }
LABEL_52:
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_release();
  if (!v29) {
    goto LABEL_53;
  }
LABEL_38:
  uint64_t v59 = v19;
  uint64_t result = sub_100191040(0, v29 & ~(v29 >> 63), 0);
  if ((v29 & 0x8000000000000000) == 0)
  {
    uint64_t v31 = 0;
    CGRect v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
    unint64_t v50 = v28 & 0xC000000000000001;
    int v32 = (void (**)(char *, char *, uint64_t))(v56 + 32);
    uint64_t v47 = (void *)v28;
    double v48 = (void (**)(char *, char *, uint64_t))(v56 + 16);
    uint64_t v33 = (void (**)(char *, void, uint64_t, uint64_t))(v56 + 56);
    uint64_t v51 = v29;
    unint64_t v52 = (unint64_t)v7;
    do
    {
      if (v50)
      {
        uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v34 = *(void *)(v28 + 8 * v31 + 32);
        swift_retain();
      }
      uint64_t v35 = v34 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded;
      swift_beginAccess();
      sub_1000CBC00(v35, (uint64_t)v7, &qword_10070A178);
      if ((*v49)(v7, 1, v8) == 1)
      {
        uint64_t v36 = v53;
        (*(void (**)(uint64_t))(v34 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryProvider))(v34);
        sub_1000CBBA4((uint64_t)v7, &qword_10070A178);
      }
      else
      {
        uint64_t v36 = v53;
        (*v32)(v53, v7, v8);
      }
      uint64_t v37 = v54;
      (*v48)(v54, v36, v8);
      (*v33)(v37, 0, 1, v8);
      uint64_t v38 = (uint64_t)v37;
      uint64_t v39 = v55;
      sub_1003A992C(v38, v55);
      swift_beginAccess();
      sub_1003A9994(v39, v35);
      swift_endAccess();
      id v40 = *v32;
      (*v32)(v57, v36, v8);
      swift_release();
      double v41 = v59;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100191040(0, *((void *)v41 + 2) + 1, 1);
        double v41 = v59;
      }
      unint64_t v28 = (unint64_t)v47;
      unint64_t v43 = *((void *)v41 + 2);
      unint64_t v42 = *((void *)v41 + 3);
      uint64_t v44 = v51;
      if (v43 >= v42 >> 1)
      {
        sub_100191040(v42 > 1, v43 + 1, 1);
        double v41 = v59;
      }
      ++v31;
      *((void *)v41 + 2) = v43 + 1;
      v40(&v41[((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v43], v57, v8);
      uint64_t v59 = v41;
      uint64_t v7 = (char *)v52;
    }
    while (v44 != v31);
    goto LABEL_53;
  }
  __break(1u);
  return result;
}

id sub_10042A6A4()
{
  id result = [objc_allocWithZone((Class)UIImage) init];
  qword_100737558 = (uint64_t)result;
  byte_100737560 = 0;
  return result;
}

uint64_t sub_10042A6E0()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0 && String.count.getter() >= 1) {
    swift_bridgeObjectRetain();
  }
  UIListContentConfiguration.text.setter();
  uint64_t v1 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  v1(v6, 0);
  swift_bridgeObjectRetain();
  UIListContentConfiguration.secondaryText.setter();
  id v2 = *(id *)(v0 + 56);
  UIListContentConfiguration.image.setter();
  static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  uint64_t v3 = (void (*)(unsigned char *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v3(v6, 0);
  uint64_t v4 = (uint64_t (*)(unsigned char *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.accessibilityIgnoresInvertColors.setter();
  return v4(v6, 0);
}

double sub_10042A840@<D0>(_OWORD *a1@<X8>)
{
  sub_100431570((uint64_t)v5);
  long long v2 = v5[1];
  *a1 = v5[0];
  a1[1] = v2;
  double result = *(double *)&v6;
  long long v4 = v7;
  a1[2] = v6;
  a1[3] = v4;
  return result;
}

id sub_10042A88C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1000CBE70(&qword_10070E2E0);
  double v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v30.receiver = v0;
  v30.super_class = ObjectType;
  [super prepareForReuse:v3];
  *(void *)&v0[qword_1007155E0 + 8] = 0;
  swift_unknownObjectWeakAssign();
  int v6 = v0[qword_100715630];
  v0[qword_100715630] = 0;
  if (v6)
  {
    long long v7 = (uint64_t (**)(uint64_t))&v5[*(int *)(v2 + 48)];
    uint64_t v8 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
    uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v5, v8, v9);
    *long long v7 = sub_100430790;
    v7[1] = 0;
    sub_1000CBBA4((uint64_t)v5, &qword_10070E2E0);
    uint64_t v10 = *(void *)&v0[qword_100715628];
    *(void *)&v0[qword_100715628] = 0;
    sub_10042DF8C(v10);
    swift_release();
  }
  v29.receiver = v0;
  v29.super_class = ObjectType;
  unsigned int v11 = [super isEditing];
  v28.receiver = v0;
  v28.super_class = ObjectType;
  [super setEditing:0];
  v27.receiver = v0;
  v27.super_class = ObjectType;
  if (v11 != objc_msgSendSuper2(&v27, "isEditing"))
  {
    v26.receiver = v0;
    v26.super_class = ObjectType;
    [super isEditing];
    sub_10042EBBC(0);
    int v13 = *(void **)&v0[qword_100715608];
    if (v13) {
      [v13 setUserInteractionEnabled:v12];
    }
    sub_10042E8B8((char)v12);
  }
  v25.receiver = v0;
  v25.super_class = ObjectType;
  unsigned int v14 = [super isSelected];
  v24.receiver = v0;
  v24.super_class = ObjectType;
  [super setSelected:0];
  v23.receiver = v0;
  v23.super_class = ObjectType;
  if (v14 != objc_msgSendSuper2(&v23, "isSelected")) {
    [v0 setNeedsUpdateConfiguration];
  }
  int v15 = v0[qword_100715650];
  v0[qword_100715650] = 2;
  if (v15 != 2) {
    sub_100429E10(0xD000000000000013, 0x80000001005F4270);
  }
  v0[qword_1007155E8] = 0;
  v0[qword_1007155F0] = 0;
  uint64_t v22 = 0;
  memset(v21, 0, sizeof(v21));
  uint64_t v16 = (uint64_t)&v0[qword_1007155F8];
  swift_beginAccess();
  sub_10009758C((uint64_t)v21, v16, &qword_1007160A8);
  swift_endAccess();
  sub_10042B050();
  sub_1000CBBA4((uint64_t)v21, &qword_1007160A8);
  uint64_t v17 = *(void **)&v0[qword_100715600];
  *(void *)&v0[qword_100715600] = 0;

  sub_10042ACBC(0);
  sub_10042AD9C(0);
  *(void *)&v0[qword_100715648] = 0;
  swift_release();
  sub_10042EBBC(0);
  unint64_t v18 = *(void **)&v0[qword_100715608];
  if (v18) {
    [v18 setHidden:1];
  }
  return [v0 setUserInteractionEnabled:1];
}

void sub_10042ABEC(char a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v10.receiver = v1;
  v10.super_class = ObjectType;
  unsigned int v4 = [super isEditing];
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super setEditing:a1 & 1];
  v8.receiver = v1;
  v8.super_class = ObjectType;
  if (v4 != objc_msgSendSuper2(&v8, "isEditing"))
  {
    v7.receiver = v1;
    v7.super_class = ObjectType;
    [super isEditing];
    sub_10042EBBC(0);
    int v6 = *(void **)&v1[qword_100715608];
    if (v6) {
      [v6 setUserInteractionEnabled:v5];
    }
    sub_10042E8B8((char)v5);
  }
}

void sub_10042ACBC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_100715638;
  id v5 = *(void **)(v2 + qword_100715638);
  *(void *)(v2 + qword_100715638) = a1;
  id v9 = a1;
  if (a1)
  {
    if (!v5) {
      goto LABEL_5;
    }
    type metadata accessor for DOCEjectionController();
    id v6 = v5;
    id v7 = v9;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      goto LABEL_9;
    }
    if (*(void *)(v2 + v4)) {
LABEL_5:
    }
      swift_unknownObjectWeakAssign();
    goto LABEL_7;
  }
  if (v5) {
LABEL_7:
  }
    sub_10042E1CC();
  id v6 = v5;
LABEL_9:
}

void sub_10042AD9C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)&v2[qword_100715640];
  *(void *)&v2[qword_100715640] = a1;
  id v8 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      id v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    [v2 setNeedsUpdateConfiguration];
    goto LABEL_7;
  }
  if (!v4) {
    goto LABEL_6;
  }
  type metadata accessor for DOCEjectButton();
  id v5 = v4;
  id v6 = v8;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

void sub_10042AE64(void *a1)
{
  id v1 = a1;
  sub_10042A88C();
}

void sub_10042AEAC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = type metadata accessor for UICellConfigurationState();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = __chkstk_darwin(v5);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  [super traitCollectionDidChange:a1, v7];
  sub_10042B050();
  id v10 = [v2 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10042B2DC((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_10042BB68();
  sub_10042BF6C();
  id v11 = [v2 traitCollection];
  uint64_t v12 = sub_10004A150(&off_10068B0E8);
  swift_arrayDestroy();
  LOBYTE(a1) = sub_100053E14(v12, a1);
  swift_bridgeObjectRelease();

  if (a1) {
    sub_10042FEF4();
  }
}

void sub_10042B050()
{
  id v1 = v0;
  id v2 = [v0 traitCollection];
  static CGSize.doc_preferredSourceListIconSize(for:)();
  double v4 = v3;
  double v6 = v5;
  id v7 = [self unspecifiedConfiguration];

  Class v8 = sub_1003F4890();
  if (v8) {
    goto LABEL_2;
  }
  Class v9 = (Class)[v1 tintColor];
  if (!v9)
  {
    Class v8 = (Class)[self systemBlueColor];
LABEL_2:
    Class v9 = v8;
  }
  uint64_t v10 = (uint64_t)v1 + qword_1007155F8;
  swift_beginAccess();
  if (*(void *)(v10 + 24))
  {
    sub_1000D4774(v10, (uint64_t)v17);
    uint64_t v11 = v18;
    uint64_t v12 = v19;
    sub_1000A6B78(v17, v18);
    objc_super v13 = (void *)(*(uint64_t (**)(id, void *, Class, uint64_t, uint64_t, double, double, double))(v12 + 8))(v7, v1, v9, v11, v12, v4, v6, -12.0);
    id v14 = (id)sub_10009B1B8((uint64_t)v17);
  }
  else
  {
    if (qword_1007051D8 != -1) {
      swift_once();
    }
    id v14 = (id)qword_100737558;
    objc_super v13 = v14;
  }
  __chkstk_darwin(v14);
  id v15 = [v1 window];
  id v16 = v15;
  if (v15) {

  }
  __chkstk_darwin(v16 == 0);
  UIView.doc_performBlock(allowingAnimations:block:)();
}

void sub_10042B2DC(uint64_t a1)
{
  id v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = type metadata accessor for UIListContentConfiguration.ImageProperties();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin(v3);
  unint64_t v58 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v67 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v57 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  __chkstk_darwin(v10);
  uint64_t v61 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v68 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = qword_100715640;
  uint64_t v20 = *(void **)((char *)v2 + qword_100715640);
  if (v20)
  {
    uint64_t v64 = v7;
    uint64_t v65 = v8;
    uint64_t v56 = qword_100715648;
    uint64_t v21 = *(void *)((char *)v2 + qword_100715648);
    uint64_t v22 = &OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver;
    if (v21)
    {
      objc_super v23 = *(void **)(v21 + qword_100715D20);
      type metadata accessor for DOCEjectButton();
      id v24 = v20;
      id v25 = v23;
      char v26 = static NSObject.== infix(_:_:)();

      uint64_t v22 = &OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver;
      if (v26)
      {

LABEL_7:
        id v7 = v64;
        uint64_t v8 = v65;
        goto LABEL_8;
      }
    }
    else
    {
      id v27 = v20;
    }
    type metadata accessor for DOCSidebarItemCell.EjectAccessoryItem(0);
    *(void *)(swift_allocObject() + v22[420]) = v20;
    (*(void (**)(char *, void, uint64_t))(v16 + 104))(v19, enum case for UICellAccessory.LayoutDimension.actual(_:), v15);
    objc_super v28 = (uint64_t (**)())&v14[*(int *)(sub_1000CBE70(&qword_10070E2E0) + 48)];
    uint64_t v29 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
    uint64_t v30 = type metadata accessor for UICellAccessory.DisplayedState();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v14, v29, v30);
    *objc_super v28 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v28[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v68 + 104))(v14, enum case for UICellAccessory.Placement.trailing(_:), v12);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v20;
    id v32 = v20;
    uint64_t v33 = sub_10042928C(0x7463656A65, 0xE500000000000000, (uint64_t)v19, 1, (uint64_t)v14, (uint64_t)sub_10013E8A0, v31);
    *(void *)((char *)v2 + v56) = v33;
    swift_release();
    sub_100429E10(0x7463656A65, 0xE500000000000000);

    goto LABEL_7;
  }
LABEL_8:
  uint64_t v34 = v8;
  id v35 = [v2 traitCollection:v17, v56];
  id v36 = [v35 sourceOutlineStyle];

  char v37 = UICellConfigurationState.isSelected.getter();
  uint64_t v38 = *(void *)((char *)v2 + qword_100715648);
  if (!v38 || !(v37 & 1 | (v36 == (id)1)))
  {
    sub_100429E10(0x7463656A65, 0xE500000000000000);
    return;
  }
  uint64_t v39 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess();
  swift_retain_n();
  unint64_t v40 = swift_bridgeObjectRetain();
  char v41 = sub_100556550(v40, v38);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v42 = v67;
  if ((v41 & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    sub_100429FC8();
  }
  unint64_t v43 = *(void **)((char *)v2 + v66);
  if (v43)
  {
    uint64_t v44 = (uint64_t)v61;
    (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for UIButton.Configuration.Size.medium(_:), v63);
    id v45 = v43;
    sub_1002B7AC8(v44);
  }
  Class v46 = (Class)[self tertiaryLabelColor];
  UICollectionViewCell.contentConfiguration.getter();
  if (!v71)
  {
    sub_1000CBBA4((uint64_t)v70, &qword_1007160C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v7, 1, 1, v34);
    goto LABEL_21;
  }
  sub_1000CBE70(&qword_100714448);
  uint64_t v47 = v34;
  int v48 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v7, v48 ^ 1u, 1, v34);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v7, 1, v34) == 1)
  {
LABEL_21:

    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007160B0);
    goto LABEL_22;
  }
  CGRect v49 = v57;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v57, v7, v47);
  unint64_t v50 = v58;
  UIListContentConfiguration.imageProperties.getter();
  Class isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)v46).super.isa;

  (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v60);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v47);
  Class v46 = isa;
LABEL_22:
  unint64_t v52 = *(char **)(v38 + qword_100715D20);
  double v53 = *(void **)&v52[OBJC_IVAR____TtC5Files14DOCEjectButton_color];
  *(void *)&v52[OBJC_IVAR____TtC5Files14DOCEjectButton_color] = v46;
  sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  double v54 = v46;
  char v55 = static NSObject.== infix(_:_:)();

  if ((v55 & 1) == 0) {
    [v52 setNeedsUpdateConfiguration];
  }
  swift_release();
}

uint64_t sub_10042BB68()
{
  uint64_t v0 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v0 - 8);
  id v2 = &v25[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1000CBE70(&qword_10070F740);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v25[-v7];
  swift_beginAccess();
  unint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_100431444(v9, 0xD000000000000013, 0x80000001005F4200);
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
    type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12) {
      return swift_release();
    }
    uint64_t v13 = v12;
    uint64_t v14 = qword_100715A30;
    id v15 = *(id *)(v12 + qword_100715A30);
    Class v16 = sub_1003F4890();
    sub_1002F83F8(v16);

    uint64_t v17 = *(void *)(v13 + v14);
    UICollectionViewCell.contentConfiguration.getter();
    if (v27)
    {
      sub_1000CBE70(&qword_100714448);
      uint64_t v18 = type metadata accessor for UIListContentConfiguration();
      int v19 = swift_dynamicCast();
      uint64_t v20 = *(void *)(v18 - 8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v2, v19 ^ 1u, 1, v18);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v2, 1, v18) != 1)
      {
        UIListContentConfiguration.imageProperties.getter();
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v2, v18);
        uint64_t v21 = type metadata accessor for UIListContentConfiguration.ImageProperties();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
LABEL_8:
        uint64_t v24 = v17 + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_imageProperties;
        swift_beginAccess();
        sub_1000CBC00(v24, (uint64_t)v5, &qword_10070F740);
        swift_beginAccess();
        sub_10009758C((uint64_t)v8, v24, &qword_10070F740);
        swift_endAccess();
        sub_1002F8508((uint64_t)v5);
        sub_1000CBBA4((uint64_t)v8, &qword_10070F740);
        sub_1000CBBA4((uint64_t)v5, &qword_10070F740);
        return swift_release();
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v26, &qword_1007160C0);
      uint64_t v22 = type metadata accessor for UIListContentConfiguration();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v2, 1, 1, v22);
    }
    sub_1000CBBA4((uint64_t)v2, (uint64_t *)&unk_1007160B0);
    uint64_t v23 = type metadata accessor for UIListContentConfiguration.ImageProperties();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_10042BF6C()
{
  uint64_t v0 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v0 - 8);
  id v2 = &v25[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1000CBE70(&qword_10070F740);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v25[-v7];
  swift_beginAccess();
  unint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_100431444(v9, 0xD000000000000015, 0x80000001005F41E0);
  uint64_t result = swift_bridgeObjectRelease();
  if (v10)
  {
    type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
    uint64_t v12 = swift_dynamicCastClass();
    if (!v12) {
      return swift_release();
    }
    uint64_t v13 = v12;
    uint64_t v14 = qword_100715BA8;
    id v15 = *(id *)(v12 + qword_100715BA8);
    Class v16 = sub_1003F4890();
    sub_1005608C0(v16);

    uint64_t v17 = *(void *)(v13 + v14);
    UICollectionViewCell.contentConfiguration.getter();
    if (v27)
    {
      sub_1000CBE70(&qword_100714448);
      uint64_t v18 = type metadata accessor for UIListContentConfiguration();
      int v19 = swift_dynamicCast();
      uint64_t v20 = *(void *)(v18 - 8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v20 + 56))(v2, v19 ^ 1u, 1, v18);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v20 + 48))(v2, 1, v18) != 1)
      {
        UIListContentConfiguration.imageProperties.getter();
        (*(void (**)(unsigned char *, uint64_t))(v20 + 8))(v2, v18);
        uint64_t v21 = type metadata accessor for UIListContentConfiguration.ImageProperties();
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
LABEL_8:
        uint64_t v24 = v17 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties;
        swift_beginAccess();
        sub_1000CBC00(v24, (uint64_t)v5, &qword_10070F740);
        swift_beginAccess();
        sub_10009758C((uint64_t)v8, v24, &qword_10070F740);
        swift_endAccess();
        sub_1005609D0((uint64_t)v5);
        sub_1000CBBA4((uint64_t)v8, &qword_10070F740);
        sub_1000CBBA4((uint64_t)v5, &qword_10070F740);
        return swift_release();
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v26, &qword_1007160C0);
      uint64_t v22 = type metadata accessor for UIListContentConfiguration();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v2, 1, 1, v22);
    }
    sub_1000CBBA4((uint64_t)v2, (uint64_t *)&unk_1007160B0);
    uint64_t v23 = type metadata accessor for UIListContentConfiguration.ImageProperties();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
    goto LABEL_8;
  }
  return result;
}

void sub_10042C370(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  sub_10042AEAC(a3);
}

uint64_t sub_10042C3DC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for UICellConfigurationState();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
  id v7 = a1;
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v10.receiver = v7;
  v10.super_class = ObjectType;
  [super _bridgedUpdateConfigurationUsingState:isa];

  sub_10042B050();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

id sub_10042C4F8(double a1, double a2, uint64_t a3, void *a4)
{
  return sub_100430AA8(*(void **)(*(void *)v4 + 16), *(unsigned char *)(*(void *)v4 + 24), a4, a1, a2);
}

uint64_t sub_10042C50C()
{
  return swift_deallocClassInstance();
}

id sub_10042C544(double a1, double a2, double a3, uint64_t a4, void *a5)
{
  return sub_100430950(a5, a1, a3);
}

void sub_10042C574(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716098);
  __chkstk_darwin(v5);
  id v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  id v8 = [v2 window];
  id v9 = v8;
  if (v8) {

  }
  __chkstk_darwin(v9 == 0);
  *(void *)&v13[-32] = sub_1004318A0;
  *(void *)&v13[-24] = v13;
  *(void *)&v13[-16] = v2;
  UIView.doc_performBlock(allowingAnimations:block:)();
  swift_bridgeObjectRelease();
  sub_10042C75C();
  [self sidebar];
  swift_getObjCClassMetadata();
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_10054EF5C(v7);
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_100716098);
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v12 = [ObjCClassFromMetadata itemWithTitle:v11];

  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v2 setAccessibilityIdentifier:v12];
}

void sub_10042C75C()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_100716098);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10042EBBC(0);
  uint64_t v4 = *(void **)(v0 + qword_100715608);
  if (!v4) {
    return;
  }
  id v5 = v4;
  sub_10054EF5C(v3);
  uint64_t v6 = (uint64_t *)&v3[*(int *)(v1 + 40)];
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v3, (uint64_t *)&unk_100716098);
  id v9 = [v5 text];
  if (!v9) {
    goto LABEL_8;
  }
  objc_super v10 = v9;
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v13 = v12;

  if (v11 == v8 && v13 == v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setText:v16];
  }
LABEL_10:
  id v17 = [v5 placeholder];
  if (!v17) {
    goto LABEL_17;
  }
  uint64_t v18 = v17;
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  if (v19 != v8 || v21 != v7)
  {
    char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRelease();
LABEL_18:

      return;
    }
LABEL_17:
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v5 setPlaceholder:v24];

    goto LABEL_18;
  }

  swift_bridgeObjectRelease_n();
}

uint64_t sub_10042C988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 40) = a3;
  return result;
}

uint64_t sub_10042C9D0(uint64_t a1)
{
  sub_10042B2DC(a1);
  sub_10042BB68();

  return sub_10042BF6C();
}

void sub_10042C9FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_100715618;
  id v5 = *(void **)((char *)v2 + qword_100715618);
  if (v5)
  {
    if (!a1) {
      goto LABEL_5;
    }
    sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
    id v6 = a1;
    id v7 = v5;
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      return;
    }
    id v5 = *(void **)((char *)v2 + v4);
    if (v5)
    {
LABEL_5:
      type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
      swift_allocObject();
      id v9 = v5;
      uint64_t v10 = sub_10042CEB8(v9);
      id v11 = [self shared];
      uint64_t v25 = sub_100431780;
      uint64_t v26 = v10;
      uint64_t v21 = _NSConcreteStackBlock;
      uint64_t v22 = 1107296256;
      char v23 = sub_1000666D8;
      NSString v24 = &unk_1006ABC48;
      uint64_t v12 = _Block_copy(&v21);
      swift_retain();
      swift_release();
      [v11 performAfterLaunch:v12];
      _Block_release(v12);

      uint64_t v13 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78));
      swift_beginAccess();
      swift_retain();
      unint64_t v14 = swift_bridgeObjectRetain();
      LOBYTE(v12) = sub_100556550(v14, v10);
      swift_bridgeObjectRelease();
      swift_release();
      if ((v12 & 1) == 0)
      {
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        sub_100429FC8();
      }

      goto LABEL_14;
    }
  }
  else if (!a1)
  {
    return;
  }
  swift_beginAccess();
  unint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_100431444(v15, 0xD000000000000013, 0x80000001005F4200);
  swift_bridgeObjectRelease();
  if (!v16) {
    return;
  }
  type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(0);
  uint64_t v17 = swift_dynamicCastClass();
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [self shared];
    uint64_t v25 = sub_100431778;
    uint64_t v26 = v18;
    uint64_t v21 = _NSConcreteStackBlock;
    uint64_t v22 = 1107296256;
    char v23 = sub_1000666D8;
    NSString v24 = &unk_1006ABC20;
    uint64_t v20 = _Block_copy(&v21);
    swift_retain();
    swift_release();
    [v19 performAfterLaunch:v20];
    _Block_release(v20);

    sub_100429E10(*(void *)(v18 + 16), *(void *)(v18 + 24));
  }
LABEL_14:
  swift_release();
}

uint64_t sub_10042CDD8(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + qword_100715A30)
                        + OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel)
            + 24) = &off_1006A0C48;
  swift_unknownObjectWeakAssign();
  swift_retain();
  sub_1002F9E34();

  return swift_release();
}

uint64_t sub_10042CE48(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_100715A30);
  uint64_t v2 = OBJC_IVAR____TtC5Files52DOCFileProviderSyncStateSidebarCellAccessoryItemView_viewModel;
  swift_retain();
  sub_1002F9F38();
  swift_release();
  *(void *)(*(void *)(v1 + v2) + 24) = 0;

  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10042CEB8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemViewModel();
  swift_allocObject();
  swift_retain();
  id v22 = a1;
  sub_1002F9804(v22);
  id v11 = objc_allocWithZone((Class)type metadata accessor for DOCFileProviderSyncStateSidebarCellAccessoryItemView());
  uint64_t v12 = swift_retain();
  id v13 = sub_1002F82E0(v12);
  *(void *)(v2 + qword_100715A30) = v13;
  id v14 = v13;
  swift_release();
  unint64_t v15 = (uint64_t (**)())&v10[*(int *)(sub_1000CBE70(&qword_10070E2E0) + 48)];
  uint64_t v16 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
  uint64_t v17 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v10, v16, v17);
  *unint64_t v15 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v15[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for UICellAccessory.Placement.trailing(_:), v7);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v14;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UICellAccessory.LayoutDimension.actual(_:), v23);
  id v19 = v14;
  uint64_t v20 = sub_100428F84(0xD000000000000013, 0x80000001005F4200, (uint64_t)v6, 2, (uint64_t)v10, (uint64_t)sub_10013E8A0, v18);

  swift_release();
  return v20;
}

void sub_10042D19C()
{
}

uint64_t sub_10042D1AC()
{
  return sub_10042DA50(&qword_100715A30);
}

void sub_10042D1B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78));
  swift_beginAccess();
  unint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_100431444(v5, 0xD000000000000015, 0x80000001005F41E0);
  swift_bridgeObjectRelease();
  uint64_t v7 = qword_100715620;
  uint64_t v8 = *(void **)((char *)v2 + qword_100715620);
  if (!v8)
  {
    if (a1) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  if (!a1) {
    goto LABEL_10;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
  id v9 = a1;
  id v10 = v8;
  char v11 = static NSObject.== infix(_:_:)();

  uint64_t v8 = *(void **)((char *)v2 + v7);
  if (v11)
  {
    if (v8 && !v6) {
      goto LABEL_10;
    }
LABEL_21:
    swift_release();
    return;
  }
  if (!v8) {
    goto LABEL_17;
  }
LABEL_10:
  type metadata accessor for DOCUSBFormatting();
  id v12 = v8;
  static DOCUSBFormatting.shared.getter();
  id v13 = [v12 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v14 = (void *)dispatch thunk of DOCUSBFormatting.operation(for:)();
  swift_release();
  swift_bridgeObjectRelease();

  if (!v14)
  {

LABEL_17:
    unint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v22 = sub_100431444(v21, 0xD000000000000015, 0x80000001005F41E0);
    swift_bridgeObjectRelease();
    if (v22)
    {
      type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
      uint64_t v23 = swift_dynamicCastClass();
      if (v23)
      {
        uint64_t v24 = v23;
        id v25 = [self shared];
        uint64_t v31 = sub_100431674;
        uint64_t v32 = v24;
        uint64_t v27 = _NSConcreteStackBlock;
        uint64_t v28 = 1107296256;
        uint64_t v29 = sub_1000666D8;
        uint64_t v30 = &unk_1006ABB58;
        uint64_t v26 = _Block_copy(&v27);
        swift_retain();
        swift_release();
        [v25 performAfterLaunch:v26];
        _Block_release(v26);

        sub_100429E10(*(void *)(v24 + 16), *(void *)(v24 + 24));
      }
      swift_release();
    }
    goto LABEL_21;
  }
  type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(0);
  swift_allocObject();
  id v15 = v12;
  uint64_t v16 = sub_10042D70C(v15);
  id v17 = [self shared];
  uint64_t v31 = sub_100431694;
  uint64_t v32 = v16;
  uint64_t v27 = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_1000666D8;
  uint64_t v30 = &unk_1006ABB80;
  uint64_t v18 = _Block_copy(&v27);
  swift_retain();
  swift_release();
  [v17 performAfterLaunch:v18];
  _Block_release(v18);

  swift_retain();
  unint64_t v19 = swift_bridgeObjectRetain();
  char v20 = sub_100556550(v19, v16);
  swift_bridgeObjectRelease();
  swift_release();
  if ((v20 & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    sub_100429FC8();
  }
  swift_release();
  swift_release();
}

void sub_10042D62C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_100715BA8);
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation);
  uint64_t v6 = v2;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v3 = v2;
  uint64_t v4 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  unint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver);
  *(void *)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver) = v4;
}

uint64_t sub_10042D70C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v24 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCUSBFormatting();
  swift_retain();
  static DOCUSBFormatting.shared.getter();
  id v25 = a1;
  id v11 = [a1 identifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v12 = (void *)dispatch thunk of DOCUSBFormatting.operation(for:)();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    id v14 = objc_allocWithZone((Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem());
    id v15 = v12;
    id v16 = sub_1005607A0(v15);
    *(void *)(v2 + qword_100715BA8) = v16;
    id v17 = v16;
    swift_release();
    uint64_t v18 = (uint64_t (**)())&v10[*(int *)(sub_1000CBE70(&qword_10070E2E0) + 48)];
    uint64_t v19 = enum case for UICellAccessory.DisplayedState.whenNotEditing(_:);
    uint64_t v20 = type metadata accessor for UICellAccessory.DisplayedState();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v10, v19, v20);
    *uint64_t v18 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v18[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for UICellAccessory.Placement.trailing(_:), v7);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v17;
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UICellAccessory.LayoutDimension.actual(_:), v24);
    id v22 = v17;
    uint64_t v23 = sub_100428F84(0xD000000000000015, 0x80000001005F41E0, (uint64_t)v6, 2, (uint64_t)v10, (uint64_t)sub_100117B1C, v21);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10042DA34()
{
}

uint64_t sub_10042DA44()
{
  return sub_10042DA50(&qword_100715BA8);
}

uint64_t sub_10042DA50(void *a1)
{
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v1 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, &qword_10070A178);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10042DB1C(char a1)
{
  uint64_t v2 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v21 - v11;
  id v13 = (uint64_t (**)(uint64_t))((char *)&v21 + *(int *)(sub_1000CBE70(&qword_10070E2E0) + 48) - v11);
  uint64_t v14 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v15 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v12, v14, v15);
  void *v13 = sub_100430790;
  v13[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for UICellAccessory.Placement.leading(_:), v6);
  if (a1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UICellAccessory.LayoutDimension.actual(_:), v2);
    sub_1000CBE70(&qword_100716088);
    swift_allocObject();
    if (a1 == 1)
    {
      uint64_t v16 = 0x80000001005F4250;
      id v17 = sub_10042DE90;
      uint64_t v18 = 0xD00000000000001CLL;
    }
    else
    {
      uint64_t v18 = 0xD000000000000020;
      uint64_t v16 = 0x80000001005F4220;
      id v17 = sub_10042DF44;
    }
    uint64_t v19 = sub_100428F84(v18, v16, (uint64_t)v5, 2, (uint64_t)v10, (uint64_t)v17, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return 0;
  }
  return v19;
}

id sub_10042DE90()
{
  id v0 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 8.0, 8.0];
  id v1 = [v0 layer];
  [v1 setCornerRadius:4.0];

  id v2 = [self linkColor];
  [v0 setBackgroundColor:v2];

  return v0;
}

id sub_10042DF44()
{
  id v0 = objc_allocWithZone((Class)UIView);

  return [v0 initWithFrame:CGRectMake(0.0, 0.0, 8.0, 8.0)];
}

uint64_t sub_10042DF8C(uint64_t result)
{
  id v2 = v1;
  uint64_t v3 = result;
  uint64_t v4 = qword_100715628;
  uint64_t v5 = *(void *)((char *)v1 + qword_100715628);
  if (v5)
  {
    uint64_t v7 = *(void *)(v5 + 16);
    uint64_t v6 = *(void *)(v5 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v3)
    {
      if (!v6) {
        return result;
      }
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)((char *)v2 + v4);
      if (!v8) {
        return result;
      }
      goto LABEL_19;
    }
  }
  else
  {
    if (!result) {
      return result;
    }
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v10 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v3 + 24);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v6)
  {
    if (!v9) {
      return result;
    }
    goto LABEL_17;
  }
  if (!v9)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  if (v7 != v10 || v6 != v9)
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v12) {
      return result;
    }
LABEL_18:
    uint64_t v13 = *(void *)(v3 + 16);
    uint64_t v14 = *(void *)(v3 + 24);
    swift_retain();
    sub_100429E10(v13, v14);
    uint64_t result = swift_release();
    uint64_t v8 = *(void *)((char *)v2 + v4);
    if (!v8) {
      return result;
    }
LABEL_19:
    uint64_t v15 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78));
    swift_beginAccess();
    swift_retain_n();
    unint64_t v16 = swift_bridgeObjectRetain();
    char v17 = sub_100556550(v16, v8);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v17 & 1) == 0)
    {
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      sub_100429FC8();
    }
    return swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_10042E1CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = qword_100715638;
  uint64_t v3 = *(void *)(v1 + qword_100715638);
  if (v3)
  {
    if ([*(id *)(v3 + OBJC_IVAR____TtC5Files21DOCEjectionController_source) isEjectable])
    {
      uint64_t v4 = *(char **)(v1 + v2);
      if (v4)
      {
        uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC5Files21DOCEjectionController_source];
        uint64_t v6 = v4;
        if ([v5 isEjectable])
        {
          uint64_t v7 = sub_1002B88C4();

          uint64_t v8 = v7;
          sub_10042AD9C(v7);

          return;
        }
      }
    }
  }

  sub_10042AD9C(0);
}

void sub_10042E2B4()
{
}

uint64_t sub_10042E2C4()
{
  return sub_10042DA50(&qword_100715D20);
}

uint64_t sub_10042E2D0()
{
  uint64_t v1 = qword_100715658;
  if (*(void *)(v0 + qword_100715658))
  {
    uint64_t v2 = *(void *)(v0 + qword_100715658);
  }
  else
  {
    uint64_t v3 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v2 = sub_100430D4C((uint64_t)sub_100431788, v3);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_10042E370(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10028C850(v3, *(unsigned char *)(a1 + qword_100715EA0));

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_10042E408()
{
  id v0 = objc_allocWithZone((Class)UISwitch);

  return [v0 init];
}

void sub_10042E440(void *a1)
{
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  id v3 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [a1 addAction:v3 forControlEvents:4096];
}

uint64_t sub_10042E524()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = qword_100736EF0;
    id v3 = *(void **)(result + qword_100736EF0);
    if (v3)
    {
      id v4 = v3;
      id v5 = [v4 isOn];
      *(unsigned char *)(v1 + qword_100715EA0) = (_BYTE)v5;
      uint64_t v6 = *(void **)(v1 + v2);
      if (v6) {
        [v6 setOn:v5 animated:0];
      }
      uint64_t v7 = *(void (**)(uint64_t))(v1 + qword_100715E98);
      swift_retain();
      v7(v1);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

id sub_10042E608(void *a1)
{
  return [a1 setOn:*(unsigned __int8 *)(v1 + qword_100715EA0) animated:0];
}

uint64_t sub_10042E624()
{
  return swift_release();
}

uint64_t sub_10042E638()
{
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files27DOCSidebarCellAccessoryItem_accessoryIfLoaded, &qword_10070A178);
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

id sub_10042E700(void *a1, uint64_t a2)
{
  return sub_10042E824(a1, a2, (SEL *)&selRef_isSelected);
}

void sub_10042E70C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v10.receiver = a1;
  v10.super_class = ObjectType;
  id v6 = a1;
  unsigned int v7 = [super isSelected];
  v9.receiver = v6;
  v9.super_class = ObjectType;
  [super setSelected:a3];
  v8.receiver = v6;
  v8.super_class = ObjectType;
  if (v7 != objc_msgSendSuper2(&v8, "isSelected")) {
    [v6 setNeedsUpdateConfiguration];
  }
}

void sub_10042E7B8(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)swift_getObjectType();
  id v1 = v2.receiver;
  [super tintColorDidChange];
  [v1 setNeedsUpdateConfiguration];
}

id sub_10042E818(void *a1, uint64_t a2)
{
  return sub_10042E824(a1, a2, (SEL *)&selRef_isEditing);
}

id sub_10042E824(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)swift_getObjectType();
  return [super *a3];
}

void sub_10042E864(void *a1, uint64_t a2, char a3)
{
  id v4 = a1;
  sub_10042ABEC(a3);
}

void sub_10042E8B8(char a1)
{
  sub_10042EBBC(0);
  id v3 = *(void **)&v1[qword_100715608];
  if (v3 && swift_unknownObjectWeakLoadStrong())
  {
    if (*(void *)&v1[qword_100715600] || (v1[qword_1007155E8] & 1) != 0)
    {
      id v4 = v3;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    char v13 = v1[qword_1007155F0];
    id v14 = v3;
    swift_unknownObjectRelease();
    if (v13)
    {
LABEL_6:
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(unsigned char *)(v5 + 24) = a1 & 1;
      *(void *)(v5 + 32) = v1;
      id v6 = self;
      unsigned int v7 = (void *)swift_allocObject();
      v7[2] = sub_100431B54;
      void v7[3] = v5;
      _OWORD v7[4] = v1;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_100431BA4;
      *(void *)(v8 + 24) = v7;
      aBlock[4] = sub_1000879B8;
      aBlock[5] = v8;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100087990;
      void aBlock[3] = &unk_1006ABD60;
      objc_super v9 = _Block_copy(aBlock);
      objc_super v10 = v1;
      id v11 = v3;
      char v12 = v10;
      swift_retain();
      swift_retain();
      swift_release();
      [v6 performWithoutAnimation:v9];
      swift_release();

      _Block_release(v9);
      LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (v10) {
        __break(1u);
      }
      return;
    }
  }
}

id sub_10042EB30(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v3 = a1;
  sub_10042EBBC(0);
  id v4 = *(void **)&v3[qword_100715608];
  if (v4 && [v4 isFirstResponder])
  {

    return 0;
  }
  else
  {
    v7.receiver = v3;
    v7.super_class = ObjectType;
    [super canBecomeFocused];
  }
  return v5;
}

void sub_10042EBBC(int a1)
{
  objc_super v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716098);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  objc_super v10 = (char *)&v44 - v9;
  uint64_t v11 = qword_100715608;
  if (!*(void *)&v1[qword_100715608])
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      v51.receiver = v2;
      v51.super_class = ObjectType;
      if (objc_msgSendSuper2(&v51, "isEditing") & 1) != 0 || (a1)
      {
        sub_10054EF5C(v10);
        id v13 = *(id *)&v10[*(int *)(v5 + 44)];
        sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_100716098);
        id v14 = [v13 textLayoutGuide];

        if (v14)
        {
          id v45 = ObjectType;
          int v46 = a1;
          id v15 = [objc_allocWithZone((Class)UITextField) initWithFrame:0.0, 0.0, 0.0, 0.0];
          [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
          [v15 setTextSelectionBehavior:2];
          sub_10054EF5C(v8);
          id v16 = *(id *)&v8[*(int *)(v5 + 44)];
          sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_100716098);
          [v16 addSubview:v15];

          id v17 = [v15 leadingAnchor];
          id v18 = [v14 leadingAnchor];
          id v19 = [v17 constraintEqualToAnchor:v18];

          id v47 = self;
          sub_1000CBE70((uint64_t *)&unk_1007084E0);
          uint64_t v20 = swift_allocObject();
          *(_OWORD *)(v20 + 16) = xmmword_1005A1560;
          *(void *)(v20 + 32) = v19;
          id v48 = v19;
          id v21 = [v15 trailingAnchor];
          sub_10054EF5C(v8);
          id v22 = *(id *)&v8[*(int *)(v5 + 44)];
          sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_100716098);
          id v23 = [v22 layoutMarginsGuide];

          id v24 = [v23 trailingAnchor];
          id v25 = [v21 constraintEqualToAnchor:v24];

          *(void *)(v20 + 40) = v25;
          id v26 = [v15 topAnchor];
          id v27 = [v14 topAnchor];
          id v28 = [v26 constraintEqualToAnchor:v27];

          *(void *)(v20 + 48) = v28;
          id v29 = [v15 bottomAnchor];
          id v30 = [v14 bottomAnchor];
          id v31 = [v29 constraintEqualToAnchor:v30];

          *(void *)(v20 + 56) = v31;
          uint64_t v50 = v20;
          specialized Array._endMutation()();
          sub_10009E6C4(0, (unint64_t *)&unk_100706720);
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v47 activateConstraints:isa];

          [v15 setEnablesReturnKeyAutomatically:1];
          [v15 setKeyboardType:0];
          [v15 setReturnKeyType:9];
          [v15 setDelegate:v2];
          [v15 setHidden:1];
          [v15 setAdjustsFontForContentSizeCategory:1];
          id v33 = [self preferredFontForTextStyle:UIFontTextStyleBody];
          [v15 setFont:v33];

          uint64_t v34 = *(void **)&v2[v11];
          *(void *)&v2[v11] = v15;
          id v35 = v15;

          id v36 = *(void **)&v2[qword_100715610];
          char v37 = v48;
          *(void *)&v2[qword_100715610] = v48;
          id v38 = v37;

          id v39 = sub_10042FEF4();
          sub_10042C75C(v39);
          sub_10042EBBC(0);
          unint64_t v40 = *(void **)&v2[v11];
          if (v40)
          {
            v49.receiver = v2;
            v49.super_class = v45;
            id v41 = v40;
            unsigned __int8 v42 = [super isEditing];
            double v43 = 1.0;
            if (((v42 | v46) & 1) == 0) {
              double v43 = 0.0;
            }
            [v41 setAlpha:v43];

            id v14 = v35;
            id v35 = v38;
            id v38 = v41;
          }
        }
      }
    }
  }
}

void sub_10042F1A4(void *a1, char a2, void *a3)
{
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_100716098);
  double v7 = __chkstk_darwin(v6);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  [a1 setHidden:(a2 & 1) == 0, v7];
  v29[16] = a2;
  id v10 = [a3 window];
  id v11 = v10;
  if (v10) {

  }
  __chkstk_darwin(v11 == 0);
  *(void *)&v29[-32] = sub_100431BC0;
  *(void *)&v29[-24] = v29;
  *(void *)&v29[-16] = a3;
  UIView.doc_performBlock(allowingAnimations:block:)();
  sub_10054EF5C(v9);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100716098);
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 setText:v12];

    sub_10054EF5C(v9);
    swift_bridgeObjectRetain();
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100716098);
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 setPlaceholder:v13];
  }
  else
  {
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_100716098);
    id v14 = [a3 traitCollection];
    id v15 = v14;
    if (!v14)
    {
      id v16 = [self mainScreen];
      id v15 = [v16 traitCollection];
    }
    id v17 = v14;
    id v18 = [v15 preferredContentSizeCategory];
    UIContentSizeCategory.isAccessibilityCategory.getter();

    double v20 = __chkstk_darwin(v19);
    *(void *)&v29[-16] = v21;
    id v22 = [a3 window];
    id v23 = v22;
    if (v22) {

    }
    __chkstk_darwin(v23 == 0);
    *(void *)&v29[-32] = sub_100431BCC;
    *(void *)&v29[-24] = &v29[-32];
    *(void *)&v29[-16] = a3;
    UIView.doc_performBlock(allowingAnimations:block:)();
    id v24 = [a1 text];
    if (v24)
    {
      id v25 = v24;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    sub_10042C574(v26, v28);
  }
}

void sub_10042F540(void (*a1)(double))
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100716098);
  uint64_t v3 = v2 - 8;
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  sub_10054EF5C(v6);
  id v7 = *(id *)&v6[*(int *)(v3 + 52)];
  sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_100716098);
  [v7 layoutBelowIfNeeded];
}

uint64_t sub_10042F610(void *a1)
{
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  id v7 = [v6 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v7) = UICellConfigurationState.isExpanded.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);

  return v7 & 1;
}

id sub_10042F710(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + qword_100715638);
  if (v1) {
    return [*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCEjectionController_source) isEjectable];
  }
  else {
    return 0;
  }
}

id sub_10042F744(void *a1)
{
  return [a1 indentationLevel];
}

uint64_t sub_10042F750()
{
  return 0;
}

uint64_t sub_10042F758(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + qword_1007155E8);
}

id sub_10042F768(void *a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100716098);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = a1;
  sub_10054EF5C(v4);
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_100716098);

  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v6;
}

id sub_10042F84C(void *a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100716098);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  sub_10054EF5C(v5);
  uint64_t v7 = *(void *)&v5[*(int *)(v3 + 48) + 40];
  swift_bridgeObjectRetain();
  sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_100716098);

  if (v7)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }

  return v8;
}

id sub_10042F940(void *a1)
{
  uint64_t v1 = a1;
  sub_10042EBBC(0);
  id v2 = *(id *)&v1[qword_100715608];

  return v2;
}

id sub_10042F988(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1007155E0 + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[qword_1007155E8] = 0;
  v4[qword_1007155F0] = 0;
  uint64_t v10 = &v4[qword_1007155F8];
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *((void *)v10 + 4) = 0;
  *(void *)&v4[qword_100715600] = 0;
  *(void *)&v4[qword_100715608] = 0;
  *(void *)&v4[qword_100715610] = 0;
  *(void *)&v4[qword_100715618] = 0;
  *(void *)&v4[qword_100715620] = 0;
  *(void *)&v4[qword_100715628] = 0;
  v4[qword_100715630] = 0;
  *(void *)&v4[qword_100715638] = 0;
  *(void *)&v4[qword_100715640] = 0;
  *(void *)&v4[qword_100715648] = 0;
  v4[qword_100715650] = 2;
  *(void *)&v4[qword_100715658] = 0;
  v4[qword_100715660] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10042FAE4(double a1, double a2, double a3, double a4)
{
  return sub_10042F988(a1, a2, a3, a4);
}

uint64_t sub_10042FB08()
{
  sub_10003A094(v0 + qword_1007155E0);
  sub_1000CBBA4(v0 + qword_1007155F8, &qword_1007160A8);

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_10042FBF0(uint64_t a1)
{
  sub_10003A094(a1 + qword_1007155E0);
  sub_1000CBBA4(a1 + qword_1007155F8, &qword_1007160A8);

  swift_release();
  swift_release();

  return swift_release();
}

uint64_t type metadata accessor for DOCSidebarItemCell(uint64_t a1)
{
  return sub_10009E984(a1, qword_100715690);
}

uint64_t sub_10042FD04()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10042FD88()
{
  return type metadata accessor for DOCSidebarItemCell(0);
}

uint64_t type metadata accessor for DOCSidebarItemCell.RawImageIconProvider()
{
  return self;
}

uint64_t type metadata accessor for DOCSidebarItemCell.TagIconProvider()
{
  return self;
}

uint64_t type metadata accessor for DOCSidebarItemCell.ProviderSyncStateAccessoryItem(uint64_t a1)
{
  return sub_10009E984(a1, qword_100715A60);
}

uint64_t type metadata accessor for DOCSidebarItemCell.RemoveableItemStateAccessoryItem(uint64_t a1)
{
  return sub_10009E984(a1, qword_100715BD8);
}

uint64_t type metadata accessor for DOCSidebarItemCell.EjectAccessoryItem(uint64_t a1)
{
  return sub_10009E984(a1, qword_100715D50);
}

uint64_t sub_10042FE3C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCSidebarItemCell.SourceEnabledSwitchAccessory(uint64_t a1)
{
  return sub_10009E984(a1, qword_100715ED0);
}

uint64_t sub_10042FEA4()
{
  return swift_initClassMetadata2();
}

id sub_10042FEF4()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  if (v1)
  {
    id v3 = [v0 traitCollection];
    static CGSize.doc_preferredSourceListIconSize(for:)();
    double v5 = v4;

    id result = *(id *)&v0[qword_100715610];
    if (!result) {
      return result;
    }
    double v7 = v5 + 8.0;
  }
  else
  {
    id result = *(id *)&v0[qword_100715610];
    if (!result) {
      return result;
    }
    double v7 = 0.0;
  }

  return [result setConstant:v7];
}

uint64_t sub_100430084(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v4 = [a1 text];
    if (v4)
    {
      double v5 = v4;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    sub_10028E310();
    swift_bridgeObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
  }
  uint64_t v6 = *(void *)((swift_isaMask & *v1) + 0x70);
  int v7 = *((unsigned __int8 *)v1 + v6);
  *((unsigned char *)v1 + v6) = 0;
  if (v7 == 1) {
    return sub_100429FC8();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCSidebarItemCell.UnseenIndicatorState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100430340);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSidebarItemCell.UnseenIndicatorState()
{
  return &type metadata for DOCSidebarItemCell.UnseenIndicatorState;
}

void destroy for DOCSidebarItemContentValueBinding(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v2 = *(void **)(a1 + 56);
}

uint64_t initializeWithCopy for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void **)(a2 + 56);
  uint64_t v5 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for DOCSidebarItemContentValueBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v6 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarItemContentValueBinding(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarItemContentValueBinding(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSidebarItemContentValueBinding()
{
  return &type metadata for DOCSidebarItemContentValueBinding;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for DOCSidebarIcon(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCSidebarIcon(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCSidebarIcon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSidebarIcon()
{
  return &type metadata for DOCSidebarIcon;
}

unint64_t sub_10043073C()
{
  unint64_t result = qword_100716078;
  if (!qword_100716078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716078);
  }
  return result;
}

uint64_t sub_100430790(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void sub_100430798(void *a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self nonClearNoneTagColor];
  UICollectionViewCell.backgroundConfiguration.getter();
  uint64_t v8 = type metadata accessor for UIBackgroundConfiguration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
  {
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070E2F0);
  }
  else
  {
    uint64_t v9 = (void *)UIBackgroundConfiguration.backgroundColor.getter();
    sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070E2F0);
    if (v9)
    {
      id v10 = [a2 tintColor];
      unsigned int v11 = [v9 _isSimilarToColor:v10 withinPercentage:0.01];

      if (v11)
      {
        id v12 = [self systemWhiteColor];

        id v7 = v12;
      }
      else
      {
      }
    }
  }
  [a1 setRingColor:v7];
}

id sub_100430950(void *a1, double a2, double a3)
{
  id v5 = [self requestForTag:*(void *)(v3 + 16) tagDimension:a2 + a3];
  [v5 setAllowUnsizedSymbolImages:1];
  if (*(unsigned char *)(v3 + 24) == 1)
  {
    sub_100430798(v5, a1);
  }
  else
  {
    id v6 = [a1 traitCollection];
    id v7 = [v6 sourceOutlineStyle];

    if (v7) {
      id v8 = 0;
    }
    else {
      id v8 = [self secondarySystemBackgroundColor];
    }
    [v5 setSelectionOutlineColor:v8];
  }
  id v9 = [self shared];
  id v10 = [v9 renderImageWithRequest:v5];

  return v10;
}

id sub_100430AA8(void *a1, char a2, void *a3, double a4, double a5)
{
  id v9 = a1;
  if ([a1 isSymbolImage]) {
    return v9;
  }
  [v9 size];
  if (v11 == a4 && v10 == a5) {
    return v9;
  }
  id v13 = [a3 traitCollection];
  id v14 = [self formatForTraitCollection:v13];
  id v15 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v14 format:a4];

  uint64_t v16 = swift_allocObject();
  *(double *)(v16 + 16) = a4;
  *(double *)(v16 + 24) = a5;
  *(void *)(v16 + 32) = v9;
  *(unsigned char *)(v16 + 40) = a2 & 1;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100430D20;
  *(void *)(v17 + 24) = v16;
  v21[4] = sub_100162670;
  v21[5] = v17;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  _OWORD v21[2] = sub_100429DC4;
  v21[3] = &unk_1006ABB30;
  id v18 = _Block_copy(v21);
  id v19 = v9;
  swift_retain();
  swift_release();
  id v9 = [v15 imageWithActions:v18];

  _Block_release(v18);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v13)
  {
    __break(1u);
    return v9;
  }
  return v9;
}

uint64_t sub_100430CE8()
{
  return _swift_deallocObject(v0, 41, 7);
}

id sub_100430D20()
{
  return [*(id *)(v0 + 32) drawInRect:0.0, 0.0, *(double *)(v0 + 16), *(double *)(v0 + 24)];
}

uint64_t sub_100430D3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100430D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCSidebarItemCell.SourceEnabledSwitchAccessory(0);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + qword_100715EA0) = 0;
  id v13 = (void *)(v12 + qword_100715E98);
  void *v13 = a1;
  v13[1] = a2;
  id v14 = (uint64_t (**)())&v11[*(int *)(sub_1000CBE70(&qword_10070E2E0) + 48)];
  uint64_t v15 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v16 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v11, v15, v16);
  *id v14 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v14[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for UICellAccessory.Placement.trailing(_:), v8);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UICellAccessory.LayoutDimension.actual(_:), v4);
  return sub_100428C7C(0xD000000000000013, 0x80000001005F4270, (uint64_t)v7, 2, (uint64_t)v11, (uint64_t)sub_10042E408, 0);
}

uint64_t sub_100430FB4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v7 = 0;
  if (v6)
  {
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v8 = *(void *)(a1 + 8 * v7 + 32);
        swift_retain();
      }
      if (*(void *)(v8 + 16) == a2 && *(void *)(v8 + 24) == a3) {
        break;
      }
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_release();
      if (v10) {
        return v7;
      }
      uint64_t v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_17:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v7 = 0;
        if (!v6) {
          return v7;
        }
      }
      else
      {
        ++v7;
        if (v11 == v6) {
          return 0;
        }
      }
    }
    swift_release();
  }
  return v7;
}

uint64_t sub_1004310E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = sub_100430FB4(v7, a2, a3);
  char v10 = v9;
  uint64_t v11 = v3;
  swift_bridgeObjectRelease();
  if (v3) {
    return v8;
  }
  if ((v10 & 1) == 0)
  {
    unint64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_61;
    }
    if ((unint64_t)*a1 >> 62)
    {
LABEL_62:
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12 != v29) {
        goto LABEL_6;
      }
    }
    else if (v12 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      unint64_t v12 = v8 + 5;
      uint64_t v31 = v11;
      while (1)
      {
        unint64_t v13 = v12 - 4;
        uint64_t v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            goto LABEL_62;
          }
          if (v13 >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_52;
          }
          uint64_t v15 = *(void *)(v14 + 8 * v12);
          swift_retain();
        }
        if (*(void *)(v15 + 16) == a2 && *(void *)(v15 + 24) == a3)
        {
          swift_release();
          goto LABEL_39;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        if (v17) {
          goto LABEL_39;
        }
        if (v13 != v8) {
          break;
        }
LABEL_35:
        if (__OFADD__(v8++, 1)) {
          goto LABEL_54;
        }
LABEL_39:
        unint64_t v25 = v12 - 3;
        if (__OFADD__(v13, 1)) {
          goto LABEL_53;
        }
        if ((unint64_t)*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v26 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v12;
        if (v25 == v26) {
          return v8;
        }
      }
      uint64_t v18 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v18 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_21:
          if ((v13 & 0x8000000000000000) != 0) {
            goto LABEL_57;
          }
          if (v13 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_58;
          }
          uint64_t v20 = *(void *)(v18 + 8 * v12);
          swift_retain();
          goto LABEL_24;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0) {
          goto LABEL_55;
        }
        if (v8 >= *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_56;
        }
        uint64_t v19 = *(void *)(v18 + 8 * v8 + 32);
        swift_retain();
        if ((v18 & 0xC000000000000001) == 0) {
          goto LABEL_21;
        }
      }
      uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v18 = *a1;
LABEL_24:
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v18;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v18 < 0 || (v18 & 0x4000000000000000) != 0)
      {
        uint64_t v18 = sub_1000BC324(v18);
        *a1 = v18;
      }
      *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v20;
      swift_release();
      specialized Array._endMutation()();
      uint64_t v22 = *a1;
      int v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *a1 = v22;
      if (!v23 || v22 < 0 || (v22 & 0x4000000000000000) != 0)
      {
        uint64_t v22 = sub_1000BC324(v22);
        *a1 = v22;
      }
      uint64_t v11 = v31;
      if ((v13 & 0x8000000000000000) != 0) {
        goto LABEL_59;
      }
      if (v13 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_60;
      }
      *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 8 * v12) = v19;
      swift_release();
      specialized Array._endMutation()();
      goto LABEL_35;
    }
    return v8;
  }
  unint64_t v27 = *a1;
  if (!(v27 >> 62)) {
    return *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_100431444(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v7 = 4;
      do
      {
        uint64_t v8 = v7 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v9 = *(void *)(a1 + 8 * v7);
          swift_retain();
          BOOL v10 = __OFADD__(v8, 1);
          uint64_t v11 = v7 - 3;
          if (v10)
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        BOOL v12 = *(void *)(v9 + 16) == a2 && *(void *)(v9 + 24) == a3;
        if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_100431570@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self mainScreen];
  id v3 = [v2 traitCollection];

  id v4 = [v3 preferredContentSizeCategory];
  char v5 = UIContentSizeCategory.isAccessibilityCategory.getter();

  if (qword_1007051D8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_100737558;
  uint64_t v7 = 2;
  if (v5) {
    uint64_t v7 = 3;
  }
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v6;

  return v6;
}

void sub_100431674()
{
  uint64_t v1 = *(void *)(v0 + qword_100715BA8);
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver);
  *(void *)(v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver) = 0;
}

void sub_100431694()
{
  sub_10042D62C(v0);
}

const char *sub_10043169C()
{
  return "operationState";
}

id sub_1004316A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 operationState];
  *a2 = result;
  return result;
}

id sub_1004316DC(void *a1, id *a2)
{
  return [*a2 setOperationState:*a1];
}

uint64_t sub_1004316F0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100431728()
{
}

uint64_t sub_100431730()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10043176C@<X0>(uint64_t a1@<X8>)
{
  return sub_100431E1C(&qword_100716088, a1);
}

uint64_t sub_100431778()
{
  return sub_10042CE48(v0);
}

uint64_t sub_100431780()
{
  return sub_10042CDD8(v0);
}

void sub_100431788(uint64_t a1)
{
}

uint64_t sub_100431794(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UICellAccessory.Placement() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for UICellAccessory.LayoutDimension() - 8);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100429594(a1, v7, v8, v1 + v4, v9);
}

uint64_t sub_1004318A0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  if (v3) {
    uint64_t v4 = *(void *)(v1 + 16);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v3) {
    unint64_t v5 = *(void *)(v1 + 24);
  }
  else {
    unint64_t v5 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v4;
  a1[1] = v5;
  return result;
}

uint64_t sub_1004318F0()
{
  return sub_10055075C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1004318FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  id v4 = sub_100431970(*(void **)(v1 + 56), *(unsigned char *)(v1 + 64), v3, *(void **)(v1 + 40));

  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 48) = *(void *)(v3 + qword_100715600) != 0;
}

id sub_100431970(void *a1, char a2, uint64_t a3, void *a4)
{
  unsigned __int8 v8 = [a1 isSymbolImage];
  if (*(void *)(a3 + qword_100715600) || (v8 & 1) == 0)
  {
    id v15 = [a1 imageWithRenderingMode:1];
    return v15;
  }
  else
  {
    if (a2)
    {
      uint64_t v9 = self;
      id v10 = a1;
      id v11 = a4;
      id v12 = [v9 tintColor];
      id v13 = [self configurationWithHierarchicalColor:v12];

      id v14 = [v11 configurationByApplyingConfiguration:v13];
    }
    else
    {
      id v17 = a1;
      id v14 = a4;
    }
    id v18 = v14;
    id v19 = [a1 imageWithConfiguration:v18];

    if (a2)
    {

      return v19;
    }
    else
    {
      id v20 = [v19 imageWithRenderingMode:2];

      return v20;
    }
  }
}

uint64_t sub_100431B14()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100431B54()
{
  sub_10042F1A4(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100431B64()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100431BA4()
{
  sub_10042F540(*(void (**)(double))(v0 + 16));
}

uint64_t sub_100431BB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100431BC0(uint64_t result)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(v1 + 16);
  return result;
}

uint64_t sub_100431BCC(uint64_t result)
{
  *(void *)(result + 16) = *(void *)(v1 + 16);
  return result;
}

uint64_t sub_100431BD8()
{
  uint64_t v1 = *(void *)((swift_isaMask & *v0) + 0x70);
  char v2 = *((unsigned char *)v0 + v1);
  *((unsigned char *)v0 + v1) = 1;
  if ((v2 & 1) == 0) {
    sub_100429FC8();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10028CA90(v0);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100431C70()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100431CA8()
{
  return sub_10042E524();
}

uint64_t sub_100431CB4()
{
  uint64_t v1 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  uint64_t v11 = *(void *)(v7 + 64) + v9 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_100431E10@<X0>(uint64_t a1@<X8>)
{
  return sub_100431E1C(&qword_1007160C8, a1);
}

uint64_t sub_100431E1C@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for UICellAccessory.Placement() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for UICellAccessory.LayoutDimension() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_100429900(*(uint64_t (**)(uint64_t))(v2 + 16), v2 + v6, v2 + v9, *(unsigned __int8 *)(v2 + v9 + *(void *)(v8 + 64)), a1, a2);
}

unsigned char *storeEnumTagSinglePayload for DOCNodeStatusAppearance(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100432030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeStatusAppearance()
{
  return &type metadata for DOCNodeStatusAppearance;
}

unint64_t sub_10043206C()
{
  unint64_t result = qword_1007160D0;
  if (!qword_1007160D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007160D0);
  }
  return result;
}

id sub_1004320C0(uint64_t a1, char a2)
{
  uint64_t v2 = (void *)0xE700000000000000;
  uint64_t v3 = 0x6567617373656DLL;
  id v5 = 0;
  switch(a2)
  {
    case 1:
      uint64_t v3 = 0xD000000000000015;
      unsigned int v6 = "icloud.and.arrow.down";
      goto LABEL_7;
    case 2:
    case 7:
      return v5;
    case 3:
      uint64_t v7 = "exclamationmark.icloud";
      goto LABEL_5;
    case 4:
      uint64_t v2 = (void *)0xEC0000006873616CLL;
      uint64_t v3 = 0x732E64756F6C6369;
      break;
    case 5:
      uint64_t v2 = (void *)0xED00006465687361;
      uint64_t v3 = 0x642E64756F6C6369;
      break;
    case 6:
      uint64_t v3 = 0xD000000000000012;
      unsigned int v6 = "arrow.down.message";
LABEL_7:
      uint64_t v2 = (void *)((unint64_t)(v6 - 32) | 0x8000000000000000);
      break;
    case 8:
      uint64_t v2 = (void *)0xE800000000000000;
      uint64_t v3 = 0x65706F6C65766E65;
      break;
    case 9:
      uint64_t v7 = "arrow.down.circle.fill";
LABEL_5:
      uint64_t v2 = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
      uint64_t v3 = 0xD000000000000016;
      break;
    default:
      break;
  }
  id v5 = [objc_allocWithZone((Class)NSTextAttachment) init];
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v9 = self;
  id v10 = [v9 systemImageNamed:v8];

  if (v10
    && (uint64_t v11 = a1,
        id v12 = [self secondaryLabelColor],
        id v13 = [v10 imageWithTintColor:v12 renderingMode:1],
        v10,
        v12,
        a1 = v11,
        v13))
  {
    id v14 = v13;
    swift_bridgeObjectRelease();
    id v15 = [self configurationWithFont:v11 scale:1];
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = [v9 _systemImageNamed:v16 withConfiguration:0];

    if (!v17
      || (v17,
          id v18 = [self secondaryLabelColor],
          id v19 = [v17 imageWithTintColor:v18 renderingMode:1],
          v17,
          v18,
          !v19))
    {
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      v23._uint64_t countAndFlagsBits = v3;
      v23._object = v2;
      String.append(_:)(v23);
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x1004324B0);
    }
    id v14 = v19;
    swift_bridgeObjectRelease();
    id v15 = [self configurationWithFont:a1 scale:1];
  }
  id v20 = v15;
  id v21 = [v14 imageWithConfiguration:v20];

  [v5 setImage:v21];
  return v5;
}

objc_class *sub_100432500(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        unsigned int v4 = result;
        unint64_t v21 = 0x80000001005F43D0;
        uint64_t v6 = 0x6220646572616853;
        unint64_t v7 = 0xEC000000654D2079;
        uint64_t v8 = 0x617A696C61636F4CLL;
        unint64_t v9 = 0xEB00000000656C62;
        v10.super.Class isa = v4;
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
        unint64_t v5 = 0xD000000000000033;
LABEL_11:
        uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, *(Swift::String *)&v8, v10, *(Swift::String *)&v11, *(Swift::String *)&v5)._countAndFlagsBits;

        return (objc_class *)countAndFlagsBits;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    case 1:
      unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        unsigned int v4 = result;
        unint64_t v5 = 0xD000000000000042;
        unint64_t v21 = 0x80000001005F4340;
        uint64_t v6 = 0x646572616853;
        unint64_t v7 = 0xE600000000000000;
        goto LABEL_10;
      }
      goto LABEL_15;
    case 2:
      unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        unsigned int v4 = result;
        unint64_t v5 = 0xD00000000000003ALL;
        unint64_t v21 = 0x80000001005E94C0;
        uint64_t v6 = 0x7261685320746F4ELL;
        unint64_t v7 = 0xEA00000000006465;
LABEL_10:
        uint64_t v8 = 0x617A696C61636F4CLL;
        unint64_t v9 = 0xEB00000000656C62;
        v10.super.Class isa = v4;
        uint64_t v11 = 0;
        unint64_t v12 = 0xE000000000000000;
        goto LABEL_11;
      }
      goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    id v15 = result;
    v22._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v22._object = (void *)0x80000001005F4390;
    v16._uint64_t countAndFlagsBits = 0x6220646572616853;
    v16._object = (void *)0xEC00000040252079;
    v17._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v17._object = (void *)0xEB00000000656C62;
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v22);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1005A0030;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100073F48();
    *(void *)(v19 + 32) = a1;
    *(void *)(v19 + 40) = a2;
    uint64_t v20 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (objc_class *)v20;
  }
LABEL_17:
  __break(1u);
  return result;
}

Swift::Int sub_1004327B0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v1 == 1)
    {
      Swift::UInt v2 = 2;
    }
    else
    {
      if (v1 != 2)
      {
        Hasher._combine(_:)(1uLL);
        String.hash(into:)();
        return Hasher._finalize()();
      }
      Swift::UInt v2 = 3;
    }
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_100432840()
{
  uint64_t v1 = *(void *)(v0 + 8);
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v2 = 2;
      goto LABEL_7;
    case 2:
      Swift::UInt v2 = 3;
LABEL_7:
      Hasher._combine(_:)(v2);
      return;
  }
  Hasher._combine(_:)(1uLL);

  String.hash(into:)();
}

Swift::Int sub_1004328D8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v1 == 1)
    {
      Swift::UInt v2 = 2;
    }
    else
    {
      if (v1 != 2)
      {
        Hasher._combine(_:)(1uLL);
        String.hash(into:)();
        return Hasher._finalize()();
      }
      Swift::UInt v2 = 3;
    }
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

uint64_t sub_100432964(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = a2[1];
  switch(v3)
  {
    case 0:
      return !v4;
    case 1:
      return v4 == 1;
    case 2:
      return v4 == 2;
  }
  if (v4 < 3) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v4) {
    return 1;
  }
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t getEnumTagSinglePayload for DOCItemSharedByGroupCategory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemSharedByGroupCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemSharedByGroupCategory()
{
  return &type metadata for DOCItemSharedByGroupCategory;
}

unint64_t sub_100432A9C()
{
  unint64_t result = qword_1007160D8;
  if (!qword_1007160D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007160D8);
  }
  return result;
}

void *sub_100432AF0(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100708110);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UTType();
  __chkstk_darwin(v5);
  id v36 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v28 - v9;
  uint64_t v33 = v8;
  uint64_t v10 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v12 & *(void *)(a1 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  id v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  id v35 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v17 = 0;
  char v37 = _swiftEmptyArrayStorage;
  int64_t v30 = v14;
  uint64_t v31 = a1 + 56;
  if (!v13) {
    goto LABEL_7;
  }
LABEL_4:
  for (v13 &= v13 - 1; ; uint64_t v13 = (v19 - 1) & v19)
  {
    swift_bridgeObjectRetain();
    UTType.init(_:)();
    if ((*v15)(v4, 1, v5) == 1)
    {
      unint64_t result = (void *)sub_10018482C((uint64_t)v4);
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      unint64_t v21 = *v35;
      Swift::String v22 = v32;
      (*v35)(v32, v4, v5);
      uint64_t v34 = v21;
      v21(v36, v22, v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v37 = (void *)sub_1000B6388(0, v37[2] + 1, 1, (unint64_t)v37);
      }
      unint64_t v24 = v37[2];
      unint64_t v23 = v37[3];
      unint64_t v25 = v24 + 1;
      int64_t v14 = v30;
      uint64_t v10 = v31;
      if (v24 >= v23 >> 1)
      {
        unint64_t v29 = v24 + 1;
        unint64_t v27 = (void *)sub_1000B6388(v23 > 1, v24 + 1, 1, (unint64_t)v37);
        unint64_t v25 = v29;
        char v37 = v27;
      }
      uint64_t v26 = v37;
      v37[2] = v25;
      unint64_t result = (void *)((uint64_t (*)(char *, char *, uint64_t))v34)((char *)v26+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v24, v36, v5);
      if (v13) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v18 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v14) {
      goto LABEL_29;
    }
    uint64_t v19 = *(void *)(v10 + 8 * v18);
    ++v17;
    if (!v19)
    {
      int64_t v17 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_29;
      }
      uint64_t v19 = *(void *)(v10 + 8 * v17);
      if (!v19)
      {
        int64_t v17 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_29;
        }
        uint64_t v19 = *(void *)(v10 + 8 * v17);
        if (!v19)
        {
          int64_t v17 = v18 + 3;
          if (v18 + 3 >= v14) {
            goto LABEL_29;
          }
          uint64_t v19 = *(void *)(v10 + 8 * v17);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v14)
  {
LABEL_29:
    swift_release();
    return v37;
  }
  uint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v17 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_29;
    }
    uint64_t v19 = *(void *)(v10 + 8 * v17);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100432E98(void *a1)
{
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 allowedContentTypes:v5];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
    swift_bridgeObjectRelease();

    if (!v10) {
      goto LABEL_5;
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_5:
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes);
  if (v11)
  {
    int64_t v12 = *(void *)(v11 + 16);
    uint64_t v13 = _swiftEmptyArrayStorage;
    if (v12)
    {
      unint64_t v27 = a1;
      uint64_t v31 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100059E2C(0, v12, 0);
      uint64_t v14 = v4 + 16;
      id v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v16 = *(unsigned __int8 *)(v4 + 80);
      uint64_t v26 = v11;
      uint64_t v17 = v11 + ((v16 + 32) & ~v16);
      uint64_t v28 = *(void *)(v14 + 56);
      unint64_t v29 = v15;
      uint64_t v30 = v14;
      int64_t v18 = (void (**)(char *, uint64_t))(v14 - 8);
      do
      {
        v29(v7, v17, v3);
        uint64_t v19 = UTType.identifier.getter();
        uint64_t v21 = v20;
        (*v18)(v7, v3);
        uint64_t v13 = v31;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100059E2C(0, v13[2] + 1, 1);
          uint64_t v13 = v31;
        }
        unint64_t v23 = v13[2];
        unint64_t v22 = v13[3];
        if (v23 >= v22 >> 1)
        {
          sub_100059E2C(v22 > 1, v23 + 1, 1);
          uint64_t v13 = v31;
        }
        v13[2] = v23 + 1;
        unint64_t v24 = &v13[2 * v23];
        v24[4] = v19;
        v24[5] = v21;
        v17 += v28;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      a1 = v27;
    }
    sub_100167A04((uint64_t)v13);
    swift_bridgeObjectRelease();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 setAllowedContentTypes:isa];
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_100433184()
{
  return swift_bridgeObjectRelease();
}

id sub_100433194()
{
  return sub_1004354F4(0, type metadata accessor for DOCFileTypeSuggestion);
}

uint64_t type metadata accessor for DOCFileTypeSuggestion()
{
  return self;
}

uint64_t sub_1004331E4(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  double v5 = v4;
  uint64_t v61 = a1;
  uint64_t v9 = type metadata accessor for UTType();
  uint64_t v59 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v11 = (unint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v48 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t)&v48 - v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
  if (a4 >> 62) {
    goto LABEL_52;
  }
  uint64_t v19 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v19) {
    goto LABEL_13;
  }
LABEL_3:
  if ((a4 & 0xC000000000000001) == 0)
  {
    uint64_t v21 = 0;
    while (1)
    {
      uint64_t v22 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        break;
      }
      if (*(unsigned char *)(*(void *)(a4 + 8 * v21 + 32) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) == 2)
      {
        unint64_t v32 = a3;
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      ++v21;
      if (v22 == v19)
      {
LABEL_13:
        while (1)
        {
          unint64_t v60 = a3;
          swift_bridgeObjectRelease();
LABEL_14:
          unint64_t v23 = *(void **)&v5[OBJC_IVAR____TtC5Files12DOCSuggester_configuration];
          if ([v23 isFilesApp])
          {
            a4 = (unint64_t)_swiftEmptyArrayStorage;
          }
          else
          {
            id v24 = [v23 documentContentTypes];
            a4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          uint64_t v25 = v17;
          if (!*(void *)(a4 + 16)) {
            break;
          }
          swift_bridgeObjectRetain();
          static UTType.folder.getter();
          uint64_t v56 = *(char **)(a4 + 16);
          if (!v56)
          {
            uint64_t v31 = v61;
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v17, v9);
            goto LABEL_40;
          }
          unint64_t v52 = v11;
          uint64_t v53 = v18;
          uint64_t v26 = a2;
          uint64_t v27 = v59;
          unint64_t v11 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
          uint64_t v18 = v59 + 16;
          char v55 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
          v55(v14, a4 + v11, v9);
          unint64_t v28 = sub_10018488C();
          swift_bridgeObjectRetain();
          uint64_t v58 = v25;
          unint64_t v54 = v28;
          char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
          uint64_t v17 = v27 + 8;
          double v57 = v30;
          v30((uint64_t)v14, v9);
          if (v29)
          {
            swift_bridgeObjectRelease();
LABEL_47:
            unint64_t v43 = v60;
            v57(v58, v9);
            swift_bridgeObjectRelease();
            uint64_t v31 = v61;
            uint64_t v18 = v53;
            a2 = v26;
            goto LABEL_48;
          }
          uint64_t v50 = v17 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          if (v56 == (char *)1)
          {
            swift_bridgeObjectRelease();
            uint64_t v31 = v61;
            uint64_t v18 = v53;
            a2 = v26;
LABEL_39:
            unint64_t v11 = v52;
            v57(v58, v9);
LABEL_40:
            swift_bridgeObjectRelease();
            static UTType.folder.getter();
            unint64_t v40 = v11;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              a4 = sub_1000B6388(0, *(void *)(a4 + 16) + 1, 1, a4);
            }
            unint64_t v42 = *(void *)(a4 + 16);
            unint64_t v41 = *(void *)(a4 + 24);
            if (v42 >= v41 >> 1) {
              a4 = sub_1000B6388(v41 > 1, v42 + 1, 1, a4);
            }
            *(void *)(a4 + 16) = v42 + 1;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 32))(a4+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v42, v40, v9);
            goto LABEL_45;
          }
          objc_super v49 = v5;
          uint64_t v51 = v26;
          uint64_t v39 = *(void *)(v59 + 72);
          a3 = a4 + v39 + v11;
          a2 = 1;
          while (1)
          {
            v55(v14, a3, v9);
            double v5 = (char *)(a2 + 1);
            if (__OFADD__(a2, 1)) {
              break;
            }
            unint64_t v11 = dispatch thunk of static Equatable.== infix(_:_:)();
            v57((uint64_t)v14, v9);
            if (v11)
            {
              swift_bridgeObjectRelease();
              uint64_t v26 = v51;
              double v5 = v49;
              goto LABEL_47;
            }
            ++a2;
            a3 += v39;
            if (v5 == v56)
            {
              swift_bridgeObjectRelease();
              a2 = v51;
              uint64_t v31 = v61;
              double v5 = v49;
              uint64_t v18 = v53;
              goto LABEL_39;
            }
          }
LABEL_51:
          __break(1u);
LABEL_52:
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          if (v19) {
            goto LABEL_3;
          }
        }
        uint64_t v31 = v61;
LABEL_45:
        unint64_t v43 = v60;
LABEL_48:
        type metadata accessor for DOCUTIDescriptorCollector();
        uint64_t v44 = (void *)static DOCUTIDescriptorCollector.shared.getter();
        dispatch thunk of DOCUTIDescriptorCollector.cancelGathering()();

        id v45 = (void *)static DOCUTIDescriptorCollector.shared.getter();
        int v46 = (void *)swift_allocObject();
        v46[2] = v31;
        v46[3] = a2;
        v46[4] = v18;
        v46[5] = v5;
        v46[6] = v43;
        swift_bridgeObjectRetain();
        swift_retain();
        id v47 = v5;
        dispatch thunk of DOCUTIDescriptorCollector.filteredUTIs(matching:allowedContentTypes:completion:)();
        swift_release();

        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v51 = a2;
  unint64_t v52 = v11;
  uint64_t v53 = v18;
  unint64_t v60 = a3;
  a2 = (uint64_t)v5;
  a3 = 0;
  unint64_t v11 = (unint64_t)&OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
  while (1)
  {
    uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    double v5 = (char *)(a3 + 1);
    if (__OFADD__(a3, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v18 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category);
    swift_unknownObjectRelease();
    if (v18 == 2) {
      break;
    }
    ++a3;
    if (v5 == (char *)v19)
    {
      swift_bridgeObjectRelease();
      double v5 = (char *)a2;
      unint64_t v11 = v52;
      uint64_t v18 = v53;
      a2 = v51;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  double v5 = (char *)a2;
  unint64_t v32 = v60;
  a2 = v51;
LABEL_27:
  uint64_t v33 = &v5[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v35 = v61;
  if (Strong)
  {
    uint64_t v36 = *((void *)v33 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, void *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8))(v5, _swiftEmptyArrayStorage, v32, v35, a2, ObjectType, v36);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_release();
  }
}

void sub_1004338D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  v12[7] = a6;
  v15[4] = sub_100435E3C;
  void v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  void v15[2] = sub_1000666D8;
  void v15[3] = &unk_1006AC000;
  uint64_t v13 = _Block_copy(v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v14 = a5;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v13);
}

uint64_t sub_1004339D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = (uint64_t *)(a4 + 16);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v13 = *(void *)(type metadata accessor for DOCUTIDescriptor() - 8);
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100433B58(v14, a2, a3, v10);
      v14 += v15;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = a5 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_beginAccess();
    uint64_t v20 = *v10;
    uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8);
    swift_bridgeObjectRetain();
    v21(a5, v20, a6, a2, a3, ObjectType, v18);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100433B58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = objc_allocWithZone((Class)type metadata accessor for DOCFileTypeSuggestion());
  *(void *)&v7[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = 0;
  v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  id v8 = &v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  void *v8 = a2;
  v8[1] = a3;
  v34.receiver = v7;
  v34.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  swift_bridgeObjectRetain();
  uint64_t v9 = [(char *)[super init]];
  uint64_t v10 = DOCUTIDescriptor.localizedDescription.getter();
  uint64_t v11 = (uint64_t *)&v9[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
  *uint64_t v11 = v10;
  v11[1] = v12;
  swift_bridgeObjectRelease();
  sub_10009D28C();
  StringProtocol.localizedLowercase.getter();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  StringProtocol.localizedLowercase.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [v13 rangeOfString:v14 options:132];
  uint64_t v17 = v16;

  uint64_t v18 = NSNotFound.getter();
  if (v15 != (id)v18)
  {
    uint64_t v19 = &v9[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
    *(void *)uint64_t v19 = v15;
    *((void *)v19 + 1) = v17;
    v19[16] = 0;
  }

  uint64_t v20 = v9;
  uint64_t v21 = DOCUTIDescriptor.localizedDescription.getter();
  uint64_t v22 = (uint64_t *)&v20[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
  *uint64_t v22 = v21;
  v22[1] = v23;

  swift_bridgeObjectRelease();
  v20[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 2;
  uint64_t v24 = DOCUTIDescriptor.utis.getter();
  uint64_t v25 = sub_100432AF0(v24);
  swift_bridgeObjectRelease();
  *(void *)&v20[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = v25;
  swift_bridgeObjectRelease();
  if (DOCUTIDescriptor.isFolder.getter())
  {
    NSString v26 = String._bridgeToObjectiveC()();
    id v27 = [self systemImageNamed:v26];

    unint64_t v28 = (void **)&v20[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
    swift_beginAccess();
    char v29 = *v28;
    *unint64_t v28 = v27;
    id v30 = v27;

    uint64_t v31 = (void **)&v20[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess();
    unint64_t v32 = *v31;
    *uint64_t v31 = v27;
  }
  swift_beginAccess();
  uint64_t v33 = v20;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
}

id sub_100433EB4(uint64_t a1)
{
  return sub_1004354F4(a1, type metadata accessor for DOCFileTypeSuggester);
}

uint64_t type metadata accessor for DOCFileTypeSuggester()
{
  return self;
}

id sub_100433EF0()
{
  id result = sub_100433F10();
  qword_1007160E0 = (uint64_t)result;
  return result;
}

id sub_100433F10()
{
  uint64_t v111 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor();
  uint64_t v0 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v2 = (Swift::String *)((char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v3);
  uint64_t v110 = (Swift::String *)((char *)&v104 - v4);
  __chkstk_darwin(v5);
  uint64_t v7 = (Swift::String *)((char *)&v104 - v6);
  __chkstk_darwin(v8);
  uint64_t v10 = (Swift::String *)((char *)&v104 - v9);
  __chkstk_darwin(v11);
  NSString v13 = (Swift::String *)((char *)&v104 - v12);
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  id v15 = result;
  v16._uint64_t countAndFlagsBits = 0xD000000000000015;
  v112._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v112._object = (void *)0x80000001005F4580;
  v16._object = (void *)0x80000001005F4560;
  v17._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v17._object = (void *)0xEB00000000656C62;
  v18._uint64_t countAndFlagsBits = 0x736567616D49;
  v18._object = (void *)0xE600000000000000;
  Swift::String v19 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v112);
  object = v19._object;

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = result;
  uint64_t v107 = v0;
  uint64_t countAndFlagsBits = v19._countAndFlagsBits;
  objc_super v106 = v2;
  v113._uint64_t countAndFlagsBits = 0xD000000000000027;
  v113._object = (void *)0x80000001005F45B0;
  v21._uint64_t countAndFlagsBits = 0x7441736567616D49;
  v21._object = (void *)0xEF656C7469546D6FLL;
  v22._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v22._object = (void *)0xEB00000000656C62;
  v23._uint64_t countAndFlagsBits = 0x736567616D49;
  v23._object = (void *)0xE600000000000000;
  Swift::String v24 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v113);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = result;
  v114._uint64_t countAndFlagsBits = 0xD000000000000063;
  v114._object = (void *)0x80000001005F4600;
  v26._object = (void *)0x80000001005F45E0;
  v26._uint64_t countAndFlagsBits = 0xD000000000000013;
  v27._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v27._object = (void *)0xEB00000000656C62;
  v28._uint64_t countAndFlagsBits = 0x707C736567616D69;
  v28._object = (void *)0xEF73657275746369;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v114);

  uint64_t v29 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
  swift_bridgeObjectRelease();
  static UTType.image.getter();
  id v30 = object;
  v13->_uint64_t countAndFlagsBits = countAndFlagsBits;
  v13->_object = v30;
  v13[1]._uint64_t countAndFlagsBits = 0x6F746F6870;
  v13[1]._object = (void *)0xE500000000000000;
  v13[2] = v24;
  v13[3]._uint64_t countAndFlagsBits = 0x6F746F6870;
  v13[3]._object = (void *)0xE500000000000000;
  v13[4]._uint64_t countAndFlagsBits = v29;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v31 = result;
  v32._uint64_t countAndFlagsBits = 0xD000000000000015;
  v115._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v115._object = (void *)0x80000001005F4690;
  v32._object = (void *)0x80000001005F4670;
  v33._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v33._object = (void *)0xEB00000000656C62;
  v34._uint64_t countAndFlagsBits = 0x736F65646956;
  v34._object = (void *)0xE600000000000000;
  Swift::String v35 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v115);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v36 = result;
  v116._uint64_t countAndFlagsBits = 0xD000000000000027;
  v116._object = (void *)0x80000001005F46C0;
  v37._uint64_t countAndFlagsBits = 0x7441736F65646956;
  v37._object = (void *)0xEF656C7469546D6FLL;
  v38._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v38._object = (void *)0xEB00000000656C62;
  v39._uint64_t countAndFlagsBits = 0x736F65646956;
  v39._object = (void *)0xE600000000000000;
  Swift::String v40 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v116);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v41 = result;
  v117._uint64_t countAndFlagsBits = 0xD000000000000063;
  v117._object = (void *)0x80000001005F4710;
  v42._object = (void *)0x80000001005F46F0;
  v42._uint64_t countAndFlagsBits = 0xD000000000000013;
  v43._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v43._object = (void *)0xEB00000000656C62;
  v44._uint64_t countAndFlagsBits = 0x6D7C736F65646976;
  v44._object = (void *)0xED0000736569766FLL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v117);

  uint64_t v45 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
  swift_bridgeObjectRelease();
  static UTType.movie.getter();
  *uint64_t v10 = v35;
  v10[1]._uint64_t countAndFlagsBits = 0x6569766F6DLL;
  v10[1]._object = (void *)0xE500000000000000;
  void v10[2] = v40;
  v10[3]._uint64_t countAndFlagsBits = 0x6569766F6DLL;
  v10[3]._object = (void *)0xE500000000000000;
  v10[4]._uint64_t countAndFlagsBits = v45;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  int v46 = result;
  v47._uint64_t countAndFlagsBits = 0xD000000000000015;
  v118._uint64_t countAndFlagsBits = 0xD000000000000031;
  v118._object = (void *)0x80000001005F47A0;
  v47._object = (void *)0x80000001005F4780;
  v48._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v48._object = (void *)0xEB00000000656C62;
  v49._uint64_t countAndFlagsBits = 0x6946206F69647541;
  v49._object = (void *)0xEB0000000073656CLL;
  Swift::String v50 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v118);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v51 = result;
  object = v50._object;
  v119._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v119._object = (void *)0x80000001005F47E0;
  v52._uint64_t countAndFlagsBits = 0x7441736F69647541;
  v52._object = (void *)0xEF656C7469546D6FLL;
  v53._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v53._object = (void *)0xEB00000000656C62;
  v54._uint64_t countAndFlagsBits = 0x6946206F69647541;
  v54._object = (void *)0xEB0000000073656CLL;
  Swift::String v55 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v51, v54, v119);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v56 = result;
  v120._uint64_t countAndFlagsBits = 0xD000000000000068;
  v120._object = (void *)0x80000001005F4830;
  v57._object = (void *)0x80000001005F4810;
  v57._uint64_t countAndFlagsBits = 0xD000000000000013;
  v58._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v58._object = (void *)0xEB00000000656C62;
  v59._uint64_t countAndFlagsBits = 0x6F737C6F69647561;
  v59._object = (void *)0xEB00000000646E75;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v56, v59, v120);

  uint64_t v60 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
  swift_bridgeObjectRelease();
  static UTType.audio.getter();
  uint64_t v61 = object;
  v7->_uint64_t countAndFlagsBits = v50._countAndFlagsBits;
  v7->_object = v61;
  v7[1]._uint64_t countAndFlagsBits = 0x636973756DLL;
  v7[1]._object = (void *)0xE500000000000000;
  v7[2] = v55;
  v7[3]._uint64_t countAndFlagsBits = 0x636973756DLL;
  v7[3]._object = (void *)0xE500000000000000;
  v7[4]._uint64_t countAndFlagsBits = v60;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v62 = result;
  unint64_t v104 = v13;
  uint64_t v105 = v10;
  v63._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v121._uint64_t countAndFlagsBits = 0xD000000000000038;
  v121._object = (void *)0x80000001005F48C0;
  v63._object = (void *)0x80000001005F48A0;
  v64._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v64._object = (void *)0xEB00000000656C62;
  v65._uint64_t countAndFlagsBits = 0x61746E6573657250;
  v65._object = (void *)0xED0000736E6F6974;
  Swift::String v66 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v121);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v67 = result;
  object = v7;
  v68._uint64_t countAndFlagsBits = 0xD000000000000016;
  v122._uint64_t countAndFlagsBits = 0xD000000000000033;
  v122._object = (void *)0x80000001005F4920;
  v68._object = (void *)0x80000001005F4900;
  v69._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v69._object = (void *)0xEB00000000656C62;
  v70._uint64_t countAndFlagsBits = 0x61746E6573657250;
  v70._object = (void *)0xED0000736E6F6974;
  Swift::String v71 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v68, v69, (NSBundle)v67, v70, v122);

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v72 = result;
  v73._uint64_t countAndFlagsBits = 0xD000000000000014;
  v74._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v123._uint64_t countAndFlagsBits = 0xD00000000000006FLL;
  v123._object = (void *)0x80000001005F49A0;
  v74._object = (void *)0x80000001005F4960;
  v73._object = (void *)0x80000001005F4980;
  v75._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v75._object = (void *)0xEB00000000656C62;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v74, v75, (NSBundle)v72, v73, v123);

  uint64_t v76 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
  swift_bridgeObjectRelease();
  uint64_t v77 = v110;
  static UTType.presentation.getter();
  *uint64_t v77 = v66;
  v77[1]._uint64_t countAndFlagsBits = 0x642E6E6F2E636F64;
  v77[1]._object = (void *)0xEA0000000000636FLL;
  v77[2] = v71;
  v77[3]._uint64_t countAndFlagsBits = 0x642E6E6F2E636F64;
  v77[3]._object = (void *)0xEA0000000000636FLL;
  v77[4]._uint64_t countAndFlagsBits = v76;
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  os_log_type_t v78 = result;
  v79._uint64_t countAndFlagsBits = 0xD000000000000018;
  v124._uint64_t countAndFlagsBits = 0xD000000000000037;
  v124._object = (void *)0x80000001005F4A30;
  v79._object = (void *)0x80000001005F4A10;
  v80._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v80._object = (void *)0xEB00000000656C62;
  v81._uint64_t countAndFlagsBits = 0x4320656372756F53;
  v81._object = (void *)0xEB0000000065646FLL;
  Swift::String v82 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v79, v80, (NSBundle)v78, v81, v124);

  id result = (id)_DocumentManagerBundle();
  uint64_t v83 = (uint64_t)object;
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  os_log_type_t v84 = result;
  v85._uint64_t countAndFlagsBits = 0xD000000000000012;
  v125._uint64_t countAndFlagsBits = 0xD000000000000032;
  v125._object = (void *)0x80000001005F4A90;
  v85._object = (void *)0x80000001005F4A70;
  v86._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v86._object = (void *)0xEB00000000656C62;
  v87._uint64_t countAndFlagsBits = 0x4320656372756F53;
  v87._object = (void *)0xEB0000000065646FLL;
  Swift::String v88 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v85, v86, (NSBundle)v84, v87, v125);

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v89 = result;
    v90._uint64_t countAndFlagsBits = 0xD000000000000016;
    v126._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
    v126._object = (void *)0x80000001005F4B10;
    v90._object = (void *)0x80000001005F4AD0;
    v91._object = (void *)0x80000001005F4AF0;
    v92._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v92._object = (void *)0xEB00000000656C62;
    v91._uint64_t countAndFlagsBits = 0xD000000000000016;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v90, v92, (NSBundle)v89, v91, v126);

    uint64_t v93 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
    swift_bridgeObjectRelease();
    uint64_t v94 = v106;
    static UTType.sourceCode.getter();
    *uint64_t v94 = v82;
    v94[1]._uint64_t countAndFlagsBits = 0x642E6E6F2E636F64;
    v94[1]._object = (void *)0xEA0000000000636FLL;
    v94[2] = v88;
    v94[3]._uint64_t countAndFlagsBits = 0x642E6E6F2E636F64;
    v94[3]._object = (void *)0xEA0000000000636FLL;
    v94[4]._uint64_t countAndFlagsBits = v93;
    sub_1000CBE70((uint64_t *)&unk_100716210);
    uint64_t v95 = *(void *)(v107 + 72);
    unint64_t v96 = (*(unsigned __int8 *)(v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    uint64_t v97 = 4 * v95;
    uint64_t v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = xmmword_10059B7A0;
    uint64_t v99 = v98 + v96;
    uint64_t v100 = (uint64_t)v104;
    sub_100435E4C((uint64_t)v104, v99);
    uint64_t v101 = (uint64_t)v105;
    sub_100435E4C((uint64_t)v105, v99 + v95);
    sub_100435E4C(v83, v99 + 2 * v95);
    uint64_t v102 = v99 + 3 * v95;
    uint64_t v103 = (uint64_t)v110;
    sub_100435E4C((uint64_t)v110, v102);
    sub_100435EB0((uint64_t)v94, v99 + v97);
    sub_100435F14(v103);
    sub_100435F14(v83);
    sub_100435F14(v101);
    sub_100435F14(v100);
    return (id)v98;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100434B84(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if ([*(id *)((char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_configuration) isFilesApp])
  {
    if (a4 >> 62) {
      goto LABEL_29;
    }
    uint64_t v9 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v9; uint64_t v9 = _CocoaArrayWrapper.endIndex.getter())
    {
      if ((a4 & 0xC000000000000001) != 0)
      {
        uint64_t v10 = v4;
        uint64_t v11 = 0;
        uint64_t v4 = &OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
        while (1)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v13 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            break;
          }
          int v14 = *(unsigned __int8 *)(v12 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category);
          swift_unknownObjectRelease();
          if (v14 == 2)
          {
            swift_bridgeObjectRelease();
            uint64_t v4 = v10;
            goto LABEL_22;
          }
          ++v11;
          if (v13 == v9)
          {
            uint64_t v36 = a3;
            swift_bridgeObjectRelease();
            uint64_t v4 = v10;
            goto LABEL_15;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t v15 = 0;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            break;
          }
          if (*(unsigned char *)(*(void *)(a4 + 8 * v15 + 32) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) == 2)
          {
            swift_bridgeObjectRelease();
            goto LABEL_22;
          }
          ++v15;
          if (v16 == v9) {
            goto LABEL_14;
          }
        }
      }
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
    }
LABEL_14:
    uint64_t v36 = a3;
    swift_bridgeObjectRelease();
LABEL_15:
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = _swiftEmptyArrayStorage;
    Swift::String v18 = (void *)(v17 + 16);
    uint64_t v19 = String.doc_sanitizedForComparison.getter();
    Swift::String v21 = v20;
    Swift::String v37 = v4;
    uint64_t v22 = *(uint64_t *)((char *)v4
                     + OBJC_IVAR____TtC5Files35DOCNaturalLanguageFileTypeSuggester_naturalLanguageFileTypeDescriptors);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v24 = v19;
      uint64_t v35 = v17;
      uint64_t v25 = *(void *)(type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor()
                      - 8);
      Swift::String v26 = (char *)(v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)));
      uint64_t v27 = *(void *)(v25 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_100434F58(v26, v24, v21, a1, a2, v18);
        v26 += v27;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t v17 = v35;
    }
    swift_bridgeObjectRelease();
    Swift::String v28 = (void *)swift_allocObject();
    v28[2] = v37;
    v28[3] = v17;
    unint64_t v28[4] = v36;
    v28[5] = a1;
    v28[6] = a2;
    aBlock[4] = sub_100435D84;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006ABF88;
    uint64_t v29 = _Block_copy(aBlock);
    id v30 = v37;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v29);
    return swift_release();
  }
  else
  {
LABEL_22:
    Swift::String v32 = (char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v33 = *((void *)v32 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8))(v4, _swiftEmptyArrayStorage, a3, a1, a2, ObjectType, v33);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100434F58(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v6 = *((void *)a1 + 8);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = v6 + 40; ; i += 16)
    {
      swift_bridgeObjectRetain();
      v13._uint64_t countAndFlagsBits = a2;
      v13._object = a3;
      Swift::Bool v14 = String.hasPrefix(_:)(v13);
      swift_bridgeObjectRelease();
      if (v14) {
        break;
      }
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = objc_allocWithZone((Class)type metadata accessor for DOCFileTypeSuggestion());
    *(void *)&v15[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = 0;
    v15[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
    uint64_t v16 = &v15[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    *uint64_t v16 = a4;
    v16[1] = a5;
    v49.receiver = v15;
    v49.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
    swift_bridgeObjectRetain();
    uint64_t v17 = (char *)[super init];
    uint64_t v18 = *((void *)a1 + 1);
    uint64_t v19 = &v17[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    *(void *)uint64_t v19 = *(void *)a1;
    *((void *)v19 + 1) = v18;
    uint64_t v20 = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    StringProtocol.localizedLowercase.getter();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [v21 rangeOfString:v22 options:132];
    uint64_t v25 = v24;

    uint64_t v26 = NSNotFound.getter();
    if (v23 != (id)v26)
    {
      uint64_t v27 = &v20[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)uint64_t v27 = v23;
      *((void *)v27 + 1) = v25;
      v27[16] = 0;
    }

    uint64_t v28 = *((void *)a1 + 5);
    uint64_t v29 = &v20[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    *(void *)uint64_t v29 = *((void *)a1 + 4);
    *((void *)v29 + 1) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v20[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 2;
    id v30 = v20;
    swift_bridgeObjectRetain();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Swift::String v32 = self;
    id v33 = [v32 systemImageNamed:v31];

    Swift::String v34 = (void **)&v30[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
    swift_beginAccess();
    uint64_t v35 = *v34;
    *Swift::String v34 = v33;

    uint64_t v36 = v30;
    swift_bridgeObjectRetain();
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = [v32 systemImageNamed:v37];

    Swift::String v39 = (void **)&v36[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess();
    Swift::String v40 = *v39;
    *Swift::String v39 = v38;

    sub_1000CBE70((uint64_t *)&unk_10070C030);
    uint64_t v41 = type metadata accessor for UTType();
    uint64_t v42 = *(void *)(v41 - 8);
    unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1005A0030;
    uint64_t v45 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor();
    (*(void (**)(unint64_t, char *, uint64_t))(v42 + 16))(v44 + v43, &a1[*(int *)(v45 + 36)], v41);
    *(void *)&v36[OBJC_IVAR____TtC5FilesP33_8CDADE7DD771D981B53D0BAC0981DFEC21DOCFileTypeSuggestion_contentTypes] = v44;
    swift_bridgeObjectRelease();
    int v46 = v36;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
}

uint64_t sub_1004353E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = a1 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(v10 + 8);
    uint64_t ObjectType = swift_getObjectType();
    swift_beginAccess();
    uint64_t v14 = *(void *)(a2 + 16);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain();
    v15(a1, v14, a3, a4, a5, ObjectType, v12);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1004354CC()
{
  return swift_bridgeObjectRelease();
}

id sub_1004354DC(uint64_t a1)
{
  return sub_1004354F4(a1, type metadata accessor for DOCNaturalLanguageFileTypeSuggester);
}

id sub_1004354F4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCNaturalLanguageFileTypeSuggester()
{
  return self;
}

uint64_t *sub_100435560(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = a2[7];
    a1[6] = a2[6];
    a1[7] = v8;
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v15 = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[8] = a2[8];
    uint64_t v11 = type metadata accessor for UTType();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v15, v10, v11);
  }
  return v3;
}

uint64_t sub_10043569C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for UTType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100435734(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v13 = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[8] = a2[8];
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v13, v9, v10);
  return a1;
}

void *sub_100435820(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UTType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100435934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for UTType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

void *sub_1004359C0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UTType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_100435A8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100435AA0);
}

uint64_t sub_100435AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UTType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100435B50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100435B64);
}

uint64_t sub_100435B64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UTType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor()
{
  uint64_t result = qword_1007161C8;
  if (!qword_1007161C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100435C58()
{
  uint64_t result = type metadata accessor for UTType();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100435D04()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100435D3C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100435D84()
{
  return sub_1004353E4(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100435D94()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_100435DDC(uint64_t a1)
{
  sub_1004338D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_100435DEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100435E3C()
{
  return sub_1004339D8(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_100435E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100435EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100435F14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCNaturalLanguageFileTypeSuggester.DOCNaturalLanguageFileTypeDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100435F7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (char *)[v2 effectiveBrowserViewController];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (void **)&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v9 = *v8;
    if (v9)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        uint64_t v11 = (void *)v10;
        id v12 = v9;

        id v13 = [v3 effectiveSearchController];
        if (v13)
        {
          id v14 = v13;
          if ([v13 isActive])
          {
            uint64_t v15 = v14;
          }
          else
          {
            sub_1001CB63C(a1, a2 & 1);
            id v16 = [v3 internalNavigationController];
            id v17 = [v16 topViewController];

            if (v17)
            {
              type metadata accessor for DOCColumnViewController(0);
              if (swift_dynamicCastClass())
              {
                id v18 = [v11 parentViewController];
                if (v18)
                {
                  uint64_t v19 = v18;
                  type metadata accessor for DOCBrowserContainerController();
                  uint64_t v20 = (void *)swift_dynamicCastClass();
                  if (v20)
                  {
                    sub_1004197EC(v20, 1);
                    NSString v21 = v17;
                    id v17 = v14;
                  }
                  else
                  {
                    NSString v21 = v19;
                    uint64_t v19 = v14;
                  }
                }
                else
                {
                  uint64_t v19 = v14;
                }
              }
              else
              {
                uint64_t v19 = v12;
                id v12 = v14;
              }

              uint64_t v15 = v12;
              id v12 = v17;
            }
            else
            {
              uint64_t v15 = v12;
              id v12 = v14;
            }
          }
        }
        uint64_t v7 = v12;
      }
    }
  }
}

void DOCFullDocumentManagerViewController.canPerformKeyCommandAction(_:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v232 = a2;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  v227 = (char *)&v225 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  v229 = (char *)&v225 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  v231 = (char *)&v225 - v10;
  __chkstk_darwin(v9);
  v234 = (char *)&v225 - v11;
  uint64_t v12 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v244 = v12;
  uint64_t v245 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v228 = (char *)&v225 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v230 = (char *)&v225 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v233 = (char *)&v225 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v235 = (char *)&v225 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v238 = (uint64_t)&v225 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v240 = (uint64_t)&v225 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v241 = (uint64_t)&v225 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v243 = (uint64_t)&v225 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v242 = (char *)&v225 - v31;
  __chkstk_darwin(v30);
  id v33 = (char *)&v225 - v32;
  uint64_t v34 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v35 = __chkstk_darwin(v34 - 8);
  uint64_t v236 = (uint64_t)&v225 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v237 = (uint64_t)&v225 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v239 = (uint64_t)&v225 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  unint64_t v43 = (char *)&v225 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  int v46 = (char *)&v225 - v45;
  __chkstk_darwin(v44);
  Swift::String v48 = (char *)&v225 - v47;
  uint64_t v49 = type metadata accessor for DOCAdjustmentDirection();
  uint64_t v50 = *(void *)(v49 - 8);
  uint64_t v51 = __chkstk_darwin(v49);
  Swift::String v53 = (char *)&v225 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  Swift::String v55 = (char *)&v225 - v54;
  if ((static Selector.== infix(_:_:)() & 1) == 0)
  {
    id v226 = v2;
    if (static Selector.== infix(_:_:)())
    {
      [v226 canPerformGoToEnclosingFolder];
      return;
    }
    if (static Selector.== infix(_:_:)() & 1) != 0 || (static Selector.== infix(_:_:)())
    {
      id v60 = [v226 traitCollection];
      [v60 supportHistoryNavigation];
      goto LABEL_12;
    }
    if (static Selector.== infix(_:_:)() & 1) != 0 || (static Selector.== infix(_:_:)()) {
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      uint64_t v61 = sub_1000876F0();
      sub_100109124(2, (uint64_t)v61);
      swift_bridgeObjectRelease();
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      uint64_t v62 = v50;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v55, enum case for DOCAdjustmentDirection.decrement(_:), v49);
      id v63 = [self viewOptionsSizeSetting];
      unsigned int v64 = [v63 isEnabled];

      if (v64)
      {
        id v65 = [v226 configuration];
        sub_100089B98((uint64_t)v65);

        sub_10045409C();
      }
      (*(void (**)(char *, uint64_t))(v62 + 8))(v55, v49);
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      uint64_t v66 = v50;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v53, enum case for DOCAdjustmentDirection.increment(_:), v49);
      id v67 = [self viewOptionsSizeSetting];
      unsigned int v68 = [v67 isEnabled];

      if (v68)
      {
        id v69 = [v226 configuration];
        sub_100089B98((uint64_t)v69);

        sub_10045409C();
      }
      (*(void (**)(char *, uint64_t))(v66 + 8))(v53, v49);
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      Swift::String v70 = (char *)[v226 effectiveBrowserViewController];
      if (!v70) {
        return;
      }
      id v60 = v70;
      Swift::String v71 = &v70[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      if (*(void *)v71)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        swift_dynamicCastClass();
      }
      goto LABEL_12;
    }
    if (static Selector.== infix(_:_:)())
    {
      uint64_t v73 = v244;
      uint64_t v72 = v245;
      (*(void (**)(char *, void, uint64_t))(v245 + 104))(v33, enum case for DOCItemSortMode.DisplayableMode.name(_:), v244);
      Swift::String v74 = (char *)[v226 effectiveBrowserViewController];
      if (v74)
      {
        Swift::String v75 = v74;
        uint64_t v76 = (void **)&v74[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v77 = *v76;
        if (v77)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          os_log_type_t v78 = (void *)swift_dynamicCastClass();
          if (v78) {
            id v79 = v77;
          }
        }
        else
        {
          os_log_type_t v78 = 0;
        }
      }
      else
      {
        os_log_type_t v78 = 0;
      }
      sub_100170564((uint64_t)v33, (uint64_t)v48);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v33, v73);
      uint64_t v102 = type metadata accessor for DOCItemSortDescriptor();
      (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v48, 1, v102);
      sub_1000CBBA4((uint64_t)v48, (uint64_t *)&unk_1007086D0);
      return;
    }
    char v80 = static Selector.== infix(_:_:)();
    uint64_t v82 = v244;
    uint64_t v81 = v245;
    if (v80)
    {
      uint64_t v83 = (uint64_t)v242;
      (*(void (**)(char *, void, uint64_t))(v245 + 104))(v242, enum case for DOCItemSortMode.DisplayableMode.date(_:), v244);
      os_log_type_t v84 = (char *)[v226 effectiveBrowserViewController];
      if (v84)
      {
        Swift::String v85 = v84;
        Swift::String v86 = (void **)&v84[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        Swift::String v87 = *v86;
        if (*v86)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          Swift::String v88 = (void *)swift_dynamicCastClass();
          if (v88) {
            id v89 = v87;
          }
        }
        else
        {
          Swift::String v88 = 0;
        }
      }
      else
      {
        Swift::String v88 = 0;
      }
      sub_100170564(v83, (uint64_t)v46);

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v82);
      uint64_t v110 = type metadata accessor for DOCItemSortDescriptor();
      (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v110 - 8) + 48))(v46, 1, v110);
      sub_1000CBBA4((uint64_t)v46, (uint64_t *)&unk_1007086D0);
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      (*(void (**)(uint64_t, void, uint64_t))(v81 + 104))(v243, enum case for DOCItemSortMode.DisplayableMode.size(_:), v82);
      Swift::String v90 = (char *)[v226 effectiveBrowserViewController];
      if (v90)
      {
        Swift::String v91 = v90;
        Swift::String v92 = (void **)&v90[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v93 = *v92;
        if (v93)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v94 = (void *)swift_dynamicCastClass();
          if (v94) {
            id v95 = v93;
          }
        }
        else
        {
          uint64_t v94 = 0;
        }

        uint64_t v82 = v244;
        uint64_t v81 = v245;
      }
      else
      {
        uint64_t v94 = 0;
      }
      uint64_t v117 = v243;
      sub_100170564(v243, (uint64_t)v43);

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v117, v82);
      uint64_t v118 = type metadata accessor for DOCItemSortDescriptor();
      (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v43, 1, v118);
      sub_1000CBBA4((uint64_t)v43, (uint64_t *)&unk_1007086D0);
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      (*(void (**)(uint64_t, void, uint64_t))(v81 + 104))(v241, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v82);
      unint64_t v96 = (char *)[v226 effectiveBrowserViewController];
      if (v96)
      {
        uint64_t v97 = v96;
        uint64_t v98 = (void **)&v96[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v99 = *v98;
        if (v99)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v100 = (void *)swift_dynamicCastClass();
          if (v100) {
            id v101 = v99;
          }
        }
        else
        {
          uint64_t v100 = 0;
        }
      }
      else
      {
        uint64_t v100 = 0;
      }
      uint64_t v128 = v239;
      uint64_t v129 = v241;
      sub_100170564(v241, v239);

      (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v129, v244);
      uint64_t v130 = type metadata accessor for DOCItemSortDescriptor();
      (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v130 - 8) + 48))(v128, 1, v130);
      uint64_t v131 = (uint64_t *)&unk_1007086D0;
      goto LABEL_86;
    }
    uint64_t v103 = a1;
    if (static Selector.== infix(_:_:)())
    {
      (*(void (**)(uint64_t, void, uint64_t))(v245 + 104))(v240, enum case for DOCItemSortMode.DisplayableMode.tags(_:), v244);
      unint64_t v104 = (char *)[v226 effectiveBrowserViewController];
      if (v104)
      {
        uint64_t v105 = v104;
        objc_super v106 = (void **)&v104[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v107 = *v106;
        if (v107)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v108 = (void *)swift_dynamicCastClass();
          if (v108) {
            id v109 = v107;
          }
        }
        else
        {
          uint64_t v108 = 0;
        }
      }
      else
      {
        uint64_t v108 = 0;
      }
      uint64_t v140 = v237;
      uint64_t v141 = v240;
      sub_100170564(v240, v237);

      (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v141, v244);
      uint64_t v142 = type metadata accessor for DOCItemSortDescriptor();
      (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v142 - 8) + 48))(v140, 1, v142);
      sub_1000CBBA4(v140, (uint64_t *)&unk_1007086D0);
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      (*(void (**)(uint64_t, void, uint64_t))(v245 + 104))(v238, enum case for DOCItemSortMode.DisplayableMode.sharedBy(_:), v244);
      uint64_t v111 = (char *)[v226 effectiveBrowserViewController];
      if (v111)
      {
        Swift::String v112 = v111;
        Swift::String v113 = (void **)&v111[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        Swift::String v114 = *v113;
        if (v114)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          Swift::String v115 = (void *)swift_dynamicCastClass();
          if (v115) {
            id v116 = v114;
          }
        }
        else
        {
          Swift::String v115 = 0;
        }
      }
      else
      {
        Swift::String v115 = 0;
      }
      uint64_t v151 = v236;
      uint64_t v152 = v238;
      sub_100170564(v238, v236);

      (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v152, v244);
      uint64_t v153 = type metadata accessor for DOCItemSortDescriptor();
      LODWORD(v152) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 48))(v151, 1, v153);
      sub_1000CBBA4(v151, (uint64_t *)&unk_1007086D0);
      if (v152 != 1)
      {
        uint64_t v154 = (char *)[v226 effectiveBrowserViewController];
        if (v154)
        {
          uint64_t v155 = v154;
          uint64_t v156 = (void **)&v154[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          char v157 = *v156;
          if (v157
            && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v158 = swift_dynamicCastClass()) != 0))
          {
            uint64_t v159 = v158;
            id v160 = v157;

            id v161 = objc_retain(*(id *)(v159
                                     + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration));

            id v162 = [v161 identifier];
            uint64_t v163 = (void *)DOCDocumentSourceIdentifierSharedItems;
            uint64_t v164 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v166 = v165;
            if (v164 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v166 != v167) {
              _stringCompareWithSmolCheck(_:_:expecting:)();
            }
            id v176 = v163;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
      }
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      if ((sub_100439550() & 1) == 0) {
        return;
      }
      Swift::String v119 = (char *)[v226 effectiveBrowserViewController];
      if (!v119) {
        return;
      }
      id v60 = v119;
      Swift::String v120 = &v119[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      if (*(void *)v120)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v121 = swift_dynamicCastClass();

        if (!v121) {
          return;
        }
        (*(void (**)(char *, void, uint64_t))(v245 + 104))(v235, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v244);
        Swift::String v122 = (char *)[v226 effectiveBrowserViewController];
        if (v122)
        {
          Swift::String v123 = v122;
          Swift::String v124 = (void **)&v122[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          Swift::String v125 = *v124;
          if (v125)
          {
            Swift::String v126 = (void *)swift_dynamicCastClass();
            if (v126) {
              id v127 = v125;
            }
          }
          else
          {
            Swift::String v126 = 0;
          }
        }
        else
        {
          Swift::String v126 = 0;
        }
        uint64_t v128 = (uint64_t)v234;
        v192 = v234;
        v193 = &v252;
LABEL_186:
        uint64_t v210 = *(v193 - 32);
        sub_100170B0C(v210, v192);

        (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v210, v244);
        uint64_t v211 = type metadata accessor for DOCItemGroupingBehavior();
        (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v211 - 8) + 48))(v128, 1, v211);
        uint64_t v131 = (uint64_t *)&unk_10070A1B8;
LABEL_86:
        sub_1000CBBA4(v128, v131);
        return;
      }
      goto LABEL_164;
    }
    if (static Selector.== infix(_:_:)())
    {
      if ((sub_100439550() & 1) == 0) {
        return;
      }
      char v132 = (char *)[v226 effectiveBrowserViewController];
      if (!v132) {
        return;
      }
      id v60 = v132;
      uint64_t v133 = &v132[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      if (*(void *)v133)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v134 = swift_dynamicCastClass();

        if (!v134) {
          return;
        }
        (*(void (**)(char *, void, uint64_t))(v245 + 104))(v233, enum case for DOCItemSortMode.DisplayableMode.date(_:), v244);
        uint64_t v135 = (char *)[v226 effectiveBrowserViewController];
        if (v135)
        {
          os_log_type_t v136 = v135;
          uint64_t v137 = (void **)&v135[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          uint64_t v138 = *v137;
          if (v138)
          {
            Swift::String v126 = (void *)swift_dynamicCastClass();
            if (v126) {
              id v139 = v138;
            }
          }
          else
          {
            Swift::String v126 = 0;
          }
        }
        else
        {
          Swift::String v126 = 0;
        }
        uint64_t v128 = (uint64_t)v231;
        v192 = v231;
        v193 = &v251;
        goto LABEL_186;
      }
LABEL_164:

      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      if ((sub_100439550() & 1) == 0) {
        return;
      }
      uint64_t v143 = (char *)[v226 effectiveBrowserViewController];
      if (!v143) {
        return;
      }
      id v60 = v143;
      uint64_t v144 = &v143[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      if (*(void *)v144)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v145 = swift_dynamicCastClass();

        if (!v145) {
          return;
        }
        (*(void (**)(char *, void, uint64_t))(v245 + 104))(v230, enum case for DOCItemSortMode.DisplayableMode.size(_:), v244);
        char v146 = (char *)[v226 effectiveBrowserViewController];
        if (v146)
        {
          id v147 = v146;
          uint64_t v148 = (void **)&v146[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          uint64_t v149 = *v148;
          if (v149)
          {
            Swift::String v126 = (void *)swift_dynamicCastClass();
            if (v126) {
              id v150 = v149;
            }
          }
          else
          {
            Swift::String v126 = 0;
          }
        }
        else
        {
          Swift::String v126 = 0;
        }
        uint64_t v128 = (uint64_t)v229;
        v192 = v229;
        v193 = &v250;
        goto LABEL_186;
      }
      goto LABEL_164;
    }
    if (static Selector.== infix(_:_:)())
    {
      if ((sub_100439550() & 1) == 0) {
        return;
      }
      unint64_t v168 = (char *)[v226 effectiveBrowserViewController];
      if (!v168) {
        return;
      }
      id v60 = v168;
      unint64_t v169 = &v168[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      if (*(void *)v169)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v170 = swift_dynamicCastClass();

        if (!v170) {
          return;
        }
        (*(void (**)(char *, void, uint64_t))(v245 + 104))(v228, enum case for DOCItemSortMode.DisplayableMode.sharedBy(_:), v244);
        v171 = (char *)[v226 effectiveBrowserViewController];
        if (v171)
        {
          uint64_t v172 = v171;
          uint64_t v173 = (void **)&v171[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          uint64_t v174 = *v173;
          if (v174)
          {
            Swift::String v126 = (void *)swift_dynamicCastClass();
            if (v126) {
              id v175 = v174;
            }
          }
          else
          {
            Swift::String v126 = 0;
          }
        }
        else
        {
          Swift::String v126 = 0;
        }
        uint64_t v128 = (uint64_t)v227;
        v192 = v227;
        v193 = &v249;
        goto LABEL_186;
      }
      goto LABEL_164;
    }
    if (static Selector.== infix(_:_:)())
    {
      id v59 = sub_100172BC0(0, a1, v232);
      if (v59)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass()) {
          sub_1002A4504(0);
        }
        goto LABEL_153;
      }
      return;
    }
    if (static Selector.== infix(_:_:)())
    {
      id v59 = sub_100172BC0(0, a1, v232);
      if (v59)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass()) {
          sub_1002A4504(1);
        }
        goto LABEL_153;
      }
      return;
    }
    if ((static Selector.== infix(_:_:)() & 1) == 0)
    {
      if (static Selector.== infix(_:_:)())
      {
        v194 = (char *)[v226 effectiveBrowserViewController];
        uint64_t v195 = v194;
        if (!v194) {
          return;
        }
        v196 = (id *)&v194[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        id v197 = *v196;
        id v60 = *v196;

        if (!v197) {
          return;
        }
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v198 = swift_dynamicCastClass();
        if (v198)
        {
          [*(id *)(v198 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration) isEjectable];
          goto LABEL_12;
        }
        goto LABEL_164;
      }
      if (static Selector.== infix(_:_:)())
      {
        id v199 = [v226 presentedViewController];

        if (!v199)
        {
          id v200 = [v226 traitCollection];
          [v200 horizontalSizeClass];
        }
        return;
      }
      if ((static Selector.== infix(_:_:)() & 1) == 0)
      {
        if ((static Selector.== infix(_:_:)() & 1) == 0
          && (static Selector.== infix(_:_:)() & 1) == 0
          && (static Selector.== infix(_:_:)() & 1) == 0
          && (static Selector.== infix(_:_:)() & 1) == 0)
        {
          if (static Selector.== infix(_:_:)() & 1) == 0 && (static Selector.== infix(_:_:)())
          {
            v220 = self;
            id v221 = [v226 configuration];
            id v222 = [v221 sceneIdentifier];

            id v223 = [v220 globalTabbedBrowserControllerForIdentifier:v222];
            if (v223)
            {
              id v224 = [v226 configuration];
              sub_1000857CC(v224);
            }
          }
          return;
        }
        unint64_t v212 = sub_100172BC0(0, a1, v232);
        if (!v212) {
          return;
        }
        id v60 = v212;
        type metadata accessor for DOCItemCollectionViewController(0);
        v213 = (void *)swift_dynamicCastClass();
        if (v213)
        {
          sub_100053674(v232, (uint64_t)v247);
          uint64_t v214 = v248;
          if (v248)
          {
            uint64_t v215 = sub_1000A6B78(v247, v248);
            uint64_t v216 = *(void *)(v214 - 8);
            __chkstk_darwin(v215);
            unint64_t v218 = (char *)&v225 - ((v217 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v216 + 16))(v218);
            uint64_t v219 = _bridgeAnythingToObjectiveC<A>(_:)();
            (*(void (**)(char *, uint64_t))(v216 + 8))(v218, v214);
            sub_10009B1B8((uint64_t)v247);
          }
          else
          {
            uint64_t v219 = 0;
          }
          [v213 canPerformAction:v103 withSender:v219];
          swift_unknownObjectRelease();
        }
LABEL_12:

        return;
      }
      id v201 = [v226 internalNavigationController];
      id v202 = [v201 topViewController];

      if (v202)
      {
        id v203 = [v202 navigationItem];

        id v204 = [v203 searchController];
        if (v204)
        {
          id v205 = [v226 internalNavigationController];
          id v206 = [v205 topViewController];

          if (!v206) {
            goto LABEL_211;
          }
          id v207 = [v206 navigationItem];

          id v208 = [v207 searchController];
          if (!v208) {
            goto LABEL_211;
          }
          unsigned __int8 v209 = [v208 isActive];

          if (v209) {
            return;
          }
        }
      }
      id v60 = [v226 configuration];
      [v60 isPickerUI];
      goto LABEL_12;
    }
    id v177 = [v226 configuration];
    unsigned __int8 v178 = [v177 isFilesApp];

    if (v178) {
      return;
    }
    uint64_t v179 = (char *)[v226 hierarchyController];
    uint64_t v180 = &v179[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
    swift_beginAccess();
    uint64_t v181 = *(void *)v180;
    if (*(void *)v180 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v182 = _CocoaArrayWrapper.endIndex.getter();
      if (v182)
      {
LABEL_145:
        unint64_t v183 = v182 - 1;
        if (__OFSUB__(v182, 1))
        {
          __break(1u);
        }
        else if ((v181 & 0xC000000000000001) == 0)
        {
          if ((v183 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v183 < *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v184 = *(id *)(v181 + 8 * v183 + 32);
LABEL_150:
            id v59 = v184;

            swift_bridgeObjectRelease();
            id v185 = [v59 fileProviderItem];

            if (!v185) {
              goto LABEL_187;
            }
            id v186 = [v59 fileProviderItem];
            if (v186)
            {
              v187 = v186;
              id v188 = (void *)FPActionImportHere;
              sub_1000CBE70((uint64_t *)&unk_1007084E0);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
              *(void *)(inited + 32) = v187;
              unint64_t v246 = inited;
              specialized Array._endMutation()();
              unint64_t v190 = v246;
              id v191 = v187;
              LOBYTE(v188) = sub_1000301E0(v188, v190);
              swift_bridgeObjectRelease();

              if (v188)
              {
LABEL_153:

                return;
              }
LABEL_187:
              sub_100439764();
              goto LABEL_153;
            }
            goto LABEL_210;
          }
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
          return;
        }
        id v184 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_150;
      }
    }
    else
    {
      uint64_t v182 = *(void *)((v181 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v182) {
        goto LABEL_145;
      }
    }

    swift_bridgeObjectRelease();
    return;
  }
  if (([v2 isEditing] & 1) == 0)
  {
    id v56 = [v2 internalNavigationController];
    id v57 = [v56 topViewController];

    if (v57)
    {
      id v58 = [v57 navigationItem];

      id v59 = [v58 searchController];
      if (v59) {
        goto LABEL_153;
      }
    }
  }
}

void *DOCFullDocumentManagerViewController.keyCommands.getter()
{
  id v1 = [v0 configuration];
  unsigned __int8 v2 = [v1 isPopoverOrWidget];

  if (v2) {
    return 0;
  }
  id v4 = [self dismissingKeyCommandsWithAction:"performDismiss:"];
  sub_10009E6C4(0, &qword_100708860);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100169BFC(v5);
  return _swiftEmptyArrayStorage;
}

void sub_100438380(uint64_t a1)
{
  uint64_t v3 = (char *)[v1 effectiveBrowserViewController];
  id v4 = v3;
  if (!v3)
  {
    id v6 = 0;
    goto LABEL_9;
  }
  unint64_t v5 = (id *)&v3[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  id v6 = *v5;
  if (!v6)
  {

LABEL_8:
    id v4 = 0;
    goto LABEL_9;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v7 = swift_dynamicCastClass();
  if (!v7)
  {

    id v6 = 0;
    goto LABEL_8;
  }
  uint64_t v8 = v7;
  id v9 = v6;

  id v4 = *(id *)(v8 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
  id v6 = [v4 identifier];
LABEL_9:
  sub_100173B14(a1, v6);
}

uint64_t sub_100438708(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)[v1 effectiveBrowserViewController:v8];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v14 = *v13;
    if (*v13)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v15 = (void *)swift_dynamicCastClass();
      if (v15) {
        id v16 = v14;
      }
    }
    else
    {
      uint64_t v15 = 0;
    }
  }
  else
  {
    uint64_t v15 = 0;
  }
  sub_100170564(a1, (uint64_t)v5);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
    return sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007086D0);
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
  sub_10016FED4((uint64_t)v10);
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  id v18 = [v1 configuration];
  static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)();

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_100438A6C(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (char *)[v1 effectiveBrowserViewController:v8];
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v29 = a1;
    uint64_t v13 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v14 = *v13;
    if (*v13
      && (uint64_t v28 = v7,
          type metadata accessor for DOCItemCollectionViewController(0),
          (uint64_t v15 = swift_dynamicCastClass()) != 0))
    {
      uint64_t v16 = v15;
      id v17 = v14;

      id v18 = *(id *)(v16 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
      uint64_t v19 = (char *)[v1 effectiveBrowserViewController];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = (void **)&v19[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        uint64_t v22 = *v21;
        if (v22)
        {
          uint64_t v23 = (void *)swift_dynamicCastClass();
          if (v23) {
            id v24 = v22;
          }
        }
        else
        {
          uint64_t v23 = 0;
        }
        uint64_t v25 = v28;
        uint64_t v26 = v29;
      }
      else
      {
        uint64_t v23 = 0;
        uint64_t v25 = v28;
        uint64_t v26 = v29;
      }
      sub_100170B0C(v26, v5);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v6) == 1)
      {

        sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_10070A1B8);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v10, v5, v6);
        id v27 = [v18 identifier];
        sub_10017409C((uint64_t)v10, v27);

        (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v6);
      }
    }
    else
    {
    }
  }
}

void sub_100438DC8(void *a1, uint64_t a2, void *a3, unsigned int *a4, void (*a5)(char *))
{
  uint64_t v9 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v10 + 104))(v13, *a4, v9, v11);
  id v14 = a3;
  id v15 = a1;
  a5(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void sub_100438F04(void *a1, uint64_t a2, void *a3, uint64_t *a4, SEL *a5)
{
  uint64_t v8 = *a4;
  v13[3] = sub_10009E6C4(0, &qword_100708860);
  v13[0] = a3;
  id v9 = a3;
  id v10 = a1;
  double v11 = sub_100172BC0(0, v8, (uint64_t)v13);
  sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_100705D60);
  if (v11)
  {
    type metadata accessor for DOCItemCollectionViewController(0);
    uint64_t v12 = (void *)swift_dynamicCastClass();
    if (v12) {
      [v12 *a5:v9 v13[0]];
    }

    id v9 = v10;
    id v10 = v11;
  }
}

void sub_100439280(void *a1)
{
  if (objc_msgSend(a1, "doc_isCancellingKeyCommand"))
  {
    id v3 = [v1 presentedViewController];
    if (v3)
    {
      uint64_t v4 = v3;
      uint64_t v19 = &OBJC_PROTOCOL___DOCKeyCommandDismissible;
      uint64_t v5 = swift_dynamicCastObjCProtocolConditional();

      if (v5)
      {
        id v6 = [v1 presentedViewController:&OBJC_PROTOCOL___DOCKeyCommandDismissible];
        if (v6)
        {
          uint64_t v7 = v6;
          [v6 dismissViewControllerAnimated:1 completion:0];
        }
      }
    }
    id v8 = [v1 internalNavigationController:v19];
    id v9 = [v8 topViewController];

    if (v9)
    {
      id v10 = [v9 navigationItem];

      id v11 = [v10 searchController];
      if (v11)
      {
        if ([v11 isActive])
        {
          [v11 setActive:0];

          return;
        }
      }
    }
LABEL_17:
    id v17 = [v1 configuration];
    unsigned int v18 = [v17 isPickerUI];

    if (v18) {
      [v1 didIndicateCancelPicker];
    }
    return;
  }
  if (!objc_msgSend(a1, "doc_isDismissingKeyCommand")) {
    return;
  }
  id v12 = [v1 presentedViewController];
  if (!v12) {
    goto LABEL_17;
  }
  uint64_t v13 = v12;
  uint64_t v14 = swift_dynamicCastObjCProtocolConditional();

  if (!v14) {
    goto LABEL_17;
  }
  id v15 = [v1 presentedViewController];
  if (v15)
  {
    uint64_t v16 = v15;
    [v15 dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_100439550()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v20[-v7];
  id v9 = (char *)[v1 effectiveBrowserViewController];
  if (!v9) {
    goto LABEL_6;
  }
  id v10 = v9;
  id v11 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  id v12 = *v11;
  if (!v12 || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v13 = swift_dynamicCastClass()) == 0))
  {

LABEL_6:
    char v18 = 0;
    return v18 & 1;
  }
  uint64_t v14 = v13;
  id v15 = v12;

  uint64_t v16 = v14 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v8, v16, v2);
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v6, enum case for DOCItemGroupingBehavior.none(_:), v2);
  sub_10043AF10();
  LOBYTE(v16) = dispatch thunk of static Equatable.== infix(_:_:)();

  id v17 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v17(v8, v2);
  char v18 = v16 ^ 1;
  return v18 & 1;
}

unint64_t sub_100439764()
{
  id v1 = (char *)[v0 hierarchyController];
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v3 = *(void *)v2;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    char v9 = 0;
    return v9 & 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    uint64_t v7 = v6;

    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    id v8 = [self recentDocumentsLocation];
    char v9 = static NSObject.== infix(_:_:)();

    return v9 & 1;
  }
  __break(1u);
  return result;
}

Swift::Void __swiftcall DOCFullDocumentManagerViewController.validate(_:)(UICommand a1)
{
  [(objc_class *)a1.super.super.isa action];
  if ((static Selector.== infix(_:_:)() & 1) == 0) {
    return;
  }
  id v3 = (id)_DocumentManagerBundle();
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  v16._object = (void *)0x80000001005F4B80;
  v5._uint64_t countAndFlagsBits = 0x646E69572077654ELL;
  v5._object = (void *)0xEA0000000000776FLL;
  v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v6._object = (void *)0xEB00000000656C62;
  v7._uint64_t countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v16._uint64_t countAndFlagsBits = 0xD000000000000031;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v16);

  id v8 = (id)_DocumentManagerBundle();
  if (!v8)
  {
LABEL_9:
    __break(1u);
    return;
  }
  char v9 = v8;
  v17._object = (void *)0x80000001005F4BC0;
  v10._uint64_t countAndFlagsBits = 0x4420657461657243;
  v10._object = (void *)0xEF746E656D75636FLL;
  v11._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v11._object = (void *)0xEB00000000656C62;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v17._uint64_t countAndFlagsBits = 0xD000000000000031;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v17);

  id v13 = [v1 configuration];
  [v13 isFilesApp];

  swift_bridgeObjectRelease();
  id v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)a1.super.super.isa setDiscoverabilityTitle:v14];
}

void sub_100439B54()
{
  id v1 = [v0 internalNavigationController];
  id v2 = [v1 topViewController];

  if (v2)
  {
    id v3 = [v2 navigationItem];

    id v4 = [v3 searchController];
    if (v4)
    {
      [v4 setActive:1];
      id v5 = [v4 searchBar];
      [v5 becomeFirstResponder];
    }
  }
}

uint64_t sub_100439C5C()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_10070E840);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  id v10 = [v0 traitCollection];
  unsigned int v11 = [v10 supportHistoryNavigation];

  if (v11)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    if (qword_100704E88 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10009D098(v2, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    id v13 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v1;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    sub_1002C8768(0, (uint64_t)v8);
    swift_release();
  }
  return sub_10039B8B8((uint64_t)v8);
}

uint64_t sub_100439EEC()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_10070E840);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  id v10 = [v0 traitCollection];
  unsigned int v11 = [v10 supportHistoryNavigation];

  if (v11)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084D0);
    if (qword_100704E88 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_10009D098(v2, (uint64_t)qword_100708498);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v12, v2);
    id v13 = (void *)static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v16 - 2) = v1;
    dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();

    swift_release();
    sub_1002C8768(1, (uint64_t)v8);
    swift_release();
  }
  return sub_10039B8B8((uint64_t)v8);
}

uint64_t sub_10043A17C(unsigned int *a1)
{
  uint64_t v3 = type metadata accessor for DOCAdjustmentDirection();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v4 + 104))(v7, *a1, v3, v5);
  id v8 = [self viewOptionsSizeSetting];
  unsigned int v9 = [v8 isEnabled];

  if (v9)
  {
    id v10 = [v1 configuration];
    sub_100089B98((uint64_t)v10);

    char v11 = sub_10045409C();
    if (v11 != 2) {
      sub_1001744E0(v11 & 1);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

void sub_10043A2E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v25 - v7;
  double v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = (char *)[v1 effectiveBrowserViewController:v10];
  if (v13)
  {
    id v14 = v13;
    id v15 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v16 = *v15;
    if (*v15)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v17 = swift_dynamicCastClass();
      if (v17)
      {
        uint64_t v18 = v17;
        id v27 = v16;

        uint64_t v19 = v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__groupingBehavior;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v19, v2);
        uint64_t v20 = enum case for DOCItemGroupingBehavior.none(_:);
        uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
        v26(v5, enum case for DOCItemGroupingBehavior.none(_:), v2);
        char v21 = static DOCItemGroupingBehavior.== infix(_:_:)();
        uint64_t v22 = *(void (**)(char *, uint64_t))(v3 + 8);
        v22(v5, v2);
        v22(v8, v2);
        if (v21)
        {
          uint64_t v23 = *(void *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration)
              + OBJC_IVAR____TtC5Files21DOCFileProviderSource_defaultGroupingMode;
          swift_beginAccess();
          uint64_t v24 = type metadata accessor for DOCItemSortMode();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v12, v23, v24);
          uint64_t v20 = enum case for DOCItemGroupingBehavior.grouped(_:);
        }
        v26(v12, v20, v2);
        DOCItemCollectionViewController.groupOption(changeTo:)((uint64_t)v12);
        v22(v12, v2);
        id v14 = v27;
      }
    }
  }
}

uint64_t sub_10043A5C8()
{
  uint64_t v1 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v23 = *(void *)(v8 - 8);
  double v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v2 + 104))(v4, enum case for DOCItemSortMode.DisplayableMode.date(_:), v1, v9);
  uint64_t v12 = v0;
  uint64_t v13 = (char *)[v0 effectiveBrowserViewController];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = v8;
    uint64_t v16 = (void **)&v13[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v17 = *v16;
    if (*v16)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v18 = (void *)swift_dynamicCastClass();
      if (v18) {
        id v19 = v17;
      }
    }
    else
    {
      uint64_t v18 = 0;
    }
    uint64_t v8 = v15;
  }
  else
  {
    uint64_t v18 = 0;
  }
  sub_100170564((uint64_t)v4, (uint64_t)v7);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v20 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v7, 1, v8) == 1) {
    return sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007086D0);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v11, v7, v8);
  sub_10016FED4((uint64_t)v11);
  sub_10009E6C4(0, (unint64_t *)&unk_1007086B0);
  id v22 = [v12 configuration];
  static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)();

  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v8);
}

void sub_10043A8F4()
{
  uint64_t v1 = v0;
  id v2 = [v0 configuration];
  unsigned int v3 = [v2 isFilesApp];

  if (v3)
  {
    id v4 = [v1 actionManager];
    unint64_t v5 = sub_1003D5B7C();

    if (v5 >> 62) {
      goto LABEL_22;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
    {
      id v27 = v1;
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (v5 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v5 + 8 * v7);
        double v9 = v8;
        uint64_t v1 = (void *)(v7 - 3);
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        id v10 = [v8 identifier];
        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
        {
          swift_bridgeObjectRelease_n();
LABEL_20:
          swift_bridgeObjectRelease_n();
          id v17 = v9;
          id v18 = [v27 configuration];
          sub_1000CBE70((uint64_t *)&unk_1007141F0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1005A0030;
          *(void *)(inited + 32) = 0xD000000000000036;
          *(void *)(inited + 40) = 0x80000001005E0230;
          id v20 = [self recentDocumentsLocation];
          *(void *)(inited + 72) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
          *(void *)(inited + 48) = v20;
          unint64_t v21 = sub_100042C20(inited);
          id v22 = (objc_class *)type metadata accessor for DOCActionContext();
          uint64_t v23 = (char *)objc_allocWithZone(v22);
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = 0;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v18;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v27;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
          *(void *)&v23[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v21;
          v28.receiver = v23;
          v28.super_class = v22;
          id v24 = v27;
          id v25 = [super init];
          id v26 = [v24 actionManager];
          sub_1003EC438(v17, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v25);

          return;
        }
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_20;
        }

        ++v7;
        if (v1 == (void *)v6) {
          goto LABEL_15;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    [v1 performCreateDocument];
  }
}

void sub_10043ACB4()
{
  uint64_t v1 = (char *)[v0 effectiveBrowserViewController];
  if (v1)
  {
    id v2 = v1;
    unsigned int v3 = (id *)&v1[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    id v4 = *v3;
    id v5 = *v3;

    if (v4)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v6 = swift_dynamicCastClass();
      if (v6)
      {
        uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
        id v8 = *(void (**)(void *))((swift_isaMask & *v7) + 0x288);
        double v9 = v7;
        v8(v0);

        id v5 = v9;
      }
    }
  }
}

void sub_10043ADC0()
{
  uint64_t v1 = v0;
  [v0 setGoToFileProviderSources:0];
  id v2 = [v0 configuration];
  id v3 = [v1 sourceObserver];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    uint64_t v7 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v2, v4, (uint64_t)sub_10043AF04, v5);
    [v1 setSourceOrderObserver:v7];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10043AECC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10043AF04(uint64_t a1)
{
  sub_10047EA84(a1, v1);
}

unint64_t sub_10043AF10()
{
  unint64_t result = qword_10070AEE0;
  if (!qword_10070AEE0)
  {
    type metadata accessor for DOCItemGroupingBehavior();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070AEE0);
  }
  return result;
}

id sub_10043AF68(uint64_t a1, char a2)
{
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [(id)swift_getObjCClassFromMetadata() wrapperWithURL:v4 readonly:a2 & 1 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    double v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

id sub_10043B0CC(uint64_t a1, void *a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems] = 0;
  v3[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hasAddedUIPBackdrop] = 0;
  uint64_t v8 = OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID;
  double v9 = v3;
  *(void *)&v3[v8] = sub_100494BA4((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v9[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy] = a1;
  swift_unknownObjectRetain();

  [a3 copy];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_10070DE80);
  unint64_t v10 = (unint64_t)&type metadata for Any;
  swift_dynamicCast();
  id v11 = v41[0];
  [v41[0] setInProcess:1];
  [v41[0] setNeverCreateBookmarkForOpenInPlace:1];
  [v41[0] setShouldIgnoreInteractionMode:1];
  if ([a3 isFilesApp]) {
    goto LABEL_13;
  }
  uint64_t v39 = a2;
  id v12 = [a3 forbiddenActionIdentifiers];
  uint64_t v13 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  int64_t v19 = v13[2];
  int64_t v20 = v19 + 2;
  if (__OFADD__(v19, 2))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = v18;
    uint64_t v37 = v17;
    uint64_t v38 = a3;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || (a3 = v13, v20 > v13[3] >> 1))
    {
      if (v19 <= v20) {
        int64_t v22 = v19 + 2;
      }
      else {
        int64_t v22 = v19;
      }
      a3 = sub_1000825D0(isUniquelyReferenced_nonNull_native, v22, 1, v13);
    }
    int64_t v19 = a3[2];
    unint64_t v10 = a3[3];
    int64_t v20 = v19 + 1;
    swift_bridgeObjectRetain();
    if (v19 < v10 >> 1) {
      goto LABEL_10;
    }
  }
  a3 = sub_1000825D0((void *)(v10 > 1), v20, 1, a3);
LABEL_10:
  a3[2] = v20;
  uint64_t v23 = &a3[2 * v19];
  v23[4] = v14;
  v23[5] = v16;
  unint64_t v24 = a3[3];
  int64_t v25 = v19 + 2;
  swift_bridgeObjectRetain();
  if (v20 >= v24 >> 1) {
    a3 = sub_1000825D0((void *)(v24 > 1), v19 + 2, 1, a3);
  }
  a2 = v39;
  a3[2] = v25;
  id v26 = &a3[2 * v20];
  v26[4] = v37;
  v26[5] = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 setForbiddenActionIdentifiers:isa];

  a3 = v38;
LABEL_13:
  id v28 = [a2 _auxiliaryConnection];
  uint64_t v29 = v28;
  if (v28)
  {
    id v30 = v28;
    NSString v31 = String._bridgeToObjectiveC()();
    id v32 = [v30 valueForEntitlement:v31];

    if (v32)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)uint64_t v41 = 0u;
      long long v42 = 0u;
    }
    sub_1000CBE0C((uint64_t)v41, (uint64_t)v44, (uint64_t *)&unk_100705D60);
    if (v45)
    {
      if (swift_dynamicCast())
      {
        uint64_t v33 = v40;
LABEL_22:
        [v11 setSupportsRelatedFilesInPicker:v33];

        goto LABEL_23;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v44, (uint64_t *)&unk_100705D60);
    }
    uint64_t v33 = 0;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v34 = (objc_class *)type metadata accessor for DOCServiceDocumentBrowserViewController();
  v43.receiver = v9;
  v43.super_class = v34;
  [super initWithConfiguration:v11];
  [v35 setDelegate:v35];

  swift_unknownObjectRelease();
  return v35;
}

void sub_10043B6CC()
{
  if (v0[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hasAddedUIPBackdrop]) {
    return;
  }
  uint64_t v1 = v0;
  v0[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hasAddedUIPBackdrop] = 1;
  id v2 = [objc_allocWithZone((Class)_UIVisualEffectBackdropView) init];
  [v2 setRenderMode:1];
  if (qword_100705198 != -1) {
    swift_once();
  }
  [v2 setCaptureGroup:qword_1007374D0];
  id v3 = [v0 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = v3;
  UIView.doc_addAutoresizingSubview(_:insetBy:)();

  id v5 = [v1 view];
  if (!v5)
  {
LABEL_10:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 sendSubviewToBack:v2];
}

void sub_10043B8D8(char a1)
{
  id v2 = v1;
  v14.receiver = v2;
  v14.super_class = (Class)type metadata accessor for DOCServiceDocumentBrowserViewController();
  [super viewDidDisappear:a1 & 1];
  id v4 = [v2 effectiveFullBrowser];
  id v5 = [v4 documentManager];

  id v6 = (unsigned __int8 *)[v5 activeDocumentCreationSession];
  if (v6)
  {
    uint64_t v7 = v6[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase];

    switch(v7)
    {
      case 3:
        swift_bridgeObjectRelease();
        goto LABEL_5;
      default:
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8)
        {
LABEL_5:
          id v9 = [v2 effectiveFullBrowser];
          id v10 = [v9 documentManager];

          id v11 = [v10 activeDocumentCreationSession];
          if (v11)
          {
            uint64_t v12 = (uint64_t)v11;
            static os_log_type_t.info.getter();
            sub_1004CC92C(v12, 0xD00000000000002ELL, 0x80000001005F5090);
            sub_1004C23E0(v12, 4);
            sub_1004C23E0(v12, 0);

            id v10 = (id)v12;
          }
        }
        break;
    }
  }
  if (([v2 enclosedInUIPDocumentLanding] & 1) == 0)
  {
    id v13 = [v2 effectiveFullBrowser];
    [v13 dismissSearch];
  }
}

void sub_10043BBA8(void *a1, int a2)
{
  uint64_t v3 = v2;
  int v35 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v34 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100448478(1);
  uint64_t v37 = _swiftEmptyArrayStorage;
  if (*(void *)(v2
                 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems))
  {
    unint64_t v12 = swift_bridgeObjectRetain();
    sub_100169C78(v12);
  }
  if (*(void *)(v2
                 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems))
  {
    unint64_t v13 = swift_bridgeObjectRetain();
    sub_100169C78(v13);
  }
  unint64_t v14 = (unint64_t)v37;
  id v15 = a1;
  uint64_t v16 = sub_1004481FC(v14);
  swift_bridgeObjectRelease();

  if (v16)
  {
    uint64_t v33 = v9;
    static Logger.DocumentManager.getter();
    id v17 = v16;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    int64_t v20 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      NSString v31 = (void *)swift_slowAlloc();
      uint64_t v37 = v31;
      uint64_t v32 = v5;
      *(_DWORD *)unint64_t v21 = 136315138;
      id v30 = v21;
      id v22 = [v17 uuid:v21 + 4];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v23 = UUID.uuidString.getter();
      unint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v32);
      uint64_t v36 = sub_10009B0E4(v23, v25, (uint64_t *)&v37);
      uint64_t v5 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      int64_t v20 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "didPerformAction: performing action on button %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v33);
    id v26 = *(void **)(v3 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    id v27 = [v17 v20[60]];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    [v26 _didTriggerBarButtonWithUUID:isa overflowAction:v35 & 1];
  }
}

id sub_10043C0F0(uint64_t a1, void *a2)
{
  uint64_t v3 = self;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  _OWORD v8[4] = sub_10044CAF0;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  uint64_t v8[2] = sub_1000666D8;
  v8[3] = &unk_1006AD2E8;
  uint64_t v5 = _Block_copy(v8);
  id v6 = a2;
  swift_release();
  [v3 performAfterCATransactionCommits:v5];
  _Block_release(v5);
  return [v6 updateTraitCollectionTabBarSetting];
}

void sub_10043C324(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 setAction:@"didPerformActionOn:" v5];
  [a1 setTarget:v1];
  id v8 = [a1 menuRepresentation];
  if (v8)
  {
    uint64_t v9 = v8;
    objc_super v43 = &OBJC_PROTOCOL___UIMenuLeaf;
    uint64_t v10 = swift_dynamicCastObjCProtocolConditional();
    unsigned __int8 v40 = v7;
    if (!v10)
    {
      *(void *)&v42[0] = 0;
      *((void *)&v42[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      *(void *)&v42[0] = 0xD000000000000020;
      *((void *)&v42[0] + 1) = 0x80000001005F4E00;
      id v16 = [v9 description];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t v19 = v18;

      v20._uint64_t countAndFlagsBits = v17;
      v20._object = v19;
      String.append(_:)(v20);

      swift_bridgeObjectRelease();
      unint64_t v21 = *((void *)&v42[0] + 1);
      unint64_t v22 = *(void *)&v42[0];
      goto LABEL_13;
    }
    id v11 = (void *)v10;
    id v12 = v9;
    id v13 = [v11 title];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v14 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v14 < 1)
    {
      id v15 = [a1 title];
      if (!v15) {
        goto LABEL_8;
      }
    }
    else
    {
      id v15 = [v11 title];
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_8:
    id v23 = [v11 image];
    if (!v23) {
      id v23 = [a1 image];
    }
    if (String.count.getter() > 0 || v23)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v31;
      *(void *)(v32 + 24) = a1;
      id v33 = v23;
      id v34 = a1;
      int v35 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      [v34 setMenuRepresentation:v35];

LABEL_18:
      return;
    }

    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000023;
    unint64_t v21 = 0x80000001005F4E30;
    uint64_t v7 = v40;
LABEL_13:
    static Logger.DocumentManager.getter();
    id v24 = a1;
    swift_bridgeObjectRetain();
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v39 = v4;
      uint64_t v29 = (void *)v28;
      uint64_t v37 = swift_slowAlloc();
      uint64_t v41 = (uint64_t)v24;
      *(void *)&v42[0] = v37;
      *(_DWORD *)uint64_t v27 = 138412546;
      unint64_t v36 = v22;
      uint64_t v38 = v3;
      id v30 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v29 = v24;

      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_10009B0E4(v36, v21, (uint64_t *)v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "BarButtonItem can not be displayed in overflow menu. bbi: %@, reason: %s", (uint8_t *)v27, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    }
    sub_10009E6C4(0, (unint64_t *)&unk_100716390);
    memset(v42, 0, sizeof(v42));
    id v12 = (id)UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
    [v24 setMenuRepresentation:v12];
    goto LABEL_18;
  }
}

void sub_10043C94C(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v5 = (void *)Strong;
    sub_10043BBA8(a3, 1);
  }
}

void sub_10043C9AC(unint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.DocumentManager.getter();
  swift_bridgeObjectRetain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v24 = a2;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = v4;
    id v11 = (uint8_t *)v10;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v11 = 136315138;
    unint64_t v22 = v11 + 4;
    sub_10009E6C4(0, &qword_100708690);
    swift_bridgeObjectRetain();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    a2 = v24;
    uint64_t v25 = sub_10009B0E4(v15, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "DOCServiceDocumentBrowserViewController received new leading items %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(void *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v16 = a2;
  sub_10044808C(a1, (uint64_t)v16, (uint64_t)v27, "DOCServiceDocumentBrowserViewController: received Leading Button with UUID : %s");

  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setAdditionalLeadingNavigationBarButtonItems:isa];

  id v18 = [self shared];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  aBlock[4] = (uint64_t)sub_10044CB60;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  void aBlock[3] = (uint64_t)&unk_1006AD248;
  Swift::String v20 = _Block_copy(aBlock);
  unint64_t v21 = v16;
  swift_release();
  [v18 performAfterLaunch:v20];
  _Block_release(v20);
}

void sub_10043CD90(unint64_t a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.DocumentManager.getter();
  swift_bridgeObjectRetain_n();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    id v24 = a2;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v23 = v4;
    id v11 = (uint8_t *)v10;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v11 = 136315138;
    unint64_t v22 = v11 + 4;
    sub_10009E6C4(0, &qword_100708690);
    swift_bridgeObjectRetain();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    a2 = v24;
    uint64_t v25 = sub_10009B0E4(v15, v14, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "DOCServiceDocumentBrowserViewController recived new trailing items %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *(void *)&a2[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v16 = a2;
  sub_10044808C(a1, (uint64_t)v16, (uint64_t)v27, "DOCServiceDocumentBrowserViewController: received Trailing Button with UUID : %s");

  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v16 setAdditionalTrailingNavigationBarButtonItems:isa];

  id v18 = [self shared];
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  aBlock[4] = (uint64_t)sub_10044CB60;
  aBlock[5] = v19;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000666D8;
  void aBlock[3] = (uint64_t)&unk_1006AD1A8;
  Swift::String v20 = _Block_copy(aBlock);
  unint64_t v21 = v16;
  swift_release();
  [v18 performAfterLaunch:v20];
  _Block_release(v20);
}

void sub_10043D14C(void **a1@<X0>, uint64_t a2@<X1>, const char *a3@<X3>, void *a4@<X8>)
{
  uint64_t v29 = a3;
  uint64_t v32 = a2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *a1;
  static Logger.DocumentManager.getter();
  id v14 = v13;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v34 = v24;
    uint64_t v26 = v4;
    *(_DWORD *)uint64_t v17 = 136315138;
    v23[1] = v17 + 4;
    id v18 = [v14 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = UUID.uuidString.getter();
    uint64_t v25 = a4;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
    uint64_t v33 = sub_10009B0E4(v19, v21, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    a4 = v25;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, v29, v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  id v22 = [v14 barButton];
  sub_10043C324(v22);
  *a4 = v22;
}

uint64_t sub_10043D480(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_10009E6C4(0, &qword_100708690);
  uint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(void *)(v10 + 24) = a1;
  v14[4] = a5;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1000666D8;
  void v14[3] = a6;
  uint64_t v11 = _Block_copy(v14);
  id v12 = a1;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);

  return swift_bridgeObjectRelease();
}

void sub_10043D58C(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  int v25 = a3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v11 = URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v12);
  id v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = v11;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v10, v7);
  id v18 = (void *)(v17 + v16);
  uint64_t v19 = v23;
  *id v18 = v24;
  v18[1] = a5;
  *(void *)(v17 + ((v16 + 23) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = sub_10044C730;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  void aBlock[3] = &unk_1006ACFC8;
  unint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  id v21 = v19;
  swift_release();
  [v21 revealDocumentAtURL:v14 importIfNeeded:v25 & 1 completion:v20];
  _Block_release(v20);
}

uint64_t sub_10043D7A0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(void, uint64_t), void *a6, void (*a7)(char *, char *, uint64_t))
{
  int v35 = a7;
  unint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v34 - v18;
  if (a3) {
    URL.stopAccessingSecurityScopedResource()();
  }
  sub_1000CBC00(a1, (uint64_t)v12, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);
    return v36(0, a2);
  }
  unint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v20(v19, v12, v13);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    return v36(0, a2);
  }
  id v22 = [v35 configuration];
  int v35 = v20;
  id v23 = v22;
  id v24 = [v22 hostIdentifier];

  v34[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v34[2] = v25;

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v36;
  *(void *)(v26 + 24) = v37;
  swift_retain();
  URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v27);
  uint64_t v37 = v28;
  NSString v29 = String._bridgeToObjectiveC()();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  unint64_t v30 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_10044C7F0;
  *(void *)(v31 + 24) = v26;
  v35((char *)(v31 + v30), v16, v13);
  *(void *)(v31 + ((v15 + v30 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  aBlock[4] = sub_100449A3C;
  aBlock[5] = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6C98;
  void aBlock[3] = &unk_1006AD040;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v33 = v37;
  FPExtendBookmarkForDocumentURL();
  _Block_release(v32);
  swift_bridgeObjectRelease();
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

void sub_10043DB6C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  if (!a1 || a3)
  {
    a4(0, a3);
  }
  else
  {
    id v6 = a1;
    a4(a1, 0);
  }
}

uint64_t sub_10043DBFC(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  int v25 = a3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v13 = __chkstk_darwin(v12);
  uint64_t v15 = &v24[-v14];
  id v16 = [a2 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v15, v8);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v18 + v17, v11, v8);
  unint64_t v19 = v18 + ((v17 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v19 = a1;
  *(unsigned char *)(v19 + 8) = v25;
  unint64_t v20 = (void *)(v18 + ((v17 + v10 + 23) & 0xFFFFFFFFFFFFFFF8));
  *unint64_t v20 = v26;
  v20[1] = a5;
  aBlock[4] = sub_10044C66C;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AD108;
  id v21 = _Block_copy(aBlock);
  id v22 = a1;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v15, v8);
}

void sub_10043DF98(uint64_t a1, void (*a2)(void, void), uint64_t a3, void *a4)
{
  if (a1)
  {
    a2(0, 0);
  }
  else
  {
    id v7 = [objc_allocWithZone((Class)DOCDownloadSettings) init];
    uint64_t v8 = (void *)swift_allocObject();
    uint64_t v8[2] = a2;
    v8[3] = a3;
    _OWORD v8[4] = a4;
    v11[4] = sub_10044C64C;
    v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_10000CAE4;
    v11[3] = &unk_1006ACED8;
    uint64_t v9 = _Block_copy(v11);
    swift_retain();
    id v10 = a4;
    swift_release();
    [v7 fetchDefaultDownloadsLocationItem:v9];
    _Block_release(v9);
  }
}

void sub_10043E0C4(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, void *a5)
{
  if (!a1 || a2)
  {
    a3(0);
  }
  else
  {
    uint64_t v9 = self;
    id v10 = a1;
    id v11 = [v9 defaultManager];
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = a3;
    v12[3] = a4;
    v12[4] = a5;
    v15[4] = sub_10044C65C;
    void v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    void v15[2] = sub_1001B6B50;
    void v15[3] = &unk_1006ACF28;
    double v13 = _Block_copy(v15);
    swift_retain();
    id v14 = a5;
    swift_release();
    [v11 fetchURLForItem:v10 completionHandler:v13];
    _Block_release(v13);
  }
}

uint64_t sub_10043E214(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, void *a5)
{
  uint64_t v31 = a5;
  uint64_t v32 = a3;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v29 - v16;
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    return v32(0, a2);
  }
  uint64_t v30 = a4;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  v18(v17, v10, v11);
  if (a2)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return v32(0, a2);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = swift_allocObject();
  v18((char *)(v21 + v20), v14, v11);
  unint64_t v22 = v21 + ((v20 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
  id v24 = v31;
  id v23 = v32;
  *(void *)unint64_t v22 = v31;
  *(unsigned char *)(v22 + 8) = 0;
  int v25 = (void *)(v21 + ((v20 + v13 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v30;
  *int v25 = v23;
  v25[1] = v26;
  aBlock[4] = sub_10044C66C;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006ACF78;
  uint64_t v27 = _Block_copy(aBlock);
  id v28 = v24;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v27);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

void sub_10043E650(void *a1)
{
  id v1 = [a1 effectiveFullBrowser];
  id v2 = [v1 documentManager];

  sub_1004C86D4(0);
}

void sub_10043E728(void *a1, void (*a2)(void, id), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v65 = a7;
  uint64_t v66 = a8;
  id v67 = a4;
  id v69 = a2;
  uint64_t v70 = a3;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)type metadata accessor for Logger();
  uint64_t v68 = *(v15 - 1);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v64 - v20;
  id v22 = [a1 parentViewController];
  if (!v22) {
    goto LABEL_9;
  }
  id v23 = v22;
  type metadata accessor for DOCServiceViewController();
  if (!swift_dynamicCastClass())
  {

    goto LABEL_9;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong
    || (id v25 = [Strong _auxiliaryConnection],
        Strong,
        !v25))
  {
LABEL_9:
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v44 = objc_allocWithZone((Class)NSError);
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v46 = [v44 initWithDomain:v45 code:1 userInfo:0];

    static Logger.UI.getter();
    id v47 = v46;
    Swift::String v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      id v67 = v15;
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 138412290;
      id v71 = v47;
      id v52 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v51 = v47;

      uint64_t v15 = v67;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "[Rename] Rename API failed no service connection. Error: %@", v50, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, void *))(v68 + 8))(v21, v15);
    id v53 = v47;
    v69(0, v47);
    goto LABEL_13;
  }
  uint64_t v26 = v25;
  id v27 = [v67 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v28);
  uint64_t v30 = v29;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v12 + 8);
  v31(v14, v11);
  id v64 = v26;
  LOBYTE(v26) = [v26 doc_hasSandboxAccessToFile:v30];

  if ((v26 & 1) == 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v54 = objc_allocWithZone((Class)NSError);
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v56 = [v54 initWithDomain:v55 code:257 userInfo:0];

    static Logger.UI.getter();
    id v57 = v56;
    id v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      id v60 = (uint8_t *)swift_slowAlloc();
      id v67 = (void *)swift_slowAlloc();
      *(_DWORD *)id v60 = 138412290;
      id v71 = v57;
      id v61 = v57;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v67 = v57;

      _os_log_impl((void *)&_mh_execute_header, v58, v59, "[Rename] Rename API failed no sandbox access. Error: %@", v60, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, void *))(v68 + 8))(v17, v15);
    id v53 = v57;
    v69(0, v57);

LABEL_13:
    return;
  }
  uint64_t v32 = self;
  uint64_t v33 = a6;
  NSString v34 = String._bridgeToObjectiveC()();
  id v71 = 0;
  unsigned int v35 = [v32 _validateFileName:v34 error:&v71];

  id v36 = v71;
  if (v35)
  {
    uint64_t v37 = self;
    id v38 = v36;
    id v39 = [v37 defaultManager];
    id v40 = [v67 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v41 = (void *)swift_allocObject();
    id v41[2] = v69;
    v41[3] = v70;
    v41[4] = a5;
    uint64_t v42 = v65;
    uint64_t v43 = v66;
    v41[5] = v33;
    v41[6] = v42;
    v41[7] = v43;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    FPItemManager.doc_fetchItem(for:completionHandler:)();

    swift_release();
    v31(v14, v11);
  }
  else
  {
    id v62 = v71;
    uint64_t v63 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    v69(0, (id)v63);
    swift_errorRelease();
    swift_errorRelease();
  }
}

void sub_10043EED8(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a1)
  {
    type metadata accessor for DOCRenameOperation();
    uint64_t v15 = self;
    id v16 = a1;
    swift_bridgeObjectRetain();
    id v17 = [v15 shared];
    uint64_t v18 = (void *)DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)();
    double v19 = (void *)swift_allocObject();
    v19[2] = a3;
    v19[3] = a4;
    v19[4] = a7;
    v19[5] = a8;
    void v19[6] = a5;
    v19[7] = a6;
    v19[8] = v16;
    unsigned char v24[4] = sub_10044C4CC;
    v24[5] = v19;
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 1107296256;
    void v24[2] = sub_10053BC2C;
    v24[3] = &unk_1006ACD20;
    uint64_t v20 = _Block_copy(v24);
    id v21 = v16;
    swift_bridgeObjectRetain();
    id v22 = v18;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    [v22 setFinishedBlock:v20];
    _Block_release(v20);

    id v23 = [self defaultManager];
    [v23 scheduleAction:v22];
  }
  else
  {
    a3();
  }
}

void sub_10043F0CC(uint64_t a1, void **a2, void (*a3)(void, void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v50 = a6;
  uint64_t v51 = a7;
  uint64_t v49 = a5;
  uint64_t v14 = type metadata accessor for DOCAnalyticsAPIAbuseEvent.EventType();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  __chkstk_darwin(v14);
  id v46 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DOCAnalyticsAPIAbuseEvent();
  uint64_t v53 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v52 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_1000CBC00(a1, (uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
    if (v58)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      if (swift_dynamicCast())
      {
        id v27 = v54;
        id v28 = [self defaultManager];
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = a3;
        *(void *)(v29 + 24) = a4;
        os_log_type_t v59 = sub_10044C578;
        id v60 = (void *)v29;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v56 = 1107296256;
        id v57 = sub_1001B6B50;
        id v58 = &unk_1006ACDC0;
        uint64_t v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        [v28 fetchURLForItem:v27 completionHandler:v30];
        _Block_release(v30);

        return;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
    }
  }
  uint64_t v44 = v16;
  uint64_t v45 = a8;
  static Logger.UI.getter();
  swift_errorRetain();
  swift_errorRetain();
  id v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v42 = a3;
    uint64_t v43 = a4;
    id v24 = (uint8_t *)swift_slowAlloc();
    id v25 = (void *)swift_slowAlloc();
    *(_DWORD *)id v24 = 138412290;
    if (a2)
    {
      swift_errorRetain();
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      long long aBlock = (void **)v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      long long aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v26 = 0;
    }
    *id v25 = v26;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "[Rename] Rename API failed with error: %@", v24, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    a3 = v42;
    a4 = v43;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  if (a2
    && (long long aBlock = a2,
        swift_errorRetain(),
        sub_1000CBE70((uint64_t *)&unk_1007076D0),
        sub_10009E6C4(0, (unint64_t *)&qword_100707ED0),
        (swift_dynamicCast() & 1) != 0))
  {
    id v31 = v54;
    if ([v54 code] == (id)-1001)
    {
      uint64_t v33 = v46;
      uint64_t v32 = v47;
      uint64_t v34 = v48;
      (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for DOCAnalyticsAPIAbuseEvent.EventType.nameCollision(_:), v48);
      unsigned int v35 = v52;
      static DOCAnalyticsAPIAbuseEvent.renameAPI(hostIdentifier:type:)();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
      type metadata accessor for DOCAnalyticsManager();
      id v36 = (void *)static DOCAnalyticsManager.shared.getter();
      DOCAnalyticsManager.sendAPIAbuseEvent(_:)();

      uint64_t v37 = (void *)swift_allocObject();
      uint64_t v38 = v45;
      v37[2] = v51;
      v37[3] = v38;
      v37[4] = a9;
      v37[5] = a3;
      v37[6] = a4;
      os_log_type_t v59 = sub_10044C548;
      id v60 = v37;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v56 = 1107296256;
      id v57 = sub_1000666D8;
      id v58 = &unk_1006ACD70;
      id v39 = _Block_copy(&aBlock);
      swift_retain();
      swift_bridgeObjectRetain();
      id v40 = a9;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v44);
    }
    else
    {
      a3(0, a2);
    }
  }
  else
  {
    a3(0, a2);
  }
}

id sub_10043F788(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v11 = result;
  v23._object = (void *)0x80000001005F5000;
  v12._object = (void *)0x80000001005F4FC0;
  v12._uint64_t countAndFlagsBits = 0x100000000000003ALL;
  v13._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v13._object = (void *)0xEB00000000656C62;
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v23._uint64_t countAndFlagsBits = 0xD000000000000050;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v23);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0030;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_100073F48();
  *(void *)(v15 + 32) = a1;
  *(void *)(v15 + 40) = a2;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for DOCSystemAlert();
  static DOCSystemAlert.shared.getter();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v16 = result;
  v24._object = (void *)0xE200000000000000;
  v17._uint64_t countAndFlagsBits = 19279;
  v17._object = (void *)0xE200000000000000;
  v18._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v18._object = (void *)0xEB00000000656C62;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 19279;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v24);

  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  id v21 = a3;
  swift_retain();
  dispatch thunk of DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return (id)swift_release();
}

void sub_10043F9D4(uint64_t a1, void *a2, void (*a3)(void, void))
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = objc_allocWithZone((Class)NSError);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithDomain:v10 code:3072 userInfo:0];

  static Logger.UI.getter();
  Swift::String v12 = a2;
  Swift::String v24 = v8;
  Swift::String v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, v14))
  {
    Swift::String v23 = a3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v22 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v20 = (void *)swift_slowAlloc();
    uint64_t v21 = v6;
    *(_DWORD *)uint64_t v16 = 138412290;
    id v25 = v12;
    id v17 = v11;
    Swift::String v18 = v12;
    a3 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v20 = v12;

    id v11 = v17;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Rename: cancelled: %@", v16, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    uint64_t v6 = v21;
    swift_slowDealloc();
    uint64_t v5 = v22;
    swift_slowDealloc();
  }
  else
  {

    Swift::String v13 = v12;
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v24, v5);
  id v19 = v11;
  a3(0, v11);
}

uint64_t sub_10043FC7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(id, uint64_t))
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  Swift::String v12 = &v19[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  uint64_t v15 = &v19[-v14];
  sub_1000CBC00(a1, (uint64_t)v8, &qword_1007076B0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
    return a3(0, a2);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_10009E6C4(0, &qword_100708ED0);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v12, v15, v9);
    id v17 = sub_10043AF68((uint64_t)v12, 0);
    id v18 = v17;
    a3(v17, 0);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

void sub_10043FFA4(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  _OWORD v7[4] = a3;
  v7[5] = a4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000666D8;
  void v7[3] = &unk_1006ACC58;
  uint64_t v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  [a1 dismissAllPresentedViewControllers:a2 & 1 completion:v6];
  _Block_release(v6);
}

void sub_100440198(void *a1, uint64_t a2)
{
  uint64_t v60 = type metadata accessor for UTType();
  uint64_t v4 = *(void **)(v60 - 8);
  double v5 = __chkstk_darwin(v60);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 parentViewController];
  uint64_t v55 = a2;
  if (!v8) {
    goto LABEL_7;
  }
  uint64_t v9 = v8;
  type metadata accessor for DOCServiceViewController();
  if (!swift_dynamicCastClass())
  {

    int v15 = 0;
    if (a2 < 0) {
      goto LABEL_49;
    }
LABEL_18:
    if ((a2 & 0x4000000000000000) != 0) {
      goto LABEL_49;
    }
    uint64_t v16 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v16) {
      goto LABEL_50;
    }
    while (1)
    {
      unint64_t v17 = 0;
      unint64_t v18 = v55 & 0xC000000000000001;
      uint64_t v52 = v55 & 0xFFFFFFFFFFFFFF8;
      uint64_t v51 = v55 + 32;
      id v19 = (void (**)(char *, uint64_t))(v4 + 1);
      uint64_t v4 = aBlock;
      id v57 = &v64;
      uint64_t v50 = a1;
      int v49 = v15;
      uint64_t v48 = v16;
      unint64_t v53 = v55 & 0xC000000000000001;
      while (v18)
      {
        id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v27 = __OFADD__(v17++, 1);
        if (v27) {
          goto LABEL_47;
        }
LABEL_30:
        id v21 = v26;
        id v28 = [v26 identifier:v48];
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v58 = v30;
        uint64_t v59 = v29;

        if ((v15 & 1) == 0)
        {
          id v56 = v21;
          id v31 = [v21 supportedContentTypes];
          uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          aBlock[0] = _swiftEmptyArrayStorage;
          uint64_t v33 = *(void *)(v32 + 16);
          if (v33)
          {
            uint64_t v54 = v32;
            uint64_t v34 = (uint64_t *)(v32 + 40);
            uint64_t v35 = v60;
            do
            {
              uint64_t v37 = *(v34 - 1);
              uint64_t v36 = *v34;
              swift_bridgeObjectRetain();
              static UTType.folder.getter();
              uint64_t v38 = UTType.identifier.getter();
              uint64_t v40 = v39;
              (*v19)(v7, v35);
              if (v37 == v38 && v36 == v40)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
                swift_bridgeObjectRelease();
                if (v42)
                {
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v43 = aBlock[0];
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_100059E2C(0, *(void *)(v43 + 16) + 1, 1);
                    uint64_t v43 = aBlock[0];
                  }
                  unint64_t v45 = *(void *)(v43 + 16);
                  unint64_t v44 = *(void *)(v43 + 24);
                  if (v45 >= v44 >> 1)
                  {
                    sub_100059E2C(v44 > 1, v45 + 1, 1);
                    uint64_t v43 = aBlock[0];
                  }
                  *(void *)(v43 + 16) = v45 + 1;
                  uint64_t v46 = v43 + 16 * v45;
                  *(void *)(v46 + 32) = v37;
                  *(void *)(v46 + 40) = v36;
                  uint64_t v35 = v60;
                }
              }
              v34 += 2;
              --v33;
            }
            while (v33);
            swift_bridgeObjectRelease();
            a1 = v50;
            int v15 = v49;
            uint64_t v16 = v48;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_release();
          id v21 = v56;
          [v56 setSupportedContentTypes:isa];

          unint64_t v18 = v53;
          uint64_t v4 = aBlock;
        }
        uint64_t v22 = swift_allocObject();
        swift_unknownObjectWeakInit();
        Swift::String v23 = (void *)swift_allocObject();
        uint64_t v24 = v59;
        void v23[2] = v22;
        v23[3] = v24;
        v23[4] = v58;
        uint64_t v66 = sub_10044C35C;
        id v67 = v23;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        id v64 = sub_1004408BC;
        uint64_t v65 = &unk_1006ACBB8;
        id v25 = _Block_copy(aBlock);
        swift_release();
        [v21 setResolvedHandler:v25];
        _Block_release(v25);

        if (v17 == v16) {
          goto LABEL_50;
        }
      }
      if (v17 >= *(void *)(v52 + 16)) {
        goto LABEL_48;
      }
      id v26 = *(id *)(v51 + 8 * v17);
      BOOL v27 = __OFADD__(v17++, 1);
      if (!v27) {
        goto LABEL_30;
      }
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      if (!v16)
      {
LABEL_50:
        swift_bridgeObjectRelease();
        sub_10009E6C4(0, &qword_100708700);
        Class v47 = Array._bridgeToObjectiveC()().super.isa;
        [a1 setCustomActions:v47];

        return;
      }
    }
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong)
  {
LABEL_7:
    int v15 = 0;
    if (a2 < 0) {
      goto LABEL_49;
    }
    goto LABEL_18;
  }
  id v11 = [Strong _auxiliaryConnection];
  if (v11)
  {
    Swift::String v12 = v11;
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 valueForEntitlement:v13];

    if (v14)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {

      memset(v62, 0, sizeof(v62));
    }
    sub_1000CBE0C((uint64_t)v62, (uint64_t)aBlock, (uint64_t *)&unk_100705D60);
    if (v65)
    {
      if (swift_dynamicCast())
      {
        int v15 = v61;
        goto LABEL_17;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
    }
    int v15 = 0;
LABEL_17:
    if (a2 < 0) {
      goto LABEL_49;
    }
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1004407DC()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v1 = (void *)result;
    id v2 = *(void **)(result + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    swift_unknownObjectRetain();

    NSString v3 = String._bridgeToObjectiveC()();
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v2 _didTriggerCustomActionWithIdentifier:v3 onItemBookmarks:isa];

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1004408BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(uint64_t, long long *))(a1 + 32);
  sub_10009E6C4(0, (unint64_t *)&unk_100714270);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (a3)
  {
    *((void *)&v8 + 1) = swift_getObjectType();
    *(void *)&long long v7 = a3;
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  v4(v5, &v7);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1000CBBA4((uint64_t)&v7, (uint64_t *)&unk_100705D60);
}

void sub_100440A90(void *a1)
{
  id v2 = [a1 configuration];
  id v3 = [v2 sceneIdentifier];

  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    uint64_t v5 = qword_100704E40;
    id v6 = v3;
    if (v5 != -1) {
      swift_once();
    }
    long long v7 = (void *)qword_100707940;
    id v8 = [(id)qword_100707940 objectForKey:v6];
    if (!v8)
    {
      id v8 = [objc_allocWithZone((Class)type metadata accessor for DOCInteractionManager()) init];
      [v7 setObject:v8 forKey:v6];
    }

    [(id)qword_100707940 setObject:v8 forKey:v4];
  }
  uint64_t v9 = self;
  NSString v10 = String._bridgeToObjectiveC()();
  [v9 setGlobalTabbedBrowserController:a1 forIdentifier:v10];

  id v11 = [a1 configuration];
  NSString v12 = String._bridgeToObjectiveC()();
  [v11 setSceneIdentifier:v12];

  id v13 = [a1 fullRecentsViewController];
  id v14 = [v13 configuration];

  NSString v15 = String._bridgeToObjectiveC()();
  [v14 setSceneIdentifier:v15];

  id v16 = [a1 fullSharedViewController];
  id v17 = [v16 configuration];

  NSString v18 = String._bridgeToObjectiveC()();
  [v17 setSceneIdentifier:v18];

  id v19 = [a1 splitBrowserViewController];
  id v20 = String._bridgeToObjectiveC()();
  [v19 setSceneIdentifier:v20];
}

void sub_100440D94(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v104 = (char *)&v98 - v10;
  __chkstk_darwin(v11);
  uint64_t v105 = (char *)&v98 - v12;
  double v14 = __chkstk_darwin(v13);
  id v16 = (char *)&v98 - v15;
  id v106 = a1;
  id v17 = [a1 view];
  if (!v17)
  {
    __break(1u);
LABEL_72:

    __break(1u);
    goto LABEL_73;
  }
  NSString v18 = v17;
  id v19 = [v17 window];

  if (!v19) {
    goto LABEL_35;
  }
  id v20 = [v19 firstResponder];

  if (!v20) {
    goto LABEL_35;
  }
  id v2 = [v20 _responderWindow];
  id v21 = [v106 view];
  if (!v21) {
    goto LABEL_72;
  }
  uint64_t v22 = v21;
  id v23 = [v21 window];

  if (v2)
  {
    if (!v23)
    {

      goto LABEL_35;
    }
    sub_10009E6C4(0, (unint64_t *)&unk_10070CF00);
    id v24 = v2;
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0)
    {

      goto LABEL_35;
    }
  }
  else if (v23)
  {

    goto LABEL_35;
  }
  static Logger.DocumentManager.getter();
  id v26 = v20;
  BOOL v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v107 = v26;
  uint64_t v100 = v8;
  if (v29)
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v99 = (void *)swift_slowAlloc();
    id v101 = v30;
    *(_DWORD *)uint64_t v30 = 138412290;
    uint64_t v98 = v30 + 4;
    *(void *)&long long v111 = v26;
    id v31 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v99 = v20;

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "DOCServiceDocumentBrowserViewController already has a current first responder: %@", v101, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    BOOL v27 = v26;
  }
  uint64_t v99 = a2;

  (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  id v101 = (uint8_t *)[v106 effectiveFullBrowser];
  uint64_t v32 = (char *)[(uint8_t *)v101 dataSource];
  uint64_t v33 = &v32[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  unint64_t v34 = *(void *)v33;
  swift_bridgeObjectRetain();

  uint64_t v103 = v6;
  uint64_t v102 = v5;
  if (v34 >> 62) {
    goto LABEL_69;
  }
  unint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v36 = v107;
  if (!v35)
  {
LABEL_70:

    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  while (1)
  {
    while (__OFSUB__(v35--, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      swift_bridgeObjectRetain();
      unint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v36 = v107;
      if (!v35) {
        goto LABEL_70;
      }
    }
    if ((v34 & 0xC000000000000001) != 0)
    {
      uint64_t v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_26;
    }
    if ((v35 & 0x8000000000000000) != 0) {
      goto LABEL_67;
    }
    if (v35 >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_68;
    }
    uint64_t v38 = (char *)*(id *)(v34 + 32 + 8 * v35);
LABEL_26:
    uint64_t v39 = v38;
    uint64_t v40 = (void **)&v38[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    uint64_t v41 = *v40;
    if (!*v40) {
      goto LABEL_19;
    }
    id v109 = &OBJC_PROTOCOL___DOCKeyboardFocusable;
    uint64_t v42 = swift_dynamicCastObjCProtocolConditional();
    if (v42) {
      break;
    }
LABEL_18:
    uint64_t v36 = v107;
LABEL_19:

    if (!v35) {
      goto LABEL_70;
    }
  }
  uint64_t v43 = (void *)v42;
  id v44 = v41;
  unsigned int v45 = [v43 acceptsKeyboardFocus];

  if (!v45)
  {
    uint64_t v39 = v44;
    goto LABEL_18;
  }

  swift_bridgeObjectRelease();
  uint64_t v108 = &OBJC_PROTOCOL___DOCFirstResponderEstablishing;
  uint64_t v46 = swift_dynamicCastObjCProtocolConditional();
  if (!v46)
  {

LABEL_34:
    uint64_t v6 = v103;
    uint64_t v5 = v102;
    id v8 = v100;
    a2 = v99;
    goto LABEL_35;
  }
  Class v47 = v46;

  uint64_t v48 = v107;
  uint64_t v6 = v103;
  uint64_t v5 = v102;
  id v8 = v100;
  a2 = v99;
  if (v47 == v48) {
    return;
  }
LABEL_35:
  id v49 = v106;
  [v106 becomeFirstResponder];
  unsigned __int8 v50 = [v49 establishFirstResponder];
  if ((v50 & 1) == 0) {
    [v106 becomeFirstResponder];
  }
  if (!a2)
  {
    long long v111 = 0u;
    long long v112 = 0u;
LABEL_51:
    sub_1000CBBA4((uint64_t)&v111, (uint64_t *)&unk_100705D60);
LABEL_52:
    uint64_t v66 = v105;
    static Logger.DocumentManager.getter();
    id v67 = a2;
    uint64_t v68 = Logger.logObject.getter();
    id v69 = a2;
    os_log_type_t v70 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v68, v70))
    {
      uint64_t v71 = v5;
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v111 = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136315138;
      if (v69)
      {
        id v73 = [v67 description];
        uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v76 = v75;
      }
      else
      {
        unint64_t v76 = 0xE500000000000000;
        uint64_t v74 = 0x2A6C696E2ALL;
      }
      *(void *)&v110[0] = sub_10009B0E4(v74, v76, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, v70, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s without additional info", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v105, v71);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v66, v5);
    }
    return;
  }
  if ([a2 propertyList])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v110, 0, sizeof(v110));
  }
  sub_1000CBE0C((uint64_t)v110, (uint64_t)&v111, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v112 + 1)) {
    goto LABEL_51;
  }
  sub_1000CBE70((uint64_t *)&unk_100716400);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_52;
  }
  uint64_t v103 = v6;
  uint64_t v51 = *(void *)&v110[0];
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v51 + 16) || (uint64_t v54 = sub_100042F50(v52, v53), (v55 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v77 = v104;
    static Logger.DocumentManager.getter();
    os_log_type_t v78 = a2;
    id v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v102 = v5;
      uint64_t v82 = (uint8_t *)v81;
      *(void *)&long long v111 = swift_slowAlloc();
      *(_DWORD *)uint64_t v82 = 136315138;
      id v83 = [v78 description];
      uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v86 = v85;

      *(void *)&v110[0] = sub_10009B0E4(v84, v86, (uint64_t *)&v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s without 'real' action info", v82, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v103 + 8))(v104, v102);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v103 + 8))(v77, v5);
    }
    return;
  }
  id v56 = v8;
  id v57 = (uint64_t *)(*(void *)(v51 + 56) + 16 * v54);
  uint64_t v59 = *v57;
  uint64_t v58 = (void *)v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v50 & 1) == 0) {
    goto LABEL_62;
  }
  id v60 = [v106 view];
  if (!v60)
  {
LABEL_73:
    __break(1u);
    return;
  }
  unsigned __int8 v61 = v60;
  id v62 = [v60 window];

  if (v62)
  {
    id v63 = [v62 firstResponder];

    if (v63)
    {
      id v64 = (NSString *)String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      SEL v65 = NSSelectorFromString(v64);

      sub_10044AA7C((uint64_t)v65, v63);
      return;
    }
  }
LABEL_62:
  uint64_t v87 = v5;
  *(void *)&long long v111 = 0;
  *((void *)&v111 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(19);
  id v88 = [a2 description];
  uint64_t v89 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v91 = v90;
  swift_bridgeObjectRelease();

  *(void *)&long long v111 = v89;
  *((void *)&v111 + 1) = v91;
  v92._uint64_t countAndFlagsBits = 0x61206C616572202CLL;
  v92._object = (void *)0xEF203A6E6F697463;
  String.append(_:)(v92);
  v93._uint64_t countAndFlagsBits = v59;
  v93._object = v58;
  String.append(_:)(v93);
  swift_bridgeObjectRelease();
  long long v94 = v111;
  static Logger.DocumentManager.getter();
  swift_bridgeObjectRetain();
  id v95 = Logger.logObject.getter();
  os_log_type_t v96 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v95, v96))
  {
    uint64_t v97 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v111 = swift_slowAlloc();
    *(_DWORD *)uint64_t v97 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)&v110[0] = sub_10009B0E4(v94, *((unint64_t *)&v94 + 1), (uint64_t *)&v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v95, v96, "DOCServiceDocumentBrowserViewController can not perform remote keyCommand: %s failed to establish an appropriate firstResponder", v97, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v103 + 8))(v56, v87);
}

void sub_100441BB4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::Bool v14 = URL.startAccessingSecurityScopedResource()();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = a1;
  id v17 = [a1 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v18);
  id v20 = v19;
  v15(v12, v8);
  id v21 = (void *)swift_allocObject();
  _OWORD v21[2] = v24;
  v21[3] = a5;
  v21[4] = sub_10044C1B4;
  v21[5] = v16;
  void v21[6] = a2;
  aBlock[4] = sub_10044C208;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1001B6B50;
  void aBlock[3] = &unk_1006ACA00;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v23 = a2;
  swift_release();
  [v23 importDocumentAtURL:v20 mode:v25 toCurrentBrowserLocationWithCompletion:v22];
  _Block_release(v22);
  swift_release();
}

void sub_100441E18(char a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v9 = [a2 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_100441F10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t), void *a6, void *a7)
{
  id v36 = a7;
  uint64_t v37 = a3;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v19 = (char *)&v34 - v18;
  sub_1000CBC00(a1, (uint64_t)v12, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);
    uint64_t v20 = v37(0, a2);
    return v38(v20);
  }
  else
  {
    unint64_t v35 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v35(v19, v12, v13);
    id v22 = [v36 configuration];
    id v23 = [v22 hostIdentifier];

    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v36 = v24;

    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = v37;
    v25[3] = a4;
    id v26 = v39;
    v25[4] = v38;
    v25[5] = v26;
    swift_retain();
    swift_retain();
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v27);
    uint64_t v39 = v28;
    NSString v29 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
    unint64_t v30 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_10044C258;
    *(void *)(v31 + 24) = v25;
    v35((char *)(v31 + v30), v16, v13);
    *(void *)(v31 + ((v15 + v30 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
    aBlock[4] = sub_100449A3C;
    aBlock[5] = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001B6C98;
    void aBlock[3] = &unk_1006ACA78;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v33 = v39;
    FPExtendBookmarkForDocumentURL();
    _Block_release(v32);
    swift_bridgeObjectRelease();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
}

void sub_10044241C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  id v36 = a3;
  uint64_t v37 = a4;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  double v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  BOOL v33 = URL.startAccessingSecurityScopedResource()();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v12, v8);
  id v15 = [a2 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  Swift::Bool v16 = URL.startAccessingSecurityScopedResource()();
  v14(v12, v8);
  id v17 = [a1 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v18);
  uint64_t v20 = v19;
  v14(v12, v8);
  id v21 = [a2 url];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  URL._bridgeToObjectiveC()(v22);
  uint64_t v24 = v23;
  v14(v12, v8);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v35;
  *(void *)(v25 + 16) = v34;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v33;
  *(void *)(v25 + 40) = a1;
  *(unsigned char *)(v25 + 48) = v16;
  BOOL v27 = v36;
  *(void *)(v25 + 56) = a2;
  *(void *)(v25 + 64) = v27;
  aBlock[4] = sub_10044C0A4;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1001B6B50;
  void aBlock[3] = &unk_1006AC898;
  os_log_type_t v28 = _Block_copy(aBlock);
  swift_retain();
  id v29 = a1;
  id v30 = a2;
  id v31 = v27;
  swift_release();
  [v31 importDocumentAtURL:v20 nextToDocumentAtURL:v24 mode:v37 completionHandler:v28];
  _Block_release(v28);
}

uint64_t sub_1004426E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), void *a4, int a5, void *a6, int a7, void *a8, void *a9)
{
  int v43 = a7;
  id v44 = a3;
  unsigned int v45 = a6;
  int v46 = a5;
  Class v47 = a4;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)v41 - v20;
  sub_1000CBC00(a1, (uint64_t)v14, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v42(v21, v14, v15);
    id v27 = [a9 configuration];
    id v28 = [v27 hostIdentifier];

    v41[0] = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v41[1] = v29;

    uint64_t v30 = swift_allocObject();
    id v31 = v45;
    *(void *)(v30 + 16) = v44;
    *(void *)(v30 + 24) = v47;
    *(unsigned char *)(v30 + 32) = v46 & 1;
    *(void *)(v30 + 40) = v31;
    *(unsigned char *)(v30 + 48) = v43 & 1;
    *(void *)(v30 + 56) = a8;
    swift_retain();
    id v32 = v31;
    id v33 = a8;
    URL.startAccessingSecurityScopedResource()();
    URL._bridgeToObjectiveC()(v34);
    Class v47 = v35;
    NSString v36 = String._bridgeToObjectiveC()();
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v21, v15);
    unint64_t v37 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10044C124;
    *(void *)(v38 + 24) = v30;
    v42((char *)(v38 + v37), v18, v15);
    *(void *)(v38 + ((v17 + v37 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
    aBlock[4] = sub_100449A3C;
    aBlock[5] = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1001B6C98;
    void aBlock[3] = &unk_1006AC910;
    uint64_t v39 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v40 = v47;
    FPExtendBookmarkForDocumentURL();
    _Block_release(v39);
    swift_bridgeObjectRelease();
    swift_release();

    uint64_t v18 = v21;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  id v22 = v45;
  char v23 = v43;
  sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
  uint64_t result = v44(0, a2);
  if (v46)
  {
    id v25 = [v22 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  if (v23)
  {
    id v26 = [a8 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  return result;
}

uint64_t sub_100442B4C(uint64_t a1, int a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, double), int a5, char a6, void *a7, char a8, id a9)
{
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  double v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a4(a1, a3, v17);
  if (a6)
  {
    id v21 = [a7 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  if (a8)
  {
    id v22 = [a9 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL.stopAccessingSecurityScopedResource()();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return result;
}

void sub_100442E80(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(unsigned char *)(v10 + 24) = a3;
  void v13[4] = a5;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000666D8;
  v13[3] = a6;
  uint64_t v11 = _Block_copy(v13);
  id v12 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);
}

uint64_t sub_100442F74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  id v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a1;
  v12[3] = v9;
  v12[4] = v11;
  void v16[4] = a5;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_1000666D8;
  v16[3] = a6;
  uint64_t v13 = _Block_copy(v16);
  id v14 = a1;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100443150()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  aBlock[4] = sub_10044B5D8;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AC370;
  double v6 = _Block_copy(aBlock);
  id v7 = v0;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v6);
  static Logger.UI.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Interaction] Clearing last opened item in '_clearCurrentOpenInteraction' (call from host)", v10, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void sub_100443328(void *a1)
{
  id v1 = [a1 configuration];
  id v2 = [v1 sceneIdentifier];

  uint64_t v3 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v2);
  uint64_t v4 = (void **)&v3[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  uint64_t v5 = *v4;
  char *v4 = 0;
  sub_1000D7C50(v5);
}

void sub_100443420(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = sub_100526110();
  if (v11)
  {
    id v12 = v11;
    id v13 = [a4 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    URL._bridgeToObjectiveC()(v14);
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    aBlock[4] = a2;
    aBlock[5] = a3;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100045AE0;
    void aBlock[3] = &unk_1006AC690;
    double v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v12 getTransitionControllerForURL:v16 completionBlock:v17];
    _Block_release(v17);
    swift_unknownObjectRelease();
  }
  else
  {
    a2();
  }
}

uint64_t sub_100443724(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  id v7 = sub_100526110();
  if (!v7) {
    return a2();
  }
  uint64_t v8 = v7;
  v11[4] = a2;
  v11[5] = a3;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100045AE0;
  v11[3] = &unk_1006AC5F0;
  uint64_t v9 = _Block_copy(v11);
  swift_retain();
  swift_release();
  [v8 getTransitionControllerForItem:a4 completionBlock:v9];
  _Block_release(v9);
  return swift_unknownObjectRelease();
}

uint64_t sub_100443958(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a2;
  id v29 = a1;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v11 = [v3 doc_hasDisappeared:v8];
  if (qword_100705078 != -1) {
    goto LABEL_7;
  }
  while (1)
  {
    id v12 = (void *)qword_100737318;
    id v13 = (uint64_t *)(qword_100737318 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
    swift_beginAccess();
    uint64_t v14 = *v13;
    if ((unint64_t)*v13 >> 62)
    {
      id v18 = v12;
      swift_bridgeObjectRetain();
      if (!_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v16 = v12;
      swift_bridgeObjectRetain();
      if (!v15) {
        goto LABEL_11;
      }
    }
    if ((v14 & 0xC000000000000001) != 0) {
      break;
    }
    uint64_t v17 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_12;
    }
    __break(1u);
LABEL_7:
    swift_once();
  }
  specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_unknownObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
LABEL_12:
  type metadata accessor for DOCTransitionableContext.SettingsTransaction();
  uint64_t v19 = swift_allocObject();
  UUID.init()();
  *(unsigned char *)(v19 + OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_settings) = v11;
  swift_beginAccess();
  if (!((unint64_t)*v13 >> 62))
  {
    swift_retain();
LABEL_14:
    sub_1005159E0(0, 0, v19);
    swift_endAccess();

    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = v28;
    v20[3] = a3;
    v20[4] = v19;
    id v21 = self;
    swift_retain();
    swift_retain();
    id v22 = [v21 defaultManager];
    id v23 = [v29 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v4;
    v24[3] = sub_100449A44;
    unsigned char v24[4] = v20;
    id v25 = v4;
    swift_retain();
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_release();
    swift_release();

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v27 & 0x8000000000000000) == 0) {
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

void sub_100443CE0(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  a2();
  if (qword_100705078 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_100737318;
  uint64_t v6 = (uint64_t *)(qword_100737318 + OBJC_IVAR____TtC5Files24DOCTransitionableContext_overrideSettingTransactions);
  swift_beginAccess();
  swift_retain();
  id v7 = v5;
  int64_t v8 = sub_10044B25C(v6, a4);
  swift_release();
  if ((unint64_t)*v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9 >= v8) {
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((*v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v8)
    {
LABEL_5:
      sub_10051699C(v8, v9);
      swift_endAccess();

      return;
    }
  }
  __break(1u);
}

void sub_100443E10(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = a3;
  v9[3] = a1;
  v9[4] = a4;
  v9[5] = a5;
  void v13[4] = sub_100449ABC;
  v13[5] = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1000666D8;
  v13[3] = &unk_1006AC2D0;
  uint64_t v10 = _Block_copy(v13);
  id v11 = a1;
  swift_retain();
  id v12 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v10);
}

void sub_100443F00(uint64_t a1, void *a2, void (*a3)(void), uint64_t a4)
{
  id v7 = sub_100526110();
  if (v7)
  {
    int64_t v8 = v7;
    if (a2)
    {
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = a3;
      *(void *)(v9 + 24) = a4;
      v12[4] = sub_100449AC8;
      v12[5] = v9;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      _OWORD v12[2] = sub_1001B6C98;
      v12[3] = &unk_1006AC320;
      uint64_t v10 = _Block_copy(v12);
      id v11 = a2;
      swift_retain();
      swift_release();
      [v8 getViewFor:v11 waitForNewThumbnail:1 :v10];
      _Block_release(v10);
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
  }
  a3(0);
}

void sub_100444038(void *a1, void *a2, void (*a3)(id))
{
  if (!a1 || !a2) {
    goto LABEL_9;
  }
  id v5 = a1;
  id v6 = a2;
  id v7 = [v5 layer];
  id v8 = (id)CALayerGetContext();

  if (!v8
    || (id v9 = [v8 contextId],
        v8,
        (id v10 = [v5 superview]) == 0))
  {

LABEL_9:
    a3(0);
    return;
  }
  id v11 = v10;
  [v5 frame];
  [v11 convertRect:0 toView:];
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;
  double v19 = v18;

  id v20 = [v5 layer];
  uint64_t RenderId = CALayerGetRenderId();

  id v22 = [objc_allocWithZone((Class)DOCAnimatableInfo) init];
  [v22 setSourceContextId:v9];
  [v22 setSourceLayerRenderId:RenderId];
  [v22 setSourceFrame:v13, v15, v17, v19];
  [v22 setSourcePath:v6];
  id v23 = v22;
  a3(v22);
}

void sub_1004442F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  LODWORD(v8) = a4;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  double v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v15 = (char *)Strong;
    uint64_t v32 = v10;
    static Logger.DocumentManager.getter();
    swift_bridgeObjectRetain_n();
    double v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v30 = a3;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v31 = a6;
      double v19 = (uint8_t *)v18;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v34 = v27;
      uint64_t v28 = a5;
      *(_DWORD *)double v19 = 136315138;
      id v26 = v19 + 4;
      sub_10009E6C4(0, (unint64_t *)&unk_100714270);
      swift_bridgeObjectRetain();
      uint64_t v20 = Array.description.getter();
      int v29 = v8;
      unint64_t v8 = v21;
      swift_bridgeObjectRelease();
      uint64_t v22 = v20;
      a3 = v30;
      uint64_t v33 = sub_10009B0E4(v22, v8, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      LOBYTE(v8) = v29;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Notifying host about presenting the activity view controller on documents %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a6 = v31;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v32);
    id v23 = *(void **)&v15[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    swift_unknownObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    [v23 _presentActivityViewControllerForItemBookmarks:isa withPopoverTracker:a3 isContentManaged:v8 & 1 additionalActivities:v25 activityProxy:a6];

    swift_unknownObjectRelease();
  }
}

void sub_10044479C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)v30 - v7;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    static Logger.DocumentManager.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v32 = v2;
      double v14 = (uint8_t *)v13;
      uint64_t v31 = swift_slowAlloc();
      aBlock[0] = v31;
      *(_DWORD *)double v14 = 136315138;
      v30[1] = v14 + 4;
      sub_10009E6C4(0, (unint64_t *)&unk_100714270);
      swift_bridgeObjectRetain();
      uint64_t v15 = Array.description.getter();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_10009B0E4(v15, v17, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Notifying host about the picked documents %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v32);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v10;
    *(void *)(v21 + 24) = a1;
    swift_bridgeObjectRetain_n();
    uint64_t v22 = v10;
    id v23 = [v22 presentedViewController];
    if (v23)
    {
      uint64_t v24 = v23;
      type metadata accessor for DOCServiceInfoViewController();
      uint64_t v25 = swift_dynamicCastClass();
      if (v25)
      {
        id v26 = (void *)v25;
        aBlock[4] = (uint64_t)sub_10044BE30;
        aBlock[5] = v21;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = (uint64_t)sub_1000666D8;
        void aBlock[3] = (uint64_t)&unk_1006AC500;
        uint64_t v27 = _Block_copy(aBlock);
        swift_retain();
        swift_release();
        [v26 dismissViewControllerAnimated:1 completion:v27];
        _Block_release(v27);
        swift_bridgeObjectRelease();

        swift_release();
        return;
      }
    }
    uint64_t v28 = *(void **)&v22[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    sub_10009E6C4(0, (unint64_t *)&unk_100714270);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v28 _didPickItemBookmarks:isa];

    if (([v22 enclosedInUIPDocumentLanding] & 1) == 0) {
      sub_100443150();
    }
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    static Logger.DocumentManager.getter();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to notify host about the picked documents, self went away", v20, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

uint64_t sub_100444C70(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
  sub_10009E6C4(0, (unint64_t *)&unk_100714270);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v2 _didPickItemBookmarks:isa];

  uint64_t result = (uint64_t)[a1 enclosedInUIPDocumentLanding];
  if ((result & 1) == 0) {
    return sub_100443150();
  }
  return result;
}

void sub_100444D7C(void *a1, uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  double v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v14 = a1;
    id v15 = [v14 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    BOOL v21 = URL.startAccessingSecurityScopedResource()();
    uint64_t v20 = a3;
    os_log_type_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v9, v6);
    id v16 = [v14 url];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
    v20(v13, a2);
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    if (v21)
    {
      id v17 = [v14 url];
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      URL.stopAccessingSecurityScopedResource()();
      v19(v9, v6);
    }
    else
    {
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v7 + 56))(v13, 1, 1, v6, v11);
    a3(v13, a2);
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
  }
}

void sub_100445000(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = *(void (**)(void *, uint64_t))(a1 + 32);
  swift_retain();
  id v6 = a2;
  v5(a2, a3);
  swift_release();
}

void sub_1004451C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v8, &qword_1007076B0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  (*(void (**)(uint64_t, void *, uint64_t))(a3 + 16))(a3, v12, a2);
}

uint64_t sub_1004452FC(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result && !a3)
  {
    uint64_t v3 = (void *)result;
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v4 = (void *)result;
      id v5 = *(void **)(result + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
      id v6 = v3;
      swift_unknownObjectRetain();

      URL._bridgeToObjectiveC()(v7);
      uint64_t v9 = v8;
      [v5 _didImportDocumentAtURL:v8 toDestinationItemBookmark:v6];

      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100445658(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v92 = a4;
  uint64_t v91 = a3;
  int v119 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v97 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v96 = (char *)v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for DispatchQoS();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  Swift::String v93 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  double v11 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void **)(v12 - 8);
  uint64_t v14 = v13[8];
  __chkstk_darwin(v12);
  id v106 = (char *)v90 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v134 = (char *)v90 - v16;
  __chkstk_darwin(v17);
  uint64_t v118 = (char *)v90 - v18;
  __chkstk_darwin(v19);
  BOOL v21 = (char *)v90 - v20;
  __chkstk_darwin(v22);
  Swift::String v120 = (char *)v90 - v23;
  uint64_t v24 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v24 - 8);
  uint64_t v99 = (char *)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v121 = (char *)v90 - v27;
  dispatch_group_t v135 = dispatch_group_create();
  uint64_t v139 = swift_allocObject();
  *(void *)(v139 + 16) = _swiftEmptyArrayStorage;
  uint64_t v28 = *(void *)(a1 + 16);
  uint64_t v98 = v6;
  v90[1] = a1;
  if (v28)
  {
    uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v13[2];
    int v29 = v13 + 2;
    uint64_t v31 = *((unsigned __int8 *)v29 + 64);
    uint64_t v115 = v29[7];
    Swift::String v125 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 5);
    uint64_t v117 = (unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 4);
    uint64_t v133 = (void (**)(char *, char *, uint64_t))(v29 + 2);
    Swift::String v124 = v29;
    unint64_t v138 = (unint64_t)(v29 - 1);
    uint64_t v32 = v30;
    uint64_t v108 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v107 = v31 | 7;
    uint64_t v114 = (v31 + 24) & ~v31;
    unint64_t v113 = (v14 + 7 + v114) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v112 = (v113 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v111 = v112 + 8;
    uint64_t v105 = (v31 + 32) & ~v31;
    unint64_t v104 = (v14 + 7 + v105) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v103 = v104 + 8;
    uint64_t v102 = &v144;
    uint64_t v33 = a1 + v105;
    swift_bridgeObjectRetain();
    *(void *)&long long v34 = 136315138;
    long long v101 = v34;
    uint64_t v100 = (char *)&type metadata for Any + 8;
    Swift::String v126 = v11;
    id v109 = v21;
    uint64_t v35 = v120;
    NSString v36 = v121;
    uint64_t v110 = v12;
    id v136 = v4;
    uint64_t v128 = (void (*)(char *, char *, uint64_t))v30;
    while (1)
    {
      v32(v36, v33, v12);
      Swift::String v123 = *v125;
      v123(v36, 0, 1, v12);
      if ((*v117)(v36, 1, v12) == 1) {
        break;
      }
      uint64_t v131 = v28;
      uint64_t v137 = *v133;
      v137(v35, v36, v12);
      dispatch_group_enter(v135);
      static Logger.DocumentManager.getter();
      uint64_t v51 = (void (*)(char *))v32;
      v32(v21, (uint64_t)v35, v12);
      uint64_t v52 = Logger.logObject.getter();
      os_log_type_t v53 = static os_log_type_t.debug.getter();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v130 = v33;
      if (v54)
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v55 = v101;
        sub_1000BAD2C((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v55 + 4) = sub_10009B0E4(v56, v57, &aBlock);
        swift_bridgeObjectRelease();
        uint64_t v129 = *(void (**)(char *, uint64_t))v138;
        v129(v21, v12);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "creating DOCItemBookmark from url %s", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v108)(v126, v116);
      }
      else
      {
        uint64_t v129 = *(void (**)(char *, uint64_t))v138;
        v129(v21, v12);

        (*v108)(v11, v116);
      }
      id v58 = v136;
      if (v119)
      {
        id v59 = [v136 configuration];
        id v60 = [v59 hostIdentifier];

        uint64_t v127 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v140 = v61;
      }
      else
      {
        uint64_t v127 = 0;
        id v140 = 0;
      }
      uint64_t v62 = (uint64_t)v134;
      id v63 = v118;
      uint64_t v35 = v120;
      uint64_t v12 = v110;
      v51(v118);
      ((void (*)(uint64_t, char *, uint64_t))v51)(v62, v63, v12);
      uint64_t v64 = swift_allocObject();
      dispatch_group_t v65 = v135;
      *(void *)(v64 + 16) = v135;
      v137((char *)(v64 + v114), v63, v12);
      *(void *)(v64 + v113) = v58;
      id v66 = v140;
      *(void *)(v64 + v112) = v139;
      uint64_t v132 = v138 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      if (v66)
      {
        unint64_t v37 = v65;
        id v38 = v58;
        swift_retain_n();
        Swift::String v122 = v37;
        id v39 = v38;
        URL.startAccessingSecurityScopedResource()();
        URL._bridgeToObjectiveC()(v40);
        uint64_t v42 = v41;
        NSString v43 = String._bridgeToObjectiveC()();
        id v44 = v106;
        v128(v106, v35, v12);
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = sub_100449974;
        *(void *)(v45 + 24) = v64;
        v137((char *)(v45 + v105), v44, v12);
        *(void *)(v45 + v104) = 0;
        char v146 = sub_100449A3C;
        id v147 = (void *)v45;
        uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
        uint64_t v143 = 1107296256;
        uint64_t v144 = sub_1001B6C98;
        uint64_t v145 = &unk_1006AC230;
        int v46 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        FPExtendBookmarkForDocumentURL();
        id v47 = v136;
        _Block_release(v46);

        swift_release();
        NSString v36 = v121;

        uint64_t v48 = v129;
        v129(v134, v12);
        swift_bridgeObjectRelease();
        double v11 = v126;
        BOOL v21 = v109;
        uint64_t v49 = v131;
        uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v128;
      }
      else
      {
        id v67 = objc_allocWithZone((Class)DOCItemBookmark);
        uint64_t v68 = v65;
        id v69 = v136;
        uint64_t v70 = v139;
        swift_retain_n();
        uint64_t v71 = v68;
        id v140 = v69;
        URL._bridgeToObjectiveC()(v72);
        uint64_t v74 = v73;
        id v75 = [v67 initWithURL:v73 fileProviderItem:0];

        uint64_t v76 = (uint64_t)v99;
        uint64_t v77 = (void (*)(char *, uint64_t, uint64_t))v128;
        v128(v99, v35, v12);
        v123((char *)v76, 0, 1, v12);
        uint64_t v78 = (uint64_t)v134;
        sub_100446498(v75, v76, 0, v71, (uint64_t)v134, v140, v70);

        id v47 = v136;
        sub_1000CBBA4(v76, &qword_1007076B0);

        NSString v36 = v121;
        swift_release();
        uint64_t v48 = v129;
        v129((char *)v78, v12);
        double v11 = v126;
        uint64_t v49 = v131;
        uint64_t v32 = v77;
        BOOL v21 = v109;
      }
      uint64_t v50 = v130;
      swift_release();

      v48(v35, v12);
      uint64_t v33 = v50 + v115;
      uint64_t v28 = v49 - 1;
      if (!v28)
      {
        v123(v36, 1, 1, v12);
        break;
      }
    }
  }
  else
  {
    id v79 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v13[7];
    swift_bridgeObjectRetain();
    v79(v121, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v80 = static OS_dispatch_queue.main.getter();
  dispatch_group_t v81 = v135;
  uint64_t v82 = (void *)v80;
  id v83 = (void *)swift_allocObject();
  uint64_t v84 = v92;
  _OWORD v83[2] = v91;
  v83[3] = v84;
  v83[4] = v139;
  char v146 = sub_1003ED600;
  id v147 = v83;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v143 = 1107296256;
  uint64_t v144 = sub_1000666D8;
  uint64_t v145 = &unk_1006AC1B8;
  unint64_t v85 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  unint64_t v86 = v93;
  static DispatchQoS.unspecified.getter();
  uint64_t v141 = _swiftEmptyArrayStorage;
  sub_1000BAD2C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v87 = v96;
  uint64_t v88 = v98;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v85);

  (*(void (**)(char *, uint64_t))(v97 + 8))(v87, v88);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
  swift_release();
  return swift_release();
}

void sub_100446498(void *a1, uint64_t a2, uint64_t a3, NSObject *a4, uint64_t a5, void *a6, uint64_t a7)
{
  id v44 = a6;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Logger();
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && !a3)
  {
    uint64_t v43 = v17;
    uint64_t v20 = (void *)(a7 + 16);
    id v21 = a1;
    static Logger.DocumentManager.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a5, v12);
    id v22 = v21;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    int v41 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      id v42 = v22;
      uint64_t v26 = v25;
      uint64_t v40 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v37 = v27;
      *(_DWORD *)uint64_t v26 = 138412546;
      os_log_t v36 = v23;
      id v39 = a4;
      uint64_t v45 = (uint64_t)v42;
      v46[0] = v27;
      v35[1] = v26 + 4;
      _OWORD v35[2] = v46;
      id v28 = v42;
      id v38 = v20;
      id v29 = v28;
      a4 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v40 = a1;

      *(_WORD *)(v26 + 12) = 2080;
      sub_1000BAD2C((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v45 = sub_10009B0E4(v30, v31, v46);
      uint64_t v20 = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      os_log_t v32 = v36;
      _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v41, "DOCItemBookmark created %@ from url %s", (uint8_t *)v26, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      id v22 = v42;
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v16);
    id v33 = v44;
    objc_sync_enter(v44);
    swift_beginAccess();
    id v34 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    objc_sync_exit(v33);

    dispatch_group_leave(a4);
  }
  else
  {
    dispatch_group_leave(a4);
  }
}

id sub_1004469C0(uint64_t a1)
{
  return sub_100447B80(a1, type metadata accessor for DOCServiceDocumentBrowserViewController);
}

void sub_100446A44()
{
  id v0 = [self shared];
  [v0 signal];
}

id sub_100446B88()
{
  id result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result window];

    if (v3)
    {
      if (([v3 isKeyWindow] & 1) == 0) {
        [v3 makeKeyWindow];
      }
    }
    uint64_t v4 = (uint64_t *)[v0 effectiveFullBrowser];
    id v5 = (char *)[v4 dataSource];
    uint64_t v6 = &v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
    swift_beginAccess();
    unint64_t v7 = *(void *)v6;
    swift_bridgeObjectRetain();

    if (v7 >> 62)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      unint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_8;
      }
    }
    else
    {
      unint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_8:
        uint64_t v20 = v4;
        uint64_t v4 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
        while (1)
        {
          if (__OFSUB__(v8--, 1))
          {
            __break(1u);
LABEL_26:

            goto LABEL_27;
          }
          if ((v7 & 0xC000000000000001) != 0)
          {
            double v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v8 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_29:
              __break(1u);
              goto LABEL_30;
            }
            if (v8 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_29;
            }
            double v11 = (char *)*(id *)(v7 + 32 + 8 * v8);
          }
          uint64_t v9 = v11;
          uint64_t v12 = (void **)&v11[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
          swift_beginAccess();
          uint64_t v13 = *v12;
          if (v13)
          {
            uint64_t v14 = swift_dynamicCastObjCProtocolConditional();
            if (v14)
            {
              uint64_t v15 = (void *)v14;
              id v16 = v13;
              unsigned int v17 = [v15 acceptsKeyboardFocus];

              if (v17)
              {

                swift_bridgeObjectRelease();
                uint64_t v18 = (void *)swift_dynamicCastObjCProtocolConditional();
                if (v18)
                {
                  id v19 = [v18 establishFirstResponder];

                  return v19;
                }

                return 0;
              }
              uint64_t v9 = v16;
            }
          }

          if (!v8) {
            goto LABEL_26;
          }
        }
      }
    }

LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100446F90()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCServiceDocumentBrowserViewController();
  [super configureUIPDocumentLandingStyleIfNecessary];
  sub_10043B6CC();
  id v1 = [v0 parentViewController];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for DOCServiceViewController();
    uint64_t v3 = swift_dynamicCastClass();
    if (v3)
    {
      uint64_t v4 = (void *)v3;
      if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding) & 1) == 0)
      {
        *(unsigned char *)(v3 + OBJC_IVAR____TtC5Files24DOCServiceViewController_configuredForUIPDocumentLanding) = 1;
        id v5 = *(void **)(v3 + OBJC_IVAR____TtC5Files24DOCServiceViewController__configuration);
        if (!v5)
        {
          __break(1u);
          return;
        }
        [v5 setIsInUIPDocumentLanding:1];
        [v4 setModalInPresentation:1];
      }
    }
  }
}

void DOCTabbedBrowserViewController.applyBrowserStateChange(_:)(void *a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = a1;
  _OWORD v7[4] = sub_1004471C0;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1000666D8;
  void v7[3] = &unk_1006AC078;
  uint64_t v4 = _Block_copy(v7);
  id v5 = v1;
  id v6 = a1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v4);
}

uint64_t sub_100447180()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004471C0()
{
  return [*(id *)(v0 + 16) applyBrowserStateChange:*(void *)(v0 + 24) force:0];
}

id DOCTabbedBrowserViewController.applyBrowserStateChange(_:force:)(uint64_t a1, char a2)
{
  return [v2 _applyBrowserStateChange:a1 force:a2 & 1];
}

id DOCTabbedBrowserViewController.performBrowserStateChange(_:)(uint64_t a1)
{
  id v3 = [v1 configuration];
  unsigned int v4 = [v3 inProcess];

  if (v4
    && [v1 enclosedInUIPDocumentLanding]
    && (type metadata accessor for DOCServiceDocumentBrowserViewController(), (uint64_t v5 = swift_dynamicCastClass()) != 0))
  {
    id v6 = *(void **)(v5 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    unint64_t v7 = "performBrowserStateChange:";
    uint64_t v8 = a1;
  }
  else
  {
    unint64_t v7 = "_applyBrowserStateChange:force:";
    id v6 = v1;
    uint64_t v8 = a1;
  }
  return [v6 v7:v8];
}

id sub_100447434(void *a1, char a2)
{
  uint64_t v5 = type metadata accessor for UITraitOverrides();
  if (objc_msgSend(a1, "documentLandingMode", __chkstk_darwin(v5)) != (id)-1)
  {
    [a1 documentLandingMode];
    UIViewController.traitOverrides.getter();
    UIMutableTraits.uipDocumentLandingMode.setter();
    UIViewController.traitOverrides.setter();
  }
  id v6 = [v2 shouldDeferBrowserStateChanges];
  if (v6) {
    return [v2 updateDeferredBrowserStateChangesWith:a1];
  }
  __chkstk_darwin(v6);
  *(&v8 - 4) = (uint64_t)a1;
  *(&v8 - 3) = (uint64_t)v2;
  *((unsigned char *)&v8 - 16) = a2 & 1;
  return (id)DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)();
}

void sub_100447598(void *a1, void *a2, char a3)
{
  id v5 = [a1 contentMode];
  id v6 = v5;
  if ((unint64_t)v5 >= 3)
  {
    if (v5 == (id)-1) {
      return;
    }
LABEL_11:
    type metadata accessor for DOCUIPBrowserContentMode(0);
    _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
    return;
  }
  if (v5 == [a2 effectiveTabSwitcherTab] && (a3 & 1) == 0) {
    return;
  }
  [a2 switchToTab:v6];
  id v7 = [a2 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v8 = v7;
  [v7 layoutBelowIfNeeded];
}

id sub_100447708()
{
  id v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_100716318);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCUIPBrowserState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - v11;
  id result = [v0 shouldDeferBrowserStateChanges];
  if (result)
  {
    id v14 = [v0 deferredBrowserStateChanges];
    if (v14
      && (uint64_t v15 = v14,
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5),
          sub_1000BAD2C((unint64_t *)&unk_100716320, (void (*)(uint64_t))&type metadata accessor for DOCUIPBrowserState), dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)(), v15, (*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1))
    {
      id v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v16(v8, v4, v5);
      v16(v12, v8, v5);
    }
    else
    {
      DOCUIPBrowserState.init()();
    }
    if (DOCUIPBrowserState.contentMode.getter() != -1)
    {
      DOCUIPBrowserState.contentMode.getter();
      DOCUIPBrowserState.contentMode.setter();
    }
    if (DOCUIPBrowserState.documentLandingMode.getter() != -1)
    {
      DOCUIPBrowserState.documentLandingMode.getter();
      DOCUIPBrowserState.documentLandingMode.setter();
    }
    unsigned int v17 = (void *)DOCUIPBrowserState._bridgeToObjectiveC()();
    [v1 setDeferredBrowserStateChanges:v17];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  }
  return result;
}

id sub_100447B64()
{
  return sub_100447B80(0, type metadata accessor for doc_invalidObjCActionClass);
}

id sub_100447B80(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for doc_invalidObjCActionClass()
{
  return self;
}

uint64_t sub_100447BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v46 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100716310);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  double v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v40 - v12;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v47 = 0;
  uint64_t v44 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v41 = a1 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v42 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v43 = v46 + 16;
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v46 + 32);
  uint64_t v18 = (void (**)(char *, uint64_t))(v46 + 8);
  int64_t v40 = v42 - 1;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v47 << 6);
LABEL_8:
      uint64_t v21 = v44;
      (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v10, *(void *)(v44 + 48) + *(void *)(v46 + 72) * v20, v4);
      id v22 = (_OWORD *)(*(void *)(v21 + 56) + 32 * v20);
      uint64_t v23 = sub_1000CBE70((uint64_t *)&unk_100716300);
      os_log_type_t v24 = &v10[*(int *)(v23 + 48)];
      long long v25 = v22[1];
      *(_OWORD *)os_log_type_t v24 = *v22;
      *((_OWORD *)v24 + 1) = v25;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
      goto LABEL_30;
    }
    int64_t v26 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v26 < v42)
    {
      unint64_t v27 = *(void *)(v41 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v47 + 2;
      ++v47;
      if (v26 + 1 < v42)
      {
        unint64_t v27 = *(void *)(v41 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v47 = v26 + 1;
        if (v26 + 2 < v42)
        {
          unint64_t v27 = *(void *)(v41 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v47 = v26 + 2;
          if (v26 + 3 < v42)
          {
            unint64_t v27 = *(void *)(v41 + 8 * (v26 + 3));
            if (v27)
            {
              v26 += 3;
              goto LABEL_12;
            }
            int64_t v28 = v26 + 4;
            int64_t v47 = v26 + 3;
            if (v26 + 4 < v42) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    uint64_t v29 = sub_1000CBE70((uint64_t *)&unk_100716300);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    unint64_t v17 = 0;
LABEL_30:
    sub_1000CBE0C((uint64_t)v10, (uint64_t)v13, &qword_100716310);
    uint64_t v30 = sub_1000CBE70((uint64_t *)&unk_100716300);
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 != 1)
    {
      id v33 = (CGFloat *)&v13[*(int *)(v30 + 48)];
      (*v45)(v6, v13, v4);
      CGFloat v34 = *v33;
      CGFloat v35 = v33[1];
      CGFloat v36 = v33[2];
      CGFloat v37 = v33[3];
      unint64_t v38 = sub_10017BCC0((uint64_t)v6);
      LOBYTE(v33) = v39;
      (*v18)(v6, v4);
      if (v33)
      {
        v48.origin.x = v34;
        v48.origin.y = v35;
        v48.size.width = v36;
        v48.size.height = v37;
        uint64_t result = CGRectEqualToRect(*(CGRect *)(*(void *)(a2 + 56) + 32 * v38), v48);
        if (result) {
          continue;
        }
      }
    }
    return v32;
  }
  unint64_t v27 = *(void *)(v41 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v47 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v42)
    {
      int64_t v47 = v40;
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v41 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_10044808C(unint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = _swiftEmptyArrayStorage;
    if (!v7) {
      break;
    }
    uint64_t v15 = _swiftEmptyArrayStorage;
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v9 = 0;
    while (v7 != v9)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v10 = *(id *)(a1 + 8 * v9 + 32);
      }
      uint64_t v11 = v10;
      uint64_t v13 = v10;
      sub_10043D14C(&v13, a2, a4, &v14);

      if (v4) {
        return (void *)swift_release();
      }
      ++v9;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v7 == v9) {
        return v15;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1004481FC(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 barButton];
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
        swift_bridgeObjectRelease();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_100448358(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    char v6 = static UUID.== infix(_:_:)();
    swift_release();
    if (v6) {
      return v5;
    }
    uint64_t v7 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v7 == v4) {
      return 0;
    }
  }
}

void sub_100448478(int a1)
{
  uint64_t v3 = (uint64_t)v1;
  int v156 = a1;
  uint64_t v172 = sub_1000CBE70((uint64_t *)&unk_100716300);
  uint64_t v4 = __chkstk_darwin(v172);
  id v161 = (char *)&v154 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v171 = (uint64_t)&v154 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v170 = (char *)&v154 - v9;
  __chkstk_darwin(v8);
  unint64_t v169 = (char *)&v154 - v10;
  uint64_t v177 = type metadata accessor for UUID();
  int64_t v174 = *(void *)(v177 - 8);
  uint64_t v11 = __chkstk_darwin(v177);
  uint64_t v165 = (char *)&v154 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v168 = (uint64_t)&v154 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (uint64_t)&v154 - v16;
  __chkstk_darwin(v15);
  uint64_t v176 = (uint64_t)&v154 - v18;
  id v19 = [v1 effectiveBrowserViewController];
  if (!v19) {
    return;
  }
  unint64_t v20 = v19;
  id v21 = [v19 navigationController];

  if (!v21) {
    return;
  }
  id v157 = [v21 navigationBar];

  if (!v157) {
    return;
  }
  type metadata accessor for DOCNavigationBar();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {
    id v45 = v157;

    return;
  }
  id v23 = (id)v22;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  LODWORD(v159) = [self _UIPTabInfrastructureEnabled];
  if (!v159) {
    goto LABEL_27;
  }
  id v28 = [v23 topItem];
  if (!v28
    || (uint64_t v29 = v28,
        id v30 = [v28 overflowPresentationSource],
        v29,
        !v30))
  {
LABEL_10:
    [v23 bounds];
    CGFloat v32 = v31;
    double v34 = v33;
    CGFloat v36 = v35;
    double v38 = v37;
    id v39 = [v23 _restingHeights];
    if (v39)
    {
      int64_t v40 = v39;
      sub_10009E6C4(0, &qword_10070A280);
      unint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v50) {
          goto LABEL_13;
        }
      }
      else if (*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_13:
        if ((v41 & 0xC000000000000001) != 0)
        {
          id v42 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_144:
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            __break(1u);
            return;
          }
          id v42 = *(id *)(v41 + 32);
        }
        uint64_t v43 = v42;
        swift_bridgeObjectRelease();
        [v43 doubleValue];
        double v38 = v44;

        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
    }
LABEL_23:
    id v51 = [(id)v3 traitCollection];
    id v52 = [v51 layoutDirection];

    if (v52 == (id)1)
    {
      double v53 = 100.0;
    }
    else
    {
      v183.origin.x = v32;
      v183.origin.y = v34;
      v183.size.width = v36;
      v183.size.height = v38;
      double v53 = CGRectGetWidth(v183) + -100.0;
    }
    [v23 convertRect:0 toView:v53];
    uint64_t v24 = v54;
    uint64_t v25 = v55;
    uint64_t v26 = v56;
    uint64_t v27 = v57;
    goto LABEL_27;
  }
  swift_getObjectType();
  UIPopoverPresentationControllerSourceItem.frame(in:)();
  sub_1000CBE0C((uint64_t)v179, (uint64_t)v180, &qword_10070E910);
  if (v181 == 1)
  {
    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  [v23 convertRect:0 toView:v180[0], v180[1], v180[2], v180[3]];
  uint64_t v24 = v46;
  uint64_t v25 = v47;
  uint64_t v26 = v48;
  uint64_t v27 = v49;
  swift_unknownObjectRelease();
LABEL_27:
  unint64_t v58 = sub_100494BA4((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v178 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v164 = (char *)OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems;
  int64_t v59 = v174;
  if (*(void *)(v3
                 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalLeadingNavigationBarButtonItems))
  {
    unint64_t v60 = swift_bridgeObjectRetain();
    sub_100169C78(v60);
  }
  uint64_t v163 = OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems;
  if (*(void *)(v3
                 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_remoteAdditionalTrailingNavigationBarButtonItems))
  {
    unint64_t v61 = swift_bridgeObjectRetain();
    sub_100169C78(v61);
  }
  unint64_t v62 = v178;
  if (v178 >> 62) {
    goto LABEL_141;
  }
  uint64_t v63 = *(void *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v162 = v3;
    unint64_t v154 = v62;
    if (!v63) {
      break;
    }
    id v155 = v23;
    unint64_t v64 = 0;
    uint64_t v167 = v62 & 0xFFFFFFFFFFFFFF8;
    uint64_t v166 = (id *)(v62 + 32);
    unint64_t v62 = v59 + 8;
    uint64_t v158 = (int64_t *)(v59 + 16);
    unint64_t v160 = v63;
    while (1)
    {
      if (v64 >= *(void *)(v167 + 16))
      {
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
        goto LABEL_140;
      }
      uint64_t v173 = (uint64_t)v166[v64];
      id v65 = [v173 uuid:v154];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      if (*(void *)(v58 + 16))
      {
        unint64_t v66 = sub_10017BCC0(v176);
        if (v67)
        {
          v184.origin.x = 0.0;
          v184.origin.y = 0.0;
          v184.size.width = 0.0;
          v184.size.height = 0.0;
          if (!CGRectEqualToRect(*(CGRect *)(*(void *)(v58 + 56) + 32 * v66), v184))
          {
            (*(void (**)(uint64_t, uint64_t))v62)(v176, v177);

            goto LABEL_36;
          }
        }
      }
      unint64_t v178 = (unint64_t)_swiftEmptyArrayStorage;
      if (*(void *)&v164[v3])
      {
        unint64_t v68 = swift_bridgeObjectRetain();
        sub_100169C78(v68);
      }
      if (*(void *)(v3 + v163))
      {
        unint64_t v69 = swift_bridgeObjectRetain();
        sub_100169C78(v69);
      }
      unint64_t v70 = v178;
      unint64_t v175 = v58;
      if (v178 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (!v3)
        {
LABEL_51:
          swift_bridgeObjectRelease_n();
          goto LABEL_52;
        }
      }
      else
      {
        uint64_t v3 = *(void *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v3) {
          goto LABEL_51;
        }
      }
      unint64_t v58 = 0;
      while (1)
      {
        unint64_t v71 = v58 + 1;
        if (__OFADD__(v58, 1))
        {
          __break(1u);
          goto LABEL_126;
        }
        id v23 = *(id *)(v70 + 8 * v58 + 32);
        id v72 = [v23 uuid];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v2 = static UUID.== infix(_:_:)();
        int64_t v59 = *(void *)v62;
        (*(void (**)(uint64_t, uint64_t))v62)(v17, v177);
        if (v2) {
          break;
        }

        ++v58;
        if (v71 == v3) {
          goto LABEL_51;
        }
      }
      swift_bridgeObjectRelease_n();
      id v85 = [v23 remoteUIBarButtonItemDisplayedInNavigationBar:v155];

      if (v85)
      {
        id v23 = [v85 _doc_ipi_viewForPresenting];
        [v85 _doc_ipi_rectForPresenting];
        [v23 convertRect:0 toView:];
        double v87 = v86;
        double v89 = v88;
        double v91 = v90;
        double v93 = v92;
        uint64_t v2 = v176;
        uint64_t v94 = v177;
        ((void (*)(uint64_t, uint64_t, uint64_t))*v158)(v17, v176, v177);
        uint64_t v95 = (void *)v175;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v178 = (unint64_t)v95;
        sub_1003E18E8(v17, isUniquelyReferenced_nonNull_native, v87, v89, v91, v93);
        uint64_t v97 = (void *)v178;
        swift_bridgeObjectRelease();
        ((void (*)(uint64_t, uint64_t))v59)(v17, v94);

        uint64_t v98 = v94;
        unint64_t v58 = (unint64_t)v97;
        ((void (*)(uint64_t, uint64_t))v59)(v2, v98);
        uint64_t v3 = v162;
        uint64_t v63 = v160;
        goto LABEL_36;
      }
LABEL_52:
      uint64_t v63 = v160;
      if (!v159)
      {
        (*(void (**)(uint64_t, uint64_t))v62)(v176, v177);

        uint64_t v3 = v162;
        unint64_t v58 = v175;
        goto LABEL_36;
      }
      int64_t v59 = *v158;
      uint64_t v73 = v168;
      ((void (*)(uint64_t, uint64_t, uint64_t))*v158)(v168, v176, v177);
      uint64_t v74 = (void *)v175;
      uint64_t v2 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v178 = (unint64_t)v74;
      uint64_t v3 = sub_10017BCC0(v73);
      uint64_t v76 = v74[2];
      BOOL v77 = (v75 & 1) == 0;
      uint64_t v78 = v76 + v77;
      if (__OFADD__(v76, v77)) {
        goto LABEL_139;
      }
      id v23 = v75;
      if (v74[3] >= v78) {
        break;
      }
      sub_100351F8C(v78, v2);
      unint64_t v79 = sub_10017BCC0(v168);
      if ((v23 & 1) != (v80 & 1)) {
        goto LABEL_144;
      }
      uint64_t v3 = v79;
      unint64_t v58 = v178;
      if ((v23 & 1) == 0) {
        goto LABEL_57;
      }
LABEL_63:
      uint64_t v99 = (void *)(*(void *)(v58 + 56) + 32 * v3);
      void *v99 = v24;
      v99[1] = v25;
      v99[2] = v26;
      v99[3] = v27;
LABEL_64:
      swift_bridgeObjectRelease();
      uint64_t v100 = *(void (**)(uint64_t, int64_t))v62;
      int64_t v59 = v177;
      (*(void (**)(uint64_t, uint64_t))v62)(v168, v177);

      v100(v176, v59);
      uint64_t v3 = v162;
LABEL_36:
      if (++v64 == v63) {
        goto LABEL_70;
      }
    }
    if (v2)
    {
      unint64_t v58 = v178;
      if (v75) {
        goto LABEL_63;
      }
    }
    else
    {
      sub_10035A9A8();
      unint64_t v58 = v178;
      if (v23) {
        goto LABEL_63;
      }
    }
LABEL_57:
    *(void *)(v58 + 8 * ((unint64_t)v3 >> 6) + 64) |= 1 << v3;
    ((void (*)(uint64_t, uint64_t, uint64_t))v59)(*(void *)(v58 + 48) + *(void *)(v174 + 72) * v3, v168, v177);
    dispatch_group_t v81 = (void *)(*(void *)(v58 + 56) + 32 * v3);
    *dispatch_group_t v81 = v24;
    v81[1] = v25;
    _OWORD v81[2] = v26;
    v81[3] = v27;
    uint64_t v82 = *(void *)(v58 + 16);
    BOOL v83 = __OFADD__(v82, 1);
    uint64_t v84 = v82 + 1;
    if (!v83)
    {
      *(void *)(v58 + 16) = v84;
      goto LABEL_64;
    }
LABEL_140:
    __break(1u);
LABEL_141:
    swift_bridgeObjectRetain();
    uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_70:
  swift_bridgeObjectRelease();
  unint64_t v62 = *(void *)(v58 + 16);
  if (v62)
  {
    unint64_t v178 = (unint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = sub_100408BEC(v58);
    id v23 = v101;
    uint64_t v164 = (char *)self;
    if ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(unsigned char *)(v58 + 32))
    {
      uint64_t v102 = 0;
      uint64_t v103 = v58 + 64;
      uint64_t v167 = v174 + 16;
      unint64_t v160 = v58 + 80;
      unint64_t v175 = v58;
      uint64_t v168 = v58 + 64;
      uint64_t v163 = v62;
      do
      {
        uint64_t v17 = (unint64_t)v3 >> 6;
        int64_t v59 = 1 << v3;
        if ((*(void *)(v103 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0) {
          goto LABEL_127;
        }
        if (*(_DWORD *)(v58 + 36) != v23) {
          goto LABEL_128;
        }
        uint64_t v173 = (uint64_t)v102;
        uint64_t v104 = v172;
        uint64_t v105 = (uint64_t)v169;
        id v106 = &v169[*(int *)(v172 + 48)];
        uint64_t v107 = *(void *)(v58 + 48);
        uint64_t v176 = *(void *)(v174 + 72);
        uint64_t v108 = *(id **)(v174 + 16);
        uint64_t v109 = v177;
        ((void (*)(char *, uint64_t, uint64_t))v108)(v169, v107 + v176 * v3, v177);
        uint64_t v110 = (uint64_t *)(*(void *)(v175 + 56) + 32 * v3);
        uint64_t v24 = *v110;
        uint64_t v25 = v110[1];
        uint64_t v26 = v110[2];
        uint64_t v27 = v110[3];
        *(void *)id v106 = *v110;
        *((void *)v106 + 1) = v25;
        *((void *)v106 + 2) = v26;
        *((void *)v106 + 3) = v27;
        unint64_t v111 = v170;
        uint64_t v112 = v109;
        unint64_t v58 = v175;
        uint64_t v166 = v108;
        ((void (*)(char *, uint64_t, uint64_t))v108)(v170, v105, v112);
        unint64_t v113 = &v111[*(int *)(v104 + 48)];
        *(void *)unint64_t v113 = v24;
        *((void *)v113 + 1) = v25;
        *((void *)v113 + 2) = v26;
        *((void *)v113 + 3) = v27;
        uint64_t v114 = (uint64_t)v111;
        uint64_t v115 = v171;
        unint64_t v62 = (unint64_t)&unk_100716300;
        sub_1000CBE0C(v114, v171, (uint64_t *)&unk_100716300);
        sub_1000CBBA4(v105, (uint64_t *)&unk_100716300);
        uint64_t v2 = [v164 valueWithCGRect:*(double *)(v115 + *(int *)(v104 + 48)) *(double *)(v115 + *(int *)(v104 + 48) + 8) *(double *)(v115 + *(int *)(v104 + 48) + 16) *(double *)(v115 + *(int *)(v104 + 48) + 24)];
        sub_1000CBBA4(v115, (uint64_t *)&unk_100716300);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v116 = 1 << *(unsigned char *)(v58 + 32);
        if (v3 >= v116) {
          goto LABEL_129;
        }
        uint64_t v103 = v168;
        uint64_t v117 = *(void *)(v168 + 8 * v17);
        if ((v117 & v59) == 0) {
          goto LABEL_130;
        }
        if (*(_DWORD *)(v58 + 36) != v23) {
          goto LABEL_131;
        }
        unint64_t v118 = v117 & (-2 << (v3 & 0x3F));
        if (v118)
        {
          uint64_t v3 = __clz(__rbit64(v118)) | v3 & 0xFFFFFFFFFFFFFFC0;
          uint64_t v2 = v176;
          unint64_t v62 = v163;
        }
        else
        {
          uint64_t v119 = v17 + 1;
          unint64_t v120 = (unint64_t)(v116 + 63) >> 6;
          uint64_t v2 = v176;
          unint64_t v62 = v163;
          if (v17 + 1 >= v120) {
            goto LABEL_87;
          }
          unint64_t v121 = *(void *)(v168 + 8 * v119);
          if (!v121)
          {
            while (v120 - 2 != v17)
            {
              unint64_t v121 = *(void *)(v160 + 8 * v17++);
              if (v121)
              {
                uint64_t v119 = v17 + 1;
                goto LABEL_86;
              }
            }
LABEL_87:
            uint64_t v3 = 1 << *(unsigned char *)(v58 + 32);
            goto LABEL_88;
          }
LABEL_86:
          uint64_t v3 = __clz(__rbit64(v121)) + (v119 << 6);
        }
LABEL_88:
        uint64_t v102 = (char *)(v173 + 1);
        if (v173 + 1 == v62) {
          goto LABEL_92;
        }
      }
      while ((v3 & 0x8000000000000000) == 0 && v3 < v116);
    }
    __break(1u);
LABEL_92:
    uint64_t v159 = (void *)v178;
    swift_bridgeObjectRelease();
    int64_t v59 = *(void *)(v58 + 16);
    if (v59)
    {
      unint64_t v178 = (unint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100191238(0, v59, 0);
      uint64_t v3 = sub_100408BEC(v58);
      Swift::String v123 = 0;
      Swift::String v124 = (uint64_t *)(v174 + 32);
      uint64_t v158 = (int64_t *)(v58 + 88);
      uint64_t v125 = v168;
      unint64_t v160 = v59;
      uint64_t v163 = v122;
      while (1)
      {
        BOOL v83 = __OFADD__(v123, 1);
        uint64_t v127 = v123 + 1;
        if (v83) {
          goto LABEL_132;
        }
        if (v3 < 0 || v3 >= 1 << *(unsigned char *)(v58 + 32)) {
          goto LABEL_133;
        }
        unint64_t v128 = (unint64_t)v3 >> 6;
        if ((*(void *)(v125 + 8 * ((unint64_t)v3 >> 6)) & (1 << v3)) == 0) {
          goto LABEL_134;
        }
        if (*(_DWORD *)(v58 + 36) != v122) {
          goto LABEL_135;
        }
        uint64_t v173 = 1 << v3;
        uint64_t v164 = v127;
        uint64_t v129 = v172;
        uint64_t v130 = (uint64_t)v169;
        uint64_t v131 = &v169[*(int *)(v172 + 48)];
        uint64_t v132 = *(void *)(v58 + 48) + v2 * v3;
        unint64_t v133 = v58;
        uint64_t v134 = v177;
        dispatch_group_t v135 = v166;
        ((void (*)(char *, uint64_t, uint64_t))v166)(v169, v132, v177);
        id v136 = (uint64_t *)(*(void *)(v133 + 56) + 32 * v3);
        uint64_t v24 = *v136;
        uint64_t v25 = v136[1];
        uint64_t v26 = v136[2];
        uint64_t v27 = v136[3];
        *(void *)uint64_t v131 = *v136;
        *((void *)v131 + 1) = v25;
        *((void *)v131 + 2) = v26;
        *((void *)v131 + 3) = v27;
        uint64_t v137 = (uint64_t)v170;
        ((void (*)(char *, uint64_t, uint64_t))v135)(v170, v130, v134);
        unint64_t v138 = (void *)(v137 + *(int *)(v129 + 48));
        *unint64_t v138 = v24;
        v138[1] = v25;
        v138[2] = v26;
        v138[3] = v27;
        uint64_t v139 = v171;
        int64_t v59 = (int64_t)&unk_100716300;
        sub_1000CBE0C(v137, v171, (uint64_t *)&unk_100716300);
        sub_1000CBBA4(v130, (uint64_t *)&unk_100716300);
        id v140 = v161;
        ((void (*)(char *, uint64_t, uint64_t))v135)(v161, v139, v134);
        uint64_t v17 = *v124;
        ((void (*)(char *, char *, uint64_t))*v124)(v165, v140, v134);
        sub_1000CBBA4(v139, (uint64_t *)&unk_100716300);
        uint64_t v141 = (void *)v178;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100191238(0, v141[2] + 1, 1);
          uint64_t v141 = (void *)v178;
        }
        unint64_t v62 = v174;
        unint64_t v143 = v141[2];
        unint64_t v142 = v141[3];
        id v23 = (id)(v143 + 1);
        uint64_t v2 = v176;
        if (v143 >= v142 >> 1)
        {
          sub_100191238(v142 > 1, v143 + 1, 1);
          uint64_t v141 = (void *)v178;
        }
        v141[2] = v23;
        ((void (*)(char *, char *, uint64_t))v17)((char *)v141+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ v143 * v2, v165, v177);
        unint64_t v178 = (unint64_t)v141;
        unint64_t v58 = v175;
        int64_t v126 = 1 << *(unsigned char *)(v175 + 32);
        if (v3 >= v126) {
          goto LABEL_136;
        }
        uint64_t v125 = v168;
        uint64_t v144 = *(void *)(v168 + 8 * v128);
        if ((v144 & v173) == 0) {
          goto LABEL_137;
        }
        LODWORD(v122) = v163;
        if (*(_DWORD *)(v175 + 36) != v163) {
          goto LABEL_138;
        }
        unint64_t v145 = v144 & (-2 << (v3 & 0x3F));
        if (v145)
        {
          int64_t v126 = __clz(__rbit64(v145)) | v3 & 0xFFFFFFFFFFFFFFC0;
          int64_t v59 = v160;
          Swift::String v123 = v164;
        }
        else
        {
          unint64_t v146 = v128 + 1;
          unint64_t v147 = (unint64_t)(v126 + 63) >> 6;
          int64_t v59 = v160;
          Swift::String v123 = v164;
          if (v128 + 1 < v147)
          {
            unint64_t v148 = *(void *)(v168 + 8 * v146);
            if (!v148)
            {
              unint64_t v146 = v128 + 2;
              if (v128 + 2 >= v147) {
                goto LABEL_95;
              }
              unint64_t v148 = *(void *)(v168 + 8 * v146);
              if (!v148)
              {
                while (v147 - 3 != v128)
                {
                  unint64_t v148 = v158[v128++];
                  if (v148)
                  {
                    unint64_t v146 = v128 + 2;
                    goto LABEL_111;
                  }
                }
                goto LABEL_95;
              }
            }
LABEL_111:
            int64_t v126 = __clz(__rbit64(v148)) + (v146 << 6);
          }
        }
LABEL_95:
        uint64_t v3 = v126;
        if (v123 == (char *)v59)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    uint64_t v3 = v162;
  }
  else
  {
    uint64_t v159 = _swiftEmptyArrayStorage;
  }
  if ((v156 & 1) != 0
    || (uint64_t v149 = *(void *)(v3
                         + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        char v150 = sub_100447BDC(v58, v149),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v150 & 1) == 0))
  {
    *(void *)(v3
              + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_updateBarButtonTrackingViews_lastSentFramesByUUID) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v151 = *(void **)(v3 + OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy);
    sub_10009E6C4(0, (unint64_t *)&unk_10070AD00);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    Class v153 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v151 _updateRemoteBarButtonFrames:isa forUUID:v153];
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_100449834()
{
  sub_100447598(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_100449840()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044987C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_100449974(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(NSObject **)(v3 + 16);
  uint64_t v11 = *(void **)(v3 + v9);
  uint64_t v12 = *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100446498(a1, a2, a3, v10, v3 + v8, v11, v12);
}

void sub_100449A44(uint64_t a1)
{
  sub_100443CE0(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100449A50()
{
  return sub_10044C598((void (*)(void))&_swift_release);
}

void sub_100449A68(void *a1, uint64_t a2)
{
  sub_100443E10(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100449A74()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100449ABC()
{
  sub_100443F00(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

void sub_100449AC8(void *a1, void *a2)
{
  sub_100444038(a1, a2, *(void (**)(id))(v2 + 16));
}

uint64_t sub_100449AD0()
{
  uint64_t v1 = type metadata accessor for DOCAnalyticsAPIAbuseEvent.EventType();
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  __chkstk_darwin(v1);
  uint64_t v47 = (char *)v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DOCAnalyticsAPIAbuseEvent();
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  __chkstk_darwin(v3);
  uint64_t v50 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v54 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  __chkstk_darwin(v5);
  id v45 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  double v44 = (char *)v43 - v8;
  uint64_t v9 = type metadata accessor for DOCAPIRateLimiterAPI();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [v0 configuration];
  id v15 = [v14 hostIdentifier];

  v43[1] = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v16;

  *(void *)(swift_allocObject() + 16) = v0;
  type metadata accessor for DOCAPIRateLimiter();
  uint64_t v17 = v0;
  static DOCAPIRateLimiter.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for DOCAPIRateLimiterAPI.createDocument(_:), v9);
  id v18 = [v17 configuration];
  id v19 = [v18 hostIdentifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v17;
  id v20 = [v17 configuration];
  id v21 = [v20 roleIdentifier];

  if (v21)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  char v22 = dispatch thunk of DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (v22)
  {
    swift_bridgeObjectRelease();
    id v23 = v45;
    static Logger.UI.getter();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315138;
      uint64_t v56 = sub_10009B0E4(0xD000000000000026, 0x80000001005F5060, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s function ran without rate-limiting.", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v23, v55);
  }
  else
  {
    uint64_t v27 = v44;
    static Logger.UI.getter();
    id v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      *(_DWORD *)id v30 = 136315138;
      uint64_t v56 = sub_10009B0E4(0xD000000000000026, 0x80000001005F5060, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s create document function is rate-limited. Returning error.", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v55);
    CGFloat v32 = v47;
    uint64_t v31 = v48;
    uint64_t v33 = v49;
    (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for DOCAnalyticsAPIAbuseEvent.EventType.rateLimitation(_:), v49);
    double v34 = v50;
    static DOCAnalyticsAPIAbuseEvent.createDocumentSPI(hostIdentifier:type:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    type metadata accessor for DOCAnalyticsManager();
    double v35 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendAPIAbuseEvent(_:)();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v36 = objc_allocWithZone((Class)NSError);
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = [v36 initWithDomain:v37 code:3072 userInfo:0];

    id v39 = *(void **)&v46[OBJC_IVAR____TtC5Files39DOCServiceDocumentBrowserViewController_hostProxy];
    id v40 = v38;
    unint64_t v41 = (void *)_convertErrorToNSError(_:)();

    [v39 _didDenyCreateDocumentSessionWithError:v41];
    (*(void (**)(char *, uint64_t))(v51 + 8))(v34, v52);
  }
  return swift_release();
}

uint64_t sub_10044A260(void *a1, uint64_t a2, uint64_t a3, void *a4, void (**a5)(const void *, void, void *))
{
  uint64_t v64 = a3;
  uint64_t v67 = a2;
  uint64_t v8 = type metadata accessor for DOCAnalyticsAPIAbuseEvent.EventType();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  uint64_t v57 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DOCAnalyticsAPIAbuseEvent();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  __chkstk_darwin(v10);
  unint64_t v60 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v65 = *(void *)(v12 - 8);
  uint64_t v66 = v12;
  __chkstk_darwin(v12);
  uint64_t v56 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v54 - v15;
  uint64_t v16 = type metadata accessor for DOCAPIRateLimiterAPI();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a5;
  uint64_t v63 = a5;
  _Block_copy(a5);
  id v21 = [a4 configuration];
  id v22 = [v21 hostIdentifier];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  uint64_t v26 = (void *)swift_allocObject();
  void v26[2] = a4;
  v26[3] = sub_10044CB18;
  v26[4] = v20;
  v26[5] = a1;
  uint64_t v27 = v64;
  v26[6] = v67;
  v26[7] = v27;
  uint64_t v54 = v23;
  v26[8] = v23;
  v26[9] = v25;
  type metadata accessor for DOCAPIRateLimiter();
  id v28 = a4;
  uint64_t v67 = v20;
  swift_retain();
  id v29 = a1;
  swift_bridgeObjectRetain();
  uint64_t v64 = v25;
  swift_bridgeObjectRetain();
  static DOCAPIRateLimiter.shared.getter();
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DOCAPIRateLimiterAPI.rename(_:), v16);
  id v30 = [v28 configuration];
  id v31 = [v30 hostIdentifier];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v32 = [v28 configuration];
  id v33 = [v32 roleIdentifier];

  if (v33)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  char v34 = dispatch thunk of DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if (v34)
  {
    swift_bridgeObjectRelease();
    double v35 = v55;
    static Logger.UI.getter();
    id v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v36, v37))
    {
      id v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)id v38 = 136315138;
      uint64_t v68 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005F4F70, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "%s function ran without rate-limiting.", v38, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v66);
  }
  else
  {
    id v39 = v56;
    static Logger.UI.getter();
    id v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      *(_DWORD *)id v42 = 136315138;
      uint64_t v68 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005F4F70, &v69);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s rename function is rate-limited. Returning error.", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v66);
    double v44 = v57;
    uint64_t v43 = v58;
    uint64_t v45 = v59;
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, enum case for DOCAnalyticsAPIAbuseEvent.EventType.rateLimitation(_:), v59);
    uint64_t v46 = v60;
    static DOCAnalyticsAPIAbuseEvent.renameAPI(hostIdentifier:type:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
    type metadata accessor for DOCAnalyticsManager();
    uint64_t v47 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendAPIAbuseEvent(_:)();

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v48 = objc_allocWithZone((Class)NSError);
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v50 = [v48 initWithDomain:v49 code:3072 userInfo:0];

    id v51 = v50;
    uint64_t v52 = (void *)_convertErrorToNSError(_:)();
    v63[2](v63, 0, v52);

    (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v62);
  }
  swift_release();
  return swift_release();
}

id sub_10044AA7C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v43 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v43 - v12;
  sub_1000CBE70(&qword_100716410);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005AC1B0;
  *(void *)(inited + 32) = "performCreateDocumentOrOpenNewWindow:";
  *(void *)(inited + 40) = "performCreateFolder:";
  *(void *)(inited + 48) = "performCreateFolderWithSelection:";
  *(void *)(inited + 56) = "performOpen:";
  *(void *)(inited + 64) = "performGetInfo:";
  *(void *)(inited + 72) = "performRename:";
  *(void *)(inited + 80) = "performDuplicate:";
  *(void *)(inited + 88) = "performRevealItem:";
  *(void *)(inited + 96) = "performMarkAsFavorite:";
  *(void *)(inited + 104) = "performEjectMedium:";
  *(void *)(inited + 112) = "performFind:";
  *(void *)(inited + 120) = "copy:";
  *(void *)(inited + 128) = "paste:";
  *(void *)(inited + 136) = "selectAll:";
  *(void *)(inited + 144) = "performViewAsIcons:";
  *(void *)(inited + 152) = "performViewAsList:";
  *(void *)(inited + 160) = "performViewAsColumns:";
  *(void *)(inited + 168) = "performUseGrouping:";
  *(void *)(inited + 176) = "performSortByName:";
  *(void *)(inited + 184) = "performSortByDate:";
  *(void *)(inited + 192) = "performSortBySize:";
  *(void *)(inited + 200) = "performSortByKind:";
  *(void *)(inited + 208) = "performSortByTags:";
  *(void *)(inited + 216) = "performSortBySharedBy:";
  *(void *)(inited + 224) = "performGroupByKind:";
  *(void *)(inited + 232) = "performGroupByDate:";
  *(void *)(inited + 240) = "performGroupBySize:";
  *(void *)(inited + 248) = "performGroupBySharedBy:";
  *(void *)(inited + 256) = "performGoToEnclosingFolder:";
  *(void *)(inited + 264) = "performGoToRecents:";
  *(void *)(inited + 272) = "performGoToBrowse:";
  *(void *)(inited + 280) = "performGoToDocuments:";
  *(void *)(inited + 288) = "performGoToDesktop:";
  *(void *)(inited + 296) = "performGoToDownloads:";
  *(void *)(inited + 304) = "performGoToICloudDrive:";
  *(void *)(inited + 312) = "performGoToShared:";
  *(void *)(inited + 320) = "performGoToLocation:";
  *(void *)(inited + 328) = "performConnectToServer:";
  if ((static Selector.== infix(_:_:)() & 1) == 0)
  {
    uint64_t v15 = 40;
    while ((static Selector.== infix(_:_:)() & 1) == 0)
    {
      v15 += 8;
      if (v15 == 336)
      {
        swift_setDeallocating();
        static Logger.DocumentManager.getter();
        uint64_t v16 = Logger.logObject.getter();
        os_log_type_t v17 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v16, v17))
        {
          uint64_t v46 = v4;
          uint64_t v18 = (uint8_t *)swift_slowAlloc();
          v49[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v18 = 136315138;
          uint64_t v19 = Selector.description.getter();
          v48[0] = sub_10009B0E4(v19, v20, v49);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "DOCServiceDocumentBrowserViewController will not perform unsupported keyCommand action %s", v18, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v46);
        }

        id v28 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
        id v29 = v7;
        return (id)v28(v29, v4);
      }
    }
  }
  swift_bridgeObjectRelease();
  if ([a2 targetForAction:a1 withSender:0])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v48, 0, 32);
  }
  sub_1000CBE0C((uint64_t)v48, (uint64_t)v49, (uint64_t *)&unk_100705D60);
  if (!v49[3])
  {
    sub_1000CBBA4((uint64_t)v49, (uint64_t *)&unk_100705D60);
    goto LABEL_15;
  }
  sub_10009E6C4(0, &qword_100716418);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    static Logger.DocumentManager.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v46 = v4;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136315138;
      uint64_t v26 = Selector.description.getter();
      v48[0] = sub_10009B0E4(v26, v27, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "DOCServiceDocumentBrowserViewController can not perform keyCommand (no target found) for action %s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v46);
    }

    id v28 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    id v29 = v10;
    return (id)v28(v29, v4);
  }
  id v22 = v47;
  if ([v47 respondsToSelector:a1])
  {
    [v22 performSelector:a1 withObject:0];
    return v22;
  }
  static Logger.DocumentManager.getter();
  id v30 = v22;
  id v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.fault.getter();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    v49[0] = v45;
    *(_DWORD *)uint64_t v34 = 136315394;
    v43[1] = v34 + 4;
    id v35 = v30;
    id v36 = [v35 description];
    uint64_t v46 = v4;
    id v37 = v36;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    int v44 = v33;
    unint64_t v40 = v39;

    v48[0] = sub_10009B0E4(v38, v40, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2080;
    uint64_t v41 = Selector.description.getter();
    v48[0] = sub_10009B0E4(v41, v42, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v44, "DOCServiceDocumentBrowserViewController can not perform keyCommand. Target found %s does not respond to action %s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v13, v46);
  }

  id v28 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  id v29 = v13;
  return (id)v28(v29, v4);
}

unint64_t sub_10044B25C(uint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_100448358(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v18 = *a1;
      if (v18 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      uint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if ((unint64_t)*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v9 != v20) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 += OBJC_IVAR____TtCC5Files24DOCTransitionableContext19SettingsTransaction_uuid;
        for (unint64_t i = v6 + 5; ; ++i)
        {
          unint64_t v11 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v11 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v11 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            swift_retain();
          }
          uint64_t v9 = static UUID.== infix(_:_:)();
          swift_release();
          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          uint64_t v9 = i - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_46;
          }
          if ((unint64_t)*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v17 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v9 == v17) {
            return v6;
          }
        }
        if (v11 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        uint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v11 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            uint64_t v13 = *(void *)(v9 + 8 * i);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          uint64_t v12 = *(void *)(v9 + 8 * v6 + 32);
          swift_retain();
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1000BC324(v9);
          *a1 = v9;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v13;
        swift_release();
        specialized Array._endMutation()();
        uint64_t v9 = *a1;
        int v15 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v15 || v9 < 0 || (v9 & 0x4000000000000000) != 0)
        {
          uint64_t v9 = sub_1000BC324(v9);
          *a1 = v9;
        }
        if ((v11 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        if (v11 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v12;
        swift_release();
        specialized Array._endMutation()();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_10044B5A0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10044B5D8()
{
  sub_100443328(*(void **)(v0 + 16));
}

uint64_t sub_10044B5E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044B618()
{
  return sub_10044CA98((void (*)(void))&_swift_release);
}

void sub_10044B630(uint64_t a1)
{
  sub_10043C94C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10044B638(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.DocumentManager.getter();
  swift_bridgeObjectRetain_n();
  char v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v20 = v4;
    uint64_t v10 = swift_slowAlloc();
    id v21 = v2;
    unint64_t v11 = (uint8_t *)v10;
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)unint64_t v11 = 136315138;
    v19[1] = v11 + 4;
    type metadata accessor for URL();
    swift_bridgeObjectRetain();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_10009B0E4(v12, v14, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "DOCServiceDocumentBrowserViewController did Pick URLs %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v21;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v15 = [v2 configuration];
  id v16 = [v15 interactionMode];

  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100445658(a1, v16 == (id)1, (uint64_t)sub_10044BE24, v17);
  return swift_release_n();
}

void sub_10044B918(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v35 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = v6;
  double v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - v9;
  id v11 = [v2 configuration:v8];
  id v12 = [v11 hostIdentifier];

  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v13;

  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v10, a1, v4);
  uint64_t v16 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  uint64_t v34 = v14;
  *(void *)(v17 + 16) = v14;
  id v31 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  unint64_t v18 = v10;
  uint64_t v19 = v4;
  v31(v17 + ((v16 + 24) & ~v16), v18, v4);
  swift_retain();
  uint64_t v20 = v36;
  URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v21);
  int v33 = v22;
  uint64_t v32 = (uint64_t)String._bridgeToObjectiveC()();
  uint64_t v23 = v35;
  v15(v35, v20, v4);
  uint64_t v24 = (v16 + 32) & ~v16;
  unint64_t v25 = (v30 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_10044BD14;
  *(void *)(v26 + 24) = v17;
  v31(v26 + v24, v23, v19);
  *(void *)(v26 + v25) = 0;
  aBlock[4] = sub_100449A3C;
  aBlock[5] = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1001B6C98;
  void aBlock[3] = &unk_1006AC438;
  unint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v29 = (void *)v32;
  id v28 = v33;
  FPExtendBookmarkForDocumentURL();
  _Block_release(v27);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_10044BC48()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10044BD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for URL();

  return sub_1004452FC(a1, a2, a3);
}

uint64_t sub_10044BDA4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10044BDDC(uint64_t a1, uint64_t a2)
{
  sub_1004451C4(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10044BDE4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10044BE1C(void *a1, uint64_t a2)
{
  sub_100444D7C(a1, a2, *(void (**)(char *, uint64_t))(v2 + 16));
}

void sub_10044BE24(uint64_t a1)
{
}

uint64_t sub_10044BE30()
{
  return sub_100444C70(*(char **)(v0 + 16));
}

uint64_t sub_10044BE38()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10044BE88(uint64_t a1)
{
  sub_1004442F4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10044BE9C()
{
  return sub_100443724(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_10044BEAC()
{
  sub_100443420(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10044BEB8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_10044BEF0()
{
  return [*(id *)(v0 + 16) setDefaultDocumentAspectRatio:*(double *)(v0 + 24)];
}

uint64_t sub_10044BF04()
{
  return sub_10044C598((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10044BF1C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = String._bridgeToObjectiveC()();
  [v1 setLocalizedCreateDocumentActionTitle:v2];
}

uint64_t sub_10044BF78()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_10044BFB0()
{
  return [*(id *)(v0 + 16) setAllowsPickingMultipleItems:*(unsigned __int8 *)(v0 + 24)];
}

id sub_10044BFC4()
{
  return [*(id *)(v0 + 16) setAllowsDocumentCreation:*(unsigned __int8 *)(v0 + 24)];
}

void sub_10044BFD8(uint64_t a1, uint64_t a2)
{
  sub_100241454(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10044BFF4()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10044C044()
{
  sub_10044241C(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10044C054()
{
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10044C0A4(uint64_t a1, uint64_t a2)
{
  return sub_1004426E4(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void **)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_10044C0DC()
{
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10044C124(uint64_t a1, int a2, uint64_t a3)
{
  return sub_100442B4C(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, double))(v3 + 16), *(void *)(v3 + 24), *(unsigned char *)(v3 + 32), *(void **)(v3 + 40), *(unsigned char *)(v3 + 48), *(id *)(v3 + 56));
}

uint64_t sub_10044C164()
{
  return sub_10044C560((uint64_t (*)(void, void, void, void, void))sub_100441BB4);
}

uint64_t sub_10044C17C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10044C1B4()
{
  sub_100441E18(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10044C1C0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10044C208(uint64_t a1, uint64_t a2)
{
  return sub_100441F10(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(uint64_t (**)(uint64_t))(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_10044C218()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10044C258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v3 + 32);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(a1, a3);
  return v4(v5);
}

void sub_10044C2A4()
{
  sub_100440D94(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10044C2AC()
{
  return sub_10044C598((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10044C2C4()
{
  sub_100440A90(*(void **)(v0 + 16));
}

uint64_t sub_10044C2D4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10044C314()
{
  sub_100440198(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10044C31C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10044C35C()
{
  return sub_1004407DC();
}

uint64_t sub_10044C368()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10044C3A8()
{
  sub_10043FFA4(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10044C3B8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10044C410()
{
  sub_10043E728(*(void **)(v0 + 16), *(void (**)(void, id))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_10044C424()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10044C46C(void *a1, uint64_t a2)
{
  sub_10043EED8(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_10044C47C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10044C4CC(uint64_t a1, void **a2)
{
  sub_10043F0CC(a1, a2, *(void (**)(void, void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64));
}

uint64_t sub_10044C500()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10044C548()
{
  return sub_10044C560((uint64_t (*)(void, void, void, void, void))sub_10043F788);
}

uint64_t sub_10044C560(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10044C578(uint64_t a1, uint64_t a2)
{
  return sub_10043FC7C(a1, a2, *(uint64_t (**)(id, uint64_t))(v2 + 16));
}

uint64_t sub_10044C580()
{
  return sub_10044C598((void (*)(void))&_swift_release);
}

uint64_t sub_10044C598(void (*a1)(void))
{
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

void sub_10044C5E8(uint64_t a1)
{
  sub_10043F9D4(a1, *(void **)(v1 + 16), *(void (**)(void, void))(v1 + 24));
}

void sub_10044C5F4()
{
  sub_10043E650(*(void **)(v0 + 16));
}

uint64_t sub_10044C5FC()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10044C63C()
{
  sub_10043DF98(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_10044C64C(void *a1, uint64_t a2)
{
  sub_10043E0C4(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_10044C65C(uint64_t a1, uint64_t a2)
{
  return sub_10043E214(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_10044C670()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10044C730(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v8 = *(unsigned char *)(v2 + 16);
  uint64_t v9 = *(uint64_t (**)(void, uint64_t))(v2 + v7);
  uint64_t v10 = *(void **)(v2 + v7 + 8);
  id v11 = *(void (**)(char *, char *, uint64_t))(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_10043D7A0(a1, a2, v8, v2 + v6, v9, v10, v11);
}

void sub_10044C7F0(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10043DB6C(a1, a2, a3, *(void (**)(void *, uint64_t))(v3 + 16));
}

uint64_t sub_10044C7FC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10044C8E8()
{
  return sub_10043DBFC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_10044C8FC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v6);
}

void sub_10044C9BC()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void **)(v0 + v4);
  int v7 = *(unsigned __int8 *)(v0 + v4 + 8);
  unint64_t v8 = (uint64_t *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  sub_10043D58C(v5, v6, v7, v9, v10);
}

uint64_t sub_10044CA60()
{
  return sub_10044CA98((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_10044CA78()
{
  sub_10043CD90(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_10044CA80()
{
  return sub_10044CA98((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_10044CA98(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

void sub_10044CAE0()
{
  sub_10043C9AC(*(void *)(v0 + 16), *(char **)(v0 + 24));
}

id sub_10044CAE8(uint64_t a1)
{
  return sub_10043C0F0(a1, *(void **)(v1 + 16));
}

void sub_10044CAF0()
{
}

void sub_10044CCCC(uint64_t a1)
{
  uint64_t v40 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v2 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  unint64_t v39 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
    sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
    Set.Iterator.init(_cocoa:)();
    a1 = v42;
    uint64_t v32 = v43;
    uint64_t v4 = v44;
    uint64_t v5 = v45;
    unint64_t v6 = v46;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 56);
    uint64_t v32 = a1 + 56;
    uint64_t v9 = ~v7;
    uint64_t v10 = -v7;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v6 = v11 & v8;
    swift_bridgeObjectRetain();
    uint64_t v4 = v9;
    uint64_t v5 = 0;
  }
  v30[4] = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v30[1] = v4;
  int64_t v31 = (unint64_t)(v4 + 64) >> 6;
  unsigned int v38 = enum case for DOCUserActivityIdentifier.quickLook(_:);
  uint64_t v36 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v37 = (void (**)(char *, void, uint64_t))(v2 + 104);
  uint64_t v30[3] = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v35 = a1;
  uint64_t v12 = v40;
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v13 = __CocoaSet.Iterator.next()();
  if (!v13) {
    goto LABEL_36;
  }
  uint64_t v41 = v13;
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v47;
  swift_unknownObjectRelease();
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  if (!v14) {
    goto LABEL_36;
  }
  while (1)
  {
    unint64_t v33 = v6;
    uint64_t v34 = v5;
    id v21 = [v14 activityType];
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;

    unint64_t v25 = v39;
    (*v37)(v39, v38, v12);
    uint64_t v26 = DOCUserActivityIdentifier.rawValue.getter();
    uint64_t v28 = v27;
    (*v36)(v25, v12);
    if (v22 == v26 && v24 == v28)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_36;
    }
    char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_36;
    }

    uint64_t v5 = v15;
    unint64_t v6 = v16;
    a1 = v35;
    if (v35 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v6) {
      break;
    }
    uint64_t v16 = (v6 - 1) & v6;
    unint64_t v17 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v15 = v5;
LABEL_29:
    id v14 = *(id *)(*(void *)(a1 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_36;
    }
  }
  int64_t v18 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return;
  }
  if (v18 >= v31) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v18);
  uint64_t v15 = v5 + 1;
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v5 + 2;
  if (v5 + 2 >= v31) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v15);
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v5 + 3;
  if (v5 + 3 >= v31) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v15);
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v5 + 4;
  if (v5 + 4 >= v31) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v15);
  if (v19) {
    goto LABEL_28;
  }
  uint64_t v15 = v5 + 5;
  if (v5 + 5 >= v31) {
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(v32 + 8 * v15);
  if (v19)
  {
LABEL_28:
    uint64_t v16 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
    goto LABEL_29;
  }
  uint64_t v20 = v5 + 6;
  while (v31 != v20)
  {
    unint64_t v19 = *(void *)(v32 + 8 * v20++);
    if (v19)
    {
      uint64_t v15 = v20 - 1;
      goto LABEL_28;
    }
  }
LABEL_36:
  sub_10026AD14();
}

void sub_10044D134(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

Swift::String *DOCQuickLookSceneConfiguration.unsafeMutableAddressor()
{
  return &DOCQuickLookSceneConfiguration;
}

Swift::String *DOCQuickLookSceneIsShared.unsafeMutableAddressor()
{
  return &DOCQuickLookSceneIsShared;
}

void sub_10044D20C(void *a1, void *a2, void *a3)
{
  id v4 = v3;
  id v202 = a3;
  id v197 = a2;
  uint64_t v204 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v8 = &v185[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v185[-v10];
  __chkstk_darwin(v12);
  unint64_t v190 = &v185[-v13];
  __chkstk_darwin(v14);
  uint64_t v189 = &v185[-v15];
  __chkstk_darwin(v16);
  uint64_t v195 = &v185[-v17];
  __chkstk_darwin(v18);
  v196 = &v185[-v19];
  __chkstk_darwin(v20);
  id v201 = &v185[-v21];
  id v22 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
  uint64_t v23 = (char *)DOCPreviewController.init()();
  uint64_t v24 = &v23[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate];
  swift_beginAccess();
  *((void *)v24 + 1) = &off_1006AD370;
  swift_unknownObjectWeakAssign();
  unint64_t v25 = &v23[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate];
  swift_beginAccess();
  *((void *)v25 + 1) = &off_1006AD360;
  swift_unknownObjectWeakAssign();
  uint64_t v26 = &v23[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
  swift_beginAccess();
  *uint64_t v26 = 1;
  uint64_t v27 = *(void **)&v3[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
  uint64_t v199 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController;
  *(void *)&v3[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController] = v23;
  uint64_t v28 = v23;

  self;
  uint64_t v29 = swift_dynamicCastObjCClass();
  if (!v29)
  {
    static Logger.Application.getter();
    id v65 = a1;
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v66, v67))
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      uint64_t v198 = v6;
      v206[0] = v69;
      *(_DWORD *)uint64_t v68 = 136315138;
      swift_getObjectType();
      uint64_t v70 = _typeName(_:qualified:)();
      id v207 = (id)sub_10009B0E4(v70, v71, v206);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "Denying creation of quicklook window / scene.  Unexpected scene type received: %s)", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v198 + 8))(v8, v204);
    }
    else
    {

      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v204);
    }
    return;
  }
  uint64_t v30 = (void *)v29;
  id v188 = v11;
  id v31 = objc_allocWithZone((Class)UIWindowSceneActivationRequestOptions);
  id v32 = a1;
  id v33 = [v31 init];
  v206[3] = type metadata accessor for UIWindowSceneProminentPlacement();
  v206[4] = sub_1000BAD74(&qword_10070BD78, (void (*)(uint64_t))&type metadata accessor for UIWindowSceneProminentPlacement);
  sub_100052C70(v206);
  static UIWindowScenePlacement<>._largeProminentPlacement()();
  UIWindowSceneActivationRequestOptions.placement.setter();

  id v34 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v30];
  uint64_t v35 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window;
  uint64_t v36 = *(void **)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window];
  *(void *)&v4[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window] = v34;

  uint64_t v194 = v35;
  uint64_t v37 = *(void **)&v4[v35];
  if (v37) {
    [v37 setRootViewController:v28];
  }
  unsigned int v38 = v201;
  static Logger.Application.getter();
  id v39 = v32;
  uint64_t v40 = v28;
  id v41 = v39;
  uint64_t v42 = v4;
  uint64_t v43 = v40;
  id v44 = v41;
  uint64_t v45 = v38;
  unint64_t v46 = v42;
  id v47 = Logger.logObject.getter();
  int v48 = static os_log_type_t.debug.getter();
  id v191 = v47;
  BOOL v49 = os_log_type_enabled(v47, (os_log_type_t)v48);
  id v200 = v4;
  id v203 = v46;
  uint64_t v198 = v6;
  id v192 = v44;
  v193 = v43;
  if (v49)
  {
    int v186 = v48;
    uint64_t v50 = swift_slowAlloc();
    id v51 = (void *)swift_slowAlloc();
    uint64_t v187 = swift_slowAlloc();
    v206[0] = v187;
    *(_DWORD *)uint64_t v50 = 136316162;
    id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2080;
    uint64_t v52 = v44;
    id v53 = [v30 session];
    id v54 = [v53 persistentIdentifier];

    uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v57 = v56;

    id v207 = (id)sub_10009B0E4(v55, v57, v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2112;
    id v207 = v30;
    id v58 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v51 = v30;

    *(_WORD *)(v50 + 32) = 2112;
    uint64_t v59 = *(void **)&v200[v194];
    if (!v59)
    {

      __break(1u);
      return;
    }
    id v207 = *(id *)&v200[v194];
    id v60 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v51[1] = v59;
    id v61 = v203;

    *(_WORD *)(v50 + 42) = 2112;
    uint64_t v43 = v193;
    id v207 = v193;
    uint64_t v62 = v193;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void v51[2] = v23;

    uint64_t v63 = v191;
    _os_log_impl((void *)&_mh_execute_header, v191, (os_log_type_t)v186, "%s: sceneIdentifier: %s scene: %@, window: %@, doc vc: %@", (uint8_t *)v50, 0x34u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v64 = v201;
    id v201 = *(unsigned char **)(v198 + 8);
    ((void (*)(unsigned char *, uint64_t))v201)(v64, v204);
    id v4 = v200;
  }
  else
  {

    id v201 = *(unsigned char **)(v6 + 8);
    ((void (*)(unsigned char *, uint64_t))v201)(v45, v204);
  }
  id v72 = v197;
  id v73 = [v197 stateRestorationActivity];
  if (!v73)
  {
    id v85 = [v202 userActivities];
    sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
    sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
    uint64_t v86 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10044CCCC(v86);
    double v88 = v87;
    swift_bridgeObjectRelease();
    if (v88)
    {
      uint64_t v89 = sub_1003BCE90();
      if (v89)
      {
        uint64_t v90 = v89;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_1005A04F0;
        *(void *)(v91 + 32) = v90;
        v206[0] = v91;
        specialized Array._endMutation()();
        unint64_t v92 = v206[0];

        double v93 = v189;
        static Logger.Application.getter();
        swift_bridgeObjectRetain_n();
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.debug.getter();
        int v96 = v95;
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v97 = swift_slowAlloc();
          LODWORD(v196) = v96;
          uint64_t v98 = v97;
          uint64_t v195 = (unsigned char *)swift_slowAlloc();
          v206[0] = (uint64_t)v195;
          *(_DWORD *)uint64_t v98 = 136315394;
          id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v98 + 12) = 2080;
          id v191 = (v98 + 14);
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          id v197 = 0;
          swift_bridgeObjectRetain();
          uint64_t v99 = Array.description.getter();
          unint64_t v101 = v100;
          swift_bridgeObjectRelease();
          uint64_t v102 = v99;
          uint64_t v103 = v204;
          id v207 = (id)sub_10009B0E4(v102, v101, v206);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v94, (os_log_type_t)v196, "%s: Restore from quick look items: %s", (uint8_t *)v98, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v104 = v189;
          uint64_t v105 = v103;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v104 = v93;
          uint64_t v105 = v204;
        }
        ((void (*)(unsigned char *, uint64_t))v201)(v104, v105);
        uint64_t v106 = v199;
        id v134 = [v202 userActivities];
        uint64_t v135 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10044CCCC(v135);
        uint64_t v137 = v136;
        swift_bridgeObjectRelease();
        uint64_t v43 = v193;
        if (v137)
        {
          char v138 = sub_1003BD730();

          v203[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene] = v138 & 1;
        }
        id v4 = v200;
        uint64_t v139 = *(void **)&v200[v106];
        if (v139)
        {
          swift_bridgeObjectRetain();
          id v140 = v139;
          DOCPreviewController.set(_:defaultIndex:)(v92, 0, 0, 0, 1);

          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        goto LABEL_38;
      }
    }
    uint64_t v125 = v190;
    static Logger.Application.getter();
    id v126 = v202;
    uint64_t v127 = Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = swift_slowAlloc();
      uint64_t v130 = (void *)swift_slowAlloc();
      v206[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v129 = 136315394;
      id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v129 + 12) = 2112;
      id v207 = v126;
      id v131 = v126;
      uint64_t v43 = v193;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v130 = v126;

      id v72 = v197;
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "%s: Unexpected scene connection options: %@", (uint8_t *)v129, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v132 = v190;
    }
    else
    {

      uint64_t v132 = v125;
    }
    ((void (*)(unsigned char *, uint64_t))v201)(v132, v204);
    id v133 = [self sharedApplication];
    [v133 requestSceneSessionDestruction:v72 options:0 errorHandler:0];

    return;
  }
  uint64_t v74 = v73;
  id v75 = v196;
  static Logger.Application.getter();
  id v76 = v74;
  BOOL v77 = Logger.logObject.getter();
  os_log_type_t v78 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    char v80 = (void *)swift_slowAlloc();
    id v197 = (id)swift_slowAlloc();
    v206[0] = (uint64_t)v197;
    *(_DWORD *)uint64_t v79 = 136315394;
    id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v79 + 12) = 2112;
    id v207 = v76;
    id v81 = v76;
    uint64_t v82 = v204;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *char v80 = v74;

    id v4 = v200;
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "%s: stateRestorationActivity: %@", (uint8_t *)v79, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    uint64_t v43 = v193;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    BOOL v83 = v196;
    uint64_t v84 = v82;
  }
  else
  {

    BOOL v83 = v75;
    uint64_t v84 = v204;
  }
  ((void (*)(unsigned char *, uint64_t))v201)(v83, v84);
  uint64_t v106 = v199;
  uint64_t v107 = v195;
  v203[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene] = sub_1003BD730() & 1;
  uint64_t v108 = sub_1003BCE90();
  if (v108)
  {
    uint64_t v109 = (void *)v108;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = xmmword_1005A04F0;
    *(void *)(v110 + 32) = v109;
    v206[0] = v110;
    specialized Array._endMutation()();
    unint64_t v111 = v206[0];
    uint64_t v112 = *(void **)&v4[v106];
    if (v112)
    {
      id v113 = v109;
      id v114 = v112;
      DOCPreviewController.set(_:defaultIndex:)(v111, 0, 0, 0, 1);

      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    static Logger.Application.getter();
    id v115 = v76;
    uint64_t v116 = Logger.logObject.getter();
    os_log_type_t v117 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v116, v117))
    {
      uint64_t v118 = swift_slowAlloc();
      uint64_t v119 = (void *)swift_slowAlloc();
      id v197 = (id)swift_slowAlloc();
      v206[0] = (uint64_t)v197;
      *(_DWORD *)uint64_t v118 = 136315394;
      id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v118 + 12) = 2112;
      unint64_t v120 = v74;
      id v207 = v115;
      id v121 = v115;
      id v4 = v200;
      uint64_t v122 = v204;
      uint64_t v106 = v199;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v119 = v120;

      _os_log_impl((void *)&_mh_execute_header, v116, v117, "%s: stateRestorationActivity contained no restorable state: %@", (uint8_t *)v118, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      uint64_t v43 = v193;
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      Swift::String v123 = v195;
      uint64_t v124 = v122;
    }
    else
    {

      Swift::String v123 = v107;
      uint64_t v124 = v204;
    }
    ((void (*)(unsigned char *, uint64_t))v201)(v123, v124);
  }
LABEL_38:
  uint64_t v141 = v194;
  [*(id *)&v4[v194] makeKeyAndVisible];
  unint64_t v142 = *(void **)&v4[v141];
  if (v142)
  {
    id v143 = objc_allocWithZone((Class)DOCAppearance);
    id v144 = v142;
    id v145 = [v143 init];
    [v144 setAppearance:v145];
  }
  sub_10044EBBC();
  sub_10044EDC0();
  id v146 = [v202 userActivities];
  sub_10009E6C4(0, (unint64_t *)&unk_10070BDD0);
  sub_1000B86A8(&qword_100714BE0, (unint64_t *)&unk_10070BDD0);
  uint64_t v147 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10044CCCC(v147);
  uint64_t v149 = v148;
  swift_bridgeObjectRelease();
  if (!v149 || (id v150 = (id)sub_1003BD2D4(), v149, !v150))
  {
    id v150 = [objc_allocWithZone((Class)DOCConfiguration) init];
    uint64_t v151 = v188;
    static Logger.Application.getter();
    uint64_t v152 = Logger.logObject.getter();
    os_log_type_t v153 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v152, v153))
    {
      unint64_t v154 = (uint8_t *)swift_slowAlloc();
      v206[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v154 = 136315138;
      id v207 = (id)sub_10009B0E4(0xD00000000000001FLL, 0x80000001005E0570, v206);
      uint64_t v106 = v199;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v152, v153, "%s: couldn't fetch configuration from UserActivity. Keep going with DOCConfiguration() but things might act weirdly", v154, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      id v4 = v200;
    }
    else
    {
    }
    ((void (*)(unsigned char *, uint64_t))v201)(v151, v204);
  }
  id v155 = [self defaultPermission];
  id v156 = [v155 userActionForConfiguration:v150];

  id v157 = [v150 hostIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v158 = objc_allocWithZone((Class)DOCSourceObserver);
  NSString v159 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v160 = [v158 initWithUserAction:v156 hostIdentifier:v159];

  id v161 = (objc_class *)type metadata accessor for DOCHierarchyController(0);
  id v162 = objc_allocWithZone(v161);
  uint64_t v163 = self;
  id v164 = v150;
  id v165 = v160;
  id v166 = [v163 defaultManager];
  id v167 = [self sharedStore];
  id v168 = objc_allocWithZone(v161);
  unint64_t v169 = DOCHierarchyController.init(configuration:sourceObserver:minParentLocations:itemManager:userInterfaceStateStore:)(v164, v165, 3, v166, v167);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  uint64_t v170 = (objc_class *)type metadata accessor for DOCDocumentManager();
  uint64_t v171 = (char *)objc_allocWithZone(v170);
  *(void *)&v171[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v171[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = v164;
  *(void *)&v171[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = v165;
  *(void *)&v171[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = v169;
  v205.receiver = v171;
  v205.super_class = v170;
  id v172 = v164;
  id v173 = v165;
  int64_t v174 = v169;
  id v175 = [super init];
  uint64_t v176 = v203;
  uint64_t v177 = *(void **)&v203[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager];
  *(void *)&v203[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager] = v175;

  uint64_t v178 = *(void *)&v4[v106];
  if (v178)
  {
    uint64_t v179 = (void **)(v178 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
    swift_beginAccess();
    uint64_t v180 = *v179;
    *uint64_t v179 = v172;
    id v181 = v172;

    uint64_t v182 = *(void **)&v4[v106];
    if (v182)
    {
      id v207 = *(id *)&v4[v106];
      swift_getKeyPath();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      id v183 = v182;
      uint64_t v182 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
      swift_release();
      swift_release();
    }
  }
  else
  {
    uint64_t v182 = 0;
  }
  CGRect v184 = *(void **)&v176[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookPreviewItemObserver];
  *(void *)&v176[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookPreviewItemObserver] = v182;
}

void sub_10044EBBC()
{
  id v1 = (id)_DocumentManagerBundle();
  if (!v1)
  {
    __break(1u);
    return;
  }
  uint64_t v2 = v1;
  v15._uint64_t countAndFlagsBits = 0xD000000000000025;
  v15._object = (void *)0x80000001005F51D0;
  v3._object = (void *)0x80000001005F51B0;
  v3._uint64_t countAndFlagsBits = 0xD000000000000019;
  v4._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v4._object = (void *)0xEB00000000656C62;
  v5._uint64_t countAndFlagsBits = 0x6F4C206B63697551;
  v5._object = (void *)0xEA00000000006B6FLL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v15);

  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  if (v6)
  {
    id v7 = [v6 windowScene];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
      if (v9)
      {
        id v10 = [v9 currentPreviewItem];
        if (v10)
        {
          uint64_t v11 = v10;
          if ([v10 respondsToSelector:"previewItemTitle"])
          {
            id v12 = [v11 previewItemTitle];
            swift_unknownObjectRelease();
            if (!v12)
            {
              id v13 = 0;
              goto LABEL_14;
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_unknownObjectRelease();
          }
        }
      }
      id v13 = String._bridgeToObjectiveC()();
LABEL_14:
      swift_bridgeObjectRelease();
      [v8 setTitle:v13];

      return;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_10044EDC0()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v1 - 8);
  Swift::String v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)aBlock - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)aBlock - v8;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v15 = *(void **)&v0[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
  if (v15)
  {
    id v16 = v15;
    id v17 = [v16 currentPreviewItem];
    if (v17)
    {
      id v18 = [v17 previewItemURL];
      swift_unknownObjectRelease();
      if (v18)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v19(v6, 0, 1, v10);
      }
      else
      {
        uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v19(v6, 1, 1, v10);
      }
      sub_10032D1DC((uint64_t)v6, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v9, v10);
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v3, v14, v10);
        v19(v3, 0, 1, v10);
        sub_100450A80((uint64_t)v3, (uint64_t)v0);

        sub_1001939F8((uint64_t)v3);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        return;
      }
    }
    else
    {
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
      v19(v9, 1, 1, v10);
    }
    sub_1001939F8((uint64_t)v9);
    if ([v16 currentPreviewItem])
    {
      self;
      uint64_t v20 = (void *)swift_dynamicCastObjCClass();
      if (v20)
      {
        id v21 = [v20 fpItem];
        if (v21)
        {
          id v22 = v21;
          id v23 = [self defaultManager];
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v0;
          aBlock[4] = sub_100452A00;
          aBlock[5] = v24;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          void aBlock[2] = sub_1001B6B50;
          void aBlock[3] = &unk_1006AD400;
          unint64_t v25 = _Block_copy(aBlock);
          uint64_t v26 = v0;
          swift_release();
          [v23 fetchURLForItem:v22 completionHandler:v25];

          _Block_release(v25);
          swift_unknownObjectRelease();

          return;
        }
      }
      swift_unknownObjectRelease();
    }
    v19(v3, 1, 1, v10);
    sub_100450A80((uint64_t)v3, (uint64_t)v0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v11 + 56))(v3, 1, 1, v10, v12);
    sub_100450A80((uint64_t)v3, (uint64_t)v0);
  }
  sub_1001939F8((uint64_t)v3);
}

void sub_10044F24C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10044EBBC();
  }
  swift_beginAccess();
  uint64_t v2 = swift_unknownObjectWeakLoadStrong();
  if (v2)
  {
    Swift::String v3 = (void *)v2;
    sub_10044EDC0();
  }
}

uint64_t sub_10044F364(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  double v12 = (char *)v50 - v11;
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v68 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(a1 + 16);
  v50[1] = a1;
  if (v16)
  {
    id v58 = v9;
    uint64_t v59 = v5;
    id v18 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v17 = v7 + 16;
    uint64_t v66 = v18;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 32);
    uint64_t v63 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 40);
    id v60 = (void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v61 = v20;
    uint64_t v64 = (void (**)(char *, uint64_t))(v17 - 8);
    unint64_t v57 = (void (**)(char *, uint64_t))(v3 + 8);
    swift_bridgeObjectRetain();
    *(void *)&long long v21 = 136315650;
    long long v51 = v21;
    v50[3] = (char *)&type metadata for Any + 8;
    uint64_t v52 = v2;
    uint64_t v65 = v17;
    unint64_t v56 = v12;
    while (1)
    {
      v66(v15, v19, v6);
      id v23 = *v63;
      (*v63)(v15, 0, 1, v6);
      if ((*v62)(v15, 1, v6) == 1) {
        break;
      }
      (*v60)(v12, v15, v6);
      id v24 = [self defaultManager];
      URL._bridgeToObjectiveC()(v25);
      uint64_t v27 = v26;
      id v69 = 0;
      id v28 = [v24 itemForURL:v26 error:&v69];

      if (v28)
      {
        id v29 = v69;
        id v30 = v28;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        (*v64)(v12, v6);
      }
      else
      {
        id v31 = v69;
        uint64_t v32 = _convertNSErrorToError(_:)();

        swift_willThrow();
        static Logger.Application.getter();
        id v33 = v12;
        id v34 = v58;
        v66(v58, (uint64_t)v33, v6);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.error.getter();
        int v37 = v36;
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v55 = (void *)swift_slowAlloc();
          id v69 = v55;
          *(_DWORD *)uint64_t v38 = v51;
          *(void *)(v38 + 4) = sub_10009B0E4(0x28734C5255746573, 0xEE00293A736C7275, (uint64_t *)&v69);
          *(_WORD *)(v38 + 12) = 2080;
          sub_1000BAD74((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
          int v54 = v37;
          uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v38 + 14) = sub_10009B0E4(v39, v40, (uint64_t *)&v69);
          swift_bridgeObjectRelease();
          os_log_t v53 = v35;
          id v41 = *v64;
          (*v64)(v34, v6);
          *(_WORD *)(v38 + 22) = 2080;
          uint64_t v67 = v32;
          swift_errorRetain();
          sub_1000CBE70((uint64_t *)&unk_1007076D0);
          uint64_t v42 = String.init<A>(describing:)();
          *(void *)(v38 + 24) = sub_10009B0E4(v42, v43, (uint64_t *)&v69);
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          os_log_t v44 = v53;
          _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v54, "%s: couldn't fetch item for url. URL %s error %s", (uint8_t *)v38, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v2 = v52;
          swift_slowDealloc();

          swift_errorRelease();
          (*v57)(v59, v2);
          double v12 = v56;
          v41(v56, v6);
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          id v22 = *v64;
          (*v64)(v34, v6);
          swift_errorRelease();
          (*v57)(v59, v2);
          double v12 = v56;
          v22(v56, v6);
        }
      }
      v19 += v61;
      if (!--v16)
      {
        v23(v15, 1, 1, v6);
        break;
      }
    }
  }
  else
  {
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v45(v15, 1, 1, v6);
  }
  swift_bridgeObjectRelease();
  unint64_t v46 = v68;
  id v47 = *(void **)(v50[2] + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (v47)
  {
    swift_bridgeObjectRetain();
    id v48 = v47;
    DOCPreviewController.set(_:defaultIndex:)(v46, 0, 0, 0, 1);

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_10044FAAC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v5;
    uint64_t v12 = v11;
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v21 = sub_10009B0E4(0xD000000000000016, 0x80000001005E0550, &v22);
    uint64_t v19 = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v21 = (uint64_t)v8;
    id v13 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v17 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: scene: %@", (uint8_t *)v12, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager);
  *(void *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager) = 0;

  Swift::String v15 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  *(void *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window) = 0;

  uint64_t v16 = *(void **)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  *(void *)(v2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController) = 0;
}

id sub_100450034()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for QuickLookSceneDelegate();
  [super dealloc];
}

uint64_t sub_1004500E8()
{
  return type metadata accessor for QuickLookSceneDelegate();
}

uint64_t type metadata accessor for QuickLookSceneDelegate()
{
  uint64_t result = qword_100716468;
  if (!qword_100716468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10045013C()
{
  sub_100009E5C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004501E4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *(void **)(v5 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_documentManager);
  if (v6)
  {
    id v11 = v6;
    sub_100531FE4(a2, a3, a4, a5);
  }
}

uint64_t sub_100450288()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  Swift::String v15 = (char *)&v37 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v19 = v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
  swift_beginAccess();
  sub_1002827DC(v19, (uint64_t)v8);
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v20(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    uint64_t v26 = URL.absoluteString.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v18, v9);
    return v26;
  }
  sub_1001939F8((uint64_t)v8);
  uint64_t v21 = *(void **)(v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (!v21) {
    return 0;
  }
  id v22 = [v21 currentPreviewItem];
  if (!v22) {
    return 0;
  }
  id v23 = [v22 previewItemURL];
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v5, 1, 1, v9);
    goto LABEL_10;
  }
  id v24 = v23;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v5, v12, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
  if (v20(v5, 1, v9) == 1)
  {
LABEL_10:
    sub_1001939F8((uint64_t)v5);
    self;
    uint64_t v27 = swift_dynamicCastObjCClass();
    id v28 = v39;
    if (v27)
    {
      id v29 = (void *)v27;
      swift_unknownObjectRetain();
      id v30 = [v29 fpItem];
      if (v30)
      {
        id v31 = v30;
        id v32 = [v30 itemID];
        uint64_t v26 = FPItemID.identifierString.getter();
        swift_unknownObjectRelease_n();

        return v26;
      }
      swift_unknownObjectRelease();
    }
    static Logger.UI.getter();
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "No ID to return", v35, 2u);
      swift_slowDealloc();
      swift_unknownObjectRelease();
    }
    else
    {

      swift_unknownObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v38);
    return 0;
  }
  v25(v15, v5, v9);
  uint64_t v26 = URL.absoluteString.getter();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  return v26;
}

uint64_t sub_100450774(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v7 = a2;
  swift_errorRetain();
  id v8 = v7;
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v4;
    uint64_t v12 = v11;
    uint64_t v13 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v12 = 136315650;
    uint64_t v23 = sub_10009B0E4(0xD000000000000020, 0x80000001005F5180, &v24);
    uint64_t v21 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v23 = (uint64_t)v8;
    id v14 = v8;
    os_log_t v19 = v9;
    id v15 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v13 = v8;

    *(_WORD *)(v12 + 22) = 2112;
    swift_errorRetain();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v23 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v13[1] = v16;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v17 = v19;
    _os_log_impl((void *)&_mh_execute_header, v19, v10, "%s requestSceneSessionDestruction for scene: %@ failed with error: %@", (uint8_t *)v12, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v6, v21);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

void sub_100450A80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v51 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v50);
  id v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - v10;
  __chkstk_darwin(v12);
  id v14 = (char *)&v45 - v13;
  uint64_t v52 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  os_log_t v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  uint64_t v53 = a1;
  sub_1002827DC(a1, (uint64_t)v14);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  int v54 = v11;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v48 = v4;
    uint64_t v22 = v21;
    uint64_t v46 = swift_slowAlloc();
    v56[0] = v46;
    *(_DWORD *)uint64_t v22 = 136315394;
    uint64_t v47 = v5;
    uint64_t v55 = sub_10009B0E4(0xD000000000000019, 0x80000001005DFFC0, v56);
    uint64_t v49 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v22 + 12) = 2080;
    sub_1002827DC((uint64_t)v14, (uint64_t)v11);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v55 = sub_10009B0E4(v23, v24, v56);
    a2 = v49;
    uint64_t v5 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1001939F8((uint64_t)v14);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s identifier: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v48;
    swift_slowDealloc();
  }
  else
  {
    sub_1001939F8((uint64_t)v14);
  }

  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v52);
  sub_1002827DC(v53, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4) == 1)
  {
    sub_1001939F8((uint64_t)v8);
    id v25 = [self predicateWithValue:0];
    uint64_t v26 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v54, 1, 1, v4);
    uint64_t v27 = a2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
    swift_beginAccess();
    sub_10014B834(v26, v27);
    swift_endAccess();
  }
  else
  {
    id v28 = v51;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v51, v8, v4);
    uint64_t v29 = URL.absoluteString.getter();
    uint64_t v31 = v30;
    sub_10009E6C4(0, &qword_100716480);
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v32 = v5;
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1005A0030;
    *(void *)(v33 + 56) = &type metadata for String;
    *(void *)(v33 + 64) = sub_100073F48();
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v31;
    id v25 = (id)NSPredicate.init(format:_:)();
    uint64_t v34 = (uint64_t)v54;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v54, v28, v4);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v4);
    uint64_t v35 = a2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL;
    swift_beginAccess();
    sub_10014B834(v34, v35);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v4);
  }
  uint64_t v36 = OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window;
  uint64_t v37 = *(void **)(a2 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  if (v37)
  {
    id v38 = [v37 windowScene];
    if (v38)
    {
      uint64_t v39 = v38;
      id v40 = [v38 activationConditions];

      [v40 setCanActivateForTargetContentIdentifierPredicate:v25];
    }
    id v41 = *(void **)(a2 + v36);
    if (v41)
    {
      id v42 = [v41 windowScene];
      if (v42)
      {
        unint64_t v43 = v42;
        id v44 = [v42 activationConditions];

        [v44 setPrefersToActivateForTargetContentIdentifierPredicate:v25];
        id v25 = v44;
      }
    }
  }
}

uint64_t sub_1004510C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10 - 8);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  sub_1002827DC(v20, (uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  sub_10032D1DC((uint64_t)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14);
  aBlock[4] = sub_100452B30;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006AD450;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = a3;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000BAD74((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
}

uint64_t sub_100451424()
{
  return sub_100450288();
}

void sub_100451448()
{
}

void sub_10045146C()
{
}

void sub_100451490()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window);
  if (v1)
  {
    id v2 = [v1 windowScene];
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v2 session];
      id v5 = sub_100451550();
      [v4 setStateRestorationActivity:v5];
    }
  }
}

id sub_100451550()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  unint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController);
  if (!v10) {
    return 0;
  }
  id v11 = v10;
  id v12 = [v11 currentPreviewItem];
  if (!v12) {
    goto LABEL_17;
  }
  id v13 = v12;
  self;
  unint64_t v14 = (void *)swift_dynamicCastObjCClass();
  if (!v14)
  {
    swift_unknownObjectRelease();
LABEL_17:

    return 0;
  }
  unint64_t v71 = v3;
  id v15 = [v14 fpItem];
  if (!v15)
  {

    swift_unknownObjectRelease();
    return 0;
  }
  id v16 = v15;
  id v72 = v13;
  id v73 = v11;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DOCUserActivityIdentifier.quickLook(_:), v6);
  DOCUserActivityIdentifier.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v17 = objc_allocWithZone((Class)NSUserActivity);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v19 = [v17 initWithActivityType:v18];

  uint64_t v20 = self;
  id v74 = 0;
  id v21 = [v20 archivedDataWithRootObject:v16 requiringSecureCoding:1 error:&v74];
  id v22 = v74;
  uint64_t v23 = v16;
  if (v21)
  {
    unint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v26 = v25;

    if (v19)
    {
      sub_1000CBE70(&qword_100707EF0);
      uint64_t inited = swift_initStackObject();
      long long v69 = xmmword_10059B760;
      *(_OWORD *)(inited + 16) = xmmword_10059B760;
      id v28 = v19;
      unint64_t v71 = v26;
      id v29 = v28;
      *(void *)(inited + 32) = DOCUserActivityFPItemKey.getter();
      *(void *)(inited + 40) = v30;
      *(void *)(inited + 48) = 0xD000000000000019;
      uint64_t v70 = v23;
      *(void *)(inited + 56) = 0x80000001005E00D0;
      sub_10049D5B0(inited);
      swift_setDeallocating();
      swift_arrayDestroy();
      Class isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v29 setRequiredUserInfoKeys:isa];

      sub_1000CBE70(&qword_10070BD40);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = v69;
      id v33 = v29;
      id v74 = (id)DOCUserActivityFPItemKey.getter();
      unint64_t v75 = v34;
      AnyHashable.init<A>(_:)();
      *(void *)(v32 + 96) = &type metadata for Data;
      unint64_t v35 = v71;
      *(void *)(v32 + 72) = v24;
      *(void *)(v32 + 80) = v35;
      id v74 = (id)0xD000000000000019;
      unint64_t v75 = 0x80000001005E00D0;
      uint64_t v23 = v70;
      sub_100168CBC(v24, v71);
      AnyHashable.init<A>(_:)();
      char v36 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_isSharedScene);
      *(void *)(v32 + 168) = &type metadata for Bool;
      *(unsigned char *)(v32 + 144) = v36;
      sub_100494384(v32);
      Class v37 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v33 addUserInfoEntriesFromDictionary:v37];

      unint64_t v26 = v71;
    }
    unint64_t v71 = v24;
    id v38 = v73;
    id v39 = [v73 userActivity];
    if (v39
      && (id v40 = v39,
          id v41 = [v39 userInfo],
          v40,
          unint64_t v42 = v26,
          v41))
    {
      uint64_t v43 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v44 = swift_bridgeObjectRetain();
      uint64_t v45 = sub_10024E324(v44);
      swift_bridgeObjectRelease();
      if (v19)
      {
        *(void *)&long long v69 = v43;
        id v46 = v19;
        id v47 = [v46 requiredUserInfoKeys];
        if (v47)
        {
          uint64_t v48 = v47;
          uint64_t v49 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v76 = v49;
          uint64_t v50 = *(void *)(v45 + 16);
          if (v50)
          {
            uint64_t v70 = v23;
            long long v51 = (Swift::Int *)(v45 + 40);
            do
            {
              Swift::Int v52 = *(v51 - 1);
              Swift::Int v53 = *v51;
              swift_bridgeObjectRetain();
              sub_1000EDD5C((Swift::Int *)&v74, v52, v53);
              swift_bridgeObjectRelease();
              v51 += 2;
              --v50;
            }
            while (v50);
            swift_bridgeObjectRelease();
            uint64_t v49 = v76;
            uint64_t v23 = v70;
            unint64_t v42 = v26;
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v63 = v71;
          if (v49)
          {
            Class v62 = Set._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }
          else
          {
            Class v62 = 0;
          }
          [v46 setRequiredUserInfoKeys:v62];
        }
        else
        {
          swift_bridgeObjectRelease();
          [v46 setRequiredUserInfoKeys:0];
          Class v62 = (Class)v46;
          uint64_t v63 = v71;
        }

        sub_1000CBE70(&qword_10070BD40);
        uint64_t v64 = swift_initStackObject();
        *(_OWORD *)(v64 + 16) = xmmword_1005A0030;
        id v65 = v46;
        id v74 = (id)DOCUserActivityQuickLookStateRestorationUserInfoKey.getter();
        unint64_t v75 = v66;
        AnyHashable.init<A>(_:)();
        *(void *)(v64 + 96) = sub_1000CBE70(&qword_10070BD48);
        *(void *)(v64 + 72) = v69;
        sub_100494384(v64);
        Class v67 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v65 addUserInfoEntriesFromDictionary:v67];

        sub_100021020(v63, v42);
      }
      else
      {

        swift_bridgeObjectRelease();
        sub_100021020(v71, v26);
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      sub_100021020(v71, v26);
    }
  }
  else
  {
    uint64_t v55 = v22;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Logger.Application.getter();
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    int v58 = v57;
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v70 = (void *)swift_slowAlloc();
      id v74 = v70;
      *(_DWORD *)uint64_t v59 = 136315394;
      LODWORD(v69) = v58;
      uint64_t v76 = sub_10009B0E4(0xD00000000000001ELL, 0x80000001005DFF50, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v59 + 12) = 2080;
      v68[1] = v59 + 14;
      swift_getErrorValue();
      uint64_t v60 = Error.localizedDescription.getter();
      uint64_t v76 = sub_10009B0E4(v60, v61, (uint64_t *)&v74);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v69, "%s: Failed to encode FPItem in to data. Error: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_unknownObjectRelease();
      swift_errorRelease();
    }
    else
    {
      swift_unknownObjectRelease();

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v5, v2);
  }
  return v19;
}

uint64_t sub_100451F10(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v6 = a1;
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v3;
    uint64_t v10 = v9;
    id v11 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v18 = sub_10009B0E4(0xD000000000000012, 0x80000001005E0590, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2112;
    uint64_t v15 = v2;
    uint64_t v18 = (uint64_t)v6;
    id v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v11 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s: userActivity: %@", (uint8_t *)v10, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v15);
  }
  else
  {

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1004521A0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v15 = v13;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v14 = sub_10009B0E4(0xD000000000000019, 0x80000001005E0840, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    v11[1] = v6 + 14;
    uint64_t v12 = v0;
    sub_10009E6C4(0, &qword_10070BDA0);
    sub_1000B86A8(&qword_10070BDA8, &qword_10070BDA0);
    swift_bridgeObjectRetain();
    uint64_t v7 = Set.description.getter();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_10009B0E4(v7, v9, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: openURLContexts: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v12);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

void sub_100452450()
{
  uint64_t v1 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  unint64_t v8 = v0;
  unint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v31 = v4;
    uint64_t v32 = v3;
    uint64_t v11 = swift_slowAlloc();
    id v29 = (void *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v33 = v30;
    *(_DWORD *)uint64_t v11 = 136315650;
    id aBlock = sub_10009B0E4(0xD000000000000020, 0x80000001005F5180, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    id aBlock = sub_100450288();
    uint64_t v35 = v12;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v13 = String.init<A>(describing:)();
    id aBlock = sub_10009B0E4(v13, v14, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2112;
    uint64_t v15 = *(void **)&v8[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window];
    if (v15 && (id v16 = [v15 windowScene]) != 0)
    {
      id v17 = v16;
      id aBlock = (uint64_t)v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
    }
    else
    {
      id aBlock = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      id v17 = 0;
    }
    *id v29 = v17;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s sceneIdentifier: %s scene: %@ setting clearing currentDocumentIdentifier state", (uint8_t *)v11, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
    uint64_t v3 = v32;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v18 = *(void **)&v8[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_window];
  if (v18)
  {
    id v19 = [v18 windowScene];
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = [self sharedApplication];
      id v22 = [v20 session];
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      id v38 = sub_1004529F8;
      uint64_t v39 = v23;
      id aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      char v36 = sub_10044D134;
      Class v37 = &unk_1006AD3B0;
      unint64_t v24 = _Block_copy(&aBlock);
      id v25 = v20;
      swift_release();
      [v21 requestSceneSessionDestruction:v22 options:0 errorHandler:v24];
      _Block_release(v24);

      uint64_t v26 = type metadata accessor for URL();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v3, 1, 1, v26);
      uint64_t v27 = (uint64_t)&v8[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_currentQuickLookURL];
      swift_beginAccess();
      sub_10014B834((uint64_t)v3, v27);
      swift_endAccess();
      id v28 = *(void **)&v8[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController];
      *(void *)&v8[OBJC_IVAR____TtC5Files22QuickLookSceneDelegate_viewController] = 0;
    }
  }
}

uint64_t sub_1004529C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004529F8(uint64_t a1)
{
  return sub_100450774(a1, *(void **)(v1 + 16));
}

uint64_t sub_100452A00(uint64_t a1, uint64_t a2)
{
  return sub_1004510C4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100452A08()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

void sub_100452B30()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_100450A80(v3, v2);
}

uint64_t sub_100452BA0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100452BD8()
{
}

uint64_t DOCAppearStateTracker.performSkippedViewWillAppearWorkaroundIfNeeded(for:_:)(void *a1, uint64_t (*a2)(void))
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(v2 + 16))
  {
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = swift_bridgeObjectRelease();
      if (v10)
      {
LABEL_4:
        if (*(unsigned char *)(v2 + 17) == 1)
        {
          *(unsigned char *)(v2 + 17) = 0;
          uint64_t result = sub_1004535FC(a1);
          if (result)
          {
            static Logger.UI.getter();
            uint64_t v11 = a1;
            uint64_t v12 = Logger.logObject.getter();
            os_log_type_t v13 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v12, v13))
            {
              unint64_t v14 = (uint8_t *)swift_slowAlloc();
              id v19 = (void *)swift_slowAlloc();
              uint64_t v20 = v14;
              *(_DWORD *)unint64_t v14 = 138412290;
              v18[1] = v14 + 4;
              id v22 = v11;
              uint64_t v15 = v11;
              id v21 = a2;
              id v16 = v15;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *id v19 = v11;

              a2 = v21;
              _os_log_impl((void *)&_mh_execute_header, v12, v13, "WARNING: performing skipped .appearing work for %@", v20, 0xCu);
              sub_1000CBE70(&qword_100707CC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v12 = v11;
            }

            uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            return a2(v17);
          }
        }
      }
      return result;
  }
}

uint64_t DOCAppearState.description.getter(char a1)
{
  uint64_t result = 0x6165707061736964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E69726165707061;
      break;
    case 2:
      uint64_t result = 0x6465726165707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t DOCAppearState.rawValue.getter(char a1)
{
  uint64_t result = 0x6165707061736964;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E69726165707061;
      break;
    case 2:
      uint64_t result = 0x6465726165707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100453084(unsigned __int8 *a1, char *a2)
{
  return sub_1004C182C(*a1, *a2);
}

Swift::Int sub_100453090()
{
  return Hasher._finalize()();
}

uint64_t sub_10045317C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100453244()
{
  return Hasher._finalize()();
}

unint64_t sub_10045332C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s5Files14DOCAppearStateO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_10045335C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000646572;
  uint64_t v3 = 0x6165707061736964;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000067;
      uint64_t v3 = 0x6E69726165707061;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6465726165707061;
      *(void *)(a1 + 8) = 0xE800000000000000;
      break;
    case 3:
      strcpy((char *)a1, "disappearing");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1004533FC()
{
  uint64_t result = 0x6165707061736964;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E69726165707061;
      break;
    case 2:
      uint64_t result = 0x6465726165707061;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Void __swiftcall DOCViewController.viewWillAppear(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall DOCViewController.viewIsAppearing(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall DOCViewController.viewDidAppear(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall DOCViewController.viewWillDisappear(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall DOCViewController.viewDidDisappear(_:)(Swift::Bool a1)
{
}

id sub_1004534E0(char a1, unsigned __int8 a2, SEL *a3)
{
  swift_retain();
  sub_1000A98E0(v3, a2);
  swift_release();
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCViewController();
  return [super a1 & 1];
}

void sub_10045356C()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_100716488 = v2;
}

uint64_t sub_1004535FC(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  objc_super v8 = (char *)&v31 - v7;
  id v9 = [self mainBundle];
  id v10 = [v9 bundleIdentifier];

  if (v10)
  {
    unint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;
  }
  else
  {
    unint64_t v13 = 0x80000001005F5290;
    unint64_t v11 = 0xD000000000000011;
  }
  if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      static Logger.UI.getter();
      id v17 = a1;
      swift_bridgeObjectRetain();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = swift_slowAlloc();
        uint64_t v32 = (void *)swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v37 = (uint64_t)v17;
        uint64_t v38 = v34;
        *(_DWORD *)uint64_t v20 = 138412546;
        uint64_t v35 = v3;
        uint64_t v36 = v2;
        id v21 = v17;
        os_log_t v33 = v18;
        id v22 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v32 = v17;

        *(_WORD *)(v20 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_10009B0E4(v11, v13, &v38);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        os_log_t v23 = v33;
        _os_log_impl((void *)&_mh_execute_header, v33, v19, "WARNING: %@ will not perform skipped .appearing work (not allowed for %s)", (uint8_t *)v20, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1007051E8 != -1) {
    swift_once();
  }
  if (byte_100716488 != 1) {
    return 1;
  }
  static Logger.UI.getter();
  id v24 = a1;
  id v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    id v28 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v37 = (uint64_t)v24;
    uint64_t v38 = v34;
    *(_DWORD *)uint64_t v27 = 138412546;
    uint64_t v35 = v3;
    uint64_t v36 = v2;
    id v29 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v28 = v24;

    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v37 = sub_10009B0E4(0xD00000000000002CLL, 0x80000001005F52B0, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "WARNING: %@ will not perform skipped .appearing work (%s was true)", (uint8_t *)v27, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return 0;
}

unint64_t _s5Files14DOCAppearStateO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068B120, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

unint64_t sub_100453BF8()
{
  unint64_t result = qword_100716490;
  if (!qword_100716490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716490);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCAppearState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100453D18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCAppearState()
{
  return &type metadata for DOCAppearState;
}

uint64_t getEnumTagSinglePayload for DOCBrowserLayoutConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCBrowserLayoutConfiguration.SizeSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100453E60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserLayoutConfiguration.Trait()
{
  return &type metadata for DOCBrowserLayoutConfiguration.Trait;
}

uint64_t sub_100453E98()
{
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

uint64_t sub_100453EFC()
{
  sub_10009E9DC();
  dispatch thunk of UIMutableTraits.subscript.getter();
  return v1;
}

objc_class *sub_100453F5C(char a1)
{
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  int v3 = result;
  if (a1)
  {
    if (result)
    {
      unint64_t v4 = 0xD00000000000002CLL;
      unint64_t v13 = 0x80000001005F5370;
      unint64_t v5 = 0x80000001005F5350;
      unint64_t v6 = 0xD000000000000016;
      uint64_t v7 = 0x617A696C61636F4CLL;
      unint64_t v8 = 0xEB00000000656C62;
      v9.super.Class isa = v3;
      uint64_t v10 = 0x6C7561666544;
      goto LABEL_6;
    }
  }
  else
  {
    if (result)
    {
      unint64_t v4 = 0xD00000000000002CLL;
      unint64_t v13 = 0x80000001005F5320;
      unint64_t v5 = 0x80000001005F5300;
      unint64_t v6 = 0xD000000000000016;
      uint64_t v7 = 0x617A696C61636F4CLL;
      unint64_t v8 = 0xEB00000000656C62;
      v9.super.Class isa = v3;
      uint64_t v10 = 0x6361706D6F43;
LABEL_6:
      v11._uint64_t countAndFlagsBits = v10 & 0xFFFFFFFFFFFFLL | 0x74000000000000;
      v11._object = (void *)0xE700000000000000;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, *(Swift::String *)&v7, v9, v11, *(Swift::String *)&v4)._countAndFlagsBits;

      return (objc_class *)countAndFlagsBits;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10045409C()
{
  SignedNumeric.advanced(amount:direction:)();
  if (v2) {
    unsigned int v0 = 2;
  }
  else {
    unsigned int v0 = 1;
  }
  if (v2 == -1) {
    return 0;
  }
  else {
    return v0;
  }
}

Swift::Int sub_10045410C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 - 1);
  return Hasher._finalize()();
}

void sub_100454154()
{
  Hasher._combine(_:)(*v0 - 1);
}

Swift::Int sub_100454184()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 - 1);
  return Hasher._finalize()();
}

void *sub_1004541C8@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result) {
    char v2 = 2;
  }
  else {
    char v2 = 1;
  }
  if (*result == -1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_1004541E8(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

unint64_t sub_1004541FC()
{
  unint64_t result = qword_1007165C0;
  if (!qword_1007165C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007165C0);
  }
  return result;
}

Swift::Int sub_100454250()
{
  Swift::UInt v1 = *(void *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2 - 1);
  return Hasher._finalize()();
}

void sub_1004542B0()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 8);
  Hasher._combine(_:)(*(void *)v0);
  Hasher._combine(_:)(v1 - 1);
}

Swift::Int sub_1004542F0()
{
  Swift::UInt v1 = *(void *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  Hasher._combine(_:)(v2 - 1);
  return Hasher._finalize()();
}

uint64_t sub_100454350@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000CBE70(&qword_100708D08);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v27 - v7;
  uint64_t v9 = sub_1000CBE70(&qword_100716A58);
  __chkstk_darwin(v9 - 8);
  Swift::String v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = sub_100454734();
  uint64_t v16 = v15[2];
  if (v16)
  {
    id v28 = v14;
    id v29 = v11;
    uint64_t v30 = v3;
    uint64_t v31 = a1;
    uint64_t v17 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v27 = v15;
    uint64_t v18 = (uint64_t)v15 + ((v17 + 32) & ~v17);
    uint64_t v32 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1000CBC00(v18, (uint64_t)v8, &qword_100708D08);
      uint64_t v19 = *(int *)(v2 + 48);
      uint64_t v20 = type metadata accessor for UICellAccessory();
      uint64_t v21 = *(void *)(v20 - 8);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v5, v8, v20);
      *(void *)&v5[v19] = *(void *)&v8[v19];
      type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
      if (swift_dynamicCastClass()) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
      sub_1000CBBA4((uint64_t)v8, &qword_100708D08);
      v18 += v32;
      if (!--v16)
      {
        uint64_t v22 = 1;
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v14 = v28;
        Swift::String v11 = v29;
        goto LABEL_8;
      }
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    uint64_t v14 = v28;
    sub_1000CBE0C((uint64_t)v8, (uint64_t)v28, &qword_100708D08);
    uint64_t v22 = 0;
    uint64_t v3 = v30;
    a1 = v31;
    Swift::String v11 = v29;
  }
  else
  {
    uint64_t v22 = 1;
  }
LABEL_8:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v14, v22, 1, v2);
  swift_bridgeObjectRelease();
  sub_1000CBE0C((uint64_t)v14, (uint64_t)v11, &qword_100716A58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
  {
    sub_1000CBBA4((uint64_t)v11, &qword_100716A58);
    uint64_t v23 = type metadata accessor for UICellAccessory();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
  else
  {

    uint64_t v25 = type metadata accessor for UICellAccessory();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(a1, v11, v25);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
  }
}

void *sub_100454734()
{
  uint64_t v0 = type metadata accessor for UICellAccessory.AccessoryType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (void **)((char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for UICellAccessory();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100708D08);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = UICollectionViewListCell.accessories.getter();
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_10019112C(0, v12, 0);
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v38 = v14;
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 64);
    uint64_t v28 = v11;
    uint64_t v16 = v1;
    unint64_t v17 = v11 + v15;
    uint64_t v18 = *(void *)(v13 + 56);
    uint64_t v32 = (uint64_t (**)(void **, uint64_t))(v16 + 88);
    uint64_t v33 = v18;
    int v31 = enum case for UICellAccessory.AccessoryType.customView(_:);
    id v29 = (void (**)(void **, uint64_t))(v16 + 96);
    uint64_t v30 = (void (**)(void **, uint64_t))(v16 + 8);
    uint64_t v19 = (void (**)(char *, uint64_t))(v13 - 8);
    uint64_t v34 = v13;
    uint64_t v35 = v0;
    do
    {
      v38(v7, v17, v4);
      UICellAccessory.accessoryType.getter();
      int v20 = (*v32)(v3, v0);
      if (v20 == v31)
      {
        (*v29)(v3, v0);
        uint64_t v21 = *v3;
        sub_1000CBE70(&qword_100716A60);
        uint64_t v22 = swift_dynamicCastClass();
        if (!v22) {
      }
        }
      else
      {
        (*v30)(v3, v0);
        uint64_t v22 = 0;
      }
      uint64_t v23 = *(int *)(v37 + 48);
      v38(v10, (unint64_t)v7, v4);
      *(void *)&v10[v23] = v22;
      (*v19)(v7, v4);
      id v24 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10019112C(0, v24[2] + 1, 1);
        id v24 = v39;
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_10019112C(v25 > 1, v26 + 1, 1);
        id v24 = v39;
      }
      void v24[2] = v26 + 1;
      sub_1000CBE0C((uint64_t)v10, (uint64_t)v24+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v26, &qword_100708D08);
      v17 += v33;
      --v12;
      uint64_t v0 = v35;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v24;
}

uint64_t sub_100454B1C(unsigned char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = &v15[-v9];
  uint64_t v11 = &v2[qword_100737580];
  swift_beginAccess();
  int64_t v12 = *(void (**)(unsigned char *, char *, uint64_t))(v5 + 16);
  v12(v10, v11, v4);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 24))(v11, a1, v4);
  swift_endAccess();
  v12(v7, v11, v4);
  sub_100459B40(&qword_100716A68, (void (*)(uint64_t))&type metadata accessor for UICellAccessory.DisplayedState);
  LOBYTE(v11) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  if ((v11 & 1) == 0) {
    [v2 setNeedsUpdateConfiguration];
  }
  v13(a1, v4);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v10, v4);
}

uint64_t sub_100454D34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + qword_100737588);
  swift_beginAccess();
  uint64_t v5 = v4[3];
  if (v5)
  {
    uint64_t v6 = v4[4];
    uint64_t v7 = sub_1000A6B78(v4, v4[3]);
    uint64_t v8 = *(void *)(v5 - 8);
    double v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 8))(&v35, v5, v6);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v5);
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
  }
  sub_1000CBC00(a1, (uint64_t)v28, &qword_10071A590);
  uint64_t v12 = v29;
  if (v29)
  {
    uint64_t v13 = v30;
    sub_1000A6B78(v28, v29);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 8))(v34, v12, v13);
    sub_10009B1B8((uint64_t)v28);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v28, &qword_10071A590);
    memset(v34, 0, sizeof(v34));
  }
  sub_1000CBC00((uint64_t)&v35, (uint64_t)v28, &qword_100716A48);
  sub_1000CBC00((uint64_t)v34, (uint64_t)&v31, &qword_100716A48);
  if (!v29)
  {
    sub_1000CBBA4((uint64_t)v34, &qword_100716A48);
    sub_1000CBBA4((uint64_t)&v35, &qword_100716A48);
    if (!*((void *)&v32 + 1))
    {
      uint64_t v16 = &qword_100716A48;
      unint64_t v17 = (long long *)v28;
      return sub_1000CBBA4((uint64_t)v17, v16);
    }
    goto LABEL_14;
  }
  sub_1000CBC00((uint64_t)v28, (uint64_t)v27, &qword_100716A48);
  if (!*((void *)&v32 + 1))
  {
    sub_1000CBBA4((uint64_t)v34, &qword_100716A48);
    sub_1000CBBA4((uint64_t)&v35, &qword_100716A48);
    sub_10008E17C((uint64_t)v27);
LABEL_14:
    sub_1000CBBA4((uint64_t)v28, &qword_100716A50);
    goto LABEL_15;
  }
  v25[0] = v31;
  v25[1] = v32;
  uint64_t v26 = v33;
  char v14 = static AnyHashable.== infix(_:_:)();
  sub_10008E17C((uint64_t)v25);
  sub_1000CBBA4((uint64_t)v34, &qword_100716A48);
  sub_1000CBBA4((uint64_t)&v35, &qword_100716A48);
  sub_10008E17C((uint64_t)v27);
  uint64_t result = sub_1000CBBA4((uint64_t)v28, &qword_100716A48);
  if ((v14 & 1) == 0)
  {
LABEL_15:
    uint64_t v18 = qword_1007165D0;
    uint64_t v19 = *(void *)(v2 + qword_1007165D0);
    *(void *)(v2 + qword_1007165D0) = 0;
    sub_10045656C(v19);
    swift_release();
    sub_1000CBC00((uint64_t)v4, (uint64_t)&v35, &qword_10071A590);
    if (*((void *)&v36 + 1))
    {
      sub_1001146DC(&v35, (uint64_t)v28);
      sub_1000D4774((uint64_t)v28, (uint64_t)&v35);
      type metadata accessor for DOCGenericOperationProgress(0);
      swift_allocObject();
      uint64_t v20 = *((void *)&v36 + 1);
      uint64_t v21 = sub_1000A6B78(&v35, *((uint64_t *)&v36 + 1));
      v27[3] = v20;
      uint64_t v22 = sub_100052C70(v27);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v22, v21, v20);
      sub_1000D4774((uint64_t)&v35, (uint64_t)v34);
      uint64_t v23 = sub_1004A6564((uint64_t)v27, v34, (uint64_t)&off_10068B1A0);
      sub_10009B1B8((uint64_t)&v35);
      uint64_t v24 = *(void *)(v2 + v18);
      *(void *)(v2 + v18) = v23;
      swift_retain();
      sub_10045656C(v24);
      swift_release();
      swift_release();
      return sub_10009B1B8((uint64_t)v28);
    }
    uint64_t v16 = &qword_10071A590;
    unint64_t v17 = &v35;
    return sub_1000CBBA4((uint64_t)v17, v16);
  }
  return result;
}

uint64_t sub_100455164()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  [super prepareForReuse];
  v0[qword_100737590] = 0;
  [v0 setNeedsUpdateConfiguration];
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  uint64_t v1 = (uint64_t)&v0[qword_100737588];
  swift_beginAccess();
  sub_1000CBC00(v1, (uint64_t)v4, &qword_10071A590);
  swift_beginAccess();
  sub_10045A518((uint64_t)v5, v1);
  swift_endAccess();
  sub_100454D34((uint64_t)v4);
  sub_1000CBBA4((uint64_t)v5, &qword_10071A590);
  sub_1000CBBA4((uint64_t)v4, &qword_10071A590);
  uint64_t v2 = *(void *)&v0[qword_1007165D0];
  *(void *)&v0[qword_1007165D0] = 0;
  sub_10045656C(v2);
  return swift_release();
}

void sub_100455274(void *a1)
{
  id v1 = a1;
  sub_100455164();
}

uint64_t sub_1004552BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v84 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for UICellAccessory();
  uint64_t v92 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v91 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v89 = (uint64_t)v76 - v10;
  uint64_t v11 = sub_1000CBE70(&qword_10070A178);
  __chkstk_darwin(v11 - 8);
  uint64_t v88 = (uint64_t)v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v90 = (uint64_t)v76 - v14;
  uint64_t v93 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  __chkstk_darwin(v93);
  uint64_t v16 = (char *)v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v76 - v18;
  uint64_t v20 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v76 - v25;
  UICollectionViewCell.defaultBackgroundConfiguration()();
  uint64_t v27 = type metadata accessor for UICellConfigurationState();
  uint64_t v96 = v27;
  uint64_t v97 = (uint64_t (**)(uint64_t, void *))&protocol witness table for UICellConfigurationState;
  uint64_t v28 = sub_100052C70(v95);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v28, a1, v27);
  UIBackgroundConfiguration.updated(for:)();
  uint64_t v94 = *(void (**)(char *, uint64_t))(v21 + 8);
  v94(v23, v20);
  sub_10009B1B8((uint64_t)v95);
  uint64_t v29 = *(void *)&v2[qword_1007165D0];
  if (v29 && (v2[qword_100737590] & 1) == 0)
  {
    uint64_t v80 = v21 + 8;
    id v81 = v26;
    uint64_t v82 = v20;
    BOOL v83 = v6;
    swift_retain();
    id v79 = sub_10045A150();
    uint64_t v77 = v33;
    swift_retain();
    swift_bridgeObjectRetain();
    v76[1] = sub_10045A30C();
    swift_bridgeObjectRetain();
    swift_release();
    id v34 = [v2 traitCollection];
    [v34 displayScale];
    double v36 = v35;

    id v37 = sub_100459D14(64.0, 64.0, v36);
    uint64_t v38 = v29 + *(void *)(*(void *)v29 + 328);
    uint64_t v39 = v2;
    uint64_t v40 = *(void *)v38;
    id v41 = v19;
    char v42 = *(unsigned char *)(v38 + 8);
    char v43 = *(unsigned char *)(v29 + *(void *)(*(void *)v29 + 336));
    id v78 = v37;
    uint64_t v44 = v40;
    uint64_t v45 = v39;
    sub_100455E14(v37, v44, v42, v43, (uint64_t)v41, 0);
    sub_100459BEC((uint64_t)v41, (uint64_t)v16);
    sub_100459CB8((uint64_t)v41);
    id v79 = v41;
    sub_100459B88((uint64_t)v16, (uint64_t)v41);
    uint64_t v46 = (uint64_t)&v39[qword_100737588];
    swift_beginAccess();
    sub_1000CBC00(v46, (uint64_t)v95, &qword_10071A590);
    uint64_t v47 = v96;
    if (v96)
    {
      uint64_t v48 = v97;
      uint64_t v49 = sub_1000A6B78(v95, v96);
      uint64_t v50 = *(void *)(v47 - 8);
      double v51 = __chkstk_darwin(v49);
      Swift::Int v53 = (char *)v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v50 + 16))(v53, v51);
      sub_1000CBBA4((uint64_t)v95, &qword_10071A590);
      int v54 = (void *)v48[3](v47, v48);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v47);
      LODWORD(v53) = [v54 isCancellable];

      if (v53)
      {
        uint64_t v55 = v90;
        sub_100454350(v90);
        uint64_t v56 = v55;
        uint64_t v57 = v88;
        sub_1000CBC00(v56, v88, &qword_10070A178);
        uint64_t v58 = v92;
        uint64_t v59 = v87;
        int v60 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v57, 1, v87);
        unint64_t v61 = v83;
        uint64_t v62 = v82;
        if (v60 == 1)
        {
          uint64_t v77 = type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
          uint64_t v63 = &v45[qword_100737580];
          swift_beginAccess();
          uint64_t v64 = (uint64_t)v84;
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v84, v63, v86);
          sub_10009E6C4(0, (unint64_t *)&qword_100706740);
          swift_allocObject();
          swift_unknownObjectWeakInit();
          id v65 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          uint64_t v66 = v89;
          sub_100456250(v64, v65, v89);
          uint64_t v67 = v66;

          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v64, v86);
          uint64_t v58 = v92;
          sub_1000CBBA4(v88, &qword_10070A178);
        }
        else
        {
          uint64_t v67 = v89;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v89, v57, v59);
        }
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v91, v67, v59);
        unint64_t v68 = sub_10018F3D0(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
        unint64_t v70 = *(void *)(v68 + 16);
        unint64_t v69 = *(void *)(v68 + 24);
        if (v70 >= v69 >> 1) {
          unint64_t v68 = sub_10018F3D0(v69 > 1, v70 + 1, 1, v68);
        }
        *(void *)(v68 + 16) = v70 + 1;
        uint64_t v71 = v92;
        (*(void (**)(unint64_t, char *, uint64_t))(v92 + 32))(v68+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v70, v91, v59);
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v89, v59);
        sub_1000CBBA4(v90, &qword_10070A178);
        goto LABEL_14;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v95, &qword_10071A590);
    }
    unint64_t v61 = v83;
    uint64_t v62 = v82;
LABEL_14:
    id v72 = v81;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v61, v81, v62);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v61, 0, 1, v62);
    UICollectionViewCell.backgroundConfiguration.setter();
    uint64_t v96 = v93;
    uint64_t v97 = (uint64_t (**)(uint64_t, void *))sub_100459B40(&qword_100716A38, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
    id v73 = sub_100052C70(v95);
    uint64_t v74 = (uint64_t)v79;
    sub_100459BEC((uint64_t)v79, (uint64_t)v73);
    UICollectionViewCell.contentConfiguration.setter();
    UICollectionViewListCell.accessories.setter();

    swift_release();
    sub_100459CB8(v74);
    long long v31 = v72;
    uint64_t v32 = v62;
    return ((uint64_t (*)(char *, uint64_t))v94)(v31, v32);
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v6, v26, v20);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v6, 0, 1, v20);
  UICollectionViewCell.backgroundConfiguration.setter();
  uint64_t v96 = v93;
  uint64_t v97 = (uint64_t (**)(uint64_t, void *))sub_100459B40(&qword_100716A38, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
  uint64_t v30 = sub_100052C70(v95);
  sub_100455E14(0, 0, 1, 3, (uint64_t)v30, 1);
  UICollectionViewCell.contentConfiguration.setter();
  long long v31 = v26;
  uint64_t v32 = v20;
  return ((uint64_t (*)(char *, uint64_t))v94)(v31, v32);
}

void sub_100455E14(void *a1@<X4>, uint64_t a2@<X5>, char a3@<W6>, char a4@<W7>, uint64_t a5@<X8>, char a6)
{
  static UIListContentConfiguration.subtitleCell()();
  uint64_t v11 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t v12 = a5 + v11[5];
  *(void *)uint64_t v12 = a2;
  *(unsigned char *)(v12 + 8) = a3 & 1;
  *(unsigned char *)(a5 + v11[6]) = a4;
  *(unsigned char *)(a5 + v11[7]) = a6;
  if (String.count.getter() <= 0) {
    swift_bridgeObjectRelease();
  }
  UIListContentConfiguration.text.setter();
  if (String.count.getter() <= 0) {
    swift_bridgeObjectRelease();
  }
  UIListContentConfiguration.secondaryText.setter();
  if (!a1)
  {
    if (qword_1007051F0 != -1) {
      swift_once();
    }
    id v13 = (id)qword_100737578;
  }
  id v14 = a1;
  UIListContentConfiguration.image.setter();
  uint64_t v15 = self;
  id v16 = [v15 preferredFontForTextStyle:UIFontTextStyleBody];
  uint64_t v17 = (void (*)(unsigned char *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v17(v22, 0);
  id v18 = [v15 preferredFontForTextStyle:UIFontTextStyleFootnote];
  uint64_t v19 = (void (*)(unsigned char *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  v19(v22, 0);
  id v20 = [self secondaryLabelColor];
  uint64_t v21 = (void (*)(unsigned char *, void))UIListContentConfiguration.secondaryTextProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v21(v22, 0);
  UIListContentConfiguration.directionalLayoutMargins.setter();
  UIListContentConfiguration.imageToTextPadding.setter();
}

void sub_1004560A0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = Strong + qword_100737588;
    swift_beginAccess();
    sub_1000CBC00(v2, (uint64_t)v12, &qword_10071A590);

    uint64_t v3 = v13;
    if (v13)
    {
      uint64_t v4 = v14;
      uint64_t v5 = sub_1000A6B78(v12, v13);
      uint64_t v6 = *(void *)(v3 - 8);
      double v7 = __chkstk_darwin(v5);
      uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
      (*(void (**)(char *, double))(v6 + 16))(v9, v7);
      sub_1000CBBA4((uint64_t)v12, &qword_10071A590);
      uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v3);
      [v10 cancel];
    }
    else
    {
      sub_1000CBBA4((uint64_t)v12, &qword_10071A590);
    }
  }
}

uint64_t sub_100456250@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v25[1] = a3;
  uint64_t v5 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[0] = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v8 = *(void *)(v25[0] - 8);
  __chkstk_darwin(v25[0]);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v25 - v16;
  id v18 = (uint64_t (**)())((char *)v25 + *(int *)(sub_1000CBE70(&qword_10070E2E0) + 48) - v16);
  uint64_t v19 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, a1, v19);
  *id v18 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v18[1] = 0;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v17, enum case for UICellAccessory.Placement.trailing(_:), v11);
  objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0));
  id v20 = a2;
  uint64_t v21 = sub_100457A14(a2);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v17, v11);
  uint64_t v22 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v7, 1, 1, v22);
  uint64_t v23 = v21;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();

  (*(void (**)(char *, void))(v8 + 8))(v10, v25[0]);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
}

uint64_t sub_10045656C(uint64_t result)
{
  uint64_t v2 = v1;
  uint64_t v3 = qword_1007165D0;
  uint64_t v4 = *(void *)&v1[qword_1007165D0];
  if (!v4)
  {
    if (!result) {
      return result;
    }
LABEL_7:
    uint64_t v5 = (uint64_t *)(result + direct field offset for DOCOperationProgress.updateHandler);
    swift_beginAccess();
    uint64_t v6 = *v5;
    *uint64_t v5 = 0;
    v5[1] = 0;
    uint64_t result = sub_1000A7258(v6);
    uint64_t v4 = *(void *)&v2[v3];
    if (!v4) {
      return result;
    }
    goto LABEL_8;
  }
  if (result && v4 == result) {
    return result;
  }
  if (result) {
    goto LABEL_7;
  }
LABEL_8:
  swift_retain();
  _StringGuts.grow(_:)(26);
  v7._uint64_t countAndFlagsBits = 0x205D6C6C65635BLL;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = 60;
  v8._object = (void *)0xE100000000000000;
  String.append(_:)(v8);
  swift_getObjectType();
  v9._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 8250;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  _print_unlocked<A, B>(_:_:)();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0x73626F20776F6E20;
  v12._object = (void *)0xEF20676E69767265;
  String.append(_:)(v12);
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  int v14 = *(unsigned __int8 *)(v4 + 24);
  *(unsigned char *)(v4 + 24) = 1;
  if (v14 != 1)
  {
    swift_retain();
    sub_1002B59AC();
    swift_release();
  }
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (uint64_t *)(v4 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v17 = *v16;
  *uint64_t v16 = (uint64_t)sub_10045A148;
  v16[1] = v15;
  sub_1000A7258(v17);
  [v2 setNeedsUpdateConfiguration];
  return swift_release();
}

void *sub_100456810(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v6 = result;
    UICollectionViewCell.contentConfiguration.getter();
    sub_1000CBE70(&qword_1007160C0);
    swift_dynamicCast();

    Swift::String v7 = (uint64_t *)(a1 + *(void *)(*(void *)a1 + 328));
    uint64_t v8 = *v7;
    LOBYTE(v7) = *((unsigned char *)v7 + 8);
    Swift::String v9 = &v4[*(int *)(v2 + 20)];
    *(void *)Swift::String v9 = v8;
    v9[8] = (char)v7;
    sub_10045A150();
    swift_bridgeObjectRetain();
    UIListContentConfiguration.text.setter();
    sub_10045A30C();
    swift_bridgeObjectRetain();
    UIListContentConfiguration.secondaryText.setter();
    void v12[3] = v2;
    v12[4] = sub_100459B40(&qword_100716A38, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
    Swift::String v10 = sub_100052C70(v12);
    sub_100459BEC((uint64_t)v4, (uint64_t)v10);
    id v11 = v6;
    UICollectionViewCell.contentConfiguration.setter();

    return (void *)sub_100459CB8((uint64_t)v4);
  }
  return result;
}

id sub_1004569E8(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &a1[qword_100737580];
  uint64_t v6 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v7 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  uint64_t v8 = &a1[qword_100737588];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  a1[qword_100737590] = 0;
  *(void *)&a1[qword_1007165D0] = 0;
  v10.receiver = a1;
  v10.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  return [super initWithCoder:a3];
}

id sub_100456AC0(unsigned char *a1, double a2, double a3, double a4, double a5)
{
  objc_super v10 = &a1[qword_100737580];
  uint64_t v11 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v12 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  Swift::String v13 = &a1[qword_100737588];
  *(_OWORD *)Swift::String v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  a1[qword_100737590] = 0;
  *(void *)&a1[qword_1007165D0] = 0;
  v15.receiver = a1;
  v15.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell(0);
  return [super initWithFrame:a2, a3, a4, a5];
}

uint64_t sub_100456BC0()
{
  uint64_t v1 = v0 + qword_100737580;
  uint64_t v2 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_1000CBBA4(v0 + qword_100737588, &qword_10071A590);

  return swift_release();
}

id sub_100456C54()
{
  return sub_1004581C8(type metadata accessor for DOCProgressCollectionListCell);
}

uint64_t sub_100456C6C(uint64_t a1)
{
  uint64_t v2 = a1 + qword_100737580;
  uint64_t v3 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  sub_1000CBBA4(a1 + qword_100737588, &qword_10071A590);

  return swift_release();
}

uint64_t type metadata accessor for DOCProgressCollectionListCell(uint64_t a1)
{
  return sub_10009E984(a1, qword_100716600);
}

uint64_t sub_100456D24()
{
  uint64_t result = type metadata accessor for UICellAccessory.DisplayedState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100456DD0()
{
  return type metadata accessor for DOCProgressCollectionListCell(0);
}

id sub_100456DD8()
{
  id result = [objc_allocWithZone((Class)UIImage) init];
  qword_100737578 = (uint64_t)result;
  return result;
}

Swift::Int sub_100456E0C()
{
  Hasher.init(_seed:)();
  type metadata accessor for UIListContentConfiguration();
  sub_100459B40(&qword_100716A40, (void (*)(uint64_t))&type metadata accessor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)();
  unint64_t v1 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t v2 = v0 + v1[5];
  if (*(unsigned char *)(v2 + 8))
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v3 = *(void *)v2;
    Hasher._combine(_:)(1uLL);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v3;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    Hasher._combine(_:)(v4);
  }
  int v5 = *(unsigned __int8 *)(v0 + v1[6]);
  if (v5 == 2)
  {
    Swift::UInt v6 = 0;
  }
  else
  {
    if (v5 != 3)
    {
      Swift::UInt8 v7 = v5 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v7);
      goto LABEL_13;
    }
    Swift::UInt v6 = 1;
  }
  Hasher._combine(_:)(v6);
LABEL_13:
  Hasher._combine(_:)(*(unsigned char *)(v0 + v1[7]));
  return Hasher._finalize()();
}

char *sub_100456F4C(uint64_t a1)
{
  __chkstk_darwin(a1 - 8);
  Swift::UInt64 v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100459BEC(v1, (uint64_t)v3);
  id v4 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListCell.ContentView(0));
  int v5 = sub_10045775C((uint64_t)v3);
  sub_100459B40(&qword_100716A28, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentView);
  return v5;
}

uint64_t sub_10045700C@<X0>(uint64_t a1@<X8>)
{
  return sub_100459BEC(v1, a1);
}

void sub_10045701C(uint64_t a1, int *a2)
{
  type metadata accessor for UIListContentConfiguration();
  sub_100459B40(&qword_100716A40, (void (*)(uint64_t))&type metadata accessor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v4 = v2 + a2[5];
  if (*(unsigned char *)(v4 + 8))
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v5 = *(void *)v4;
    Hasher._combine(_:)(1uLL);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v5;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
  }
  int v7 = *(unsigned __int8 *)(v2 + a2[6]);
  if (v7 == 2)
  {
    Swift::UInt v8 = 0;
  }
  else
  {
    if (v7 != 3)
    {
      Swift::UInt8 v9 = v7 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v9);
      goto LABEL_13;
    }
    Swift::UInt v8 = 1;
  }
  Hasher._combine(_:)(v8);
LABEL_13:
  Hasher._combine(_:)(*(unsigned char *)(v2 + a2[7]));
}

Swift::Int sub_100457138(uint64_t a1, int *a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UIListContentConfiguration();
  sub_100459B40(&qword_100716A40, (void (*)(uint64_t))&type metadata accessor for UIListContentConfiguration);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v4 = v2 + a2[5];
  if (*(unsigned char *)(v4 + 8))
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v5 = *(void *)v4;
    Hasher._combine(_:)(1uLL);
    if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v5;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    Hasher._combine(_:)(v6);
  }
  int v7 = *(unsigned __int8 *)(v2 + a2[6]);
  if (v7 == 2)
  {
    Swift::UInt v8 = 0;
  }
  else
  {
    if (v7 != 3)
    {
      Swift::UInt8 v9 = v7 & 1;
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v9);
      goto LABEL_13;
    }
    Swift::UInt v8 = 1;
  }
  Hasher._combine(_:)(v8);
LABEL_13:
  Hasher._combine(_:)(*(unsigned char *)(v2 + a2[7]));
  return Hasher._finalize()();
}

void *sub_100457270(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100716A30);
  __chkstk_darwin(v4 - 8);
  Swift::UInt64 v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  Swift::UInt8 v9 = &v24[-v8 - 8];
  __chkstk_darwin(v10);
  uint64_t v12 = &v24[-v11 - 8];
  uint64_t v13 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v24[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000D4774(a1, (uint64_t)v24);
  sub_1000CBE70(&qword_100714448);
  int v17 = swift_dynamicCast();
  id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v17)
  {
    v18(v12, 0, 1, v13);
    sub_100459B88((uint64_t)v12, (uint64_t)v16);
    sub_100459BEC((uint64_t)v16, (uint64_t)v9);
    v18(v9, 0, 1, v13);
    uint64_t v19 = v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
    swift_beginAccess();
    sub_100459C50((uint64_t)v9, v19);
    swift_endAccess();
    sub_1000CBC00(v19, (uint64_t)v6, &qword_100716A30);
    id result = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      sub_100458BCC();
      uint64_t v21 = &v6[*(int *)(v13 + 20)];
      uint64_t v22 = 0;
      if ((v21[8] & 1) == 0) {
        uint64_t v22 = *(void *)v21;
      }
      *(void *)(*(void *)(v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView)
                + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted) = v22;
      sub_100317D50();
      if (v6[*(int *)(v13 + 28)] != 1) {
        goto LABEL_8;
      }
      id result = *(void **)(v2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack);
      if (result)
      {
        [result setAlpha:0.0];
LABEL_8:
        sub_10009B1B8(a1);
        sub_100459CB8((uint64_t)v16);
        return (void *)sub_100459CB8((uint64_t)v6);
      }
    }
    __break(1u);
  }
  else
  {
    v18(v12, 1, 1, v13);
    sub_10009B1B8(a1);
    return (void *)sub_1000CBBA4((uint64_t)v12, &qword_100716A30);
  }
  return result;
}

void (*sub_100457580(uint64_t **a1))(uint64_t *a1, char a2)
{
  Swift::UInt64 v3 = (uint64_t *)malloc(0x78uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100716A30);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[14] = (uint64_t)v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v6, (uint64_t)v5, &qword_100716A30);
  uint64_t v7 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  id result = (void (*)(uint64_t *, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v3[3] = v7;
    v3[4] = sub_100459B40(&qword_100716A38, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
    Swift::UInt8 v9 = sub_100052C70(v3);
    sub_100459B88((uint64_t)v5, (uint64_t)v9);
    return sub_1004576E0;
  }
  return result;
}

void sub_1004576E0(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  Swift::UInt64 v3 = *(void **)(*a1 + 112);
  if (a2)
  {
    sub_1000D4774(*a1, (uint64_t)v2 + 40);
    sub_100457270((uint64_t)v2 + 40);
    sub_10009B1B8((uint64_t)v2);
  }
  else
  {
    sub_100457270(*a1);
  }
  free(v3);

  free(v2);
}

char *sub_10045775C(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_1000CBE70(&qword_100716A30);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration];
  uint64_t v6 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v22(v5, 1, 1, v6);
  uint64_t v7 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel;
  id v8 = objc_allocWithZone((Class)UILabel);
  Swift::UInt8 v9 = v1;
  *(void *)&v1[v7] = [v8 init];
  uint64_t v10 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel;
  *(void *)&v9[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView;
  *(void *)&v9[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView;
  id v13 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
  sub_100317F9C(0, 0.5);
  *(void *)&v9[v12] = v14;
  uint64_t v15 = v23;
  *(void *)&v9[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint] = 0;
  *(void *)&v9[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack] = 0;
  sub_100459BEC(v15, (uint64_t)v4);
  v22((uint64_t)v4, 0, 1, v6);
  swift_beginAccess();
  sub_100459C50((uint64_t)v4, v5);
  swift_endAccess();

  uint64_t v16 = (objc_class *)type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
  v24.receiver = v9;
  v24.super_class = v16;
  uint64_t v17 = 0;
  id v18 = [super initWithFrame:0.0, 0.0, 100.0, 100.0];
  sub_100458264();
  sub_100458BCC();
  uint64_t v19 = v15 + *(int *)(v6 + 20);
  if ((*(unsigned char *)(v19 + 8) & 1) == 0) {
    uint64_t v17 = *(void *)v19;
  }
  *(void *)(*(void *)&v18[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView]
            + OBJC_IVAR____TtC5Files24DOCProgressIndicatorView_fractionCompleted) = v17;
  sub_100317D50();
  if (*(unsigned char *)(v15 + *(int *)(v6 + 28)) != 1) {
    goto LABEL_6;
  }
  id result = *(char **)&v18[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  if (result)
  {
    [result setAlpha:0.0];
LABEL_6:

    sub_100459CB8(v15);
    return v18;
  }
  __break(1u);
  return result;
}

char *sub_100457A14(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[qword_100716828] = 0;
  swift_unknownObjectWeakInit();
  sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
  UIButtonType v6 = qword_100704CE0;
  id v7 = a1;
  id v8 = v1;
  v35.value.super.super.Class isa = (Class)a1;
  v9.super.super.super.super.Class isa = UIButton.init(type:primaryAction:)(v6, v35).super.super.super.super.isa;
  *(UIButton *)&v8[qword_100716820] = v9;
  uint64_t v10 = v9.super.super.super.super.isa;
  static UIButton.Configuration.borderless()();
  uint64_t v11 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 0, 1, v11);
  UIButton.configuration.setter();

  uint64_t v12 = (objc_class *)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
  v34.receiver = v8;
  v34.super_class = v12;
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v14 = *(void **)&v13[qword_100716820];
  uint64_t v15 = v13;
  id v16 = v14;
  [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v15 addSubview:v16];
  uint64_t v17 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A1560;
  id v19 = [v15 topAnchor];
  id v20 = [v16 topAnchor];
  id v21 = [v19 constraintLessThanOrEqualToAnchor:v20];

  *(void *)(v18 + 32) = v21;
  id v22 = [v15 bottomAnchor];
  id v23 = [v16 bottomAnchor];
  id v24 = [v22 constraintGreaterThanOrEqualToAnchor:v23];

  *(void *)(v18 + 40) = v24;
  id v25 = [v15 leadingAnchor];
  id v26 = [v16 leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v18 + 48) = v27;
  id v28 = [v15 trailingAnchor];
  id v29 = [v16 trailingAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  *(void *)(v18 + 56) = v30;
  v33[1] = v18;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 activateConstraints:isa];

  return v15;
}

void sub_100457DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + qword_100716820);
  uint64_t v6 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  BOOL v8 = (*(unsigned char *)(a1 + *(int *)(v6 + 24)) & 1) == 0 || (*(unsigned char *)(a1 + *(int *)(v6 + 24)) & 0xFE) == 2;
  [v5 setEnabled:v8];
  UIButton v9 = *(void **)(a2 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView);
  id v10 = v9;

  sub_100457EE4(v9);
}

void sub_100457E88(void *a1)
{
  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
  id v1 = v2.receiver;
  [super layoutSubviews];
  sub_100457FF0();
}

void sub_100457EE4(void *a1)
{
  objc_super v2 = v1;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = v4;
    if (Strong)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
      id v6 = Strong;
      id v7 = v5;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_9;
      }
    }
    else
    {
    }
LABEL_8:
    UIButton v9 = *(void **)&v2[qword_100716828];
    *(void *)&v2[qword_100716828] = 0;

    [v2 setNeedsLayout];
    id v6 = Strong;
LABEL_9:

    goto LABEL_10;
  }
  if (Strong) {
    goto LABEL_8;
  }
LABEL_10:
}

void sub_100457FF0()
{
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = [v0 window];

    if (v1)
    {
      id v2 = [Strong window];

      if (v2)
      {
        uint64_t v3 = qword_100716828;
        uint64_t v4 = *(void **)&v0[qword_100716828];
        if (v4) {
          goto LABEL_6;
        }
        id v5 = [*(id *)&v0[qword_100716820] centerYAnchor];
        id v6 = [Strong centerYAnchor];
        id v7 = [v5 constraintEqualToAnchor:v6];

        char v8 = *(void **)&v0[v3];
        *(void *)&v0[v3] = v7;

        uint64_t v4 = *(void **)&v0[v3];
        if (v4)
        {
LABEL_6:
          id v9 = v4;
          [v9 setActive:1];
        }
      }
    }
  }
}

void sub_100458150()
{
}

uint64_t sub_100458160()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_1004581B0()
{
  return sub_1004581C8(type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView);
}

id sub_1004581C8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_100458208(uint64_t a1)
{
  return swift_unknownObjectWeakDestroy();
}

void sub_100458264()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView];
  [v2 setContentMode:1];
  objc_super v3 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel];
  uint64_t v4 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel];
  id v5 = v3;
  id v6 = v4;
  [v5 setAdjustsFontSizeToFitWidth:1];
  [v5 setAdjustsFontForContentSizeCategory:1];
  [v5 setMinimumScaleFactor:0.94];
  LODWORD(v7) = 1148846080;
  [v5 setContentCompressionResistancePriority:1 forAxis:v7];
  LODWORD(v8) = 1148846080;
  [v5 setContentHuggingPriority:1 forAxis:v8];

  id v9 = v6;
  [v9 setAdjustsFontSizeToFitWidth:1];
  [v9 setAdjustsFontForContentSizeCategory:1];
  [v9 setMinimumScaleFactor:0.94];
  LODWORD(v10) = 1148846080;
  [v9 setContentCompressionResistancePriority:1 forAxis:v10];
  LODWORD(v11) = 1148846080;
  [v9 setContentHuggingPriority:1 forAxis:v11];

  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1005A00D0;
  id v13 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressView];
  *(void *)(v12 + 32) = v5;
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = v9;
  specialized Array._endMutation()();
  id v14 = objc_allocWithZone((Class)UIStackView);
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  id v72 = v5;
  id v68 = v9;
  id v69 = v13;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v14 initWithArrangedSubviews:isa];

  [v16 setAxis:1];
  id v17 = [objc_allocWithZone((Class)UIView) init];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 addSubview:v2];
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1005A0C30;
  *(void *)(v18 + 32) = v17;
  *(void *)(v18 + 40) = v16;
  LODWORD(priority.rawValue) = (__C::UILayoutPriority)v18;
  specialized Array._endMutation()();
  id v19 = objc_allocWithZone((Class)UIStackView);
  id v20 = v17;
  id v71 = v16;
  Class v21 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [v19 initWithArrangedSubviews:v21];

  [v22 setAlignment:3];
  [v22 setAxis:0];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 addSubview:v22];
  id v70 = [v1 layoutMarginsGuide];
  id v23 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  *(void *)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack] = v22;
  id v67 = v22;

  id v24 = [v2 topAnchor];
  id v25 = [v72 topAnchor];
  id v26 = [v24 constraintEqualToAnchor:v25 constant:0.0];

  uint64_t v27 = OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint;
  id v28 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint] = v26;

  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1005AC5E0;
  id v30 = [v20 leadingAnchor];
  id v31 = [v2 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v20 trailingAnchor];
  id v34 = [v2 trailingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v29 + 40) = v35;
  id v36 = [v20 heightAnchor];
  id v37 = [v2 heightAnchor];
  id v38 = [v36 constraintGreaterThanOrEqualToAnchor:v37];

  *(void *)(v29 + 48) = v38;
  id v39 = [v2 heightAnchor];
  id v40 = [v39 constraintLessThanOrEqualToConstant:96.0];

  *(void *)(v29 + 56) = v40;
  id v41 = *(void **)&v1[v27];
  if (v41)
  {
    id v66 = self;
    *(void *)(v29 + 64) = v41;
    id v42 = v41;
    id v43 = [v2 bottomAnchor];
    id v44 = [v68 centerYAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44];

    type metadata accessor for UILayoutPriority(0);
    sub_100459B40((unint64_t *)&unk_10070C660, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    Class v46 = NSLayoutConstraint.with(priority:)(priority).super.isa;

    *(void *)(v29 + 72) = v46;
    id v47 = [v2 widthAnchor];
    id v48 = [v2 heightAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48];

    *(void *)(v29 + 80) = v49;
    id v50 = [v69 heightAnchor];
    id v51 = [v50 constraintEqualToConstant:20.0];

    *(void *)(v29 + 88) = v51;
    id v52 = [v67 leadingAnchor];
    id v53 = [v70 leadingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    *(void *)(v29 + 96) = v54;
    id v55 = [v67 trailingAnchor];
    id v56 = [v70 trailingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    *(void *)(v29 + 104) = v57;
    id v58 = [v67 topAnchor];
    id v59 = [v70 topAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    *(void *)(v29 + 112) = v60;
    id v61 = [v67 bottomAnchor];
    id v62 = [v70 bottomAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62];

    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    Class v64 = NSLayoutConstraint.with(priority:)(priority).super.isa;

    *(void *)(v29 + 120) = v64;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    Class v65 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v66 activateConstraints:v65];
  }
  else
  {
    __break(1u);
  }
}

void sub_100458BCC()
{
  id v1 = v0;
  uint64_t v36 = type metadata accessor for UIListContentConfiguration.TextProperties();
  uint64_t v2 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v35 - v6;
  double v8 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack];
  if (!v8)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v9 = v8;
  UIListContentConfiguration.imageToTextPadding.getter();
  [v9 setSpacing:];

  UIListContentConfiguration.directionalLayoutMargins.getter();
  [v0 setDirectionalLayoutMargins:];
  double v10 = *(void **)&v0[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel];
  UIListContentConfiguration.text.getter();
  uint64_t v12 = v11;
  UIListContentConfiguration.textProperties.getter();
  id v13 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  [v10 setFont:v13];

  id v14 = (void *)UIListContentConfiguration.TextProperties.color.getter();
  [v10 setTextColor:v14];

  if (v12) {
    NSString v15 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v15 = 0;
  }
  [v10 setText:v15];
  swift_bridgeObjectRelease();

  id v16 = *(void (**)(char *, uint64_t))(v2 + 8);
  v16(v7, v36);
  id v17 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_subtitleLabel];
  UIListContentConfiguration.secondaryText.getter();
  uint64_t v19 = v18;
  UIListContentConfiguration.secondaryTextProperties.getter();
  id v20 = (void *)UIListContentConfiguration.TextProperties.font.getter();
  [v17 setFont:v20];

  Class v21 = (void *)UIListContentConfiguration.TextProperties.color.getter();
  [v17 setTextColor:v21];

  if (v19) {
    NSString v22 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v22 = 0;
  }
  [v17 setText:v22];
  swift_bridgeObjectRelease();

  v16(v4, v36);
  id v23 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconView];
  id v24 = (void *)UIListContentConfiguration.image.getter();
  [v23 setImage:v24];

  id v25 = *(void **)&v1[OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint];
  if (!v25) {
    goto LABEL_13;
  }
  id v26 = v25;
  id v27 = [v10 font];
  if (!v27)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v28 = v27;
  [v27 ascender];
  double v30 = v29;

  id v31 = [v10 font];
  if (v31)
  {
    id v32 = v31;
    [v31 capHeight];
    double v34 = v33;

    [v26 setConstant:v30 - v34];
    return;
  }
LABEL_15:
  __break(1u);
}

void sub_100458F5C()
{
  sub_1000CBBA4(v0 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration, &qword_100716A30);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_iconViewToTitleTopConstraint));
  id v1 = *(void **)(v0 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_mainStack);
}

id sub_100458FF4()
{
  return sub_1004581C8(type metadata accessor for DOCProgressCollectionListCell.ContentView);
}

uint64_t sub_1004590B0()
{
  return type metadata accessor for DOCProgressCollectionListCell.ContentView(0);
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentView(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100716808);
}

void sub_1004590D8()
{
  sub_100459188();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100459188()
{
  if (!qword_100716818)
  {
    type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100716818);
    }
  }
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(uint64_t a1)
{
  return sub_10009E984(a1, qword_1007169E0);
}

uint64_t type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(uint64_t a1)
{
  return sub_10009E984(a1, qword_100716860);
}

uint64_t sub_100459220()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10045927C()
{
  return type metadata accessor for DOCProgressCollectionListCell.ContentView.CancelAccessoryView(0);
}

void *sub_100459284(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UIListContentConfiguration();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    double v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)double v10 = *(void *)v11;
    v10[8] = v11[8];
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_100459374(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1004593D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100459478(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  *(unsigned char *)(v8 + 8) = *((unsigned char *)v9 + 8);
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10045951C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1004595BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10045965C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100459670);
}

uint64_t sub_100459670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100459740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100459754);
}

uint64_t sub_100459754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t sub_100459810()
{
  uint64_t result = type metadata accessor for UIListContentConfiguration();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004598B8()
{
  return sub_100459B40(&qword_100716A20, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
}

id sub_100459900()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_titleLabel) leadingAnchor];

  return v1;
}

uint64_t sub_100459940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_1000CBE70(&qword_100716A30);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtCC5Files29DOCProgressCollectionListCell11ContentView_progressConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v6, (uint64_t)v5, &qword_100716A30);
  uint64_t v7 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a1[3] = v7;
    a1[4] = sub_100459B40(&qword_100716A38, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration);
    uint64_t v9 = sub_100052C70(a1);
    return sub_100459B88((uint64_t)v5, (uint64_t)v9);
  }
  return result;
}

void (*sub_100459A8C(uint64_t ***a1))(void *a1)
{
  uint64_t v2 = (uint64_t **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t *)sub_100457580(v2);
  return sub_10040493C;
}

uint64_t sub_100459AE8(uint64_t a1)
{
  uint64_t result = sub_100459B40(&qword_100716A28, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListCell.ContentView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100459B40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100459B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100459BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100459C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100716A30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100459CB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100459D14(double a1, double a2, double a3)
{
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v11);
  id v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (void *)(v3 + *(void *)(*(void *)v3 + 352));
  uint64_t v15 = v14[3];
  uint64_t v16 = v14[4];
  id v17 = sub_1000A6B78(v14, v15);
  uint64_t v18 = *(void *)(v15 - 8);
  double v19 = __chkstk_darwin(v17);
  Class v21 = (char *)&v28 - v20;
  (*(void (**)(char *, double))(v18 + 16))((char *)&v28 - v20, v19);
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v15, v16);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v15);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007123B0);
      uint64_t v23 = static UIImage.doc_executablesFrameworkImage(named:)();
      id result = (id)swift_bridgeObjectRelease();
      if (v23) {
        return (id)v23;
      }
      else {
        __break(1u);
      }
    }
    else
    {
      id v27 = sub_1000E8CAC(a1, a2, a3);
      return v27;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    Class isa = UTType._bridgeToObjectiveC()().super.isa;
    id v26 = sub_1000E8B54(isa, a1, a2, a3);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v26;
  }
  return result;
}

uint64_t sub_10045A02C(uint64_t a1, uint64_t a2)
{
  if ((static UIListContentConfiguration.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v4 = (int *)type metadata accessor for DOCProgressCollectionListCell.ContentConfiguration(0);
  uint64_t v5 = v4[5];
  uint64_t v6 = (double *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 8);
  uint64_t v8 = (double *)(a2 + v5);
  int v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if (v7)
  {
    if (!v9) {
      return v9 & 1;
    }
  }
  else
  {
    if (*v6 != *v8) {
      LOBYTE(v9) = 1;
    }
    if (v9) {
      goto LABEL_17;
    }
  }
  uint64_t v10 = v4[6];
  int v11 = *(unsigned __int8 *)(a1 + v10);
  int v12 = *(unsigned __int8 *)(a2 + v10);
  if (v11 == 2)
  {
    if (v12 != 2)
    {
LABEL_17:
      LOBYTE(v9) = 0;
      return v9 & 1;
    }
  }
  else if (v11 == 3)
  {
    if (v12 != 3) {
      goto LABEL_17;
    }
  }
  else if ((v12 & 0xFE) == 2 || ((v11 & 1) == 0) == (v12 & 1))
  {
    goto LABEL_17;
  }
  LOBYTE(v9) = *(unsigned char *)(a1 + v4[7]) ^ *(unsigned char *)(a2 + v4[7]) ^ 1;
  return v9 & 1;
}

uint64_t sub_10045A110()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10045A148(uint64_t a1)
{
  return sub_100456810(a1);
}

id sub_10045A150()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 368);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
LABEL_5:
    swift_endAccess();
    return (id)v2;
  }
  uint64_t v3 = (void *)(v0 + *(void *)(*(void *)v0 + 352));
  uint64_t v5 = v3[3];
  uint64_t v4 = v3[4];
  uint64_t v6 = sub_1000A6B78(v3, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - v9;
  (*(void (**)(char *, double))(v7 + 16))((char *)&v16 - v9, v8);
  int v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v5, v4);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  id result = [v11 localizedDescription];
  if (result)
  {
    id v13 = result;
    uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v15;
    *(unsigned char *)uint64_t v1 = 1;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

id sub_10045A30C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 376);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
LABEL_8:
    swift_endAccess();
    return (id)v2;
  }
  uint64_t v3 = (void *)(v0 + *(void *)(*(void *)v0 + 352));
  uint64_t v4 = v3[3];
  uint64_t v5 = v3[4];
  uint64_t v6 = sub_1000A6B78(v3, v4);
  uint64_t v7 = *(void *)(v4 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v18 - v9;
  (*(void (**)(char *, double))(v7 + 16))((char *)&v18 - v9, v8);
  int v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 24))(v4, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v4);
  [v11 fractionCompleted];
  if (v12 <= 0.0)
  {
    id v14 = [v11 fileOperationKind];
    uint64_t v15 = (uint64_t)sub_100529A38((uint64_t)v14);
    goto LABEL_7;
  }
  id result = [v11 localizedAdditionalDescription];
  if (result)
  {
    id v14 = result;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_7:
    uint64_t v2 = v15;
    uint64_t v17 = v16;

    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v17;
    *(unsigned char *)uint64_t v1 = 1;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_10045A510()
{
}

uint64_t sub_10045A518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071A590);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

id DOCFileOperation.progress.getter()
{
  return *(id *)(v0 + 40);
}

void DOCFileOperation.progress.setter(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
}

uint64_t (*DOCFileOperation.progress.modify())()
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.dateStarted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 24);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for DOCFileOperation()
{
  uint64_t result = qword_100716AD0;
  if (!qword_100716AD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DOCFileOperation.dateStarted.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 24);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*DOCFileOperation.dateStarted.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCFileOperation.iconType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 28);

  return sub_1003CC8C8(v3, a1);
}

uint64_t DOCFileOperation.iconType.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCFileOperation() + 28);

  return sub_1003CC970(a1, v3);
}

uint64_t (*DOCFileOperation.iconType.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

unint64_t DOCFileOperation.description.getter()
{
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v0._uint64_t countAndFlagsBits = AnyHashable.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._uint64_t countAndFlagsBits = 41;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0xD000000000000015;
}

uint64_t sub_10045A8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

Swift::Int sub_10045A928()
{
  return Hasher._finalize()();
}

unint64_t sub_10045A968()
{
  unint64_t result = qword_100716A70;
  if (!qword_100716A70)
  {
    type metadata accessor for DOCFileOperation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716A70);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DOCFileOperation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    double v8 = (void *)a2[5];
    v4[5] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    id v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    id v14 = v8;
    v13(v10, v11, v12);
    uint64_t v15 = *(int *)(a3 + 28);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v22 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v22;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v20 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t destroy for DOCFileOperation(uint64_t a1, uint64_t a2)
{
  sub_10009B1B8(a1);

  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = type metadata accessor for UTType();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t initializeWithCopy for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v7;
  v12(v9, v10, v11);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v20;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v19 = type metadata accessor for UTType();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v16, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for DOCFileOperation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1002B25D4(a1, a2);
  long long v6 = (void *)a2[5];
  long long v7 = (void *)a1[5];
  a1[5] = (uint64_t)v6;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    sub_1003CD0C0((uint64_t)a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v14, v15, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    uint64_t v16 = type metadata accessor for UTType();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t assignWithTake for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009B1B8(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;

  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (const void *)(a2 + v13);
    sub_1003CD0C0(a1 + v13);
    uint64_t v16 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      uint64_t v17 = type metadata accessor for UTType();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10045B260);
}

uint64_t sub_10045B260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for DOCFileOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10045B3A0);
}

uint64_t sub_10045B3A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_10045B4CC()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_10045B878()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers;
  swift_beginAccess();
  if (!(*(void *)v1 >> 62))
  {
    if (*(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_16;
  }
LABEL_3:
  unint64_t v2 = (void *)sub_1001FF708();
  if (v2) {
    goto LABEL_7;
  }
  if (*(void *)v1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((*(void *)v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  unint64_t result = v3 - 1;
  if (!__OFSUB__(v3, 1))
  {
    do
    {
      unint64_t v2 = (void *)sub_100050628(result);
LABEL_7:

      swift_endAccess();
      unint64_t v5 = sub_10008A504();
      uint64_t v1 = v5;
      if (v5 >> 62)
      {
LABEL_17:
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v10)
        {
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
      }
      else if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_18;
      }
      unint64_t v12 = v1;
      if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
        || v1 < 0
        || (v1 & 0x4000000000000000) != 0)
      {
        uint64_t v1 = sub_1000BC324(v1);
        unint64_t v12 = v1;
      }
      uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v6)
      {
        uint64_t v7 = v6 - 1;
        uint64_t v8 = *(void **)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
        *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
        specialized Array._endMutation()();

        return sub_1000C3A78(v12);
      }
LABEL_19:
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t result = v11 - 1;
    }
    while (!__OFSUB__(v11, 1));
  }
  __break(1u);
  return result;
}

uint64_t sub_10045BBA0()
{
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  uint64_t v12 = 0x72756F5361746144;
  unint64_t v13 = 0xEB00000000286563;
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID];
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_shortDebugID + 8];
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 539828265;
  v4._object = (void *)0xE400000000000000;
  String.append(_:)(v4);
  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for DOCBrowserNavigationDataSource();
  id v5 = [super description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  return v12;
}

id sub_10045BCD0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserNavigationDataSource();
  return [super dealloc];
}

void *sub_10045C0D8(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  unint64_t result = sub_1000C3DC0(a3);
  if (result)
  {
    Swift::String v9 = (unint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess();
    unint64_t v20 = *v9;
    swift_bridgeObjectRetain();
    sub_10022A784(a2, v10, v11);
    unint64_t v12 = swift_bridgeObjectRetain();
    sub_100169C90(v12);
    unint64_t v13 = 0;
    if (*(void *)(v5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2)
    {
      if (sub_100223B44())
      {
        unint64_t v19 = sub_10045C3D0();
        sub_10022A784(a2, v14, v15);
        unint64_t v16 = swift_bridgeObjectRetain();
        sub_100169C90(v16);
        unint64_t v13 = v19;
      }
      else
      {
        unint64_t v13 = 0;
      }
    }
    if (v20 >> 62)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      swift_bridgeObjectRetain();
      unint64_t v17 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      unint64_t v17 = v20;
    }
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (v13 >> 62)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        swift_bridgeObjectRetain();
        uint64_t v18 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v13 = v18;
        goto LABEL_12;
      }
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1000C2D8C(v17, v13, a4 & 1);
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_10045C3D0()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2)
  {
    uint64_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
    swift_beginAccess();
    uint64_t v7 = *v8;
    if (v7)
    {
      swift_bridgeObjectRetain();
      return v7;
    }
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v1) {
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
LABEL_5:
  unint64_t result = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_18:
    uint64_t v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v4 = (char *)*(id *)(v1 + 8 * result + 32);
LABEL_10:
    uint64_t v5 = v4;
    swift_bridgeObjectRelease();
    uint64_t v6 = &v5[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    uint64_t v7 = *(void *)v6;
    swift_bridgeObjectRetain();

    return v7;
  }
  __break(1u);
  return result;
}

void sub_10045C5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v102 = a1;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v101 = (char *)&v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v103 = (void *)a2;
    uint64_t v14 = (char *)[Strong provideContainerControllerAt:a2 from:a3 isUserInteraction:0 isBrowsingTrash:0];
    swift_unknownObjectRelease();
    uint64_t v15 = (void **)&v14[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
    swift_beginAccess();
    unint64_t v16 = *v15;
    unint64_t v17 = &off_100716000;
    if (*v15)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v18 = swift_dynamicCastClass();
      if (v18)
      {
        uint64_t v19 = v18;
        unint64_t v20 = v10;
        uint64_t v21 = v14;
        uint64_t v22 = v8;
        uint64_t v23 = v7;
        uint64_t v24 = *(void *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle);
        id v25 = (uint64_t *)(v18 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
        swift_beginAccess();
        uint64_t v26 = *v25;
        *id v25 = v24;
        unint64_t v17 = &off_100716000;
        BOOL v27 = v26 == v24;
        uint64_t v7 = v23;
        uint64_t v8 = v22;
        uint64_t v14 = v21;
        uint64_t v10 = v20;
        if (!v27)
        {
          uint64_t v28 = v19 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
          swift_beginAccess();
          uint64_t v29 = v101;
          sub_10013D2A0(v28, v101);
          uint64_t v30 = *(void *)(*(void *)v29 + 16);
          if (v30)
          {
            id v31 = (uint64_t *)(*(void *)v29 + 64);
            do
            {
              uint64_t v32 = *v31;
              v31 += 5;
              *(unsigned char *)(v32 + 24) = *(unsigned char *)(v32 + 25);
              --v30;
            }
            while (v30);
          }
          id v33 = v16;
          sub_10013D304(v29);
          sub_10001E85C();

          unint64_t v17 = &off_100716000;
        }
      }
    }
    unsigned int v34 = [self protectedAppsEnabled];
    uint64_t v35 = v103;
    if (v34)
    {
      uint64_t v36 = *v15;
      if (*v15)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        if (swift_dynamicCastClass())
        {
          id v37 = self;
          *(void *)&long long v101 = v36;
          id v38 = [v37 sharedManager];
          int v39 = [v38 nodeRequiresAuthentication_Sync:[v35 node]];

          swift_unknownObjectRelease();
          LODWORD(v100) = v39;
          sub_1000B0240(v39);
          static Logger.UI.getter();
          id v40 = v35;
          id v41 = v14;
          id v42 = v40;
          id v43 = v41;
          id v44 = Logger.logObject.getter();
          os_log_type_t v45 = static os_log_type_t.debug.getter();
          int v46 = v45;
          if (os_log_type_enabled(v44, v45))
          {
            uint64_t v47 = swift_slowAlloc();
            os_log_type_t v95 = (void *)swift_slowAlloc();
            uint64_t v98 = swift_slowAlloc();
            v106[0] = v98;
            *(_DWORD *)uint64_t v47 = 136315906;
            os_log_t v97 = v44;
            uint64_t v105 = sub_10009B0E4(0xD000000000000029, 0x80000001005F5BD0, v106);
            uint64_t v99 = v7;
            int v96 = v46;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v47 + 12) = 1024;
            LODWORD(v105) = v100;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v47 + 18) = 2112;
            uint64_t v105 = (uint64_t)v42;
            id v48 = v42;
            unint64_t v100 = v10;
            id v49 = v48;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            id v50 = v95;
            *os_log_type_t v95 = v42;

            *(_WORD *)(v47 + 28) = 2112;
            uint64_t v105 = (uint64_t)v43;
            id v51 = v43;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            v50[1] = v43;

            os_log_t v52 = v97;
            _os_log_impl((void *)&_mh_execute_header, v97, (os_log_type_t)v96, "[PROTECTED APPS] %s requiresAuthentication: %{BOOL}d location: %@ viewController: %@", (uint8_t *)v47, 0x26u);
            sub_1000CBE70(&qword_100707CC0);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v8 + 8))(v100, v99);
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
          }
          unint64_t v17 = &off_100716000;
        }
      }
    }
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v53 = swift_allocObject();
    long long v101 = xmmword_1005A04F0;
    *(_OWORD *)(v53 + 16) = xmmword_1005A04F0;
    *(void *)(v53 + 32) = v14;
    v106[0] = v53;
    specialized Array._endMutation()();
    uint64_t v54 = v106[0];
    id v55 = (uint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess();
    uint64_t v105 = v54;
    id v56 = v14;
    unint64_t v57 = swift_bridgeObjectRetain();
    sub_100169C90(v57);
    uint64_t *v55 = v105;
    swift_bridgeObjectRelease();
    if ((unint64_t)*v55 >> 62)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    }
    swift_bridgeObjectRelease();
    sub_1000C28C4(0);
    swift_bridgeObjectRelease();
    id v58 = (char *)v17[365];
    if (*(void *)&v58[v4] != 2)
    {
      id v78 = (unint64_t *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
      swift_beginAccess();
      if (*v78) {
        unint64_t v79 = *v78;
      }
      else {
        unint64_t v79 = (unint64_t)_swiftEmptyArrayStorage;
      }
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v101;
      *(void *)(inited + 32) = v56;
      unint64_t v104 = inited;
      specialized Array._endMutation()();
      unint64_t v81 = v104;
      if (v79 >> 62)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        uint64_t v89 = v56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v83 = _bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v82 = v56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        unint64_t v83 = v79;
      }
      swift_bridgeObjectRelease();
      unint64_t v104 = v81;
      sub_1000AEF88(v83);
      sub_1000C3A78(v104);
      goto LABEL_59;
    }
    id v59 = *(void **)(v102 + OBJC_IVAR____TtC5Files22DOCHierarchyController_effectiveRootLocationCandidate);
    if (v59)
    {
      id v60 = (unint64_t *)(v102 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
      swift_beginAccess();
      unint64_t v61 = *v60;
      swift_bridgeObjectRetain();
      id v62 = v59;
      sub_1001B5F94((uint64_t)v103, v61);
      uint64_t v64 = v63;
      char v66 = v65;
      swift_bridgeObjectRelease();
      if ((v66 & 1) == 0)
      {
        unint64_t v67 = *v60;
        swift_bridgeObjectRetain();
        sub_1001B5F94((uint64_t)v62, v67);
        uint64_t v69 = v68;
        char v71 = v70;
        swift_bridgeObjectRelease();
        if ((v71 & 1) == 0)
        {
          if (v64 < v69 && *(void *)&v58[v4] == 2)
          {
            unint64_t v4 = *(void *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
            if (!v4)
            {

              return;
            }
            uint64_t v72 = v4 & 0xFFFFFFFFFFFFFF8;
            if (!(v4 >> 62))
            {
              uint64_t v73 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (v73) {
                goto LABEL_27;
              }
              goto LABEL_70;
            }
LABEL_69:
            swift_bridgeObjectRetain();
            uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
            if (v73)
            {
LABEL_27:
              unint64_t v74 = v73 - 1;
              if (__OFSUB__(v73, 1))
              {
                __break(1u);
              }
              else if ((v4 & 0xC000000000000001) == 0)
              {
                if ((v74 & 0x8000000000000000) != 0)
                {
                  __break(1u);
                }
                else if (v74 < *(void *)(v72 + 16))
                {
                  unint64_t v75 = *(id *)(v4 + 8 * v74 + 32);
LABEL_32:
                  uint64_t v76 = v75;
                  swift_bridgeObjectRelease();
                  int v77 = v76[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
                  v76[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 1;
                  if (v77 != 1) {
                    sub_100416434();
                  }

LABEL_63:
                  return;
                }
                __break(1u);
                goto LABEL_75;
              }
              unint64_t v75 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              goto LABEL_32;
            }
LABEL_70:

            swift_bridgeObjectRelease();
            return;
          }

LABEL_59:
          unint64_t v90 = *v55;
          if ((unint64_t)*v55 >> 62)
          {
            sub_10009E6C4(0, (unint64_t *)&qword_100707710);
            swift_bridgeObjectRetain();
            unint64_t v91 = _bridgeCocoaArray<A>(_:)();
          }
          else
          {
            swift_bridgeObjectRetain_n();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            sub_10009E6C4(0, (unint64_t *)&qword_100707710);
            unint64_t v91 = v90;
          }
          swift_bridgeObjectRelease();
          sub_1000C2D8C(v91, 0, 0);
          swift_bridgeObjectRelease();
          uint64_t v92 = swift_unknownObjectWeakLoadStrong();
          if (v92)
          {
            uint64_t v93 = (void *)v92;
            sub_10008A504();
            sub_10009E6C4(0, (unint64_t *)&qword_100707710);
            Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
            [v93 dataSource:v4 didUpdate:isa animated:0];

            swift_unknownObjectRelease();
          }
          goto LABEL_63;
        }
      }
    }
    unint64_t v84 = *(void *)(v4 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
    if (!v84) {
      goto LABEL_59;
    }
    id v62 = (id)(v84 & 0xFFFFFFFFFFFFFF8);
    if (v84 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
      if (v72)
      {
LABEL_45:
        unint64_t v85 = v72 - 1;
        if (__OFSUB__(v72, 1))
        {
          __break(1u);
        }
        else if ((v84 & 0xC000000000000001) == 0)
        {
          if ((v85 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v85 < *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            uint64_t v86 = *(id *)(v84 + 8 * v85 + 32);
LABEL_50:
            uint64_t v87 = v86;
            swift_bridgeObjectRelease();
            char v88 = v87[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
            v87[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
            if (v88) {
              sub_100416434();
            }

            goto LABEL_59;
          }
          __break(1u);
          goto LABEL_69;
        }
        uint64_t v86 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v72 = *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v72) {
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
LABEL_75:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10045D334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v44 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  uint64_t v15 = *(void **)a1;
  if (*(void *)(*(void *)a1 + 16))
  {
    uint64_t v41 = v10;
    id v42 = v7;
    uint64_t v43 = v8;
    id aBlock = v15;
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_10070AEB0);
    sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
    uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v18 = v17;
    swift_bridgeObjectRelease();
    id aBlock = 0;
    unint64_t v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(65);
    v19._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    v19._object = (void *)0x80000001005F5A50;
    String.append(_:)(v19);
    uint64_t v52 = a2;
    v20._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    v21._object = (void *)0x80000001005F5A80;
    v21._uint64_t countAndFlagsBits = 0xD000000000000012;
    String.append(_:)(v21);
    v22._uint64_t countAndFlagsBits = v16;
    v22._object = v18;
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    v23._uint64_t countAndFlagsBits = 33;
    v23._object = (void *)0xE100000000000000;
    String.append(_:)(v23);
    uint64_t v24 = (uint64_t)aBlock;
    unint64_t v25 = v47;
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.fault.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v39 = v5;
    uint64_t v40 = v4;
    uint64_t v38 = v24;
    if (v28)
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      id aBlock = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v52 = sub_10009B0E4(v24, v25, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "%s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v41);
    int v30 = DOCIsInternalBuild();
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    if (v30)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      id v33 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v38;
      *(void *)(v34 + 24) = v25;
      id v50 = sub_1004617C4;
      uint64_t v51 = v34;
      id aBlock = _NSConcreteStackBlock;
      unint64_t v47 = 1107296256;
      id v48 = sub_1000666D8;
      id v49 = &unk_1006AD858;
      uint64_t v35 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v36 = v44;
      static DispatchQoS.unspecified.getter();
      id aBlock = _swiftEmptyArrayStorage;
      sub_100073F9C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v37 = v40;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v35);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v36, v31);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10045D93C(uint64_t result, uint64_t a2, uint64_t *a3, void *a4, uint64_t *a5)
{
  uint64_t v7 = (uint64_t)a4;
  uint64_t v9 = result;
  uint64_t v10 = *a3;
  unint64_t v11 = (unint64_t)*a3 >> 62;
  if (v11)
  {
    if (v10 < 0) {
      uint64_t v12 = *a3;
    }
    else {
      uint64_t v12 = *a3 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v5 >= v7) {
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= (uint64_t)a4) {
      goto LABEL_9;
    }
  }
  a5 += 2;
  swift_bridgeObjectRetain();
  v13._uint64_t countAndFlagsBits = 40;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  if (v11)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 41;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  uint64_t v5 = a2;
  swift_beginAccess();
  uint64_t v7 = *a5;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_30;
  }
  while (1)
  {
    unint64_t v18 = *(void *)(v7 + 16);
    unint64_t v17 = *(void *)(v7 + 24);
    if (v18 >= v17 >> 1)
    {
      uint64_t v7 = (uint64_t)sub_1000825D0((void *)(v17 > 1), v18 + 1, 1, (void *)v7);
      *a5 = v7;
    }
    *(void *)(v7 + 16) = v18 + 1;
    Swift::String v19 = (void *)(v7 + 16 * v18);
    v19[4] = v9;
    v19[5] = v5;
    uint64_t result = swift_endAccess();
    uint64_t v7 = v12;
LABEL_9:
    if (!v7) {
      return result;
    }
    if (v7 < 0)
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v11)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (__OFSUB__(0, v12)) {
      goto LABEL_27;
    }
    uint64_t v20 = -v7;
    if (v12 >= 0 && -v12 > v20)
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = v12 - v7;
    if (__OFADD__(v12, v20)) {
      goto LABEL_28;
    }
    if (v12 >= v21) {
      return sub_10051668C(v21, v12);
    }
LABEL_29:
    __break(1u);
LABEL_30:
    uint64_t v7 = (uint64_t)sub_1000825D0(0, *(void *)(v7 + 16) + 1, 1, (void *)v7);
    *a5 = v7;
  }
}

uint64_t sub_10045DC2C(char a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (a1)
  {
    uint64_t v4 = (void **)(a2 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
    swift_beginAccess();
    uint64_t v5 = *v4;
    if (v5)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v6 = swift_dynamicCastClass();
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection;
        if ((*(unsigned char *)(v6 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) & 1) == 0)
        {
          *(unsigned char *)(v6 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_performingBatchSelection) = 1;
          id v9 = v5;
          sub_10000F3B0(0, (uint64_t)_swiftEmptyArrayStorage);
          *(unsigned char *)(v7 + v8) = 0;
        }
      }
    }
  }
  return a3();
}

char *sub_10045DD00()
{
  id v1 = [v0 navigationBar];
  uint64_t v2 = (char *)[v1 topItem];

  if (v2)
  {
    id v3 = [v2 searchController];

    if (!v3) {
      return 0;
    }
    type metadata accessor for DOCSearchController();
    uint64_t v4 = (char *)swift_dynamicCastClass();
    uint64_t v2 = v4;
    if (!v4)
    {

      return v2;
    }
    if (![v4 isActive]) {
      goto LABEL_10;
    }
    if ([v2 isActive])
    {
      uint64_t v5 = *(char **)&v2[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
      id v6 = [v5 viewIfLoaded];
      if (v6)
      {
        uint64_t v7 = v6;
        unsigned __int8 v8 = [v6 isHidden];

        if ((v8 & 1) == 0)
        {
          id v9 = &v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
          swift_beginAccess();
          unint64_t v10 = *((void *)v9 + 1);
          if (v10 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            if (v12 <= 0) {
              return v2;
            }
            goto LABEL_10;
          }
          if (*(uint64_t *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) > 0)
          {
LABEL_10:

            return 0;
          }
        }
      }
    }
  }
  return v2;
}

void sub_10045DEA0(uint64_t (*a1)(void), uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v42 = [self sharedManager];
  Swift::String v14 = sub_10045DD00();
  if (!v14) {
    goto LABEL_21;
  }
  Swift::String v15 = v14;
  uint64_t v41 = a4;
  uint64_t v16 = (char *)[v4 view];
  if (!v16)
  {
    unint64_t v17 = v15;
LABEL_20:

LABEL_21:
    uint64_t v35 = a1();
    a3(v35);
    id v36 = v42;

    return;
  }
  unint64_t v17 = v16;
  unint64_t v18 = (char *)[v16 superview];
  if (!v18)
  {
LABEL_19:

    goto LABEL_20;
  }
  Swift::String v19 = v18;
  uint64_t v37 = v11;
  id v20 = [v17 snapshotViewAfterScreenUpdates:0];
  if (!v20)
  {

    Swift::String v15 = v17;
    unint64_t v17 = v19;
    goto LABEL_19;
  }
  id v21 = v20;
  uint64_t v40 = a3;
  __chkstk_darwin([v42 setExternalFirstResponderInFlight:1]);
  id v38 = v22;
  uint64_t v39 = v21;
  *(&v37 - 6) = (uint64_t)v22;
  *(&v37 - 5) = (uint64_t)v21;
  *(&v37 - 4) = (uint64_t)v17;
  *(&v37 - 3) = (uint64_t)v15;
  *(&v37 - 2) = (uint64_t)a1;
  *(&v37 - 1) = a2;
  DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)();
  id v23 = [self mainRunLoop];
  double Current = CFAbsoluteTimeGetCurrent();
  if (([v15 isActive] & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.2)
  {
    unint64_t v25 = (void (**)(char *, uint64_t))(v37 + 8);
    do
    {
      Date.init(timeIntervalSinceNow:)();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*v25)(v13, v10);
      [v23 runUntilDate:isa];
    }
    while (([v15 isActive] & 1) == 0 && CFAbsoluteTimeGetCurrent() - Current <= 0.2);
  }

  __chkstk_darwin(v27);
  *(&v37 - 4) = (uint64_t)v15;
  *(&v37 - 3) = (uint64_t)v5;
  BOOL v28 = v39;
  *(&v37 - 2) = (uint64_t)v17;
  *(&v37 - 1) = (uint64_t)v28;
  DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)();
  id v29 = [v5 navigationBar];
  id v30 = [v29 topItem];

  uint64_t v31 = (void (*)(id))v40;
  if (!v30) {
    goto LABEL_16;
  }
  id v32 = [v30 searchController];

  if (!v32) {
    goto LABEL_16;
  }
  type metadata accessor for DOCSearchController();
  id v33 = (void *)swift_dynamicCastClass();
  if (!v33)
  {
LABEL_15:

LABEL_16:
    v31([v42 setExternalFirstResponderInFlight:0]);

    return;
  }
  id v34 = [v33 searchBar];

  id v32 = [v34 searchField];
  if (v32)
  {
    [v32 becomeFirstResponder];
    goto LABEL_15;
  }
  __break(1u);
}

void sub_10045E330(unint64_t a1, void *a2)
{
  unint64_t v4 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v6 = -v5;
    if (!__OFSUB__(0, v5)) {
      goto LABEL_3;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_31;
  }
LABEL_3:
  if ((unint64_t)(v6 + 1) >= 2)
  {
    uint64_t v7 = v5 - 2;
    if (__OFSUB__(v5, 2))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v5 < v7)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (!v4)
    {
LABEL_6:
      uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_11;
    }
  }
  else
  {
    if (v5 < 0)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    uint64_t v7 = 0;
    if (!v4) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_11:
  if (v8 < v7)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v7 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v9 < v5) {
    goto LABEL_34;
  }
  if (v5 < 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if ((a1 & 0xC000000000000001) != 0 && v7 != v5)
  {
    if (v7 < (unint64_t)v5)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      Swift::Int v10 = v7;
      do
      {
        Swift::Int v11 = v10 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v10);
        Swift::Int v10 = v11;
      }
      while (v5 != v11);
      goto LABEL_23;
    }
LABEL_39:
    __break(1u);
    return;
  }
LABEL_23:
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v13 = v15;
    uint64_t v7 = v16;
    unint64_t v14 = v17;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v13 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v14 = (2 * v5) | 1;
  }
  id v18 = [a2 internalNavigationController];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_100169CCC(v12, v13, v7, v14);
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v18 setViewControllers:isa animated:0];
  swift_unknownObjectRelease();
}

void sub_10045E5E8(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    id v8 = [v5 shortDebugID];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = sub_100073F48();
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v11;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v12 = [v5 internalNavigationController];
    swift_beginAccess();
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setViewControllers:isa animated:a3 & 1];
  }
}

void sub_10045E7B4(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, SEL *a7)
{
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a5;
  id v14 = a1;
  sub_1004F3010(v11);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v14 *a7:v13 isa];

  swift_bridgeObjectRelease();
}

char *sub_10045E8A0(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCItemCollectionFPController();
  double v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v1 configuration:v5];
  id v9 = objc_allocWithZone((Class)type metadata accessor for DOCColumnViewController(0));
  uint64_t v10 = (char *)sub_1004170E4(v8);
  unint64_t v11 = (uint64_t *)&v10[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  uint64_t v12 = *v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100412F6C(a1);
  *unint64_t v11 = a1;
  swift_bridgeObjectRelease();
  unint64_t v13 = swift_bridgeObjectRetain();
  unsigned __int8 v14 = sub_10028ED04(v13, v12);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    v34[2] = v12;
    uint64_t v35 = v10;
    id v36 = v2;
    v34[1] = v11;
    uint64_t v15 = *v11;
    if ((unint64_t)*v11 >> 62) {
      goto LABEL_19;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    for (; v16; uint64_t v16 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v17 = 0;
      uint64_t v37 = v15 + 32;
      while (1)
      {
        id v20 = (v15 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : (char *)*(id *)(v37 + 8 * v17);
        Swift::String v19 = v20;
        if (__OFADD__(v17++, 1)) {
          break;
        }
        Swift::String v22 = (void **)&v20[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        id v23 = *v22;
        if (*v22)
        {
          type metadata accessor for DOCItemCollectionViewController(0);
          uint64_t v24 = swift_dynamicCastClass();
          if (v24)
          {
            uint64_t v25 = v24;
            uint64_t v26 = (uint64_t *)(v24 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
            swift_beginAccess();
            uint64_t v27 = *v26;
            *uint64_t v26 = 2;
            if (v27 != 2)
            {
              uint64_t v28 = v25 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
              swift_beginAccess();
              sub_10013D2A0(v28, (uint64_t)v7);
              uint64_t v29 = *(void *)(*(void *)v7 + 16);
              if (v29)
              {
                id v30 = (uint64_t *)(*(void *)v7 + 64);
                do
                {
                  uint64_t v31 = *v30;
                  v30 += 5;
                  *(unsigned char *)(v31 + 24) = *(unsigned char *)(v31 + 25);
                  --v29;
                }
                while (v29);
              }
              id v18 = v23;
              sub_10013D304((uint64_t)v7);
              sub_10001E85C();

              Swift::String v19 = v18;
            }
          }
        }

        if (v17 == v16) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain_n();
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    uint64_t v10 = v35;
    if ([v35 isViewLoaded])
    {
      uint64_t v32 = swift_bridgeObjectRetain();
      sub_100413804(v32);
      swift_bridgeObjectRelease();
    }
    else
    {
      v10[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
    }
    uint64_t v2 = v36;
  }
  swift_bridgeObjectRelease();
  [v2 configureColumnViewController:v10];
  return v10;
}

id sub_10045ECCC(uint64_t a1, id a2, void *a3, void *a4)
{
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary) = 0;
  id v6 = [a2 navigationBar];
  id v7 = [v6 topItem];

  if (v7)
  {
    id v8 = [v7 searchController];

    if (v8)
    {
      type metadata accessor for DOCSearchController();
      id v9 = (void *)swift_dynamicCastClass();
      if (v9) {
        [v9 setActive:1];
      }
    }
  }
  [a3 setAlpha:1.0];

  return [a4 removeFromSuperview];
}

uint64_t sub_10045EDC8()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  sub_10001AF94(v0, static UINavigationItem.associatedObjectStorageKey);
  sub_10009D098(v0, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
  sub_1000CBE70(&qword_100716B10);
  return static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)();
}

uint64_t UINavigationItem.associatedObjectStorageKey.unsafeMutableAddressor()
{
  if (qword_1007051F8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();

  return sub_10009D098(v0, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
}

uint64_t static UINavigationItem.associatedObjectStorageKey.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1007051F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static UINavigationItem.associatedObjectStorageKey.setter(uint64_t a1)
{
  if (qword_1007051F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static UINavigationItem.associatedObjectStorageKey.modify())()
{
  if (qword_1007051F8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  sub_10009D098(v0, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t UINavigationItem.associatedObjectStorage.getter()
{
  uint64_t v0 = type metadata accessor for DOCAssociatedObjectStorageKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_100716B10);
  if (qword_1007051F8 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_10009D098(v0, (uint64_t)static UINavigationItem.associatedObjectStorageKey);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v4, v0);
  uint64_t v5 = static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

uint64_t sub_10045F24C(uint64_t a1, void *a2)
{
  type metadata accessor for DOCSystemAlert();
  static DOCSystemAlert.shared.getter();
  _StringGuts.grow(_:)(162);
  v4._uint64_t countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5._object = (void *)0x80000001005F5AD0;
  v5._uint64_t countAndFlagsBits = 0x10000000000000A0;
  String.append(_:)(v5);
  dispatch thunk of DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10045F338(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    return String.subscript.getter();
  }
  return result;
}

uint64_t sub_10045F3D4(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v6 = -v5;
    if (!__OFSUB__(0, v5)) {
      goto LABEL_4;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v2 = a2;
  uint64_t v3 = result;
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_25;
  }
LABEL_4:
  uint64_t v7 = -v3;
  if (v6 > 0 || v6 <= v7)
  {
    uint64_t v8 = v5 - v3;
    if (__OFADD__(v5, v7))
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    if (v8 < 0)
    {
LABEL_29:
      __break(1u);
      return result;
    }
    if (!v4) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (!v4)
    {
LABEL_7:
      uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v10 < 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  if (v9 < v8)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v8)
  {
    type metadata accessor for DOCBrowserContainerController();
    Swift::Int v11 = 0;
    do
    {
      Swift::Int v12 = v11 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v11);
      Swift::Int v11 = v12;
    }
    while (v8 != v12);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v13;
}

void sub_10045F594(uint64_t a1, void *a2)
{
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a2;
  unint64_t v4 = (uint64_t *)(a1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain_n();
    _Block_copy(a2);
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    id aBlock = (void (**)(void))a2;
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    _Block_copy(a2);
    id aBlock = (void (**)(void))a2;
    if (v6)
    {
LABEL_3:
      unint64_t v7 = v5 & 0xC000000000000001;
      uint64_t v8 = 4;
      do
      {
        if (v7) {
          uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v9 = (char *)*(id *)(v5 + 8 * v8);
        }
        uint64_t v10 = v9;
        a2 = (void *)(v8 - 3);
        if (__OFADD__(v8 - 4, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        Swift::Int v11 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        Swift::Int v12 = *v11;
        if (v12
          && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v13 = swift_dynamicCastClass()) != 0))
        {
          uint64_t v14 = v13;
          uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
          if (!v15)
          {
            _Block_release(aBlock);
            __break(1u);
            return;
          }
          uint64_t v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
          if (*(unsigned char *)(v16 + 16))
          {
            id v17 = v12;
LABEL_17:
            uint64_t v24 = *(void **)(v14 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_containerNavigationItem);
            if (v24 && (id v25 = [v24 searchController]) != 0)
            {
              uint64_t v26 = v25;
              type metadata accessor for DOCSearchController();
              uint64_t v27 = swift_dynamicCastClass();

              if (v27)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
              }
              else
              {
              }
            }
            else
            {
            }
            goto LABEL_5;
          }
          uint64_t v18 = v5;
          uint64_t v19 = v6;
          unint64_t v20 = v7;
          id v21 = *(void **)v16;
          id v37 = v12;
          id v22 = v21;
          unsigned __int8 v23 = [v22 doc_displaysSearchResults];

          unint64_t v7 = v20;
          uint64_t v6 = v19;
          uint64_t v5 = v18;
          if ((v23 & 1) == 0) {
            goto LABEL_17;
          }
        }
        else
        {
        }
LABEL_5:
        ++v8;
      }
      while (a2 != (void *)v6);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_42;
  }
  uint64_t v28 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v28; uint64_t v28 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v29 = 4;
    while (1)
    {
      id v30 = ((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (id)_swiftEmptyArrayStorage[v29];
      uint64_t v31 = v30;
      uint64_t v32 = v29 - 3;
      if (__OFADD__(v29 - 4, 1)) {
        break;
      }
      if ([v30 isActive])
      {
        swift_bridgeObjectRelease_n();
        uint64_t v33 = swift_allocObject();
        *(void *)(v33 + 16) = sub_10023FB64;
        *(void *)(v33 + 24) = v36;
        id v34 = v31;
        swift_retain();
        sub_100518D94((uint64_t (*)(id))sub_100045B40, v33, 0);
        swift_release();

        goto LABEL_40;
      }

      ++v29;
      if (v32 == v28) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease_n();
  aBlock[2]();
LABEL_40:
  swift_release();
}

uint64_t sub_10045F9F8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (unint64_t *)(a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess();
  unint64_t v12 = *v5;
  swift_bridgeObjectRetain();
  id v6 = a3;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (*(void *)(a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2
    && (sub_100223B44() & 1) != 0)
  {
    unint64_t v11 = sub_10045C3D0();
    id v7 = v6;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    unint64_t v8 = v11;
  }
  else
  {
    unint64_t v8 = 0;
  }
  if (v12 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    swift_bridgeObjectRetain();
    uint64_t v9 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (v8 >> 62)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      swift_bridgeObjectRetain();
      _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      swift_bridgeObjectRelease();
    }
  }
  return v9;
}

unint64_t sub_10045FC6C(uint64_t a1, char a2, uint64_t a3, void (**a4)(void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  if (*(void *)(a3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2
    || (unint64_t v9 = *(void *)(a3 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers)) == 0)
  {
    _Block_copy(a4);
    goto LABEL_13;
  }
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    _Block_copy(a4);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_5;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  _Block_copy(a4);
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10) {
    goto LABEL_18;
  }
LABEL_5:
  unint64_t result = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_20:
    unint64_t v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (result >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (char *)*(id *)(v9 + 8 * result + 32);
LABEL_10:
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  uint64_t v14 = (unint64_t *)&v13[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  unint64_t v15 = *v14;
  swift_bridgeObjectRetain();
  sub_10045F3D4(a1, v15);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  unint64_t result = swift_bridgeObjectRelease();
  int64_t v22 = v21 >> 1;
  if (v19 == v21 >> 1)
  {

    swift_unknownObjectRelease();
LABEL_13:
    a4[2](a4);
    return swift_release();
  }
  if (v22 > v19)
  {
    id v23 = *(id *)(v17 + 8 * v22 - 8);
    swift_unknownObjectRelease();
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v23;
    v24[3] = sub_100110374;
    unsigned char v24[4] = v8;
    id v25 = v23;
    swift_retain();
    sub_100412088(v23, a2 & 1, (void (*)(void))sub_100461844, (uint64_t)v24);
    swift_release();

    return swift_release();
  }
LABEL_23:
  __break(1u);
  return result;
}

void sub_10045FEE4(int a1, uint64_t a2, unint64_t a3, char a4, uint64_t a5, void *aBlock)
{
  _Block_copy(aBlock);
  if (!sub_1000C3DC0(a3))
  {
    goto LABEL_7;
  }
  unint64_t v11 = (unint64_t *)(a5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
  swift_beginAccess();
  unint64_t v23 = *v11;
  swift_bridgeObjectRetain();
  sub_10022A784(a2, v12, v13);
  unint64_t v14 = swift_bridgeObjectRetain();
  sub_100169C90(v14);
  unint64_t v15 = 0;
  if (*(void *)(a5 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) == 2)
  {
    if (sub_100223B44())
    {
      unint64_t v22 = sub_10045C3D0();
      sub_10022A784(a2, v16, v17);
      unint64_t v18 = swift_bridgeObjectRetain();
      sub_100169C90(v18);
      unint64_t v15 = v22;
    }
    else
    {
      unint64_t v15 = 0;
    }
  }
  if (v23 >> 62)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  }
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_14;
  }
  if (!(v15 >> 62))
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  swift_bridgeObjectRetain();
  _bridgeCocoaArray<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_15:
  sub_1000C28C4(a4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(a3 >> 62))
  {
    uint64_t v19 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v19 < a2) {
      goto LABEL_17;
    }
LABEL_21:
    (*((void (**)(void *))aBlock + 2))(aBlock);
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v19 >= a2) {
    goto LABEL_21;
  }
LABEL_17:
  BOOL v20 = __OFSUB__(a2, v19);
  uint64_t v21 = a2 - v19;
  if (!v20)
  {
    _Block_copy(aBlock);
    sub_10045FC6C(v21, 1, a5, (void (**)(void))aBlock);
    _Block_release(aBlock);
LABEL_7:
    _Block_release(aBlock);
    return;
  }
  __break(1u);
}

void sub_10046020C(int a1, uint64_t *a2)
{
  LODWORD(v5) = a1;
  uint64_t v6 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(uint64_t *)((char *)a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v9) {
    return;
  }
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v9 >> 62) {
    goto LABEL_32;
  }
  unint64_t v11 = *(char **)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_33:
    swift_bridgeObjectRelease();
    return;
  }
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)(v10 + 16))
      {
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v12 = (char *)*(id *)(v9 + 32);
    }
    unint64_t v11 = v12;
    swift_bridgeObjectRelease();
    unint64_t v2 = (id **)&v11[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    unint64_t v9 = (unint64_t)*v2;
    if (!((unint64_t)*v2 >> 62))
    {
      uint64_t v13 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13) {
        goto LABEL_39;
      }
      goto LABEL_9;
    }
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (!v13)
    {
LABEL_39:

      swift_bridgeObjectRelease();
      return;
    }
LABEL_9:
    unint64_t v14 = v13 - 1;
    if (__OFSUB__(v13, 1))
    {
      __break(1u);
LABEL_41:
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_14;
    }
    if ((v9 & 0xC000000000000001) != 0) {
      goto LABEL_41;
    }
    if ((v14 & 0x8000000000000000) != 0) {
      break;
    }
    if (v14 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_43;
    }
    id v15 = *(id *)(v9 + 8 * v14 + 32);
LABEL_14:
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    uint64_t v17 = (unint64_t *)((char *)a2 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess();
    unint64_t v18 = *v17;
    uint64_t v19 = (uint64_t)*v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100412F6C(v18);
    *unint64_t v2 = (id *)v18;
    swift_bridgeObjectRelease();
    unint64_t v20 = swift_bridgeObjectRetain();
    unsigned __int8 v21 = sub_10028ED04(v20, v19);
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_49;
    }
    v38[2] = v19;
    uint64_t v39 = v16;
    uint64_t v3 = (uint64_t)*v2;
    unint64_t v22 = (unint64_t)*v2 >> 62;
    int v41 = (int)v5;
    uint64_t v40 = a2;
    id v42 = v11;
    v38[1] = v2;
    if (v22) {
      goto LABEL_44;
    }
    uint64_t v23 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v23) {
      goto LABEL_45;
    }
LABEL_17:
    unint64_t v2 = 0;
    unint64_t v10 = v3 & 0xC000000000000001;
    uint64_t v43 = v3 + 32;
    a2 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (1)
    {
      uint64_t v24 = v10
          ? (id *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (id *)*(id *)(v43 + 8 * (void)v2);
      unint64_t v9 = (unint64_t)v24;
      BOOL v25 = __OFADD__(v2, 1);
      unint64_t v2 = (id **)((char *)v2 + 1);
      if (v25) {
        break;
      }
      uint64_t v26 = (id *)((char *)v24 + OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController);
      swift_beginAccess();
      uint64_t v27 = *v26;
      if (v27)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v28 = swift_dynamicCastClass();
        if (v28)
        {
          uint64_t v29 = v28;
          uint64_t v5 = (uint64_t *)(v28 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess();
          uint64_t v30 = *v5;
          *uint64_t v5 = 2;
          if (v30 != 2)
          {
            uint64_t v31 = v29 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController;
            swift_beginAccess();
            sub_10013D2A0(v31, (uint64_t)v8);
            uint64_t v32 = *(void *)(*(void *)v8 + 16);
            if (v32)
            {
              uint64_t v33 = (uint64_t *)(*(void *)v8 + 64);
              do
              {
                uint64_t v34 = *v33;
                v33 += 5;
                *(unsigned char *)(v34 + 24) = *(unsigned char *)(v34 + 25);
                --v32;
              }
              while (v32);
            }
            uint64_t v5 = v27;
            sub_10013D304((uint64_t)v8);
            sub_10001E85C();

            unint64_t v9 = (unint64_t)v5;
          }
        }
      }

      if (v2 == (id **)v23) {
        goto LABEL_45;
      }
    }
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    unint64_t v11 = (char *)_CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  swift_bridgeObjectRetain_n();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  if (v23) {
    goto LABEL_17;
  }
LABEL_45:
  swift_bridgeObjectRelease_n();
  unint64_t v11 = v42;
  if ([v42 isViewLoaded])
  {
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_100413804(v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
  }
  LOBYTE(v5) = v41;
  uint64_t v16 = v39;
LABEL_49:
  swift_bridgeObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong configureColumnViewController:v11];
    swift_unknownObjectRelease();
  }
  id v37 = v16;
  sub_100412088(v16, v5 & 1, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0);
}

void sub_100460714()
{
  if (*(uint64_t *)((char *)v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle) != 2) {
    return;
  }
  uint64_t v1 = v0;
  unint64_t v2 = *(uint64_t *)((char *)v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers);
  if (!v2) {
    goto LABEL_15;
  }
  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_5;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  if (!v3) {
    goto LABEL_14;
  }
LABEL_5:
  unint64_t v4 = v3 - 1;
  if (__OFSUB__(v3, 1)) {
    goto LABEL_27;
  }
  if ((v2 & 0xC000000000000001) != 0) {
    goto LABEL_28;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v4 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
    return;
  }
  for (unint64_t i = *(id *)(v2 + 8 * v4 + 32); ; unint64_t i = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)())
  {
    uint64_t v6 = i;
    swift_bridgeObjectRelease();
    char v7 = v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator];
    v6[OBJC_IVAR____TtC5Files23DOCColumnViewController_showsHierarchyIndicator] = 0;
    if (v7) {
      sub_100416434();
    }

LABEL_15:
    uint64_t v8 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers);
    swift_beginAccess();
    uint64_t v9 = *v8;
    if ((unint64_t)*v8 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      if (!v10) {
        goto LABEL_24;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v10) {
        goto LABEL_24;
      }
    }
    if (v10 >= 1) {
      break;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    ;
  }
  for (uint64_t j = 0; j != v10; ++j)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      uint64_t v12 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v12 = *(id *)(v9 + 8 * j + 32);
    }
    v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_preventAppearanceForwarding] = 1;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  sub_10046020C(1, v1);
  swift_bridgeObjectRelease();
}

void sub_100460928()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self protectedAppsEnabled]) {
    return;
  }
  uint64_t v5 = (unint64_t *)(v0 + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (!v6) {
    return;
  }
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_5;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v8 = v7 - 1;
  if (__OFSUB__(v7, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v6 & 0xC000000000000001) != 0)
  {
LABEL_28:
    uint64_t v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_10;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v8 >= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return;
  }
  uint64_t v9 = (char *)*(id *)(v6 + 8 * v8 + 32);
LABEL_10:
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v11 = (void **)&v10[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  uint64_t v12 = *v11;
  if (!*v11 || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v13 = swift_dynamicCastClass()) == 0))
  {

    return;
  }
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v15) {
    goto LABEL_31;
  }
  uint64_t v16 = v15 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v16 + 16))
  {
    uint64_t v17 = *(void *)(*(void *)v16 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    id v18 = v12;
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v17 = *(void *)(v16 + 8);
    id v19 = v12;
    swift_unknownObjectRetain();
    if (!v17)
    {

      return;
    }
  }
  id v20 = [self sharedManager];
  int v21 = [v20 nodeRequiresAuthentication_Sync:v17];

  sub_1000B0240(v21);
  static Logger.UI.getter();
  id v22 = v12;
  swift_unknownObjectRetain_n();
  id v41 = v22;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.debug.getter();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    int v37 = v25;
    uint64_t v27 = v26;
    uint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v43 = v38;
    *(_DWORD *)uint64_t v27 = 136315906;
    uint64_t v40 = v10;
    uint64_t v42 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005F5B80, &v43);
    os_log_t v35 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 12) = 1024;
    LODWORD(v42) = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v27 + 18) = 2080;
    uint64_t v42 = v17;
    swift_unknownObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v42 = sub_10009B0E4(v28, v29, &v43);
    int v39 = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 28) = 2112;
    uint64_t v42 = v14;
    id v30 = v41;
    int v21 = v39;
    uint64_t v10 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v36 = v14;

    os_log_t v31 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v37, "[PROTECTED APPS] %s requiresAuthentication: %{BOOL}d location: %s viewController: %@", (uint8_t *)v27, 0x26u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v32 = v41;
    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v21)
  {
    uint64_t v33 = swift_unknownObjectRetain();
    sub_1000C45B0(v33, v10);

    swift_unknownObjectRelease_n();
  }
  else
  {

    swift_unknownObjectRelease();
  }
}

uint64_t sub_100460E8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DOCItemCollectionFPController();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (uint64_t *)swift_allocObject();
  uint64_t v8[2] = (uint64_t)_swiftEmptyArrayStorage;
  unint64_t v9 = (unint64_t)(v8 + 2);
  if (*(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyle] != 2) {
    goto LABEL_43;
  }
  unint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_columnViewControllers];
  if (!v10) {
    goto LABEL_43;
  }
  uint64_t v11 = v10 & 0xFFFFFFFFFFFFFF8;
  if (v10 >> 62) {
    goto LABEL_30;
  }
  uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v12) {
    goto LABEL_42;
  }
  while (1)
  {
    unint64_t v13 = v12 - 1;
    if (__OFSUB__(v12, 1))
    {
      __break(1u);
LABEL_33:
      uint64_t v14 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_10;
    }
    uint64_t v52 = v7;
    id v49 = v2;
    id v50 = v8;
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_33;
    }
    if ((v13 & 0x8000000000000000) != 0) {
      break;
    }
    if (v13 >= *(void *)(v11 + 16)) {
      goto LABEL_35;
    }
    uint64_t v14 = (char *)*(id *)(v10 + 8 * v13 + 32);
LABEL_10:
    uint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t v15 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
    swift_beginAccess();
    v53[0] = *v15;
    swift_bridgeObjectRetain();
    sub_10045D93C(0x736E6D756C6F63, 0xE700000000000000, (uint64_t *)v53, a1, v50);
    unint64_t v16 = v53[0];
    uint64_t v17 = *v15;
    swift_bridgeObjectRetain();
    sub_100412F6C(v16);
    *uint64_t v15 = v16;
    swift_bridgeObjectRelease();
    unint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v11 = (uint64_t)sub_10028ED04(v18, v17);
    swift_bridgeObjectRelease();
    if (v11)
    {

      goto LABEL_41;
    }
    v44[1] = v17;
    uint64_t v45 = v2;
    unint64_t v46 = v9;
    int v47 = a2;
    id v48 = a1;
    a2 = *v15;
    a1 = v15;
    if ((unint64_t)*v15 >> 62) {
      goto LABEL_36;
    }
    uint64_t v7 = *(char **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v7) {
      goto LABEL_37;
    }
LABEL_14:
    id v19 = 0;
    unint64_t v9 = a2 & 0xC000000000000001;
    uint64_t v51 = a2 + 32;
    unint64_t v8 = &OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController;
    while (1)
    {
      int v21 = v9
          ? (id *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (id *)*(id *)(v51 + 8 * (void)v19);
      unint64_t v10 = (unint64_t)v21;
      if (__OFADD__(v19++, 1)) {
        break;
      }
      uint64_t v23 = (id *)((char *)v21 + *v8);
      swift_beginAccess();
      uint64_t v2 = (char *)*v23;
      if (*v23)
      {
        type metadata accessor for DOCItemCollectionViewController(0);
        uint64_t v24 = swift_dynamicCastClass();
        if (v24)
        {
          int v25 = (char *)v24;
          uint64_t v11 = (uint64_t)v8;
          uint64_t v26 = a2;
          uint64_t v27 = a1;
          uint64_t v28 = (uint64_t *)(v24 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_displayMode);
          swift_beginAccess();
          uint64_t v29 = *v28;
          *uint64_t v28 = 2;
          if (v29 != 2)
          {
            uint64_t v30 = (uint64_t)&v25[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemsController];
            swift_beginAccess();
            uint64_t v31 = v30;
            uint64_t v32 = (uint64_t)v52;
            sub_10013D2A0(v31, (uint64_t)v52);
            uint64_t v33 = *(void *)(*(void *)v32 + 16);
            if (v33)
            {
              uint64_t v34 = (uint64_t *)(*(void *)v32 + 64);
              do
              {
                uint64_t v35 = *v34;
                v34 += 5;
                *(unsigned char *)(v35 + 24) = *(unsigned char *)(v35 + 25);
                --v33;
              }
              while (v33);
            }
            id v20 = v2;
            sub_10013D304((uint64_t)v52);
            uint64_t v2 = v25;
            sub_10001E85C();

            unint64_t v10 = (unint64_t)v20;
          }
          a1 = v27;
          a2 = v26;
          unint64_t v8 = (uint64_t *)v11;
        }
      }

      if (v19 == v7) {
        goto LABEL_37;
      }
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (!v12) {
      goto LABEL_42;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  swift_bridgeObjectRetain_n();
  uint64_t v7 = (char *)_CocoaArrayWrapper.endIndex.getter();
  if (v7) {
    goto LABEL_14;
  }
LABEL_37:
  swift_bridgeObjectRelease_n();
  uint64_t v36 = v45;
  if ([v45 isViewLoaded])
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_100413804(v37);

    swift_bridgeObjectRelease();
  }
  else
  {
    v36[OBJC_IVAR____TtC5Files23DOCColumnViewController_needsUpdateDiffableSnapshot] = 1;
  }
  a1 = v48;
  LOBYTE(a2) = v47;
  unint64_t v9 = v46;
LABEL_41:
  uint64_t v2 = v49;
  unint64_t v8 = v50;
LABEL_42:
  swift_bridgeObjectRelease();
LABEL_43:
  uint64_t v38 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_currentContainers];
  swift_beginAccess();
  sub_10045D93C(0xD000000000000011, 0x80000001005F5680, v38, a1, v8);
  swift_endAccess();
  int v39 = (uint64_t *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_containerControllers];
  swift_beginAccess();
  if (*v39) {
    sub_10045D93C(0xD000000000000014, 0x80000001005F2EC0, v39, a1, v8);
  }
  swift_endAccess();
  sub_100460928();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v41 = (void *)Strong;
    sub_10008A504();
    sub_10009E6C4(0, (unint64_t *)&qword_100707710);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v41 dataSource:v2 didUpdate:isa animated:a2 & 1];

    swift_unknownObjectRelease();
  }
  sub_10045D334(v9, (uint64_t)a1);
  return swift_release();
}

unint64_t sub_100461444(char *a1)
{
  id v2 = [a1 navigationItem];
  uint64_t v3 = &a1[OBJC_IVAR____TtC5Files23DOCColumnViewController_containerControllers];
  swift_beginAccess();
  unint64_t v4 = *(void *)v3;
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    id v10 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  unint64_t result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_13:
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v4 + 8 * result + 32);
LABEL_8:
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    id v9 = [v8 navigationItem];

    id v10 = [v9 searchController];
LABEL_11:
    [v2 doc_safeSetSearchController:v10];

    id v11 = [a1 navigationItem];
    [v11 _setPreserveSearchBarAcrossTransitions:1];

    id v12 = [a1 navigationItem];
    [v12 setHidesSearchBarWhenScrolling:0];

    return (unint64_t)[a1 setDefinesPresentationContext:1];
  }
  __break(1u);
  return result;
}

uint64_t sub_100461624()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046165C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100461694()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_1004616D4()
{
  sub_10045E5E8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

unint64_t sub_1004616E0()
{
  unint64_t result = qword_100716B98;
  if (!qword_100716B98)
  {
    sub_10009E6C4(255, (unint64_t *)&qword_100707710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716B98);
  }
  return result;
}

void sub_100461748()
{
  sub_10045E330(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100461754()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046178C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004617C4()
{
  return sub_10045F24C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1004617CC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100461804()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100461844(char a1)
{
  return sub_10045DC2C(a1, *(void *)(v1 + 16), *(uint64_t (**)(void))(v1 + 24));
}

uint64_t sub_100461850()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

void sub_100461890()
{
  sub_1000C3DD8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_10046189C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004618D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004618E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10046192C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046196C()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_1004619B4()
{
  return sub_100175918(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void **)(v0 + 40));
}

void sub_1004619C4()
{
  uint64_t v1 = *(void *)(v0 + 16) + OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_viewStyleInFlight;
  *(void *)uint64_t v1 = 0;
  *(unsigned char *)(v1 + 8) = 1;
}

uint64_t sub_1004619E4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = *(unsigned char **)(v0 + 40);
  uint64_t v3 = *(uint64_t (**)(id))(v0 + 48);
  [*(id *)(v0 + 16) addSubview:*(void *)(v0 + 24)];
  [v1 setAlpha:0.0];
  v2[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] = 1;
  return v3([v2 setActive:0]);
}

id sub_100461A64()
{
  return sub_10045ECCC(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100461A98()
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  qword_100716BB0 = result;
  *(void *)algn_100716BB8 = v1;
  return result;
}

id sub_100461AC8()
{
  id result = [self blackColor];
  qword_100716BC0 = (uint64_t)result;
  return result;
}

void sub_100461B04()
{
  qword_100716BC8 = 0x403E000000000000;
}

id sub_100461C94()
{
  return sub_100463DE0(0, type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView);
}

void sub_100461DCC(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_100462310(a3 & 1);
  }
}

uint64_t sub_100461E3C()
{
  unint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations);
  uint64_t v2 = OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (!v3) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v3) {
      goto LABEL_10;
    }
  }
  uint64_t result = self;
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = (void *)result;
  uint64_t v6 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(v1 + 8 * v6 + 32);
      swift_unknownObjectRetain();
    }
    ++v6;
    id v8 = [v5 defaultCenter];
    [v8 removeObserver:v7];
    swift_unknownObjectRelease();
  }
  while (v3 != v6);
LABEL_10:
  swift_bridgeObjectRelease_n();
  *(void *)(v9 + v2) = _swiftEmptyArrayStorage;

  return swift_bridgeObjectRelease();
}

void sub_100462008()
{
  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView();
  [super layoutSubviews];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = [v0 subviews];
    sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if ((v4 & 0xC000000000000001) != 0)
    {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_10;
      }
      id v5 = *(id *)(v4 + 32);
    }
    uint64_t v6 = v5;
    swift_bridgeObjectRelease();
    double v7 = sub_1004621F8(v6);
    double v9 = v8;
    [v0 bounds];
    CGFloat v10 = CGRectGetMidX(v14) - v7 * 0.5;
    [v0 bounds];
    [v6 setFrame:v10, CGRectGetMidY(v15) - v9 * 0.5, v7, v9];
    id v11 = [v2 view];
    if (v11)
    {
      id v12 = v11;
      [v6 bounds];
      [v12 setFrame:];

      return;
    }
LABEL_10:
    __break(1u);
  }
}

double sub_1004621F8(void *a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    [v1 bounds];
    double v5 = CGRectGetWidth(v10) + -88.0;
    [v4 preferredContentSize];
    if ((*(void *)&v6 & 0xFFFFFFFFFFFFFLL) != 0) {
      double v7 = v5;
    }
    else {
      double v7 = v6;
    }
    if ((~*(void *)&v6 & 0x7FF0000000000000) != 0) {
      double v7 = v6;
    }
    if (v5 > v6) {
      double v5 = v7;
    }
    [v1 bounds];
    CGRectGetHeight(v11);
    [v4 preferredContentSize];
  }
  else
  {
    [a1 bounds];
    return v8;
  }
  return v5;
}

void sub_100462310(char a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 subviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v6) {
    return;
  }
  uint64_t v7 = Notification.userInfo.getter();
  if (!v7) {
    return;
  }
  uint64_t v8 = v7;
  *(double *)&uint64_t v74 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)());
  uint64_t v75 = v9;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v10 = sub_10008E070((uint64_t)&rect1.origin.y), (v11 & 1) != 0))
  {
    sub_10009B208(*(void *)(v8 + 56) + 32 * v10, (uint64_t)&v76);
  }
  else
  {
    long long v76 = 0u;
    long long v77 = 0u;
  }
  sub_10008E17C((uint64_t)&rect1.origin.y);
  if (!*((void *)&v77 + 1)) {
    goto LABEL_21;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_10070AD00);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  id v12 = (void *)v74;
  *(double *)&uint64_t v74 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)());
  uint64_t v75 = v13;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v14 = sub_10008E070((uint64_t)&rect1.origin.y), (v15 & 1) != 0))
  {
    sub_10009B208(*(void *)(v8 + 56) + 32 * v14, (uint64_t)&v76);
  }
  else
  {
    long long v76 = 0u;
    long long v77 = 0u;
  }
  sub_10008E17C((uint64_t)&rect1.origin.y);
  if (!*((void *)&v77 + 1))
  {

LABEL_21:
    swift_bridgeObjectRelease();
LABEL_22:
    sub_10006273C((uint64_t)&v76);
    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_24;
  }
  double v16 = *(double *)&v74;
  *(double *)&uint64_t v74 = COERCE_DOUBLE(static String._unconditionallyBridgeFromObjectiveC(_:)());
  uint64_t v75 = v17;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v8 + 16) && (unint64_t v18 = sub_10008E070((uint64_t)&rect1.origin.y), (v19 & 1) != 0))
  {
    sub_10009B208(*(void *)(v8 + 56) + 32 * v18, (uint64_t)&v76);
  }
  else
  {
    long long v76 = 0u;
    long long v77 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10008E17C((uint64_t)&rect1.origin.y);
  if (!*((void *)&v77 + 1))
  {

    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0 || (uint64_t v20 = v74, (Strong = (void *)swift_unknownObjectWeakLoadStrong()) == 0))
  {

    return;
  }
  id v22 = Strong;
  id v23 = [Strong view];
  if (!v23) {
    goto LABEL_53;
  }
  uint64_t v24 = v23;
  id v25 = [v23 superview];

  if (!v25)
  {

    return;
  }
  uint64_t v69 = v20;
  id v26 = [v22 view];
  if (!v26) {
    goto LABEL_54;
  }
  uint64_t v27 = v26;
  id v28 = [v26 window];

  if (!v28)
  {

    return;
  }
  [v12 CGRectValue];
  rect1.origin.x = v29;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  id v36 = [v22 view];
  if (!v36) {
    goto LABEL_55;
  }
  uint64_t v37 = v36;
  [v36 frame];
  double v39 = v38;
  double v41 = v40;
  double v43 = v42;
  double v45 = v44;

  [v25 convertRect:0 toView:v39, v41, v43, v45];
  [v28 convertRect:0 fromWindow:];
  v82.origin.x = v46;
  v82.origin.y = v47;
  v82.size.width = v48;
  v82.size.height = v49;
  v78.origin.x = rect1.origin.x;
  v78.origin.y = v31;
  v78.size.width = v33;
  v78.size.height = v35;
  if (!CGRectIntersectsRect(v78, v82))
  {

    return;
  }
  id v50 = [v2 subviews];
  uint64_t v51 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v51 & 0xC000000000000001) != 0)
  {
    id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_39;
  }
  if (!*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
    return;
  }
  id v52 = *(id *)(v51 + 32);
LABEL_39:
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  [v53 frame];
  double v55 = v54;
  CGFloat v57 = v56;
  double v59 = v58;
  double v61 = v60;
  [v12 CGRectValue];
  double MinY = CGRectGetMinY(v79);
  if ((a1 & 1) == 0)
  {
    [v2 bounds:MinY];
    double MinY = CGRectGetHeight(v80);
  }
  double v63 = MinY * 0.5;
  v81.origin.x = v55;
  v81.origin.y = v57;
  v81.size.width = v59;
  v81.size.height = v61;
  double v64 = v63 - CGRectGetHeight(v81) * 0.5;
  if ([v22 _appearState] == 1 || objc_msgSend(v22, "_appearState") == 3)
  {
    [v53 setFrame:v55, v64, v59, v61];
  }
  else
  {
    char v65 = self;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = v53;
    *(double *)(v66 + 24) = v55;
    *(double *)(v66 + 32) = v64;
    *(double *)(v66 + 40) = v59;
    *(double *)(v66 + 48) = v61;
    uint64_t v72 = sub_100463FD0;
    uint64_t v73 = v66;
    *(void *)&rect1.origin.y = _NSConcreteStackBlock;
    *(void *)&rect1.size.width = 1107296256;
    *(void *)&rect1.size.height = sub_1000666D8;
    char v71 = &unk_1006ADB40;
    unint64_t v67 = _Block_copy(&rect1.origin.y);
    id v68 = v53;
    swift_release();
    [v65 animateWithDuration:v69 delay:v67 options:0 animations:v16 completion:0.0];

    _Block_release(v67);
  }
}

id sub_100462AF0()
{
  return sub_100463DE0(0, type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView);
}

id sub_100462B58(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_backgroundView;
  type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  unint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView;
  type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v7 = OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_hostView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIView) init];
  v5[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_direction] = v2;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerTransition();
  return [super init];
}

id sub_100462CC0(void *a1)
{
  id v3 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
  if (!v3)
  {
LABEL_10:
    return [a1 completeTransition:0];
  }
  id v4 = v3;
  id v5 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
  if (!v5)
  {
    uint64_t v6 = v4;
LABEL_9:

    goto LABEL_10;
  }
  uint64_t v6 = v5;
  id v7 = [a1 viewForKey:UITransitionContextToViewKey];
  if (!v7)
  {

    goto LABEL_9;
  }
  id v61 = v7;
  id result = [v4 view];
  if (result)
  {
    objc_super v9 = result;
    unint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_backgroundView];
    id v11 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v10 action:"dismissPresentedViewController:"];
    [v9 bounds];
    [v10 setFrame:];
    [v10 setAutoresizingMask:18];
    double v60 = v11;
    [v10 addGestureRecognizer:v11];
    id v12 = [self systemBackgroundColor];
    [v10 setBackgroundColor:v12];

    [v10 setAlpha:0.05];
    swift_unknownObjectWeakAssign();
    [v6 preferredContentSize];
    double v14 = v13;
    double v16 = v15;
    uint64_t v17 = *(char **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView];
    id result = [v4 view];
    if (result)
    {
      unint64_t v18 = result;
      [result bounds];
      double v20 = v19;
      double v22 = v21;
      double v24 = v23;
      double v26 = v25;

      [v17 setFrame:v20, v22, v24, v26];
      [v17 setAutoresizingMask:18];
      swift_unknownObjectWeakAssign();
      [v17 bounds];
      CGFloat v27 = CGRectGetMidX(v69) - v14 * 0.5;
      [v17 bounds];
      CGFloat MidY = CGRectGetMidY(v70);
      CGFloat v29 = *(void **)&v1[OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_hostView];
      [v29 setFrame:v27 MidY - v16 * 0.5, v14, v16];
      [v29 setAutoresizingMask:45];
      [v29 bounds];
      [v61 setFrame:];
      id v30 = [a1 containerView];
      [v30 center];
      double v32 = v31;
      double v34 = v33;

      double v59 = v6;
      [v10 setCenter:v32, v34];
      id v35 = [a1 containerView];
      [v35 center];
      double v37 = v36;
      double v39 = v38;

      [v17 setCenter:v37, v39];
      id v40 = [a1 containerView];
      [v40 addSubview:v10];

      id v41 = [a1 containerView];
      [v41 addSubview:v17];

      [v17 addSubview:v29];
      [v29 addSubview:v61];
      id v42 = [v17 layer];
      id v43 = [v29 layer];
      sub_100463FE8(v42, v43);

      id v44 = [v17 layer];
      sub_1004641D4(v44);

      double v45 = self;
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v1;
      uint64_t v66 = sub_100464564;
      uint64_t v67 = v46;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      double v64 = sub_1000666D8;
      char v65 = &unk_1006ADC30;
      CGFloat v47 = _Block_copy(&aBlock);
      CGFloat v48 = v1;
      swift_release();
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = a1;
      uint64_t v66 = (void (*)())sub_1002EFDD8;
      uint64_t v67 = v49;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      double v64 = sub_10000A884;
      char v65 = &unk_1006ADC80;
      id v50 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      [v45 animateWithDuration:0 delay:v47 usingSpringWithDamping:v50 initialSpringVelocity:0.4 options:0.0 animations:1.0 completion:0.0];
      _Block_release(v50);
      _Block_release(v47);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v48;
      uint64_t v66 = sub_10046456C;
      uint64_t v67 = v51;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      double v64 = sub_1000666D8;
      char v65 = &unk_1006ADCD0;
      id v52 = _Block_copy(&aBlock);
      uint64_t v53 = v48;
      swift_release();
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = a1;
      uint64_t v66 = (void (*)())sub_1002EFDD8;
      uint64_t v67 = v54;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v63 = 1107296256;
      double v64 = sub_10000A884;
      char v65 = &unk_1006ADD20;
      double v55 = _Block_copy(&aBlock);
      swift_unknownObjectRetain();
      swift_release();
      [v45 animateWithDuration:0 delay:v52 usingSpringWithDamping:v55 initialSpringVelocity:0.53 options:0.0 animations:0.68 completion:0.0];
      _Block_release(v55);
      _Block_release(v52);
      uint64_t v56 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v57 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      double v58 = sub_100363A04((uint64_t)sub_1004645AC, v56, (uint64_t)sub_1004645CC, v57);
      swift_release_n();
      swift_release_n();
      *(void *)&v17[OBJC_IVAR____TtCC5Files36DOCModalBlurViewControllerTransitionP33_4C4C64B830FA27D5F7277025BBE0D4FD13ContainerView_keyboardObservations] = v58;

      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10046351C(uint64_t a1)
{
  id v4 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView), "layer"));
  if (!UIAccessibilityIsReduceMotionEnabled() && !UIAccessibilityIsReduceTransparencyEnabled())
  {
    sub_10009E6C4(0, &qword_10070A280);
    Class isa = NSNumber.init(integerLiteral:)(0).super.super.isa;
    NSString v3 = String._bridgeToObjectiveC()();
    [v4 setValue:isa forKeyPath:v3];
  }
  LODWORD(v1) = 1.0;
  [v4 setOpacity:v1];
}

void sub_100463604(uint64_t a1)
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC5Files36DOCModalBlurViewControllerTransition_containerView), "layer"));
  long long v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  v6[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v6[1] = v2;
  long long v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  uint64_t v6[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v6[3] = v3;
  long long v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v6[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v6[5] = v4;
  long long v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v6[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v6[7] = v5;
  [v1 setTransform:v6];
}

void sub_100463688(void *a1)
{
  id v3 = [a1 viewForKey:UITransitionContextFromViewKey];
  if (v3)
  {
    long long v4 = v3;
    id v5 = [v3 superview];
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [v5 superview];

      if (v7)
      {
        id v8 = [v4 superview];
        if (v8)
        {
          objc_super v9 = v8;
          id v10 = [v7 layer];
          id v11 = [v9 layer];
          sub_100463FE8(v10, v11);

          id v12 = [v7 layer];
          CGFloat m12 = CATransform3DIdentity.m12;
          CGFloat m13 = CATransform3DIdentity.m13;
          CGFloat m14 = CATransform3DIdentity.m14;
          CGFloat m21 = CATransform3DIdentity.m21;
          CGFloat m22 = CATransform3DIdentity.m22;
          CGFloat m23 = CATransform3DIdentity.m23;
          CGFloat m24 = CATransform3DIdentity.m24;
          CGFloat m32 = CATransform3DIdentity.m32;
          CGFloat m31 = CATransform3DIdentity.m31;
          CGFloat m34 = CATransform3DIdentity.m34;
          CGFloat m33 = CATransform3DIdentity.m33;
          CGFloat m42 = CATransform3DIdentity.m42;
          CGFloat m41 = CATransform3DIdentity.m41;
          CGFloat m44 = CATransform3DIdentity.m44;
          CGFloat m43 = CATransform3DIdentity.m43;
          CGFloat aBlock = CATransform3DIdentity.m11;
          uint64_t v37 = *(void *)&m12;
          CGFloat v38 = m13;
          CGFloat v39 = m14;
          CGFloat v40 = m21;
          CGFloat v41 = m22;
          CGFloat v42 = m23;
          CGFloat v43 = m24;
          CGFloat v44 = m31;
          CGFloat v45 = m32;
          CGFloat v46 = m33;
          CGFloat v47 = m34;
          CGFloat v48 = m41;
          CGFloat v49 = m42;
          CGFloat v50 = m43;
          CGFloat v51 = m44;
          [v12 setTransform:&aBlock];

          id v20 = [v7 layer];
          CGFloat aBlock = CATransform3DIdentity.m11;
          uint64_t v37 = *(void *)&m12;
          CGFloat v38 = m13;
          CGFloat v39 = m14;
          CGFloat v40 = m21;
          CGFloat v41 = m22;
          CGFloat v42 = m23;
          CGFloat v43 = m24;
          CGFloat v44 = m31;
          CGFloat v45 = m32;
          CGFloat v46 = m33;
          CGFloat v47 = m34;
          CGFloat v48 = m41;
          CGFloat v49 = m42;
          CGFloat v50 = m43;
          CGFloat v51 = m44;
          [v20 setTransform:&aBlock];

          double v21 = self;
          uint64_t v22 = swift_allocObject();
          *(void *)(v22 + 16) = v1;
          *(void *)(v22 + 24) = v7;
          CGFloat v40 = COERCE_DOUBLE(sub_100464194);
          CGFloat v41 = *(double *)&v22;
          CGFloat aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
          uint64_t v37 = 1107296256;
          CGFloat v38 = COERCE_DOUBLE(sub_1000666D8);
          CGFloat v39 = COERCE_DOUBLE(&unk_1006ADB90);
          double v23 = _Block_copy(&aBlock);
          id v24 = v1;
          id v25 = v7;
          swift_release();
          uint64_t v26 = swift_allocObject();
          *(void *)(v26 + 16) = a1;
          CGFloat v40 = COERCE_DOUBLE(sub_1002EF384);
          CGFloat v41 = *(double *)&v26;
          CGFloat aBlock = COERCE_DOUBLE(_NSConcreteStackBlock);
          uint64_t v37 = 1107296256;
          CGFloat v38 = COERCE_DOUBLE(sub_10000A884);
          CGFloat v39 = COERCE_DOUBLE(&unk_1006ADBE0);
          CGFloat v27 = _Block_copy(&aBlock);
          swift_unknownObjectRetain();
          swift_release();
          [v21 animateWithDuration:0 delay:v23 usingSpringWithDamping:v27 initialSpringVelocity:0.4 options:0.0 animations:1.0 completion:0.0];

          _Block_release(v27);
          _Block_release(v23);
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }

  [a1 completeTransition:0];
}

void sub_100463A7C(int a1, id a2)
{
  id v2 = [a2 layer];
  sub_1004641D4(v2);
}

id sub_100463AFC(uint64_t a1)
{
  return sub_100463DE0(a1, type metadata accessor for DOCModalBlurViewControllerTransition);
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition()
{
  return self;
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition.BackgroundView()
{
  return self;
}

uint64_t type metadata accessor for DOCModalBlurViewControllerTransition.ContainerView()
{
  return self;
}

uint64_t sub_100463BDC(uint64_t a1, void *a2)
{
  NSString v3 = a2;
  if (!a2) {
    goto LABEL_7;
  }
  if ((a1 != 0xD000000000000020 || a2 != (void *)0x80000001005F5F20)
    && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    NSString v3 = String._bridgeToObjectiveC()();
LABEL_7:
    v6.receiver = v2;
    v6.super_class = (Class)type metadata accessor for DOCModalBlurViewControllerView();
    [super _shouldAnimatePropertyWithKey:v3];

    return (uint64_t)v4;
  }
  return 1;
}

id sub_100463DC8(uint64_t a1)
{
  return sub_100463DE0(a1, type metadata accessor for DOCModalBlurViewControllerView);
}

id sub_100463DE0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCModalBlurViewControllerView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCModalBlurViewControllerTransition.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100463F08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCModalBlurViewControllerTransition.Direction()
{
  return &type metadata for DOCModalBlurViewControllerTransition.Direction;
}

unint64_t sub_100463F44()
{
  unint64_t result = qword_100716CA8;
  if (!qword_100716CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716CA8);
  }
  return result;
}

uint64_t sub_100463F98()
{
  return _swift_deallocObject(v0, 56, 7);
}

id sub_100463FD0()
{
  return [*(id *)(v0 + 16) setFrame:*(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48)];
}

id sub_100463FE8(void *a1, id a2)
{
  [a2 setCornerRadius:16.0];
  [a2 setCornerCurve:kCACornerCurveContinuous];
  [a2 setMasksToBounds:1];
  if (qword_100705208 != -1) {
    swift_once();
  }
  id v4 = [(id)qword_100716BC0 CGColor];
  [a1 setShadowColor:v4];

  if (qword_100705210 != -1) {
    swift_once();
  }
  [a1 setShadowRadius:*(double *)&qword_100716BC8];
  [a1 setShadowOffset:0.0, 10.0];
  LODWORD(v5) = 1051931443;
  [a1 setShadowOpacity:v5];

  return [a1 setAllowsGroupOpacity:1];
}

uint64_t sub_100464154()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100464194()
{
  sub_100463A7C(*(void *)(v0 + 16), *(id *)(v0 + 24));
}

uint64_t sub_10046419C()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004641D4(void *a1)
{
  if (!UIAccessibilityIsReduceMotionEnabled() && !UIAccessibilityIsReduceTransparencyEnabled())
  {
    if (qword_100705200 != -1) {
      swift_once();
    }
    id v2 = objc_allocWithZone((Class)CAFilter);
    swift_bridgeObjectRetain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v4 = [v2 initWithType:v3];

    NSString v5 = String._bridgeToObjectiveC()();
    [v4 setName:v5];

    NSString v6 = String._bridgeToObjectiveC()();
    NSString v7 = String._bridgeToObjectiveC()();
    [v4 setValue:v6 forKey:v7];

    NSString v8 = String._bridgeToObjectiveC()();
    NSString v9 = String._bridgeToObjectiveC()();
    [v4 setValue:v8 forKey:v9];

    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    NSString v11 = String._bridgeToObjectiveC()();
    [v4 setValue:isa forKey:v11];

    sub_1000CBE70(&qword_100708BE0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1005A0030;
    *(void *)(v12 + 56) = sub_10009E6C4(0, &qword_100716CB0);
    *(void *)(v12 + 32) = v4;
    id v13 = v4;
    Class v14 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 setFilters:v14];
  }
  [a1 setOpacity:0.0];
  [a1 anchorPoint];
  [a1 setAnchorPoint:];
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  double v16 = 1.15;
  if (IsReduceMotionEnabled) {
    double v16 = 1.0;
  }
  long long v17 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v23.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v23.CGFloat m13 = v17;
  long long v18 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v23.CGFloat m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v23.CGFloat m23 = v18;
  long long v19 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v23.CGFloat m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v23.CGFloat m33 = v19;
  long long v20 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v23.CGFloat m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v23.CGFloat m43 = v20;
  CATransform3DScale(&v22, &v23, v16, v16, 1.0);
  CATransform3D v23 = v22;
  return [a1 setTransform:&v23];
}

uint64_t sub_10046452C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100464564()
{
  sub_10046351C(*(void *)(v0 + 16));
}

void sub_10046456C()
{
  sub_100463604(*(void *)(v0 + 16));
}

uint64_t sub_100464574()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004645AC(uint64_t a1)
{
  sub_100461DCC(a1, v1, 1);
}

void sub_1004645CC(uint64_t a1)
{
  sub_100461DCC(a1, v1, 0);
}

id sub_100464620(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithSuiteName:v2];

  return v3;
}

void *sub_10046468C()
{
  return &protocol witness table for String;
}

id sub_100464698()
{
  return sub_100464C3C();
}

uint64_t sub_1004646C0()
{
  return Image.init(_:bundle:)(0x6349796C696D6146, 0xEA00000000006E6FLL, 0);
}

void sub_1004646E4(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x80000001005F61A0;
}

uint64_t sub_100464704(uint64_t a1)
{
  uint64_t result = sub_1000D82F8(&qword_100707CE8);
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_100464748(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_1000CBE70(&qword_100716DF8);
  __chkstk_darwin(v41);
  CGFloat v40 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  CGFloat v39 = (uint64_t *)((char *)&v31 - v8);
  __chkstk_darwin(v9);
  NSString v11 = (char *)&v31 - v10;
  CGFloat v42 = _swiftEmptyArrayStorage;
  sub_100464A48(0, 0, 0);
  uint64_t v12 = v42;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v13;
  uint64_t v31 = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    double v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v34 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    id v35 = v16;
    uint64_t v18 = a1 + v34;
    long long v19 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v36 = v15;
    uint64_t v37 = v2;
    double v32 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v33 = v17;
    do
    {
      uint64_t v20 = v41;
      double v21 = &v40[*(int *)(v41 + 48)];
      v35(v21, v18, v2);
      CATransform3D v22 = v19;
      uint64_t v23 = (uint64_t)v39;
      id v24 = (char *)v39 + *(int *)(v20 + 48);
      *CGFloat v39 = v14;
      id v25 = *v22;
      (*v22)(v24, v21, v2);
      sub_100465000(v23, (uint64_t)v11);
      Tips.Action.with(index:)();
      sub_100465068((uint64_t)v11);
      uint64_t v12 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100464A48(0, v12[2] + 1, 1);
        uint64_t v12 = v42;
      }
      unint64_t v27 = v12[2];
      unint64_t v26 = v12[3];
      if (v27 >= v26 >> 1)
      {
        sub_100464A48(v26 > 1, v27 + 1, 1);
        uint64_t v12 = v42;
      }
      ++v14;
      _OWORD v12[2] = v27 + 1;
      uint64_t v28 = v33;
      unint64_t v29 = (unint64_t)v12 + v34 + v27 * v33;
      uint64_t v2 = v37;
      long long v19 = v32;
      v25((char *)v29, v5, v37);
      CGFloat v42 = v12;
      v18 += v28;
    }
    while (v38 != v14);
  }
  swift_bridgeObjectRelease();
  return v12;
}

size_t sub_100464A48(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_100464A68(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_100464A68(size_t result, int64_t a2, char a3, void *a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_1000CBE70(&qword_100716DF0);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    if (v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (char *)v13 + v16 >= (char *)a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

id sub_100464C3C()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v5._uint64_t countAndFlagsBits = 0xD000000000000027;
    v5._object = (void *)0x80000001005F6170;
    v2._object = (void *)0x80000001005F6150;
    v2._uint64_t countAndFlagsBits = 0xD000000000000017;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v5);

    sub_10009D28C();
    return (id)Text.init<A>(_:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100464D10()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v5._uint64_t countAndFlagsBits = 0xD000000000000061;
    v5._object = (void *)0x80000001005F60E0;
    v2._object = (void *)0x80000001005F60A0;
    v2._uint64_t countAndFlagsBits = 0xD000000000000032;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v5);

    sub_10009D28C();
    return (id)Text.init<A>(_:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100464DE4()
{
  uint64_t v0 = type metadata accessor for Tips.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v5 = result;
    v6._uint64_t countAndFlagsBits = 0xD000000000000016;
    v15._uint64_t countAndFlagsBits = 0xD000000000000040;
    v15._object = (void *)0x80000001005F6050;
    v6._object = (void *)0x80000001005F6030;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    Swift::String v9 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v15);

    Swift::String v14 = v9;
    sub_10009D28C();
    Tips.Action.init<A>(id:title:perform:)();
    sub_1000CBE70(&qword_100716DF0);
    unint64_t v10 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 32))(v11 + v10, v3, v0);
    unint64_t v12 = sub_100464748(v11);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100465000(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100716DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100465068(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100716DF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DOCSymbolImageBarButtonItem.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_100053674(a1, (uint64_t)v37);
  if (!v38)
  {
    sub_10006273C((uint64_t)v37);
    return 0;
  }
  uint64_t v4 = (objc_class *)type metadata accessor for DOCSymbolImageBarButtonItem();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  Swift::String v5 = v36;
  sub_100053674(a1, (uint64_t)v37);
  uint64_t v6 = v38;
  if (v38)
  {
    Swift::String v7 = sub_1000A6B78(v37, v38);
    uint64_t v8 = *(void *)(v6 - 8);
    double v9 = __chkstk_darwin(v7);
    uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_10009B1B8((uint64_t)v37);
  }
  else
  {
    uint64_t v12 = 0;
  }
  v35.receiver = v2;
  v35.super_class = v4;
  unsigned int v14 = [super isEqual:v12];
  swift_unknownObjectRelease();
  if (v14)
  {

    return 1;
  }
  id v15 = [v2 target];
  id v16 = [v5 target];
  id v17 = v16;
  if (!v15)
  {
    if (!v16) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (!v16)
  {
LABEL_16:

    swift_unknownObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  if (v15 != v17) {
    goto LABEL_36;
  }
LABEL_17:
  id v18 = [v2 action];
  id v19 = [v5 action];
  if (!v18)
  {
    if (!v19) {
      goto LABEL_23;
    }
LABEL_36:

    return 0;
  }
  if (!v19 || (static Selector.== infix(_:_:)() & 1) == 0) {
    goto LABEL_36;
  }
LABEL_23:
  id v20 = [v2 primaryAction];
  id v21 = [v5 primaryAction];
  CATransform3D v22 = v21;
  if (v20)
  {
    if (!v21)
    {
LABEL_32:

      return 0;
    }
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    id v23 = v20;
    char v24 = static NSObject.== infix(_:_:)();

    if ((v24 & 1) == 0) {
      goto LABEL_36;
    }
  }
  else if (v21)
  {
LABEL_34:

    return 0;
  }
  id v20 = [v2 menu];
  id v25 = [v5 menu];
  CATransform3D v22 = v25;
  if (!v20)
  {
    if (!v25) {
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (!v25) {
    goto LABEL_32;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  id v26 = v20;
  char v27 = static NSObject.== infix(_:_:)();

  if ((v27 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_35:
  unsigned int v28 = [v2 isEnabled];
  if (v28 != [v5 isEnabled]) {
    goto LABEL_36;
  }
  uint64_t v29 = *(void *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor];
  uint64_t v30 = *(void *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 8];
  uint64_t v31 = *(void *)&v2[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 16];
  uint64_t v32 = *(void *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 16];
  if (v29 == *(void *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor]
    && v30 == *(void *)&v5[OBJC_IVAR____TtC5Files27DOCSymbolImageBarButtonItem_symbolDescriptor + 8])
  {

    return v31 == v32;
  }
  char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();

  uint64_t result = 0;
  if (v33) {
    return v31 == v32;
  }
  return result;
}