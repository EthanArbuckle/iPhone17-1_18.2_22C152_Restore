void DOCSymbolImageBarButtonItem.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DOCSymbolImageBarButtonItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSymbolImageBarButtonItem();
  [super dealloc];
}

void *sub_100465668(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DOCSymbolImageBarButtonItem.Descriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for DOCSymbolImageBarButtonItem.Descriptor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for DOCSymbolImageBarButtonItem.Descriptor()
{
  return &type metadata for DOCSymbolImageBarButtonItem.Descriptor;
}

uint64_t DOCMetadataFolderSizingViewModel.isCloudItem.getter()
{
  return *v0;
}

uint64_t DOCMetadataFolderSizingViewModel.itemCount.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t DOCMetadataFolderSizingViewModel.folderSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCMetadataFolderSizingViewModel() + 24);

  return sub_100241C40(v3, a1);
}

uint64_t type metadata accessor for DOCMetadataFolderSizingViewModel()
{
  uint64_t result = qword_100716E88;
  if (!qword_100716E88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t DOCMetadataFolderSizingViewModel.folderSize.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCMetadataFolderSizingViewModel() + 24);

  return sub_10046582C(a1, v3);
}

uint64_t sub_10046582C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100717230);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*DOCMetadataFolderSizingViewModel.folderSize.modify())(void)
{
  return DOCSplitBrowserViewController.didCommitPreview(of:);
}

uint64_t DOCMetadataFolderSizingViewModel.updateFolderSize(_:)(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for DOCMetadataFolderSizingViewModel() + 24);
  sub_100241CA8(v3);
  uint64_t v4 = type metadata accessor for DOCFolderSize();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v3, a1, v4);
  v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);

  return v5(v3, 0, 1, v4);
}

uint64_t DOCMetadataFolderSizingViewModel.shouldGrayTextOut.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  uint64_t v3 = __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v48 = (uint64_t)&v43 - v7;
  __chkstk_darwin(v6);
  v9 = (unsigned __int8 *)&v43 - v8;
  uint64_t v10 = sub_1000CBE70(&qword_100717230);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v46 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  v15 = (char *)&v43 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v43 - v16;
  uint64_t v18 = type metadata accessor for DOCFolderSize();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100241C40(v1 + *(int *)(v2 + 24), (uint64_t)v17);
  v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v47(v17, 1, v18) == 1)
  {
    sub_100241CA8((uint64_t)v17);
LABEL_13:
    sub_100465FA8(v1, (uint64_t)v9);
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  uint64_t v22 = DOCFolderSize.logicalBytes.getter();
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    goto LABEL_13;
  }
  uint64_t v24 = v22;
  v45 = v5;
  uint64_t v44 = DOCFolderSize.physicalBytes.getter();
  char v26 = v25;
  v43 = *(void (**)(char *, uint64_t))(v19 + 8);
  v43(v21, v18);
  if ((v26 & 1) != 0 || v24 == -1) {
    goto LABEL_13;
  }
  sub_100465FA8(v1, (uint64_t)v9);
  uint64_t v27 = (uint64_t)v45;
  if (v44 != -1)
  {
    int v28 = *v9;
    uint64_t v29 = v48;
    sub_100465FA8((uint64_t)v9, v48);
    if (v28 == 1)
    {
      sub_100241C40(v29 + *(int *)(v2 + 24), (uint64_t)v15);
      v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v47;
      if (v47(v15, 1, v18) == 1)
      {
        sub_100241CA8((uint64_t)v15);
        goto LABEL_10;
      }
      uint64_t v37 = DOCFolderSize.logicalBytes.getter();
      char v39 = v38;
      v43(v15, v18);
      if ((v39 & 1) != 0 || v37 < 0)
      {
LABEL_10:
        sub_10046600C(v29);
        uint64_t v31 = (uint64_t)v45;
        sub_100465FA8((uint64_t)v9, (uint64_t)v45);
        uint64_t v32 = v31 + *(int *)(v2 + 24);
        uint64_t v33 = v46;
        sub_100241C40(v32, v46);
        if (v30(v33, 1, v18) == 1)
        {
          sub_100241CA8(v33);
        }
        else
        {
          uint64_t v40 = DOCFolderSize.physicalBytes.getter();
          char v42 = v41;
          v43((char *)v33, v18);
          if ((v42 & 1) == 0 && (v40 & 0x8000000000000000) == 0)
          {
            uint64_t v34 = 1;
LABEL_25:
            uint64_t v27 = (uint64_t)v45;
            goto LABEL_26;
          }
        }
        uint64_t v34 = 0;
        goto LABEL_25;
      }
      sub_10046600C(v29);
      uint64_t v36 = (uint64_t)v9;
      uint64_t v27 = (uint64_t)v45;
    }
    else
    {
      sub_10046600C(v29);
      uint64_t v36 = (uint64_t)v9;
    }
    sub_100465FA8(v36, v27);
    uint64_t v34 = 0;
LABEL_26:
    sub_10046600C(v27);
    goto LABEL_15;
  }
LABEL_14:
  uint64_t v34 = 1;
LABEL_15:
  sub_10046600C((uint64_t)v9);
  return v34;
}

BOOL sub_100465DDC()
{
  uint64_t v1 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCFolderSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  sub_100241C40(v0 + *(int *)(v8 + 24), (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_100241CA8((uint64_t)v3);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  uint64_t v9 = DOCFolderSize.logicalBytes.getter();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return 1;
  }
  uint64_t v11 = v9;
  uint64_t v12 = DOCFolderSize.physicalBytes.getter();
  char v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  BOOL result = 1;
  if ((v14 & 1) == 0 && v11 != -1) {
    return v12 == -1;
  }
  return result;
}

uint64_t sub_100465FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10046600C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DOCMetadataFolderSizingViewModel.sizeText.getter()
{
  if (!sub_100465DDC())
  {
    if (*(unsigned char *)v0 == 1)
    {
      uint64_t v7 = sub_100466534((uint64_t (*)(void))&DOCFolderSize.physicalBytes.getter);
      if (v8)
      {
        uint64_t v9 = v7;
        uint64_t v10 = v8;
        uint64_t v11 = sub_100466534((uint64_t (*)(void))&DOCFolderSize.logicalBytes.getter);
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = *(void *)(v0 + 8);
          if ((v14 & 0x8000000000000000) == 0)
          {
            uint64_t v15 = v11;
            v16._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
            v17._object = (void *)0x80000001005F62C0;
            v16._object = (void *)0x80000001005F6390;
            v17._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
            DOCLocalizedDictionaryString(_:comment:)(v17, v16);
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v18 = swift_allocObject();
            *(_OWORD *)(v18 + 16) = xmmword_1005A0230;
            *(void *)(v18 + 56) = &type metadata for String;
            unint64_t v19 = sub_100073F48();
            *(void *)(v18 + 32) = v15;
            *(void *)(v18 + 40) = v13;
            *(void *)(v18 + 96) = &type metadata for String;
            *(void *)(v18 + 104) = v19;
            *(void *)(v18 + 64) = v19;
            *(void *)(v18 + 72) = v9;
            *(void *)(v18 + 80) = v10;
LABEL_19:
            *(void *)(v18 + 136) = &type metadata for Int;
            *(void *)(v18 + 144) = &protocol witness table for Int;
            *(void *)(v18 + 112) = v14;
LABEL_25:
            uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return countAndFlagsBits;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v20 = sub_100466534((uint64_t (*)(void))&DOCFolderSize.physicalBytes.getter);
      if (v21)
      {
        uint64_t v22 = v21;
        uint64_t v23 = *(void *)(v0 + 8);
        if ((v23 & 0x8000000000000000) == 0)
        {
          uint64_t v24 = v20;
          v25._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
          v26._uint64_t countAndFlagsBits = 0xD000000000000041;
          v25._object = (void *)0x80000001005F6320;
          v26._object = (void *)0x80000001005F6340;
          DOCLocalizedDictionaryString(_:comment:)(v25, v26);
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v27 = swift_allocObject();
          *(_OWORD *)(v27 + 16) = xmmword_10059B760;
          *(void *)(v27 + 56) = &type metadata for String;
          unint64_t v28 = sub_100073F48();
          *(void *)(v27 + 32) = v24;
          *(void *)(v27 + 40) = v22;
          *(void *)(v27 + 96) = &type metadata for Int;
          *(void *)(v27 + 104) = &protocol witness table for Int;
          *(void *)(v27 + 64) = v28;
          *(void *)(v27 + 72) = v23;
          uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return countAndFlagsBits;
        }
        swift_bridgeObjectRelease();
      }
    }
    uint64_t v29 = sub_1004666BC();
    if (v30)
    {
      uint64_t v31 = v29;
      uint64_t v32 = v30;
      uint64_t v33 = sub_100466534((uint64_t (*)(void))&DOCFolderSize.physicalBytes.getter);
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v14 = *(void *)(v0 + 8);
        if ((v14 & 0x8000000000000000) == 0)
        {
          uint64_t v36 = v33;
          v37._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
          v38._object = (void *)0x80000001005F62C0;
          v37._object = (void *)0x80000001005F62E0;
          v38._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
          DOCLocalizedDictionaryString(_:comment:)(v38, v37);
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = xmmword_1005A0230;
          *(void *)(v18 + 56) = &type metadata for String;
          unint64_t v39 = sub_100073F48();
          *(void *)(v18 + 32) = v31;
          *(void *)(v18 + 40) = v32;
          *(void *)(v18 + 96) = &type metadata for String;
          *(void *)(v18 + 104) = v39;
          *(void *)(v18 + 64) = v39;
          *(void *)(v18 + 72) = v36;
          *(void *)(v18 + 80) = v35;
          goto LABEL_19;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v40 = sub_1004666BC();
    if (v41)
    {
      uint64_t v42 = v40;
      uint64_t v43 = v41;
      uint64_t v44 = sub_100466534((uint64_t (*)(void))&DOCFolderSize.physicalBytes.getter);
      if (v45)
      {
        uint64_t v46 = v44;
        uint64_t v47 = v45;
        v48._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
        v48._object = (void *)0x80000001005F6280;
        v49._uint64_t countAndFlagsBits = 0x6F20402528204025;
        v49._object = (void *)0xEF296B736964206ELL;
        DOCLocalizedDictionaryString(_:comment:)(v49, v48);
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_10059B760;
        *(void *)(v50 + 56) = &type metadata for String;
        unint64_t v51 = sub_100073F48();
        *(void *)(v50 + 32) = v42;
        *(void *)(v50 + 40) = v43;
        *(void *)(v50 + 96) = &type metadata for String;
        *(void *)(v50 + 104) = v51;
        *(void *)(v50 + 64) = v51;
        *(void *)(v50 + 72) = v46;
        *(void *)(v50 + 80) = v47;
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
    }
    return 11565;
  }
  uint64_t result = (uint64_t)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v2 = (void *)result;
    v3._uint64_t countAndFlagsBits = 0xD000000000000010;
    v52._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
    v52._object = (void *)0x80000001005F6400;
    v3._object = (void *)0x80000001005F63E0;
    v4._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v4._object = (void *)0xEB00000000656C62;
    v5._uint64_t countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v52)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  __break(1u);
  return result;
}

uint64_t sub_100466534(uint64_t (*a1)(void))
{
  uint64_t v3 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v3 - 8);
  Swift::String v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  sub_100241C40(v1 + *(int *)(v6 + 24), (uint64_t)v5);
  uint64_t v7 = type metadata accessor for DOCFolderSize();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_100241CA8((uint64_t)v5);
    return 0;
  }
  else
  {
    uint64_t v10 = a1();
    char v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    uint64_t v9 = 0;
    if ((v12 & 1) == 0 && (v10 & 0x8000000000000000) == 0)
    {
      id v13 = [self stringFromByteCount:v10 countStyle:0];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  return v9;
}

uint64_t sub_1004666BC()
{
  uint64_t v1 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  sub_100241C40(v0 + *(int *)(v4 + 24), (uint64_t)v3);
  uint64_t v5 = type metadata accessor for DOCFolderSize();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
  {
    sub_100241CA8((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v8 = DOCFolderSize.logicalBytes.getter();
    char v10 = v9;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    uint64_t v7 = 0;
    if ((v10 & 1) == 0 && (v8 & 0x8000000000000000) == 0)
    {
      id v11 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
      [v11 setAllowedUnits:1];
      [v11 setAllowsNonnumericFormatting:1];
      id v12 = [v11 stringFromByteCount:v8];
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
  }
  return v7;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCMetadataFolderSizingViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for DOCFolderSize();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_1000CBE70(&qword_100717230);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for DOCFolderSize();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for DOCFolderSize();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_1000CBE70(&qword_100717230);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithCopy for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for DOCFolderSize();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_1000CBE70(&qword_100717230);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t initializeWithTake for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for DOCFolderSize();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_1000CBE70(&qword_100717230);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for DOCFolderSize();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v12 = sub_1000CBE70(&qword_100717230);
    memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100467000);
}

uint64_t sub_100467000(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_1000CBE70(&qword_100717230);
    int v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    id v13 = &a1[*(int *)(a3 + 24)];
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for DOCMetadataFolderSizingViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004670C8);
}

unsigned char *sub_1004670C8(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_1000CBE70(&qword_100717230);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 24)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100467170()
{
  sub_100467214();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100467214()
{
  if (!qword_100716E98)
  {
    type metadata accessor for DOCFolderSize();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100716E98);
    }
  }
}

uint64_t sub_100467270()
{
  return sub_1000CBF40(&qword_100707F78);
}

uint64_t sub_1004672A4()
{
  return sub_1000CBF40(&qword_100707F80);
}

uint64_t sub_1004672D8()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10046730C()
{
  uint64_t v0 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v0, qword_1007375B0);
  uint64_t v1 = sub_10009D098(v0, (uint64_t)qword_1007375B0);
  uint64_t v2 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 104);

  return v3(v1, v2, v0);
}

uint64_t sub_100467394()
{
  uint64_t v0 = sub_1000CBE70(&qword_100716F40);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_100716F48);
  __chkstk_darwin(v1);
  sub_10038112C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005F6660;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100716F50);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 32;
  v3._object = (void *)0xE100000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_1000CBE70(&qword_100716F58);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t sub_100467590()
{
  swift_getKeyPath();
  sub_10038112C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A04F0;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_100467658()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for IntentDialog();
  sub_10001AF94(v7, qword_100716ED0);
  sub_10009D098(v7, (uint64_t)qword_100716ED0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  return IntentDialog.init(_:)();
}

uint64_t sub_1004678B8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  Swift::String v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for IntentDialog();
  sub_10001AF94(v7, qword_100716EE8);
  sub_10009D098(v7, (uint64_t)qword_100716EE8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  return IntentDialog.init(_:)();
}

uint64_t sub_100467B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[6] = a1;
  v4[7] = a2;
  v4[10] = type metadata accessor for DOCFileEntity();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_100467BCC, 0, 0);
}

uint64_t sub_100467BCC()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 80);
  IntentParameter.wrappedValue.getter();
  char v3 = *(unsigned char *)(v0 + 160) & 1;
  id v4 = [self defaultManager];
  *(void *)(v0 + 112) = v4;
  IntentParameter.wrappedValue.getter();
  uint64_t v5 = *(void **)(v1 + *(int *)(v2 + 32));
  *(void *)(v0 + 120) = v5;
  id v6 = v5;
  sub_100117404(v1);
  IntentParameter.wrappedValue.getter();
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = *(void *)(v0 + 24);
  *(void *)(v0 + 128) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 136) = v9;
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  *(void *)(v9 + 32) = v6;
  *(unsigned char *)(v9 + 40) = v3;
  *(void *)(v9 + 48) = v4;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v10;
  unint64_t v11 = sub_1002FFBD4();
  *uint64_t v10 = v0;
  v10[1] = sub_100467D74;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 32, 0, 0, 0xD000000000000025, 0x80000001005F6630, sub_100468EB8, v9, v11);
}

uint64_t sub_100467D74()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100467FDC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100467E90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100467E90()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);

  swift_bridgeObjectRelease();
  id v4 = *(id *)(v0 + 32);
  sub_100162CCC(v4, v2);
  sub_1001173A0(v2, v3);
  *(void *)(v0 + 40) = sub_10040EA48(v3);
  sub_1000CBF40((unint64_t *)&qword_10070C070);
  sub_1001AE94C();
  static IntentResult.result<A, B>(value:opensIntent:)();

  swift_release();
  sub_100117404(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100467FDC()
{
  uint64_t v2 = (void *)v0[14];
  uint64_t v1 = (void *)v0[15];
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100468084(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  __chkstk_darwin(v2 - 8);
  sub_1001173A0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100117404(a1);
}

unint64_t sub_100468118()
{
  unint64_t result = qword_100716F00;
  if (!qword_100716F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716F00);
  }
  return result;
}

unint64_t sub_100468170()
{
  unint64_t result = qword_100716F08;
  if (!qword_100716F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716F08);
  }
  return result;
}

uint64_t sub_1004681C4()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_1004681F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100468214(uint64_t a1)
{
  unint64_t v2 = sub_100468F50();

  return static AssistantSchemaIntent.title.getter(a1, v2);
}

uint64_t sub_100468260@<X0>(uint64_t a1@<X8>)
{
  if (qword_100705230 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for IntentAuthenticationPolicy();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_1007375B0);
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_10046830C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000CB70;
  return sub_100467B18(a1, v4, v5, v6);
}

uint64_t sub_1004683C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004684CC();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1004683EC(uint64_t a1)
{
  unint64_t v2 = sub_10038112C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_10046842C()
{
  unint64_t result = qword_100716F18;
  if (!qword_100716F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716F18);
  }
  return result;
}

ValueMetadata *type metadata accessor for RenameFileIntent()
{
  return &type metadata for RenameFileIntent;
}

uint64_t sub_100468490()
{
  return sub_100073DF0(&qword_100716F20, &qword_100716F28);
}

uint64_t sub_1004684CC()
{
  uint64_t v0 = sub_1000CBE70(&qword_100709AD0);
  __chkstk_darwin(v0 - 8);
  v60 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  __chkstk_darwin(v2);
  v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  v56 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  v54 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v55 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_100710990);
  __chkstk_darwin(v11 - 8);
  v65 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for InputConnectionBehavior();
  uint64_t v69 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v15 - 8);
  Swift::String v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v21 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v24 - 8);
  Swift::String v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v67 = v9 + 56;
  uint64_t v68 = v8;
  v66 = v27;
  v27(v26, 1, 1, v8);
  uint64_t v28 = type metadata accessor for DOCFileEntity();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);
  uint64_t v53 = (uint64_t)v23;
  v29(v23, 1, 1, v28);
  sub_1000CBE70((uint64_t *)&unk_10070C030);
  type metadata accessor for UTType();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10059B760;
  static UTType.item.getter();
  static UTType.folder.getter();
  if (qword_100705238 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for IntentDialog();
  uint64_t v31 = sub_10009D098(v30, (uint64_t)qword_100716ED0);
  uint64_t v32 = *(void *)(v30 - 8);
  unint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  v51(v20, v31, v30);
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v33(v20, 0, 1, v30);
  v63 = v33;
  v33(v17, 1, 1, v30);
  uint64_t v35 = v69 + 104;
  uint64_t v34 = *(void (**)(void))(v69 + 104);
  uint64_t v36 = v14;
  Swift::String v37 = v14;
  unsigned int v62 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v38 = v64;
  v61 = (void (*)(char *, void, uint64_t))v34;
  v34(v37);
  sub_1000CBF40(&qword_1007075F0);
  uint64_t v53 = IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
  sub_1000CBE70(&qword_100716F30);
  v66(v26, 1, 1, v68);
  uint64_t v39 = type metadata accessor for String.IntentInputOptions();
  uint64_t v70 = 0;
  uint64_t v71 = 0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v65, 1, 1, v39);
  if (qword_100705240 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_10009D098(v30, (uint64_t)qword_100716EE8);
  v51(v20, v40, v30);
  v63(v20, 0, 1, v30);
  v61(v36, v62, v38);
  v65 = (char *)IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
  uint64_t v52 = sub_1000CBE70(&qword_100709AD8);
  unint64_t v51 = (void (*)(char *, uint64_t, uint64_t))v20;
  Swift::String v49 = v26;
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v50 = v36;
  uint64_t v41 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v69 = v35;
  uint64_t v42 = v58;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 104);
  uint64_t v44 = v59;
  v43(v59, enum case for LocalizedStringResource.BundleDescription.main(_:), v58);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v43(v44, v41, v42);
  uint64_t v45 = v49;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  v66(v45, 0, 1, v68);
  LOBYTE(v70) = 0;
  uint64_t v46 = type metadata accessor for Bool.IntentDisplayName();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v60, 1, 1, v46);
  v63((char *)v51, 1, 1, v30);
  v61(v50, v62, v64);
  IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
  return v53;
}

void sub_100468EB8(uint64_t a1)
{
  sub_10053F650(a1, *(void ***)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_100468ECC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100468EF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100468F24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_100468F50()
{
  unint64_t result = qword_100716F60;
  if (!qword_100716F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716F60);
  }
  return result;
}

uint64_t sub_1004690E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v20 = 0;
  uint64_t v10 = self;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = &v20;
  *((void *)v12 + 3) = v3;
  *((void *)v12 + 4) = a1;
  *((void *)v12 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v12[v11], (char *)&aBlock[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100469914;
  *(void *)(v13 + 24) = v12;
  aBlock[4] = sub_1000879B8;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  aBlock[3] = &unk_1006ADED8;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v10 performWithoutAnimation:v14];
  _Block_release(v14);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a2)
  {
    __break(1u);
  }
  else
  {
    uint64_t v17 = v20;
    if (v20)
    {
      swift_release();
      return v17;
    }
  }
  __break(1u);
  return result;
}

void sub_100469348(void **a1, void *a2)
{
  NSString v4 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v8.receiver = a2;
  v8.super_class = (Class)type metadata accessor for DOCSidebarCollectionView();
  [super dequeueReusableCellWithReuseIdentifier:v4 forIndexPath:isa];

  uint64_t v7 = *a1;
  *a1 = v6;
}

id sub_100469750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCSidebarCollectionView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCSidebarCollectionView()
{
  return self;
}

unint64_t sub_1004697A8()
{
  unint64_t result = qword_10070D310;
  if (!qword_10070D310)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10070D310);
  }
  return result;
}

unint64_t sub_1004697E8()
{
  unint64_t result = qword_10071C0D0;
  if (!qword_10071C0D0)
  {
    sub_1004697A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071C0D0);
  }
  return result;
}

uint64_t sub_100469840()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100469914()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void ***)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);

  sub_100469348(v1, v2);
}

uint64_t sub_10046997C()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void DOCBrowserHistoryShiftDirection.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int DOCBrowserHistoryShiftDirection.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

unint64_t sub_100469A14()
{
  unint64_t result = qword_100716FA0;
  if (!qword_100716FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716FA0);
  }
  return result;
}

unint64_t sub_100469A6C()
{
  unint64_t result = qword_100716FA8;
  if (!qword_100716FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100716FA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCHorizontalEdge()
{
  return &type metadata for DOCHorizontalEdge;
}

unsigned char *_s5Files17DOCHorizontalEdgeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100469BA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCVerticalEdge()
{
  return &type metadata for DOCVerticalEdge;
}

char *sub_100469BEC(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = v3;
  swift_getObjectType();
  uint64_t v8 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v4[OBJC_IVAR____TtC5Files15DOCRenameButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer] = 0;
  unint64_t v11 = &v4[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  uint64_t v12 = (objc_class *)type metadata accessor for DOCRenameButton();
  *(void *)unint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  v42.receiver = v4;
  v42.super_class = v12;
  double v13 = 0.0;
  id v14 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  id v16 = v14;
  swift_retain();
  uint64_t v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v16 setDoc_primaryAction:v17];

  id v18 = v16;
  static UIButton.Configuration.filled()();
  uint64_t v19 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 0, 1, v19);
  UIButton.configuration.setter();

  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(void *)(v21 + 24) = a1;
  aBlock[4] = sub_10046AFD4;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  aBlock[3] = &unk_1006AE138;
  uint64_t v22 = _Block_copy(aBlock);
  uint64_t v23 = (char *)v18;
  id v24 = a1;
  swift_release();
  [v23 setConfigurationUpdateHandler:v22];
  _Block_release(v22);

  id v25 = [objc_allocWithZone((Class)UIPointerInteraction) initWithDelegate:v23];
  [v23 addInteraction:v25];
  id v26 = [objc_allocWithZone((Class)CALayer) init];
  [v26 setOpacity:0.0];
  id v27 = [v23 layer];
  [v27 setMasksToBounds:1];

  id v28 = [v23 layer];
  [v28 addSublayer:v26];

  uint64_t v29 = OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer;
  uint64_t v30 = *(void **)&v23[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer];
  *(void *)&v23[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer] = v26;
  id v31 = v26;

  id v32 = [v23 traitCollection];
  id v33 = [v32 userInterfaceStyle];

  uint64_t v34 = *(void **)&v23[v29];
  if (v34)
  {
    if (v33 == (id)2) {
      double v13 = 1.0;
    }
    id v35 = objc_allocWithZone((Class)UIColor);
    id v36 = v34;
    id v37 = [v35 initWithWhite:v13 alpha:0.04];
    id v38 = [v37 CGColor];

    [v36 setBackgroundColor:v38];
  }
  sub_10009E6C4(0, &qword_10070AD60);
  uint64_t v39 = v23;
  static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
  UIView.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return v39;
}

uint64_t sub_10046A0FC(uint64_t a1, uint64_t a2, void *a3)
{
  id v56 = a3;
  uint64_t v58 = a2;
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v57 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_100706748);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v51 - v17;
  uint64_t v19 = type metadata accessor for UIButton.Configuration();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  UIButton.configuration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_1002B920C((uint64_t)v18);
  }
  uint64_t v52 = v12;
  uint64_t v53 = v16;
  uint64_t v24 = v57;
  uint64_t v54 = a1;
  v55 = v6;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v26 = (void *)Strong;
    unint64_t v27 = *(void *)(Strong + OBJC_IVAR____TtC5Files15DOCRenameButton_text + 8);
    if (v27)
    {
      uint64_t v58 = *(void *)(Strong + OBJC_IVAR____TtC5Files15DOCRenameButton_text);
      unint64_t v51 = v27;
    }
    else
    {
      uint64_t v58 = 0;
      unint64_t v51 = 0xE000000000000000;
    }
    id v28 = v9;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v52, enum case for UIButton.Configuration.CornerStyle.dynamic(_:), v10);
    swift_bridgeObjectRetain();
    UIButton.Configuration.cornerStyle.setter();
    uint64_t v29 = self;
    id v30 = [v29 labelColor:v51];
    UIButton.Configuration.baseForegroundColor.setter();
    id v31 = (id)DOCFrameworkBundle();
    id v32 = v26;
    id v33 = [v26 traitCollection];
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v29 colorNamed:v34 inBundle:v31 compatibleWithTraitCollection:v33];

    UIButton.Configuration.baseBackgroundColor.setter();
    id v36 = v56;
    id v37 = [v32 traitCollection];
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t KeyPath = swift_getKeyPath();
    *(&v51 - 2) = __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    id v59 = [self preferredFontForTextStyle:v36 compatibleWithTraitCollection:v37];
    sub_1002DC380();
    AttributedString.subscript.setter();

    uint64_t v39 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v28, 0, 1, v39);
    UIButton.Configuration.attributedTitle.setter();
    uint64_t v40 = swift_unknownObjectWeakLoadStrong();
    if (v40)
    {
      if (*(void *)(*(void *)(v40 + OBJC_IVAR____TtC5Files21DOCPickerFilenameView_pickerContext)
                     + OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave))
      {
        uint64_t v41 = (void *)sub_1000FEFF4();
        [v41 frame];
        CGFloat v43 = v42;
        CGFloat v45 = v44;
        CGFloat v47 = v46;
        CGFloat v49 = v48;

        v60.origin.x = v43;
        v60.origin.y = v45;
        v60.size.width = v47;
        v60.size.height = v49;
        CGRectGetWidth(v60);
      }
      swift_unknownObjectRelease();
    }
    uint64_t v50 = v53;
    NSDirectionalEdgeInsets.by(adding:)();
    UIButton.Configuration.contentInsets.setter();
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v50, v22, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v50, 0, 1, v19);
    UIButton.configuration.setter();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

void sub_10046AA90(void *a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  v19[4] = a7;
  v19[5] = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1000666D8;
  v19[3] = a8;
  uint64_t v15 = _Block_copy(v19);
  id v16 = a1;
  id v17 = a3;
  id v18 = a4;
  swift_unknownObjectRetain();
  swift_release();
  [a5 addAnimations:v15];
  _Block_release(v15);

  swift_unknownObjectRelease();
}

uint64_t sub_10046ABCC()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files15DOCRenameButton_delegate);

  return swift_bridgeObjectRelease();
}

id sub_10046AC20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRenameButton();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCRenameButton()
{
  return self;
}

uint64_t sub_10046ACD8()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10046AD10()
{
  return sub_10046AD20();
}

id sub_10046AD18()
{
  return sub_10046AD20();
}

id sub_10046AD20()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer);
  if (result) {
    return [result setOpacity:];
  }
  return result;
}

void sub_10046AD48(char *a1)
{
  id v2 = [a1 traitCollection];
  id v3 = [v2 userInterfaceStyle];

  uint64_t v4 = *(void **)&a1[OBJC_IVAR____TtC5Files15DOCRenameButton_dimLayer];
  if (v4)
  {
    if (v3 == (id)2) {
      double v5 = 1.0;
    }
    else {
      double v5 = 0.0;
    }
    id v6 = objc_allocWithZone((Class)UIColor);
    id v7 = v4;
    id v8 = [v6 initWithWhite:v5 alpha:0.04];
    id v9 = [v8 CGColor];

    [v7 setBackgroundColor:v9];
  }
}

uint64_t sub_10046AE64(uint64_t a1, uint64_t a2)
{
  double v5 = &v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text];
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC5Files15DOCRenameButton_text + 8];
  *(void *)double v5 = a1;
  *((void *)v5 + 1) = a2;
  uint64_t result = swift_bridgeObjectRetain();
  if (a2)
  {
    if (v6)
    {
      BOOL v9 = v7 == a1 && v6 == a2;
      if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_11;
      }
    }
  }
  else if (!v6)
  {
    return result;
  }
  [v2 setNeedsUpdateConfiguration];
LABEL_11:

  return swift_bridgeObjectRelease();
}

uint64_t sub_10046AF24()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046AF5C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046AF94()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046AFD4(uint64_t a1)
{
  return sub_10046A0FC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10046AFE8()
{
  return 8;
}

uint64_t sub_10046AFF4()
{
  return swift_release();
}

uint64_t sub_10046AFFC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10046B010(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10046B030(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v35 = a1;
  uint64_t v36 = a2;
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_100706748);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  id v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v33 - v17;
  uint64_t v19 = type metadata accessor for UIButton.Configuration();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v40 = a3;
  UIButton.configuration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
    return sub_1000CBBA4((uint64_t)v18, &qword_100706748);
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  if (a4) {
    id v39 = a4;
  }
  else {
    id v39 = v40;
  }
  uint64_t v36 = type metadata accessor for DOCLevelOfDetailButton.Metrics(0);
  uint64_t v24 = *(void **)(v41 + *(int *)(v36 + 20));
  id v25 = a4;
  swift_bridgeObjectRetain();
  if (v24)
  {
    id v34 = v24;
    id v26 = [v39 traitCollection];
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t KeyPath = swift_getKeyPath();
    *(&v33 - 2) = __chkstk_darwin(KeyPath);
    swift_getKeyPath();
    id v28 = self;
    uint64_t v29 = v34;
    id v42 = [v28 preferredFontForTextStyle:v34 compatibleWithTraitCollection:v26];
    sub_1002DC380();
    AttributedString.subscript.setter();

    uint64_t v30 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v12, 0, 1, v30);
    UIButton.Configuration.attributedTitle.setter();
  }
  else
  {
    UIButton.Configuration.title.setter();
  }
  uint64_t v31 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v8, v41, v38);
  UIButton.Configuration.buttonSize.setter();

  UIButton.Configuration.contentInsets.setter();
  if ((*(unsigned char *)(v31 + *(int *)(v36 + 24)) & 1) == 0)
  {
    id v32 = [v39 tintColor];
    UIButton.Configuration.baseForegroundColor.setter();
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v22, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
  UIButton.configuration.setter();

  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

char *sub_10046B55C(void *a1)
{
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext] = 0;
  id v3 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics];
  uint64_t v4 = enum case for UIButton.Configuration.Size.medium(_:);
  uint64_t v5 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  uint64_t v6 = type metadata accessor for DOCLevelOfDetailButton.Metrics(0);
  *(void *)&v3[*(int *)(v6 + 20)] = UIFontTextStyleFootnote;
  v3[*(int *)(v6 + 24)] = 0;
  uint64_t v7 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  swift_unknownObjectWeakAssign();
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for DOCLevelOfDetailButton(0);
  id v8 = UIFontTextStyleFootnote;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v10 = self;
  uint64_t v11 = (char *)v9;
  [v10 itemInfoView];
  swift_getObjCClassMetadata();
  NSString v12 = [(id)swift_getObjCClassFromMetadata() levelOfDetailButton];
  if (!v12)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v11 setAccessibilityIdentifier:v12];

  sub_10046B870();
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();

  swift_release();
  swift_release();

  uint64_t v14 = *(void **)&v11[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext];
  *(void *)&v11[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_observationContext] = v13;

  return v11;
}

void sub_10046B7A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    id v2 = sub_100471A24();
    uint64_t v4 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
    id v5 = *(id *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
    uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8];
    *(void *)uint64_t v4 = v2;
    *((void *)v4 + 1) = v3;
    if (v3)
    {
      if (v6)
      {
        BOOL v7 = v2 == v5 && v6 == v3;
        if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_12;
        }
      }
    }
    else if (!v6)
    {

      return;
    }
    [v1 setNeedsUpdateConfiguration:v5];
    [v1 layoutBelowIfNeeded];
LABEL_12:

    swift_bridgeObjectRelease();
  }
}

void sub_10046B870()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    id v11 = sub_100471A24();
    uint64_t v13 = v12;
  }
  else
  {
    id v11 = 0;
    uint64_t v13 = 0;
  }
  uint64_t v14 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  id v15 = *(id *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle];
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8];
  *(void *)uint64_t v14 = v11;
  *((void *)v14 + 1) = v13;
  if (v13)
  {
    if (v16)
    {
      BOOL v17 = v11 == v15 && v13 == v16;
      if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_14;
      }
    }
    goto LABEL_13;
  }
  if (v16)
  {
LABEL_13:
    [v1 setNeedsUpdateConfiguration:v15];
    [v1 layoutBelowIfNeeded];
LABEL_14:
    swift_bridgeObjectRelease();
  }
  id v18 = &v1[OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics];
  uint64_t v19 = self;

  static UIButton.Configuration.borderless()();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v18, v2);
  UIButton.Configuration.buttonSize.setter();

  uint64_t v20 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 0, 1, v20);
  UIButton.configuration.setter();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_10047D4E0;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  aBlock[3] = &unk_1006AE808;
  uint64_t v22 = _Block_copy(aBlock);
  swift_release();
  [v1 setConfigurationUpdateHandler:v22];
  _Block_release(v22);
  LODWORD(v23) = 1144750080;
  [v1 setContentHuggingPriority:0 forAxis:v23];
  LODWORD(v24) = 1144750080;
  [v1 setContentHuggingPriority:1 forAxis:v24];
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v1 setDoc_primaryAction:v25];
}

void sub_10046BC6C(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = (uint64_t *)(Strong + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle);
    uint64_t v5 = *(void *)(Strong + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_levelOfDetailTitle + 8);
    if (v5)
    {
      uint64_t v6 = *v4;
      uint64_t v7 = v5;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    id v8 = v3;
    sub_10046B030(v6, v7, a1, v3);
    swift_bridgeObjectRelease();
  }
}

void sub_10046BD30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      objc_msgSend(v2, "setLevelOfDetail:", objc_msgSend(v2, "levelOfDetail") == 0);
    }
  }
}

uint64_t sub_10046BE38()
{
  swift_unknownObjectWeakDestroy();

  sub_10047D480(v0 + OBJC_IVAR____TtC5Files22DOCLevelOfDetailButton_metrics, type metadata accessor for DOCLevelOfDetailButton.Metrics);

  return swift_bridgeObjectRelease();
}

id sub_10046BEB0()
{
  return sub_1004714BC(0, (uint64_t (*)(void))type metadata accessor for DOCLevelOfDetailButton);
}

uint64_t sub_10046BF50()
{
  return type metadata accessor for DOCLevelOfDetailButton(0);
}

uint64_t type metadata accessor for DOCLevelOfDetailButton(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100717040);
}

uint64_t sub_10046BF78()
{
  uint64_t result = type metadata accessor for DOCLevelOfDetailButton.Metrics(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCLevelOfDetailButton.Metrics(uint64_t a1)
{
  return sub_10009E984(a1, qword_1007171D8);
}

void sub_10046C044(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a5;
  uint64_t v52 = a4;
  uint64_t v53 = a3;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v49 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  BOOL v17 = (char *)&v46 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v46 - v18;
  sub_1000CBC00(a1, (uint64_t)&v46 - v18, &qword_1007076B0);
  uint64_t v20 = type metadata accessor for URL();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v19, 1, v20) == 1)
  {
    sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
    BOOL v50 = 0;
  }
  else
  {
    BOOL v50 = URL.startAccessingSecurityScopedResource()();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  }
  sub_1000CBC00(a1, (uint64_t)v17, &qword_1007076B0);
  unsigned int v23 = v22(v17, 1, v20);
  swift_unknownObjectRetain();
  if (v23 == 1)
  {
    id v25 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v24);
    id v25 = v26;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
  }
  id v27 = [self pdfMetadataProviderWithNode:a2 levelOfDetail:v53 URL:v25];

  swift_unknownObjectRelease();
  sub_1000CBC00(a1, (uint64_t)v14, &qword_1007076B0);
  unsigned int v28 = v22(v14, 1, v20);
  swift_unknownObjectRetain();
  uint64_t v46 = v21;
  CGFloat v47 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v22;
  uint64_t v48 = v20;
  uint64_t v30 = a6;
  if (v28 == 1)
  {
    uint64_t v31 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v29);
    uint64_t v31 = v32;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v14, v20);
  }
  uint64_t v33 = v51;
  id v34 = self;
  uint64_t v35 = v53;
  id v36 = [v34 imageMetadataProviderWithNode:a2 levelOfDetail:v53 URL:v31];

  swift_unknownObjectRelease();
  uint64_t v37 = sub_1003D451C(a2, v35, a1);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = v33;
  v38[3] = v30;
  v38[4] = v52;
  v38[5] = v27;
  v38[6] = v36;
  v38[7] = v37;
  aBlock[4] = sub_10047CCC4;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006AE470;
  id v39 = _Block_copy(aBlock);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v40 = v27;
  id v41 = v36;
  swift_retain();
  id v42 = v40;
  id v43 = v41;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v39);
  if (v50)
  {
    uint64_t v44 = v49;
    sub_1000CBC00(a1, v49, &qword_1007076B0);
    uint64_t v45 = v48;
    if (v47(v44, 1, v48) == 1)
    {
      swift_bridgeObjectRelease();
      swift_release_n();

      sub_1000CBBA4(v44, &qword_1007076B0);
    }
    else
    {
      URL.stopAccessingSecurityScopedResource()();
      swift_bridgeObjectRelease();
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release_n();
  }
}

uint64_t sub_10046C54C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t countAndFlagsBits = 0;
  unint64_t v13 = 0xE000000000000000;
  switch(a2)
  {
    case 0:
      uint64_t v14 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v14) {
        goto LABEL_95;
      }
      uint64_t v15 = v14;
      unint64_t v16 = 0xD000000000000034;
      unint64_t v90 = 0x80000001005F7950;
      unint64_t v17 = 1684957515;
      goto LABEL_22;
    case 1:
      uint64_t v21 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v21) {
        goto LABEL_92;
      }
      uint64_t v15 = v21;
      unint64_t v17 = 0xD000000000000010;
      unint64_t v16 = 0xD000000000000035;
      unint64_t v90 = 0x80000001005F7910;
      unint64_t v20 = 0x80000001005F78F0;
      uint64_t v22 = 0x617A696C61636F4CLL;
      unint64_t v23 = 0xEB00000000656C62;
      v24.super.Class isa = v15;
      uint64_t v25 = 1702521171;
      unint64_t v26 = 0xE400000000000000;
      goto LABEL_34;
    case 2:
      id v27 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v27) {
        goto LABEL_93;
      }
      uint64_t v15 = v27;
      unint64_t v16 = 0xD000000000000035;
      unint64_t v90 = 0x80000001005F78B0;
      uint64_t v28 = 1919248471;
      goto LABEL_13;
    case 3:
      uint64_t v18 = (objc_class *)(id)_DocumentManagerBundle();
      if (v18)
      {
        uint64_t v15 = v18;
        unint64_t v16 = 0xD00000000000003ELL;
        unint64_t v90 = 0x80000001005F7870;
        unint64_t v17 = 0x64657461657243;
        goto LABEL_32;
      }
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
      goto LABEL_100;
    case 4:
      uint64_t v30 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v30) {
        goto LABEL_96;
      }
      uint64_t v15 = v30;
      unint64_t v16 = 0xD000000000000042;
      unint64_t v90 = 0x80000001005F7820;
      unint64_t v17 = 0x6465696669646F4DLL;
      unint64_t v20 = 0xE800000000000000;
      goto LABEL_33;
    case 5:
      uint64_t v31 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v31) {
        goto LABEL_97;
      }
      uint64_t v15 = v31;
      unint64_t v16 = 0xD000000000000041;
      unint64_t v90 = 0x80000001005F77D0;
      unint64_t v17 = 0x65706F207473614CLL;
      unint64_t v20 = 0xEB0000000064656ELL;
      goto LABEL_33;
    case 6:
      uint64_t v29 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v29) {
        goto LABEL_94;
      }
      uint64_t v15 = v29;
      unint64_t v16 = 0xD000000000000057;
      unint64_t v90 = 0x80000001005F7770;
      unint64_t v17 = 0x74616D726F46;
      unint64_t v20 = 0xE600000000000000;
      goto LABEL_33;
    case 7:
      uint64_t v33 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v33) {
        goto LABEL_99;
      }
      uint64_t v15 = v33;
      unint64_t v16 = 0xD000000000000052;
      unint64_t v90 = 0x80000001005F7710;
      uint64_t v34 = 0x696361706143;
      goto LABEL_25;
    case 8:
      uint64_t v19 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v19) {
        goto LABEL_91;
      }
      uint64_t v15 = v19;
      unint64_t v16 = 0xD000000000000059;
      unint64_t v90 = 0x80000001005F76B0;
      unint64_t v17 = 0x6C62616C69617641;
      goto LABEL_8;
    case 9:
      id v32 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v32) {
        goto LABEL_98;
      }
      uint64_t v15 = v32;
      unint64_t v16 = 0xD000000000000054;
      unint64_t v90 = 0x80000001005F7650;
      unint64_t v17 = 1684370261;
LABEL_22:
      unint64_t v20 = 0xE400000000000000;
      goto LABEL_33;
    case 10:
      return countAndFlagsBits;
    default:
      unint64_t v13 = a4;
      uint64_t v4 = a3;
      uint64_t countAndFlagsBits = a1;
      if (a1 == 0x726F68747541 && a2 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v35 = (objc_class *)(id)_DocumentManagerBundle();
        if (v35)
        {
          uint64_t v15 = v35;
          unint64_t v16 = 0xD000000000000034;
          id v36 = "Label shown in the Info View for the document author";
LABEL_31:
          unint64_t v90 = (unint64_t)(v36 - 32) | 0x8000000000000000;
          unint64_t v17 = 0x73726F68747541;
LABEL_32:
          unint64_t v20 = 0xE700000000000000;
LABEL_33:
          uint64_t v22 = 0x617A696C61636F4CLL;
          unint64_t v23 = 0xEB00000000656C62;
          v24.super.Class isa = v15;
          uint64_t v25 = 0;
          unint64_t v26 = 0xE000000000000000;
LABEL_34:
          uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String *)&v22, v24, *(Swift::String *)&v25, *(Swift::String *)&v16)._countAndFlagsBits;

          return countAndFlagsBits;
        }
LABEL_100:
        __break(1u);
LABEL_101:
        if (countAndFlagsBits == 0x6F69736E656D6944 && a2 == v6 + 1279
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v51 = (objc_class *)(id)_DocumentManagerBundle();
          if (v51)
          {
            uint64_t v15 = v51;
            unint64_t v20 = v6 + 1279;
            unint64_t v90 = 0x80000001005F7340;
            unint64_t v17 = 0x6F69736E656D6944;
            goto LABEL_62;
          }
          __break(1u);
LABEL_167:
          if (countAndFlagsBits == 1701536077 && a2 == 0xE400000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v64 = (objc_class *)(id)_DocumentManagerBundle();
            if (v64)
            {
              uint64_t v15 = v64;
              unint64_t v16 = v5 + 13;
              unint64_t v20 = v10 - 257;
              unint64_t v90 = 0x80000001005F7020;
              unint64_t v17 = 0x6D20656369766544;
              goto LABEL_33;
            }
            goto LABEL_233;
          }
          goto LABEL_173;
        }
        goto LABEL_107;
      }
      if (countAndFlagsBits == 0x7974697275636553 && a2 == 0xE800000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v38 = (objc_class *)(id)_DocumentManagerBundle();
        if (v38)
        {
          uint64_t v15 = v38;
          unint64_t v16 = 0xD000000000000041;
          unint64_t v90 = 0x80000001005F75C0;
          uint64_t v34 = 0x697275636553;
LABEL_25:
          unint64_t v17 = v34 & 0xFFFFFFFFFFFFLL | 0x7974000000000000;
          unint64_t v20 = 0xE800000000000000;
          goto LABEL_33;
        }
        __break(1u);
LABEL_107:
        if (countAndFlagsBits == 0x7265626D754E46 && a2 == 0xE700000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v52 = (objc_class *)(id)_DocumentManagerBundle();
          if (v52)
          {
            uint64_t v15 = v52;
            unint64_t v16 = v5 + 9;
            unint64_t v90 = 0x80000001005F7230;
            uint64_t v53 = 0x626D754E2046;
            goto LABEL_112;
          }
          __break(1u);
LABEL_173:
          if (countAndFlagsBits == 0x6C65646F4DLL && a2 == 0xE500000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            v65 = (objc_class *)(id)_DocumentManagerBundle();
            if (v65)
            {
              uint64_t v15 = v65;
              unint64_t v16 = v5 + 14;
              unint64_t v90 = 0x80000001005F6FD0;
              unint64_t v17 = 0x6D20656369766544;
              unint64_t v20 = 0xEC0000006C65646FLL;
              goto LABEL_33;
            }
            goto LABEL_234;
          }
          goto LABEL_179;
        }
        goto LABEL_114;
      }
      if (countAndFlagsBits == 0x7365676150 && a2 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        id v39 = (objc_class *)(id)_DocumentManagerBundle();
        if (v39)
        {
          uint64_t v15 = v39;
          unint64_t v16 = 0xD000000000000042;
          unint64_t v90 = 0x80000001005F7570;
          unint64_t v17 = 0x7365676150;
          unint64_t v20 = 0xE500000000000000;
          goto LABEL_33;
        }
        __break(1u);
LABEL_114:
        unint64_t v9 = 0x657275736F707845;
        if (countAndFlagsBits == 0x657275736F707845 && a2 == 0xEC000000656D6954
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v54 = (objc_class *)(id)_DocumentManagerBundle();
          if (v54)
          {
            uint64_t v15 = v54;
            unint64_t v16 = v5 + 14;
            unint64_t v90 = 0x80000001005F72F0;
            unint64_t v17 = 0x657275736F707845;
            unsigned int v55 = 1835627552;
            goto LABEL_119;
          }
          __break(1u);
LABEL_179:
          if (countAndFlagsBits == 0x65646F4D736E654CLL && a2 == 0xE90000000000006CLL
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            v66 = (objc_class *)(id)_DocumentManagerBundle();
            if (v66)
            {
              uint64_t v15 = v66;
              unint64_t v16 = v5 - 2;
              unint64_t v20 = v6 - 522;
              unint64_t v90 = 0x80000001005F6F90;
              unint64_t v17 = 0x646F6D20736E654CLL;
              goto LABEL_33;
            }
            goto LABEL_235;
          }
          goto LABEL_185;
        }
LABEL_121:
        if (countAndFlagsBits == v9 && a2 == 0xEF6D6172676F7250
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          id v56 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v56)
          {
            __break(1u);
LABEL_185:
            if (countAndFlagsBits == 0x6F7250726F6C6F43 && a2 == 0xEC000000656C6966
              || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              uint64_t v67 = (objc_class *)(id)_DocumentManagerBundle();
              if (v67)
              {
                uint64_t v15 = v67;
                unint64_t v16 = v5 + 10;
                unint64_t v90 = 0x80000001005F6F40;
                unint64_t v17 = 0x727020726F6C6F43;
                unsigned int v55 = 1818846831;
                goto LABEL_119;
              }
              goto LABEL_236;
            }
            goto LABEL_191;
          }
          uint64_t v15 = v56;
          unint64_t v17 = v5 - 40;
          unint64_t v16 = v5 + 17;
          unint64_t v90 = 0x80000001005F72A0;
          uint64_t v45 = "Exposure program";
LABEL_67:
          unint64_t v20 = (unint64_t)(v45 - 32) | 0x8000000000000000;
          goto LABEL_33;
        }
        goto LABEL_127;
      }
      uint64_t v7 = 0x656C746954;
      if (countAndFlagsBits == 0x656C746954 && a2 == 0xE500000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        id v40 = (objc_class *)(id)_DocumentManagerBundle();
        if (v40)
        {
          uint64_t v15 = v40;
          unint64_t v16 = 0xD000000000000033;
          id v41 = "Label shown in the Info View for the document title";
          goto LABEL_51;
        }
        __break(1u);
        goto LABEL_121;
      }
      if (countAndFlagsBits == 0x6E6F6973726556 && a2 == 0xE700000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        id v42 = (objc_class *)(id)_DocumentManagerBundle();
        if (v42)
        {
          uint64_t v15 = v42;
          unint64_t v16 = 0xD00000000000003CLL;
          unint64_t v90 = 0x80000001005F74F0;
          unint64_t v17 = 0x6E6F6973726556;
          goto LABEL_32;
        }
        __break(1u);
LABEL_127:
        unint64_t v9 = 0xEC00000065646F4DLL;
        if (countAndFlagsBits == 0x676E69726574654DLL && a2 == 0xEC00000065646F4DLL
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v57 = (objc_class *)(id)_DocumentManagerBundle();
          if (v57)
          {
            uint64_t v15 = v57;
            unint64_t v16 = v5 + 9;
            unint64_t v90 = 0x80000001005F7230;
            unint64_t v17 = 0x676E69726574654DLL;
            unsigned int v55 = 1685024032;
            goto LABEL_119;
          }
          __break(1u);
LABEL_191:
          if (countAndFlagsBits == 0x617053726F6C6F43 && a2 == v6 - 2316
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v68 = (objc_class *)(id)_DocumentManagerBundle();
            if (v68)
            {
              uint64_t v15 = v68;
              unint64_t v16 = v5 + 8;
              unint64_t v20 = v10 - 2305;
              unint64_t v90 = 0x80000001005F6EF0;
              unint64_t v17 = 0x707320726F6C6F43;
              goto LABEL_33;
            }
            goto LABEL_237;
          }
          goto LABEL_197;
        }
        goto LABEL_133;
      }
      unint64_t v6 = 0xEA00000000006E6FLL;
      if (countAndFlagsBits == 0x6974756C6F736552 && a2 == 0xEA00000000006E6FLL
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        id v43 = (objc_class *)(id)_DocumentManagerBundle();
        if (v43)
        {
          uint64_t v15 = v43;
          unint64_t v90 = 0x80000001005F74B0;
          unint64_t v17 = 0x6974756C6F736552;
          unint64_t v20 = 0xEA00000000006E6FLL;
LABEL_62:
          uint64_t v22 = 0x617A696C61636F4CLL;
          unint64_t v23 = 0xEB00000000656C62;
          v24.super.Class isa = v15;
          uint64_t v25 = 0;
          unint64_t v26 = 0xE000000000000000;
          unint64_t v16 = 0xD000000000000038;
          goto LABEL_34;
        }
        __break(1u);
LABEL_133:
        if (countAndFlagsBits == 0x6572757472657041 && a2 == 0xED000065756C6156
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v58 = (objc_class *)(id)_DocumentManagerBundle();
          if (v58)
          {
            uint64_t v15 = v58;
            unint64_t v16 = v5 + 15;
            unint64_t v90 = 0x80000001005F71E0;
            unint64_t v17 = 0x6572757472657041;
            unint64_t v20 = 0xEE0065756C617620;
            goto LABEL_33;
          }
          __break(1u);
LABEL_197:
          if (countAndFlagsBits == 0x6E6F697461727544 && a2 == 0xE800000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v69 = (objc_class *)(id)_DocumentManagerBundle();
            if (v69)
            {
              uint64_t v15 = v69;
              unint64_t v16 = v5 + 2;
              unint64_t v90 = 0x80000001005F6EB0;
              unint64_t v17 = 0x6E6F697461727544;
              unint64_t v20 = 0xE800000000000000;
              goto LABEL_33;
            }
            goto LABEL_238;
          }
          goto LABEL_203;
        }
        goto LABEL_139;
      }
      if (countAndFlagsBits != 0x72656375646F7250 || a2 != 0xE800000000000000)
      {
        unint64_t v5 = 0x6572617774666F73;
        unint64_t v8 = 0xE800000000000000;
        char v46 = _stringCompareWithSmolCheck(_:_:expecting:)();
        BOOL v47 = countAndFlagsBits == 0x6572617774666F73 && a2 == 0xE800000000000000;
        BOOL v48 = v47;
        if ((v46 & 1) == 0 && !v48 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          unint64_t v8 = 0x726F7461657243;
          if (countAndFlagsBits == 0x726F7461657243 && a2 == 0xE700000000000000
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
            || countAndFlagsBits == 0x54726F7461657243 && a2 == 0xEB000000006C6F6FLL
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v49 = (objc_class *)(id)_DocumentManagerBundle();
            if (v49)
            {
              uint64_t v15 = v49;
              unint64_t v16 = 0xD000000000000049;
              unint64_t v90 = 0x80000001005F73F0;
              unint64_t v17 = 0x20746E65746E6F43;
              unint64_t v20 = 0xEF726F7461657243;
              goto LABEL_33;
            }
            __break(1u);
            goto LABEL_150;
          }
          unint64_t v5 = 0xD000000000000038;
          if (countAndFlagsBits == 0xD000000000000011 && a2 == 0x80000001005F6B70
            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            BOOL v50 = (objc_class *)(id)_DocumentManagerBundle();
            if (v50)
            {
              uint64_t v15 = v50;
              unint64_t v17 = 0xD000000000000013;
              unint64_t v16 = 0xD00000000000004BLL;
              unint64_t v90 = 0x80000001005F73A0;
              uint64_t v45 = "Digital Source Type";
              goto LABEL_67;
            }
            __break(1u);
            goto LABEL_161;
          }
          goto LABEL_101;
        }
      }
      uint64_t v44 = (objc_class *)(id)_DocumentManagerBundle();
      if (v44)
      {
        uint64_t v15 = v44;
        unint64_t v17 = 0xD000000000000011;
        unint64_t v16 = 0xD000000000000049;
        unint64_t v90 = 0x80000001005F7460;
        uint64_t v45 = "Encoding software";
        goto LABEL_67;
      }
      __break(1u);
LABEL_139:
      if ((countAndFlagsBits != 0x64656570534F5349 || a2 != 0xE800000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (countAndFlagsBits == 0x6C61426574696857 && a2 == 0xEC00000065636E61
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          CGRect v60 = (objc_class *)(id)_DocumentManagerBundle();
          if (v60)
          {
            uint64_t v15 = v60;
            unint64_t v16 = v5 + 20;
            unint64_t v90 = 0x80000001005F7140;
            unint64_t v17 = 0x6162206574696857;
            unsigned int v55 = 1668178284;
            goto LABEL_119;
          }
          __break(1u);
          goto LABEL_209;
        }
LABEL_150:
        if (countAndFlagsBits == 0x6E654C6C61636F46 && a2 == 0xEB00000000687467
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          v61 = (objc_class *)(id)_DocumentManagerBundle();
          if (v61)
          {
            uint64_t v15 = v61;
            unint64_t v16 = v5 + 19;
            unint64_t v90 = 0x80000001005F70F0;
            unint64_t v17 = 0x656C206C61636F46;
            unint64_t v20 = 0xEC0000006874676ELL;
            goto LABEL_33;
          }
          __break(1u);
          goto LABEL_214;
        }
        if (countAndFlagsBits == 0x6465526873616C46 && a2 == 0xEB00000000657945
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          unsigned int v62 = (objc_class *)(id)_DocumentManagerBundle();
          if (v62)
          {
            uint64_t v15 = v62;
            unint64_t v90 = 0x80000001005F70B0;
            unint64_t v17 = 0x65796520646552;
            unint64_t v20 = 0xE700000000000000;
            goto LABEL_62;
          }
          __break(1u);
          goto LABEL_232;
        }
LABEL_161:
        unint64_t v10 = 0xEB00000000656C62;
        if ((countAndFlagsBits != 0x6873616C46 || a2 != 0xE500000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          goto LABEL_167;
        }
        v63 = (objc_class *)(id)_DocumentManagerBundle();
        if (v63)
        {
          uint64_t v15 = v63;
          unint64_t v90 = 0x80000001005F7070;
          unint64_t v17 = 0x6873616C46;
          unint64_t v20 = 0xE500000000000000;
          goto LABEL_62;
        }
LABEL_232:
        __break(1u);
LABEL_233:
        __break(1u);
LABEL_234:
        __break(1u);
LABEL_235:
        __break(1u);
LABEL_236:
        __break(1u);
LABEL_237:
        __break(1u);
LABEL_238:
        __break(1u);
LABEL_239:
        __break(1u);
LABEL_240:
        __break(1u);
        goto LABEL_241;
      }
      id v59 = (objc_class *)(id)_DocumentManagerBundle();
      if (v59)
      {
        uint64_t v15 = v59;
        unint64_t v16 = v5 + 16;
        unint64_t v20 = 0xE900000000000064;
        unint64_t v90 = 0x80000001005F7190;
        unint64_t v17 = 0x65657073204F5349;
        goto LABEL_33;
      }
      __break(1u);
LABEL_203:
      if (countAndFlagsBits == 0x736365646F43 && a2 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v70 = (objc_class *)(id)_DocumentManagerBundle();
        if (v70)
        {
          uint64_t v15 = v70;
          unint64_t v16 = v5 + 12;
          unint64_t v90 = 0x80000001005F6E60;
          unint64_t v17 = 0x736365646F43;
          unint64_t v20 = 0xE600000000000000;
          goto LABEL_33;
        }
        goto LABEL_239;
      }
LABEL_209:
      if (countAndFlagsBits == 0x746974614C535047 && a2 == v10 - 2029) {
        goto LABEL_211;
      }
LABEL_214:
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL v74 = countAndFlagsBits == 0x656475746974616CLL && a2 == 0xE800000000000000;
      if (v72 & 1) != 0 || v74 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      {
LABEL_211:
        uint64_t v71 = (objc_class *)(id)_DocumentManagerBundle();
        if (v71)
        {
          uint64_t v15 = v71;
          unint64_t v17 = 0x656475746974614CLL;
          unint64_t v16 = v5 + 6;
          unint64_t v90 = 0x80000001005F6E20;
          unint64_t v20 = 0xE800000000000000;
          goto LABEL_33;
        }
        goto LABEL_240;
      }
      if (countAndFlagsBits == 0x69676E6F4C535047 && a2 == v9 + 1575
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0
        || countAndFlagsBits == 0x64757469676E6F6CLL && a2 == 0xE900000000000065
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        v75 = (objc_class *)(id)_DocumentManagerBundle();
        if (v75)
        {
          uint64_t v15 = v75;
          unint64_t v17 = 0x64757469676E6F4CLL;
          unint64_t v16 = v5 + 7;
          unint64_t v90 = 0x80000001005F6DE0;
LABEL_8:
          unint64_t v20 = 0xE900000000000065;
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_247;
      }
LABEL_241:
      if ((countAndFlagsBits != v7 + 32 || a2 != 0xE500000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
LABEL_247:
        if ((countAndFlagsBits != v8 + 32 || a2 != 0xE700000000000000)
          && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          goto LABEL_253;
        }
        v77 = (objc_class *)(id)_DocumentManagerBundle();
        if (!v77)
        {
          __break(1u);
LABEL_259:
          if ((countAndFlagsBits != 1701869940 || a2 != 0xE400000000000000)
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            goto LABEL_265;
          }
          v79 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v79)
          {
            __break(1u);
            goto LABEL_271;
          }
          uint64_t v15 = v79;
          unint64_t v16 = v5 + 7;
          unint64_t v90 = 0x80000001005F6CE0;
          unint64_t v17 = 0x206C61636973754DLL;
          unsigned int v55 = 1919837543;
LABEL_119:
          unint64_t v20 = v55 | 0xED00006500000000;
          goto LABEL_33;
        }
        uint64_t v15 = v77;
        unint64_t v16 = v5 + 2;
        unint64_t v90 = 0x80000001005F6D60;
        uint64_t v53 = 0x736F706D6F43;
LABEL_112:
        unint64_t v17 = v53 & 0xFFFFFFFFFFFFLL | 0x7265000000000000;
        unint64_t v20 = 0xE800000000000000;
        goto LABEL_33;
      }
      v76 = (objc_class *)(id)_DocumentManagerBundle();
      if (v76)
      {
        uint64_t v15 = v76;
        unint64_t v16 = v5 - 1;
        id v41 = "Label shown in the Info View for the Title of the media";
LABEL_51:
        unint64_t v90 = (unint64_t)(v41 - 32) | 0x8000000000000000;
        uint64_t v28 = 1819568468;
LABEL_13:
        unint64_t v17 = v28 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
        unint64_t v20 = 0xE500000000000000;
        goto LABEL_33;
      }
      __break(1u);
LABEL_253:
      if ((countAndFlagsBits != 0x6867697279706F63 || a2 != v6 + 1285)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        goto LABEL_259;
      }
      v78 = (objc_class *)(id)_DocumentManagerBundle();
      if (v78)
      {
        uint64_t v15 = v78;
        unint64_t v17 = 0x6867697279706F43;
        unint64_t v16 = v5 + 3;
        unint64_t v20 = 0xE900000000000074;
        unint64_t v90 = 0x80000001005F6D20;
        goto LABEL_33;
      }
      __break(1u);
LABEL_265:
      if (countAndFlagsBits == 0x747369747261 && a2 == 0xE600000000000000
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        v80 = (objc_class *)(id)_DocumentManagerBundle();
        if (v80)
        {
          uint64_t v15 = v80;
          unint64_t v16 = v5 + 1;
          id v36 = "Label shown in the Info View for the Authors of the media";
          goto LABEL_31;
        }
        __break(1u);
        goto LABEL_277;
      }
LABEL_271:
      if (countAndFlagsBits == 0x6D614E6D75626C61 && a2 == 0xE900000000000065
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        v81 = (objc_class *)(id)_DocumentManagerBundle();
        if (v81)
        {
          uint64_t v15 = v81;
          unint64_t v16 = v5 + 5;
          unint64_t v90 = 0x80000001005F6C60;
          unint64_t v17 = 0x6D75626C41;
          unint64_t v20 = 0xE500000000000000;
          goto LABEL_33;
        }
        __break(1u);
        goto LABEL_283;
      }
LABEL_277:
      if ((countAndFlagsBits != 0x6168706C41736168 || a2 != 0xE800000000000000)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
LABEL_283:
        if (countAndFlagsBits == 0x746964657243 && a2 == 0xE600000000000000
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          v83 = (objc_class *)(id)_DocumentManagerBundle();
          if (!v83)
          {
            __break(1u);
            JUMPOUT(0x10046E0BCLL);
          }
          uint64_t v15 = v83;
          unint64_t v16 = v5 - 1;
          unint64_t v90 = 0x80000001005F6BE0;
          unint64_t v17 = 0x746964657243;
          unint64_t v20 = 0xE600000000000000;
          goto LABEL_33;
        }
        goto LABEL_289;
      }
      v82 = (objc_class *)(id)_DocumentManagerBundle();
      if (v82)
      {
        uint64_t v15 = v82;
        unint64_t v16 = v5 + 6;
        unint64_t v90 = 0x80000001005F6C20;
        unint64_t v17 = 0x6843206168706C41;
        unint64_t v20 = 0xED00006C656E6E61;
        goto LABEL_33;
      }
      __break(1u);
LABEL_289:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v84 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v85 = swift_allocObject();
      uint64_t v86 = sub_10049B9E8(v85, 2);
      v88 = v87;
      v87[3] = (uint64_t)&type metadata for String;
      unint64_t v89 = sub_100073F48();
      uint64_t *v88 = countAndFlagsBits;
      v88[1] = a2;
      v88[8] = (uint64_t)&type metadata for String;
      v88[9] = v89;
      v88[4] = v89;
      v88[5] = v4;
      v88[6] = v13;
      DOCSplitBrowserViewController.didCommitPreview(of:)(v86);
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return countAndFlagsBits;
  }
}

Swift::Int sub_10046E0E8(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1005202E4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100474DFC(v6);
  *a1 = v3;
  return result;
}

void sub_10046E190()
{
  qword_1007375C8 = (uint64_t)&off_10068A458;
}

void sub_10046E1A4()
{
  qword_1007375D0 = (uint64_t)&off_10068A5D8;
}

id sub_10046E1B8(uint64_t a1, unint64_t a2)
{
  if (a2 <= 9 && ((1 << a2) & 0x382) != 0)
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v3 = result;
      unint64_t v4 = 0xD00000000000004DLL;
      unint64_t v10 = 0x80000001005F6400;
      unint64_t v5 = 0x80000001005F63E0;
      unint64_t v6 = 0xD000000000000010;
LABEL_5:
      v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v7._object = (void *)0xEB00000000656C62;
      v8._uint64_t countAndFlagsBits = 0;
      v8._object = (void *)0xE000000000000000;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v7, (NSBundle)v3, v8, *(Swift::String *)&v4)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  else
  {
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v3 = result;
      unint64_t v4 = 0xD000000000000059;
      unint64_t v10 = 0x80000001005F7BB0;
      unint64_t v6 = 0x74616C75636C6143;
      unint64_t v5 = 0xAE00A680E2676E69;
      goto LABEL_5;
    }
  }
  __break(1u);
  return result;
}

void sub_10046E2F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  id v16 = [self defaultManager];
  id v17 = [a1 itemID];
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = a6;
  v18[8] = a7;
  v18[9] = a8;
  v21[4] = sub_10047D30C;
  v21[5] = v18;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  v21[2] = sub_10016A350;
  v21[3] = &unk_1006AE740;
  uint64_t v19 = _Block_copy(v21);
  id v20 = a1;
  swift_retain();
  sub_10047CDB0(a5, a6);
  swift_release();
  [v16 fetchParentsForItemID:v17 recursively:1 completionHandler:v19];
  _Block_release(v19);
}

uint64_t sub_10046E474(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    uint64_t v11 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10059B760;
    *(void *)(v12 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v12 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v12 + 32) = a3;
    id v13 = a3;
    uint64_t v14 = _convertErrorToNSError(_:)();
    *(void *)(v12 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v12 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v12 + 72) = v14;
    os_log(_:dso:log:type:_:)();

LABEL_3:
    return swift_bridgeObjectRelease();
  }
  if (!a1)
  {
    NSBundle v24 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1005A0030;
    *(void *)(v25 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v25 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v25 + 32) = a3;
    id v26 = a3;
    os_log(_:dso:log:type:_:)();

    goto LABEL_3;
  }
  id v20 = self;
  id v29 = 0;
  id v21 = a3;
  id v22 = [v20 providerDomainForItem:v21 cachePolicy:3 error:&v29];
  id v23 = v29;
  if (v22)
  {
  }
  else
  {
    id v27 = v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = a5;
  v28[3] = a6;
  v28[4] = a7;
  v28[5] = a8;
  v28[6] = a9;
  v28[7] = a10;
  swift_retain();
  sub_10047CDB0(a7, a8);
  FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)();

  return swift_release();
}

void sub_10046E824(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  uint64_t v33 = a7;
  uint64_t v34 = a3;
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  unint64_t v35 = a4;
  uint64_t v8 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCFolderSize();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = swift_projectBox();
  sub_1000CBC00(a1, (uint64_t)v13, &qword_100717230);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, &qword_100717230);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v20 = (void *)Strong;
      swift_beginAccess();
      id v21 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v23 = [v21 initWithString:v22];

      sub_100472E50(v34, v35, v36, v37, v23, 0, 0, 0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    swift_beginAccess();
    uint64_t v24 = v18 + *(int *)(v8 + 24);
    sub_1000CBBA4(v24, &qword_100717230);
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v24, v17, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
    swift_beginAccess();
    uint64_t v25 = swift_unknownObjectWeakLoadStrong();
    if (v25)
    {
      id v26 = (void *)v25;
      swift_beginAccess();
      sub_100465FA8(v18, (uint64_t)v10);
      DOCMetadataFolderSizingViewModel.sizeText.getter();
      uint64_t v33 = v17;
      sub_10047D480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCMetadataFolderSizingViewModel);
      id v27 = objc_allocWithZone((Class)NSAttributedString);
      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v29 = [v27 initWithString:v28];

      swift_beginAccess();
      sub_100465FA8(v18, (uint64_t)v10);
      LOBYTE(v28) = DOCMetadataFolderSizingViewModel.shouldGrayTextOut.getter();
      sub_10047D480((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCMetadataFolderSizingViewModel);
      id v17 = v33;
      sub_100472E50(v34, v35, v36, v37, v29, 0, 0, v28 & 1);
    }
    swift_beginAccess();
    uint64_t v30 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v30)
    {
      id v31 = v30;
      sub_1004797F0((uint64_t)v31, (uint64_t)v31);
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

void sub_10046EC9C(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_100717230);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v10, &qword_100717230);
  uint64_t v11 = type metadata accessor for DOCFolderSize();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000CBBA4((uint64_t)v10, &qword_100717230);
LABEL_6:
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = 0;
    goto LABEL_7;
  }
  uint64_t v13 = DOCFolderSize.logicalBytes.getter();
  char v15 = v14;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  if (v15) {
    goto LABEL_6;
  }
  swift_beginAccess();
  if (!__OFADD__(*(void *)(a2 + 16), v13))
  {
    *(void *)(a2 + 16) += v13;
LABEL_7:
    dispatch_group_leave(a4);
    return;
  }
  __break(1u);
}

void sub_10046EE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    char v15 = self;
    swift_beginAccess();
    id v16 = [v15 stringFromByteCount:*(void *)(a3 + 16) countStyle:0];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    swift_beginAccess();
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v19;
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v21 = (void *)Strong;
    swift_beginAccess();
    id v22 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v24 = [v22 initWithString:v23];

    sub_100472E50(a5, a6, a7, a8, v24, 0, 0, 0);
  }
}

void sub_10046EFF0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v16 = (void *)Strong;
    sub_100472E50(a7, a8, a9, a10, a3, a4, a5, 0);
  }
}

void sub_10046F088(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v34[1] = a7;
  uint64_t v35 = a3;
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  unint64_t v36 = a4;
  uint64_t v8 = type metadata accessor for DOCDiskProperties.Size();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_100717220);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DOCDiskProperties();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v14, (uint64_t *)&unk_100717220);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_100717220);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v20 = (void *)Strong;
      swift_beginAccess();
      id v21 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v23 = [v21 initWithString:v22];

      sub_100472E50(v35, v36, v37, v38, v23, 0, 0, 0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    id v24 = self;
    DOCDiskProperties.size.getter();
    uint64_t v25 = DOCDiskProperties.Size.totalSpace.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v25 < 0)
    {
      __break(1u);
    }
    else
    {
      id v26 = [v24 stringFromByteCount:v25 countStyle:0];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      uint64_t v27 = swift_unknownObjectWeakLoadStrong();
      if (v27)
      {
        NSString v28 = (void *)v27;
        id v29 = v18;
        id v30 = objc_allocWithZone((Class)NSAttributedString);
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v32 = v30;
        uint64_t v18 = v29;
        id v33 = [v32 initWithString:v31];

        sub_100472E50(v35, v36, v37, v38, v33, 0, 0, 0);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
  }
}

void sub_10046F474(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v57 = a5;
  uint64_t v58 = a6;
  uint64_t v55 = a3;
  unint64_t v56 = a4;
  uint64_t v7 = type metadata accessor for DOCDiskProperties.Size();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100717220);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCDiskProperties();
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v15;
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  sub_1000CBC00(v19, (uint64_t)v13, (uint64_t *)&unk_100717220);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v13, 1, v18) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_100717220);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v23 = (void *)Strong;
      swift_beginAccess();
      id v24 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v25 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v26 = [v24 initWithString:v25];

      sub_100472E50(v55, v56, v57, v58, v26, 0, 0, 0);
    }
    return;
  }
  uint64_t v54 = v21;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v17, v13, v18);
  uint64_t v27 = self;
  DOCDiskProperties.size.getter();
  uint64_t v28 = DOCDiskProperties.Size.availableSpace.getter();
  id v29 = *(void (**)(char *, uint64_t))(v8 + 8);
  v29(v10, v7);
  if (v28 < 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v53 = v18;
  id v30 = [v27 stringFromByteCount:v28 countStyle:0];
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v32;

  DOCDiskProperties.size.getter();
  uint64_t v33 = DOCDiskProperties.Size.purgeableSpace.getter();
  v29(v10, v7);
  if (v33 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v34 = [v27 stringFromByteCount:v33 countStyle:0];
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  id v38 = (id)_DocumentManagerBundle();
  if (!v38)
  {
LABEL_14:
    __break(1u);
    return;
  }
  id v39 = v38;
  v59._uint64_t countAndFlagsBits = 0xD000000000000059;
  v59._object = (void *)0x80000001005F7AF0;
  v40._object = (void *)0x80000001005F7AD0;
  v40._uint64_t countAndFlagsBits = 0xD000000000000011;
  v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v41._object = (void *)0xEB00000000656C62;
  v42._uint64_t countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v59);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_10059B760;
  *(void *)(v43 + 56) = &type metadata for String;
  unint64_t v44 = sub_100073F48();
  uint64_t v45 = v52;
  *(void *)(v43 + 32) = v31;
  *(void *)(v43 + 40) = v45;
  *(void *)(v43 + 96) = &type metadata for String;
  *(void *)(v43 + 104) = v44;
  *(void *)(v43 + 64) = v44;
  *(void *)(v43 + 72) = v35;
  *(void *)(v43 + 80) = v37;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v46 = swift_unknownObjectWeakLoadStrong();
  if (v46)
  {
    BOOL v47 = (void *)v46;
    id v48 = objc_allocWithZone((Class)NSAttributedString);
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v50 = [v48 initWithString:v49];

    sub_100472E50(v55, v56, v57, v58, v50, 0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v53);
}

void sub_10046F9C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v55 = a5;
  uint64_t v56 = a6;
  uint64_t v53 = a3;
  unint64_t v54 = a4;
  uint64_t v7 = type metadata accessor for DOCDiskProperties.Size();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100717220);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCDiskProperties();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_1000CBC00(a1, (uint64_t)v13, (uint64_t *)&unk_100717220);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v20) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_100717220);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      NSString v22 = (void *)Strong;
      swift_beginAccess();
      id v23 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v25 = [v23 initWithString:v24];

      sub_100472E50(v53, v54, v55, v56, v25, 0, 0, 0);
    }
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v13, v20);
  DOCDiskProperties.size.getter();
  uint64_t v26 = DOCDiskProperties.Size.usedSpace.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v26 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v50 = v18;
  uint64_t v51 = v20;
  id v27 = [objc_allocWithZone((Class)NSByteCountFormatter) init];
  [v27 setAllowedUnits:1];
  id v28 = [v27 stringFromByteCount:v26];
  uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  id v31 = [self stringFromByteCount:v26 countStyle:0];
  uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v34 = v33;

  id v35 = (id)_DocumentManagerBundle();
  if (!v35)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v36 = v35;
  v57._object = (void *)0x80000001005F7B50;
  v37._uint64_t countAndFlagsBits = 0x6F204025280A4025;
  v37._object = (void *)0xEF296B736964206ELL;
  v38._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v38._object = (void *)0xEB00000000656C62;
  v39._uint64_t countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v57._uint64_t countAndFlagsBits = 0xD000000000000054;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v57);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_10059B760;
  *(void *)(v40 + 56) = &type metadata for String;
  unint64_t v41 = sub_100073F48();
  *(void *)(v40 + 32) = v52;
  *(void *)(v40 + 40) = v30;
  *(void *)(v40 + 96) = &type metadata for String;
  *(void *)(v40 + 104) = v41;
  *(void *)(v40 + 64) = v41;
  *(void *)(v40 + 72) = v32;
  *(void *)(v40 + 80) = v34;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v42 = swift_unknownObjectWeakLoadStrong();
  if (v42)
  {
    uint64_t v43 = (void *)v42;
    id v44 = objc_allocWithZone((Class)NSAttributedString);
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v46 = [v44 initWithString:v45];

    sub_100472E50(v53, v54, v55, v56, v46, 0, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v48 = v50;
  uint64_t v47 = v51;

  (*(void (**)(char *, uint64_t))(v48 + 8))(v16, v47);
}

uint64_t sub_10046FF0C(uint64_t *a1, uint64_t a2)
{
  return sub_100476338(*a1, a1[1], a1[2], a1[3], *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

void *sub_10046FF28@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_10046FF48()
{
  sub_100470214();
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail);
  char v2 = (char *)DOCViewDecorator.content.getter();
  uint64_t v3 = OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy;
  int v4 = v2[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy];
  v2[OBJC_IVAR____TtC5Files16DOCCopyableLabel_supportsCopy] = v1;
  uint64_t v8 = v2;
  if (v1 == v4)
  {
    swift_release();
    uint64_t v7 = v8;
  }
  else
  {
    [v2 setUserInteractionEnabled:v1];
    unint64_t v5 = sub_100222E74();
    char v6 = v5[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled];
    v5[OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled] = v8[v3];
    sub_1004DF730(v6);
    swift_release();

    uint64_t v7 = v5;
  }
}

id sub_100470020()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint;
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint);
  }
  else
  {
    id v4 = sub_1004700CC();
    id v5 = [v4 widthAnchor];

    id v6 = [v5 constraintEqualToConstant:*(double *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth)];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    char v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1004700CC()
{
  return sub_1004706E0(&OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___label, (uint64_t (*)(uint64_t))sub_1004700EC);
}

id sub_1004700EC(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  [v2 setNumberOfLines:0];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont)];
  [v2 setTextAlignment:0];
  id v3 = [self secondaryLabelColor];
  [v2 setTextColor:v3];

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v4) = 1144750080;
  [v2 setContentHuggingPriority:0 forAxis:v4];
  LODWORD(v5) = 1144750080;
  [v2 setContentCompressionResistancePriority:1 forAxis:v5];
  return v2;
}

uint64_t sub_100470214()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value);
  }
  else
  {
    uint64_t v2 = sub_10047027C(v0);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10047027C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCVibrancy.Style.Weight();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100710C50);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCCopyableLabel();
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v9 setNumberOfLines:0];
  [v9 setAdjustsFontForContentSizeCategory:1];
  [v9 setFont:*(void *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont)];
  [v9 setTextAlignment:2];
  id v10 = [self labelColor];
  sub_1002235E8(v10);

  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v11) = 1132068864;
  [v9 setContentCompressionResistancePriority:0 forAxis:v11];
  if (static DOCVibrancy.featureEnabled.getter())
  {
    int v13 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink);
    LODWORD(v12) = 1148846080;
    [v9 setContentHuggingPriority:0 forAxis:v12];
    if (v13 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DOCVibrancy.Style.Weight.primary(_:), v2);
      id v14 = v9;
      static DOCVibrancy.Style.stroke(_:)();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v15 = type metadata accessor for DOCVibrancy.Style();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 0, 1, v15);
      sub_1000CBE70((uint64_t *)&unk_100717250);
      swift_allocObject();
      uint64_t v16 = DOCViewDecorator.init(_:wrappedForVibrancy:)();
      [v14 contentCompressionResistancePriorityForAxis:0];
      int v18 = v17;
      uint64_t v19 = (void *)DOCViewDecorator.embeddable.getter();
      LODWORD(v20) = v18;
      [v19 setContentCompressionResistancePriority:0 forAxis:v20];

      return v16;
    }
  }
  else
  {
    LODWORD(v12) = 1148846080;
    [v9 setContentHuggingPriority:0 forAxis:v12];
  }
  sub_1000CBE70((uint64_t *)&unk_100717250);
  swift_allocObject();
  return DOCViewDecorator.init(contentWithoutWrapping:)();
}

id sub_1004705CC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v4 widthAnchor];
    id v6 = [v5 constraintEqualToConstant:24.0];

    [v6 setActive:1];
    uint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1004706C0()
{
  return sub_1004706E0(&OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___stackView, (uint64_t (*)(uint64_t))sub_100470744);
}

id sub_1004706E0(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100470744(uint64_t a1)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A00D0;
  *(void *)(v2 + 32) = sub_1004700CC();
  *(void *)(v2 + 40) = sub_1004705CC();
  sub_100470214();
  uint64_t v3 = DOCViewDecorator.embeddable.getter();
  swift_release();
  *(void *)(v2 + 48) = v3;
  specialized Array._endMutation()();
  id v4 = objc_allocWithZone((Class)UIStackView);
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithArrangedSubviews:isa];

  [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v6 setLayoutMarginsRelativeArrangement:1];
  [v6 setLayoutMargins:*(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 8), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 16), *(double *)(a1 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 24)];
  [v6 setAxis:0];
  [v6 setSpacing:0.0];
  [v6 setAlignment:2];
  return v6;
}

id sub_1004708C4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, double a5, double a6, double a7, double a8)
{
  id v9 = v8;
  swift_getObjectType();
  int v18 = &v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics];
  *(_OWORD *)int v18 = xmmword_1005A5280;
  *((void *)v18 + 2) = 0x4020000000000000;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *((void *)v18 + 7) = 0;
  uint64_t v19 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataFont;
  double v20 = self;
  uint64_t v21 = v9;
  *(void *)&v9[v19] = [v20 preferredFontForTextStyle:UIFontTextStyleFootnote];
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden] = 1;
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail] = 0;
  uint64_t v22 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink;
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink] = 0;
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] = 0;
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment] = 1;
  uint64_t v23 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator;
  v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___columnWidthConstraint] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___label] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___value] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___spacerView] = 0;
  *(void *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow____lazy_storage___stackView] = 0;
  NSString v24 = (uint64_t *)&v21[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  *NSString v24 = a1;
  v24[1] = a2;
  v24[2] = a3;
  v24[3] = a4;
  v21[v23] = 1;
  v21[v22] = a2 == 2;
  sub_10047CDB0(a1, a2);

  v62.receiver = v21;
  v62.super_class = (Class)type metadata accessor for DOCMetadataKeyValueRow();
  id v25 = [super initWithFrame:a5, a6, a7, a8];
  uint64_t v26 = self;
  id v27 = v25;
  [v26 itemInfoView];
  swift_getObjCClassMetadata();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  sub_10046C54C(a1, a2, a3, a4);
  sub_10047CDF8(a1, a2);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v30 = [ObjCClassFromMetadata metadataRowWithLabel:v29];

  if (!v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v27 setAccessibilityIdentifier:v30];

  id v31 = self;
  id v32 = v27;
  id v33 = [v31 clearColor];
  [v32 setBackgroundColor:v33];

  id v34 = v32;
  id v35 = sub_1004706C0();
  [v34 addSubview:v35];

  uint64_t v36 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1005A00C0;
  id v38 = sub_1004706C0();
  id v39 = [v38 widthAnchor];

  id v40 = [v34 widthAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 multiplier:1.0];

  *(void *)(v37 + 32) = v41;
  id v42 = sub_1004706C0();
  id v43 = [v42 topAnchor];

  id v44 = [v34 topAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  *(void *)(v37 + 40) = v45;
  id v46 = sub_1004706C0();
  id v47 = [v46 bottomAnchor];

  id v48 = [v34 bottomAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  *(void *)(v37 + 48) = v49;
  id v50 = sub_1004706C0();
  id v51 = [v50 leadingAnchor];

  id v52 = [v34 leadingAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  *(void *)(v37 + 56) = v53;
  id v54 = sub_1004706C0();
  id v55 = [v54 trailingAnchor];

  id v56 = [v34 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  *(void *)(v37 + 64) = v57;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 activateConstraints:isa];

  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1005A0030;
  *(void *)(v59 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v59 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v60 = v34;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v60;
}

void sub_100470F44(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  c = UIGraphicsGetCurrentContext();
  if (c)
  {
    id v9 = self;
    id v10 = [v9 clearColor];
    double v11 = (CGColor *)[v10 CGColor];

    CGContextSetFillColorWithColor(c, v11);
    v18.origin.x = a1;
    v18.origin.y = a2;
    v18.size.width = a3;
    v18.size.height = a4;
    CGContextFillRect(c, v18);
    if (*((unsigned char *)v4 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator) == 1)
    {
      [v4 contentScaleFactor];
      CGFloat v13 = 1.0 / v12;
      id v14 = [v9 separatorColor];
      uint64_t v15 = (CGColor *)[v14 CGColor];

      CGContextSetFillColorWithColor(c, v15);
      v19.origin.x = 0.0;
      v19.origin.y = a4 + -1.0;
      v19.size.width = a3;
      v19.size.height = v13;
      CGContextFillRect(c, v19);
    }
  }
}

void sub_1004711D4()
{
  uint64_t v1 = v0;
  id v2 = [v0 traitCollection];
  BOOL v3 = sub_1000951EC(16);

  if (v3)
  {
    id v4 = [v1 traitCollection];
    id v5 = [v4 preferredContentSizeCategory];

    char v6 = UIContentSizeCategory.isAccessibilityCategory.getter();
    id v7 = sub_1004706C0();
    [v7 setAxis:v6 & 1];

    id v8 = sub_1004706C0();
    id v9 = v8;
    if (v6) {
      uint64_t v10 = 1;
    }
    else {
      uint64_t v10 = 2;
    }
    [v8 setAlignment:v10];

    if (v6)
    {
      id v11 = sub_1004700CC();
      [v11 setTextAlignment:4];

      sub_100470214();
      DOCViewDecorator<>.textAlignment.setter();
      swift_release();
      id v16 = sub_100470020();
      [v16 setActive:0];
    }
    else
    {
      uint64_t v12 = 2
          * ([self userInterfaceLayoutDirectionForSemanticContentAttribute:0] == 0);
      id v13 = sub_1004700CC();
      id v14 = v13;
      if (v1[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment]) {
        uint64_t v15 = 4;
      }
      else {
        uint64_t v15 = v12;
      }
      [v13 setTextAlignment:v15];

      sub_100470214();
      DOCViewDecorator<>.textAlignment.setter();
      swift_release();
      id v16 = sub_100470020();
      [v16 setActive:*(double *)&v1[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] > 0.0];
    }
  }
}

uint64_t sub_10047140C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey);
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8);

  return sub_10047CDF8(v1, v2);
}

id sub_1004714A4(uint64_t a1)
{
  return sub_1004714BC(a1, type metadata accessor for DOCMetadataKeyValueRow);
}

id sub_1004714BC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCMetadataKeyValueRow()
{
  return self;
}

uint64_t sub_100471788(uint64_t result)
{
  int v2 = v1[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators];
  v1[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators] = result;
  if (v2 != (result & 1))
  {
    uint64_t v3 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    unint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      id result = swift_bridgeObjectRelease();
      if (v8 <= 0) {
        return result;
      }
    }
    else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
    {
      return result;
    }
    uint64_t v5 = *(void *)&v1[v3];
    swift_bridgeObjectRetain();
    id v6 = [v1 levelOfDetail];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_100476B70(v5, (uint64_t)v6, (uint64_t)sub_10047CCB8, v7);
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

void sub_10047190C(double a1)
{
  double v2 = *(double *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth];
  *(double *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth] = a1;
  if (v2 != a1)
  {
    uint64_t v3 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    unint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8 <= 0) {
        return;
      }
    }
    else if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 0)
    {
      return;
    }
    uint64_t v5 = *(void *)&v1[v3];
    swift_bridgeObjectRetain();
    id v6 = [v1 levelOfDetail];
    uint64_t v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_100476B70(v5, (uint64_t)v6, (uint64_t)sub_10047CCB8, v7);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
}

id sub_100471A24()
{
  id v1 = [v0 levelOfDetail];
  id result = (id)_DocumentManagerBundle();
  uint64_t v3 = result;
  if (v1)
  {
    if (result)
    {
      unint64_t v4 = 0xE900000000000073;
      unint64_t v10 = 0x80000001005F7CD0;
      uint64_t v5 = 0x73654C20776F6853;
LABEL_6:
      v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v6._object = (void *)0xEB00000000656C62;
      v7._uint64_t countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      unint64_t v8 = 0xD000000000000037;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, v6, (NSBundle)v3, v7, *(Swift::String *)(&v10 - 1))._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  else if (result)
  {
    unint64_t v10 = 0x80000001005F7D10;
    uint64_t v5 = 0x726F4D20776F6853;
    unint64_t v4 = 0xE900000000000065;
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100471BDC(uint64_t a1)
{
  if (*(void *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] != a1)
  {
    double v2 = *(void **)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_configuration];
    if (v2)
    {
      uint64_t v3 = self;
      id v4 = v2;
      id v5 = [v3 standardUserDefaults];
      Class isa = Int._bridgeToObjectiveC()().super.super.isa;
      [v5 doc_setObject:isa forRoleKey:DOCUserDefaultsKeyMetadataLevelOfDetail configuration:v4];
    }
    uint64_t v7 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
    unint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v12 < 1) {
        return;
      }
    }
    else if (*(uint64_t *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
    {
      return;
    }
    uint64_t v9 = *(void *)&v1[v7];
    swift_bridgeObjectRetain();
    id v10 = [v1 levelOfDetail];
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_100476B70(v9, (uint64_t)v10, (uint64_t)sub_10047CCB8, v11);
    swift_bridgeObjectRelease();
    swift_release_n();
  }
}

char *sub_100471E14(uint64_t a1, void *a2)
{
  swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] = 1;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment] = 0;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries] = _swiftEmptyArrayStorage;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues] = 2;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] = 0;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad] = 1;
  v2[OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing] = 1;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_configuration] = a2;
  *(void *)&v2[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys] = a1;
  v16.receiver = v2;
  v16.super_class = (Class)type metadata accessor for DOCMetadataView();
  id v5 = a2;
  Swift::String v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setAxis:1];
  if (a2)
  {
    uint64_t v7 = self;
    id v8 = v5;
    id v9 = [v7 standardUserDefaults];
    NSString v10 = [v9 doc_roleSpecificKeyForKey:DOCUserDefaultsKeyMetadataLevelOfDetail configuration:v8];

    if (!v10)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v11 = [v7 standardUserDefaults];
    id v12 = [v11 integerForKey:v10];

    *(void *)&v6[OBJC_IVAR____TtC5Files15DOCMetadataView_levelOfDetail] = v12;
  }
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  *(void *)(v13 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v13 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v14 = v6;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v14;
}

void sub_1004720B8()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for DOCMetadataView();
  [super didMoveToWindow];
  id v1 = [v0 window];

  if (v1)
  {
    double v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_10047CC6C;
    *(void *)(v4 + 24) = v3;
    v8[4] = sub_100162A48;
    v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100087990;
    v8[3] = &unk_1006AE7E0;
    id v5 = _Block_copy(v8);
    id v6 = v0;
    swift_retain();
    swift_release();
    [v2 performWithoutAnimation:v5];
    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
}

void sub_10047229C()
{
  id v1 = v0;
  id v2 = [v0 traitCollection];
  BOOL v3 = sub_1000951EC(16);

  if (!v3) {
    return;
  }
  uint64_t v4 = &v1[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries];
  swift_beginAccess();
  unint64_t v5 = *(void *)v4;
  v61 = _swiftEmptyArrayStorage;
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (v6) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    int64_t v9 = (int64_t)_swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_68;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    if (*((unsigned char *)v8 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden))
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  int64_t v9 = (int64_t)v61;
LABEL_16:
  NSString v10 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10059B760;
  id v12 = [v1 arrangedSubviews];
  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v11 + 56) = &type metadata for Int;
  *(void *)(v11 + 64) = &protocol witness table for Int;
  *(void *)(v11 + 32) = v14;
  id v15 = [v1 subviews];
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v11 + 96) = &type metadata for Int;
  *(void *)(v11 + 104) = &protocol witness table for Int;
  *(void *)(v11 + 72) = v17;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v18 = [v1 subviews];
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v20 = v19 >> 62;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (!v21) {
      goto LABEL_31;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v21) {
      goto LABEL_31;
    }
  }
  if (v21 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  for (uint64_t j = 0; j != v21; ++j)
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v23 = *(id *)(v19 + 8 * j + 32);
    }
    NSString v24 = v23;
    [v23 removeFromSuperview];
  }
LABEL_31:
  unint64_t v60 = v19;
  swift_bridgeObjectRelease();
  id v25 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10059B760;
  id v27 = [v1 arrangedSubviews];
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v26 + 56) = &type metadata for Int;
  *(void *)(v26 + 64) = &protocol witness table for Int;
  *(void *)(v26 + 32) = v29;
  if (v20)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *(void *)(v26 + 96) = &type metadata for Int;
  *(void *)(v26 + 104) = &protocol witness table for Int;
  *(void *)(v26 + 72) = v30;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1005A0030;
  uint64_t v32 = ((unint64_t)v9 >> 62) & 1;
  if (v9 < 0) {
    LODWORD(v32) = 1;
  }
  int v59 = v32;
  uint64_t v58 = v30;
  if (v32 == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
  }
  else
  {
    uint64_t v33 = *(void *)(v9 + 16);
  }
  id v34 = _swiftEmptyArrayStorage;
  if (v33)
  {
    v61 = _swiftEmptyArrayStorage;
    sub_100059E2C(0, v33 & ~(v33 >> 63), 0);
    if ((v33 & 0x8000000000000000) == 0)
    {
      uint64_t v56 = v31;
      id v57 = v1;
      uint64_t v35 = 0;
      id v34 = v61;
      unint64_t v36 = v9 & 0xC000000000000001;
      int64_t v37 = v9;
      do
      {
        if (v36) {
          id v38 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v38 = (char *)*(id *)(v9 + 8 * v35 + 32);
        }
        id v39 = v38;
        uint64_t v40 = sub_10046C54C(*(void *)&v38[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey], *(void *)&v38[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8], *(void *)&v38[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16], *(void *)&v38[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24]);
        uint64_t v42 = v41;

        v61 = v34;
        unint64_t v44 = v34[2];
        unint64_t v43 = v34[3];
        if (v44 >= v43 >> 1)
        {
          sub_100059E2C(v43 > 1, v44 + 1, 1);
          id v34 = v61;
        }
        ++v35;
        void v34[2] = v44 + 1;
        id v45 = &v34[2 * v44];
        v45[4] = v40;
        v45[5] = v42;
        int64_t v9 = v37;
      }
      while (v33 != v35);
      uint64_t v31 = v56;
      id v1 = v57;
      goto LABEL_50;
    }
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
LABEL_50:
  *(void *)(v31 + 56) = sub_1000CBE70(&qword_10070AEB0);
  *(void *)(v31 + 64) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
  *(void *)(v31 + 32) = v34;
  sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
  id v46 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  if (v59)
  {
    swift_retain();
    uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
    if (!v47) {
      goto LABEL_60;
    }
    goto LABEL_54;
  }
  uint64_t v47 = *(void *)(v9 + 16);
  swift_retain();
  if (v47)
  {
LABEL_54:
    if (v47 >= 1)
    {
      uint64_t v48 = 0;
      do
      {
        if ((v9 & 0xC000000000000001) != 0) {
          id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v49 = *(id *)(v9 + 8 * v48 + 32);
        }
        id v50 = v49;
        ++v48;
        v61 = v49;
        sub_100472B8C(&v61, (unsigned __int8 *)v1, v9);
      }
      while (v47 != v48);
      goto LABEL_60;
    }
LABEL_70:
    __break(1u);
    return;
  }
LABEL_60:
  swift_release_n();
  id v51 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_10059B760;
  id v53 = [v1 arrangedSubviews];
  unint64_t v54 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v54 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v55 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v52 + 56) = &type metadata for Int;
  *(void *)(v52 + 64) = &protocol witness table for Int;
  *(void *)(v52 + 32) = v55;
  swift_bridgeObjectRelease();
  *(void *)(v52 + 96) = &type metadata for Int;
  *(void *)(v52 + 104) = &protocol witness table for Int;
  *(void *)(v52 + 72) = v58;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  [v1 invalidateIntrinsicContentSize];
}

void sub_100472B8C(void *a1, unsigned __int8 *a2, unint64_t a3)
{
  unint64_t v5 = (unsigned char *)*a1;
  [a2 addArrangedSubview:*a1];
  int v6 = a2[OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators];
  uint64_t v7 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator;
  int v8 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = v6;
  if (v6 != v8) {
    [v5 setNeedsDisplay];
  }
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (v9)
    {
LABEL_5:
      unint64_t v10 = v9 - 1;
      if (__OFSUB__(v9, 1))
      {
        __break(1u);
      }
      else if ((a3 & 0xC000000000000001) == 0)
      {
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v11 = *(id *)(a3 + 8 * v10 + 32);
LABEL_10:
          id v12 = v11;
          swift_bridgeObjectRelease();
          type metadata accessor for DOCMetadataKeyValueRow();
          unint64_t v13 = v5;
          id v14 = v12;
          char v15 = static NSObject.== infix(_:_:)();

          if (v15)
          {
            int v16 = v5[v7];
            v5[v7] = 0;
            if (v16 == 1) {
              [v13 setNeedsDisplay];
            }
          }
          goto LABEL_15;
        }
        __break(1u);
        return;
      }
      id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  double v17 = *(double *)&a2[OBJC_IVAR____TtC5Files15DOCMetadataView_columnWidth];
  uint64_t v18 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth;
  double v19 = *(double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth];
  *(double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_columnWidth] = v17;
  if (v17 != v19)
  {
    id v20 = sub_100470020();
    [v20 setConstant:*(double *)&v5[v18]];

    id v21 = sub_100470020();
    [v21 setActive:*(double *)&v5[v18] > 0.0];
  }
  uint64_t v22 = OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment;
  int v23 = a2[OBJC_IVAR____TtC5Files15DOCMetadataView_labelAlignment];
  int v24 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_compactRowHeight] = v23 ^ 1;
  if (v23 == v24)
  {
    BOOL v25 = (v23 & 1) == 0;
    if (v23) {
      uint64_t v26 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics];
    }
    else {
      uint64_t v26 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 32];
    }
    if (v25) {
      id v27 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 40];
    }
    else {
      id v27 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 8];
    }
    if (v25) {
      unint64_t v28 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 48];
    }
    else {
      unint64_t v28 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 16];
    }
    if (v25) {
      uint64_t v29 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 56];
    }
    else {
      uint64_t v29 = (double *)&v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metrics + 24];
    }
    double v30 = *v29;
    double v31 = *v28;
    double v32 = *v27;
    double v33 = *v26;
    id v34 = sub_1004706C0();
    [v34 setLayoutMargins:v33, v32, v31, v30];
  }
  int v35 = a2[v22];
  int v36 = v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment];
  v5[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_labelAlignment] = v35;
  if (v35 != v36) {
    sub_1004711D4();
  }
}

void sub_100472E50(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, id a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v9 = v8;
  double v17 = (unint64_t *)&v9[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries];
  swift_beginAccess();
  unint64_t v18 = *v17;
  swift_bridgeObjectRetain();
  sub_10047CDB0(a1, a2);
  double v19 = sub_1004764C0(v18, a1, a2, a3, a4);
  sub_10047CDF8(a1, a2);
  swift_bridgeObjectRelease();
  if (!v19) {
    return;
  }
  uint64_t v51 = a7;
  if (a2 == 1)
  {
    if (!a5)
    {
      sub_100470214();
      uint64_t v29 = a6;
LABEL_12:
      id v34 = objc_allocWithZone((Class)NSAttributedString);
      char v35 = a8;
      NSString v36 = String._bridgeToObjectiveC()();
      [v34 initWithString:v36];

      a8 = v35;
      a5 = 0;
      goto LABEL_13;
    }
    char v48 = a8;
    id v49 = v9;
    id v20 = a5;
    id v21 = sub_10046E1B8(a1, 1uLL);
    uint64_t v23 = v22;
    id v50 = v20;
    id v24 = [v20 string];
    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v27 = v26;

    if (v21 == (id)v25 && v23 == v27)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v9 = v49;
      a8 = v48;
    }
    else
    {
      char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v49;
      a8 = v48;
      if ((v30 & 1) == 0)
      {

        id v47 = v50;
        sub_100470214();
        uint64_t v29 = a6;
        goto LABEL_13;
      }
    }
    sub_10046E1B8(a1, 1uLL);
    v31._uint64_t countAndFlagsBits = 10;
    v31._object = (void *)0xE100000000000000;
    String.append(_:)(v31);
    id v32 = objc_allocWithZone((Class)NSAttributedString);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    a5 = [v32 initWithString:v33];
  }
  else
  {
    id v28 = a5;
  }
  uint64_t v29 = a6;
  sub_100470214();
  if (!a5) {
    goto LABEL_12;
  }
LABEL_13:
  int64_t v37 = (char *)a5;
  DOCViewDecorator<>.attributedText.setter();
  swift_release();
  sub_100470214();
  swift_bridgeObjectRetain();
  id v38 = (char *)DOCViewDecorator.content.getter();
  id v39 = &v38[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
  *(void *)id v39 = v29;
  *((void *)v39 + 1) = v51;
  swift_release();

  swift_bridgeObjectRelease();
  sub_100470214();
  uint64_t v40 = self;
  uint64_t v41 = &selRef_placeholderTextColor;
  if ((a8 & 1) == 0) {
    uint64_t v41 = &selRef_labelColor;
  }
  id v42 = [v40 *v41];
  DOCViewDecorator<>.textColor.setter();
  swift_release();
  if (*(void *)&v19[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8] == 2)
  {
    uint64_t v43 = OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink;
    v19[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_detailLink] = 1;
    sub_100470214();
    LOBYTE(v43) = v19[v43];
    unint64_t v44 = (unsigned char *)DOCViewDecorator.content.getter();
    v44[OBJC_IVAR____TtC5Files16DOCCopyableLabel_behaveAsLink] = v43;
    sub_1002229EC();
    swift_release();

    sub_100470214();
    id v45 = v9;
    uint64_t v46 = DOCViewDecorator.content.getter();
    *(void *)(v46 + OBJC_IVAR____TtC5Files16DOCCopyableLabel_delegate + 8) = &off_1006AE320;
    swift_unknownObjectWeakAssign();

    swift_release();
    double v19 = (unsigned char *)v46;
    int64_t v37 = v45;
  }
}

uint64_t sub_100473290()
{
  if (v0[OBJC_IVAR____TtC5Files15DOCMetadataView_showsItemLocation] != 1) {
    goto LABEL_7;
  }
  unint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_4;
    }
LABEL_7:
    if (qword_100705250 == -1) {
      goto LABEL_8;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v2 != 1) {
    goto LABEL_7;
  }
LABEL_4:
  if (qword_100705248 != -1) {
LABEL_14:
  }
    swift_once();
LABEL_8:
  *(void *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys] = swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v4 = OBJC_IVAR____TtC5Files15DOCMetadataView_nodes;
  unint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC5Files15DOCMetadataView_nodes];
  if (!(v5 >> 62))
  {
    if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
      return result;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v9 >= 1)
  {
LABEL_10:
    uint64_t v6 = *(void *)&v0[v4];
    swift_bridgeObjectRetain();
    id v7 = [v0 levelOfDetail];
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    sub_100476B70(v6, (uint64_t)v7, (uint64_t)sub_10047CCB8, v8);
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  return result;
}

unsigned char *sub_100473488(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v69 = a1;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v66 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v65 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v73 = a5 + 16;
  uint64_t result = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    v75 = result;
    int v16 = (unint64_t *)&result[OBJC_IVAR____TtC5Files15DOCMetadataView_metadataEntries];
    swift_beginAccess();
    if (*v16 >> 62) {
      goto LABEL_37;
    }
    uint64_t v74 = *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      unint64_t v78 = *(void *)&v75[OBJC_IVAR____TtC5Files15DOCMetadataView_initialMetadataKeys];
      unint64_t v17 = v78;
      v75[OBJC_IVAR____TtC5Files15DOCMetadataView_canShowAdditionalMetadataValues] = (a2 | a3 | a4) != 0;
      uint64_t v18 = *(void *)(v17 + 16);
      uint64_t v64 = v9;
      uint64_t v63 = v10;
      uint64_t v62 = v12;
      uint64_t v61 = v13;
      if (!v18)
      {
LABEL_8:
        swift_bridgeObjectRetain();
        goto LABEL_14;
      }
      unint64_t v19 = 0;
      id v20 = (uint64_t *)(v17 + 40);
      while (1)
      {
        uint64_t v21 = *v20;
        v20 += 4;
        if (v21 == 10) {
          break;
        }
        if (v18 == ++v19) {
          goto LABEL_8;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1001B5A28(v19);
      sub_10047CDF8(v22, v23);
      sub_100478C60((void *)a2, (void *)a3, (void *)a4);
      a4 = (unint64_t)v24;
      uint64_t v13 = v24[2];
      if (!v13) {
        break;
      }
      a2 = (unint64_t)(v24 + 7);
      while (*(void *)(v78 + 16) >= v19)
      {
        uint64_t v9 = *(void *)(a2 - 8);
        a3 = *(void *)a2;
        uint64_t v12 = *(void *)(a2 - 24);
        uint64_t v10 = *(void *)(a2 - 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100515A0C(v19, v19, v12, v10, v9, a3);
        a2 += 32;
        if (!--v13) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_37:
      swift_bridgeObjectRetain();
      uint64_t v74 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_14:
    unint64_t v71 = *v16;
    *int v16 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v68 = v78;
    uint64_t v25 = *(void *)(v78 + 16);
    if (v25)
    {
      uint64_t v72 = OBJC_IVAR____TtC5Files15DOCMetadataView_showsSeparators;
      swift_beginAccess();
      Class v70 = (Class)type metadata accessor for DOCMetadataKeyValueRow();
      uint64_t v26 = (unint64_t *)(v68 + 56);
      do
      {
        uint64_t v27 = *(v26 - 3);
        unint64_t v28 = *(v26 - 2);
        uint64_t v29 = *(v26 - 1);
        unint64_t v30 = *v26;
        id v31 = objc_allocWithZone(v70);
        sub_10047CDB0(v27, v28);
        sub_10047CDB0(v27, v28);
        id v32 = (unsigned __int8 *)sub_1004708C4(v27, v28, v29, v30, 0.0, 0.0, 0.0, 0.0);
        [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
        int v33 = v75[v72];
        int v34 = v32[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator];
        v32[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_showsSeparator] = v33;
        if (v33 != v34) {
          [v32 setNeedsDisplay];
        }
        swift_beginAccess();
        char v35 = v32;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
        if (v74 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
        {
          sub_10047CDF8(v27, v28);
        }
        else
        {
          int64_t v37 = (void *)Strong;
          sub_100472E50(v27, v28, v29, v30, 0, 0, 0, 0);
          sub_10047CDF8(v27, v28);
        }
        v26 += 4;

        --v25;
      }
      while (v25);
    }
    swift_bridgeObjectRelease();
    Class v70 = (Class)dispatch_group_create();
    unint64_t v38 = *v16;
    if (*v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = (unsigned char *)_CocoaArrayWrapper.endIndex.getter();
      uint64_t v72 = (uint64_t)result;
    }
    else
    {
      uint64_t v72 = *(void *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = (unsigned char *)swift_bridgeObjectRetain();
    }
    if (v72)
    {
      if (v72 < 1)
      {
        __break(1u);
        return result;
      }
      unint64_t v67 = v38 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v39 = 0;
      unint64_t v68 = v38;
      uint64_t v40 = v70;
      id v41 = v75;
      unint64_t v42 = v71;
      do
      {
        if (v67) {
          uint64_t v43 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v43 = (char *)*(id *)(v38 + 8 * v39 + 32);
        }
        unint64_t v44 = v43;
        ++v39;
        dispatch_group_enter(v40);
        uint64_t v45 = *(void *)&v44[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
        uint64_t v74 = *(void *)&v44[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
        uint64_t v46 = *(void *)&v44[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16];
        id v47 = *(void **)&v44[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24];
        id v48 = [v41 effectiveUserInterfaceLayoutDirection];
        id v49 = (void *)swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakInit();

        swift_bridgeObjectRetain();
        id v50 = v40;
        uint64_t v51 = v44;
        sub_100479890(v69, v41, (uint64_t)v48, v74, v45, v46, v47, v50, v42, v51, (uint64_t)aBlock);
        swift_bridgeObjectRelease();

        swift_unknownObjectWeakDestroy();
        unint64_t v38 = v68;
      }
      while (v72 != v39);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v52 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v53 = swift_allocObject();
    swift_beginAccess();
    unint64_t v54 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    aBlock[4] = sub_10047CE40;
    aBlock[5] = v53;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006AE498;
    uint64_t v55 = _Block_copy(aBlock);
    swift_retain();
    uint64_t v56 = v65;
    static DispatchQoS.unspecified.getter();
    v76 = _swiftEmptyArrayStorage;
    sub_1000BADBC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    id v57 = v66;
    uint64_t v58 = v64;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    Class v59 = v70;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v55);

    (*(void (**)(char *, uint64_t))(v63 + 8))(v57, v58);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v56, v62);
    swift_release();
    return (unsigned char *)swift_release();
  }
  return result;
}

void sub_100473DE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6, NSObject *a7, unint64_t a8, void *a9)
{
  uint64_t v14 = a9;
  char v15 = sub_100476728(a8, (uint64_t)v14);

  if (v15)
  {
    uint64_t v27 = a7;
    sub_100470214();
    uint64_t v16 = DOCViewDecorator<>.text.getter();
    unint64_t v18 = v17;
    swift_release();
    if (!v18) {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v19 && (a6 & 1) != 0)
    {
      sub_100470214();
      a3 = (void *)DOCViewDecorator<>.attributedText.getter();
      swift_release();
      sub_100470214();
      id v20 = (char *)DOCViewDecorator.content.getter();
      a5 = *(void *)&v20[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText + 8];
      a4 = *(void *)&v20[OBJC_IVAR____TtC5Files16DOCCopyableLabel_copyableText];
      swift_bridgeObjectRetain();

      swift_release();
    }
    else
    {
LABEL_8:

      swift_bridgeObjectRetain();
      id v21 = a3;
    }
    a7 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    id v22 = a3;
  }
  v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_shouldBeHidden] = a3 == 0;
  v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_canCopyDetail] = 1;
  sub_10046FF48();
  id v23 = sub_1004700CC();
  swift_bridgeObjectRetain();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setText:v24];

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = (void *)Strong;
    sub_100472E50(*(void *)&v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey], *(void *)&v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8], *(void *)&v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16], *(void *)&v14[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24], a3, a4, a5, a6 & 1);
  }
  swift_bridgeObjectRelease();

  dispatch_group_leave(a7);
}

void sub_100474030()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    uint64_t v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_10047CC6C;
    *(void *)(v4 + 24) = v3;
    aBlock[4] = sub_100162A48;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100087990;
    aBlock[3] = &unk_1006AE510;
    unint64_t v5 = _Block_copy(aBlock);
    swift_retain();
    id v6 = v1;
    swift_release();
    [(id)v2 performWithoutAnimation:v5];
    _Block_release(v5);
    LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if (v2)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = swift_unknownObjectWeakLoadStrong();
      if (v7)
      {
        sub_10027B420(v7);
        swift_unknownObjectRelease();
      }
      id v8 = v6;
      sub_10047CE58((uint64_t)v8, (uint64_t)v8);
    }
  }
}

void sub_100474208()
{
  swift_bridgeObjectRelease();
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_metadataViewDelegate);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_configuration);
}

id sub_100474278(uint64_t a1)
{
  return sub_1004714BC(a1, type metadata accessor for DOCMetadataView);
}

uint64_t type metadata accessor for DOCMetadataView()
{
  return self;
}

unint64_t destroy for DOCMetadataKey(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DOCMetadataKey(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for DOCMetadataKey(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCMetadataKey(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCMetadataKey(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF4 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483637);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 10;
  if (v4 >= 0xC) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCMetadataKey(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF5)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483637;
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFF5) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 10;
    }
  }
  return result;
}

void *sub_100474690(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCMetadataKey()
{
  return &type metadata for DOCMetadataKey;
}

unsigned char *storeEnumTagSinglePayload for DOCMetadataLabelAlignment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100474790);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCMetadataLabelAlignment()
{
  return &type metadata for DOCMetadataLabelAlignment;
}

ValueMetadata *type metadata accessor for DOCMetadataKeyValueRow.Metrics()
{
  return &type metadata for DOCMetadataKeyValueRow.Metrics;
}

void *sub_1004747D8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UIButton.Configuration.Size();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    id v11 = v10;
  }
  return a1;
}

void sub_1004748B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t sub_100474924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  id v10 = v9;
  return a1;
}

uint64_t sub_1004749AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  id v10 = v9;

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100474A40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_100474AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100474B54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100474B68);
}

uint64_t sub_100474B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100474C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100474C48);
}

uint64_t sub_100474C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_100474D04()
{
  uint64_t result = type metadata accessor for UIButton.Configuration.Size();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100474DA8()
{
  unint64_t result = qword_100717218;
  if (!qword_100717218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717218);
  }
  return result;
}

Swift::Int sub_100474DFC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void **)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  v136 = (char *)&v131 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  v151 = (char *)&v131 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v146 = (char *)&v131 - v11;
  __chkstk_darwin(v10);
  v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v13);
  if (result >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      return sub_1004759BC(0, v13, 1, a1);
    }
    return result;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  v150 = a1;
  Swift::Int v133 = result;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_100475CDC(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_100520230((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          v129 = &v19[16 * v126 + 32];
          *(void *)v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  v144 = (void (**)(char *, uint64_t))(v5 + 1);
  v145 = v5 + 2;
  v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_1000BADBC(&qword_100717238, (void (*)(uint64_t))&type metadata accessor for Date);
    id v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = dispatch thunk of static Comparable.< infix(_:_:)();
    Swift::Int v32 = v13;
    int v33 = (void (*)(char *, uint64_t))v139[1];
    int v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        id v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          uint64_t v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      uint64_t v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      id v47 = v150;
      goto LABEL_38;
    }
    v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    id v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        id v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    uint64_t v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          uint64_t v62 = v147;
          uint64_t v63 = v47;
          uint64_t v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          v66 = v146;
          v64(v146, v65, v53);
          sub_1000BADBC(&qword_100717238, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v60) = dispatch thunk of static Comparable.< infix(_:_:)();
          unint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          unint64_t v69 = (char *)(v68 + v143 + v59);
          Class v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          id v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        id v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      uint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_10051F91C(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      uint64_t v19 = sub_10051F91C((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    v75 = v19 + 32;
    v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        v118 = v19;
        v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_100475CDC(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        v123 = v118;
        *(void *)v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        uint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    int v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004759BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = __chkstk_darwin(v7);
  id v41 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  Swift::Int v37 = (char *)&v29 - v11;
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void))(v13 + 16);
    uint64_t v15 = v13 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (uint64_t (**)(char *, uint64_t))(v15 - 8);
    int v33 = (void (*)(char *, uint64_t, uint64_t))v16;
    int v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      Swift::Int v22 = v33;
      v33(v36, v20, v7);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_1000BADBC(&qword_100717238, (void (*)(uint64_t))&type metadata accessor for Date);
      LOBYTE(v22) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      uint64_t result = v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = v26 + v44 + v18;
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v28)(v27, v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100475CDC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          id v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_1000BADBC(&qword_100717238, (void (*)(uint64_t))&type metadata accessor for Date);
          LOBYTE(v41) = dispatch thunk of static Comparable.< infix(_:_:)();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_1000BADBC(&qword_100717238, (void (*)(uint64_t))&type metadata accessor for Date);
        char v27 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_100520008(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100476310()
{
}

uint64_t sub_100476338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  switch(a2)
  {
    case 0:
      return !a6;
    case 1:
      return a6 == 1;
    case 2:
      return a6 == 2;
    case 3:
      return a6 == 3;
    case 4:
      return a6 == 4;
    case 5:
      return a6 == 5;
    case 6:
      return a6 == 6;
    case 7:
      return a6 == 7;
    case 8:
      return a6 == 8;
    case 9:
      return a6 == 9;
    case 10:
      return a6 == 10;
    default:
      if (a6 < 0xB) {
        return 0;
      }
      if (a1 == a5 && a2 == a6 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v12 & 1) != 0))
      {
        if (a3 == a7 && a4 == a8)
        {
          return 1;
        }
        else
        {
          return _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
      return result;
  }
}

void *sub_1004764C0(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v8 = 4;
LABEL_6:
    uint64_t v9 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : (char *)*(id *)(a1 + 8 * v8);
    uint64_t v10 = v9;
    uint64_t v11 = v8 - 3;
    if (!__OFADD__(v8 - 4, 1)) {
      break;
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (!v7) {
      goto LABEL_46;
    }
  }
  char v12 = &v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  uint64_t v13 = *(void *)&v9[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
  switch(v13)
  {
    case 0:
      if (a3) {
        goto LABEL_5;
      }
      goto LABEL_42;
    case 1:
      if (a3 == 1) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 2:
      if (a3 == 2) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 3:
      if (a3 == 3) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 4:
      if (a3 == 4) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 5:
      if (a3 == 5) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 6:
      if (a3 == 6) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 7:
      if (a3 == 7) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 8:
      if (a3 == 8) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 9:
      if (a3 == 9) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 10:
      if (a3 != 10) {
        goto LABEL_5;
      }
      goto LABEL_42;
    default:
      if (a3 < 0xB
        || ((v15 = *((void *)v12 + 2), uint64_t v14 = *((void *)v12 + 3), *(void *)v12 == a2)
          ? (BOOL v16 = v13 == a3)
          : (BOOL v16 = 0),
            !v16
         && (v20 = *((void *)v12 + 3), v17 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v14 = v20, (v17 & 1) == 0)
         || (v15 == a4 ? (BOOL v18 = v14 == a5) : (BOOL v18 = 0), !v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)))
      {
LABEL_5:

        ++v8;
        if (v11 == v7) {
          goto LABEL_46;
        }
        goto LABEL_6;
      }
LABEL_42:
      swift_bridgeObjectRelease();
      return v10;
  }
}

void *sub_100476728(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_45;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    unint64_t v5 = *(void *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8);
    uint64_t v20 = *(void *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey);
    uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 16);
    uint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 24);
    uint64_t v6 = 4;
LABEL_6:
    uint64_t v7 = (a1 & 0xC000000000000001) != 0
       ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : (char *)*(id *)(a1 + 8 * v6);
    uint64_t v8 = v7;
    a2 = v6 - 3;
    if (!__OFADD__(v6 - 4, 1)) {
      break;
    }
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (!v4) {
      goto LABEL_46;
    }
  }
  uint64_t v9 = &v7[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey];
  uint64_t v10 = *(void *)&v7[OBJC_IVAR____TtC5Files22DOCMetadataKeyValueRow_metadataKey + 8];
  switch(v10)
  {
    case 0:
      if (v5) {
        goto LABEL_5;
      }
      goto LABEL_42;
    case 1:
      if (v5 == 1) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 2:
      if (v5 == 2) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 3:
      if (v5 == 3) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 4:
      if (v5 == 4) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 5:
      if (v5 == 5) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 6:
      if (v5 == 6) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 7:
      if (v5 == 7) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 8:
      if (v5 == 8) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 9:
      if (v5 == 9) {
        goto LABEL_42;
      }
      goto LABEL_5;
    case 10:
      if (v5 != 10) {
        goto LABEL_5;
      }
      goto LABEL_42;
    default:
      if (v5 < 0xB
        || ((v12 = *((void *)v9 + 2), uint64_t v11 = *((void *)v9 + 3), *(void *)v9 == v20) ? (v13 = v10 == v5) : (v13 = 0),
            !v13
         && (v17 = *((void *)v9 + 3), v14 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t v11 = v17, (v14 & 1) == 0)
         || (v12 == v19 ? (BOOL v15 = v11 == v18) : (BOOL v15 = 0),
             !v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)))
      {
LABEL_5:

        ++v6;
        if (a2 == v4) {
          goto LABEL_46;
        }
        goto LABEL_6;
      }
LABEL_42:
      swift_bridgeObjectRelease();
      return v8;
  }
}

void sub_1004769A0()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return;
  }
  unint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files15DOCMetadataView_nodes);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_19:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_19;
  }
LABEL_4:
  if ((v1 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    swift_getObjectType();
    uint64_t v5 = DOCNode.fpfs_syncFetchFPItem()();
    if (v5)
    {
      id v6 = (id)v5;
      [v4 didTapLocationOf:];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }

  swift_unknownObjectRelease();
}

uint64_t sub_100476B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v13 = (char *)&v43 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v43 - v19;
  if ((unint64_t)a1 >> 62)
  {
    uint64_t v37 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 < 0) {
      uint64_t v37 = a1;
    }
    uint64_t ObjectType = v37;
    swift_bridgeObjectRetain();
    uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v46 = v20;
    uint64_t v39 = a4;
    uint64_t v40 = v11;
    uint64_t v41 = v38;
    swift_bridgeObjectRelease();
    BOOL v42 = v41 == 1;
    uint64_t v11 = v40;
    a4 = v39;
    uint64_t v20 = v46;
    if (!v42) {
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (!result)
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1)
    {
LABEL_9:
      uint64_t v26 = (void *)swift_allocObject();
      v26[2] = a3;
      v26[3] = a4;
      v26[4] = a1;
      v26[5] = 0;
      v26[6] = 0;
      v26[7] = 0;
      aBlock[4] = sub_10047CCC4;
      aBlock[5] = v26;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006AE3F8;
      char v27 = _Block_copy(aBlock);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v27);
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v48 = a2;
  Swift::Int v45 = v11;
  unint64_t v46 = v20;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v22 = a4;
    unint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = a4;
    unint64_t v23 = *(void **)(a1 + 32);
    swift_unknownObjectRetain();
  }
  swift_bridgeObjectRelease();
  uint64_t ObjectType = swift_getObjectType();
  id v24 = [v23 providerDomainID];
  char v25 = DOCProviderDomainIDIsSharedServerDomainID();

  if (v25)
  {
    swift_unknownObjectRelease();
    a4 = v22;
    goto LABEL_9;
  }
  uint64_t v28 = (void *)swift_allocObject();
  uint64_t v29 = v48;
  v28[2] = v23;
  v28[3] = v29;
  v28[4] = a1;
  v28[5] = a3;
  v28[6] = v22;
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  uint64_t v44 = v22;
  swift_retain_n();
  id v30 = [v23 nodeURL];
  if (!v30)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_14;
  }
  uint64_t v31 = v30;
  uint64_t v43 = a3;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v32(v13, v18, v14);
  int v33 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v33(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
LABEL_14:
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)();
    goto LABEL_15;
  }
  unint64_t v34 = v32;
  uint64_t v35 = v46;
  v34(v46, v13, v14);
  uint64_t v36 = (uint64_t)v45;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v45, v35, v14);
  v33((char *)v36, 0, 1, v14);
  sub_10046C044(v36, v23, v48, a1, v43, v44);
  sub_1000CBBA4(v36, &qword_1007076B0);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v35, v14);
LABEL_15:
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  return swift_release();
}

uint64_t sub_1004770B8(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst, void *a5)
{
  uint64_t v5 = a2;
  id v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 5;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 5;
  uint64_t v104 = __src;
  uint64_t v103 = __dst;
  if (v9 >= v11 >> 5)
  {
    if (v10 < -31) {
      goto LABEL_131;
    }
    uint64_t v44 = (uint64_t *)a3;
    if (__dst != a2 || &a2[4 * v12] <= __dst)
    {
      Swift::Int v45 = __dst;
      memmove(__dst, a2, 32 * v12);
      __dst = v45;
    }
    unint64_t v46 = &__dst[4 * v12];
    v102 = v46;
    uint64_t v104 = v5;
    if (v6 >= v5 || v10 < 32)
    {
LABEL_128:
      sub_10051FC30((void **)&v104, (const void **)&v103, &v102);
      return 1;
    }
    unint64_t v47 = a5[2];
    unint64_t v101 = v47;
    if (v47 <= 1) {
      unint64_t v47 = 1;
    }
    uint64_t v87 = v6;
    unint64_t v88 = v47;
    uint64_t v48 = v5;
    uint64_t v97 = __dst;
    while (1)
    {
      BOOL v99 = v5;
      unint64_t v90 = v44 - 4;
      uint64_t v92 = v46;
      uint64_t v51 = *(v46 - 4);
      uint64_t v50 = *(v46 - 3);
      uint64_t v49 = (char *)(v46 - 4);
      uint64_t v52 = *((void *)v49 + 2);
      unint64_t v53 = *((void *)v49 + 3);
      uint64_t v54 = *(v48 - 4);
      uint64_t v55 = *(v48 - 3);
      v48 -= 4;
      unint64_t v56 = v48[3];
      uint64_t v83 = v48[2];
      uint64_t v85 = (uint64_t *)v49;
      if (!v101) {
        goto LABEL_111;
      }
      unint64_t v80 = v48[3];
      unint64_t v81 = *((void *)v49 + 3);
      BOOL v57 = a5[4] == v51 && a5[5] == v50;
      uint64_t v94 = v44;
      if (v57 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v58 = 0;
        BOOL v59 = 0;
      }
      else
      {
        uint64_t v64 = 0;
        uint64_t v65 = a5 + 7;
        uint64_t v66 = 1;
        while (1)
        {
          uint64_t v58 = v66;
          BOOL v59 = v101 == v66;
          if (v101 == v66)
          {
            uint64_t v58 = 0;
            goto LABEL_81;
          }
          ++v64;
          if (*(v65 - 1) == v51 && *v65 == v50) {
            break;
          }
          char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v66 = v58 + 1;
          v65 += 2;
          if (v68) {
            goto LABEL_81;
          }
        }
        uint64_t v58 = v64;
      }
LABEL_81:
      BOOL v60 = a5[4] == v54 && a5[5] == v55;
      if (!v60 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v61 = 0;
LABEL_87:
      char v62 = v61 >= v58 || v59;
      uint64_t v63 = v97;
      uint64_t v44 = v94;
      if ((v62 & 1) == 0)
      {
LABEL_112:
        unint64_t v74 = v90;
        unint64_t v46 = v92;
        if (v44 != v99 || v90 >= v99)
        {
          long long v75 = *((_OWORD *)v48 + 1);
          *(_OWORD *)unint64_t v90 = *(_OWORD *)v48;
          *((_OWORD *)v90 + 1) = v75;
        }
        uint64_t v104 = v48;
        goto LABEL_121;
      }
LABEL_116:
      unint64_t v46 = v85;
      v102 = v85;
      unint64_t v74 = v90;
      if (v44 >= v92 && v90 < v92)
      {
        unint64_t v76 = (unint64_t)v87;
        uint64_t v48 = v99;
        if (v44 != v92)
        {
          long long v77 = *((_OWORD *)v85 + 1);
          *(_OWORD *)unint64_t v90 = *(_OWORD *)v85;
          *((_OWORD *)v90 + 1) = v77;
        }
        goto LABEL_122;
      }
      long long v78 = *((_OWORD *)v85 + 1);
      *(_OWORD *)unint64_t v90 = *(_OWORD *)v85;
      *((_OWORD *)v90 + 1) = v78;
      uint64_t v48 = v99;
LABEL_121:
      unint64_t v76 = (unint64_t)v87;
LABEL_122:
      if ((unint64_t)v48 > v76)
      {
        uint64_t v5 = v48;
        uint64_t v44 = v74;
        if (v46 > v63) {
          continue;
        }
      }
      goto LABEL_128;
    }
    unint64_t v69 = a5 + 7;
    uint64_t v70 = 1;
    while (v101 != v70)
    {
      if (v88 == v70)
      {
        __break(1u);
LABEL_130:
        __break(1u);
        goto LABEL_131;
      }
      if (*(v69 - 1) == v54 && *v69 == v55)
      {
        uint64_t v61 = v70;
        goto LABEL_87;
      }
      char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v61 = v70++;
      v69 += 2;
      if (v72) {
        goto LABEL_87;
      }
    }
    uint64_t v63 = v97;
    uint64_t v44 = v94;
    unint64_t v56 = v80;
    unint64_t v53 = v81;
    if (!v59) {
      goto LABEL_112;
    }
LABEL_111:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v51, v50, v52, v53);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v54, v55, v83, v56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009D28C();
    uint64_t v73 = StringProtocol.localizedCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v97;
    if (v73 == 1) {
      goto LABEL_112;
    }
    goto LABEL_116;
  }
  if (v7 >= -31)
  {
    if (__dst != __src || &__src[4 * v9] <= __dst)
    {
      BOOL v13 = __dst;
      memmove(__dst, __src, 32 * v9);
      __dst = v13;
    }
    BOOL v89 = &__dst[4 * v9];
    v102 = v89;
    if ((unint64_t)v5 < a3 && v7 >= 32)
    {
      unint64_t v14 = a5[2];
      unint64_t v100 = v14;
      if (v14 <= 1) {
        unint64_t v14 = 1;
      }
      unint64_t v91 = v14;
      while (1)
      {
        uint64_t v16 = *v5;
        uint64_t v15 = v5[1];
        uint64_t v17 = v5[2];
        unint64_t v18 = v5[3];
        v96 = __dst;
        uint64_t v98 = v5;
        uint64_t v19 = *__dst;
        uint64_t v20 = __dst[1];
        uint64_t v22 = __dst[2];
        unint64_t v21 = __dst[3];
        if (!v100) {
          goto LABEL_52;
        }
        BOOL v23 = a5[4] == v16 && a5[5] == v15;
        uint64_t v86 = v6;
        uint64_t v82 = v17;
        uint64_t v84 = __dst[2];
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          uint64_t v24 = 0;
          BOOL v25 = 0;
        }
        else
        {
          uint64_t v30 = 0;
          uint64_t v31 = a5 + 7;
          uint64_t v32 = 1;
          while (1)
          {
            uint64_t v24 = v32;
            BOOL v25 = v100 == v32;
            if (v100 == v32)
            {
              uint64_t v24 = 0;
              goto LABEL_22;
            }
            ++v30;
            if (*(v31 - 1) == v16 && *v31 == v15) {
              break;
            }
            char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v32 = v24 + 1;
            v31 += 2;
            if (v34) {
              goto LABEL_22;
            }
          }
          uint64_t v24 = v30;
        }
LABEL_22:
        BOOL v26 = a5[4] == v19 && a5[5] == v20;
        if (!v26 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
        uint64_t v27 = 0;
LABEL_28:
        char v28 = v27 >= v24 || v25;
        __dst = v96;
        id v6 = v86;
        unint64_t v29 = a3;
        if ((v28 & 1) == 0)
        {
LABEL_53:
          uint64_t v41 = v98 + 4;
          if (v6 < v98 || v6 >= v41 || v6 != v98)
          {
            long long v42 = *((_OWORD *)v98 + 1);
            *(_OWORD *)id v6 = *(_OWORD *)v98;
            *((_OWORD *)v6 + 1) = v42;
          }
          goto LABEL_60;
        }
LABEL_57:
        if (v6 != __dst)
        {
          long long v43 = *((_OWORD *)__dst + 1);
          *(_OWORD *)id v6 = *(_OWORD *)__dst;
          *((_OWORD *)v6 + 1) = v43;
        }
        __dst += 4;
        uint64_t v103 = __dst;
        uint64_t v41 = v98;
LABEL_60:
        v6 += 4;
        if (__dst < v89)
        {
          uint64_t v5 = v41;
          if ((unint64_t)v41 < v29) {
            continue;
          }
        }
        uint64_t v104 = v6;
        goto LABEL_128;
      }
      uint64_t v35 = a5 + 7;
      uint64_t v36 = 1;
      while (v100 != v36)
      {
        if (v91 == v36) {
          goto LABEL_130;
        }
        if (*(v35 - 1) == v19 && *v35 == v20)
        {
          uint64_t v27 = v36;
          goto LABEL_28;
        }
        char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v27 = v36++;
        v35 += 2;
        if (v38) {
          goto LABEL_28;
        }
      }
      __dst = v96;
      id v6 = v86;
      unint64_t v29 = a3;
      uint64_t v17 = v82;
      uint64_t v22 = v84;
      if (!v25) {
        goto LABEL_53;
      }
LABEL_52:
      uint64_t v39 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10046C54C(v16, v15, v39, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10046C54C(v19, v20, v22, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10009D28C();
      uint64_t v40 = StringProtocol.localizedCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v29 = a3;
      swift_bridgeObjectRelease();
      __dst = v96;
      if (v40 == 1) {
        goto LABEL_53;
      }
      goto LABEL_57;
    }
    goto LABEL_128;
  }
LABEL_131:
  swift_bridgeObjectRelease();
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100477864(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v43 = result;
  if (a3 != a2)
  {
    uint64_t v5 = *a4;
    unint64_t v6 = a5[2];
    unint64_t v50 = v6;
    if (v6 <= 1) {
      unint64_t v6 = 1;
    }
    unint64_t v48 = v6;
    uint64_t v41 = *a4;
LABEL_7:
    int64_t v7 = (uint64_t *)(v5 + 32 * a3);
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    uint64_t v46 = v7[2];
    unint64_t v10 = v7[3];
    uint64_t v40 = a3;
    uint64_t v11 = a3;
    while (1)
    {
      uint64_t v12 = v11 - 1;
      BOOL v13 = (uint64_t *)(v5 + 32 * (v11 - 1));
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      uint64_t v16 = v13[2];
      unint64_t v17 = v13[3];
      uint64_t v49 = v11;
      unint64_t v47 = v10;
      if (!v50) {
        goto LABEL_45;
      }
      BOOL v18 = a5[4] == v8 && a5[5] == v9;
      uint64_t v42 = v13[2];
      uint64_t v44 = v11 - 1;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        uint64_t v19 = 0;
        BOOL v20 = 0;
      }
      else
      {
        uint64_t v25 = 0;
        BOOL v26 = a5 + 7;
        uint64_t v27 = 1;
        while (1)
        {
          uint64_t v19 = v27;
          BOOL v20 = v50 == v27;
          if (v50 == v27)
          {
            uint64_t v19 = 0;
            goto LABEL_15;
          }
          ++v25;
          if (*(v26 - 1) == v8 && *v26 == v9) {
            break;
          }
          char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v27 = v19 + 1;
          v26 += 2;
          if (v29) {
            goto LABEL_15;
          }
        }
        uint64_t v19 = v25;
      }
LABEL_15:
      uint64_t result = a5[4];
      if (result != v15 || a5[5] != v14)
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if ((result & 1) == 0) {
          break;
        }
      }
      uint64_t v22 = 0;
LABEL_21:
      char v23 = v22 >= v19 || v20;
      uint64_t v5 = v41;
      uint64_t v12 = v44;
      uint64_t v24 = v49;
      if (v23)
      {
LABEL_6:
        a3 = v40 + 1;
        if (v40 + 1 == a2) {
          return result;
        }
        goto LABEL_7;
      }
LABEL_46:
      if (!v5)
      {
LABEL_52:
        __break(1u);
        return result;
      }
      uint64_t v36 = (uint64_t *)(v5 + 32 * v24);
      uint64_t v8 = *v36;
      uint64_t v9 = v36[1];
      uint64_t v37 = v36[2];
      unint64_t v10 = v36[3];
      long long v38 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v13;
      *((_OWORD *)v36 + 1) = v38;
      *BOOL v13 = v8;
      v13[1] = v9;
      uint64_t v46 = v37;
      v13[2] = v37;
      v13[3] = v10;
      uint64_t v11 = v12;
      if (v12 == v43) {
        goto LABEL_6;
      }
    }
    uint64_t v30 = a5 + 7;
    uint64_t v31 = 1;
    while (v50 != v31)
    {
      if (v48 == v31)
      {
        __break(1u);
        goto LABEL_52;
      }
      uint64_t result = *(v30 - 1);
      if (result == v15 && *v30 == v14)
      {
        uint64_t v22 = v31;
        goto LABEL_21;
      }
      uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v22 = v31++;
      v30 += 2;
      if (result) {
        goto LABEL_21;
      }
    }
    uint64_t v5 = v41;
    uint64_t v16 = v42;
    uint64_t v12 = v44;
    uint64_t v24 = v49;
    unint64_t v10 = v47;
    if (!v20) {
      goto LABEL_46;
    }
LABEL_45:
    unint64_t v33 = v10;
    uint64_t v34 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v8, v9, v46, v33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v15, v14, v34, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009D28C();
    uint64_t v35 = StringProtocol.localizedCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = v49;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v35 != 1) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
  return result;
}

uint64_t sub_100477BDC(uint64_t *a1, void *a2)
{
  Swift::Int v4 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v5 = _minimumMergeRunLength(_:)(v4);
  if (v5 >= v4)
  {
    if (v4 < 0) {
      goto LABEL_269;
    }
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_100477864(0, v4, 1, a1, a2);
    }
    return swift_bridgeObjectRelease_n();
  }
  Swift::Int v177 = v5;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_277;
  }
  v196 = a2;
  uint64_t v188 = v2;
  if (v4 < 2)
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      unint64_t v114 = _swiftEmptyArrayStorage[2];
      v175 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_232;
    }
    v176 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    sub_1000CBE70(&qword_100708CD0);
    uint64_t v8 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v8 + 16) = v7;
    v176 = (void *)v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *a1;
  v187 = a2 + 7;
  v185 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v180 = v4;
  uint64_t v191 = *a1;
LABEL_15:
  Swift::Int v13 = v11;
  Swift::Int v14 = v11 + 1;
  Swift::Int v190 = v11;
  if (v11 + 1 >= v4) {
    goto LABEL_116;
  }
  Swift::Int v182 = v11 + 1;
  uint64_t v15 = (uint64_t *)(v12 + 32 * v14);
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = v15[2];
  unint64_t v19 = v15[3];
  BOOL v20 = (uint64_t *)(v12 + 32 * v13);
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  unint64_t v23 = v20[3];
  uint64_t v200 = v18;
  uint64_t v202 = v20[2];
  unint64_t v207 = a2[2];
  if (!v207) {
    goto LABEL_57;
  }
  BOOL v24 = a2[4] == v16 && a2[5] == v17;
  unint64_t v197 = v20[3];
  if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v25 = 0;
    BOOL v26 = 0;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = v187;
    uint64_t v33 = 1;
    while (1)
    {
      uint64_t v25 = v33;
      BOOL v26 = v207 == v33;
      if (v207 == v33)
      {
        uint64_t v25 = 0;
        goto LABEL_23;
      }
      ++v31;
      if (*(v32 - 1) == v16 && *v32 == v17) {
        break;
      }
      char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v33 = v25 + 1;
      v32 += 2;
      if (v35) {
        goto LABEL_23;
      }
    }
    uint64_t v25 = v31;
  }
LABEL_23:
  BOOL v27 = v196[4] == v21 && v196[5] == v22;
  if (v27 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v28 = 0;
    goto LABEL_29;
  }
  if (v207 <= 1) {
    uint64_t v36 = 1;
  }
  else {
    uint64_t v36 = v207;
  }
  uint64_t v37 = v187;
  uint64_t v38 = 1;
  while (v207 != v38)
  {
    if (v36 == v38) {
      goto LABEL_267;
    }
    if (*(v37 - 1) == v21 && *v37 == v22)
    {
      uint64_t v28 = v38;
LABEL_29:
      if (v26)
      {
        Swift::Int v13 = v190;
        Swift::Int v29 = v190 + 2;
        Swift::Int v4 = v180;
        Swift::Int v30 = v182;
        if (v190 + 2 < v180)
        {
          int v201 = 0;
          a2 = v196;
          uint64_t v12 = v191;
          goto LABEL_59;
        }
        Swift::Int v14 = v190 + 2;
        a2 = v196;
        uint64_t v12 = v191;
LABEL_116:
        if (v14 >= v4) {
          goto LABEL_173;
        }
        if (__OFSUB__(v14, v13)) {
          goto LABEL_268;
        }
        if (v14 - v13 >= v177) {
          goto LABEL_173;
        }
        Swift::Int v81 = v13 + v177;
        if (__OFADD__(v13, v177)) {
          goto LABEL_270;
        }
        if (v81 >= v4) {
          Swift::Int v81 = v4;
        }
        if (v81 < v13)
        {
LABEL_271:
          __break(1u);
          goto LABEL_272;
        }
        if (v14 == v81) {
          goto LABEL_173;
        }
        unint64_t v208 = a2[2];
        uint64_t v82 = v208;
        if (v208 <= 1) {
          uint64_t v82 = 1;
        }
        uint64_t v199 = v82;
        Swift::Int v179 = v81;
        while (2)
        {
          uint64_t v83 = (uint64_t *)(v12 + 32 * v14);
          uint64_t v84 = *v83;
          uint64_t v85 = v83[1];
          unint64_t v86 = v83[3];
          uint64_t v195 = v83[2];
          Swift::Int v183 = v14;
          Swift::Int v87 = v14;
          while (2)
          {
            Swift::Int v204 = v87 - 1;
            unint64_t v88 = (uint64_t *)(v12 + 32 * (v87 - 1));
            uint64_t v90 = *v88;
            uint64_t v89 = v88[1];
            uint64_t v192 = v88[2];
            unint64_t v193 = v88[3];
            Swift::Int v206 = v87;
            if (!v208)
            {
LABEL_166:
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10046C54C(v84, v85, v195, v86);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_10046C54C(v90, v89, v192, v193);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10009D28C();
              uint64_t v107 = StringProtocol.localizedCompare<A>(_:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Swift::Int v13 = v190;
              uint64_t v12 = v191;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              Swift::Int v97 = v206;
              if (v107 != 1) {
                goto LABEL_127;
              }
LABEL_167:
              if (!v12) {
                goto LABEL_273;
              }
              uint64_t v108 = (uint64_t *)(v12 + 32 * v97);
              uint64_t v84 = *v108;
              uint64_t v85 = v108[1];
              uint64_t v109 = v108[2];
              unint64_t v86 = v108[3];
              long long v110 = *((_OWORD *)v88 + 1);
              *(_OWORD *)uint64_t v108 = *(_OWORD *)v88;
              *((_OWORD *)v108 + 1) = v110;
              uint64_t *v88 = v84;
              v88[1] = v85;
              uint64_t v195 = v109;
              v88[2] = v109;
              v88[3] = v86;
              Swift::Int v87 = v204;
              if (v204 == v13) {
                goto LABEL_127;
              }
              continue;
            }
            break;
          }
          unint64_t v189 = v86;
          BOOL v91 = v196[4] == v84 && v196[5] == v85;
          if (v91 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v92 = 0;
            BOOL v93 = 0;
          }
          else
          {
            uint64_t v98 = 0;
            BOOL v99 = v187;
            uint64_t v100 = 1;
            while (1)
            {
              uint64_t v92 = v100;
              BOOL v93 = v208 == v100;
              if (v208 == v100)
              {
                uint64_t v92 = 0;
                goto LABEL_136;
              }
              ++v98;
              if (*(v99 - 1) == v84 && *v99 == v85) {
                break;
              }
              char v102 = _stringCompareWithSmolCheck(_:_:expecting:)();
              uint64_t v100 = v92 + 1;
              v99 += 2;
              if (v102) {
                goto LABEL_136;
              }
            }
            uint64_t v92 = v98;
          }
LABEL_136:
          BOOL v94 = v196[4] == v90 && v196[5] == v89;
          if (v94 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t v95 = 0;
            goto LABEL_142;
          }
          uint64_t v103 = v187;
          uint64_t v104 = 1;
          while (1)
          {
            if (v208 == v104)
            {
              Swift::Int v13 = v190;
              uint64_t v12 = v191;
              Swift::Int v97 = v206;
              unint64_t v86 = v189;
              if (!v93) {
                goto LABEL_167;
              }
              goto LABEL_166;
            }
            if (v199 == v104)
            {
              __break(1u);
LABEL_245:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v176[2] = 0;
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
            if (*(v103 - 1) == v90 && *v103 == v89) {
              break;
            }
            char v106 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v95 = v104++;
            v103 += 2;
            if (v106) {
              goto LABEL_142;
            }
          }
          uint64_t v95 = v104;
LABEL_142:
          char v96 = v95 >= v92 || v93;
          Swift::Int v13 = v190;
          uint64_t v12 = v191;
          Swift::Int v97 = v206;
          if ((v96 & 1) == 0) {
            goto LABEL_167;
          }
LABEL_127:
          Swift::Int v14 = v183 + 1;
          if (v183 + 1 != v179) {
            continue;
          }
          break;
        }
        Swift::Int v14 = v179;
LABEL_173:
        uint64_t v111 = v185;
        if (v14 < v13) {
          goto LABEL_266;
        }
        Swift::Int v184 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v111 = sub_10051F91C(0, *((void *)v185 + 2) + 1, 1, v185);
        }
        unint64_t v113 = *((void *)v111 + 2);
        unint64_t v112 = *((void *)v111 + 3);
        unint64_t v114 = v113 + 1;
        if (v113 >= v112 >> 1) {
          uint64_t v111 = sub_10051F91C((char *)(v112 > 1), v113 + 1, 1, v111);
        }
        *((void *)v111 + 2) = v114;
        uint64_t v115 = v111 + 32;
        uint64_t v116 = &v111[16 * v113 + 32];
        *(void *)uint64_t v116 = v13;
        *((void *)v116 + 1) = v184;
        v185 = v111;
        if (v113)
        {
          v209 = v111 + 32;
          while (1)
          {
            unint64_t v117 = v114 - 1;
            if (v114 >= 4)
            {
              uint64_t v122 = &v115[16 * v114];
              uint64_t v123 = *((void *)v122 - 8);
              uint64_t v124 = *((void *)v122 - 7);
              BOOL v128 = __OFSUB__(v124, v123);
              uint64_t v125 = v124 - v123;
              if (v128) {
                goto LABEL_251;
              }
              uint64_t v127 = *((void *)v122 - 6);
              uint64_t v126 = *((void *)v122 - 5);
              BOOL v128 = __OFSUB__(v126, v127);
              uint64_t v120 = v126 - v127;
              char v121 = v128;
              if (v128) {
                goto LABEL_252;
              }
              unint64_t v129 = v114 - 2;
              unint64_t v130 = &v115[16 * v114 - 32];
              uint64_t v132 = *(void *)v130;
              uint64_t v131 = *((void *)v130 + 1);
              BOOL v128 = __OFSUB__(v131, v132);
              uint64_t v133 = v131 - v132;
              if (v128) {
                goto LABEL_254;
              }
              BOOL v128 = __OFADD__(v120, v133);
              uint64_t v134 = v120 + v133;
              if (v128) {
                goto LABEL_257;
              }
              if (v134 >= v125)
              {
                v152 = &v115[16 * v117];
                uint64_t v154 = *(void *)v152;
                uint64_t v153 = *((void *)v152 + 1);
                BOOL v128 = __OFSUB__(v153, v154);
                uint64_t v155 = v153 - v154;
                if (v128) {
                  goto LABEL_261;
                }
                BOOL v145 = v120 < v155;
                goto LABEL_211;
              }
            }
            else
            {
              if (v114 != 3)
              {
                uint64_t v146 = *((void *)v111 + 4);
                uint64_t v147 = *((void *)v111 + 5);
                BOOL v128 = __OFSUB__(v147, v146);
                uint64_t v139 = v147 - v146;
                char v140 = v128;
                goto LABEL_205;
              }
              uint64_t v119 = *((void *)v111 + 4);
              uint64_t v118 = *((void *)v111 + 5);
              BOOL v128 = __OFSUB__(v118, v119);
              uint64_t v120 = v118 - v119;
              char v121 = v128;
            }
            if (v121) {
              goto LABEL_253;
            }
            unint64_t v129 = v114 - 2;
            Swift::Int v135 = &v115[16 * v114 - 32];
            uint64_t v137 = *(void *)v135;
            uint64_t v136 = *((void *)v135 + 1);
            BOOL v138 = __OFSUB__(v136, v137);
            uint64_t v139 = v136 - v137;
            char v140 = v138;
            if (v138) {
              goto LABEL_256;
            }
            uint64_t v141 = &v115[16 * v117];
            uint64_t v143 = *(void *)v141;
            uint64_t v142 = *((void *)v141 + 1);
            BOOL v128 = __OFSUB__(v142, v143);
            uint64_t v144 = v142 - v143;
            if (v128) {
              goto LABEL_259;
            }
            if (__OFADD__(v139, v144)) {
              goto LABEL_260;
            }
            if (v139 + v144 >= v120)
            {
              BOOL v145 = v120 < v144;
LABEL_211:
              if (v145) {
                unint64_t v117 = v129;
              }
              goto LABEL_213;
            }
LABEL_205:
            if (v140) {
              goto LABEL_255;
            }
            Swift::Int v148 = &v115[16 * v117];
            uint64_t v150 = *(void *)v148;
            uint64_t v149 = *((void *)v148 + 1);
            BOOL v128 = __OFSUB__(v149, v150);
            uint64_t v151 = v149 - v150;
            if (v128) {
              goto LABEL_258;
            }
            if (v151 < v139) {
              goto LABEL_222;
            }
LABEL_213:
            unint64_t v156 = v117 - 1;
            if (v117 - 1 >= v114)
            {
              __break(1u);
LABEL_247:
              __break(1u);
LABEL_248:
              __break(1u);
LABEL_249:
              __break(1u);
LABEL_250:
              __break(1u);
LABEL_251:
              __break(1u);
LABEL_252:
              __break(1u);
LABEL_253:
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
LABEL_256:
              __break(1u);
LABEL_257:
              __break(1u);
LABEL_258:
              __break(1u);
LABEL_259:
              __break(1u);
LABEL_260:
              __break(1u);
LABEL_261:
              __break(1u);
LABEL_262:
              __break(1u);
LABEL_263:
              __break(1u);
LABEL_264:
              __break(1u);
LABEL_265:
              __break(1u);
LABEL_266:
              __break(1u);
LABEL_267:
              __break(1u);
LABEL_268:
              __break(1u);
LABEL_269:
              __break(1u);
LABEL_270:
              __break(1u);
              goto LABEL_271;
            }
            if (!v12) {
              goto LABEL_274;
            }
            uint64_t v157 = v12;
            v158 = v115;
            v159 = &v115[16 * v156];
            uint64_t v160 = *(void *)v159;
            unint64_t v161 = v117;
            v162 = &v158[16 * v117];
            uint64_t v163 = *((void *)v162 + 1);
            v164 = (uint64_t *)(v157 + 32 * *(void *)v159);
            v165 = (uint64_t *)(v157 + 32 * *(void *)v162);
            unint64_t v166 = v157 + 32 * v163;
            swift_bridgeObjectRetain();
            sub_1004770B8(v164, v165, v166, __dst, v196);
            if (v188) {
              goto LABEL_245;
            }
            swift_bridgeObjectRelease();
            if (v163 < v160) {
              goto LABEL_247;
            }
            uint64_t v111 = v185;
            if (v161 > *((void *)v185 + 2)) {
              goto LABEL_248;
            }
            *(void *)v159 = v160;
            uint64_t v115 = v209;
            *(void *)&v209[16 * v156 + 8] = v163;
            unint64_t v167 = *((void *)v185 + 2);
            if (v161 >= v167) {
              goto LABEL_249;
            }
            uint64_t v188 = 0;
            unint64_t v114 = v167 - 1;
            memmove(v162, v162 + 16, 16 * (v167 - 1 - v161));
            *((void *)v185 + 2) = v167 - 1;
            uint64_t v12 = v191;
            if (v167 <= 2) {
              goto LABEL_222;
            }
          }
        }
        unint64_t v114 = 1;
LABEL_222:
        Swift::Int v4 = v180;
        Swift::Int v11 = v184;
        a2 = v196;
        if (v184 >= v180)
        {
          unint64_t v10 = v176;
          v175 = v185;
LABEL_232:
          v186 = v175;
          v176 = v10;
          if (v114 >= 2)
          {
            uint64_t v168 = *a1;
            do
            {
              unint64_t v169 = v114 - 2;
              if (v114 < 2) {
                goto LABEL_262;
              }
              if (!v168) {
                goto LABEL_276;
              }
              uint64_t v170 = *(void *)&v186[16 * v169 + 32];
              uint64_t v171 = *(void *)&v186[16 * v114 + 24];
              v172 = (uint64_t *)(v168 + 32 * *(void *)&v186[16 * v114 + 16]);
              swift_bridgeObjectRetain();
              sub_1004770B8((uint64_t *)(v168 + 32 * v170), v172, v168 + 32 * v171, __dst, v196);
              if (v188) {
                goto LABEL_245;
              }
              swift_bridgeObjectRelease();
              if (v171 < v170) {
                goto LABEL_263;
              }
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v186 = sub_100520230((uint64_t)v186);
              }
              if (v169 >= *((void *)v186 + 2)) {
                goto LABEL_264;
              }
              v173 = &v186[16 * v169 + 32];
              *(void *)v173 = v170;
              *((void *)v173 + 1) = v171;
              unint64_t v174 = *((void *)v186 + 2);
              if (v114 > v174) {
                goto LABEL_265;
              }
              memmove(&v186[16 * v114 + 16], &v186[16 * v114 + 32], 16 * (v174 - v114));
              *((void *)v186 + 2) = v174 - 1;
              unint64_t v114 = v174 - 1;
            }
            while (v174 > 2);
          }
          swift_bridgeObjectRelease();
          v176[2] = 0;
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      int v201 = v28 < v25;
      a2 = v196;
      Swift::Int v4 = v180;
      uint64_t v12 = v191;
LABEL_58:
      Swift::Int v13 = v190;
      Swift::Int v30 = v182;
      Swift::Int v29 = v190 + 2;
      if (v190 + 2 >= v4) {
        goto LABEL_107;
      }
      goto LABEL_59;
    }
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v28 = v38++;
    v37 += 2;
    if (v40) {
      goto LABEL_29;
    }
  }
  if (v26)
  {
    a2 = v196;
    Swift::Int v4 = v180;
    uint64_t v12 = v191;
    unint64_t v23 = v197;
LABEL_57:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v16, v17, v200, v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10046C54C(v21, v22, v202, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10009D28C();
    uint64_t v41 = StringProtocol.localizedCompare<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v201 = v41 == 1;
    goto LABEL_58;
  }
  Swift::Int v13 = v190;
  Swift::Int v29 = v190 + 2;
  Swift::Int v4 = v180;
  a2 = v196;
  if (v190 + 2 >= v180)
  {
    uint64_t v12 = v191;
    if (v29 >= v190) {
      goto LABEL_109;
    }
    goto LABEL_272;
  }
  int v201 = 1;
  uint64_t v12 = v191;
  Swift::Int v30 = v182;
LABEL_59:
  uint64_t v42 = v207;
  if (v207 <= 1) {
    uint64_t v42 = 1;
  }
  uint64_t v203 = v42;
  Swift::Int v43 = v29;
  while (2)
  {
    Swift::Int v205 = v43;
    uint64_t v44 = (uint64_t *)(v12 + 32 * v43);
    uint64_t v45 = *v44;
    uint64_t v46 = v44[1];
    uint64_t v48 = v44[2];
    unint64_t v47 = v44[3];
    uint64_t v49 = (uint64_t *)(v12 + 32 * v30);
    uint64_t v50 = *v49;
    uint64_t v51 = v49[1];
    uint64_t v52 = v49[2];
    unint64_t v53 = v49[3];
    if (!v207)
    {
LABEL_99:
      unint64_t v69 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10046C54C(v45, v46, v48, v69);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10046C54C(v50, v51, v52, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10009D28C();
      uint64_t v70 = StringProtocol.localizedCompare<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      int v59 = v70 == 1;
      Swift::Int v4 = v180;
      Swift::Int v13 = v190;
      Swift::Int v29 = v205;
      a2 = v196;
LABEL_100:
      if (v201 == v59) {
        goto LABEL_63;
      }
      goto LABEL_107;
    }
    unint64_t v198 = v47;
    BOOL v54 = a2[4] == v45 && a2[5] == v46;
    uint64_t v194 = v49[2];
    if (v54 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v55 = 0;
      BOOL v56 = 0;
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v61 = v187;
      uint64_t v62 = 1;
      while (1)
      {
        uint64_t v55 = v62;
        BOOL v56 = v207 == v62;
        if (v207 == v62)
        {
          uint64_t v55 = 0;
          goto LABEL_71;
        }
        ++v60;
        if (*(v61 - 1) == v45 && *v61 == v46) {
          break;
        }
        char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v62 = v55 + 1;
        v61 += 2;
        if (v64) {
          goto LABEL_71;
        }
      }
      uint64_t v55 = v60;
    }
LABEL_71:
    BOOL v57 = v196[4] == v50 && v196[5] == v51;
    if (v57 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      uint64_t v58 = 0;
      goto LABEL_77;
    }
    uint64_t v65 = v187;
    uint64_t v66 = 1;
    while (1)
    {
      if (v207 == v66)
      {
        if (!v56)
        {
          a2 = v196;
          Swift::Int v4 = v180;
          Swift::Int v13 = v190;
          uint64_t v12 = v191;
          Swift::Int v29 = v205;
          if (v201) {
            goto LABEL_63;
          }
LABEL_115:
          Swift::Int v14 = v29;
          goto LABEL_116;
        }
        uint64_t v12 = v191;
        unint64_t v47 = v198;
        uint64_t v52 = v194;
        goto LABEL_99;
      }
      if (v203 == v66) {
        goto LABEL_250;
      }
      if (*(v65 - 1) == v50 && *v65 == v51) {
        break;
      }
      char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v58 = v66++;
      v65 += 2;
      if (v68) {
        goto LABEL_77;
      }
    }
    uint64_t v58 = v66;
LABEL_77:
    if (!v56)
    {
      int v59 = v58 < v55;
      a2 = v196;
      Swift::Int v4 = v180;
      Swift::Int v13 = v190;
      uint64_t v12 = v191;
      Swift::Int v29 = v205;
      goto LABEL_100;
    }
    a2 = v196;
    Swift::Int v4 = v180;
    Swift::Int v13 = v190;
    uint64_t v12 = v191;
    Swift::Int v29 = v205;
    if (v201) {
      goto LABEL_108;
    }
LABEL_63:
    Swift::Int v43 = v29 + 1;
    Swift::Int v30 = v29;
    if (v29 + 1 < v4) {
      continue;
    }
    break;
  }
  ++v29;
LABEL_107:
  Swift::Int v14 = v29;
  if (!v201) {
    goto LABEL_116;
  }
LABEL_108:
  if (v29 >= v13)
  {
LABEL_109:
    if (v13 < v29)
    {
      uint64_t v71 = 32 * v29;
      uint64_t v72 = 32 * v13;
      Swift::Int v73 = v29;
      Swift::Int v74 = v13;
      while (1)
      {
        if (v74 != --v73)
        {
          if (!v12) {
            goto LABEL_275;
          }
          long long v75 = (_OWORD *)(v12 + v72);
          uint64_t v76 = v12 + v71;
          long long v77 = *(_OWORD *)(v12 + v72);
          uint64_t v78 = *(void *)(v12 + v72 + 16);
          uint64_t v79 = *(void *)(v12 + v72 + 24);
          long long v80 = *(_OWORD *)(v12 + v71 - 16);
          _OWORD *v75 = *(_OWORD *)(v12 + v71 - 32);
          v75[1] = v80;
          *(_OWORD *)(v76 - 32) = v77;
          *(void *)(v76 - 16) = v78;
          *(void *)(v76 - 8) = v79;
        }
        ++v74;
        v71 -= 32;
        v72 += 32;
        if (v74 >= v73) {
          goto LABEL_115;
        }
      }
    }
    goto LABEL_115;
  }
LABEL_272:
  __break(1u);
LABEL_273:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_274:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_275:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_276:
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_277:
  swift_bridgeObjectRelease_n();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100478BB8(void **a1, void *a2)
{
  Swift::Int v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::Int v4 = sub_10050DFE0(v4);
  }
  uint64_t v5 = v4[2];
  v7[0] = (uint64_t)(v4 + 4);
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_100477BDC(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

void sub_100478C60(void *a1, void *a2, void *a3)
{
  Swift::Int v4 = a1;
  if (!a1)
  {
    if (a2)
    {
      id v6 = a2;
      Swift::Int v4 = a2;
    }
    else
    {
      if (!a3) {
        return;
      }
      swift_retain();
      Swift::Int v4 = a3;
    }
  }
  id v8 = a1;
  id v9 = [v4 metadataValues];
  uint64_t v10 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  id v11 = [v4 displaySortOrder];
  uint64_t v46 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  int64_t v12 = 0;
  Swift::Int v13 = _swiftEmptyArrayStorage;
  uint64_t v50 = _swiftEmptyArrayStorage;
  uint64_t v14 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v10 + 64);
  uint64_t v47 = v10 + 64;
  int64_t v48 = (unint64_t)(v14 + 63) >> 6;
  if (!v16) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v17 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v17 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v12 << 6))
  {
    uint64_t v22 = 16 * i;
    unint64_t v23 = (uint64_t *)(*(void *)(v10 + 48) + v22);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    BOOL v26 = (uint64_t *)(*(void *)(v10 + 56) + v22);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::Int v13 = sub_1001904CC(0, v13[2] + 1, 1, v13);
    }
    unint64_t v30 = v13[2];
    unint64_t v29 = v13[3];
    if (v30 >= v29 >> 1) {
      Swift::Int v13 = sub_1001904CC((void *)(v29 > 1), v30 + 1, 1, v13);
    }
    v13[2] = v30 + 1;
    uint64_t v31 = &v13[4 * v30];
    v31[4] = v24;
    v31[5] = v25;
    v31[6] = v27;
    v31[7] = v28;
    uint64_t v50 = v13;
    if (v16) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    if (v19 >= v48) {
      goto LABEL_30;
    }
    unint64_t v20 = *(void *)(v47 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v48) {
        goto LABEL_30;
      }
      unint64_t v20 = *(void *)(v47 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v48) {
          goto LABEL_30;
        }
        unint64_t v20 = *(void *)(v47 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 < v48)
  {
    unint64_t v20 = *(void *)(v47 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v12 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v12 >= v48) {
          goto LABEL_30;
        }
        unint64_t v20 = *(void *)(v47 + 8 * v12);
        ++v21;
        if (v20) {
          goto LABEL_23;
        }
      }
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      return;
    }
    int64_t v12 = v21;
    goto LABEL_23;
  }
LABEL_30:
  swift_release();
  uint64_t v32 = (void *)v46;
  uint64_t v49 = v13[2];
  if (!v49) {
    goto LABEL_56;
  }
  uint64_t v33 = *(void *)(v46 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v34 = 0;
  while (2)
  {
    uint64_t v37 = &v13[4 * v34 + 4];
    uint64_t v39 = *v37;
    uint64_t v38 = v37[1];
    if (v33)
    {
      unint64_t v40 = v32[2];
      if (!v40) {
        goto LABEL_59;
      }
      BOOL v41 = v32[4] == v39 && v32[5] == v38;
      if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        if (v33 == 1) {
          goto LABEL_32;
        }
        if (v40 < 2) {
          goto LABEL_62;
        }
        if ((v32[6] != v39 || v32[7] != v38) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          unint64_t v42 = v40 - 1;
          Swift::Int v43 = (void *)(v46 + 72);
          uint64_t v44 = v33 - 2;
          while (v44)
          {
            if (!--v42) {
              goto LABEL_61;
            }
            if (*(v43 - 1) != v39 || *v43 != v38)
            {
              --v44;
              v43 += 2;
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                continue;
              }
            }
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
    }
    else
    {
LABEL_32:
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      char v35 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1005A0030;
      *(void *)(v36 + 56) = &type metadata for String;
      *(void *)(v36 + 64) = sub_100073F48();
      *(void *)(v36 + 32) = v39;
      *(void *)(v36 + 40) = v38;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v32 = (void *)v46;
      swift_bridgeObjectRelease();
    }
LABEL_33:
    if (++v34 != v49) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease_n();
LABEL_56:
  swift_bridgeObjectRetain();
  sub_100478BB8(&v50, v32);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease_n();
}

uint64_t sub_100479124(void *a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v49 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  BOOL v54 = (char *)&v45 - v6;
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v45 - v7;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v48 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v45 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v50 = (char *)&v45 - v15;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = self;
  id v19 = [v18 distantPast];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  BOOL v56 = v17;
  BOOL v20 = sub_1001B5304((uint64_t (*)(char *))sub_10047D410, (uint64_t)v55, (uint64_t)a1);
  uint64_t v53 = v9;
  int64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v17, v8);
  uint64_t v22 = 0;
  if (v20) {
    return v22;
  }
  id v23 = [v18 distantFuture];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  __chkstk_darwin(v24);
  *(&v45 - 2) = (void (*)(char *, uint64_t, uint64_t))v17;
  LOBYTE(v23) = sub_1001B5304((uint64_t (*)(char *))sub_10047D530, (uint64_t)(&v45 - 4), (uint64_t)a1);
  v21(v17, v8);
  if (v23) {
    return 0;
  }
  uint64_t v26 = v53;
  uint64_t v25 = (uint64_t)v54;
  if (a1[2] == 1)
  {
    uint64_t v27 = (uint64_t)v52;
    (*(void (**)(char *, unint64_t, uint64_t))(v53 + 16))(v52, (unint64_t)a1+ ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)), v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v27, 1, v8) != 1)
    {
      uint64_t v33 = v50;
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v50, v27, v8);
      uint64_t v34 = self;
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v36 = [v34 longDateStringFromDate:isa];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v21(v33, v8);
      return v22;
    }
    sub_1000CBBA4(v27, (uint64_t *)&unk_10070B980);
  }
  BOOL v57 = a1;
  swift_bridgeObjectRetain();
  sub_10046E0E8(&v57);
  uint64_t v28 = v57;
  unint64_t v29 = v57[2];
  if (!v29)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v25, 1, 1, v8);
    goto LABEL_12;
  }
  uint64_t v52 = (char *)v21;
  unint64_t v30 = (char *)v57 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  uint64_t v47 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 16);
  v47(v25, v30, v8);
  uint64_t v50 = *(char **)(v26 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v25, 0, 1, v8);
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  if (v46(v25, 1, v8) == 1)
  {
LABEL_12:
    swift_release();
LABEL_13:
    sub_1000CBBA4(v25, (uint64_t *)&unk_10070B980);
    return 0;
  }
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
  BOOL v54 = (char *)(v26 + 32);
  uint64_t v45 = v31;
  v31(v51, v25, v8);
  if (v29 <= v28[2])
  {
    uint64_t v25 = (uint64_t)v49;
    v47((uint64_t)v49, &v30[*(void *)(v26 + 72) * (v29 - 1)], v8);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v50)(v25, 0, 1, v8);
    swift_release();
    if (v46(v25, 1, v8) != 1)
    {
      uint64_t v37 = v48;
      v45(v48, v25, v8);
      id v38 = [objc_allocWithZone((Class)NSDateIntervalFormatter) init];
      NSString v39 = String._bridgeToObjectiveC()();
      [v38 setDateTemplate:v39];

      unint64_t v40 = v51;
      Class v41 = Date._bridgeToObjectiveC()().super.isa;
      Class v42 = Date._bridgeToObjectiveC()().super.isa;
      id v43 = [v38 stringFromDate:v41 toDate:v42];

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v44 = v52;
      ((void (*)(char *, uint64_t))v52)(v37, v8);
      ((void (*)(char *, uint64_t))v44)(v40, v8);
      return v22;
    }
    ((void (*)(char *, uint64_t))v52)(v51, v8);
    goto LABEL_13;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004797F0(uint64_t result, uint64_t a2)
{
  if (*(unsigned char *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad) == 1)
  {
    *(unsigned char *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) = 0;
  }
  else
  {
    int v2 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing);
    *(unsigned char *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) = 0;
    if ((*(unsigned char *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) & 1) == 0)
    {
      if (v2)
      {
        uint64_t result = swift_unknownObjectWeakLoadStrong();
        if (result)
        {
          *(unsigned char *)(result + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) = 1;
          sub_100271F30();
          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

void sub_100479890(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, NSObject *a8, unint64_t a9, void *a10, uint64_t a11)
{
  v340 = a8;
  v331._object = a7;
  v331._uint64_t countAndFlagsBits = a6;
  uint64_t v332 = a4;
  uint64_t v317 = a3;
  id v330 = a2;
  uint64_t v338 = a11;
  v339 = a10;
  unint64_t v341 = a9;
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_100717220);
  __chkstk_darwin(v13 - 8);
  v327 = (char *)&v314 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v329 = type metadata accessor for DOCDiskProperties();
  uint64_t v328 = *(void *)(v329 - 8);
  __chkstk_darwin(v329);
  v318 = (char *)&v314 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v337 = (char *)&v314 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v342 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v314 - v20);
  uint64_t v21 = __chkstk_darwin(v19);
  v336 = (char *)&v314 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v314 - v24;
  uint64_t v26 = __chkstk_darwin(v23);
  v346 = (char *)&v314 - v27;
  __chkstk_darwin(v26);
  unint64_t v29 = (unint64_t)&v314 - v28;
  uint64_t v30 = type metadata accessor for Date();
  v347 = *(char **)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  v345 = (unint64_t *)((char *)&v314 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = __chkstk_darwin(v31);
  v335 = (char *)&v314 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v344 = (char *)&v314 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  v334 = (char *)&v314 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v343 = (char *)&v314 - v40;
  __chkstk_darwin(v39);
  v333 = (char *)&v314 - v41;
  uint64_t v315 = type metadata accessor for DOCMetadataFolderSizingViewModel();
  __chkstk_darwin(v315);
  uint64_t v316 = (uint64_t)&v314 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v324 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v323 = *(void *)(v324 - 8);
  __chkstk_darwin(v324);
  v321 = (char *)&v314 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v322 = type metadata accessor for DispatchQoS();
  uint64_t v320 = *(void *)(v322 - 8);
  __chkstk_darwin(v322);
  v319 = (char *)&v314 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t ObjectType = type metadata accessor for UTType();
  uint64_t v326 = *(void *)(ObjectType - 8);
  __chkstk_darwin(ObjectType);
  v325 = (char *)&v314 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = (void *)swift_allocObject();
  id v48 = (id)DOCLocalizedMetadataStringForUnavailablePropertyValue();
  uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v51 = v50;

  unint64_t v52 = (unint64_t)v47;
  v47[2] = v49;
  v47[3] = v51;
  uint64_t v53 = (void *)a5;
  unint64_t v348 = a1;
  switch(a5)
  {
    case 0:
      if (a1 >> 62)
      {
        if ((a1 & 0x8000000000000000) != 0) {
          uint64_t v30 = a1;
        }
        else {
          uint64_t v30 = a1 & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v47 = (void *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v47 == (void *)1)
        {
          uint64_t v54 = v348;
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_5:
            if ((v54 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_272:
                __break(1u);
                goto LABEL_273;
              }
              uint64_t v55 = *(void **)(v54 + 32);
              swift_unknownObjectRetain();
LABEL_8:
              swift_bridgeObjectRelease();
              swift_getObjectType();
              id v56 = [v55 contentType];
              BOOL v57 = v325;
              static UTType._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v58 = UTType.capitalizedSentenceLocalizedDescription.getter();
              object = v59;
              (*(void (**)(char *, int64_t))(v326 + 8))(v57, ObjectType);
              aBlock._uint64_t countAndFlagsBits = v58;
              aBlock._object = object;
              if (DOCNode.areDiskPropertiesSupported.getter())
              {
                id v61 = (id)_DocumentManagerBundle();
                if (!v61)
                {

                  swift_bridgeObjectRelease();
                  __break(1u);
                  goto LABEL_283;
                }
                uint64_t v62 = v61;
                v360._uint64_t countAndFlagsBits = 0xD000000000000058;
                v360._object = (void *)0x80000001005E1F40;
                v63._uint64_t countAndFlagsBits = 0x656D756C6F56;
                v63._object = (void *)0xE600000000000000;
                v64._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
                v64._object = (void *)0xEB00000000656C62;
                v65._uint64_t countAndFlagsBits = 0;
                v65._object = (void *)0xE000000000000000;
                Swift::String v66 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v360);

                swift_bridgeObjectRelease();
                Swift::String aBlock = v66;
                object = v66._object;
              }
              id v67 = [v55 cachedDomain:v314];
              if (v67)
              {
                char v68 = v67;
                unsigned int v69 = [v67 isUsingFPFS];

                if (v69)
                {
                  if ([v55 isRootItem] && DOCIsInternalBuild() && object)
                  {
                    v70._object = (void *)0x80000001005F7A50;
                    v70._uint64_t countAndFlagsBits = 0xD000000000000010;
                    String.append(_:)(v70);
                    object = aBlock._object;
                  }
                }
              }
              uint64_t v71 = sub_10046C54C(v332, 0, v331._countAndFlagsBits, (unint64_t)v331._object);
              uint64_t v73 = v72;
              if (object) {
                goto LABEL_171;
              }
              id v225 = (id)_DocumentManagerBundle();
              if (v225)
              {
                v226 = v225;
                v361._uint64_t countAndFlagsBits = 0xD000000000000012;
                v361._object = (void *)0x80000001005D6F30;
                v227._uint64_t countAndFlagsBits = 0x746E656D75636F44;
                v227._object = (void *)0xE800000000000000;
                v228._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
                v228._object = (void *)0xEB00000000656C62;
                v229._uint64_t countAndFlagsBits = 0;
                v229._object = (void *)0xE000000000000000;
                DOCLocalizedString(_:tableName:bundle:value:comment:)(v227, v228, (NSBundle)v226, v229, v361);

LABEL_171:
                id v230 = objc_allocWithZone((Class)NSAttributedString);
                swift_bridgeObjectRetain();
                NSString v231 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v232 = [v230 initWithString:v231];

                sub_100473DE4(v71, v73, v232, 0, 0, 0, v340, v341, v339);
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_unknownObjectRelease();
                return;
              }
LABEL_283:

              swift_bridgeObjectRelease();
              __break(1u);
              JUMPOUT(0x10047CAA4);
            }
LABEL_264:
            uint64_t v55 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_8;
          }
          swift_bridgeObjectRelease();
        }
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
        int64_t ObjectType = v348;
        swift_bridgeObjectRetain();
        a5 = _CocoaArrayWrapper.endIndex.getter();
        a1 = ObjectType;
        if (a5)
        {
LABEL_144:
          if (a5 >= 1)
          {
            uint64_t v194 = 0;
            unint64_t v195 = v348 & 0xC000000000000001;
            do
            {
              if (v195)
              {
                int64_t ObjectType = specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else
              {
                int64_t ObjectType = *(void *)(v348 + 8 * v194 + 32);
                swift_unknownObjectRetain();
              }
              if ([(id)ObjectType isFolder])
              {
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
              }
              else
              {
                swift_unknownObjectRelease();
              }
              ++v194;
            }
            while (a5 != v194);
            swift_bridgeObjectRelease();
            uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;
LABEL_181:
            if ((countAndFlagsBits & 0x8000000000000000) == 0 && (countAndFlagsBits & 0x4000000000000000) == 0)
            {
              uint64_t v30 = *(void *)(countAndFlagsBits + 16);
              goto LABEL_184;
            }
LABEL_262:
            swift_bridgeObjectRetain();
            uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
            swift_release();
LABEL_184:
            swift_release();
            uint64_t v245 = (uint64_t)v47 - v30;
            if (__OFSUB__(v47, v30))
            {
              __break(1u);
              goto LABEL_264;
            }
            uint64_t v25 = (char *)0xD000000000000010;
            v246 = &type metadata for Int;
            uint64_t v53 = &protocol witness table for Int;
            if (v245 < 1)
            {
              uint64_t v47 = _swiftEmptyArrayStorage;
              if (v30 >= 1) {
                goto LABEL_188;
              }
              goto LABEL_194;
            }
            v247._uint64_t countAndFlagsBits = 0xD00000000000004CLL;
            v247._object = (void *)0x80000001005F7A00;
            v248._uint64_t countAndFlagsBits = 0x75636F6420756C25;
            v248._object = (void *)0xED000073746E656DLL;
            DOCLocalizedDictionaryString(_:comment:)(v248, v247);
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v249 = swift_allocObject();
            *(_OWORD *)(v249 + 16) = xmmword_1005A0030;
            uint64_t v51 = &type metadata for Int;
            *(void *)(v249 + 56) = &type metadata for Int;
            *(void *)(v249 + 64) = &protocol witness table for Int;
            *(void *)(v249 + 32) = v245;
            a5 = static String.localizedStringWithFormat(_:_:)();
            a1 = v250;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v47 = sub_1000825D0(0, 1, 1, _swiftEmptyArrayStorage);
            unint64_t v29 = v47[2];
            unint64_t v193 = v47[3];
            int64_t ObjectType = v29 + 1;
            if (v29 < v193 >> 1)
            {
LABEL_187:
              v47[2] = ObjectType;
              v251 = &v47[2 * v29];
              v251[4] = a5;
              v251[5] = a1;
              v246 = v51;
              if (v30 >= 1)
              {
LABEL_188:
                v252._uint64_t countAndFlagsBits = (uint64_t)(v25 + 58);
                v252._object = (void *)0x80000001005F79B0;
                v253._uint64_t countAndFlagsBits = 0x646C6F6620756C25;
                v253._object = (void *)0xEB00000000737265;
                DOCLocalizedDictionaryString(_:comment:)(v253, v252);
                sub_1000CBE70((uint64_t *)&unk_100708800);
                uint64_t v254 = swift_allocObject();
                *(_OWORD *)(v254 + 16) = xmmword_1005A0030;
                *(void *)(v254 + 56) = v246;
                *(void *)(v254 + 64) = v53;
                *(void *)(v254 + 32) = v30;
                uint64_t v255 = static String.localizedStringWithFormat(_:_:)();
                uint64_t v257 = v256;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v47 = sub_1000825D0(0, v47[2] + 1, 1, v47);
                }
                unint64_t v259 = v47[2];
                unint64_t v258 = v47[3];
                if (v259 >= v258 >> 1) {
                  uint64_t v47 = sub_1000825D0((void *)(v258 > 1), v259 + 1, 1, v47);
                }
                unint64_t v260 = v341;
                v261 = v340;
                uint64_t v262 = v331._countAndFlagsBits;
                v263 = v339;
                v47[2] = v259 + 1;
                v264 = &v47[2 * v259];
                v264[4] = v255;
                v264[5] = v257;
                goto LABEL_195;
              }
LABEL_194:
              unint64_t v260 = v341;
              v261 = v340;
              uint64_t v262 = v331._countAndFlagsBits;
              v263 = v339;
LABEL_195:
              uint64_t v265 = sub_10046C54C(v332, 0, v262, (unint64_t)v331._object);
              uint64_t v267 = v266;
              aBlock._uint64_t countAndFlagsBits = (uint64_t)v47;
              sub_1000CBE70(&qword_10070AEB0);
              sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
              BidirectionalCollection<>.joined(separator:)();
              swift_bridgeObjectRelease();
              id v268 = objc_allocWithZone((Class)NSAttributedString);
              NSString v269 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v270 = [v268 initWithString:v269];

              sub_100473DE4(v265, v267, v270, 0, 0, 0, v261, v260, v263);
              swift_release();
              swift_bridgeObjectRelease();

              return;
            }
LABEL_281:
            uint64_t v47 = sub_1000825D0((void *)(v193 > 1), ObjectType, 1, v47);
            goto LABEL_187;
          }
LABEL_280:
          __break(1u);
          goto LABEL_281;
        }
      }
      else
      {
        uint64_t v47 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v47 == (void *)1)
        {
          swift_bridgeObjectRetain();
          uint64_t v54 = a1;
          goto LABEL_5;
        }
        aBlock._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
        a5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (a5) {
          goto LABEL_144;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_181;
    case 1:
      unint64_t v29 = a1 >> 62;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v30 == 1)
        {
          swift_bridgeObjectRetain();
          if (!_CocoaArrayWrapper.endIndex.getter())
          {
            swift_bridgeObjectRelease();
            goto LABEL_203;
          }
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v30 == 1)
        {
          swift_bridgeObjectRetain();
LABEL_22:
          if ((a1 & 0xC000000000000001) != 0)
          {
            a5 = (uint64_t)v330;
            Swift::Int v74 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_272;
            }
            a5 = (uint64_t)v330;
            Swift::Int v74 = *(void **)(a1 + 32);
            swift_unknownObjectRetain();
          }
          swift_bridgeObjectRelease();
          int64_t ObjectType = swift_getObjectType();
          if ([v74 isFolder])
          {
            uint64_t v30 = (uint64_t)v74;
            if (DOCNode.isFolderSizingSupported.getter())
            {
              long long v75 = (char *)[v74 deepItemCount];
              if (v75)
              {
                v347 = v75;
                id v76 = [v75 integerValue];
                uint64_t v77 = v315;
                unint64_t v348 = swift_allocBox();
                uint64_t v79 = v78;
                unsigned __int8 v80 = [v74 isCloudItem];
                uint64_t v81 = v79 + *(int *)(v77 + 24);
                uint64_t v82 = type metadata accessor for DOCFolderSize();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v81, 1, 1, v82);
                *(unsigned char *)uint64_t v79 = v80;
                *(void *)(v79 + 8) = v76;
                v345 = (unint64_t *)sub_10046C54C(v332, 1, v331._countAndFlagsBits, (unint64_t)v331._object);
                uint64_t v84 = v83;
                uint64_t v85 = v316;
                sub_100465FA8(v79, v316);
                DOCMetadataFolderSizingViewModel.sizeText.getter();
                sub_10047D480(v85, (uint64_t (*)(void))type metadata accessor for DOCMetadataFolderSizingViewModel);
                id v86 = objc_allocWithZone((Class)NSAttributedString);
                v346 = (char *)ObjectType;
                id v87 = v86;
                NSString v88 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                id v89 = [v87 initWithString:v88];

                sub_100465FA8(v79, v85);
                LOBYTE(v79) = DOCMetadataFolderSizingViewModel.shouldGrayTextOut.getter();
                sub_10047D480(v85, (uint64_t (*)(void))type metadata accessor for DOCMetadataFolderSizingViewModel);
                sub_100473DE4((uint64_t)v345, v84, v89, 0, 0, v79 & 1, v340, v341, v339);
                swift_bridgeObjectRelease();

                uint64_t v90 = swift_allocObject();
                swift_unknownObjectWeakInit();
                BOOL v91 = (void *)swift_allocObject();
                uint64_t v92 = v332;
                v91[2] = v90;
                v91[3] = v92;
                v91[4] = 1;
                BOOL v93 = v331._object;
                v91[5] = v331._countAndFlagsBits;
                v91[6] = v93;
                uint64_t v94 = v348;
                v91[7] = v52;
                v91[8] = v94;
                sub_10009E6C4(0, (unint64_t *)&qword_100705380);
                swift_retain();
                swift_retain();
                swift_retain();
                uint64_t v95 = (void *)static OS_dispatch_queue.main.getter();
                DOCNode.performFolderSizingIfSupported(handlerQueue:_:)();
                swift_release();
                swift_unknownObjectRelease();

                swift_release();
                swift_release();
                swift_release();

                return;
              }
            }
          }
          swift_unknownObjectRelease();
          goto LABEL_200;
        }
      }
      if (v30 > 1) {
        goto LABEL_208;
      }
LABEL_200:
      if (!v29)
      {
        uint64_t v47 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v47) {
          goto LABEL_254;
        }
        goto LABEL_204;
      }
LABEL_203:
      swift_bridgeObjectRetain();
      uint64_t v47 = (void *)_CocoaArrayWrapper.endIndex.getter();
      if (!v47) {
        goto LABEL_254;
      }
LABEL_204:
      if ((a1 & 0xC000000000000001) != 0) {
        goto LABEL_278;
      }
      unint64_t v193 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v193)
      {
        __break(1u);
        goto LABEL_280;
      }
      swift_unknownObjectRetain();
      while (2)
      {
        swift_bridgeObjectRelease();
        swift_getObjectType();
        char v271 = DOCNode.areDiskPropertiesSupported.getter();
        swift_unknownObjectRelease();
        if (v271) {
          goto LABEL_255;
        }
LABEL_208:
        unint64_t v314 = v52;
        uint64_t v272 = v332;
        uint64_t v273 = sub_10046C54C(v332, 1, v331._countAndFlagsBits, (unint64_t)v331._object);
        uint64_t v275 = v274;
        sub_10046E1B8(v272, 1uLL);
        id v276 = objc_allocWithZone((Class)NSAttributedString);
        NSString v277 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v278 = [v276 initWithString:v277];

        sub_100473DE4(v273, v275, v278, 0, 0, 1, v340, v341, v339);
        swift_bridgeObjectRelease();

        v279 = dispatch_group_create();
        v280 = (unint64_t *)swift_allocObject();
        v345 = v280;
        v280[2] = 0;
        a1 = (unint64_t)(v280 + 2);
        uint64_t v281 = swift_allocObject();
        v346 = (char *)v281;
        *(unsigned char *)(v281 + 16) = 1;
        v282 = (char *)(v281 + 16);
        if (v29)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v283 = _CocoaArrayWrapper.endIndex.getter();
        }
        else
        {
          uint64_t v283 = *(void *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        if (!v283)
        {
LABEL_228:
          swift_bridgeObjectRelease_n();
          id v296 = v330;
          sub_1004797F0((uint64_t)v296, (uint64_t)v296);

          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          unint64_t v348 = static OS_dispatch_queue.main.getter();
          uint64_t v297 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v298 = (void *)swift_allocObject();
          v299 = (void (**)(void, void, void, void))v345;
          unint64_t v300 = v314;
          v298[2] = v346;
          v298[3] = v300;
          v298[4] = v299;
          v298[5] = v297;
          uint64_t v301 = v332;
          v298[6] = v332;
          v298[7] = 1;
          v302 = v331._object;
          v298[8] = v331._countAndFlagsBits;
          v298[9] = v302;
          v353 = sub_10047D1D8;
          v354 = v298;
          aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
          aBlock._object = (void *)1107296256;
          v351 = sub_1000666D8;
          v352 = &unk_1006AE6A0;
          v303 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_10047CDB0(v301, 1uLL);
          v304 = v279;
          v305 = v319;
          static DispatchQoS.unspecified.getter();
          v349 = _swiftEmptyArrayStorage;
          sub_1000BADBC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_1000CBE70((uint64_t *)&unk_100705390);
          sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
          v306 = v321;
          uint64_t v307 = v324;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          v308 = (void *)v348;
          OS_dispatch_group.notify(qos:flags:queue:execute:)();

          _Block_release(v303);
          (*(void (**)(char *, uint64_t))(v323 + 8))(v306, v307);
          (*(void (**)(char *, uint64_t))(v320 + 8))(v305, v322);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_258;
        }
        unint64_t v52 = v348 & 0xC000000000000001;
        swift_beginAccess();
        swift_beginAccess();
        uint64_t v284 = 4;
        v343 = (char *)v283;
        v344 = v282;
        uint64_t v285 = 0;
        if (!v52) {
          goto LABEL_218;
        }
        while (1)
        {
          unint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v286 = v285 + 1;
          if (__OFADD__(v285, 1)) {
            break;
          }
          while (1)
          {
            dispatch_group_enter(v279);
            swift_getObjectType();
            if (([(id)v29 isFolder] & 1) != 0
              || (id v287 = [(id)v29 fileSize]) == 0)
            {
              if ([(id)v29 isFolder]
                && (DOCNode.isFolderSizingSupported.getter() & 1) != 0)
              {
                v290 = (void *)swift_allocObject();
                unint64_t v291 = v52;
                unint64_t v292 = a1;
                v293 = v346;
                v290[2] = v345;
                v290[3] = v293;
                v290[4] = v279;
                v347 = (char *)sub_10009E6C4(0, (unint64_t *)&qword_100705380);
                a1 = v292;
                unint64_t v52 = v291;
                swift_retain();
                swift_retain();
                v294 = v279;
                v295 = (void *)static OS_dispatch_queue.main.getter();
                DOCNode.performFolderSizingIfSupported(handlerQueue:_:)();
                swift_unknownObjectRelease();
                uint64_t v283 = (uint64_t)v343;
                swift_release();

                v282 = v344;
              }
              else
              {
                char *v282 = 0;
                dispatch_group_leave(v279);
                swift_unknownObjectRelease();
              }
            }
            else
            {
              v288 = v287;
              id v289 = [v287 longLongValue];
              if (__OFADD__(*(void *)a1, v289)) {
                goto LABEL_230;
              }
              *(void *)a1 += v289;
              dispatch_group_leave(v279);
              swift_unknownObjectRelease();
            }
            if (v286 == v283) {
              goto LABEL_228;
            }
            uint64_t v285 = ++v284 - 4;
            if (v52) {
              break;
            }
LABEL_218:
            unint64_t v29 = *(void *)(v348 + 8 * v284);
            swift_unknownObjectRetain();
            uint64_t v286 = v285 + 1;
            if (__OFADD__(v285, 1)) {
              goto LABEL_229;
            }
          }
        }
LABEL_229:
        __break(1u);
LABEL_230:
        __break(1u);
LABEL_231:
        swift_bridgeObjectRetain();
        uint64_t v309 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v309 != 1) {
          goto LABEL_255;
        }
        swift_bridgeObjectRetain();
        if (!_CocoaArrayWrapper.endIndex.getter()) {
          goto LABEL_254;
        }
LABEL_32:
        if ((a1 & 0xC000000000000001) == 0)
        {
          if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_unknownObjectRetain();
            goto LABEL_35;
          }
LABEL_273:
          __break(1u);
LABEL_274:
          __break(1u);
LABEL_275:
          __break(1u);
LABEL_276:
          __break(1u);
LABEL_277:
          __break(1u);
LABEL_278:
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          continue;
        }
        break;
      }
      specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_35:
      swift_bridgeObjectRelease();
      swift_getObjectType();
      char v96 = (void *)DOCNode.fpfs_syncFetchFPItem()();
      if (v96)
      {
        Swift::Int v97 = v96;
        if ([v96 isRootItem])
        {

          goto LABEL_38;
        }
        uint64_t v233 = v332;
        uint64_t v235 = (uint64_t)v331._object;
        uint64_t v234 = v331._countAndFlagsBits;
        uint64_t v236 = sub_10046C54C(v332, 2, v331._countAndFlagsBits, (unint64_t)v331._object);
        uint64_t v238 = v237;
        sub_10046E1B8(v233, 2uLL);
        id v239 = objc_allocWithZone((Class)NSAttributedString);
        NSString v240 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v241 = [v239 initWithString:v240];

        sub_100473DE4(v236, v238, v241, 0, 0, 1, v340, v341, v339);
        swift_bridgeObjectRelease();

        uint64_t v242 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v243 = swift_allocObject();
        uint64_t v244 = v332;
        *(void *)(v243 + 16) = v242;
        *(void *)(v243 + 24) = v244;
        *(void *)(v243 + 32) = 2;
        *(_OWORD *)(v243 + 40) = __PAIR128__(v235, v234);
        swift_retain();
        sub_10046E2F0(v97, v317, (uint64_t)sub_10047D120, v243, v244, 2uLL, v234, v235);
        swift_release();
        swift_unknownObjectRelease();

        swift_release();
LABEL_256:
LABEL_258:
        swift_release();
      }
      else
      {
LABEL_38:
        sub_100473DE4(0, 0, 0, 0, 0, 0, v340, v341, v339);
        swift_release();
        swift_unknownObjectRelease();
      }
      return;
    case 2:
      if (a1 >> 62) {
        goto LABEL_231;
      }
      if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
        goto LABEL_255;
      }
      swift_bridgeObjectRetain();
      goto LABEL_32;
    case 3:
      if (a1 >> 62)
      {
        if ((a1 & 0x8000000000000000) != 0) {
          uint64_t v47 = (void *)a1;
        }
        else {
          uint64_t v47 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain_n();
        uint64_t v98 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v98 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
      }
      unint64_t v314 = v52;
      if (!v98)
      {
        char v102 = (char *)_swiftEmptyArrayStorage;
LABEL_155:
        swift_bridgeObjectRelease_n();
        uint64_t v196 = sub_100479124(v102);
        uint64_t v198 = v197;
        swift_bridgeObjectRelease();
        unint64_t v199 = v314;
        if (v198)
        {
          *(void *)(v314 + 16) = v196;
          *(void *)(v199 + 24) = v198;
          swift_bridgeObjectRelease();
        }
        uint64_t v200 = v332;
        uint64_t v201 = 3;
LABEL_166:
        uint64_t v210 = sub_10046C54C(v200, v201, v331._countAndFlagsBits, (unint64_t)v331._object);
        uint64_t v212 = v211;
        id v213 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain();
        NSString v214 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v215 = [v213 initWithString:v214];

        sub_100473DE4(v210, v212, v215, 0, 0, 0, v340, v341, v339);
        swift_release();
        swift_bridgeObjectRelease();

        return;
      }
      if (v98 >= 1)
      {
        BOOL v99 = 0;
        v344 = (char *)(a1 & 0xC000000000000001);
        v342 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v347 + 56);
        uint64_t v100 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v347 + 48);
        unint64_t v101 = v347 + 32;
        char v102 = (char *)_swiftEmptyArrayStorage;
        v345 = (unint64_t *)v98;
        do
        {
          if (v344)
          {
            uint64_t v104 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v104 = *(void **)(a1 + 8 * (void)v99 + 32);
            swift_unknownObjectRetain();
          }
          unint64_t v105 = a1;
          id v106 = [v104 doc_creationDate:v314];
          if (v106)
          {
            uint64_t v107 = v106;
            uint64_t v108 = (uint64_t)v346;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v109 = 0;
          }
          else
          {
            uint64_t v109 = 1;
            uint64_t v108 = (uint64_t)v346;
          }
          (*v342)(v108, v109, 1, v30);
          sub_10047D068(v108, v29);
          swift_unknownObjectRelease();
          if ((*v100)(v29, 1, v30) == 1)
          {
            sub_1000CBBA4(v29, (uint64_t *)&unk_10070B980);
            a1 = v105;
            uint64_t v103 = (char *)v345;
          }
          else
          {
            long long v110 = *(void (**)(char *, char *, uint64_t))v101;
            uint64_t v111 = v333;
            (*(void (**)(char *, unint64_t, uint64_t))v101)(v333, v29, v30);
            v110(v343, v111, v30);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v102 = (char *)sub_1001905DC(0, *((void *)v102 + 2) + 1, 1, (unint64_t)v102);
            }
            uint64_t v103 = (char *)v345;
            unint64_t v113 = *((void *)v102 + 2);
            unint64_t v112 = *((void *)v102 + 3);
            if (v113 >= v112 >> 1) {
              char v102 = (char *)sub_1001905DC(v112 > 1, v113 + 1, 1, (unint64_t)v102);
            }
            *((void *)v102 + 2) = v113 + 1;
            v110(&v102[((v347[80] + 32) & ~(unint64_t)v347[80])+ *((void *)v347 + 9) * v113], v343, v30);
            a1 = v348;
          }
          ++v99;
        }
        while (v103 != v99);
        goto LABEL_155;
      }
      __break(1u);
      goto LABEL_260;
    case 4:
      if (a1 >> 62)
      {
        if ((a1 & 0x8000000000000000) != 0) {
          uint64_t v47 = (void *)a1;
        }
        else {
          uint64_t v47 = (void *)(a1 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain_n();
        uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        uint64_t v114 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
      }
      uint64_t v115 = (uint64_t)v336;
      unint64_t v314 = v52;
      if (!v114)
      {
        uint64_t v119 = (char *)_swiftEmptyArrayStorage;
LABEL_159:
        swift_bridgeObjectRelease_n();
        uint64_t v202 = sub_100479124(v119);
        uint64_t v204 = v203;
        swift_bridgeObjectRelease();
        unint64_t v205 = v314;
        if (v204)
        {
          *(void *)(v314 + 16) = v202;
          *(void *)(v205 + 24) = v204;
          swift_bridgeObjectRelease();
        }
        uint64_t v200 = v332;
        uint64_t v201 = 4;
        goto LABEL_166;
      }
      if (v114 >= 1)
      {
        uint64_t v116 = 0;
        v345 = (unint64_t *)(v347 + 56);
        v346 = (char *)(a1 & 0xC000000000000001);
        unint64_t v117 = (unsigned int (**)(char *, uint64_t, uint64_t))(v347 + 48);
        uint64_t v118 = v347 + 32;
        uint64_t v119 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v346)
          {
            uint64_t v120 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v120 = *(void **)(v348 + 8 * v116 + 32);
            swift_unknownObjectRetain();
          }
          id v121 = [v120 modificationDate:v314];
          if (v121)
          {
            uint64_t v122 = v121;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v123 = 0;
          }
          else
          {
            uint64_t v123 = 1;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v345)(v115, v123, 1, v30);
          sub_10047D068(v115, (uint64_t)v25);
          swift_unknownObjectRelease();
          if ((*v117)(v25, 1, v30) == 1)
          {
            sub_1000CBBA4((uint64_t)v25, (uint64_t *)&unk_10070B980);
          }
          else
          {
            uint64_t v124 = *(void (**)(char *, char *, uint64_t))v118;
            uint64_t v125 = v334;
            (*(void (**)(char *, char *, uint64_t))v118)(v334, v25, v30);
            v124(v344, v125, v30);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v119 = (char *)sub_1001905DC(0, *((void *)v119 + 2) + 1, 1, (unint64_t)v119);
            }
            unint64_t v127 = *((void *)v119 + 2);
            unint64_t v126 = *((void *)v119 + 3);
            if (v127 >= v126 >> 1) {
              uint64_t v119 = (char *)sub_1001905DC(v126 > 1, v127 + 1, 1, (unint64_t)v119);
            }
            *((void *)v119 + 2) = v127 + 1;
            v124(&v119[((v347[80] + 32) & ~(unint64_t)v347[80])+ *((void *)v347 + 9) * v127], v344, v30);
            uint64_t v115 = (uint64_t)v336;
          }
          ++v116;
        }
        while (v114 != v116);
        goto LABEL_159;
      }
LABEL_260:
      __break(1u);
      goto LABEL_261;
    case 5:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain_n();
        int64_t ObjectType = _CocoaArrayWrapper.endIndex.getter();
      }
      else
      {
        int64_t ObjectType = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
      }
      uint64_t v47 = v337;
      unint64_t v314 = v52;
      if (ObjectType)
      {
        if (ObjectType < 1)
        {
LABEL_261:
          __break(1u);
          goto LABEL_262;
        }
        uint64_t v128 = 0;
        v346 = (char *)(a1 & 0xC000000000000001);
        unint64_t v129 = v347 + 56;
        unint64_t v130 = (unsigned int (**)(void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t))(v347 + 48);
        uint64_t v131 = v347 + 32;
        uint64_t v132 = _swiftEmptyArrayStorage;
        do
        {
          if (v346)
          {
            uint64_t v133 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v133 = *(void **)(v348 + 8 * v128 + 32);
            swift_unknownObjectRetain();
          }
          id v134 = [v133 doc_lastUsedDate:v314];
          if (v134)
          {
            Swift::Int v135 = v134;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v136 = 0;
          }
          else
          {
            uint64_t v136 = 1;
          }
          (*(void (**)(void *, uint64_t, uint64_t, uint64_t))v129)(v47, v136, 1, v30);
          uint64_t v137 = v342;
          sub_10047D068((uint64_t)v47, (uint64_t)v342);
          BOOL v138 = v137;
          swift_unknownObjectRelease();
          if ((*v130)(v137, 1, v30) == 1)
          {
            sub_1000CBBA4((uint64_t)v137, (uint64_t *)&unk_10070B980);
          }
          else
          {
            uint64_t v139 = *(void (**)(unint64_t *, char *, uint64_t))v131;
            char v140 = v335;
            (*(void (**)(char *, void (**)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t))v131)(v335, v138, v30);
            v139(v345, v140, v30);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v132 = (void *)sub_1001905DC(0, v132[2] + 1, 1, (unint64_t)v132);
            }
            unint64_t v142 = v132[2];
            unint64_t v141 = v132[3];
            if (v142 >= v141 >> 1) {
              uint64_t v132 = (void *)sub_1001905DC(v141 > 1, v142 + 1, 1, (unint64_t)v132);
            }
            v132[2] = v142 + 1;
            v139((void *)((char *)v132+ ((v347[80] + 32) & ~(unint64_t)v347[80])+ *((void *)v347 + 9) * v142), (char *)v345, v30);
            uint64_t v47 = v337;
          }
          ++v128;
        }
        while (ObjectType != v128);
      }
      else
      {
        uint64_t v132 = _swiftEmptyArrayStorage;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v206 = sub_100479124(v132);
      uint64_t v208 = v207;
      swift_bridgeObjectRelease();
      unint64_t v209 = v314;
      if (v208)
      {
        *(void *)(v314 + 16) = v206;
        *(void *)(v209 + 24) = v208;
        swift_bridgeObjectRelease();
      }
      uint64_t v200 = v332;
      uint64_t v201 = 5;
      goto LABEL_166;
    case 6:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v310 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v310 != 1) {
          goto LABEL_106;
        }
        swift_bridgeObjectRetain();
        if (!_CocoaArrayWrapper.endIndex.getter())
        {
          swift_bridgeObjectRelease();
          goto LABEL_106;
        }
      }
      else
      {
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
          goto LABEL_106;
        }
        swift_bridgeObjectRetain();
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_274;
        }
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_getObjectType();
      uint64_t v143 = (uint64_t)v327;
      DOCNode.diskProperties.getter();
      uint64_t v144 = v328;
      uint64_t v145 = v329;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v328 + 48))(v143, 1, v329) != 1)
      {
        v217 = v318;
        (*(void (**)(char *, uint64_t, uint64_t))(v144 + 32))(v318, v143, v145);
        uint64_t v218 = v144;
        DOCDiskProperties.format.getter();
        uint64_t v219 = sub_10046C54C(v332, 6, v331._countAndFlagsBits, (unint64_t)v331._object);
        uint64_t v221 = v220;
        id v222 = objc_allocWithZone((Class)NSAttributedString);
        NSString v223 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v224 = [v222 initWithString:v223];

        sub_100473DE4(v219, v221, v224, 0, 0, 0, v340, v341, v339);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v218 + 8))(v217, v145);
        goto LABEL_258;
      }
      swift_unknownObjectRelease();
      sub_1000CBBA4(v143, (uint64_t *)&unk_100717220);
LABEL_106:
      sub_100473DE4(0, 0, 0, 0, 0, 0, v340, v341, v339);
      goto LABEL_258;
    case 7:
      if (!(a1 >> 62))
      {
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
          goto LABEL_255;
        }
        swift_bridgeObjectRetain();
LABEL_110:
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_275;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_getObjectType();
        if (DOCNode.areDiskPropertiesSupported.getter())
        {
          uint64_t v146 = v332;
          Swift::Int v148 = v331._object;
          uint64_t v147 = v331._countAndFlagsBits;
          unint64_t v348 = sub_10046C54C(v332, 7, v331._countAndFlagsBits, (unint64_t)v331._object);
          uint64_t v150 = v149;
          sub_10046E1B8(v146, 7uLL);
          id v151 = objc_allocWithZone((Class)NSAttributedString);
          NSString v152 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v153 = [v151 initWithString:v152];

          sub_100473DE4(v348, v150, v153, 0, 0, 1, v340, v341, v339);
          swift_bridgeObjectRelease();

          uint64_t v154 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v155 = swift_allocObject();
          *(void *)(v155 + 16) = v154;
          *(void *)(v155 + 24) = v146;
          *(void *)(v155 + 32) = 7;
          *(_OWORD *)(v155 + 40) = __PAIR128__((unint64_t)v148, v147);
          *(void *)(v155 + 56) = v47;
          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          swift_retain();
          swift_retain();
          unint64_t v348 = static OS_dispatch_queue.main.getter();
          goto LABEL_131;
        }
        goto LABEL_137;
      }
      swift_bridgeObjectRetain();
      uint64_t v311 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v311 != 1) {
        goto LABEL_255;
      }
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_110;
      }
      goto LABEL_254;
    case 8:
      if (!(a1 >> 62))
      {
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
          goto LABEL_255;
        }
        swift_bridgeObjectRetain();
LABEL_118:
        if ((a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_276;
          }
          swift_unknownObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_getObjectType();
        if (DOCNode.areDiskPropertiesSupported.getter())
        {
          uint64_t v156 = v332;
          v158 = v331._object;
          uint64_t v157 = v331._countAndFlagsBits;
          unint64_t v348 = sub_10046C54C(v332, 8, v331._countAndFlagsBits, (unint64_t)v331._object);
          uint64_t v160 = v159;
          sub_10046E1B8(v156, 8uLL);
          id v161 = objc_allocWithZone((Class)NSAttributedString);
          NSString v162 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v163 = [v161 initWithString:v162];

          sub_100473DE4(v348, v160, v163, 0, 0, 1, v340, v341, v339);
          swift_bridgeObjectRelease();

          uint64_t v164 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v165 = swift_allocObject();
          *(void *)(v165 + 16) = v164;
          *(void *)(v165 + 24) = v156;
          *(void *)(v165 + 32) = 8;
          *(_OWORD *)(v165 + 40) = __PAIR128__((unint64_t)v158, v157);
          *(void *)(v165 + 56) = v47;
          sub_10009E6C4(0, (unint64_t *)&qword_100705380);
          swift_retain();
          swift_retain();
          unint64_t v348 = static OS_dispatch_queue.main.getter();
          goto LABEL_131;
        }
        goto LABEL_137;
      }
      swift_bridgeObjectRetain();
      uint64_t v312 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v312 != 1) {
        goto LABEL_255;
      }
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter()) {
        goto LABEL_118;
      }
      goto LABEL_254;
    case 9:
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v313 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v313 != 1) {
          goto LABEL_255;
        }
        swift_bridgeObjectRetain();
        if (!_CocoaArrayWrapper.endIndex.getter())
        {
LABEL_254:
          swift_bridgeObjectRelease();
LABEL_255:
          sub_100473DE4(0, 0, 0, 0, 0, 0, v340, v341, v339);
          goto LABEL_256;
        }
      }
      else
      {
        if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
          goto LABEL_255;
        }
        swift_bridgeObjectRetain();
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_277;
        }
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_getObjectType();
      if ((DOCNode.areDiskPropertiesSupported.getter() & 1) == 0)
      {
LABEL_137:
        swift_unknownObjectRelease();
        goto LABEL_255;
      }
      uint64_t v166 = v332;
      uint64_t v168 = v331._object;
      uint64_t v167 = v331._countAndFlagsBits;
      unint64_t v348 = sub_10046C54C(v332, 9, v331._countAndFlagsBits, (unint64_t)v331._object);
      uint64_t v170 = v169;
      sub_10046E1B8(v166, 9uLL);
      id v171 = objc_allocWithZone((Class)NSAttributedString);
      NSString v172 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v173 = [v171 initWithString:v172];

      sub_100473DE4(v348, v170, v173, 0, 0, 1, v340, v341, v339);
      swift_bridgeObjectRelease();

      uint64_t v174 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v175 = swift_allocObject();
      *(void *)(v175 + 16) = v174;
      *(void *)(v175 + 24) = v166;
      *(void *)(v175 + 32) = 9;
      *(_OWORD *)(v175 + 40) = __PAIR128__((unint64_t)v168, v167);
      *(void *)(v175 + 56) = v47;
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      swift_retain();
      swift_retain();
      unint64_t v348 = static OS_dispatch_queue.main.getter();
LABEL_131:
      DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      v176 = (void *)v348;

      return;
    case 10:
      goto LABEL_255;
    default:
      Swift::String v177 = String.init(_:)((NSString)(id)kCGImagePropertyIPTCExtDigitalSourceType);
      if (v177._countAndFlagsBits == v332 && v177._object == (void *)a5)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v178 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v178 & 1) == 0) {
          goto LABEL_141;
        }
      }
      NSString v179 = String._bridgeToObjectiveC()();
      id v180 = [self bundleWithIdentifier:v179];

      if (v180)
      {
        v181 = v331._object;
        uint64_t v182 = v331._countAndFlagsBits;
        Swift::String aBlock = v331;
        uint64_t v357 = 0x2F2F3A7370747468;
        unint64_t v358 = 0xE800000000000000;
        uint64_t v355 = 0x2F2F3A70747468;
        unint64_t v356 = 0xE700000000000000;
        sub_10009D28C();
        StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
        NSString v183 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v184 = String._bridgeToObjectiveC()();
        id v185 = [v180 localizedStringForKey:v183 value:0 table:v184];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v186 = (unint64_t)v181;

        goto LABEL_142;
      }
LABEL_141:
      unint64_t v186 = (unint64_t)v331._object;
      swift_bridgeObjectRetain();
      uint64_t v182 = v331._countAndFlagsBits;
LABEL_142:
      uint64_t v187 = sub_10046C54C(v332, (uint64_t)v53, v182, v186);
      uint64_t v189 = v188;
      id v190 = objc_allocWithZone((Class)NSAttributedString);
      NSString v191 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v192 = [v190 initWithString:v191];

      sub_100473DE4(v187, v189, v192, 0, 0, 0, v340, v341, v339);
      swift_release();
      swift_bridgeObjectRelease();

      return;
  }
}

uint64_t sub_10047CAD0(void *a1)
{
  uint64_t v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_10047CC6C;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_1000879B8;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100087990;
  v8[3] = &unk_1006AE380;
  uint64_t v5 = _Block_copy(v8);
  id v6 = a1;
  swift_retain();
  swift_release();
  [(id)v2 performWithoutAnimation:v5];
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10047CC34()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047CC70()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047CC80()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unsigned char *sub_10047CCB8(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_100473488(a1, a2, a3, a4, v4);
}

uint64_t sub_10047CCC8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10047CD10(uint64_t a1)
{
  sub_10046C044(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10047CD24()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10047CD7C()
{
  return (*(uint64_t (**)(void, void, void, void))(v0 + 16))(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10047CDB0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xB)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10047CDF8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xB)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10047CE40()
{
}

uint64_t sub_10047CE48()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047CE58(uint64_t result, uint64_t a2)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad;
  if (*(unsigned char *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad)) {
    int v3 = 0;
  }
  else {
    int v3 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing) ^ 1;
  }
  *(unsigned char *)(a2 + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForInitialMetadataLoad) = 0;
  if ((*(unsigned char *)(result + v2) & 1) == 0
    && ((v3 | *(unsigned __int8 *)(result + OBJC_IVAR____TtC5Files15DOCMetadataView_preheatWaitingForSizing)) & 1) == 0)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      *(unsigned char *)(result + OBJC_IVAR____TtC5Files32DOCItemInfoContentViewController_hasMetadataViewFinishedPreheat) = 1;
      sub_100271F30();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

const char *sub_10047CF10()
{
  return "levelOfDetail";
}

id sub_10047CF1C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 levelOfDetail];
  *a2 = result;
  return result;
}

id sub_10047CF50(void *a1, id *a2)
{
  return [*a2 setLevelOfDetail:*a1];
}

void sub_10047CF64()
{
}

uint64_t sub_10047CF6C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047CFA8(uint64_t a1)
{
  return sub_10047D050(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10046F9C4);
}

uint64_t sub_10047CFC4(uint64_t a1)
{
  return sub_10047D050(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10046F474);
}

uint64_t sub_10047CFE0()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10047D038(uint64_t a1)
{
  return sub_10047D050(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10046F088);
}

uint64_t sub_10047D050(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10047D068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10047D0D0()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10047D120(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_10046EFF0(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48));
}

uint64_t sub_10047D150()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047D160()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10047D170()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 56) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 80, 7);
}

void sub_10047D1D8()
{
  sub_10046EE34(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_10047D1EC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10047D234(uint64_t a1)
{
  sub_10046EC9C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_10047D240()
{
  swift_release();
  if (*(void *)(v0 + 32) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10047D2A0(uint64_t a1)
{
  sub_10046E824(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(char **)(v1 + 56));
}

uint64_t sub_10047D2B4()
{
  swift_release();
  if (*(void *)(v0 + 56) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10047D30C(uint64_t a1, uint64_t a2)
{
  return sub_10046E474(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_10047D340()
{
  swift_release();
  if (*(void *)(v0 + 40) >= 0xBuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10047D390()
{
  uint64_t v1 = (void (*)(uint64_t))v0[2];
  uint64_t v2 = sub_10046C54C(v0[4], v0[5], v0[6], v0[7]);
  v1(v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10047D410(uint64_t a1)
{
  return sub_1001FCF64(a1, *(void *)(v1 + 16)) & 1;
}

id sub_10047D430()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_10047229C();

  return [v1 layoutBelowIfNeeded];
}

uint64_t sub_10047D470()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10047D480(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10047D4E0(void *a1)
{
}

void sub_10047D4E8()
{
}

uint64_t sub_10047D4FC()
{
  return 8;
}

uint64_t sub_10047D508()
{
  return swift_release();
}

uint64_t sub_10047D510(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10047D524(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10047D530(uint64_t a1)
{
  return sub_10047D410(a1) & 1;
}

uint64_t sub_10047D590(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_10047D684()
{
  uint64_t v1 = *v0;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v3 = String._bridgeToObjectiveC()();
  [v1 setObject:isa forKey:v3];
}

uint64_t sub_10047D70C()
{
  uint64_t v1 = *v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 stringArrayForKey:v2];

  if (!v3) {
    return 0;
  }
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_10047D780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *v3;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 doc_roleSpecificKeyForKey:v6 configuration:a3];

  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v8;
}

void sub_10047D7F8(void *a1)
{
  NSString v2 = v1;
  uint64_t v4 = sub_10047DFD4(1);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_10047DFD4(0);
  swift_bridgeObjectRetain();
  if ([a1 isAvailableSystemWide])
  {
    swift_bridgeObjectRelease();
    id v6 = [a1 identifier];
    char v7 = sub_100082AC0(v6, v5);
    swift_bridgeObjectRelease();

    if (v7) {
      goto LABEL_13;
    }
    id v8 = [a1 identifier];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v5 = sub_10018FD80(0, v5[2] + 1, 1, v5);
    }
    unint64_t v10 = v5[2];
    unint64_t v9 = v5[3];
    unint64_t v11 = v10 + 1;
    if (v10 >= v9 >> 1)
    {
      uint64_t v12 = sub_10018FD80((void *)(v9 > 1), v10 + 1, 1, v5);
      uint64_t v5 = v12;
    }
    else
    {
      uint64_t v12 = v5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v13 = [a1 identifier];
    char v14 = sub_100082AC0(v13, v4);
    swift_bridgeObjectRelease();

    if (v14) {
      goto LABEL_13;
    }
    id v8 = [a1 identifier];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_10018FD80(0, v4[2] + 1, 1, v4);
    }
    unint64_t v10 = v4[2];
    unint64_t v15 = v4[3];
    unint64_t v11 = v10 + 1;
    if (v10 >= v15 >> 1)
    {
      uint64_t v12 = sub_10018FD80((void *)(v15 > 1), v10 + 1, 1, v4);
      uint64_t v4 = v12;
    }
    else
    {
      uint64_t v12 = v4;
    }
  }
  v12[2] = v11;
  v12[v10 + 4] = v8;
LABEL_13:
  sub_10047DB60();
  uint64_t v17 = v16;
  sub_1000CBC00((uint64_t)(v2 + 4), (uint64_t)v29, &qword_10070CE68);
  uint64_t v18 = v30;
  if (!v30)
  {
    sub_1000CBBA4((uint64_t)v29, &qword_10070CE68);
LABEL_19:
    sub_10047DDD0(1, (uint64_t)v4);
    goto LABEL_20;
  }
  uint64_t v19 = v31;
  sub_1000A6B78(v29, v30);
  uint64_t v21 = v2[2];
  uint64_t v20 = v2[3];
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(v19 + 24))(v21, v20, v2[9], v18, v19);
  uint64_t v24 = v23;
  sub_10009B1B8((uint64_t)v29);
  if (v22 == v21 && v24 == v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if ((v25 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  sub_10047DDD0(0, (uint64_t)v5);
  swift_bridgeObjectRelease();
  sub_10047DB60();
  char v27 = sub_10047E644(v26, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
    id v28 = [self defaultCenter];
    [v28 postNotificationName:v2[11] object:0];
  }
}

void sub_10047DB60()
{
  uint64_t v0 = sub_10047DFD4(1);
  uint64_t v1 = (void *)sub_100167240((uint64_t)v0);
  swift_bridgeObjectRelease();
  NSString v2 = sub_10047DFD4(0);
  uint64_t v3 = sub_100167240((uint64_t)v2);
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10070CE50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0230;
  *(void *)(inited + 32) = static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
  uint64_t v5 = (void *)DOCDocumentSourceIdentifierLocal;
  id v6 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  *(void *)(inited + 40) = DOCDocumentSourceIdentifierLocal;
  *(void *)(inited + 48) = v6;
  id v7 = v5;
  id v8 = v6;
  unint64_t v9 = sub_10049D5A4(inited);
  swift_setDeallocating();
  type metadata accessor for DOCDocumentSourceIdentifier(0);
  swift_arrayDestroy();
  sub_10047DC64(v3, v1);
  sub_10047DC64((uint64_t)v9, v10);
}

void sub_10047DC64(uint64_t a1, void *a2)
{
  int64_t v3 = 0;
  v14[1] = a2;
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1000EE4F0(v14, *(id *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_10047DDD0(char a1, uint64_t a2)
{
  int64_t v3 = v2;
  if (a1)
  {
    sub_1000CBC00((uint64_t)(v2 + 4), (uint64_t)v21, &qword_10070CE68);
    uint64_t v7 = v22;
    if (!v22)
    {
      uint64_t result = sub_1000CBBA4((uint64_t)v21, &qword_10070CE68);
      __break(1u);
      return result;
    }
    uint64_t v8 = v23;
    sub_1000A6B78(v21, v22);
    uint64_t v6 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v8 + 24))(v2[2], v2[3], v2[9], v7, v8);
    uint64_t v5 = v9;
    sub_10009B1B8((uint64_t)v21);
  }
  else
  {
    uint64_t v6 = v2[2];
    uint64_t v5 = v3[3];
    swift_bridgeObjectRetain();
  }
  sub_1000CBC00((uint64_t)(v3 + 4), (uint64_t)v21, &qword_10070CE68);
  uint64_t v10 = v22;
  if (v22)
  {
    uint64_t v11 = v23;
    sub_1000A6B78(v21, v22);
    int64_t v12 = *(void *)(a2 + 16);
    if (v12)
    {
      sub_100059E2C(0, v12, 0);
      uint64_t v13 = a2 + 32;
      do
      {
        uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v16 = v15;
        unint64_t v18 = _swiftEmptyArrayStorage[2];
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        if (v18 >= v17 >> 1) {
          sub_100059E2C(v17 > 1, v18 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v18 + 1;
        uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
        v19[4] = v14;
        v19[5] = v16;
        v13 += 8;
        --v12;
      }
      while (v12);
    }
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(_swiftEmptyArrayStorage, v6, v5, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_10009B1B8((uint64_t)v21);
  }
  else
  {
    swift_bridgeObjectRelease();
    return sub_1000CBBA4((uint64_t)v21, &qword_10070CE68);
  }
}

void *sub_10047DFD4(char a1)
{
  NSString v2 = v1;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = v1[2];
    uint64_t v4 = v2[3];
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  sub_1000CBC00((uint64_t)(v1 + 4), (uint64_t)v18, &qword_10070CE68);
  uint64_t v5 = v19;
  if (v19)
  {
    uint64_t v6 = v20;
    sub_1000A6B78(v18, v19);
    uint64_t v3 = (*(uint64_t (**)(void, void, void, uint64_t, uint64_t))(v6 + 24))(v1[2], v1[3], v1[9], v5, v6);
    uint64_t v4 = v7;
    sub_10009B1B8((uint64_t)v18);
LABEL_5:
    sub_1000CBC00((uint64_t)(v2 + 4), (uint64_t)v18, &qword_10070CE68);
    uint64_t v8 = v19;
    if (v19)
    {
      uint64_t v9 = v20;
      sub_1000A6B78(v18, v19);
      uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(v3, v4, v8, v9);
      swift_bridgeObjectRelease();
      sub_10009B1B8((uint64_t)v18);
      if (v10)
      {
        int64_t v11 = v10[2];
        if (v11) {
          goto LABEL_8;
        }
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1000CBBA4((uint64_t)v18, &qword_10070CE68);
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
    int64_t v11 = _swiftEmptyArrayStorage[2];
    if (v11)
    {
LABEL_8:
      v18[0] = _swiftEmptyArrayStorage;
      sub_10006EB0C(0, v11, 0);
      uint64_t v12 = v18[0];
      uint64_t v13 = v10 + 5;
      do
      {
        swift_bridgeObjectRetain();
        NSString v14 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        v18[0] = v12;
        unint64_t v16 = *(void *)(v12 + 16);
        unint64_t v15 = *(void *)(v12 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_10006EB0C(v15 > 1, v16 + 1, 1);
          uint64_t v12 = v18[0];
        }
        v13 += 2;
        *(void *)(v12 + 16) = v16 + 1;
        *(void *)(v12 + 8 * v16 + 32) = v14;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      return (void *)v12;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)sub_1000CBBA4((uint64_t)v18, &qword_10070CE68);
  __break(1u);
  return result;
}

uint64_t sub_10047E204()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_beginAccess();
    unint64_t v2 = *(void *)(v1 + 80);
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v3 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v3)
      {
LABEL_4:
        if (v3 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v4 = 0;
        do
        {
          if ((v2 & 0xC000000000000001) != 0)
          {
            uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v5 = *(void *)(v2 + 8 * v4 + 32);
            swift_retain();
          }
          ++v4;
          uint64_t v6 = *(void (**)(uint64_t))(v5 + 16);
          swift_retain();
          v6(v1);
          swift_release();
          swift_release();
        }
        while (v3 != v4);
      }
    }
    swift_bridgeObjectRelease_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_10047E350()
{
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + 32, &qword_10070CE68);

  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + 96, (uint64_t *)&unk_100705D60);

  return swift_deallocClassInstance();
}

uint64_t sub_10047E3C0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10047E3F8()
{
  return sub_10047E204();
}

uint64_t sub_10047E400(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v20 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v10 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
  {
    sub_10008E1D0(*(void *)(v3 + 48) + 40 * i, (uint64_t)v24);
    v22[0] = v24[0];
    v22[1] = v24[1];
    uint64_t v23 = v25;
    Swift::Int v15 = AnyHashable._rawHashValue(seed:)(*(void *)(a2 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = v15 & ~v16;
    if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {
LABEL_29:
      sub_10008E17C((uint64_t)v22);
      return 0;
    }
    uint64_t v18 = ~v16;
    while (1)
    {
      sub_10008E1D0(*(void *)(a2 + 48) + 40 * v17, (uint64_t)v21);
      char v19 = static AnyHashable.== infix(_:_:)();
      sub_10008E17C((uint64_t)v21);
      if (v19) {
        break;
      }
      unint64_t v17 = (v17 + 1) & v18;
      if (((*(void *)(v9 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t result = sub_10008E17C((uint64_t)v22);
    if (v8) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v12 >= v20) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v20) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v20) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v20) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v8 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v20) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v20) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10047E644(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v32 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v33 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v35 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v34 = v3;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_27;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v9 >= v33) {
      return 1;
    }
    unint64_t v10 = *(void *)(v32 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v33) {
        return 1;
      }
      unint64_t v10 = *(void *)(v32 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v33) {
          return 1;
        }
        unint64_t v10 = *(void *)(v32 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v3 + 4;
          if (v3 + 4 >= v33) {
            return 1;
          }
          unint64_t v10 = *(void *)(v32 + 8 * v11);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_26:
    unint64_t v6 = (v10 - 1) & v10;
    int64_t v34 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_27:
    uint64_t v13 = result;
    int64_t v14 = *(void **)(*(void *)(result + 48) + 8 * v8);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v15 = v14;
    String.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;
    if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
    {
LABEL_7:
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        uint64_t v25 = ~v17;
        while (1)
        {
          unint64_t v18 = (v18 + 1) & v25;
          if (((*(void *)(v35 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            break;
          }
          uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v28 = v27;
          if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29) {
            goto LABEL_7;
          }
          char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31) {
            goto LABEL_8;
          }
        }
LABEL_42:

        return 0;
      }
    }
LABEL_8:

    uint64_t result = v13;
    int64_t v3 = v34;
  }
  uint64_t v12 = v3 + 5;
  if (v3 + 5 >= v33) {
    return 1;
  }
  unint64_t v10 = *(void *)(v32 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v33) {
      return 1;
    }
    unint64_t v10 = *(void *)(v32 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_26;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_10047E974@<X0>(void *a1@<X8>)
{
  if ([v1 goToFileProviderCandidateSource])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1000516C4((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    uint64_t v3 = type metadata accessor for DOCFileProviderSourcesCandidateSource();
    uint64_t result = swift_dynamicCast();
    if (result)
    {
      a1[3] = v3;
      a1[4] = &off_1006B30C8;
      *a1 = v5;
      return result;
    }
  }
  else
  {
    sub_10006273C((uint64_t)v7);
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_10047EA84(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v2 = a2;
  unint64_t v6 = sub_10004F108(0);
  if ((v7 & 1) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain_n();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    if (v8) {
      goto LABEL_5;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  unint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
  uint64_t v4 = _swiftEmptyArrayStorage;
  v20[0] = _swiftEmptyArrayStorage;
  if (v3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v8 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (!v8) {
    goto LABEL_20;
  }
LABEL_5:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_37;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v3 + 8 * i + 32);
    }
    int64_t v11 = v10;
    type metadata accessor for DOCFileProviderSource(0);
    if (swift_dynamicCastClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v20[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v20[0];
LABEL_21:
  swift_bridgeObjectRelease();
  v20[0] = v4;
  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13) {
      goto LABEL_23;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyArrayStorage;
LABEL_35:
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v2;
    *(void *)(v18 + 24) = v17;
    v20[4] = sub_10047FDF0;
    v20[5] = v18;
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 1107296256;
    v20[2] = sub_1000666D8;
    v20[3] = &unk_1006AE928;
    uint64_t v19 = _Block_copy(v20);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v19);
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_34;
  }
LABEL_23:
  if (v13 >= 1)
  {
    for (uint64_t j = 0; j != v13; ++j)
    {
      if ((v12 & 0xC000000000000001) != 0) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(v12 + 8 * j + 32);
      }
      Swift::Int v16 = v15;
      if (((unint64_t)objc_msgSend(v15, "status", v20[0]) | 2) == 2)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = (void *)v20[0];
    goto LABEL_35;
  }
LABEL_37:
  __break(1u);
}

void sub_10047EDCC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong setCurrentGoToFileProviderSource:0];
    type metadata accessor for DOCFileProviderSource(0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v1 setGoToFileProviderSources:isa];

    sub_10047EE78();
    [v1 setSourceOrderObserver:0];
  }
}

void sub_10047EE78()
{
  id v1 = [v0 goToFileProviderSources];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v4 = [v0 traitCollection];
    id v5 = [v4 horizontalSizeClass];

    if (v5 == (id)2)
    {
      unint64_t v6 = (char *)[v0 effectiveBrowserViewController];
      if (v6)
      {
        char v7 = v6;
        uint64_t v8 = (void **)&v6[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
        swift_beginAccess();
        int64_t v9 = *v8;
        if (!v9
          || (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v10 = swift_dynamicCastClass()) == 0))
        {
          swift_bridgeObjectRelease();

          return;
        }
        uint64_t v11 = v10;
        id v12 = v9;

        uint64_t v13 = (void *)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration);
        int64_t v14 = *(void **)(v11 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_itemCollectionConfiguration + 24);
        if (!v14)
        {
          swift_bridgeObjectRelease();

          return;
        }
        id v15 = v14;
        id v16 = [v0 configuration];
        type metadata accessor for DOCFileProviderSourcesCandidateSource();
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v16;
        *(void *)(v17 + 24) = v3;
        *(unsigned char *)(v17 + 32) = 0;
        swift_bridgeObjectRetain();
        [v0 setGoToFileProviderCandidateSource:v17];
        swift_release();
        id v18 = [v0 configuration];
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v18;
        *(void *)(v19 + 24) = v3;
        *(unsigned char *)(v19 + 32) = 1;
        [v0 setGoToHiddenFileProviderCandidateSource:v19];
        swift_release();
        [v0 setCurrentGoToFileProviderSource:*v13];
        v47[3] = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        v47[4] = &off_1006B30A0;
        v47[0] = v15;
        id v20 = v15;
        sub_10047F4A8((uint64_t)v47, v48);
        sub_10009B1B8((uint64_t)v47);
        id v21 = [v0 configuration];
        id v22 = [self sharedManager];
        uint64_t v23 = type metadata accessor for DOCFavoritesCandidateSource();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v21;
        *(void *)(v24 + 24) = v22;
        id v25 = [v0 view];
        if (!v25) {
          goto LABEL_25;
        }
        uint64_t v26 = v25;
        uint64_t v46 = v12;
        id v27 = [v25 effectiveUserInterfaceLayoutDirection];

        uint64_t v28 = type metadata accessor for DOCRecentLocationsCandidateSource();
        uint64_t v29 = (void *)swift_allocObject();
        id v30 = v0;
        unint64_t v31 = sub_100495CA0((uint64_t)_swiftEmptyArrayStorage);
        v29[2] = v27;
        void v29[3] = v31;
        v29[5] = &off_1006AE8F0;
        swift_unknownObjectUnownedInit();

        sub_1000CBE70(&qword_1007174E8);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1005A0500;
        *(void *)(v32 + 56) = v28;
        *(void *)(v32 + 64) = &off_1006B30D8;
        *(void *)(v32 + 32) = v29;
        swift_retain();
        sub_10047E974((void *)(v32 + 72));
        sub_1000D4774((uint64_t)v48, v32 + 112);
        *(void *)(v32 + 176) = v23;
        *(void *)(v32 + 184) = &off_1006B30B8;
        *(void *)(v32 + 152) = v24;
        type metadata accessor for DOCCompositionalCandidateSource();
        uint64_t v33 = swift_allocObject();
        int64_t v34 = self;
        swift_retain();
        id v35 = [v34 mapTableWithKeyOptions:0 valueOptions:0];
        *(void *)(v33 + 16) = v32;
        *(void *)(v33 + 24) = v35;
        uint64_t v36 = objc_allocWithZone((Class)type metadata accessor for DOCGoToViewController());
        id v37 = v20;
        swift_retain();
        uint64_t v45 = v37;
        uint64_t v38 = (char *)sub_10047FDF8((uint64_t)v37, v33, v36);
        *(void *)&v38[OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate + 8] = &off_1006AE8C0;
        swift_unknownObjectWeakAssign();
        [v38 setModalPresentationStyle:4];
        [v38 setTransitioningDelegate:v30];
        id v39 = [self dismissingKeyCommandsWithAction:"performDismiss:"];
        sub_10009E6C4(0, &qword_100708860);
        unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v40 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
          if (v41) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v41)
          {
LABEL_10:
            if (v41 >= 1)
            {
              for (uint64_t i = 0; i != v41; ++i)
              {
                if ((v40 & 0xC000000000000001) != 0) {
                  id v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                }
                else {
                  id v43 = *(id *)(v40 + 8 * i + 32);
                }
                uint64_t v44 = v43;
                [v38 addKeyCommand:v43, v45];
              }
              goto LABEL_22;
            }
            __break(1u);
LABEL_25:
            __break(1u);
            return;
          }
        }
LABEL_22:
        swift_bridgeObjectRelease_n();
        [v30 presentViewController:v38 animated:1 completion:0];

        swift_release();
        swift_release();
        swift_release();

        sub_10009B1B8((uint64_t)v48);
        return;
      }
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10047F4A8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  id v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemCollectionConfiguration();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = __chkstk_darwin(v12);
  id v15 = (char *)&v33 - v14;
  id v16 = [v3 currentGoToFileProviderSource:v13];
  if (!v16) {
    goto LABEL_8;
  }
  uint64_t v17 = v16;
  sub_1000D4774(a1, (uint64_t)v36);
  sub_1000CBE70((uint64_t *)&unk_1007174F0);
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  if (!swift_dynamicCast()) {
    goto LABEL_8;
  }
  id v18 = v35;
  id v19 = v17;
  id v20 = [v3 configuration];
  id v21 = [v3 configuration];
  id v3 = [v21 browserViewContext];

  int64_t v34 = a2;
  if (!v3)
  {
    char v22 = 2;
LABEL_7:
    uint64_t v23 = enum case for DOCItemSortMode.name(_:);
    uint64_t v24 = type metadata accessor for DOCItemSortMode();
    uint64_t v25 = *(void *)(v24 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v8, v23, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v8, 0, 1, v24);
    id v26 = v18;
    DOCItemCollectionConfiguration.init(source:configuration:context:initialLocation:defaultSorting:searchStartLocation:viewAccessibilityIdentifier:isBrowsingTrash:)(v19, v20, v22, v18, (uint64_t)v8, 0, 0, 0, (uint64_t)v15, 0);
    sub_1000B230C((uint64_t)v15, (uint64_t)v11);
    id v27 = (objc_class *)type metadata accessor for DOCItemCollectionCandidateSource();
    id v28 = objc_allocWithZone(v27);
    id v29 = sub_1004ED2EC((uint64_t)v11);
    id v30 = v34;
    v34[3] = v27;
    v30[4] = &off_1006B3120;

    *id v30 = v29;
    return sub_1000A4D20((uint64_t)v15);
  }
  if (v3 == (id)1)
  {
    char v22 = 3;
    goto LABEL_7;
  }
  while (v3 == (id)2)
  {
LABEL_8:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  type metadata accessor for DOCBrowserViewContext(0);
  v36[3] = v32;
  v36[0] = v3;
  uint64_t result = doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
  __break(1u);
  return result;
}

void sub_10047F8C8(void *a1, uint64_t a2)
{
  id v3 = v2;
  sub_1000D4774(a2, (uint64_t)v11);
  sub_1000CBE70((uint64_t *)&unk_1007174F0);
  uint64_t v5 = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  if (swift_dynamicCast())
  {
    uint64_t v6 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
    *(void *)(v7 + 56) = v5;
    *(void *)(v7 + 64) = sub_1004801F4();
    *(void *)(v7 + 32) = v10;
    uint64_t v8 = v10;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    [a1 dismissViewControllerAnimated:1 completion:0];
    type metadata accessor for DOCRecentLocationsCandidateSource();
    sub_1004EBC48(v8);
    id v9 = [v3 hierarchyController];
    sub_1000BCD84(v8, v8, 0, 1, 0, 0, 0);
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

uint64_t sub_10047FAA8@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  return sub_10047F4A8(a1, a2);
}

uint64_t sub_10047FAB0(uint64_t a1, void *a2)
{
  return sub_1004805C4(a2);
}

void sub_10047FAB8(uint64_t a1, uint64_t a2)
{
}

void sub_10047FAC4()
{
  sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  uint64_t v0 = (void *)static NSUserDefaults.docUserDefaults.getter();
  if (v0)
  {
    id v1 = v0;
    [v0 removeObjectForKey:DOCUserDefaultsKeyMostRecentGoToLocations];
  }
}

id DOCFullDocumentManagerViewController.animationController(forPresented:presenting:source:)()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for DOCModalBlurViewControllerTransition());
  return sub_100462B58(0);
}

id DOCFullDocumentManagerViewController.animationController(forDismissed:)()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for DOCModalBlurViewControllerTransition());
  return sub_100462B58(1);
}

uint64_t sub_10047FCCC(uint64_t a1, void *a2)
{
  id v4 = [v2 goToFileProviderSources];
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for DOCFileProviderSource(0);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v7 = a2;
    LOBYTE(v5) = sub_100480070(v6);
    swift_bridgeObjectRelease();

    return v5 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_10047FDB0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10047FDF0()
{
}

id sub_10047FDF8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  void v21[3] = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  v21[4] = &off_1006B30A0;
  v21[0] = a1;
  v20[3] = type metadata accessor for DOCCompositionalCandidateSource();
  v20[4] = &off_10069E3A8;
  v20[0] = a2;
  *(void *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_suggestionsTableViewWidthConstraint] = 0;
  *(void *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_contentView] = 0;
  a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialSuggestionsToken] = 1;
  unint64_t v6 = &a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_filteringSource];
  *((void *)v6 + 4) = 0;
  *(_OWORD *)unint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_scrollViewDidScrollObservation] = 0;
  uint64_t v7 = (uint64_t)&a3[OBJC_IVAR____TtC5Files21DOCGoToViewController_currentGoToLocation];
  *(void *)(v7 + 32) = 0;
  *(_OWORD *)uint64_t v7 = 0u;
  *(_OWORD *)(v7 + 16) = 0u;
  uint64_t v8 = a3;
  UUID.init()();
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___inputField] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___goButton] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___separatorView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___noResultsView] = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___suggestionsTableViewController] = 0;
  id v9 = &v8[OBJC_IVAR____TtC5Files21DOCGoToViewController_metrics];
  __asm
  {
    FMOV            V0.2D, #16.0
    FMOV            V1.2D, #12.0
  }
  *(_OWORD *)id v9 = _Q0;
  *((_OWORD *)v9 + 1) = _Q1;
  *((void *)v9 + 4) = 0;
  v9[40] = 1;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  v9[80] = 1;
  *((void *)v9 + 12) = 0;
  *((void *)v9 + 13) = 0;
  *((void *)v9 + 11) = 0;
  *(void *)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController____lazy_storage___closeBox] = 1;
  sub_1000D4774((uint64_t)v21, (uint64_t)v19);
  swift_beginAccess();
  sub_100480008((uint64_t)v19, v7);
  swift_endAccess();
  sub_1000D4774((uint64_t)v20, (uint64_t)&v8[OBJC_IVAR____TtC5Files21DOCGoToViewController_initialCandidateSource]);

  v18.receiver = v8;
  v18.super_class = (Class)type metadata accessor for DOCGoToViewController();
  [super init];
  sub_10009B1B8((uint64_t)v20);
  sub_10009B1B8((uint64_t)v21);
  return v16;
}

uint64_t sub_100480008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070D7E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100480070(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = [v4 identifier];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;
      if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
      {

        swift_bridgeObjectRelease_n();
        char v13 = 1;
        goto LABEL_19;
      }
      char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        ++v3;
        if (v6 != v2) {
          continue;
        }
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  char v13 = 0;
LABEL_19:
  swift_bridgeObjectRelease();
  return v13 & 1;
}

unint64_t sub_1004801F4()
{
  unint64_t result = qword_10070B688;
  if (!qword_10070B688)
  {
    sub_10009E6C4(255, (unint64_t *)&unk_1007085C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10070B688);
  }
  return result;
}

void sub_10048025C(uint64_t a1)
{
  sub_1000D4774(a1, (uint64_t)v22);
  sub_1000CBE70((uint64_t *)&unk_1007174F0);
  uint64_t v2 = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
    *(void *)(v4 + 56) = v2;
    *(void *)(v4 + 64) = sub_1004801F4();
    *(void *)(v4 + 32) = v21;
    id v5 = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v6 = [v1 currentGoToFileProviderSource];
    if (v6)
    {
      id v7 = v6;
      id v8 = [v1 goToFileProviderSources];
      if (v8)
      {
        uint64_t v9 = v8;
        type metadata accessor for DOCFileProviderSource(0);
        unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v11 = [v5 sourceIdentifier];
        id v12 = [v7 identifier];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;
        if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
        {

          swift_bridgeObjectRelease_n();
LABEL_8:
          swift_bridgeObjectRelease();
LABEL_11:

          return;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_8;
        }
        id v18 = v5;
        id v19 = sub_1003882A4(v10, v18);
        swift_bridgeObjectRelease();

        if (v19)
        {
          id v20 = v19;
          [v1 setCurrentGoToFileProviderSource:v20];

          goto LABEL_11;
        }
      }
    }
  }
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004805C4(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_1000A6B78(a1, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 24))(v13, v2, v3);
  sub_1000CBE70((uint64_t *)&unk_1007174F0);
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  if (swift_dynamicCast())
  {
    id v4 = [v12 fileProviderItem];
    if (v4)
    {
      id v5 = v4;
      if (qword_1007052B8 != -1) {
        swift_once();
      }
      id v6 = sub_1005234D8(v5);
    }
    else
    {
      sub_1000D4774((uint64_t)a1, (uint64_t)v13);
      sub_1000CBE70((uint64_t *)&unk_100717500);
      if (!swift_dynamicCast())
      {

        return 0;
      }
      id v5 = v12;
      id v8 = *(void **)&v12[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
      if (v8)
      {
        uint64_t v9 = v12;
        if ([v8 isiCloudDriveProvider])
        {
          NSString v10 = String._bridgeToObjectiveC()();
          id v6 = [self systemImageNamed:v10];

          if (v6)
          {

            return (uint64_t)v6;
          }
        }
      }
      else
      {
        id v11 = v12;
      }
      id v6 = [v12 iconPreferingSymbolImages];
    }
    return (uint64_t)v6;
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100480824()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([self protectedAppsEnabled])
  {
    static Logger.UI.getter();
    id v5 = v0;
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v20 = v2;
      uint64_t v9 = v8;
      id v18 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v22 = v19;
      *(_DWORD *)uint64_t v9 = 136315394;
      uint64_t v21 = sub_10009B0E4(0xD000000000000029, 0x80000001005F8180, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 12) = 2112;
      uint64_t v21 = (uint64_t)v5;
      id v10 = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v18 = v5;

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "[PROTECTED APPS] %s: self: %@", (uint8_t *)v9, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    id v11 = self;
    id v12 = [v11 defaultCenter];
    [v12 removeObserver:v5 name:DOCAppProtectionStatusDidChangeNotification object:0];

    id v13 = [v11 defaultCenter];
    [v13 removeObserver:v5 name:UIApplicationDidEnterBackgroundNotification object:0];

    id v14 = [v11 defaultCenter];
    [v14 removeObserver:v5 name:UIApplicationWillEnterForegroundNotification object:0];

    id v15 = [v11 defaultCenter];
    [v15 removeObserver:v5 name:NSExtensionHostDidEnterBackgroundNotification object:0];

    id v16 = [v11 defaultCenter];
    [v16 removeObserver:v5 name:NSExtensionHostWillEnterForegroundNotification object:0];
  }
}

id sub_100480BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self protectedAppsEnabled];
  if (result)
  {
    uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
    if (!v7)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    uint64_t v9 = (void *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
    char v10 = *(unsigned char *)(v7 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16);
    int v27 = v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    if (v10)
    {
      uint64_t v11 = *(void *)(*v9 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
      swift_unknownObjectRetain();
    }
    else
    {
      uint64_t v11 = v9[1];
      swift_unknownObjectRetain();
      if (!v11)
      {
        unsigned __int8 v13 = 0;
LABEL_7:
        v1[v8] = v13;
        v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
        static Logger.UI.getter();
        id v14 = v1;
        id v15 = Logger.logObject.getter();
        int v16 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v15, (os_log_type_t)v16))
        {
          int v23 = v16;
          uint64_t v26 = v3;
          uint64_t v22 = v2;
          uint64_t v17 = swift_slowAlloc();
          uint64_t v24 = (void *)swift_slowAlloc();
          uint64_t v25 = swift_slowAlloc();
          uint64_t v29 = v25;
          *(_DWORD *)uint64_t v17 = 136316162;
          uint64_t v28 = sub_10009B0E4(0xD000000000000016, 0x80000001005F80B0, &v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v17 + 12) = 1024;
          LODWORD(v28) = v27;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v17 + 18) = 1024;
          LODWORD(v28) = v1[v8];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v17 + 24) = 2080;
          uint64_t v18 = v22;
          uint64_t v28 = swift_unknownObjectRetain();
          sub_1000CBE70(&qword_100717520);
          uint64_t v19 = String.init<A>(describing:)();
          uint64_t v28 = sub_10009B0E4(v19, v20, &v29);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v17 + 34) = 2112;
          uint64_t v28 = (uint64_t)v14;
          uint64_t v21 = v14;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v24 = v14;

          _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v23, "[PROTECTED APPS] %s: changed from: %{BOOL}d to locationIsProtected: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v17, 0x2Cu);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          return (id)(*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v18);
        }
        else
        {

          return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        }
      }
    }
    id v12 = [self sharedManager];
    unsigned __int8 v13 = [v12 nodeRequiresAuthentication_Sync:v11];

    swift_unknownObjectRelease();
    goto LABEL_7;
  }
  return result;
}

void sub_100481070()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = self;
  if ([v5 protectedAppsEnabled])
  {
    static Logger.UI.getter();
    id v6 = v0;
    uint64_t v7 = Logger.logObject.getter();
    int v8 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v7, (os_log_type_t)v8))
    {
      int v18 = v8;
      os_log_t v20 = v7;
      uint64_t v21 = v2;
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v23 = v19;
      *(_DWORD *)uint64_t v9 = 136316162;
      uint64_t v22 = sub_10009B0E4(0xD000000000000030, 0x80000001005F8100, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 12) = 1024;
      uint64_t v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
      LODWORD(v22) = v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 18) = 1024;
      if ([v5 protectedAppsEnabled]) {
        BOOL v11 = v6[v10] == 1
      }
           && (v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
      else {
        BOOL v11 = 0;
      }
      LODWORD(v22) = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v9 + 24) = 2080;
      if (!*(void *)&v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
      {

        __break(1u);
        return;
      }
      uint64_t v22 = swift_unknownObjectRetain();
      sub_1000CBE70(&qword_100717520);
      uint64_t v12 = String.init<A>(describing:)();
      uint64_t v22 = sub_10009B0E4(v12, v13, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 34) = 2112;
      uint64_t v22 = (uint64_t)v6;
      id v14 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v17 = v6;

      os_log_t v15 = v20;
      _os_log_impl((void *)&_mh_execute_header, v20, (os_log_type_t)v18, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v9, 0x2Cu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    v6[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] = 0;
    sub_1000B0690();
  }
}

void sub_1004814EC()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v5 = v0;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  int v8 = &selRef_cellForItemAtIndexPath_;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v24 = v1;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v9 = 136316162;
    uint64_t v25 = sub_10009B0E4(0xD00000000000002BLL, 0x80000001005F80D0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 1024;
    uint64_t v10 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected;
    LODWORD(v25) = v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 18) = 1024;
    BOOL v11 = [self protectedAppsEnabled]
       && v5[v10] == 1
       && (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) == 0;
    LODWORD(v25) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 24) = 2080;
    if (!*(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection])
    {

      __break(1u);
      goto LABEL_20;
    }
    uint64_t v25 = swift_unknownObjectRetain();
    sub_1000CBE70(&qword_100717520);
    uint64_t v12 = String.init<A>(describing:)();
    uint64_t v25 = sub_10009B0E4(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 34) = 2112;
    uint64_t v25 = (uint64_t)v5;
    id v14 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[PROTECTED APPS] %s: locationIsProtected: %{BOOL}d shouldShowAppProtectionShieldUI: %{BOOL}d observedNode: %s self: %@", (uint8_t *)v9, 0x2Cu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
    int v8 = &selRef_cellForItemAtIndexPath_;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_100480BFC();
  os_log_t v15 = self;
  if (![v15 v8[368]]
    || ![v15 v8[368]]
    || v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationIsProtected] != 1
    || (v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_locationHasAuthenticated] & 1) != 0)
  {
    return;
  }
  uint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v16)
  {
LABEL_20:
    __break(1u);
    return;
  }
  uint64_t v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v17 + 16))
  {
    uint64_t v18 = *(void *)(*(void *)v17 + OBJC_IVAR____TtC5Files23DOCFileSystemCollection_observedNode);
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v18 = *(void *)(v17 + 8);
    swift_unknownObjectRetain();
    if (!v18) {
      return;
    }
  }
  id v19 = [self sharedManager];
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (uint64_t)sub_100482008;
  aBlock[5] = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100007FA4;
  aBlock[3] = (uint64_t)&unk_1006AE9A0;
  uint64_t v21 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  [v19 authenticateLocationWithNoUI:v18 completion:v21];
  _Block_release(v21);

  swift_unknownObjectRelease_n();
}

void sub_100481AD4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Notification();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  id v11 = v1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v25 = v7;
    uint64_t v15 = v14;
    uint64_t v22 = (void *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v26 = sub_10009B0E4(0xD000000000000029, 0x80000001005F8080, &v27);
    uint64_t v24 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    os_log_t v21 = v12;
    sub_100481FB0();
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v26 = sub_10009B0E4(v16, v17, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    *(_WORD *)(v15 + 22) = 2112;
    uint64_t v26 = (uint64_t)v11;
    id v18 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v22 = v11;

    os_log_t v19 = v21;
    _os_log_impl((void *)&_mh_execute_header, v21, v13, "[PROTECTED APPS] %s: notification: %s self: %@", (uint8_t *)v15, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_100480BFC();
  sub_1000B0690();
}

uint64_t sub_100481F78()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100481FB0()
{
  unint64_t result = qword_100717518;
  if (!qword_100717518)
  {
    type metadata accessor for Notification();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717518);
  }
  return result;
}

void sub_100482008(int a1, uint64_t a2)
{
  sub_10001DD08(a1, a2, v2, 0xD00000000000002BLL, 0x80000001005F80D0);
}

uint64_t sub_100482044(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  uint64_t v83 = v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v79 = (uint8_t *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v75 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  os_log_type_t v13 = (char *)&v75 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v75 - v14;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v80 = v16;
  uint64_t v81 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v78 = (uint8_t *)&v75 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v75 - v23;
  uint64_t v25 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v75 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v29, (uint64_t)v86, (uint64_t *)&unk_100705D60);
  if (v86[3])
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v30 = (id)v85;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v86, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v30 = (id)qword_10071BD48;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  unint64_t v31 = v28;
  unint64_t v32 = IndexPath.section.getter();
  uint64_t v84 = v31;
  uint64_t v33 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((v32 & 0x8000000000000000) != 0 || v32 >= *(void *)(v33 + 16))
  {
    swift_bridgeObjectRelease();
    id v35 = v84;
    if (a2)
    {
      IndexPath.section.getter();
      IndexPath.init(row:section:)();
      unint64_t v36 = IndexPath.section.getter();
      uint64_t v37 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
      uint64_t v76 = v25;
      if ((v36 & 0x8000000000000000) != 0 || v36 >= *(void *)(v37 + 16))
      {
        uint64_t v78 = (uint8_t *)v26;
        swift_bridgeObjectRelease();
        uint64_t v54 = v83;
        uint64_t v55 = *(void (**)(char *, uint64_t))(v83 + 8);
        id v56 = v13;
        uint64_t v57 = v82;
        v55(v56, v82);
        static Logger.UI.getter();
        uint64_t v58 = v79;
        (*(void (**)(uint8_t *, uint64_t, uint64_t))(v54 + 16))(v79, a1, v57);
        int v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v59, v60))
        {
          id v61 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v61 = 134349056;
          uint64_t v62 = v57;
          uint64_t v83 = (uint64_t)(v61 + 4);
          uint64_t v63 = IndexPath.section.getter();
          v55((char *)v58, v62);
          v86[0] = v63;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Couldn't find section: section %{public}ld is not valid", v61, 0xCu);
          id v35 = v84;
          swift_slowDealloc();
        }
        else
        {
          v55((char *)v58, v57);
        }

        (*(void (**)(char *, uint64_t))(v81 + 8))(v20, v80);
        (*((void (**)(char *, uint64_t))v78 + 1))(v35, v76);
      }
      else
      {
        uint64_t v38 = v26;
        unint64_t v39 = v37 + 16 * v36;
        uint64_t v34 = *(void *)(v39 + 32);
        uint64_t v40 = *(void *)(v39 + 40);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v41 = v82;
        uint64_t v42 = *(void (**)(char *, uint64_t))(v83 + 8);
        v42(v13, v82);
        v86[0] = v34;
        v86[1] = v40;
        NSDiffableDataSourceSnapshot.indexOfSection(_:)();
        if (v43)
        {
          uint64_t v46 = 0;
        }
        else
        {
          uint64_t v44 = NSDiffableDataSourceSnapshot.numberOfItems(inSection:)();
          if (v44 > 0) {
            uint64_t v45 = *(unsigned __int8 *)(v34 + 73);
          }
          else {
            uint64_t v45 = 0;
          }
          uint64_t v46 = v44 - v45;
        }
        Swift::String v65 = v78;
        if (v46 < IndexPath.row.getter())
        {
          (*(void (**)(char *, uint64_t))(v38 + 8))(v84, v76);
          return v34;
        }
        static Logger.UI.getter();
        Swift::String v66 = v77;
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v77, a1, v41);
        id v67 = v65;
        char v68 = Logger.logObject.getter();
        uint64_t v69 = v41;
        os_log_type_t v70 = static os_log_type_t.info.getter();
        uint64_t v71 = v38;
        if (os_log_type_enabled(v68, v70))
        {
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          uint64_t v83 = swift_slowAlloc();
          v86[0] = v83;
          uint64_t v79 = v72;
          *(_DWORD *)uint64_t v72 = 136446210;
          long long v75 = v72 + 4;
          sub_100115EC0();
          uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v85 = sub_10009B0E4(v73, v74, v86);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v42(v66, v69);
          _os_log_impl((void *)&_mh_execute_header, v68, v70, "Couldn't find section: indexPath %{public}s) isn't valid for insertion", v79, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_unknownObjectRelease();
          (*(void (**)(uint8_t *, uint64_t))(v81 + 8))(v78, v80);
        }
        else
        {

          swift_unknownObjectRelease();
          v42(v66, v69);
          (*(void (**)(uint8_t *, uint64_t))(v81 + 8))(v67, v80);
        }
        (*(void (**)(char *, uint64_t))(v71 + 8))(v84, v76);
      }
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v47 = v82;
      uint64_t v48 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v15, a1, v82);
      uint64_t v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        v86[0] = (uint64_t)v79;
        uint64_t v78 = v51;
        *(_DWORD *)uint64_t v51 = 136446210;
        uint64_t v76 = v25;
        sub_100115EC0();
        uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v85 = sub_10009B0E4(v52, v53, v86);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v47);
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "Could not find section: indexPath %{public}s is not valid", v78, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v80);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v84, v76);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v47);
        (*(void (**)(char *, uint64_t))(v81 + 8))(v24, v80);
        (*(void (**)(char *, uint64_t))(v26 + 8))(v35, v25);
      }
    }
    return 0;
  }
  else
  {
    uint64_t v34 = *(void *)(v33 + 16 * v32 + 32);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v84, v25);
  }
  return v34;
}

BOOL sub_100482A00()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  uint64_t v5 = v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v5, (uint64_t)&v15, (uint64_t *)&unk_100705D60);
  if (v17)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v6 = (id)v14[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v15, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v6 = (id)qword_10071BD48;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  sub_100486DAC((uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_100488974((uint64_t)v14, (uint64_t)&v15);
  if (!(void)v15) {
    return 0;
  }
  long long v20 = v15;
  uint64_t v7 = v16;
  uint64_t v8 = v17;
  uint64_t v9 = v18;
  unsigned __int8 v10 = v19;
  BOOL v11 = v19 == 255;
  sub_1003127F4((uint64_t)&v20);
  sub_1000A7C1C(v7, v8, v9, v10);
  return v11;
}

uint64_t sub_100482C08(uint64_t a1, int a2)
{
  LODWORD(v37) = a2;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Logger();
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v12, (uint64_t)&v42, (uint64_t *)&unk_100705D60);
  uint64_t v34 = v4;
  unint64_t v31 = v7;
  if (v44)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v13 = (id)v40[0];
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v42, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v13 = (id)qword_10071BD48;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v14 = a1;
  sub_100486DAC((uint64_t)v40);
  long long v15 = (void *)v40[2];
  uint64_t v16 = v40[3];
  uint64_t v17 = v40[4];
  unsigned __int8 v18 = v41;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_100488974((uint64_t)v40, (uint64_t)&v42);
  if (!(void)v42
    || (long long v46 = v42,
        uint64_t v19 = v43,
        int v20 = v45,
        swift_unknownObjectRetain(),
        sub_1000A9454(v15, v16, v17, v18),
        sub_1003127F4((uint64_t)&v46),
        v20 == 255))
  {
    if (v37)
    {
      uint64_t v21 = v31;
      static Logger.Sidebar.getter();
      uint64_t v22 = v33;
      uint64_t v23 = v32;
      uint64_t v24 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v14, v34);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v39 = v37;
        *(_DWORD *)uint64_t v27 = 136315394;
        uint64_t v38 = sub_10009B0E4(0xD00000000000001DLL, 0x80000001005F82A0, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v27 + 12) = 2080;
        uint64_t v28 = IndexPath.description.getter();
        uint64_t v38 = sub_10009B0E4(v28, v29, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s: Could not find sidebar item at index path: %s.", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1004889DC((uint64_t)v40);
      }
      else
      {
        sub_1004889DC((uint64_t)v40);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v21, v36);
    }
    else
    {
      sub_1004889DC((uint64_t)v40);
    }
    return 0;
  }
  else
  {
    sub_1004889DC((uint64_t)v40);
  }
  return v19;
}

id sub_100483178(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v5, (uint64_t *)&unk_1007069A0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v10 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
    v16.receiver = v1;
    v16.super_class = v10;
    id result = [super collectionView];
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v12 = result;
    type metadata accessor for DOCSidebarCollectionView();
    id v13 = (void *)swift_dynamicCastClassUnconditional();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v15 = [v13 cellForItemAtIndexPath:isa];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v15)
    {
      type metadata accessor for DOCSidebarItemCell(0);
      id result = (id)swift_dynamicCastClass();
      if (result) {
        return result;
      }
    }
  }
  return 0;
}

uint64_t sub_1004833AC(void *a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  LODWORD(v7) = a6;
  int v83 = a5;
  uint64_t v89 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v84 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  NSString v88 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v13 - 8);
  id v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v87 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v86 = v6;
  uint64_t v19 = (uint64_t)v6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v19, (uint64_t)&v118, (uint64_t *)&unk_100705D60);
  uint64_t v95 = a3;
  id v97 = a1;
  int v96 = a4;
  if (!*(void *)&v119[8])
  {
    sub_10010ED28(a1, a2, a3, a4);
    sub_1000CBBA4((uint64_t)&v118, (uint64_t *)&unk_100705D60);
    goto LABEL_5;
  }
  sub_10010ED28(a1, a2, a3, a4);
  sub_1000CBE70((uint64_t *)&unk_100709880);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    if (qword_100705318 != -1) {
      swift_once();
    }
    id v20 = (id)qword_10071BD48;
    goto LABEL_8;
  }
  id v20 = v107;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v21 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v94 = a2;
  uint64_t v85 = v17;
  if (!v22)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v88, v89);
    sub_10010EDB8(v97, a2, v95, v96);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_22;
  }
  uint64_t v80 = v15;
  uint64_t v81 = v16;
  int v82 = (int)v7;
  swift_bridgeObjectRetain();
  uint64_t v79 = v21;
  uint64_t v23 = (unsigned __int8 *)(v21 + 72);
  id v7 = v97;
  while (1)
  {
    uint64_t v25 = (void *)*((void *)v23 - 3);
    uint64_t v24 = *((void *)v23 - 2);
    uint64_t v26 = *((void *)v23 - 1);
    int v27 = *v23;
    long long v102 = *(_OWORD *)(v23 - 40);
    long long v118 = v102;
    *(void *)uint64_t v119 = v25;
    *(void *)&v119[8] = v24;
    *(void *)&v119[16] = v26;
    v119[24] = v27;
    uint64_t v116 = &_s11OutlineItemVN;
    unint64_t v117 = &off_1006B7390;
    uint64_t v28 = (_OWORD *)swift_allocObject();
    uint64_t v114 = v28;
    long long v29 = *(_OWORD *)v119;
    v28[1] = v118;
    v28[2] = v29;
    *(_OWORD *)((char *)v28 + 41) = *(_OWORD *)&v119[9];
    sub_1000D4774((uint64_t)&v114, (uint64_t)v113);
    uint64_t v30 = v102;
    swift_unknownObjectRetain();
    sub_1000A9454(v25, v24, v26, v27);
    swift_unknownObjectRetain();
    sub_1000A9454(v25, v24, v26, v27);
    sub_1000CBE70(&qword_100717538);
    if (swift_dynamicCast()) {
      break;
    }
    sub_10009B1B8((uint64_t)&v114);
    swift_unknownObjectRelease();
    sub_1000A7C1C(v25, v24, v26, v27);
LABEL_11:
    v23 += 48;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      LOBYTE(v7) = v82;
      id v15 = v80;
      uint64_t v16 = v81;
      uint64_t v17 = v85;
      a2 = v94;
      goto LABEL_19;
    }
  }
  id v98 = v25;
  uint64_t v99 = v24;
  uint64_t v100 = v26;
  uint64_t v101 = v30;
  LODWORD(v102) = v27;
  unint64_t v32 = (void *)v109;
  uint64_t v31 = v110;
  uint64_t v33 = v111;
  int v34 = v112;
  sub_10009B1B8((uint64_t)&v114);
  int v35 = v34;
  swift_unknownObjectRelease();
  if (v34 == 255)
  {
LABEL_17:
    swift_unknownObjectRelease();
    sub_1000A7C1C(v98, v99, v100, v102);
    goto LABEL_11;
  }
  uint64_t v36 = v7;
  uint64_t v38 = v94;
  uint64_t v37 = v95;
  char v39 = v96;
  sub_10010ED28(v36, v94, v95, v96);
  sub_1000A9454(v32, v31, v33, v35);
  id v90 = v32;
  uint64_t v91 = v31;
  uint64_t v92 = v33;
  int v93 = v35;
  unint64_t v40 = sub_100249E60((unint64_t)v32, v31, v33, v35);
  char v41 = v39;
  uint64_t v43 = v42;
  if (v40 != sub_100249E60((unint64_t)v97, v38, v37, v41) || v43 != v44)
  {
    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = v97;
    sub_10010EDB8(v97, v94, v95, v96);
    id v47 = v90;
    uint64_t v46 = v91;
    uint64_t v48 = v92;
    unsigned __int8 v49 = v93;
    sub_1000A7C1C(v90, v91, v92, v93);
    sub_1000A7C1C(v47, v46, v48, v49);
    if (v45) {
      goto LABEL_21;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRelease_n();
  id v7 = v97;
  sub_10010EDB8(v97, v94, v95, v96);
  id v51 = v90;
  uint64_t v50 = v91;
  uint64_t v52 = v92;
  unsigned __int8 v53 = v93;
  sub_1000A7C1C(v90, v91, v92, v93);
  sub_1000A7C1C(v51, v50, v52, v53);
LABEL_21:
  swift_bridgeObjectRelease_n();
  id v15 = v80;
  uint64_t v54 = v88;
  sub_1004866F4((uint64_t)v80);
  sub_10010EDB8(v7, v94, v95, v96);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v54, v89);
  swift_unknownObjectRelease();
  sub_1000A7C1C(v98, v99, v100, v102);
  LOBYTE(v7) = v82;
  uint64_t v16 = v81;
  uint64_t v17 = v85;
LABEL_22:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007069A0);
    return 2;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v87, v15, v16);
  id v56 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v106.receiver = v86;
  v106.super_class = v56;
  uint64_t result = (uint64_t)[super collectionView];
  if (!result)
  {
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v57 = (void *)result;
  type metadata accessor for DOCSidebarCollectionView();
  id v58 = [(id)swift_dynamicCastClassUnconditional() indexPathsForSelectedItems];

  if (v58)
  {
    uint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v59 = 0;
  }
  sub_1000CBE70(&qword_100708E80);
  unint64_t v60 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1005A0030;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 16))(v61 + v60, v87, v16);
  if (v59)
  {
    uint64_t v62 = swift_bridgeObjectRetain();
    char v63 = sub_10028F068(v62, v61);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    char v63 = 0;
  }
  v105.receiver = v86;
  v105.super_class = v56;
  uint64_t result = (uint64_t)[v105 collectionView:v79];
  if (!result) {
    goto LABEL_38;
  }
  Swift::String v64 = (void *)result;
  id v65 = [(id)swift_dynamicCastClassUnconditional() indexPathsForVisibleItems];

  uint64_t v66 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  __chkstk_darwin(v67);
  *(&v79 - 2) = (uint64_t)v87;
  LODWORD(v64) = sub_1001B52CC((uint64_t (*)(char *))sub_100488B44, (uint64_t)(&v79 - 4), v66);
  swift_bridgeObjectRelease();
  uint64_t v68 = v83 & ~v64 & 1;
  if (v63)
  {
    v103.receiver = v86;
    v103.super_class = v56;
    uint64_t result = (uint64_t)[v103 collectionView];
    if (result)
    {
      uint64_t v69 = (void *)result;
      os_log_type_t v70 = (void *)swift_dynamicCastClassUnconditional();
      uint64_t v71 = v87;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v70 scrollToItemAtIndexPath:isa atScrollPosition:v68 animated:v7 & 1];

      (*(void (**)(char *, uint64_t))(v85 + 8))(v71, v16);
      return 1;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
  }
  else
  {
    uint64_t v73 = v86;
    uint64_t v107 = 0;
    unint64_t v108 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(29);
    uint64_t v114 = v107;
    unint64_t v115 = v108;
    v74._object = (void *)0x80000001005F82E0;
    v74._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    String.append(_:)(v74);
    uint64_t v107 = v97;
    unint64_t v108 = v94;
    uint64_t v109 = v95;
    LOBYTE(v110) = v96;
    _print_unlocked<A, B>(_:_:)();
    sub_1004880B0((uint64_t)v114, v115);
    swift_release();
    swift_bridgeObjectRelease();
    v104.receiver = v73;
    v104.super_class = v56;
    uint64_t result = (uint64_t)[v104 collectionView];
    if (!result) {
      goto LABEL_40;
    }
    long long v75 = (void *)result;
    uint64_t v76 = (void *)swift_dynamicCastClassUnconditional();
    uint64_t v77 = v87;
    Class v78 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v76 selectItemAtIndexPath:v78 animated:v7 & 1 scrollPosition:v68];

    (*(void (**)(char *, uint64_t))(v85 + 8))(v77, v16);
    return 0;
  }
  return result;
}

void sub_100483EBC(int a1, void *a2)
{
  int v46 = a1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v57.receiver = v2;
  v57.super_class = v10;
  id v47 = v10;
  id v11 = [super collectionView];
  if (!v11)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  uint64_t v12 = v11;
  uint64_t v45 = type metadata accessor for DOCSidebarCollectionView();
  id v13 = [(id)swift_dynamicCastClassUnconditional() indexPathsForSelectedItems];

  if (v13)
  {
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_retain();
    sub_1004880B0(0xD000000000000036, 0x80000001005F8300);
    swift_release();
    if (a2)
    {
      v55.receiver = v2;
      v55.super_class = v47;
      swift_unknownObjectRetain();
      id v15 = [super collectionView];
      if (v15)
      {
        uint64_t v16 = a2;
        uint64_t v17 = v15;
        uint64_t v18 = swift_dynamicCastClassUnconditional();
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v14;
        *(void *)(v19 + 24) = v18;
        char v20 = v46 & 1;
        *(unsigned char *)(v19 + 32) = v46 & 1;
        unsigned __int8 v53 = sub_100488AE8;
        uint64_t v54 = v19;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        id v51 = sub_100045AE0;
        uint64_t v52 = &unk_1006AEA18;
        uint64_t v21 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        id v22 = v17;
        swift_release();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v14;
        *(void *)(v23 + 24) = v18;
        *(unsigned char *)(v23 + 32) = v20;
        unsigned __int8 v53 = sub_100488B38;
        uint64_t v54 = v23;
        Swift::String aBlock = _NSConcreteStackBlock;
        uint64_t v50 = 1107296256;
        id v51 = sub_100045AE0;
        uint64_t v52 = &unk_1006AEA68;
        uint64_t v24 = _Block_copy(&aBlock);
        id v25 = v22;
        swift_release();
        [v16 animateAlongsideTransition:v21 completion:v24];
        _Block_release(v24);
        _Block_release(v21);
        swift_unknownObjectRelease();

        return;
      }
      goto LABEL_18;
    }
    uint64_t v26 = *(void *)(v14 + 16);
    if (v26)
    {
      uint64_t v42 = v2;
      uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v27 = v5 + 16;
      uint64_t v44 = v28;
      unint64_t v29 = v14 + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
      uint64_t v40 = *(void *)(v27 + 56);
      uint64_t v30 = v14;
      uint64_t v31 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 40);
      uint64_t v43 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 32);
      char v41 = (void (**)(char *, char *, uint64_t))(v27 + 16);
      char v39 = (void (**)(char *, uint64_t))(v27 - 8);
      v38[2] = v30;
      swift_bridgeObjectRetain();
      v38[1] = (v27 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      unint64_t v32 = v48;
      while (1)
      {
        v44(v9, v29, v4);
        uint64_t v33 = *v31;
        (*v31)(v9, 0, 1, v4);
        if ((*v43)(v9, 1, v4) == 1) {
          break;
        }
        (*v41)(v32, v9, v4);
        v56.receiver = v42;
        v56.super_class = v47;
        id v34 = [super collectionView];
        if (!v34)
        {
          __break(1u);
          goto LABEL_17;
        }
        int v35 = v34;
        uint64_t v36 = (void *)swift_dynamicCastClassUnconditional();
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v36 deselectItemAtIndexPath:isa animated:v46 & 1];

        unint64_t v32 = v48;
        (*v39)(v48, v4);
        v29 += v40;
        if (!--v26) {
          goto LABEL_13;
        }
      }
    }
    else
    {
      uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_bridgeObjectRetain();
LABEL_13:
      v33(v9, 1, 1, v4);
    }
    swift_bridgeObjectRelease_n();
  }
}

id sub_100484454(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v6 = v5;
  int v77 = a5;
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v74 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  Class v78 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v13 - 8);
  uint64_t v76 = (uint64_t)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t)v6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v19, (uint64_t)&v104, (uint64_t *)&unk_100705D60);
  int v79 = a4;
  uint64_t v87 = a2;
  id v86 = a1;
  if (!*(void *)&v105[8])
  {
    sub_10010ED28(a1, a2, a3, a4);
    sub_1000CBBA4((uint64_t)&v104, (uint64_t *)&unk_100705D60);
    goto LABEL_5;
  }
  sub_10010ED28(a1, a2, a3, a4);
  sub_1000CBE70((uint64_t *)&unk_100709880);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v21 = v77;
    if (qword_100705318 != -1) {
      swift_once();
    }
    id v20 = (id)qword_10071BD48;
    goto LABEL_8;
  }
  id v20 = (id)v93;
  char v21 = v77;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v75 = v11;
  uint64_t v22 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v78, v75);
    uint64_t v52 = (uint64_t)v86;
    uint64_t v53 = v87;
    sub_10010EDB8(v86, v87, a3, v79);
    uint64_t v54 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v76, 1, 1, v15);
    goto LABEL_23;
  }
  uint64_t v85 = a3;
  os_log_type_t v70 = v18;
  uint64_t v71 = v6;
  uint64_t v72 = v16;
  uint64_t v73 = v15;
  swift_bridgeObjectRetain();
  v69[1] = v22;
  uint64_t v24 = (unsigned __int8 *)(v22 + 72);
  char v25 = v79;
  while (1)
  {
    uint64_t v27 = (void *)*((void *)v24 - 3);
    uint64_t v26 = *((void *)v24 - 2);
    uint64_t v28 = *((void *)v24 - 1);
    int v29 = *v24;
    long long v91 = *(_OWORD *)(v24 - 40);
    long long v104 = v91;
    *(void *)objc_super v105 = v27;
    *(void *)&v105[8] = v26;
    *(void *)&v105[16] = v28;
    v105[24] = v29;
    long long v102 = &_s11OutlineItemVN;
    objc_super v103 = &off_1006B7390;
    uint64_t v30 = (_OWORD *)swift_allocObject();
    uint64_t v100 = v30;
    long long v31 = *(_OWORD *)v105;
    v30[1] = v104;
    v30[2] = v31;
    *(_OWORD *)((char *)v30 + 41) = *(_OWORD *)&v105[9];
    sub_1000D4774((uint64_t)&v100, (uint64_t)v99);
    uint64_t v32 = v91;
    swift_unknownObjectRetain();
    sub_1000A9454(v27, v26, v28, v29);
    swift_unknownObjectRetain();
    sub_1000A9454(v27, v26, v28, v29);
    sub_1000CBE70(&qword_100717538);
    if (!swift_dynamicCast())
    {
      sub_10009B1B8((uint64_t)&v100);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v27, v26, v28, v29);
      goto LABEL_11;
    }
    id v88 = v27;
    uint64_t v90 = v26;
    *(void *)&long long v91 = v28;
    uint64_t v89 = v32;
    uint64_t v33 = v95;
    uint64_t v34 = v96;
    uint64_t v35 = v97;
    int v36 = v98;
    sub_10009B1B8((uint64_t)&v100);
    int v37 = v36;
    swift_unknownObjectRelease();
    if (v36 == 255)
    {
      swift_unknownObjectRelease();
      sub_1000A7C1C(v88, v90, v91, v29);
      goto LABEL_11;
    }
    int v84 = v29;
    unint64_t v38 = (unint64_t)v86;
    uint64_t v39 = v87;
    uint64_t v40 = v85;
    sub_10010ED28(v86, v87, v85, v25);
    sub_1000A9454(v33, v34, v35, v37);
    id v80 = v33;
    uint64_t v81 = v34;
    uint64_t v82 = v35;
    int v83 = v37;
    unint64_t v41 = sub_100249E60((unint64_t)v33, v34, v35, v37);
    uint64_t v43 = v42;
    if (v41 == sub_100249E60(v38, v39, v40, v25) && v43 == v44) {
      break;
    }
    char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v25 = v79;
    sub_10010EDB8(v86, v87, v85, v79);
    id v46 = v80;
    uint64_t v47 = v81;
    uint64_t v48 = v82;
    unsigned __int8 v49 = v83;
    sub_1000A7C1C(v80, v81, v82, v83);
    sub_1000A7C1C(v46, v47, v48, v49);
    unsigned __int8 v50 = v84;
    id v51 = v88;
    if (v45) {
      goto LABEL_22;
    }
    swift_unknownObjectRelease();
    sub_1000A7C1C(v51, v90, v91, v50);
LABEL_11:
    v24 += 48;
    if (!--v23)
    {
      swift_bridgeObjectRelease();
      char v21 = v77;
      uint64_t v15 = v73;
      uint64_t v16 = v72;
      uint64_t v6 = v71;
      uint64_t v18 = v70;
      a3 = v85;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n();
  char v25 = v79;
  sub_10010EDB8(v86, v87, v85, v79);
  id v55 = v80;
  uint64_t v56 = v81;
  uint64_t v57 = v82;
  unsigned __int8 v58 = v83;
  sub_1000A7C1C(v80, v81, v82, v83);
  sub_1000A7C1C(v55, v56, v57, v58);
  unsigned __int8 v50 = v84;
  id v51 = v88;
LABEL_22:
  swift_bridgeObjectRelease_n();
  uint64_t v59 = v76;
  unint64_t v60 = v78;
  sub_1004866F4(v76);
  uint64_t v52 = (uint64_t)v86;
  uint64_t v61 = v87;
  a3 = v85;
  sub_10010EDB8(v86, v87, v85, v25);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v60, v75);
  swift_unknownObjectRelease();
  uint64_t v62 = v51;
  uint64_t v54 = v59;
  uint64_t v53 = v61;
  sub_1000A7C1C(v62, v90, v91, v50);
  char v21 = v77;
  uint64_t v15 = v73;
  uint64_t v16 = v72;
  uint64_t v6 = v71;
  uint64_t v18 = v70;
LABEL_23:
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v54, 1, v15) == 1) {
    return (id)sub_1000CBBA4(v54, (uint64_t *)&unk_1007069A0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, v54, v15);
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  swift_retain();
  _StringGuts.grow(_:)(31);
  uint64_t v100 = (_OWORD *)v93;
  unint64_t v101 = v94;
  v64._object = (void *)0x80000001005F82C0;
  v64._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v64);
  uint64_t v93 = v52;
  unint64_t v94 = v53;
  uint64_t v95 = (void *)a3;
  LOBYTE(v96) = v79;
  _print_unlocked<A, B>(_:_:)();
  sub_1004880B0((uint64_t)v100, v101);
  swift_release();
  swift_bridgeObjectRelease();
  id v65 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v92.receiver = v6;
  v92.super_class = v65;
  id result = [super collectionView];
  if (result)
  {
    uint64_t v66 = result;
    type metadata accessor for DOCSidebarCollectionView();
    uint64_t v67 = (void *)swift_dynamicCastClassUnconditional();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v67 deselectItemAtIndexPath:isa animated:v21 & 1];

    return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100484ED0()
{
  uint64_t v97 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v3 = (char *)&v87 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v110 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v137.receiver = v0;
  v137.super_class = v13;
  uint64_t v96 = v13;
  id v14 = [super collectionView];
  if (!v14) {
    goto LABEL_42;
  }
  uint64_t v15 = v14;
  uint64_t v95 = type metadata accessor for DOCSidebarCollectionView();
  id v16 = [(id)swift_dynamicCastClassUnconditional() indexPathsForSelectedItems];

  if (!v16) {
    return;
  }
  long long v102 = v10;
  uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v18 = v0;
  uint64_t v19 = sub_100487D7C(v17, (uint64_t)v18);
  swift_bridgeObjectRelease();

  uint64_t v109 = v19[2];
  if (!v109)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v107 = v18;
  uint64_t v20 = (uint64_t)v18 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  uint64_t v94 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemSelectionPacer;
  swift_bridgeObjectRetain();
  uint64_t v106 = v20;
  swift_beginAccess();
  char v21 = v19 + 5;
  uint64_t v22 = v19 + 6;
  uint64_t v87 = v19;
  uint64_t v23 = (unsigned __int8 *)(v19 + 7);
  long long v104 = (void (**)(char *, uint64_t))(v5 + 8);
  unint64_t v101 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  objc_super v105 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v93 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  objc_super v92 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v90 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v24 = 1;
  long long v91 = (void *)0x80000001005F82C0;
  *(void *)&long long v25 = 136315138;
  long long v89 = v25;
  id v88 = (char *)&type metadata for Any + 8;
  objc_super v103 = v19 + 4;
  uint64_t v26 = (void **)(v19 + 4);
  uint64_t v27 = (uint64_t)v102;
  uint64_t v28 = v108;
  uint64_t v100 = v3;
  uint64_t v99 = v4;
  unsigned __int8 v98 = v7;
  while (2)
  {
    uint64_t v112 = v24;
    int v29 = *v26;
    uint64_t v30 = *v21;
    uint64_t v31 = *v22;
    int v32 = *v23;
    sub_1000CBC00(v106, (uint64_t)&v126, (uint64_t *)&unk_100705D60);
    uint64_t v119 = v31;
    uint64_t v123 = v30;
    id v120 = v29;
    if (!v129)
    {
      sub_10010ED28(v29, v30, v31, v32);
      sub_10010ED28(v29, v30, v31, v32);
      sub_1000CBBA4((uint64_t)&v126, (uint64_t *)&unk_100705D60);
      goto LABEL_9;
    }
    sub_10010ED28(v29, v30, v31, v32);
    sub_10010ED28(v29, v30, v31, v32);
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_9:
      if (qword_100705318 != -1) {
        swift_once();
      }
      id v33 = (id)qword_10071BD48;
      uint64_t v30 = v123;
      goto LABEL_12;
    }
    id v33 = v133;
LABEL_12:
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v34 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    uint64_t v35 = *(void *)(v34 + 16);
    int v118 = v32;
    if (!v35)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      (*v104)(v7, v4);
      uint64_t v62 = v119;
      sub_10010EDB8(v120, v30, v119, v32);
      (*v101)(v27, 1, 1, v28);
      goto LABEL_27;
    }
    swift_bridgeObjectRetain();
    uint64_t v111 = v34;
    int v36 = (unsigned __int8 *)(v34 + 72);
    while (1)
    {
      unint64_t v38 = (void *)*((void *)v36 - 3);
      uint64_t v37 = *((void *)v36 - 2);
      uint64_t v39 = *((void *)v36 - 1);
      int v40 = *v36;
      long long v124 = *(_OWORD *)(v36 - 40);
      long long v138 = v124;
      *(void *)uint64_t v139 = v38;
      *(void *)&v139[8] = v37;
      *(void *)&v139[16] = v39;
      v139[24] = v40;
      Swift::Int v135 = &_s11OutlineItemVN;
      uint64_t v136 = &off_1006B7390;
      unint64_t v41 = (_OWORD *)swift_allocObject();
      id v133 = v41;
      long long v42 = *(_OWORD *)v139;
      v41[1] = v138;
      v41[2] = v42;
      *(_OWORD *)((char *)v41 + 41) = *(_OWORD *)&v139[9];
      sub_1000D4774((uint64_t)&v133, (uint64_t)v132);
      uint64_t v43 = v124;
      swift_unknownObjectRetain();
      sub_1000A9454(v38, v37, v39, v40);
      swift_unknownObjectRetain();
      sub_1000A9454(v38, v37, v39, v40);
      sub_1000CBE70(&qword_100717538);
      if (swift_dynamicCast()) {
        break;
      }
      sub_10009B1B8((uint64_t)&v133);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v38, v37, v39, v40);
LABEL_15:
      v36 += 48;
      if (!--v35)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v100;
        uint64_t v4 = v99;
        uint64_t v7 = v98;
        uint64_t v27 = (uint64_t)v102;
        uint64_t v28 = v108;
        LOBYTE(v32) = v118;
        uint64_t v30 = v123;
        goto LABEL_24;
      }
    }
    uint64_t v121 = v37;
    uint64_t v122 = v39;
    *(void *)&long long v124 = v43;
    uint64_t v44 = v128;
    uint64_t v45 = v129;
    uint64_t v46 = v130;
    int v47 = v131;
    sub_10009B1B8((uint64_t)&v133);
    swift_unknownObjectRelease();
    if (v47 == 255)
    {
LABEL_21:
      swift_unknownObjectRelease();
      sub_1000A7C1C(v38, v121, v122, v40);
      goto LABEL_15;
    }
    int v48 = v47;
    int v117 = v40;
    unint64_t v49 = (unint64_t)v120;
    uint64_t v50 = v119;
    char v51 = v118;
    int v52 = v48;
    sub_10010ED28(v120, v123, v119, v118);
    sub_1000A9454(v44, v45, v46, v52);
    id v113 = v44;
    uint64_t v114 = v45;
    uint64_t v115 = v46;
    int v116 = v52;
    unint64_t v53 = sub_100249E60((unint64_t)v44, v45, v46, v52);
    uint64_t v55 = v54;
    if (v53 != sub_100249E60(v49, v123, v50, v51) || v55 != v56)
    {
      char v57 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v120, v123, v119, v118);
      id v58 = v113;
      uint64_t v59 = v114;
      uint64_t v60 = v115;
      unsigned __int8 v61 = v116;
      sub_1000A7C1C(v113, v114, v115, v116);
      sub_1000A7C1C(v58, v59, v60, v61);
      LOBYTE(v40) = v117;
      if (v57) {
        goto LABEL_26;
      }
      goto LABEL_21;
    }
    swift_bridgeObjectRelease_n();
    sub_10010EDB8(v120, v123, v119, v118);
    id v63 = v113;
    uint64_t v64 = v114;
    uint64_t v65 = v115;
    unsigned __int8 v66 = v116;
    sub_1000A7C1C(v113, v114, v115, v116);
    sub_1000A7C1C(v63, v64, v65, v66);
    LOBYTE(v40) = v117;
LABEL_26:
    swift_bridgeObjectRelease_n();
    uint64_t v67 = (uint64_t)v102;
    uint64_t v68 = v98;
    sub_1004866F4((uint64_t)v102);
    uint64_t v62 = v119;
    LOBYTE(v32) = v118;
    sub_10010EDB8(v120, v123, v119, v118);
    uint64_t v4 = v99;
    (*v104)(v68, v99);
    swift_unknownObjectRelease();
    uint64_t v69 = v38;
    uint64_t v7 = v68;
    unsigned __int8 v70 = v40;
    uint64_t v27 = v67;
    uint64_t v30 = v123;
    sub_1000A7C1C(v69, v121, v122, v70);
    uint64_t v3 = v100;
    uint64_t v28 = v108;
LABEL_27:
    if ((*v105)(v27, 1, v28) == 1)
    {
      sub_1000CBBA4(v27, (uint64_t *)&unk_1007069A0);
      id v71 = v120;
      uint64_t v72 = v30;
      uint64_t v73 = v62;
      unsigned __int8 v74 = v32;
      goto LABEL_34;
    }
    (*v93)(v110, v27, v28);
    id v126 = 0;
    unint64_t v127 = 0xE000000000000000;
    swift_retain();
    _StringGuts.grow(_:)(31);
    id v133 = v126;
    unint64_t v134 = v127;
    v75._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v75._object = v91;
    String.append(_:)(v75);
    id v126 = v120;
    unint64_t v127 = v30;
    uint64_t v128 = (void *)v62;
    LOBYTE(v129) = v32;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v77 = (uint64_t)v133;
    unint64_t v76 = v134;
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    Class v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v78, v79))
    {
      uint64_t v80 = swift_slowAlloc();
      id v126 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v80 = v89;
      swift_bridgeObjectRetain();
      *(void *)(v80 + 4) = sub_10009B0E4(v77, v76, (uint64_t *)&v126);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "[Pacer] %s", (uint8_t *)v80, 0xCu);
      swift_arrayDestroy();
      uint64_t v27 = (uint64_t)v102;
      swift_slowDealloc();
      uint64_t v28 = v108;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*v92)(v3, v97);
    swift_release();
    swift_bridgeObjectRelease();
    v125.receiver = v107;
    v125.super_class = v96;
    [super collectionView:v87 atIndexPath:v88];
    uint64_t v82 = v119;
    if (!v81) {
      goto LABEL_41;
    }
    int v83 = v81;
    int v84 = (void *)swift_dynamicCastClassUnconditional();
    uint64_t v85 = v110;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v84 deselectItemAtIndexPath:isa animated:1];

    (*v90)(v85, v28);
    id v71 = v120;
    uint64_t v72 = v123;
    uint64_t v73 = v82;
    unsigned __int8 v74 = v118;
LABEL_34:
    sub_10010EDB8(v71, v72, v73, v74);
    if (v112 == v109)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v26 = (void **)&v103[4 * v112];
    char v21 = (uint64_t *)(v26 + 1);
    uint64_t v22 = (uint64_t *)(v26 + 2);
    uint64_t v23 = (unsigned __int8 *)(v26 + 3);
    uint64_t v24 = v112 + 1;
    if (!__OFADD__(v112, 1)) {
      continue;
    }
    break;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
}

id sub_100485D2C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  if (!a1) {
    return 0;
  }
  unint64_t v41 = (char *)&v41 - v16;
  uint64_t v42 = v5;
  uint64_t v43 = v4;
  uint64_t v44 = v7;
  uint64_t v17 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession;
  uint64_t v18 = *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (v18 && (uint64_t v19 = *(void **)(v18 + 24)) != 0)
  {
    type metadata accessor for DOCSidebarItemCell(0);
    id v20 = a1;
    id v21 = v19;
    char v22 = static NSObject.== infix(_:_:)();

    if (v22)
    {

      uint64_t v23 = *(void *)&v2[v17];
      if (v23)
      {
        uint64_t v24 = *(void **)(v23 + 32);
        sub_1000A9454(v24, *(void *)(v23 + 40), *(void *)(v23 + 48), *(unsigned char *)(v23 + 56));
        return v24;
      }
      return 0;
    }
  }
  else
  {
    id v25 = a1;
  }
  uint64_t v26 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v47.receiver = v2;
  v47.super_class = v26;
  id result = [super collectionView];
  if (result)
  {
    uint64_t v28 = result;
    type metadata accessor for DOCSidebarCollectionView();
    id v29 = [(id)swift_dynamicCastClassUnconditional() indexPathForCell:a1];

    uint64_t v30 = v44;
    if (v29)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v31(v10, v15, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        uint64_t v32 = (uint64_t)v41;
        v31(v41, v10, v11);
        uint64_t v24 = (void *)sub_100482C08(v32, 1);

        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v32, v11);
        return v24;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_1007069A0);
    static Logger.Sidebar.getter();
    id v33 = a1;
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      unint64_t v41 = (char *)swift_slowAlloc();
      uint64_t v46 = v41;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v45 = sub_10009B0E4(0xD000000000000011, 0x80000001005F8280, (uint64_t *)&v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v36 + 12) = 2080;
      id v37 = [v33 description];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v40 = v39;

      uint64_t v45 = sub_10009B0E4(v38, v40, (uint64_t *)&v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Could not find sidebar item (can determine index path) for cell: %s.", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
    return 0;
  }
  __break(1u);
  return result;
}

void sub_1004862B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v34 = a1;
    id v8 = sub_100485D2C(a1);
    if ((_BYTE)v11 == 0xFF)
    {
      static Logger.Sidebar.getter();
      id v19 = v34;
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.error.getter();
      int v22 = v21;
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v23 = swift_slowAlloc();
        int v33 = v22;
        uint64_t v24 = v23;
        id v34 = (id)swift_slowAlloc();
        id v36 = v34;
        *(_DWORD *)uint64_t v24 = 136315394;
        uint64_t v35 = sub_10009B0E4(0x7461507865646E69, 0xEF293A726F662868, (uint64_t *)&v36);
        os_log_t v32 = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v24 + 12) = 2080;
        id v25 = [v19 description:v24 + 14];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v28 = v27;

        uint64_t v35 = sub_10009B0E4(v26, v28, (uint64_t *)&v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_t v29 = v32;
        _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v33, "%s: Could not find sidebar index path for cell: %s.", (uint8_t *)v24, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v30 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a2, 1, 1, v30);
    }
    else
    {
      uint64_t v12 = v8;
      uint64_t v13 = v9;
      uint64_t v14 = v10;
      unsigned __int8 v15 = v11;
      sub_1000A7C30(v8, v9, v10, v11, a2);
      sub_1000A7C1C(v12, v13, v14, v15);
      id v16 = v34;
    }
  }
  else
  {
    uint64_t v17 = type metadata accessor for IndexPath();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    v18(a2, 1, 1, v17);
  }
}

uint64_t sub_1004866F4@<X0>(uint64_t a1@<X8>)
{
  swift_unknownObjectRetain();
  sub_1000CBE70((uint64_t *)&unk_100717540);
  swift_dynamicCast();
  sub_1000CBE70((uint64_t *)&unk_100709870);
  NSDiffableDataSourceSnapshot.indexOfSection(_:)();
  if (v2) {
    goto LABEL_10;
  }
  uint64_t v3 = NSDiffableDataSourceSnapshot.indexOfItem(_:)();
  if (v4) {
    goto LABEL_10;
  }
  uint64_t v5 = v3;
  uint64_t v6 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  if (!*(void *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  id v8 = *(void **)(v6 + 48);
  uint64_t v7 = *(void *)(v6 + 56);
  uint64_t v9 = *(void *)(v6 + 64);
  unsigned __int8 v10 = *(unsigned char *)(v6 + 72);
  swift_unknownObjectRetain();
  sub_1000A9454(v8, v7, v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = NSDiffableDataSourceSnapshot.indexOfItem(_:)();
  if (v12)
  {
LABEL_8:
    swift_unknownObjectRelease();
    sub_1000A7C1C(v8, v7, v9, v10);
LABEL_10:
    uint64_t v16 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a1, 1, 1, v16);
    return swift_unknownObjectRelease();
  }
  BOOL v13 = __OFSUB__(v5, v11);
  uint64_t result = v5 - v11;
  if (!v13)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      IndexPath.init(row:section:)();
      swift_unknownObjectRelease();
      sub_1000A7C1C(v8, v7, v9, v10);
      uint64_t v15 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 0, 1, v15);
      return swift_unknownObjectRelease();
    }
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

id sub_100486934(void *a1)
{
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v31 - v15;
  if (!a1) {
    return 0;
  }
  uint64_t v32 = v3;
  int v33 = v6;
  uint64_t v31 = v4;
  uint64_t v17 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  v35.receiver = v1;
  v35.super_class = v17;
  id v18 = a1;
  id result = [super collectionView];
  if (result)
  {
    id v20 = result;
    type metadata accessor for DOCSidebarCollectionView();
    id v21 = [(id)swift_dynamicCastClassUnconditional() indexPathForCell:v18];

    if (v21)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      int v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v22(v9, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
      {
        v22(v16, v9, v10);
        uint64_t v23 = sub_100482044((uint64_t)v16, 0);

        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        return (id)v23;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_1007069A0);
    uint64_t v24 = v33;
    static Logger.UI.getter();
    id v25 = v18;
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      unint64_t v28 = (uint8_t *)swift_slowAlloc();
      os_log_t v29 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v28 = 138412290;
      id v34 = v25;
      id v25 = v25;
      uint64_t v24 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *os_log_t v29 = a1;

      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Couldn't find section: unable to determine indexPath for %@", v28, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v26 = v25;
    }
    uint64_t v30 = v32;

    (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_100486DAC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = IndexPath.section.getter();
  sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v3 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((v2 & 0x8000000000000000) != 0 || v2 >= *(void *)(v3 + 16)) {
    goto LABEL_8;
  }
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
  unint64_t v5 = IndexPath.item.getter();
  if ((v5 & 0x8000000000000000) != 0 || v5 >= *(void *)(v4 + 16))
  {
    swift_unknownObjectRelease();
LABEL_8:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    unsigned __int8 v10 = 0;
    long long v12 = 0uLL;
    goto LABEL_9;
  }
  unint64_t v6 = v4 + 48 * v5;
  long long v13 = *(_OWORD *)(v6 + 32);
  uint64_t v7 = *(void **)(v6 + 48);
  uint64_t v8 = *(void *)(v6 + 56);
  uint64_t v9 = *(void *)(v6 + 64);
  unsigned __int8 v10 = *(unsigned char *)(v6 + 72);
  swift_unknownObjectRetain();
  sub_1000A9454(v7, v8, v9, v10);
  swift_unknownObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  long long v12 = v13;
LABEL_9:
  *(_OWORD *)a1 = v12;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 40) = v10;
  return result;
}

uint64_t sub_100486F0C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v30 = a3;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v10 - 8);
  long long v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v24 = a2;
  if (v13)
  {
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v14 = v7 + 16;
    uint64_t v16 = a2 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    uint64_t v27 = *(void *)(v14 + 56);
    unint64_t v28 = v15;
    unint64_t v17 = v14 + 40;
    id v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 32);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v14 + 16);
    uint64_t v29 = v14;
    id v19 = (void (**)(char *, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    unint64_t v23 = v17 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    unsigned int v25 = a4 & 1;
    while (1)
    {
      v28(v12, v16, v6);
      id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))v17)(v12, 0, 1, v6);
      if ((*v18)(v12, 1, v6) == 1) {
        break;
      }
      (*v26)(v9, v12, v6);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v30 deselectItemAtIndexPath:isa v25 v23 v24];

      (*v19)(v9, v6);
      v16 += v27;
      if (!--v13) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
LABEL_7:
    v20(v12, 1, 1, v6);
  }
  return swift_bridgeObjectRelease();
}

id sub_100487178(void *a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = __chkstk_darwin(v15);
  id v18 = (char *)&v44 - v17;
  if (objc_msgSend(a1, "isCancelled", v16))
  {
    uint64_t v19 = *(void *)(a2 + 16);
    uint64_t v45 = a2;
    if (v19)
    {
      id v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v20 = v9 + 16;
      unint64_t v49 = v21;
      id v50 = a3;
      unint64_t v22 = a2 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
      uint64_t v23 = *(void *)(v20 + 56);
      uint64_t v24 = v20;
      unint64_t v25 = v20 + 40;
      uint64_t v26 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 32);
      objc_super v47 = (void (**)(char *, char *, uint64_t))(v24 + 16);
      uint64_t v48 = v23;
      uint64_t v51 = v24;
      uint64_t v27 = (void (**)(char *, uint64_t))(v24 - 8);
      swift_bridgeObjectRetain();
      unint64_t v46 = v25 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      while (1)
      {
        v49(v18, v22, v8);
        unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v25;
        (*(void (**)(char *, void, uint64_t, uint64_t))v25)(v18, 0, 1, v8);
        if ((*v26)(v18, 1, v8) == 1) {
          break;
        }
        (*v47)(v11, v18, v8);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v50 selectItemAtIndexPath:isa animated:0 scrollPosition:0];

        (*v27)(v11, v8);
        v22 += v48;
        if (!--v19) {
          goto LABEL_15;
        }
      }
    }
    else
    {
      unint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      swift_bridgeObjectRetain();
LABEL_15:
      v28(v18, 1, 1, v8);
    }
    return (id)swift_bridgeObjectRelease();
  }
  id result = [a3 indexPathsForSelectedItems];
  if (result)
  {
    uint64_t v31 = result;
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    swift_bridgeObjectRetain();
    uint64_t v32 = swift_bridgeObjectRetain();
    LOBYTE(v31) = sub_10028F068(v32, a2);
    swift_bridgeObjectRelease_n();
    id result = (id)swift_bridgeObjectRelease();
    if (v31)
    {
      uint64_t v33 = *(void *)(a2 + 16);
      uint64_t v45 = a2;
      if (v33)
      {
        objc_super v35 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
        uint64_t v34 = v9 + 16;
        unint64_t v49 = v35;
        id v50 = a3;
        unint64_t v36 = a2 + ((*(unsigned __int8 *)(v34 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 64));
        uint64_t v37 = *(void *)(v34 + 56);
        uint64_t v38 = v34;
        unint64_t v39 = v34 + 40;
        unint64_t v40 = (unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 32);
        objc_super v47 = (void (**)(char *, char *, uint64_t))(v38 + 16);
        uint64_t v48 = v37;
        uint64_t v51 = v38;
        unint64_t v41 = (void (**)(char *, uint64_t))(v38 - 8);
        swift_bridgeObjectRetain();
        unint64_t v44 = v39 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        LODWORD(v46) = a4 & 1;
        while (1)
        {
          v49(v14, v36, v8);
          uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v39;
          (*(void (**)(char *, void, uint64_t, uint64_t))v39)(v14, 0, 1, v8);
          if ((*v40)(v14, 1, v8) == 1) {
            break;
          }
          (*v47)(v11, v14, v8);
          Class v43 = IndexPath._bridgeToObjectiveC()().super.isa;
          [v50 deselectItemAtIndexPath:v43 animated:v46];

          (*v41)(v11, v8);
          v36 += v48;
          if (!--v33) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        swift_bridgeObjectRetain();
LABEL_17:
        v42(v14, 1, 1, v8);
      }
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1004875E4(void *a1, char a2)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  id v3 = [super collectionView];
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for DOCSidebarCollectionView();
    [(id)swift_dynamicCastClassUnconditional() setEditing:a2 & 1];
  }
  else
  {
    __break(1u);
  }
}

uint64_t DOCSidebarViewController.indexPathForPreferredFocusedView(in:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v48 = a1;
  unint64_t v49 = a2;
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  objc_super v47 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v42 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v42 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v45 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v46 = (char *)&v42 - v18;
  __chkstk_darwin(v19);
  id v21 = (char *)&v42 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v42 - v23;
  uint64_t v25 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_preferredFocusIndexPath;
  swift_beginAccess();
  sub_1000CBC00(v25, (uint64_t)v13, (uint64_t *)&unk_1007069A0);
  id v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v50(v13, 1, v14) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007069A0);
  }
  else
  {
    unint64_t v44 = v7;
    Class v43 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v43(v24, v13, v14);
    uint64_t v26 = sub_100482044((uint64_t)v24, 0);
    if (v26)
    {
      if (*(unsigned char *)(v26 + 48))
      {
        sub_10038F1AC((uint64_t)v24, 0xD000000000000017, 0x80000001005E24D0, (uint64_t)v10);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
        if (v50(v10, 1, v14) != 1)
        {
          unint64_t v40 = v43;
          v43(v21, v10, v14);
          unint64_t v36 = v49;
          v40(v49, v21, v14);
          goto LABEL_18;
        }
        sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_1007069A0);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
        swift_unknownObjectRelease();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
    }
    uint64_t v7 = v44;
  }
  uint64_t v27 = sub_1000A8430();
  if ((_BYTE)v30 != 0xFF)
  {
    uint64_t v31 = v27;
    uint64_t v32 = v28;
    uint64_t v33 = v29;
    unsigned __int8 v34 = v30;
    sub_1000A7C30(v27, v28, v29, v30, (uint64_t)v7);
    if (v50(v7, 1, v14) == 1)
    {
      sub_1000A7C1C(v31, v32, v33, v34);
LABEL_15:
      unint64_t v36 = v49;
      sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007069A0);
      uint64_t v35 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v36, v35, 1, v14);
    }
    uint64_t v37 = (uint64_t)v46;
    Class v43 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    unint64_t v44 = (char *)(v15 + 32);
    v43(v46, v7, v14);
    uint64_t v7 = v47;
    sub_10038F1AC(v37, 0xD000000000000015, 0x80000001005F8260, (uint64_t)v47);
    sub_1000A7C1C(v31, v32, v33, v34);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v37, v14);
    if (v50(v7, 1, v14) == 1) {
      goto LABEL_15;
    }
    uint64_t v38 = v45;
    unint64_t v39 = v43;
    v43(v45, v7, v14);
    unint64_t v36 = v49;
    v39(v49, v38, v14);
LABEL_18:
    uint64_t v35 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v36, v35, 1, v14);
  }
  uint64_t v35 = 1;
  unint64_t v36 = v49;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v36, v35, 1, v14);
}

void *sub_100487D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v7 - 8);
  uint64_t v37 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (v9)
  {
    v28[2] = a1;
    v28[3] = v2;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v10 = v5 + 16;
    unsigned __int8 v34 = v11;
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64));
    uint64_t v31 = *(void *)(v10 + 56);
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v29 = (void (**)(uint64_t, uint64_t))(v10 - 8);
    int v30 = (void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    uint64_t v13 = _swiftEmptyArrayStorage;
    uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 40);
    v28[1] = (v10 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v28[4] = v10;
    uint64_t v14 = v37;
    while (1)
    {
      v34(v14, v12, v4);
      uint64_t v17 = *v33;
      (*v33)(v14, 0, 1, v4);
      if ((*v32)(v14, 1, v4) == 1) {
        break;
      }
      uint64_t v18 = (uint64_t)v35;
      (*v30)(v35, v14, v4);
      uint64_t v40 = sub_100482C08(v18, 1);
      uint64_t v38 = v20;
      uint64_t v39 = v19;
      char v22 = v21;
      int v23 = ~v21;
      (*v29)(v18, v4);
      if (v23)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_10018F840(0, v13[2] + 1, 1, v13);
        }
        unint64_t v25 = v13[2];
        unint64_t v24 = v13[3];
        if (v25 >= v24 >> 1) {
          uint64_t v13 = sub_10018F840((void *)(v24 > 1), v25 + 1, 1, v13);
        }
        v13[2] = v25 + 1;
        uint64_t v15 = &v13[4 * v25];
        uint64_t v16 = v39;
        v15[4] = v40;
        v15[5] = v16;
        v15[6] = v38;
        *((unsigned char *)v15 + 56) = v22;
      }
      v12 += v31;
      --v9;
      uint64_t v14 = v37;
      if (!v9)
      {
        v17(v37, 1, 1, v4);
        break;
      }
    }
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    uint64_t v13 = _swiftEmptyArrayStorage;
    v26(v37, 1, 1, v4);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1004880B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v4;
    uint64_t v11 = a1;
    uint64_t v12 = (uint8_t *)v10;
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_10009B0E4(v11, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "[Pacer] %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v15);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

id _s5Files24DOCSidebarViewControllerC014_newCollectionC09withFrame010collectionC6LayoutSo012UICollectionC0CSgSo6CGRectV_So0kcJ0CSgtF_0(id result, double a2, double a3, double a4, double a5)
{
  if (result)
  {
    id v5 = [objc_allocWithZone((Class)type metadata accessor for DOCSidebarCollectionView()) initWithFrame:result collectionViewLayout:a2 a3 a4 a5];
    [v5 setAlwaysBounceVertical:1];
    uint64_t v6 = self;
    id v7 = v5;
    [v6 sidebar];
    swift_getObjCClassMetadata();
    NSString v8 = [(id)swift_getObjCClassFromMetadata() containerView];
    if (!v8)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    [v7 setAccessibilityIdentifier:v8];

    [v7 setAllowsFocus:1];
    [v7 _setShouldPersistSelectionOnReloadDataWhenPossible:1];
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void _s5Files24DOCSidebarViewControllerC010collectionC0_16didUpdateFocusIn4withySo012UICollectionC0C_So0kchG7ContextCSo27UIFocusAnimationCoordinatorCtF_0(void *a1, void *a2)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v12 - 8);
  int v52 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v45 - v18;
  type metadata accessor for DOCSidebarCollectionView();
  uint64_t v20 = swift_dynamicCastClass();
  if (v20)
  {
    char v21 = (unsigned char *)v20;
    uint64_t v51 = v8;
    uint64_t v55 = v2;
    id v53 = a1;
    id v22 = [a2 previouslyFocusedIndexPath];
    if (v22)
    {
      int v23 = v22;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v19, v11, v5);
      unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v24(v19, 0, 1, v5);
      int v25 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5) != 1)
      {
LABEL_7:
        uint64_t v54 = v21;
        sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_1007069A0);
        id v26 = [a2 nextFocusedIndexPath];
        if (v26)
        {
          uint64_t v27 = v26;
          int v50 = v25;
          id v49 = a2;
          static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v28(v16, v11, v5);
          v24(v16, 0, 1, v5);
          uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
          if (v29((uint64_t)v16, 1, v5) != 1)
          {
            unint64_t v46 = v29;
            objc_super v47 = (void (*)(char *, uint64_t, uint64_t))v28;
            uint64_t v48 = v6 + 56;
            sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007069A0);
            char v30 = v50;
            if (v50)
            {
              id v31 = [v49 nextFocusedIndexPath];
              if (v31)
              {
                uint64_t v32 = v31;
                static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v33 = (uint64_t)v52;
                unsigned __int8 v34 = v11;
                uint64_t v35 = v47;
                v47(v52, (uint64_t)v34, v5);
                v24((char *)v33, 0, 1, v5);
                if (v46(v33, 1, v5) != 1)
                {
                  v35(v51, v33, v5);
                  uint64_t v36 = v54;
                  id v37 = [v54 indexPathsForSelectedItems];
                  if (v37)
                  {
                    uint64_t v38 = v37;
                    uint64_t v39 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
                  }
                  else
                  {
                    uint64_t v39 = _swiftEmptyArrayStorage;
                  }
                  __chkstk_darwin(v37);
                  unint64_t v44 = v51;
                  *(&v45 - 2) = (uint64_t)v51;
                  BOOL v41 = sub_1001B52CC((uint64_t (*)(char *))sub_100488B44, (uint64_t)(&v45 - 4), (uint64_t)v39);
                  (*(void (**)(char *, uint64_t))(v6 + 8))(v44, v5);
                  swift_bridgeObjectRelease();
                  char v30 = 0;
                  char v40 = 1;
                  uint64_t v42 = v55;
                  goto LABEL_17;
                }
              }
              else
              {
                uint64_t v33 = (uint64_t)v52;
                v24(v52, 1, 1, v5);
              }
              sub_1000CBBA4(v33, (uint64_t *)&unk_1007069A0);
              char v30 = 0;
              char v40 = 1;
            }
            else
            {
              char v40 = 1;
            }
LABEL_16:
            BOOL v41 = 1;
            uint64_t v36 = v54;
            uint64_t v42 = v55;
LABEL_17:
            Class v43 = v53;
            *(unsigned char *)(v42 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sidebarHasActiveFocus) = v40;
            v36[OBJC_IVAR____TtC5Files24DOCSidebarCollectionView_requireCanBecomeFocusedTrue] = v30;
            [v36 setSelectionFollowsFocus:(sub_10000D8DC() != 2) & v41];

            return;
          }
        }
        else
        {
          v24(v16, 1, 1, v5);
        }
        sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007069A0);
        char v40 = 0;
        char v30 = 1;
        goto LABEL_16;
      }
    }
    else
    {
      unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v24(v19, 1, 1, v5);
    }
    int v25 = 1;
    goto LABEL_7;
  }
}

uint64_t sub_100488974(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100717530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004889DC(uint64_t a1)
{
  return a1;
}

void sub_100488A14(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a1)
  {
    swift_unknownObjectRelease();
    sub_1000A7C1C(a3, a4, a5, a6);
  }
}

uint64_t sub_100488A74()
{
  swift_unknownObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 56);
  if (v1 != 255) {
    sub_10010EDB8(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v1);
  }

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100488AC4(uint64_t a1)
{
  return sub_1001FCF04(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100488AE8(uint64_t a1)
{
  return sub_100486F0C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100488AF8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

id sub_100488B38(void *a1)
{
  return sub_100487178(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_100488B44(uint64_t a1)
{
  return sub_100488AC4(a1) & 1;
}

id sub_100488B68()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionEmptyDataSource()) init];
  qword_100717550 = (uint64_t)result;
  return result;
}

id sub_100488CE8()
{
  return sub_1004891DC(0, type metadata accessor for DOCItemCollectionEmptyDataSource);
}

uint64_t type metadata accessor for DOCItemCollectionEmptyDataSource()
{
  return self;
}

uint64_t sub_100488D2C(uint64_t a1)
{
  uint64_t v1 = (void *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess();
  *uint64_t v1 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100488D84(void *a1)
{
  uint64_t v3 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 56) = type metadata accessor for DOCItemCollectionView();
  *(void *)(v4 + 64) = sub_1000D7BA0();
  *(void *)(v4 + 32) = a1;
  id v5 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v6 = self;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1004892A8;
  *(void *)(v8 + 24) = v7;
  v14[4] = sub_1000879B8;
  v14[5] = v8;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  id v14[2] = sub_100087990;
  v14[3] = &unk_1006AEAE0;
  uint64_t v9 = _Block_copy(v14);
  id v10 = v5;
  swift_retain();
  swift_release();
  [(id)v6 performWithoutAnimation:v9];
  _Block_release(v9);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
    goto LABEL_5;
  }
  uint64_t v11 = (void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionViewPool_collectionViews);
  swift_beginAccess();
  id v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_5:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return swift_release();
}

id sub_100488FF0(char *a1)
{
  if (qword_100705258 != -1) {
    swift_once();
  }
  [a1 setDataSource:qword_100717550];
  [a1 setPrefetchDataSource:0];
  [a1 setHidden:0];
  [a1 reloadData];
  [a1 setDelegate:0];
  *(void *)&a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate + 8] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&a1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate + 8] = 0;
  swift_unknownObjectWeakAssign();
  [a1 setEditing:0];
  id v2 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  [a1 setCollectionViewLayout:v2 animated:0];

  [a1 _clearSafeAreaInsets];
  [a1 setContentInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [a1 setContentOffset:0.0, 0.0];

  return [a1 setContentSize:0.0, 0.0];
}

id sub_1004891C4(uint64_t a1)
{
  return sub_1004891DC(a1, type metadata accessor for DOCItemCollectionViewPool);
}

id sub_1004891DC(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100489270()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004892A8()
{
  return sub_100488FF0(*(char **)(v0 + 16));
}

uint64_t sub_1004892B0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004892C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_fileManager);
}

id sub_100489310()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_rootItemCollection];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  aBlock[4] = sub_10048CA74;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006AEF90;
  uint64_t v3 = _Block_copy(aBlock);
  id v4 = v1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v3);

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCLegacyWebDAVProviderSource();
  return [super dealloc];
}

uint64_t sub_100489570()
{
  return type metadata accessor for DOCLegacyWebDAVProviderSource();
}

uint64_t type metadata accessor for DOCLegacyWebDAVProviderSource()
{
  uint64_t result = qword_100717660;
  if (!qword_100717660) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004895C4()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  v4[4] = sub_10048CA94;
  v4[5] = v1;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1000666D8;
  v4[3] = &unk_1006AEEF0;
  uint64_t v2 = _Block_copy(v4);
  id v3 = v0;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v2);
}

id sub_10048968C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  objc_super v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "WebDAV refresh the eject state", v8, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_rootItemCollection);
  [v9 doc_stopObserving];
  return [v9 doc_startObserving];
}

void sub_1004897F8(void *a1, uint64_t a2, char *a3, void (*a4)(void, uint64_t), uint64_t a5, char a6)
{
  if (a2)
  {
    id v10 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10059B760;
    id v12 = [a3 identifier];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_100073F48();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    uint64_t v16 = _convertErrorToNSError(_:)();
    *(void *)(v11 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v11 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v11 + 72) = v16;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v17 = a2;
LABEL_3:
    a4(0, v17);
    return;
  }
  if (!a1)
  {
    int v25 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1005A0030;
    id v27 = [a3 identifier];
    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v30 = v29;

    *(void *)(v26 + 56) = &type metadata for String;
    *(void *)(v26 + 64) = sub_100073F48();
    *(void *)(v26 + 32) = v28;
    *(void *)(v26 + 40) = v30;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    goto LABEL_3;
  }
  uint64_t v20 = *(void **)&a3[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a4;
  *(void *)(v21 + 32) = a5;
  *(void *)(v21 + 40) = a3;
  *(unsigned char *)(v21 + 48) = a6 & 1;
  v31[4] = sub_10048BDA4;
  v31[5] = v21;
  v31[0] = _NSConcreteStackBlock;
  v31[1] = 1107296256;
  v31[2] = sub_1001B6B50;
  v31[3] = &unk_1006AEBA8;
  id v22 = _Block_copy(v31);
  id v23 = a1;
  swift_retain();
  unint64_t v24 = a3;
  swift_release();
  [v20 fetchURLForItem:v23 completionHandler:v22];
  _Block_release(v22);
}

uint64_t sub_100489B04(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(void, uint64_t), uint64_t a5, char *a6, int a7)
{
  uint64_t v56 = a5;
  char v57 = a4;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v50 - v20;
  if (a2)
  {
    id v22 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10059B760;
    *(void *)(v23 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v23 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v23 + 32) = a3;
    id v24 = a3;
    uint64_t v25 = _convertErrorToNSError(_:)();
    *(void *)(v23 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v23 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v23 + 72) = v25;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v26 = a2;
    return v57(0, v26);
  }
  int v54 = a7;
  uint64_t v55 = a6;
  uint64_t v27 = a1;
  uint64_t v28 = v19;
  sub_1002827DC(v27, (uint64_t)v14);
  uint64_t v29 = v28;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v14, 1, v15) == 1)
  {
    sub_1001939F8((uint64_t)v14);
    uint64_t v30 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1005A0030;
    *(void *)(v31 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v31 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v31 + 32) = a3;
    id v32 = a3;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v26 = 0;
    return v57(0, v26);
  }
  unsigned __int8 v34 = *(void (**)(unint64_t, char *, uint64_t))(v28 + 32);
  uint64_t v52 = v28 + 32;
  id v53 = v34;
  v34((unint64_t)v21, v14, v15);
  LODWORD(v50) = URL.startAccessingSecurityScopedResource()();
  uint64_t v35 = (void *)static DOCLog.UI.getter();
  LODWORD(v51) = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10059B760;
  URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
  uint64_t v38 = v37;
  *(void *)(v36 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
  *(void *)(v36 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
  *(void *)(v36 + 32) = v38;
  *(void *)(v36 + 96) = &type metadata for Bool;
  *(void *)(v36 + 104) = &protocol witness table for Bool;
  LOBYTE(v38) = v50 & 1;
  *(unsigned char *)(v36 + 72) = v50 & 1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v51 = *(NSURL **)&v55[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_fileManager];
  URL._bridgeToObjectiveC()(v51);
  int v50 = v39;
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v17, v21, v15);
  unint64_t v40 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v41 = v40 + v16;
  uint64_t v42 = swift_allocObject();
  unint64_t v43 = (v41 & 0xFFFFFFFFFFFFFFF8) + v42;
  v53(v42 + v40, v17, v15);
  *(unsigned char *)(v42 + v41) = v38;
  uint64_t v44 = v56;
  *(void *)(v43 + 8) = v57;
  *(void *)(v43 + 16) = v44;
  unint64_t v45 = v42 + (((v41 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v46 = v55;
  *(void *)unint64_t v45 = v55;
  *(unsigned char *)(v45 + 8) = v54 & 1;
  aBlock[4] = sub_10048BE70;
  aBlock[5] = v42;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10048B1BC;
  aBlock[3] = &unk_1006AEBF8;
  objc_super v47 = _Block_copy(aBlock);
  swift_retain();
  id v48 = v46;
  swift_release();
  id v49 = v50;
  [(NSURL *)v51 getFileProviderServicesForItemAtURL:v50 completionHandler:v47];
  _Block_release(v47);

  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v21, v15);
}

void sub_10048A0CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, void (*a5)(void, uint64_t), uint64_t a6, void *a7, char a8)
{
  uint64_t v43 = a6;
  uint64_t v44 = a5;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10059B760;
    URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
    uint64_t v21 = v20;
    *(void *)(v19 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v19 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v19 + 32) = v21;
    uint64_t v22 = _convertErrorToNSError(_:)();
    *(void *)(v19 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 72) = v22;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (a4) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v23 = a2;
  }
  else
  {
    int v42 = a4;
    if (a1)
    {
      uint64_t v24 = sub_10048BF8C(a1);
      if (v25)
      {
        uint64_t v26 = v25;
        uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
        uint64_t v41 = v24;
        v27((char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v14);
        unint64_t v28 = (*(unsigned __int8 *)(v15 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
        unint64_t v29 = (v16 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v30 = swift_allocObject();
        *(unsigned char *)(v30 + 16) = v41 & 1;
        *(void *)(v30 + 24) = v26;
        *(unsigned char *)(v30 + 32) = v42 & 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v30 + v28, v17, v14);
        uint64_t v31 = (void *)(v30 + v29);
        uint64_t v32 = v43;
        *uint64_t v31 = v44;
        v31[1] = v32;
        unint64_t v33 = v30 + ((v29 + 23) & 0xFFFFFFFFFFFFFFF8);
        *(void *)unint64_t v33 = a7;
        *(unsigned char *)(v33 + 8) = a8 & 1;
        aBlock[4] = sub_10048C164;
        aBlock[5] = v30;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10000CAE4;
        aBlock[3] = &unk_1006AEC48;
        unsigned __int8 v34 = _Block_copy(aBlock);
        id v35 = v26;
        swift_retain();
        id v36 = a7;
        swift_release();
        [v35 getFileProviderConnectionWithCompletionHandler:v34];
        _Block_release(v34);

        return;
      }
    }
    uint64_t v37 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1005A0030;
    URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
    uint64_t v40 = v39;
    *(void *)(v38 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v38 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v38 + 32) = v40;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (v42) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v23 = 0;
  }
  v44(0, v23);
}

uint64_t sub_10048A5A0(void *a1, uint64_t a2, char a3, void *a4, char a5, uint64_t a6, uint64_t (*a7)(void, uint64_t), uint64_t a8, void *a9, char a10)
{
  uint64_t v71 = a6;
  uint64_t v72 = a7;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v20 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_10059B760;
    *(void *)(v21 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_100717678);
    *(void *)(v21 + 64) = sub_1000C5A24(&qword_100717688, (unint64_t *)&unk_100717678);
    *(void *)(v21 + 32) = a4;
    id v22 = a4;
    uint64_t v23 = _convertErrorToNSError(_:)();
    *(void *)(v21 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v21 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v21 + 72) = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (a5) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v24 = a2;
    return v72(0, v24);
  }
  if (!a1)
  {
    id v49 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_1005A0030;
    *(void *)(v50 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_100717678);
    *(void *)(v50 + 64) = sub_1000C5A24(&qword_100717688, (unint64_t *)&unk_100717678);
    *(void *)(v50 + 32) = a4;
    id v51 = a4;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if (a5) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v24 = 0;
    return v72(0, v24);
  }
  uint64_t v26 = a8;
  id v70 = a9;
  uint64_t v27 = &protocolRef__TtP5Files36DOC_com_apple_iwork_disconnecting_v2_;
  int v62 = a3 & 1;
  if ((a3 & 1) == 0) {
    uint64_t v27 = &protocolRef__TtP5Files33DOC_com_apple_iwork_disconnecting_;
  }
  unint64_t v28 = *v27;
  unint64_t v29 = self;
  id v30 = a1;
  id v31 = [v29 interfaceWithProtocol:v28];
  [v30 setRemoteObjectInterface:v31];

  unsigned __int8 v66 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v60[1] = v17 + 16;
  v66((char *)v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v71, v16);
  uint64_t v32 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v33 = (v32 + 25) & ~v32;
  unint64_t v34 = (v18 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = v34 + 16;
  uint64_t v64 = v32 | 7;
  uint64_t v35 = swift_allocObject();
  id v36 = v70;
  *(void *)(v35 + 16) = v70;
  char v37 = a5 & 1;
  *(unsigned char *)(v35 + 24) = v37;
  uint64_t v67 = v33;
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 32);
  v65(v35 + v33, v19, v16);
  unint64_t v61 = v34;
  uint64_t v38 = (void *)(v35 + v34);
  *uint64_t v38 = v72;
  v38[1] = v26;
  Class v78 = sub_10048C23C;
  uint64_t v79 = v35;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v75 = 1107296256;
  unint64_t v76 = sub_10044D134;
  uint64_t v77 = &unk_1006AEC98;
  uint64_t v39 = _Block_copy(&aBlock);
  id v68 = v36;
  uint64_t v69 = v26;
  swift_retain();
  swift_release();
  id v40 = [v30 remoteObjectProxyWithErrorHandler:v39];
  _Block_release(v39);
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  id v70 = v30;
  [v30 resume];
  if (v62)
  {
    sub_10009B208((uint64_t)v80, (uint64_t)&aBlock);
    sub_1000CBE70(&qword_100717690);
    swift_dynamicCast();
    uint64_t v52 = v73;
    v66(v19, v71, v16);
    uint64_t v53 = swift_allocObject();
    uint64_t v54 = v67;
    uint64_t v55 = v68;
    *(void *)(v53 + 16) = v68;
    *(unsigned char *)(v53 + 24) = v37;
    v65(v53 + v54, v19, v16);
    uint64_t v56 = (void *)(v53 + v61);
    uint64_t v57 = v69;
    void *v56 = v72;
    v56[1] = v57;
    Class v78 = sub_10048C2E8;
    uint64_t v79 = v53;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v75 = 1107296256;
    unint64_t v76 = sub_1001950CC;
    uint64_t v77 = &unk_1006AECE8;
    id v58 = _Block_copy(&aBlock);
    id v59 = v55;
    swift_retain();
    swift_release();
    [v52 disconnect:a10 & 1 withCompletion:v58];

    _Block_release(v58);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_10009B208((uint64_t)v80, (uint64_t)&aBlock);
    sub_1000CBE70(&qword_100717698);
    swift_dynamicCast();
    uint64_t v41 = v73;
    v66(v19, v71, v16);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v67;
    uint64_t v44 = v68;
    *(void *)(v42 + 16) = v68;
    *(unsigned char *)(v42 + 24) = v37;
    v65(v42 + v43, v19, v16);
    unint64_t v45 = (void *)(v42 + v61);
    uint64_t v46 = v69;
    void *v45 = v72;
    v45[1] = v46;
    Class v78 = sub_10048C4D8;
    uint64_t v79 = v42;
    Swift::String aBlock = _NSConcreteStackBlock;
    uint64_t v75 = 1107296256;
    unint64_t v76 = sub_1001950CC;
    uint64_t v77 = &unk_1006AED38;
    objc_super v47 = _Block_copy(&aBlock);
    id v48 = v44;
    swift_retain();
    swift_release();
    [v41 disconnectWithCompletion:v47];
    _Block_release(v47);
    swift_unknownObjectRelease();
  }
  return sub_10009B1B8((uint64_t)v80);
}

uint64_t sub_10048AD58(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(void, uint64_t))
{
  uint64_t v9 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10059B760;
  id v11 = [a2 identifier];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_100073F48();
  *(void *)(v10 + 32) = v12;
  *(void *)(v10 + 40) = v14;
  uint64_t v15 = _convertErrorToNSError(_:)();
  *(void *)(v10 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v10 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v10 + 72) = v15;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a3) {
    URL.stopAccessingSecurityScopedResource()();
  }
  return a5(0, a1);
}

uint64_t sub_10048AED0(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t (*a5)(void, void), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  if (a1)
  {
    swift_errorRetain();
    uint64_t v13 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10059B760;
    id v15 = [a2 identifier];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = v17;

    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_100073F48();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v18;
    uint64_t v19 = _convertErrorToNSError(_:)();
    *(void *)(v14 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v14 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v14 + 72) = v19;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v20 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
    id v22 = [a2 identifier];
    uint64_t v23 = a5;
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v26 = v25;

    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_100073F48();
    *(void *)(v21 + 32) = v24;
    *(void *)(v21 + 40) = v26;
    a5 = v23;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a2;
    aBlock[4] = a8;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = a9;
    unint64_t v28 = _Block_copy(aBlock);
    id v29 = a2;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v28);
  }
  if (a3) {
    URL.stopAccessingSecurityScopedResource()();
  }
  return a5(a10 & 1, a1);
}

uint64_t sub_10048B1BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    type metadata accessor for NSFileProviderServiceName(0);
    sub_10009E6C4(0, (unint64_t *)&unk_100717678);
    sub_10048BF34();
    uint64_t v4 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10048B3EC()
{
  return swift_updateClassMetadata2();
}

void *sub_10048B438(void *a1)
{
  id v3 = [v1 identifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  uint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = v4;
  result[4] = v6;
  result[5] = v1;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v8)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void **)&v1[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v1;
    *(void *)(v11 + 24) = sub_10048BA88;
    *(void *)(v11 + 32) = v9;
    *(unsigned char *)(v11 + 40) = 0;
    v15[4] = sub_10048BA98;
    v15[5] = v11;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10000CAE4;
    v15[3] = &unk_1006AEB58;
    uint64_t v12 = _Block_copy(v15);
    uint64_t v13 = v1;
    id v14 = a1;
    swift_retain();
    swift_release();
    [v10 doc_fetchRootItemForProviderDomain:v8 completionHandler:v12];
    _Block_release(v12);
    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10048B5C4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v38 - v16;
  if (a2)
  {
    swift_errorRetain();
    if (a1)
    {
      static Logger.UI.getter();
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = a4;
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Presenting an alert to the user to be able to force the eject", v20, 2u);
        a4 = v39;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      uint64_t v21 = (void *)_convertErrorToNSError(_:)();
      id v22 = (id)_DocumentManagerBundle();
      if (v22)
      {
        uint64_t v23 = v22;
        v42._object = (void *)0x80000001005F8900;
        v24._uint64_t countAndFlagsBits = 0x74754F206E676953;
        v24._object = (void *)0xE90000000000003FLL;
        v25._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v25._object = (void *)0xEB00000000656C62;
        v26._uint64_t countAndFlagsBits = 0;
        v26._object = (void *)0xE000000000000000;
        v42._uint64_t countAndFlagsBits = 0xD00000000000006ALL;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v42);

        NSString v27 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unint64_t v28 = (void *)_convertErrorToNSError(_:)();
        id v29 = [v28 localizedRecoverySuggestion];

        id v30 = (void *)swift_allocObject();
        v30[2] = a4;
        v30[3] = a5;
        v30[4] = a6;
        aBlock[4] = sub_10048C584;
        aBlock[5] = v30;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        aBlock[3] = &unk_1006AEE28;
        id v31 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v32 = a6;
        swift_release();
        DOCPresentAlertForErrorWithForceHandler();
        swift_errorRelease();
        _Block_release(v31);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v35, v36))
      {
        char v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "We cannot force eject", v37, 2u);
        swift_slowDealloc();
      }
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
  }
  else
  {
    uint64_t v33 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_100073F48();
    *(void *)(v34 + 32) = a4;
    *(void *)(v34 + 40) = a5;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10048BA6C()
{
  return sub_100012830((void (*)(void))&_swift_bridgeObjectRelease, 48);
}

void sub_10048BA88(char a1, uint64_t a2)
{
  sub_10048B5C4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_10048BA98(void *a1, uint64_t a2)
{
  sub_1004897F8(a1, a2, *(char **)(v2 + 16), *(void (**)(void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

uint64_t sub_10048BAA8(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_100073F48();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  uint64_t v9 = *(void *)&a3[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v9)
  {
    uint64_t v10 = result;
    uint64_t v11 = *(void **)&a3[OBJC_IVAR____TtC5Files29DOCLegacyWebDAVProviderSource_itemManager];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a3;
    *(void *)(v12 + 24) = sub_10048C5C8;
    *(void *)(v12 + 32) = v10;
    *(unsigned char *)(v12 + 40) = 1;
    v15[4] = sub_10048CA70;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    v15[2] = sub_10000CAE4;
    v15[3] = &unk_1006AEEA0;
    uint64_t v13 = _Block_copy(v15);
    swift_bridgeObjectRetain();
    id v14 = a3;
    swift_retain();
    swift_release();
    [v11 doc_fetchRootItemForProviderDomain:v9 completionHandler:v13];
    _Block_release(v13);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10048BC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0030;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_100073F48();
  *(void *)(v7 + 32) = a3;
  *(void *)(v7 + 40) = a4;
  swift_bridgeObjectRetain();
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10048BD88()
{
  return sub_100012830((void (*)(void))&_swift_release, 49);
}

uint64_t sub_10048BDA4(uint64_t a1, uint64_t a2)
{
  return sub_100489B04(a1, a2, *(void **)(v2 + 16), *(uint64_t (**)(void, uint64_t))(v2 + 24), *(void *)(v2 + 32), *(char **)(v2 + 40), *(unsigned __int8 *)(v2 + 48));
}

uint64_t sub_10048BDB4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((v4 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 9, v5);
}

void sub_10048BE70(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = (v7 & 0xFFFFFFFFFFFFFFF8) + v2;
  uint64_t v9 = v2 + v6;
  int v10 = *(unsigned __int8 *)(v2 + v7);
  uint64_t v11 = *(void (**)(void, uint64_t))(v8 + 8);
  uint64_t v12 = *(void *)(v8 + 16);
  uint64_t v13 = v2 + (((v7 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  id v14 = *(void **)v13;
  char v15 = *(unsigned char *)(v13 + 8);

  sub_10048A0CC(a1, a2, v9, v10, v11, v12, v14, v15);
}

unint64_t sub_10048BF34()
{
  unint64_t result = qword_100706200;
  if (!qword_100706200)
  {
    type metadata accessor for NSFileProviderServiceName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100706200);
  }
  return result;
}

uint64_t sub_10048BF8C(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t v3 = v2;
  if (*(void *)(a1 + 16) && (uint64_t v4 = sub_1000A54AC(v2), (v5 & 1) != 0))
  {
    *(id *)(*(void *)(a1 + 56) + 8 * v4);

    return 1;
  }
  else
  {

    NSString v7 = String._bridgeToObjectiveC()();
    uint64_t v8 = v7;
    if (*(void *)(a1 + 16) && (uint64_t v9 = sub_1000A54AC(v7), (v10 & 1) != 0))
    {
      id v11 = *(id *)(*(void *)(a1 + 56) + 8 * v9);

      return 0;
    }
    else
    {

      return 0;
    }
  }
}

uint64_t sub_10048C068()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 33) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 9, v5);
}

uint64_t sub_10048C164(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10048A5A0(a1, a2, *(unsigned char *)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32), v2 + v6, *(uint64_t (**)(void, uint64_t))(v2 + v7), *(void *)(v2 + v7 + 8), *(void **)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10048C23C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  unint64_t v7 = *(uint64_t (**)(void, uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10048AD58(a1, v5, v6, v1 + v4, v7);
}

uint64_t sub_10048C2E8(uint64_t a1)
{
  return sub_10048C314(a1, (uint64_t)&unk_1006AEDC0, (uint64_t)sub_10048CA94, (uint64_t)&unk_1006AEDD8, 1);
}

uint64_t sub_10048C314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10048AED0(a1, *(void **)(v5 + 16), *(unsigned char *)(v5 + 24), v5 + v12, *(uint64_t (**)(void, void))(v5 + v13), *(void *)(v5 + v13 + 8), a2, a3, a4, a5);
}

uint64_t sub_10048C3EC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_10048C4D8(uint64_t a1)
{
  return sub_10048C314(a1, (uint64_t)&unk_1006AED70, (uint64_t)sub_10048C504, (uint64_t)&unk_1006AED88, 0);
}

id sub_10048C504()
{
  return sub_10048968C(*(void *)(v0 + 16));
}

uint64_t sub_10048C50C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048C544()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10048C584()
{
  return sub_10048BAA8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_10048C590()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10048C5C8(uint64_t a1, uint64_t a2)
{
  return sub_10048BC9C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_10048C5D4()
{
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

id sub_10048C614(const char *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    char v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a1, v10, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id result = [v3 isEjectable];
  if ((result & 1) == 0) {
    return [v3 setIsEjectable:1];
  }
  return result;
}

id sub_10048C77C()
{
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
  uint64_t v3 = _convertErrorToNSError(_:)();
  *(void *)(v2 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v2 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v2 + 32) = v3;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id result = [v0 isEjectable];
  if (result)
  {
    return [v0 setIsEjectable:0];
  }
  return result;
}

id sub_10048C8B8()
{
  return [*(id *)(v0 + 16) doc_stopObserving];
}

ValueMetadata *type metadata accessor for DOCLegacyWebDAVProviderSource.WebDAVService()
{
  return &type metadata for DOCLegacyWebDAVProviderSource.WebDAVService;
}

unsigned char *storeEnumTagSinglePayload for DOCLegacyWebDAVProviderSource.WebDAVService.Version(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10048C9A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLegacyWebDAVProviderSource.WebDAVService.Version()
{
  return &type metadata for DOCLegacyWebDAVProviderSource.WebDAVService.Version;
}

unint64_t sub_10048C9E0()
{
  unint64_t result = qword_1007176A0;
  if (!qword_1007176A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007176A0);
  }
  return result;
}

id sub_10048CAA8()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setNumberOfLines:0];
  id v2 = [self preferredFontForTextStyle:UIFontTextStyleSubheadline];
  [v0 setFont:v2];

  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v0;
}

id sub_10048CBA4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton);
  }
  else
  {
    id v4 = sub_10048CC08(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10048CC08(uint64_t a1)
{
  v28[1] = a1;
  v28[0] = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v1 = *(void *)(v28[0] - 8);
  __chkstk_darwin(v28[0]);
  id v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)v28 - v12;
  static UIButton.Configuration.plain()();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    char v15 = result;
    v31._object = (void *)0x80000001005F8B00;
    v16._uint64_t countAndFlagsBits = 0x736E6F6974704FLL;
    v16._object = (void *)0xE700000000000000;
    v17._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v17._object = (void *)0xEB00000000656C62;
    v18._uint64_t countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v31._uint64_t countAndFlagsBits = 0xD000000000000024;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v31);

    id result = [self _preferredFontForTextStyle:UIFontTextStyleSubheadline weight:UIFontWeightSemibold];
    if (result)
    {
      id v19 = result;
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      swift_getKeyPath();
      id v30 = v19;
      sub_1002DC380();
      AttributedString.subscript.setter();
      uint64_t v21 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 0, 1, v21);
      UIButton.Configuration.attributedTitle.setter();
      (*(void (**)(char *, void, void))(v1 + 104))(v3, enum case for UIButton.Configuration.Size.mini(_:), v28[0]);
      UIButton.Configuration.buttonSize.setter();

      UIButton.Configuration.contentInsets.setter();
      sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
      uint64_t v22 = v29;
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v29);
      uint64_t v23 = (void *)UIButton.init(configuration:primaryAction:)();
      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = v23;
      id v26 = v23;
      NSString v27 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      [v26 setDoc_primaryAction:v27];

      [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v22);
      return v26;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10048D130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler);
    if (v6)
    {
      swift_retain();
      v6(a3);
      sub_1000A7258((uint64_t)v6);
    }
  }
}

id sub_10048D1C4()
{
  return sub_10048D1DC(&OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator);
}

id sub_10048D1D0()
{
  return sub_10048D1DC(&OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator);
}

id sub_10048D1DC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)DOCSeparatorView) init];
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

char *sub_10048D260()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  id v3 = objc_allocWithZone((Class)UIView);
  id v4 = v0;
  id v5 = [v3 init];
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v2] = v5;
  uint64_t v6 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  *(void *)&v4[v6] = sub_10048CAA8();
  *(void *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator] = 0;
  *(void *)&v4[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics] = 0x4026000000000000;

  v91.receiver = v4;
  v91.super_class = (Class)type metadata accessor for DOCShareBannerView();
  id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v8 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView];
  char v10 = v7;
  [v10 addSubview:v9];
  id v90 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A1560;
  id v12 = [*(id *)&v7[v8] leadingAnchor];
  id v13 = [v10 leadingAnchor];
  id v14 = [v12 constraintEqualToAnchor:v13];

  *(void *)(v11 + 32) = v14;
  id v15 = [*(id *)&v7[v8] trailingAnchor];
  id v16 = [v10 trailingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v11 + 40) = v17;
  id v18 = [*(id *)&v7[v8] topAnchor];
  id v19 = [v10 topAnchor];
  id v20 = [v18 constraintEqualToAnchor:v19];

  *(void *)(v11 + 48) = v20;
  id v21 = [*(id *)&v7[v8] bottomAnchor];
  id v22 = [v10 bottomAnchor];
  id v23 = [v21 constraintEqualToAnchor:v22];

  *(void *)(v11 + 56) = v23;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v90 activateConstraints:isa];

  uint64_t v25 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  [*(id *)&v7[v8] addSubview:*(void *)&v10[OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView]];
  id v26 = *(id *)&v7[v8];
  id v27 = sub_10048CBA4();
  [v26 addSubview:v27];

  id v28 = *(id *)&v7[v8];
  id v29 = sub_10048D1C4();
  [v28 addSubview:v29];

  id v30 = *(id *)&v7[v8];
  id v31 = sub_10048D1D0();
  [v30 addSubview:v31];

  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1005AD440;
  id v33 = [*(id *)&v10[v25] topAnchor];
  id v34 = [*(id *)&v7[v8] topAnchor];
  uint64_t v35 = OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics;
  id v36 = [v33 constraintEqualToAnchor:v34 constant:*(double *)&v10[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics]];

  *(void *)(v32 + 32) = v36;
  id v37 = [*(id *)&v10[v25] bottomAnchor];
  id v38 = [*(id *)&v7[v8] bottomAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38 constant:-*(double *)&v10[v35]];

  *(void *)(v32 + 40) = v39;
  id v40 = sub_10048CBA4();
  id v41 = [v40 topAnchor];

  id v42 = [*(id *)&v7[v8] topAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v32 + 48) = v43;
  id v44 = sub_10048CBA4();
  id v45 = [v44 bottomAnchor];

  id v46 = [*(id *)&v7[v8] bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  *(void *)(v32 + 56) = v47;
  id v48 = [*(id *)&v10[v25] leadingAnchor];
  id v49 = [*(id *)&v7[v8] leadingAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  *(void *)(v32 + 64) = v50;
  id v51 = [*(id *)&v10[v25] trailingAnchor];
  id v52 = sub_10048CBA4();
  id v53 = [v52 leadingAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53];
  *(void *)(v32 + 72) = v54;
  id v55 = sub_10048CBA4();
  id v56 = [v55 trailingAnchor];

  id v57 = [*(id *)&v7[v8] trailingAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  *(void *)(v32 + 80) = v58;
  id v59 = sub_10048D1C4();
  id v60 = [v59 topAnchor];

  id v61 = [*(id *)&v7[v8] topAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61];

  *(void *)(v32 + 88) = v62;
  id v63 = sub_10048D1C4();
  id v64 = [v63 leadingAnchor];

  id v65 = [*(id *)&v7[v8] leadingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65];

  *(void *)(v32 + 96) = v66;
  id v67 = sub_10048D1C4();
  id v68 = [v67 trailingAnchor];

  id v69 = [*(id *)&v7[v8] trailingAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69];

  *(void *)(v32 + 104) = v70;
  id v71 = sub_10048D1D0();
  id v72 = [v71 bottomAnchor];

  id v73 = [*(id *)&v7[v8] bottomAnchor];
  id v74 = [v72 constraintEqualToAnchor:v73];

  *(void *)(v32 + 112) = v74;
  id v75 = sub_10048D1D0();
  id v76 = [v75 leadingAnchor];

  id v77 = [*(id *)&v7[v8] leadingAnchor];
  id v78 = [v76 constraintEqualToAnchor:v77];

  *(void *)(v32 + 120) = v78;
  id v79 = sub_10048D1D0();
  id v80 = [v79 trailingAnchor];

  id v81 = [*(id *)&v7[v8] trailingAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81];

  *(void *)(v32 + 128) = v82;
  specialized Array._endMutation()();
  Class v83 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v90 activateConstraints:v83];

  LODWORD(v84) = 1132068864;
  [*(id *)&v10[v25] setContentHuggingPriority:0 forAxis:v84];
  id v85 = sub_10048CBA4();
  LODWORD(v86) = 1148846080;
  [v85 setContentHuggingPriority:0 forAxis:v86];

  id v87 = sub_10048CBA4();
  LODWORD(v88) = 1148846080;
  [v87 setContentCompressionResistancePriority:0 forAxis:v88];

  return v10;
}

id sub_10048DCF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCShareBannerView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCShareBannerView()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCShareBannerView.Metrics()
{
  return &type metadata for DOCShareBannerView.Metrics;
}

uint64_t sub_10048DDF4()
{
  return 8;
}

uint64_t sub_10048DE00()
{
  return swift_release();
}

uint64_t sub_10048DE08(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10048DE1C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10048DE28()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10048DE60()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10048DEA0(uint64_t a1)
{
  sub_10048D130(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10048DEA8()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_optionsButtonHandler];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  uint64_t v2 = OBJC_IVAR____TtC5Files18DOCShareBannerView_containerView;
  id v3 = [objc_allocWithZone((Class)UIView) init];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v0[v2] = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files18DOCShareBannerView_labelView;
  *(void *)&v0[v4] = sub_10048CAA8();
  *(void *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___optionsButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___topSeparator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView____lazy_storage___bottomSeparator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files18DOCShareBannerView_metrics] = 0x4026000000000000;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10048DF9C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - v10;
  if (!objc_msgSend(v2, "currentPreviewItem", v9)) {
    goto LABEL_16;
  }
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  if (v12)
  {
    id v13 = (void *)v12;
    swift_unknownObjectRetain();
    id v14 = [v13 fpItem];
    if (v14)
    {
      id v15 = v14;
      self;
      uint64_t v16 = swift_dynamicCastObjCClass();
      if (v16)
      {
        id v17 = (void *)v16;
        swift_unknownObjectRetain();
        id v18 = [v17 fpItem];
        if (v18)
        {
          id v19 = v18;
          if ([v18 isWritable])
          {
            id v20 = [v19 contentType];
            static UTType._unconditionallyBridgeFromObjectiveC(_:)();

            static UTType.movie.getter();
            LOBYTE(v20) = UTType.conforms(to:)();

            swift_unknownObjectRelease();
            id v21 = *(void (**)(char *, uint64_t))(v5 + 8);
            v21(v7, v4);
            v21(v11, v4);
            if (v20) {
              goto LABEL_15;
            }
            goto LABEL_14;
          }
          swift_unknownObjectRelease();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
      if (QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions != 1)
      {
LABEL_15:
        swift_unknownObjectRelease_n();

        goto LABEL_16;
      }
LABEL_14:
      if (([v2 isEditing] & 1) == 0)
      {
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
        *(void *)(inited + 32) = v15;
        unint64_t v27 = inited;
        specialized Array._endMutation()();
        unint64_t v25 = v27;
        id v26 = v15;
        char v22 = sub_1000301E0(a1, v25);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease_n();

        return v22 & 1;
      }
      goto LABEL_15;
    }
    swift_unknownObjectRelease_n();
  }
  else
  {
    swift_unknownObjectRelease();
  }
LABEL_16:
  char v22 = 0;
  return v22 & 1;
}

uint64_t sub_10048E290(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(uint64_t (***)(unsigned char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v51[-v10];
  __chkstk_darwin(v12);
  id v14 = &v51[-v13];
  if ((sub_10048DF9C(FPActionRename) & 1) == 0
    || ![v2 currentPreviewItem])
  {
LABEL_14:
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    id v28 = v2;
    id v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v54 = v5;
      id v55 = v6;
      uint64_t v31 = a1;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      uint64_t v57 = v53;
      *(_DWORD *)uint64_t v32 = 136315650;
      uint64_t v56 = sub_10009B0E4(0xD000000000000025, 0x80000001005F8B70, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v56 = sub_10009B0E4(v31, a2, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 22) = 2080;
      id v33 = [v28 currentPreviewItem];
      if (v33)
      {
        id v34 = [v33 description];
        swift_unknownObjectRelease();
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;
      }
      else
      {
        unint64_t v37 = 0xE300000000000000;
        uint64_t v35 = 7104878;
      }
      uint64_t v56 = sub_10009B0E4(v35, v37, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s: could not get currently previewed FPItem to rename to %s. currentPreviewItem == %s ", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return v55[1](v8, v54);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return v6[1](v8, v5);
    }
  }
  self;
  id v15 = (void *)swift_dynamicCastObjCClass();
  if (!v15
    || (id v55 = (uint64_t (**)(unsigned char *, uint64_t))[v15 fpItem]) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  uint64_t v54 = a1;
  if (String.count.getter() >= 1)
  {
    id v16 = [v55 displayName];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    if (v17 == v54 && v19 == a2)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        static Logger.Rename.getter();
        swift_bridgeObjectRetain_n();
        char v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.debug.getter();
        int v24 = v23;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v25 = swift_slowAlloc();
          uint64_t v53 = swift_slowAlloc();
          uint64_t v57 = v53;
          *(_DWORD *)uint64_t v25 = 136315394;
          int v52 = v24;
          uint64_t v56 = sub_10009B0E4(0xD000000000000025, 0x80000001005F8B70, &v57);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v25 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v56 = sub_10009B0E4(v54, a2, &v57);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v52, "%s: will change name to %s", (uint8_t *)v25, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v26 = v5;
          uint64_t v27 = v54;
          v6[1](v14, v26);
        }
        else
        {

          swift_bridgeObjectRelease_n();
          v6[1](v14, v5);
          uint64_t v27 = v54;
        }
        type metadata accessor for RenameControllerDelegate();
        uint64_t v42 = swift_allocObject();
        swift_unknownObjectWeakInit();
        swift_unknownObjectWeakInit();
        *(unsigned char *)(v42 + 32) = 0;
        swift_unknownObjectWeakAssign();
        id v43 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionGridCell());
        id v44 = sub_1000882AC(0, 0.0, 0.0, 0.0, 0.0);
        type metadata accessor for DOCInlineRenameController();
        uint64_t v45 = swift_allocObject();
        swift_retain();
        id v46 = v55;
        uint64_t v47 = sub_1004917D8(v42, (uint64_t)v44, (uint64_t)v46, v45);
        swift_release();

        uint64_t v48 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v49 = (void *)swift_allocObject();
        void v49[2] = v27;
        v49[3] = a2;
        v49[4] = v48;
        v49[5] = v46;
        v49[6] = v42;
        v49[7] = v47;
        swift_bridgeObjectRetain();
        swift_retain();
        id v50 = v46;
        swift_retain();
        sub_100425ED0(v50, v27, a2, 0, (void (*)(void))DOCSplitBrowserViewController.didCommitPreview(of:), 0, sub_100491D00, (uint64_t)v49);
        swift_unknownObjectRelease();

        swift_release();
        swift_release();
        return swift_release();
      }
    }
  }
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  id v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = swift_slowAlloc();
    uint64_t v53 = swift_slowAlloc();
    uint64_t v57 = v53;
    *(_DWORD *)uint64_t v41 = 136315394;
    uint64_t v56 = sub_10009B0E4(0xD000000000000025, 0x80000001005F8B70, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v41 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_10009B0E4(v54, a2, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s: suggested name %s was either empty or equal to current display name.", (uint8_t *)v41, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_unknownObjectRelease();
  return v6[1](v11, v5);
}

void sub_10048EBB0(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = (void *)(a5 + 16);
  if (a1 && !a2)
  {
    uint64_t v51 = v13;
    uint64_t v52 = v12;
    id v26 = a1;
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      id v50 = v26;
      uint64_t v30 = v29;
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315394;
      id v49 = a6;
      uint64_t v59 = sub_10009B0E4(0xD000000000000025, 0x80000001005F8B70, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      a6 = v49;
      uint64_t v59 = sub_10009B0E4(a3, a4, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: did commit rename with success: suggestedName = %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v26 = v50;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v52);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v39 = (void *)Strong;
      uint64_t v40 = swift_allocObject();
      swift_beginAccess();
      uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      uint64_t v42 = (void *)swift_allocObject();
      v42[2] = v40;
      v42[3] = v26;
      v42[4] = a6;
      uint64_t v43 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v44 = (void *)swift_allocObject();
      v44[2] = v43;
      v44[3] = sub_100491D70;
      v44[4] = v42;
      uint64_t v57 = sub_100491F20;
      id v58 = v44;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v54 = 1107296256;
      id v55 = sub_1000666D8;
      uint64_t v56 = &unk_1006AF250;
      uint64_t v45 = _Block_copy(&aBlock);
      id v46 = v26;
      swift_retain();
      id v47 = a6;
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v45);

      swift_release();
      swift_release();
    }
  }
  else
  {
    id v50 = (id)a3;
    static Logger.Rename.getter();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v51 = v13;
      uint64_t v52 = v12;
      id v49 = v19;
      uint64_t v22 = swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v59 = sub_10009B0E4(0xD000000000000025, 0x80000001005F8B70, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_10009B0E4((uint64_t)v50, a4, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 22) = 2080;
      if (a2)
      {
        swift_getErrorValue();
        uint64_t v23 = Error.localizedDescription.getter();
        unint64_t v25 = v24;
      }
      else
      {
        unint64_t v25 = 0xE800000000000000;
        uint64_t v23 = 0x726F727265206F4ELL;
      }
      uint64_t v59 = sub_10009B0E4(v23, v25, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s: failed to change name to %s with error: %s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v51 + 8))(v15, v52);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
    swift_beginAccess();
    uint64_t v31 = swift_unknownObjectWeakLoadStrong();
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      uint64_t v33 = swift_allocObject();
      swift_beginAccess();
      id v34 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectWeakInit();

      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v36 = (void *)swift_allocObject();
      v36[2] = v35;
      v36[3] = sub_100491D10;
      v36[4] = v33;
      uint64_t v57 = sub_100491D1C;
      id v58 = v36;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v54 = 1107296256;
      id v55 = sub_1000666D8;
      uint64_t v56 = &unk_1006AF1D8;
      unint64_t v37 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v37);

      swift_release_n();
    }
  }
}

void sub_10048F388()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong reloadData];
  }
}

void sub_10048F3E4(uint64_t a1, void *a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    uint64_t v7 = &Strong[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
    int v8 = Strong[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16];
    if (v8 == 255)
    {
    }
    else
    {
      uint64_t v9 = *(void **)v7;
      uint64_t v10 = (void *)*((void *)v7 + 1);
      if (v8)
      {
        sub_10039E1B8(*(void *)v7, *((void **)v7 + 1), 1);
      }
      else
      {
        id v11 = a2;
        id v12 = a3;
        sub_100491D80(v9, v10, v8);
        uint64_t v13 = sub_100491578((unint64_t)v9, v11, v12);

        sub_10039E204((uint64_t)v9, v10, v8);
        sub_1001B5B34((uint64_t)v11, (unint64_t)v13);
        if (v15) {
          id v14 = [v6 currentPreviewItemIndex];
        }
        DOCPreviewController.set(_:defaultIndex:)((unint64_t)v13, 0, 0, (unint64_t)v14, 0);
      }
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10048F52C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    id v7 = [Strong view];

    if (!v7)
    {
      __break(1u);
      return;
    }
    [v7 setUserInteractionEnabled:0];
  }
  swift_beginAccess();
  int v8 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = [v8 _definiteTransitionCoordinator];

    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    id v12 = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = a2;
    v13[3] = a3;
    v13[4] = v11;
    aBlock[4] = sub_100491DD8;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100045AE0;
    aBlock[3] = &unk_1006AF2A0;
    id v14 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v10 animateAlongsideTransition:0 completion:v14];
    _Block_release(v14);
    swift_unknownObjectRelease();
  }
}

void sub_10048F714(uint64_t a1, void (*a2)(void))
{
  a2();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = Strong;
    id v4 = [Strong view];

    if (v4)
    {
      [v4 setUserInteractionEnabled:1];
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_10048F7A8(unint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (!a1) {
    goto LABEL_10;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    id v17 = 0;
    goto LABEL_11;
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v7 + 16))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(a1 + 32);
  }
  id v17 = v9;
  swift_bridgeObjectRelease();
LABEL_11:
  id v10 = [self defaultManager];
  sub_1000CBE70(&qword_10070AE10);
  uint64_t v11 = *(void *)(type metadata accessor for DOCOperationItem() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
  *(void *)(v13 + v12) = a3;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a3;
  id v16 = a3;
  swift_retain();
  sub_100535854(2, v13, v17, 1, 2, 0, a4, sub_100491DE8, v15);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
}

void sub_10048F9F0(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = (void *)type metadata accessor for Logger();
  uint64_t v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  id v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v11 = (id)(a1 & 0xFFFFFFFFFFFFFF8);
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_4:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_22;
          }
          id v13 = *(id *)(a1 + 32);
        }
        uint64_t v14 = v13;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong)
        {

          return;
        }
        uint64_t v7 = (void *)Strong;
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = a2;
        *(void *)(v16 + 24) = a3;
        swift_retain_n();
        id v17 = a3;
        a1 = v14;
        sub_10048FF1C();
        if (([(id)a1 isCopying] & 1) == 0)
        {
          uint64_t v29 = (id *)(id)a1;
          sub_100490FF8(v29, a2, (uint64_t)v17);
          swift_release();

          goto LABEL_13;
        }
        id v34 = v17;
        uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCNodeObserver());
        uint64_t v33 = (id *)(id)a1;
        id v3 = sub_100490D00(v33, 0, 0, v18);
        uint64_t v19 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v20 = (uint64_t (*)(uint64_t))swift_allocObject();
        *((void *)v20 + 2) = v19;
        *((void *)v20 + 3) = sub_100491DF4;
        *((void *)v20 + 4) = v16;
        os_log_type_t v21 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
        id v22 = objc_allocWithZone(v21);
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v23 = (char *)v22;
        UUID.init()();
        unint64_t v24 = (uint64_t (**)(uint64_t))&v23[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
        *unint64_t v24 = sub_100491E48;
        v24[1] = v20;
        unint64_t v25 = &v23[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
        *(void *)unint64_t v25 = 0;
        *((void *)v25 + 1) = 0;
        swift_retain();

        v36.receiver = v23;
        v36.super_class = v21;
        [super init];
        swift_release();
        uint64_t v27 = &v3[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
        swift_beginAccess();
        id v11 = v26;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*(void *)v27 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((*(void *)v27 & 0xFFFFFFFFFFFFFF8)
                                                                                    + 0x18) >> 1)
        {
LABEL_10:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          swift_endAccess();
          swift_release();
          swift_release();
          os_log_type_t v28 = *(void **)((char *)v7 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber);
          *(void *)((char *)v7 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber) = v11;

          sub_100034EF8();
          uint64_t v29 = *(id **)((char *)v7 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver);
          *(void *)((char *)v7 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver) = v3;
          swift_release();

          id v17 = v34;
LABEL_13:

          swift_release();
          return;
        }
LABEL_22:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
  static Logger.UI.getter();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v35 = sub_10009B0E4(0xD000000000000016, 0x80000001005F8BA0, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s Duplication from Quick Look failed", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, void *))(v8 + 8))(v10, v7);
}

void sub_10048FF1C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver);
  if (v1)
  {
    id v9 = v1;
    sub_10019E3AC();
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber);
    if (v2)
    {
      swift_beginAccess();
      id v3 = v2;
      unint64_t v4 = swift_bridgeObjectRetain();
      unint64_t v5 = sub_10050E2E4(v4, (uint64_t)v3);
      char v7 = v6;
      swift_bridgeObjectRelease();
      if (v7)
      {
      }
      else
      {
        swift_beginAccess();
        uint64_t v8 = (void *)sub_100050628(v5);
        swift_endAccess();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_100490064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v19;
  v15[2] = a1;
  v15[3] = v16;
  v15[4] = a4;
  v15[5] = v13;
  aBlock[4] = sub_100491E9C;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006AF368;
  id v17 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
}

void sub_100490364(void *a1, void (*a2)(void *))
{
  if (([a1 isCopying] & 1) == 0)
  {
    a2(a1);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      unint64_t v5 = (void *)Strong;
      sub_10048FF1C();
    }
  }
}

void _s5Files20DOCPreviewControllerC4moveyyypSgF_0()
{
  uint64_t v1 = v0;
  if ([v0 currentPreviewItem])
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2 && (id v3 = [v2 fpItem]) != 0)
    {
      unint64_t v4 = v3;
      unint64_t v5 = (id *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
      swift_beginAccess();
      if (*v5
        && ([*v5 copy],
            _bridgeAnyObjectToAny(_:)(),
            swift_unknownObjectRelease(),
            sub_10009E6C4(0, (unint64_t *)&qword_10070DE80),
            swift_dynamicCast()))
      {
        id v6 = v17;
      }
      else
      {
        id v6 = [objc_allocWithZone((Class)DOCConfiguration) init];
      }
      [v6 setInteractionMode:3];
      [v6 setForPickingDocuments:0];
      [v6 setForMovingDocuments:1];
      [v6 setInProcess:1];
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1005A04F0;
      *(void *)(v7 + 32) = v4;
      uint64_t v18 = v7;
      specialized Array._endMutation()();
      uint64_t v8 = v18;
      uint64_t v9 = (objc_class *)type metadata accessor for DOCPickerContext();
      uint64_t v10 = (char *)objc_allocWithZone(v9);
      *(void *)&v10[OBJC_IVAR____TtC5Files16DOCPickerContext_utisToSave] = _swiftEmptyArrayStorage;
      *(void *)&v10[OBJC_IVAR____TtC5Files16DOCPickerContext_urlsToSave] = 0;
      *(void *)&v10[OBJC_IVAR____TtC5Files16DOCPickerContext_itemsToMove] = v8;
      v16.receiver = v10;
      v16.super_class = v9;
      id v11 = v6;
      id v12 = v4;
      id v13 = [super init];
      id v14 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentPickerViewController());
      id v15 = DOCDocumentPickerViewController.init(configuration:context:)(v11, v13);
      swift_beginAccess();
      swift_unknownObjectWeakAssign();
      [v1 presentViewController:v15 animated:1 completion:v16];
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

void DOCPreviewController.documentPicker(_:didConfirmDocumentsAt:)(uint64_t a1, uint64_t a2)
{
}

void sub_1004906E4(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    if (a1)
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v3;
      *(void *)(v4 + 24) = a1;
      aBlock[4] = sub_100491EF0;
      aBlock[5] = v4;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      aBlock[3] = &unk_1006AF3B8;
      unint64_t v5 = _Block_copy(aBlock);
      id v6 = a1;
      id v7 = v3;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v5);

      id v3 = v6;
    }
  }
}

uint64_t sub_1004907F8(void *a1, void *a2)
{
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  uint64_t v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v28 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)&v27 - v12;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1005A04F0;
  *(void *)(v14 + 32) = a2;
  aBlock[0] = v14;
  specialized Array._endMutation()();
  unint64_t v15 = aBlock[0];
  id v16 = a2;
  DOCPreviewController.set(_:defaultIndex:)(v15, 0, 0, 0, 0);
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v10, v7);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = v16;
  aBlock[4] = sub_100491EF8;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006AF408;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v16;
  id v22 = a1;
  swift_release();
  uint64_t v23 = v29;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  unint64_t v24 = v30;
  uint64_t v25 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  return ((uint64_t (*)(char *, uint64_t))v18)(v13, v28);
}

uint64_t sub_100490BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

char *sub_100490D00(void *a1, void *a2, char a3, char *a4)
{
  uint64_t v35 = a2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = type metadata accessor for DOCNodeType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  *(void *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers] = _swiftEmptyArrayStorage;
  uint64_t v15 = OBJC_IVAR____TtC5Files15DOCNodeObserver_node;
  *(void *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_node] = a1;
  if (a3)
  {
    uint64_t v34 = ObjectType;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v16 = a4;
    id v17 = a1;
    DOCNode.nodeType.getter();
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DOCNodeType.FINode(_:), v8);
    char v18 = static DOCNodeType.== infix(_:_:)();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v11, v8);
    v19(v14, v8);
    if (v18)
    {
      unsigned __int8 v20 = [v17 isFolder];
      uint64_t ObjectType = v34;
      id v21 = v35;
      if (v20) {
        unsigned int v22 = 1;
      }
      else {
        unsigned int v22 = [v17 isPackage];
      }
    }
    else
    {
      unsigned int v22 = 0;
      uint64_t ObjectType = v34;
      id v21 = v35;
    }
  }
  else
  {
    uint64_t v23 = a4;
    id v24 = a1;
    unsigned int v22 = 0;
    id v21 = v35;
  }
  a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving] = v22;
  uint64_t v25 = type metadata accessor for DOCNodeCollection();
  id v26 = *(void **)&a4[v15];
  uint64_t v27 = swift_getObjectType();
  id v28 = v21;
  swift_unknownObjectRetain();
  char v37 = v22 ^ 1;
  uint64_t v29 = 4;
  if (!v22) {
    uint64_t v29 = 0;
  }
  *(void *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection] = sub_10001A2F0(v26, 0, v21, v29 | ((unint64_t)(v22 ^ 1u) << 32), v25, v27);

  v36.receiver = a4;
  v36.super_class = ObjectType;
  uint64_t v30 = (char *)[super init];
  *(void *)(*(void *)&v30[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection]
            + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate
            + 8) = &off_1006B45F8;
  swift_unknownObjectWeakAssign();
  uint64_t v31 = v30;
  sub_100034EF8();

  return v31;
}

void sub_100490FF8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 fpfs_fpItem:v7];
  if (v10)
  {
    uint64_t v11 = v10;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = (void *)Strong;
      sub_100529DC4(v11, a3);
    }
  }
  else
  {
    static Logger.UI.getter();
    id v14 = a1;
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      v21[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v22 = sub_10009B0E4(0xD000000000000016, 0x80000001005F8BA0, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v22 = (uint64_t)v14;
      id v18 = v14;
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v19 = String.init<A>(describing:)();
      uint64_t v22 = sub_10009B0E4(v19, v20, v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s Could not get FPItem from actionable duplicate node %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

void sub_1004912B4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 fpfs_fpItem:v7];
  if (v10)
  {
    uint64_t v11 = v10;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v13 = (void *)Strong;
      sub_100529DC4(v11, a3);
    }
  }
  else
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v19[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v20 = sub_10009B0E4(0xD000000000000016, 0x80000001005F8BA0, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v20 = (uint64_t)a1;
      swift_unknownObjectRetain();
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v17 = String.init<A>(describing:)();
      uint64_t v20 = sub_10009B0E4(v17, v18, v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s Could not get FPItem from actionable duplicate node %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
}

void *sub_100491578(unint64_t a1, void *a2, void *a3)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = v3 & 0xC000000000000001;
    uint64_t v6 = 4;
    double v7 = &selRef_cellForItemAtIndexPath_;
    unint64_t v20 = v3;
    while (1)
    {
      id v8 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v3 + 8 * v6);
      uint64_t v9 = v8;
      uint64_t v10 = v6 - 3;
      if (__OFADD__(v6 - 4, 1)) {
        break;
      }
      if ([v8 v7[465]])
      {
        uint64_t v11 = v4;
        sub_10009E6C4(0, (unint64_t *)&qword_100706710);
        id v12 = [v9 itemID];
        id v13 = [a2 itemID];
        char v14 = static NSObject.== infix(_:_:)();

        if ((v14 & 1) != 0
          || (id v15 = [v9 itemID],
              id v16 = [a3 itemID],
              char v17 = static NSObject.== infix(_:_:)(),
              v15,
              v16,
              (v17 & 1) != 0))
        {
          a2;
        }
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v4 = v11;
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        unint64_t v3 = v20;
        double v7 = &selRef_cellForItemAtIndexPath_;
      }
      else
      {
      }
      ++v6;
      if (v10 == v4) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004917D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 32) = 0;
  *(unsigned char *)(a4 + 40) = 0;
  *(void *)(a4 + 48) = 0;
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 80) = _swiftEmptyArrayStorage;
  *(_OWORD *)(a4 + 88) = 0u;
  *(_OWORD *)(a4 + 104) = 0u;
  *(_OWORD *)(a4 + 120) = 0u;
  *(unsigned char *)(a4 + 136) = 1;
  *(void *)(a4 + 144) = 0;
  *(void *)(a4 + 152) = 0;
  *(void *)(a4 + 64) = a3;
  swift_unknownObjectWeakAssign();
  *(void *)(a4 + 24) = &off_1006B7B00;
  swift_unknownObjectWeakAssign();
  id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
  swift_unknownObjectRetain();
  id v7 = [v6 initWithTarget:a4 action:"didTapOverlay"];
  id v8 = [objc_allocWithZone((Class)type metadata accessor for DOCInlineRenameOverlayView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();

  [v8 addGestureRecognizer:v7];
  uint64_t v10 = *(void **)(a4 + 32);
  *(void *)(a4 + 32) = v8;

  sub_100422CDC();
  if (qword_1007051C8 != -1) {
    swift_once();
  }
  id v11 = [self mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
  swift_release();

  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)&v13, (uint64_t *)&unk_100705D60);
  return a4;
}

void sub_100491A24(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) == 1)
  {
    (*(void (**)(char *, unint64_t, uint64_t, double))(v6 + 16))(v4, a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
      id v10 = [self defaultManager];
      swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      FPItemManager.doc_fetchItem(for:completionHandler:)();

      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      swift_release();
    }
  }
}

uint64_t sub_100491C70()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100491CA8()
{
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100491D00(void *a1, uint64_t a2)
{
  sub_10048EBB0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

void sub_100491D10()
{
}

void sub_100491D1C()
{
  sub_10048F52C(v0[2], v0[3], v0[4]);
}

uint64_t sub_100491D28()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100491D70()
{
  sub_10048F3E4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

id sub_100491D80(id result, void *a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10039E1B8((uint64_t)result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_100491D98()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100491DD8(uint64_t a1)
{
  sub_10048F714(a1, *(void (**)(void))(v1 + 16));
}

void sub_100491DE8(unint64_t a1)
{
  sub_10048F9F0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100491DF4(void *a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_getObjectType();

  sub_1004912B4(a1, v4, v3);
}

uint64_t sub_100491E48(uint64_t a1)
{
  return sub_100490064(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100491E54()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100491E9C()
{
  sub_100490364(*(void **)(v0 + 16), *(void (**)(void *))(v0 + 24));
}

void sub_100491EA8(void *a1)
{
}

uint64_t sub_100491EB0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100491EF0()
{
  return sub_1004907F8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100491EF8()
{
  return sub_100490BE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

id DOCItemCollectionView.configuration.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionView_configuration);
}

uint64_t sub_100491F60()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100491F98()
{
  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  return [super layoutSubviews];
}

uint64_t sub_100491FD8()
{
  return _swift_deallocObject(v0, 32, 7);
}

Swift::Void __swiftcall DOCItemCollectionView.safeAreaInsetsDidChange()()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  [super safeAreaInsetsDidChange];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v2 = (void *)Strong;
    sub_100007154();
  }
}

Swift::Bool __swiftcall DOCItemCollectionView._hasContentForBarInteractions()()
{
  if ([v0 enclosedInUIPDocumentLanding])
  {
    unsigned __int8 v1 = v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] ^ 1;
  }
  else
  {
    v3.receiver = v0;
    v3.super_class = (Class)type metadata accessor for DOCItemCollectionView();
    unsigned __int8 v1 = [super _hasContentForBarInteractions];
  }
  return v1 & 1;
}

uint64_t DOCItemCollectionView.indexPathForItem(at:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v14 = (char *)&v46 - v13;
  uint64_t v15 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v46 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v46 - v22;
  __chkstk_darwin(v24);
  id v26 = (char *)&v46 - v25;
  if (DOCDeviceIsPad())
  {
    uint64_t v48 = v20;
    uint64_t v49 = a1;
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v27(v26, 1, 1, v8);
    id v28 = (objc_class *)type metadata accessor for DOCItemCollectionView();
    v50.receiver = v4;
    v50.super_class = v28;
    id v29 = [super indexPathForItemAtPoint:a2, a3];
    if (v29)
    {
      uint64_t v30 = v29;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = v11;
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v32(v23, v31, v8);
      v27(v23, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v23, 1, v8) != 1)
      {
        sub_10011631C((uint64_t)v26);
        id v46 = v32;
        v32(v14, v23, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v26, v14, v8);
        id v47 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v27;
        v27(v26, 0, 1, v8);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v34 = [v4 cellForItemAtIndexPath:isa];

        if (v34)
        {
          type metadata accessor for DOCItemCollectionCell();
          uint64_t v35 = swift_dynamicCastClass();
          if (v35)
          {
            objc_super v36 = (void *)v35;
            id v37 = [v4 convertPoint:v35 toCoordinateSpace:a2];
            LOBYTE(v36) = (*(uint64_t (**)(id))((swift_isaMask & *v36) + 0x2F0))(v37);

            sub_10011631C((uint64_t)v26);
            id v38 = v47;
            if (v36)
            {
              uint64_t v39 = (uint64_t)v48;
              v46(v48, v14, v8);
              uint64_t v40 = 0;
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
              uint64_t v40 = 1;
              uint64_t v39 = (uint64_t)v48;
            }
            v38(v39, v40, 1, v8);
            sub_1001AA3C4(v39, (uint64_t)v26);
            a1 = v49;
            return sub_1001AA3C4((uint64_t)v26, a1);
          }
        }
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        a1 = v49;
        return sub_1001AA3C4((uint64_t)v26, a1);
      }
    }
    else
    {
      v27(v23, 1, 1, v8);
    }
    sub_10011631C((uint64_t)v23);
    a1 = v49;
    return sub_1001AA3C4((uint64_t)v26, a1);
  }
  uint64_t v41 = (objc_class *)type metadata accessor for DOCItemCollectionView();
  v51.receiver = v4;
  v51.super_class = v41;
  id v42 = [super indexPathForItemAtPoint:a2, a3];
  if (v42)
  {
    uint64_t v43 = v42;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, v44, 1, v8);
  id v26 = v17;
  return sub_1001AA3C4((uint64_t)v26, a1);
}

id DOCItemCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = [objc_allocWithZone(v5) initWithFrame:a1 collectionViewLayout:a2];

  return v7;
}

void DOCItemCollectionView.init(frame:collectionViewLayout:)()
{
}

id DOCItemCollectionView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionView();
  return [super dealloc];
}

uint64_t sub_100492874()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1004928A8()
{
  return swift_retain();
}

Swift::Bool __swiftcall DOCItemCollectionView.gestureRecognizerShouldBegin(_:)(UIGestureRecognizer a1)
{
  sub_100365984();
  if (static NSObject.== infix(_:_:)())
  {
    objc_super v3 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v5 = *((void *)v3 + 1);
      [(objc_class *)a1.super.isa locationInView:v1];
      double v7 = v6;
      double v9 = v8;
      uint64_t ObjectType = swift_getObjectType();
      if ((*(uint64_t (**)(char *, uint64_t, uint64_t, double, double))(v5 + 16))(v1, ObjectType, v5, v7, v9))
      {
        char v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 24))(v1, ObjectType, v5);
        swift_unknownObjectRelease();
        LOBYTE(Strong) = v11 & 1;
      }
      else
      {
        swift_unknownObjectRelease();
        LOBYTE(Strong) = 0;
      }
    }
  }
  else
  {
    v13.receiver = v1;
    v13.super_class = (Class)type metadata accessor for DOCItemCollectionView();
    LOBYTE(Strong) = [a1.super.isa gestureRecognizerShouldBegin:];
  }
  return Strong;
}

void sub_100492B00()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_displayDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView__dragInteraction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_focusableCollectionViewState;
  type metadata accessor for DOCFocusableCollectionViewState();
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v2 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v4);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(void *)&v0[v1] = v2;
  *(void *)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_gestureDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = OBJC_IVAR____TtC5Files21DOCItemCollectionView_backgroundTapGestureRecognizer;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UITapGestureRecognizer) init];
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5Files21DOCItemCollectionView_containerIsShowingNoContentUI] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

_UNKNOWN **static DOCDisplayMode.allCases.getter()
{
  return &off_100689D20;
}

unint64_t DOCDisplayMode.init(rawValue:)(unint64_t result)
{
  if (result > 2) {
    return 0;
  }
  return result;
}

uint64_t sub_100492CD4(uint64_t a1)
{
  if (!a1 || a1 == 2 || a1 == 1)
  {
    NSString v1 = String._bridgeToObjectiveC()();
    id v2 = [self systemImageNamed:v1];

    return (uint64_t)v2;
  }
  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100492DC4(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      char v11 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v11)
      {
LABEL_13:
        __break(1u);
        goto LABEL_14;
      }
      id v2 = v11;
      unint64_t v15 = 0x80000001005EAD20;
      uint64_t v4 = 0x736E6F6349;
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x617A696C61636F4CLL;
      unint64_t v7 = 0xEB00000000656C62;
      v8.super.Class isa = v2;
      uint64_t v9 = 0;
      unint64_t v10 = 0xE000000000000000;
LABEL_10:
      unint64_t v3 = 0xD000000000000026;
      goto LABEL_11;
    case 2:
      NSString v1 = (objc_class *)(id)_DocumentManagerBundle();
      if (v1)
      {
        id v2 = v1;
        unint64_t v3 = 0xD000000000000028;
        unint64_t v15 = 0x80000001005EAD70;
        uint64_t v4 = 0x736E6D756C6F43;
        unint64_t v5 = 0xE700000000000000;
        uint64_t v6 = 0x617A696C61636F4CLL;
        unint64_t v7 = 0xEB00000000656C62;
        v8.super.Class isa = v2;
        uint64_t v9 = 0;
        unint64_t v10 = 0xE000000000000000;
LABEL_11:
        uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, *(Swift::String *)&v6, v8, *(Swift::String *)&v9, *(Swift::String *)&v3)._countAndFlagsBits;

        return countAndFlagsBits;
      }
      __break(1u);
      goto LABEL_13;
    case 1:
      uint64_t v12 = (objc_class *)(id)_DocumentManagerBundle();
      if (!v12)
      {
LABEL_14:
        __break(1u);
        break;
      }
      id v2 = v12;
      unint64_t v15 = 0x80000001005EADA0;
      uint64_t v4 = 1953720652;
      unint64_t v5 = 0xE400000000000000;
      uint64_t v6 = 0x617A696C61636F4CLL;
      unint64_t v7 = 0xEB00000000656C62;
      v8.super.Class isa = v2;
      uint64_t v9 = 1953720652;
      unint64_t v10 = 0xE400000000000000;
      goto LABEL_10;
  }
  uint64_t result = _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  return result;
}

uint64_t DOCDisplayMode.debugDescription.getter(uint64_t a1)
{
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = sub_100492DC4(a1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x6C70736944434F44;
}

unint64_t sub_100493028()
{
  unint64_t result = qword_100717780;
  if (!qword_100717780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717780);
  }
  return result;
}

unint64_t sub_100493080()
{
  unint64_t result = qword_100717788;
  if (!qword_100717788)
  {
    sub_100074618(&qword_100717790);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717788);
  }
  return result;
}

void sub_1004930DC(void *a1@<X8>)
{
  *a1 = &off_10068B248;
}

uint64_t sub_1004930EC()
{
  uint64_t v1 = *v0;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = sub_100492DC4(v1);
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x6C70736944434F44;
}

ValueMetadata *type metadata accessor for DOCDisplayMode()
{
  return &type metadata for DOCDisplayMode;
}

unint64_t sub_100493194(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711E08);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v7 = *(v4 - 3);
    uint64_t v8 = *(v4 - 2);
    uint64_t v10 = *(v4 - 1);
    uint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10017F0CC(v5, v6);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    objc_super v13 = (uint64_t *)(v2[6] + 40 * result);
    *objc_super v13 = v5;
    v13[1] = v6;
    v13[2] = v7;
    v13[3] = v8;
    v13[4] = v10;
    *(void *)(v2[7] + 8 * result) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004932E0(uint64_t a1)
{
  return sub_100493308(a1, &qword_100711CE8, (uint64_t *)&unk_1007178D0);
}

unint64_t sub_1004932F4(uint64_t a1)
{
  return sub_100493308(a1, &qword_100717910, &qword_100717918);
}

unint64_t sub_100493308(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  uint64_t v7 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v7, (uint64_t)v16, a3);
    unint64_t result = sub_10008E070((uint64_t)v16);
    if (v9) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = v5[6] + 40 * result;
    long long v11 = v16[0];
    long long v12 = v16[1];
    *(void *)(v10 + 32) = v17;
    *(_OWORD *)uint64_t v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    *(void *)(v5[7] + 8 * result) = v18;
    uint64_t v13 = v5[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v5[2] = v15;
    v7 += 48;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10049342C(uint64_t a1)
{
  return sub_100495DE0(a1, &qword_10070C580);
}

unint64_t sub_100493438(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711DB0);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_1000F7ECC(v7, v8);
    unint64_t result = sub_100042F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    long long v12 = (uint64_t *)(v2[7] + 16 * result);
    *long long v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493560(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100717848);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    unint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1000F7ECC(v5, v6);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10017BD94(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    long long v12 = (void *)(v2[7] + 16 * result);
    *long long v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493688(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100717840);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1000F7ECC(v5, v6);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10017BD94(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004937A8(uint64_t a1)
{
  return sub_100493B9C(a1, &qword_100711DB8, (void (*)(uint64_t, uint64_t))sub_1000F7ECC, sub_10017BD94);
}

unint64_t sub_1004937DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    Swift::String v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711DA8);
  Swift::String v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 80);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 6);
    uint64_t v6 = *((void *)v4 - 5);
    char v7 = *((unsigned char *)v4 - 32);
    uint64_t v8 = *((void *)v4 - 3);
    uint64_t v9 = *((void *)v4 - 2);
    uint64_t v10 = *((void *)v4 - 1);
    long long v18 = *v4;
    sub_1002F81FC(v5, v6, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_10017BDC0(v5, v6, v7);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = v2[6] + 24 * result;
    *(void *)uint64_t v13 = v5;
    *(void *)(v13 + 8) = v6;
    *(unsigned char *)(v13 + 16) = v7;
    uint64_t v14 = v2[7] + 40 * result;
    *(void *)uint64_t v14 = v8;
    *(void *)(v14 + 8) = v9;
    *(void *)(v14 + 16) = v10;
    *(_OWORD *)(v14 + 24) = v18;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v2[2] = v17;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493958(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100717838);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711DA0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v25 = a1;
  id v26 = v9;
  uint64_t v10 = v6 + 64;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v11, (uint64_t)v5, &qword_100717838);
    uint64_t v13 = *(void *)v5;
    uint64_t v14 = *((void *)v5 + 1);
    char v15 = v5[16];
    unint64_t result = sub_10017BDC0(*(void *)v5, v14, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v7[6] + 24 * result;
    *(void *)uint64_t v19 = v13;
    *(void *)(v19 + 8) = v14;
    *(unsigned char *)(v19 + 16) = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for Date();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v26, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v24;
    v11 += v12;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493B68(uint64_t a1)
{
  return sub_100493B9C(a1, &qword_100711D88, (void (*)(uint64_t, uint64_t))sub_1002F81E8, (uint64_t (*)(uint64_t, uint64_t))sub_10017BFA8);
}

unint64_t sub_100493B9C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v6 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v6 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = *(void *)(a1 + 16);
  if (!v7)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  swift_retain();
  uint64_t v8 = (_OWORD *)(a1 + 72);
  while (1)
  {
    uint64_t v9 = *((void *)v8 - 5);
    uint64_t v10 = *((void *)v8 - 4);
    uint64_t v11 = *((void *)v8 - 3);
    uint64_t v12 = *((void *)v8 - 2);
    uint64_t v13 = *((void *)v8 - 1);
    long long v22 = *v8;
    a3(v9, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = a4(v9, v10);
    if (v15) {
      break;
    }
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v16 = (void *)(v6[6] + 16 * result);
    *BOOL v16 = v9;
    v16[1] = v10;
    uint64_t v17 = v6[7] + 40 * result;
    *(void *)uint64_t v17 = v11;
    *(void *)(v17 + 8) = v12;
    *(void *)(v17 + 16) = v13;
    *(_OWORD *)(v17 + 24) = v22;
    uint64_t v18 = v6[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    _OWORD v6[2] = v20;
    uint64_t v8 = (_OWORD *)((char *)v8 + 56);
    if (!--v7)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493D14(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711D80);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    unint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    sub_1002F81E8(v5, v6);
    swift_unknownObjectRetain();
    unint64_t result = sub_10017BFA8(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493E34(uint64_t a1)
{
  return sub_10049576C(a1, &qword_100711CB8, (uint64_t (*)(id))sub_1000A54AC);
}

unint64_t sub_100493E54(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_1007177F8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1000A54AC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100493F60(uint64_t a1)
{
  return sub_1000A5174(a1, &qword_1007177E8, &qword_1007177F0, sub_1000A54AC);
}

unint64_t sub_100493F88(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100717970);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100711DD0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, (uint64_t *)&unk_100717970);
    unint64_t result = sub_10017BB10((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for URL();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10049417C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  sub_1000CBE70(&qword_100711E00);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = *(_OWORD *)(a1 + 144);
  long long v5 = *(_OWORD *)(a1 + 176);
  long long v44 = *(_OWORD *)(a1 + 160);
  long long v45 = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v40 = *(_OWORD *)(a1 + 96);
  long long v41 = v7;
  long long v8 = *(_OWORD *)(a1 + 144);
  long long v9 = *(_OWORD *)(a1 + 112);
  long long v42 = *(_OWORD *)(a1 + 128);
  long long v43 = v8;
  long long v10 = *(_OWORD *)(a1 + 48);
  long long v36 = *(_OWORD *)(a1 + 32);
  long long v37 = v10;
  long long v11 = *(_OWORD *)(a1 + 80);
  long long v38 = *(_OWORD *)(a1 + 64);
  long long v39 = v11;
  long long v53 = v42;
  long long v54 = v4;
  long long v12 = *(_OWORD *)(a1 + 176);
  long long v55 = v44;
  long long v56 = v12;
  long long v49 = v38;
  long long v50 = v6;
  long long v51 = v40;
  long long v52 = v9;
  uint64_t v46 = *(void *)(a1 + 192);
  long long v47 = v36;
  long long v48 = v10;
  sub_10017FF50((uint64_t)&v36);
  unint64_t result = sub_10017C130((uint64_t)&v47);
  if (v14)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v15 = 200;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v16 = (_OWORD *)(v2[6] + 160 * result);
    long long v17 = v54;
    v16[6] = v53;
    v16[7] = v17;
    long long v18 = v56;
    v16[8] = v55;
    v16[9] = v18;
    long long v19 = v50;
    _OWORD v16[2] = v49;
    v16[3] = v19;
    long long v20 = v52;
    v16[4] = v51;
    v16[5] = v20;
    long long v21 = v48;
    *unint64_t v16 = v47;
    v16[1] = v21;
    *(void *)(v2[7] + 8 * result) = v46;
    uint64_t v22 = v2[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      break;
    }
    v2[2] = v24;
    if (!--v3) {
      goto LABEL_9;
    }
    long long v25 = *(_OWORD *)(a1 + v15 + 112);
    long long v26 = *(_OWORD *)(a1 + v15 + 144);
    long long v44 = *(_OWORD *)(a1 + v15 + 128);
    long long v45 = v26;
    long long v27 = *(_OWORD *)(a1 + v15 + 48);
    long long v28 = *(_OWORD *)(a1 + v15 + 80);
    long long v40 = *(_OWORD *)(a1 + v15 + 64);
    long long v41 = v28;
    long long v29 = *(_OWORD *)(a1 + v15 + 112);
    long long v30 = *(_OWORD *)(a1 + v15 + 80);
    long long v42 = *(_OWORD *)(a1 + v15 + 96);
    long long v43 = v29;
    long long v31 = *(_OWORD *)(a1 + v15 + 16);
    long long v36 = *(_OWORD *)(a1 + v15);
    long long v37 = v31;
    long long v32 = *(_OWORD *)(a1 + v15 + 48);
    long long v38 = *(_OWORD *)(a1 + v15 + 32);
    long long v39 = v32;
    long long v53 = v42;
    long long v54 = v25;
    long long v33 = *(_OWORD *)(a1 + v15 + 144);
    long long v55 = v44;
    long long v56 = v33;
    long long v49 = v38;
    long long v50 = v27;
    long long v51 = v40;
    long long v52 = v30;
    uint64_t v34 = v15 + 168;
    uint64_t v46 = *(void *)(a1 + v15 + 160);
    long long v47 = v36;
    long long v48 = v31;
    sub_10017FF50((uint64_t)&v36);
    unint64_t result = sub_10017C130((uint64_t)&v47);
    uint64_t v15 = v34;
    if (v35) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100494384(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100717A00);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v6, (uint64_t)v15, &qword_100717A08);
    unint64_t result = sub_10008E070((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1000A54B0(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004944C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711D00);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100042F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004945EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711E20);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    unint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    sub_100168CBC(v7, v8);
    unint64_t result = sub_100042F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v12 = v7;
    v12[1] = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494714(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100717880);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000A54AC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494820(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100719930);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_10017C1F0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10049492C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100711E80);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = (void *)*((void *)v4 - 1);
    char v8 = *v4;
    id v9 = *((id *)v4 - 4);
    id v10 = v7;
    unint64_t result = sub_10017C240((uint64_t)v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v9;
    uint64_t v13 = v2[7] + 32 * result;
    *(void *)uint64_t v13 = v5;
    *(void *)(v13 + 8) = v6;
    *(void *)(v13 + 16) = v10;
    *(unsigned char *)(v13 + 24) = v8;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494A5C(uint64_t a1)
{
  return sub_100495F04(a1, (uint64_t *)&unk_100711DF0);
}

unint64_t sub_100494A68(uint64_t a1)
{
  return sub_10049603C(a1, (uint64_t *)&unk_100711DC0, (uint64_t (*)(id))sub_10017C344);
}

unint64_t sub_100494A88(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100717960);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100042F50(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494BA4(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007177D8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100711CC0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, (uint64_t *)&unk_1007177D8);
    unint64_t result = sub_10017BCC0((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    long long v19 = (_OWORD *)(v7[7] + 32 * v16);
    long long v20 = *((_OWORD *)v9 + 1);
    *long long v19 = *(_OWORD *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494DA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100717860);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_1000A54AC(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100494EAC(uint64_t a1)
{
  return sub_10049603C(a1, (uint64_t *)&unk_100717950, (uint64_t (*)(id))sub_10017C1F0);
}

unint64_t sub_100494ECC(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100717940);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711E58);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, (uint64_t *)&unk_100717940);
    uint64_t v14 = *v5;
    unint64_t result = sub_10017C424(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v7[6] + 8 * result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for URL();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004950C4(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100717930);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711E50);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, (uint64_t *)&unk_100717930);
    unint64_t result = sub_10017BB10((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for URL();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004952B8(uint64_t a1)
{
  return sub_100493308(a1, &qword_100717920, &qword_100717928);
}

unint64_t sub_1004952CC(uint64_t a1)
{
  return sub_100493308(a1, &qword_100711D68, (uint64_t *)&unk_100717810);
}

unint64_t sub_1004952E0(uint64_t a1)
{
  return sub_10049603C(a1, (uint64_t *)&unk_100711D40, (uint64_t (*)(id))sub_10017C474);
}

unint64_t sub_100495300(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_1007178F0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100042F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495414(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_1007178E8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100042F50(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495528(uint64_t a1)
{
  return sub_100495AA4(a1, &qword_100717900, &qword_100717908, (uint64_t (*)(void))sub_10017C4C4);
}

unint64_t sub_100495550(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_100708D70);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_100711D08);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, (uint64_t *)&unk_100708D70);
    unint64_t result = sub_10017BB10((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for URL();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = (void *)(v7[7] + 16 * v16);
    uint64_t v20 = *((void *)v9 + 1);
    *uint64_t v19 = *(void *)v9;
    v19[1] = v20;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10049574C(uint64_t a1)
{
  return sub_10049576C(a1, (uint64_t *)&unk_100711E40, (uint64_t (*)(id))sub_1000A54AC);
}

unint64_t sub_10049576C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495884(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100714530);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (unsigned __int8 *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(&qword_1007178E0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  id v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v12, (uint64_t)v5, &qword_100714530);
    unsigned __int8 v14 = *v5;
    unint64_t result = sub_10017C56C(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    uint64_t v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495A7C(uint64_t a1)
{
  return sub_100495AA4(a1, &qword_100714F98, (uint64_t *)&unk_1007178C0, (uint64_t (*)(void))sub_10017C634);
}

unint64_t sub_100495AA4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  long long v29 = a4;
  uint64_t v7 = sub_1000CBE70(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v12 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a3);
  uint64_t v11 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  unsigned __int8 v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = type metadata accessor for DisplayRepresentation();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495CA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100711C90);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1000CBC00(v6, (uint64_t)&v13, &qword_1007177C8);
    uint64_t v7 = v13;
    unint64_t result = sub_10017C6D4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = sub_1001146DC(&v14, v3[7] + 40 * result);
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495DD4(uint64_t a1)
{
  return sub_100495DE0(a1, &qword_1007178B0);
}

unint64_t sub_100495DE0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100042F50(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100495EF8(uint64_t a1)
{
  return sub_100495F04(a1, &qword_100711E10);
}

unint64_t sub_100495F04(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_100042F50(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10049601C(uint64_t a1)
{
  return sub_10049603C(a1, &qword_1007178B8, (uint64_t (*)(id))sub_10017C728);
}

unint64_t sub_10049603C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70(a2);
  uint64_t v5 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100496154(uint64_t a1)
{
  return sub_1000A5174(a1, &qword_1007179B0, &qword_1007179B8, sub_1000A54AC);
}

unint64_t sub_10049617C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100711E30);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10017C424((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    id v10 = (void *)(v2[7] + 16 * result);
    *id v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100496294(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_1000CBE70((uint64_t *)&unk_100717800);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_errorRetain();
    unint64_t result = sub_10017C474((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(void *a1, unsigned int a2, int a3, int a4)
{
  int v111 = a4;
  int v101 = a3;
  unsigned int v105 = a2;
  uint64_t v104 = type metadata accessor for DOCUserActivityIdentifier();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  long long v102 = &v100[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v116 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  int v118 = &v100[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v10 = &v100[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = static DOCLog.UI.getter();
  LODWORD(v112) = static os_log_type_t.debug.getter();
  uint64_t v110 = sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A0500;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_100073F48();
  *(void *)(v11 + 64) = v12;
  unint64_t v108 = (unint64_t)"ing %@ with type %@";
  *(void *)(v11 + 32) = 0xD00000000000004FLL;
  *(void *)(v11 + 40) = 0x80000001005F8D70;
  uint64_t v107 = sub_10009E6C4(0, (unint64_t *)&unk_100707F00);
  *(void *)(v11 + 96) = v107;
  uint64_t v106 = sub_1000C5A24((unint64_t *)&unk_100717798, (unint64_t *)&unk_100707F00);
  *(void *)(v11 + 104) = v106;
  *(void *)(v11 + 72) = v4;
  *(void *)&long long v114 = v4;
  id v13 = [a1 displayName];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(v11 + 136) = &type metadata for String;
  *(void *)(v11 + 144) = v12;
  *(void *)(v11 + 112) = v14;
  *(void *)(v11 + 120) = v16;
  id v17 = [a1 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v18 = UTType.identifier.getter();
  uint64_t v20 = v19;
  char v21 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v22 = v117;
  v21((uint64_t)v10, v117);
  *(void *)(v11 + 176) = &type metadata for String;
  *(void *)(v11 + 184) = v12;
  unint64_t v109 = v12;
  *(void *)(v11 + 152) = v18;
  *(void *)(v11 + 160) = v20;
  uint64_t v23 = v118;
  uint64_t v24 = (void *)v113;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v25 = [a1 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  char v26 = UTType.isFolderUTI.getter();
  uint64_t v113 = (uint64_t)v10;
  uint64_t v112 = v21;
  v21((uint64_t)v10, v22);
  if (v26)
  {
    uint64_t v27 = v116;
    uint64_t v28 = v115;
    long long v29 = (void *)v114;
    if (v105 == 2)
    {
      long long v30 = self;
      id aBlock = 0;
      long long v31 = a1;
      id v32 = a1;
      id v33 = [v30 providerDomainForItem:v32 cachePolicy:3 error:&aBlock];
      uint64_t v23 = v118;
      if (v33)
      {
        uint64_t v34 = v33;
        id v35 = aBlock;

        unsigned int v105 = [v34 supportsPickingFolders];
      }
      else
      {
        id v38 = aBlock;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v23 = v118;
        swift_errorRelease();
        unsigned int v105 = 0;
      }
    }
    else
    {
      LOBYTE(v105) = v105 & 1;
      unsigned int v105 = v105;
      uint64_t v23 = v118;
      long long v31 = a1;
    }
    [v29 setPreferredPresentationStyle:2];
    uint64_t v39 = enum case for DOCFPItemDragPasteboardType.location(_:);
    uint64_t v40 = type metadata accessor for DOCFPItemDragPasteboardType();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v23, v39, v40);
  }
  else
  {
    long long v29 = (void *)v114;
    [(id)v114 setPreferredPresentationStyle:2];
    uint64_t v36 = enum case for DOCFPItemDragPasteboardType.file(_:);
    uint64_t v37 = type metadata accessor for DOCFPItemDragPasteboardType();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v23, v36, v37);
    unsigned int v105 = 0;
    uint64_t v27 = v116;
    uint64_t v28 = v115;
    long long v31 = a1;
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v28 + 104))(v23, enum case for DOCDragPasteboardType.fpItem(_:), v27);
  DOCDragPasteboardType.typeIdentifier.getter();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v31;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_10049BA30;
  *(void *)(v43 + 24) = v42;
  uint64_t v123 = sub_10049BA38;
  uint64_t v124 = v43;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v120 = 1107296256;
  uint64_t v121 = sub_100498688;
  uint64_t v122 = &unk_1006AF588;
  long long v44 = _Block_copy(&aBlock);
  id v45 = v31;
  swift_release();
  [v29 registerDataRepresentationForTypeIdentifier:v41 visibility:1 loadHandler:v44];
  _Block_release(v44);

  NSString v46 = [v45 displayName];
  if (!v46)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v29 setSuggestedName:v46];

  if ((v26 & 1) == 0) {
    goto LABEL_16;
  }
  long long v47 = self;
  id aBlock = 0;
  id v48 = [v47 archivedDataWithRootObject:v45 requiringSecureCoding:1 error:&aBlock];
  id v49 = aBlock;
  if (v48)
  {
    uint64_t v50 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v52 = v51;

    uint64_t v53 = v103;
    long long v54 = v102;
    uint64_t v55 = v104;
    (*(void (**)(unsigned char *, void, uint64_t))(v103 + 104))(v102, enum case for DOCUserActivityIdentifier.folderDrag(_:), v104);
    DOCUserActivityIdentifier.rawValue.getter();
    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v54, v55);
    id v56 = objc_allocWithZone((Class)NSUserActivity);
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v58 = [v56 initWithActivityType:v57];

    sub_1000CBE70(&qword_100707EF0);
    uint64_t inited = swift_initStackObject();
    long long v114 = xmmword_1005A0030;
    *(_OWORD *)(inited + 16) = xmmword_1005A0030;
    *(void *)(inited + 32) = DOCUserActivityFPItemKey.getter();
    *(void *)(inited + 40) = v60;
    sub_10049D5B0(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    Class isa = Set._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v58 setRequiredUserInfoKeys:isa];

    sub_1000CBE70(&qword_10070BD40);
    uint64_t v62 = swift_initStackObject();
    *(_OWORD *)(v62 + 16) = v114;
    id aBlock = (id)DOCUserActivityFPItemKey.getter();
    uint64_t v120 = v63;
    uint64_t v28 = v115;
    AnyHashable.init<A>(_:)();
    *(void *)(v62 + 96) = &type metadata for Data;
    *(void *)(v62 + 72) = v50;
    *(void *)(v62 + 80) = v52;
    sub_100168CBC(v50, v52);
    uint64_t v64 = v62;
    uint64_t v27 = v116;
    sub_100494384(v64);
    Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v58 addUserInfoEntriesFromDictionary:v65];

    [v58 setEligibleForSearch:0];
    [v58 setEligibleForHandoff:0];
    [v58 setEligibleForPrediction:0];
    [v58 setEligibleForPublicIndexing:0];
    [v29 sbui_setRequiredApplicationBundleIdentifier:DOCDocumentsAppBundleIdentifier];
    [v29 registerObject:v58 visibility:0];

    sub_100021020(v50, v52);
  }
  else
  {
    id v66 = v49;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v67 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v68 = swift_allocObject();
    *(_OWORD *)(v68 + 16) = xmmword_10059B760;
    unint64_t v69 = v109;
    *(void *)(v68 + 56) = &type metadata for String;
    *(void *)(v68 + 64) = v69;
    unint64_t v70 = v108 | 0x8000000000000000;
    *(void *)(v68 + 32) = 0xD00000000000004FLL;
    *(void *)(v68 + 40) = v70;
    uint64_t v71 = v106;
    *(void *)(v68 + 96) = v107;
    *(void *)(v68 + 104) = v71;
    *(void *)(v68 + 72) = v29;
    id v72 = v29;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  uint64_t v23 = v118;
  if ((v105 & 1) == 0)
  {
    if ((v101 & 1) == 0)
    {
      double v88 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = xmmword_10059B760;
      unint64_t v90 = v109;
      *(void *)(v89 + 56) = &type metadata for String;
      *(void *)(v89 + 64) = v90;
      unint64_t v91 = v108 | 0x8000000000000000;
      *(void *)(v89 + 32) = 0xD00000000000004FLL;
      *(void *)(v89 + 40) = v91;
      uint64_t v92 = v106;
      *(void *)(v89 + 96) = v107;
      *(void *)(v89 + 104) = v92;
      *(void *)(v89 + 72) = v29;
      id v93 = v29;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v94 = [v45 contentType];
      uint64_t v95 = v113;
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      UTType.identifier.getter();
      v112(v95, v117);
      NSString v83 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v96 = swift_allocObject();
      *(void *)(v96 + 16) = v45;
      uint64_t v97 = swift_allocObject();
      *(void *)(v97 + 16) = sub_10049BA90;
      *(void *)(v97 + 24) = v96;
      uint64_t v123 = sub_10049BAD0;
      uint64_t v124 = v97;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v120 = 1107296256;
      uint64_t v121 = sub_100498950;
      uint64_t v122 = &unk_1006AF678;
      double v86 = _Block_copy(&aBlock);
      id v98 = v45;
      swift_release();
      [v93 registerFileProviderItemForTypeIdentifier:v83 visibility:0 loadHandler:v86];
      goto LABEL_23;
    }
  }
  else
  {
LABEL_16:
    static LaunchUtils.bundleIdentifierOfDefaultApp(for:)();
    if (v73)
    {
      NSString v74 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v74 = 0;
    }
    [v29 sbui_setPreferredApplicationBundleIdentifier:v74];

    if ((v111 & 1) == 0)
    {
      id v75 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      uint64_t v76 = swift_allocObject();
      *(_OWORD *)(v76 + 16) = xmmword_10059B760;
      unint64_t v77 = v109;
      *(void *)(v76 + 56) = &type metadata for String;
      *(void *)(v76 + 64) = v77;
      unint64_t v78 = v108 | 0x8000000000000000;
      *(void *)(v76 + 32) = 0xD00000000000004FLL;
      *(void *)(v76 + 40) = v78;
      uint64_t v79 = v106;
      *(void *)(v76 + 96) = v107;
      *(void *)(v76 + 104) = v79;
      *(void *)(v76 + 72) = v29;
      id v80 = v29;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v81 = [v45 contentType];
      uint64_t v82 = v113;
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      UTType.identifier.getter();
      v112(v82, v117);
      NSString v83 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v84 = swift_allocObject();
      *(void *)(v84 + 16) = v45;
      uint64_t v85 = swift_allocObject();
      *(void *)(v85 + 16) = sub_10049BA60;
      *(void *)(v85 + 24) = v84;
      uint64_t v123 = sub_10049BA68;
      uint64_t v124 = v85;
      id aBlock = _NSConcreteStackBlock;
      uint64_t v120 = 1107296256;
      uint64_t v121 = sub_10049962C;
      uint64_t v122 = &unk_1006AF600;
      double v86 = _Block_copy(&aBlock);
      id v87 = v45;
      swift_release();
      [v80 registerFileRepresentationForTypeIdentifier:v83 fileOptions:1 visibility:0 loadHandler:v86];
LABEL_23:
      _Block_release(v86);

      uint64_t v23 = v118;
    }
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v28 + 8))(v23, v27);
}

void *sub_100497424()
{
  uint64_t v1 = type metadata accessor for DOCDragPasteboardType();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v35 - v6;
  uint64_t v8 = DOCAcceptableDragPasteboardTypes.getter();
  uint64_t v9 = v8;
  uint64_t v10 = _swiftEmptyArrayStorage;
  uint64_t v43 = *(void *)(v8 + 16);
  long long v44 = _swiftEmptyArrayStorage;
  if (v43)
  {
    unint64_t v11 = 0;
    uint64_t v10 = (void *)(v2 + 16);
    unint64_t v41 = v1;
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v2 + 32);
    uint64_t v36 = v0;
    uint64_t v37 = (void (**)(char *, uint64_t))(v2 + 8);
    unint64_t v39 = v8;
    uint64_t v40 = v5;
    id v38 = (void *)(v2 + 16);
    while (v11 < *(void *)(v9 + 16))
    {
      unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v13 = *(void *)(v2 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v7, v9 + v12 + v13 * v11, v1);
      if (DOCDragPasteboardType.isFPItemFileOrLocation.getter())
      {
        (*v37)(v7, v1);
      }
      else
      {
        uint64_t v14 = *v42;
        (*v42)(v5, v7, v1);
        uint64_t v15 = v44;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190EA0(0, v15[2] + 1, 1);
          uint64_t v15 = v44;
        }
        unint64_t v17 = v15[2];
        unint64_t v16 = v15[3];
        if (v17 >= v16 >> 1)
        {
          sub_100190EA0(v16 > 1, v17 + 1, 1);
          uint64_t v15 = v44;
        }
        _OWORD v15[2] = v17 + 1;
        uint64_t v18 = (char *)v15 + v12 + v17 * v13;
        uint64_t v5 = v40;
        uint64_t v1 = v41;
        v14(v18, v40, v41);
        long long v44 = v15;
        uint64_t v10 = v38;
        uint64_t v9 = v39;
      }
      if (v43 == ++v11)
      {
        uint64_t v10 = v44;
        uint64_t v0 = v36;
        goto LABEL_13;
      }
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v20) {
      goto LABEL_39;
    }
    goto LABEL_15;
  }
LABEL_13:
  swift_bridgeObjectRelease();
  id v45 = &_swiftEmptySetSingleton;
  id v19 = [v0 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 >> 62) {
    goto LABEL_38;
  }
  uint64_t v20 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v20)
  {
LABEL_15:
    char v21 = 0;
    unint64_t v22 = v11 & 0xC000000000000001;
    uint64_t v42 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    uint64_t v43 = v11 & 0xFFFFFFFFFFFFFF8;
    uint64_t v40 = (char *)v20;
    unint64_t v41 = v11;
    unint64_t v39 = v11 & 0xC000000000000001;
    while (1)
    {
      if (v22)
      {
        uint64_t v23 = (void (*)(char *, char *, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((unint64_t)v21 >= *(void *)(v43 + 16)) {
          goto LABEL_37;
        }
        uint64_t v23 = v42[(void)v21];
      }
      uint64_t v24 = v23;
      if (__OFADD__(v21++, 1)) {
        goto LABEL_36;
      }
      id v26 = [v23 itemProvider];
      id v27 = [v26 registeredTypeIdentifiers];

      uint64_t v28 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v29 = v28[2];
      if (!v29) {
        break;
      }
      Swift::Int v31 = v28[4];
      Swift::Int v30 = v28[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v10))
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        sub_1000EDD5C((Swift::Int *)&v44, v31, v30);

LABEL_18:
        swift_bridgeObjectRelease();
        if (v21 == (char *)v20) {
          goto LABEL_39;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v29 != 1)
        {
          unint64_t v11 = (unint64_t)(v28 + 7);
          uint64_t v32 = 1;
          while (1)
          {
            uint64_t v33 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              break;
            }
            Swift::Int v31 = *(void *)(v11 - 8);
            Swift::Int v30 = *(void *)v11;
            swift_bridgeObjectRetain();
            if (String.conformsToAnyOf(_:)((Swift::OpaquePointer)v10))
            {
              uint64_t v20 = (uint64_t)v40;
              unint64_t v11 = v41;
              unint64_t v22 = v39;
              goto LABEL_17;
            }
            swift_bridgeObjectRelease();
            ++v32;
            v11 += 16;
            if (v33 == v29) {
              goto LABEL_31;
            }
          }
          __break(1u);
          goto LABEL_35;
        }
LABEL_31:
        swift_bridgeObjectRelease_n();

        uint64_t v20 = (uint64_t)v40;
        unint64_t v11 = v41;
        unint64_t v22 = v39;
        if (v21 == v40) {
          goto LABEL_39;
        }
      }
    }

    goto LABEL_18;
  }
LABEL_39:
  swift_release();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_1004978CC()
{
  id v1 = [self defaultManager];
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 eligibleActionsForDroppingUTIs:isa underItem:v0];

  type metadata accessor for FPAction(0);
  sub_1004A0C6C((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  static Set._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = FPActionReparent;
  LOBYTE(v1) = sub_1005350BC();

  if (v1)
  {
    char v5 = 1;
  }
  else
  {
    id v6 = FPActionCopy;
    char v5 = sub_1005350BC();
  }
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_100497A10(void *a1, void *a2)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v6);
  uint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v9 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0230;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_100073F48();
  *(void *)(v10 + 32) = 0xD000000000000044;
  *(void *)(v10 + 40) = 0x80000001005F8EF0;
  uint64_t v27 = v8;
  uint64_t v11 = *(void *)(v8 + 16);
  *(void *)(v10 + 96) = &type metadata for Int;
  *(void *)(v10 + 104) = &protocol witness table for Int;
  *(void *)(v10 + 72) = v11;
  id v12 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v10 + 136) = &type metadata for Int;
  *(void *)(v10 + 144) = &protocol witness table for Int;
  *(void *)(v10 + 112) = v14;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v15 = [a1 items];
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = v27;
  swift_bridgeObjectRelease();
  if (v11 == v17)
  {
    id v19 = _swiftEmptyArrayStorage;
    if (v11)
    {
      uint64_t v29 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v20 = (void **)(v18 + 40);
      do
      {
        char v21 = *v20;
        v20 += 2;
        id v22 = v21;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v11;
      }
      while (v11);
      id v19 = v29;
    }
    id v23 = [self defaultManager];
    sub_10053982C((unint64_t)v19, v28, 0, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v24 = [a1 items];
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v25, v28, (uint64_t)sub_10049A114, 0);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_100497DF4()
{
  id v1 = [self defaultPermission];
  unint64_t v2 = (unint64_t)[v1 dataOwnerStateForNode:v0];

  if (v2 < 3) {
    return qword_1005AD6D0[v2];
  }
  type metadata accessor for DOCDataOwnerState(0);
  v5[3] = v4;
  v5[0] = v2;
  doc_warnUnrecognizedEnumValueEncountered(_:)();
  sub_10009B1B8((uint64_t)v5);
  return 0;
}

uint64_t sub_100497E98(void *a1, void *a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v36 = a2;
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  uint64_t v37 = a3;
  *(void *)(v11 + 16) = a3;
  *(void *)(v11 + 24) = a4;
  uint64_t v39 = v11;
  uint64_t v40 = a4;
  swift_retain_n();
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v10);
  uint64_t v13 = v12;
  unint64_t v41 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v42 = v7;
  v41(v10, v7);
  uint64_t v14 = (void *)static DOCLog.UI.getter();
  int v38 = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_100073F48();
  *(void *)(v15 + 32) = 0xD000000000000044;
  *(void *)(v15 + 40) = 0x80000001005F8EF0;
  uint64_t v16 = *(void *)(v13 + 16);
  *(void *)(v15 + 96) = &type metadata for Int;
  *(void *)(v15 + 104) = &protocol witness table for Int;
  *(void *)&long long v43 = v16;
  *(void *)(v15 + 72) = v16;
  id v17 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v15 + 136) = &type metadata for Int;
  *(void *)(v15 + 144) = &protocol witness table for Int;
  *(void *)(v15 + 112) = v19;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v20 = [a1 items];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if ((void)v43 == v22)
  {
    id v23 = _swiftEmptyArrayStorage;
    long long v44 = _swiftEmptyArrayStorage;
    uint64_t v24 = *(void *)(v13 + 16);
    if (v24)
    {
      swift_bridgeObjectRetain();
      for (uint64_t i = 0; i != v24; ++i)
      {
        long long v43 = *(_OWORD *)(v13 + 16 * i + 32);
        id v26 = (id)v43;
        id v27 = *((id *)&v43 + 1);
        id v28 = [v27 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v28) = UTType.isFolderUTI.getter();
        v41(v10, v42);
        if (v28)
        {
          uint64_t v29 = v44;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100190FE4(0, v29[2] + 1, 1);
            uint64_t v29 = v44;
          }
          unint64_t v31 = v29[2];
          unint64_t v30 = v29[3];
          if (v31 >= v30 >> 1)
          {
            sub_100190FE4(v30 > 1, v31 + 1, 1);
            uint64_t v29 = v44;
          }
          v29[2] = v31 + 1;
          *(_OWORD *)&v29[2 * v31 + 4] = v43;
        }
        else
        {
        }
      }
      swift_bridgeObjectRelease();
      id v23 = v44;
    }
    v37(v23);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v32 = [a1 items];
    unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v33, v36, (uint64_t)sub_1004A1498, v39);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10049837C(void *a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UTType.item.getter();
  swift_getObjectType();
  unint64_t v6 = (unint64_t)sub_10049C6C0(a1, (uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v6 >> 62) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (v6 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v6 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v12 = [v9 providerDomainID];
      uint64_t v13 = DOCProviderDomainIDIsSharedServerDomainID();

      if ((v13 & 1) == 0)
      {
        ++v8;
        if (v11 != v7) {
          continue;
        }
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain();
  }
  uint64_t v13 = 0;
LABEL_14:
  swift_bridgeObjectRelease_n();
  return v13;
}

uint64_t sub_100498544(void (*a1)(uint64_t, unint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  id v12 = 0;
  id v4 = [self archivedDataWithRootObject:a3 requiringSecureCoding:1 error:&v12];
  id v5 = v12;
  if (v4)
  {
    uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;

    sub_100168CBC(v6, v8);
    a1(v6, v8, 0);
    sub_100021020(v6, v8);
    sub_100021020(v6, v8);
  }
  else
  {
    id v9 = v5;
    uint64_t v10 = _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRetain();
    a1(0, 0xF000000000000000, v10);
    swift_errorRelease();
    swift_errorRelease();
  }
  return 0;
}

id sub_100498688(uint64_t a1, void *a2)
{
  return sub_100499650(a1, a2, (uint64_t)&unk_1006AFD18, (uint64_t)sub_1004A1B0C);
}

void sub_1004986AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, Class))(a4 + 16))(a4, isa);
}

uint64_t sub_100498744(void (*a1)(void *, void), uint64_t a2, void *a3)
{
  uint64_t v21 = a2;
  uint64_t v22 = a1;
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void *)static DOCLog.UI.getter();
  v20[3] = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0230;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v10 = sub_100073F48();
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = 0xD00000000000004FLL;
  *(void *)(v9 + 40) = 0x80000001005F8D70;
  id v11 = [a3 displayName];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v14;
  id v15 = [a3 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = UTType.identifier.getter();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = v10;
  *(void *)(v9 + 112) = v16;
  *(void *)(v9 + 120) = v18;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  v22(a3, 0);
  return 0;
}

id sub_100498950(uint64_t a1, void *a2)
{
  return sub_100499650(a1, a2, (uint64_t)&unk_1006AFC28, (uint64_t)sub_100241D40);
}

uint64_t sub_100498974(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void *)static DOCLog.UI.getter();
  v26[3] = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A0230;
  *(void *)(v9 + 56) = &type metadata for String;
  unint64_t v10 = sub_100073F48();
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 32) = 0xD00000000000004FLL;
  *(void *)(v9 + 40) = 0x80000001005F8D70;
  id v11 = [a3 displayName];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  *(void *)(v9 + 96) = &type metadata for String;
  *(void *)(v9 + 104) = v10;
  *(void *)(v9 + 72) = v12;
  *(void *)(v9 + 80) = v14;
  id v15 = [a3 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = UTType.identifier.getter();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(void *)(v9 + 136) = &type metadata for String;
  *(void *)(v9 + 144) = v10;
  *(void *)(v9 + 112) = v16;
  *(void *)(v9 + 120) = v18;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v19 = [self defaultManager];
  id v20 = (void *)swift_allocObject();
  uint64_t v21 = v27;
  uint64_t v22 = v28;
  v20[2] = a3;
  v20[3] = v21;
  _DWORD v20[4] = v22;
  aBlock[4] = sub_1004A1A08;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  aBlock[3] = &unk_1006AFC90;
  id v23 = _Block_copy(aBlock);
  id v24 = a3;
  swift_retain();
  swift_release();
  [v19 fetchURLForItem:v24 completionHandler:v23];
  _Block_release(v23);

  return 0;
}

uint64_t sub_100498C54(uint64_t a1, void (*a2)(void, void, void), void *a3, void (*a4)(char *, void, void), uint64_t a5)
{
  uint64_t v79 = a5;
  id v80 = a4;
  id v66 = a3;
  unint64_t v69 = a2;
  uint64_t v6 = type metadata accessor for UTType();
  id v67 = *(void (***)(char *, uint64_t))(v6 - 8);
  uint64_t v68 = v6;
  __chkstk_darwin(v6);
  id v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v77 = v9;
  __chkstk_darwin(v9);
  NSString v74 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for DispatchQoS();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v72 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DispatchTime();
  uint64_t v71 = *(void *)(v78 - 8);
  uint64_t v12 = __chkstk_darwin(v78);
  uint64_t v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v70 = (char *)&v65 - v15;
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  id v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v65 - v20;
  uint64_t v22 = type metadata accessor for URL();
  uint64_t v23 = *(void *)(*(void *)(v22 - 8) + 64);
  uint64_t v24 = __chkstk_darwin(v22);
  __chkstk_darwin(v24);
  id v26 = (char *)&v65 - v25;
  uint64_t v28 = v27;
  sub_1000CBC00(a1, (uint64_t)v21, &qword_1007076B0);
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v21, 1, v22);
  uint64_t v81 = v28;
  if (v29 == 1)
  {
    uint64_t v78 = v22;
    sub_1000CBBA4((uint64_t)v21, &qword_1007076B0);
    unint64_t v30 = (void *)static DOCLog.UI.getter();
    LODWORD(v77) = static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1005A0500;
    *(void *)(v31 + 56) = &type metadata for String;
    unint64_t v32 = sub_100073F48();
    *(void *)(v31 + 64) = v32;
    *(void *)(v31 + 32) = 0xD00000000000004FLL;
    *(void *)(v31 + 40) = 0x80000001005F8D70;
    id v33 = v66;
    id v34 = [v66 displayName];
    uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v37 = v36;

    *(void *)(v31 + 96) = &type metadata for String;
    *(void *)(v31 + 104) = v32;
    *(void *)(v31 + 72) = v35;
    *(void *)(v31 + 80) = v37;
    id v38 = [v33 contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v39 = UTType.identifier.getter();
    uint64_t v41 = v40;
    v67[1](v8, v68);
    *(void *)(v31 + 136) = &type metadata for String;
    *(void *)(v31 + 144) = v32;
    *(void *)(v31 + 112) = v39;
    *(void *)(v31 + 120) = v41;
    uint64_t v42 = v69;
    if (v69)
    {
      uint64_t v43 = _convertErrorToNSError(_:)();
      uint64_t v84 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      uint64_t v85 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v43;
      sub_1001146DC(&aBlock, v31 + 152);
    }
    else
    {
      *(void *)(v31 + 176) = &type metadata for String;
      *(void *)(v31 + 184) = v32;
      *(void *)(v31 + 152) = 0xD000000000000013;
      *(void *)(v31 + 160) = 0x80000001005DD4C0;
    }
    uint64_t v64 = v80;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v19, 1, 1, v78);
    v64(v19, 0, v42);
    return sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
  }
  else
  {
    long long v44 = *(void (**)(void, void, void))(v28 + 32);
    uint64_t v68 = v28 + 32;
    unint64_t v69 = v44;
    v44(v26, v21, v22);
    id v45 = (void *)static DOCLog.UI.getter();
    LODWORD(v66) = static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_10059B760;
    *(void *)(v46 + 56) = &type metadata for String;
    *(void *)(v46 + 64) = sub_100073F48();
    *(void *)(v46 + 32) = 0xD00000000000004FLL;
    *(void *)(v46 + 40) = 0x80000001005F8D70;
    URL._bridgeToObjectiveC()((NSURL *)0x80000001005F8D70);
    uint64_t v48 = v47;
    id v67 = (void (**)(char *, uint64_t))((char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v49 = v22;
    *(void *)(v46 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v46 + 104) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v46 + 72) = v48;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    LODWORD(v66) = URL.startAccessingSecurityScopedResource()();
    uint64_t v50 = v81;
    unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
    v51(v19, v26, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v19, 0, 1, v22);
    v80(v19, 1, 0);
    sub_1000CBBA4((uint64_t)v19, &qword_1007076B0);
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v79 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    unint64_t v52 = v70;
    + infix(_:_:)();
    id v80 = *(void (**)(char *, void, void))(v71 + 8);
    ((void (*)(char *, uint64_t))v80)(v14, v78);
    uint64_t v53 = v67;
    v51((char *)v67, v26, v22);
    unint64_t v54 = (*(unsigned __int8 *)(v50 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v55 = swift_allocObject();
    *(unsigned char *)(v55 + 16) = v66 & 1;
    id v56 = v53;
    uint64_t v57 = v49;
    v69(v55 + v54, v56, v49);
    uint64_t v85 = (uint64_t)sub_1004A1AA4;
    uint64_t v86 = v55;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    NSString v83 = sub_1000666D8;
    uint64_t v84 = &unk_1006AFCE0;
    id v58 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v59 = v72;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_1004A0C6C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v60 = v74;
    uint64_t v61 = v77;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v62 = (void *)v79;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v58);

    (*(void (**)(char *, uint64_t))(v76 + 8))(v60, v61);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v59, v75);
    ((void (*)(char *, uint64_t))v80)(v52, v78);
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v26, v57);
  }
}

id sub_10049962C(uint64_t a1, void *a2)
{
  return sub_100499650(a1, a2, (uint64_t)&unk_1006AFC50, (uint64_t)sub_1004A19C0);
}

id sub_100499650(uint64_t a1, void *aBlock, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  uint64_t v6 = _Block_copy(aBlock);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  swift_retain();
  id v8 = (void *)v5(a4, v7);
  swift_release();
  swift_release();

  return v8;
}

void sub_1004996F0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    URL._bridgeToObjectiveC()(v13);
    uint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  if (a3) {
    uint64_t v16 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v16 = 0;
  }
  (*(void (**)(uint64_t, void *, void, void *))(a4 + 16))(a4, v14, a2 & 1, v16);
}

uint64_t sub_100499854(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v37 = a2;
  uint64_t v5 = type metadata accessor for DOCAnalyticsItemTaggedEvent.TaggingFlow();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCAnalyticsItemTaggedEvent();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (id)FPTagFromDOCTag();
  unint64_t v13 = swift_bridgeObjectRetain();
  unint64_t v14 = (unint64_t)sub_10049DBFC(v13, v12);
  swift_bridgeObjectRelease();

  if (v14 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter() >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    id v15 = v12;
    uint64_t v35 = v7;
    id v16 = v15;
    sub_10049DF38(v14, v15);

    id v17 = [self shared];
    id v18 = objc_allocWithZone((Class)DOCSetTagsOperation);
    uint64_t v36 = v8;
    id v19 = v18;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    v20.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    uint64_t v34 = v5;
    Class isa = v20.super.isa;
    swift_bridgeObjectRelease();
    sub_1000CBE70(&qword_100708DA8);
    Class v22 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v23 = [v19 initWithItems:isa tagsLists:v22 isUndoable:1 shouldClearUndoStack:0 undoManager:v17];

    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = a1;
    v24[3] = v3;
    uint64_t v25 = v37;
    v24[4] = v37;
    aBlock[4] = sub_1004A1514;
    aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001950CC;
    aBlock[3] = &unk_1006AF858;
    id v26 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    id v27 = v23;
    id v28 = v3;
    id v29 = v25;
    swift_release();
    [v27 setActionCompletionBlock:v26];
    _Block_release(v26);

    id v30 = [self defaultManager];
    [v30 scheduleAction:v27];

    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v35, enum case for DOCAnalyticsItemTaggedEvent.TaggingFlow.dragAndDrop(_:), v34);
    DOCAnalyticsItemTaggedEvent.init(bundleID:taggingFlow:)();
    type metadata accessor for DOCAnalyticsManager();
    uint64_t v31 = (void *)static DOCAnalyticsManager.shared.getter();
    DOCAnalyticsManager.sendItemTaggedEvent(_:)();

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v36);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100499C9C(uint64_t result, uint64_t a2, void *a3, void *a4)
{
  if (result)
  {
    uint64_t v7 = result;
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0230;
    *(void *)(v8 + 56) = sub_1000CBE70(&qword_100708810);
    *(void *)(v8 + 64) = sub_100073DF0((unint64_t *)&qword_100710B50, &qword_100708810);
    *(void *)(v8 + 32) = a2;
    *(void *)(v8 + 96) = sub_10009E6C4(0, &qword_10070E2D0);
    *(void *)(v8 + 104) = sub_1000C5A24((unint64_t *)&unk_1007179F0, &qword_10070E2D0);
    *(void *)(v8 + 72) = a3;
    swift_bridgeObjectRetain();
    id v9 = a3;
    uint64_t v10 = _convertErrorToNSError(_:)();
    *(void *)(v8 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v8 + 144) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v8 + 112) = v10;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    uint64_t v11 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v7;
    *(void *)(v12 + 24) = a4;
    v15[4] = sub_1003CB710;
    v15[5] = v12;
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 1107296256;
    _OWORD v15[2] = sub_1000666D8;
    v15[3] = &unk_1006AF8A8;
    unint64_t v13 = _Block_copy(v15);
    swift_errorRetain();
    swift_errorRetain();
    id v14 = a4;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v13);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_100499F04(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UTType();
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v25 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v22 = a4;
    id v23 = a3;
    unint64_t v13 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v12; ++i)
    {
      long long v24 = *(_OWORD *)(a1 + 16 * i + 32);
      id v15 = (id)v24;
      id v16 = *((id *)&v24 + 1);
      id v17 = [v16 contentType];
      static UTType._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v17) = UTType.isFolderUTI.getter();
      (*v13)(v10, v7);
      if (v17)
      {
        id v18 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190FE4(0, v18[2] + 1, 1);
          id v18 = v25;
        }
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        if (v20 >= v19 >> 1)
        {
          sub_100190FE4(v19 > 1, v20 + 1, 1);
          id v18 = v25;
        }
        v18[2] = v20 + 1;
        *(_OWORD *)&v18[2 * v20 + 4] = v24;
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = v25;
    a3 = v23;
  }
  a3(v11);
  return swift_release();
}

void sub_10049A114(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = (void **)(a1 + 40);
    do
    {
      uint64_t v6 = *v5;
      v5 += 2;
      id v7 = v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
  }
  id v8 = [self defaultManager];
  sub_10053982C((unint64_t)_swiftEmptyArrayStorage, a2, 0, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_10049A21C(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    id v7 = (void **)(a1 + 40);
    do
    {
      id v8 = *v7;
      v7 += 2;
      id v9 = v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v5;
    }
    while (v5);
  }
  a3(_swiftEmptyArrayStorage, a2);

  return swift_bridgeObjectRelease();
}

void sub_10049A300(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  v11[4] = sub_1004A0D9C;
  v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000666D8;
  v11[3] = &unk_1006AF740;
  id v9 = _Block_copy(v11);
  swift_bridgeObjectRetain();
  swift_retain();
  id v10 = a4;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v9);
}

uint64_t sub_10049A3F4(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4)
{
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    sub_100190FE4(0, v6, 0);
    id v8 = (id *)(a1 + 32);
    do
    {
      long long v14 = *(_OWORD *)v8;
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      id v11 = *v8;
      id v12 = *((id *)&v14 + 1);
      if (v10 >= v9 >> 1) {
        sub_100190FE4(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v10 + 4] = v14;
      v8 += 2;
      --v6;
    }
    while (v6);
  }
  a2(_swiftEmptyArrayStorage, a4);

  return swift_bridgeObjectRelease();
}

void sub_10049A510(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  dispatch_group_t v115 = a4;
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v113 = v21;
  long long v114 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v23 = (char *)&v101 - v22;
  uint64_t v25 = v24;
  sub_1000CBC00(a1, (uint64_t)v18, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v18, 1, v19) != 1)
  {
    id v30 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v111 = v25 + 32;
    uint64_t v112 = v23;
    uint64_t v110 = v30;
    v30(v23, v18, v19);
    uint64_t v31 = swift_allocObject();
    id v32 = [a6 itemProvider];
    id v33 = sub_1003C6B8C(a7, a8);
    uint64_t v35 = v34;

    *(void *)(v31 + 16) = v33;
    uint64_t v109 = v31 + 16;
    *(void *)(v31 + 24) = v35;
    swift_bridgeObjectRetain();
    v36._uint64_t countAndFlagsBits = 46;
    v36._object = (void *)0xE100000000000000;
    LOBYTE(v32) = String.hasPrefix(_:)(v36);
    swift_bridgeObjectRelease();
    uint64_t v37 = (_OWORD *)&unk_1005A0000;
    if (v32)
    {
      Class v106 = (Class)dispatch_semaphore_create(0);
      id v38 = (id)_DocumentManagerBundle();
      if (v38)
      {
        uint64_t v39 = v38;
        v121._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        v121._object = (void *)0x80000001005F90D0;
        v40._object = (void *)0x80000001005F01D0;
        v40._uint64_t countAndFlagsBits = 0x1000000000000032;
        v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v41._object = (void *)0xEB00000000656C62;
        v42._uint64_t countAndFlagsBits = 0;
        v42._object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v121);

        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v43 = swift_allocObject();
        *(_OWORD *)(v43 + 16) = xmmword_1005A0030;
        uint64_t v44 = *(void *)(v31 + 16);
        uint64_t v45 = *(void *)(v31 + 24);
        *(void *)(v43 + 56) = &type metadata for String;
        *(void *)(v43 + 64) = sub_100073F48();
        *(void *)(v43 + 32) = v44;
        *(void *)(v43 + 40) = v45;
        swift_bridgeObjectRetain();
        uint64_t v46 = static String.localizedStringWithFormat(_:_:)();
        uint64_t v48 = v47;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v49 = (id)_DocumentManagerBundle();
        if (v49)
        {
          uint64_t v50 = v49;
          v122._uint64_t countAndFlagsBits = 0xD000000000000021;
          v51._uint64_t countAndFlagsBits = 0xD000000000000026;
          v122._object = (void *)0x80000001005F90F0;
          v51._object = (void *)0x80000001005F0240;
          v52._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v52._object = (void *)0xEB00000000656C62;
          v53._uint64_t countAndFlagsBits = 0;
          v53._object = (void *)0xE000000000000000;
          Swift::String v54 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v122);

          uint64_t v55 = (Swift::String *)swift_allocObject();
          v55[1]._uint64_t countAndFlagsBits = v46;
          v55[1]._object = v48;
          v55[2] = v54;
          Class v56 = v106;
          v55[3]._uint64_t countAndFlagsBits = v31;
          v55[3]._object = v56;
          v55[4]._uint64_t countAndFlagsBits = (uint64_t)a5;
          uint64_t v119 = (uint64_t)sub_1004A18F4;
          p_uint64_t countAndFlagsBits = &v55->_countAndFlagsBits;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          uint64_t v117 = sub_1000666D8;
          int v118 = &unk_1006AFB00;
          uint64_t v57 = _Block_copy(&aBlock);
          swift_retain();
          id v58 = v56;
          id v59 = a5;
          swift_release();
          DOCRunInMainThread();
          _Block_release(v57);
          OS_dispatch_semaphore.wait()();

          uint64_t v37 = &unk_1005A0000;
          goto LABEL_8;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
LABEL_8:
    uint64_t v105 = a10;
    dispatch_semaphore_t v104 = dispatch_semaphore_create(0);
    sub_1000CBE70((uint64_t *)&unk_1007087F0);
    uint64_t v60 = v31;
    uint64_t v61 = *(unsigned __int8 *)(v25 + 80);
    uint64_t v108 = v25;
    uint64_t v103 = v61 | 7;
    uint64_t v62 = swift_allocObject();
    long long v101 = v37[3];
    *(_OWORD *)(v62 + 16) = v101;
    long long v102 = a5;
    uint64_t v63 = *(void (**)(void))(v25 + 16);
    uint64_t v64 = v112;
    ((void (*)(uint64_t, char *, uint64_t))v63)(v62 + ((v61 + 32) & ~v61), v112, v19);
    uint64_t v65 = self;
    id v66 = a9;
    id v67 = [v65 shared];
    Class v106 = (Class)type metadata accessor for DOCCopyOperation();
    id v68 = objc_allocWithZone(v106);
    unint64_t v69 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)(v62, v66, v67);
    sub_1000CBE70(&qword_100708D68);
    unint64_t v70 = (int *)(sub_1000CBE70((uint64_t *)&unk_100708D70) - 8);
    unint64_t v71 = (*(unsigned __int8 *)(*(void *)v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v70 + 80);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = v101;
    uint64_t v73 = (void *)(v72 + v71 + v70[14]);
    v63();
    swift_beginAccess();
    uint64_t v107 = v60;
    uint64_t v74 = *(void *)(v60 + 24);
    *uint64_t v73 = *(void *)(v60 + 16);
    v73[1] = v74;
    uint64_t v75 = v69;
    swift_bridgeObjectRetain();
    sub_100495550(v72);
    sub_1004A0C6C((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v75 setTargetFilenamesByURL:isa];

    [v75 setLastUsageUpdatePolicy:2];
    [v75 setShouldBounceOnCollision:1];
    uint64_t v77 = v114;
    ((void (*)(char *, char *, uint64_t))v63)(v114, v64, v19);
    uint64_t v78 = (v61 + 48) & ~v61;
    unint64_t v79 = (v113 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v80 = (char *)swift_allocObject();
    dispatch_semaphore_t v81 = v104;
    dispatch_group_t v82 = v115;
    *((void *)v80 + 2) = v104;
    *((void *)v80 + 3) = v82;
    NSString v83 = v102;
    *((void *)v80 + 4) = v102;
    *((void *)v80 + 5) = v75;
    v110(&v80[v78], v77, v19);
    *(void *)&v80[v79] = v105;
    uint64_t v119 = (uint64_t)sub_1004A17F8;
    p_uint64_t countAndFlagsBits = v80;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v117 = sub_1001950CC;
    int v118 = &unk_1006AFAB0;
    uint64_t v84 = _Block_copy(&aBlock);
    uint64_t v85 = v75;
    id v86 = v83;
    id v87 = v85;
    double v88 = v81;
    uint64_t v89 = v82;
    swift_retain();
    swift_release();
    [v87 setActionCompletionBlock:v84];
    _Block_release(v84);

    unint64_t v90 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_1005A0230;
    *(void *)(v91 + 56) = &type metadata for String;
    *(void *)(v91 + 64) = sub_100073F48();
    *(void *)(v91 + 32) = 0xD00000000000003CLL;
    *(void *)(v91 + 40) = 0x80000001005F9050;
    *(void *)(v91 + 96) = v106;
    *(void *)(v91 + 104) = sub_1004A0C6C(&qword_100713B70, (void (*)(uint64_t))type metadata accessor for DOCCopyOperation);
    *(void *)(v91 + 72) = v87;
    uint64_t v92 = v87;
    id v93 = v112;
    URL._bridgeToObjectiveC()(v94);
    uint64_t v96 = v95;
    *(void *)(v91 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v91 + 144) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v91 + 112) = v96;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v97 = [self defaultManager];
    [v97 scheduleAction:v92];

    OS_dispatch_semaphore.wait()();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v93, v19);
    swift_release();
    return;
  }
  sub_1000CBBA4((uint64_t)v18, &qword_1007076B0);
  id v26 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_10059B760;
  *(void *)(v27 + 56) = &type metadata for String;
  unint64_t v28 = sub_100073F48();
  *(void *)(v27 + 64) = v28;
  *(void *)(v27 + 32) = 0xD00000000000003CLL;
  *(void *)(v27 + 40) = 0x80000001005F9050;
  if (a3)
  {
    uint64_t v29 = _convertErrorToNSError(_:)();
    int v118 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    uint64_t v119 = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)&long long aBlock = v29;
    sub_1001146DC(&aBlock, v27 + 72);
  }
  else
  {
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v28;
    *(void *)(v27 + 72) = 0xD000000000000013;
    *(void *)(v27 + 80) = 0x80000001005DD4C0;
  }
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a3)
  {
    uint64_t v98 = swift_allocObject();
    *(void *)(v98 + 16) = a3;
    *(void *)(v98 + 24) = a5;
    uint64_t v119 = (uint64_t)sub_1003CB710;
    p_uint64_t countAndFlagsBits = (void *)v98;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v117 = sub_1000666D8;
    int v118 = &unk_1006AFA38;
    uint64_t v99 = _Block_copy(&aBlock);
    swift_errorRetain();
    id v100 = a5;
    swift_errorRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v99);
    swift_errorRelease();
  }
  dispatch_group_leave(v115);
}

void sub_10049B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  id v12 = (id)_DocumentManagerBundle();
  if (v12)
  {
    unint64_t v13 = v12;
    v40._object = (void *)0xE400000000000000;
    v14._uint64_t countAndFlagsBits = 2003789907;
    v14._object = (void *)0xE400000000000000;
    v15._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v15._object = (void *)0xEB00000000656C62;
    v16._uint64_t countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v40._uint64_t countAndFlagsBits = 2003789907;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v40);

    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    id v18 = a6;
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = sub_1004A1920;
    uint64_t v39 = v17;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v35 = 1107296256;
    Swift::String v36 = sub_10041B2E4;
    uint64_t v37 = &unk_1006AFB50;
    uint64_t v20 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v21 = self;
    id v22 = [v21 actionWithTitle:v19 style:0 handler:v20];
    _Block_release(v20);

    [v11 addAction:v22];
    id v23 = (id)_DocumentManagerBundle();
    if (v23)
    {
      uint64_t v24 = v23;
      v41._object = (void *)0xE400000000000000;
      v25._uint64_t countAndFlagsBits = 1701079368;
      v25._object = (void *)0xE400000000000000;
      v26._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v26._object = (void *)0xEB00000000656C62;
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v41._uint64_t countAndFlagsBits = 1701079368;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v41);

      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v18;
      id v29 = v18;
      NSString v30 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v38 = sub_100167BBC;
      uint64_t v39 = v28;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      Swift::String v36 = sub_10041B2E4;
      uint64_t v37 = &unk_1006AFBA0;
      uint64_t v31 = _Block_copy(&aBlock);
      swift_release();
      id v32 = [v21 actionWithTitle:v30 style:1 handler:v31];
      _Block_release(v31);

      [v11 addAction:v32];
      [a7 presentViewController:v11 animated:1 completion:0];

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Int sub_10049B4B0()
{
  swift_beginAccess();
  while (1)
  {
    swift_bridgeObjectRetain();
    v0._uint64_t countAndFlagsBits = 46;
    v0._object = (void *)0xE100000000000000;
    Swift::Bool v1 = String.hasPrefix(_:)(v0);
    swift_bridgeObjectRelease();
    if (!v1) {
      break;
    }
    swift_beginAccess();
    String.remove(at:)();
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  return OS_dispatch_semaphore.signal()();
}

void sub_10049B570(uint64_t a1, uint64_t a2, NSObject *a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  Swift::String v16 = (char *)aBlock - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v17 = (void *)_convertErrorToNSError(_:)();
    id v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_10059B760;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = sub_100073F48();
    *(void *)(v19 + 32) = 0xD00000000000003CLL;
    *(void *)(v19 + 40) = 0x80000001005F9050;
    *(void *)(v19 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v19 + 72) = v17;
    id v20 = v17;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v20;
    *(void *)(v21 + 24) = a4;
    aBlock[4] = sub_1003CB710;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006AFBF0;
    id v22 = _Block_copy(aBlock);
    id v23 = v20;
    id v24 = a4;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v22);
  }
  else
  {
    id v25 = [a5 transferResults];
    if (v25)
    {
      Swift::String v26 = v25;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v27 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a6, v13);
      sub_1004A0C6C((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      AnyHashable.init<A>(_:)();
      if (*(void *)(v27 + 16) && (unint64_t v28 = sub_10008E070((uint64_t)aBlock), (v29 & 1) != 0))
      {
        NSString v30 = (void *)(a7 + 16);
        id v31 = *(id *)(*(void *)(v27 + 56) + 8 * v28);
        swift_bridgeObjectRelease();
        sub_10008E17C((uint64_t)aBlock);
        swift_beginAccess();
        id v32 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_endAccess();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_10008E17C((uint64_t)aBlock);
      }
    }
  }
  OS_dispatch_semaphore.signal()();
  dispatch_group_leave(a3);
}

uint64_t sub_10049B978(uint64_t result)
{
  if (result)
  {
    Swift::Bool v1 = (void (*)(uint64_t))result;
    swift_beginAccess();
    uint64_t v2 = swift_bridgeObjectRetain();
    v1(v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10049B9E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_10049B9F8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10049BA30(void (*a1)(uint64_t, unint64_t, uint64_t), uint64_t a2)
{
  return sub_100498544(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10049BA38()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10049BA60(uint64_t a1, uint64_t a2)
{
  return sub_100498974(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10049BA68()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10049BA90(void (*a1)(void *, void), uint64_t a2)
{
  return sub_100498744(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10049BA98()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10049BAD0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10049BAF8(void (**a1)(char *, uint64_t), uint64_t a2)
{
  if (sub_10049BB60(a1, a2)) {
    return 1;
  }

  return sub_10049C110(a1, a2);
}

uint64_t sub_10049BB60(void (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for DOCFPItemDragPasteboardType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for UTType();
  uint64_t v49 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  Swift::String v53 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    Swift::String v52 = a1;
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    Swift::String v52 = a1;
    if (v10)
    {
LABEL_3:
      uint64_t v11 = 0;
      unint64_t v12 = v9 & 0xC000000000000001;
      unint64_t v44 = v9 + 32;
      unsigned int v55 = enum case for DOCFPItemDragPasteboardType.location(_:);
      Class v56 = (void (**)(char *, void, uint64_t))(v4 + 104);
      a1 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v46 = v10;
      unint64_t v47 = v9;
      unint64_t v43 = v9 & 0xC000000000000001;
      do
      {
LABEL_4:
        if (v12)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v14 = __OFADD__(v11++, 1);
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          id v13 = *(id *)(v44 + 8 * v11);
          BOOL v14 = __OFADD__(v11++, 1);
          if (v14)
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        unint64_t v15 = v12;
        Swift::String v16 = v13;
        id v17 = [v13 itemProvider];
        id v18 = [v17 registeredTypeIdentifiers];

        uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = *(void *)(v4 + 16);
        if (v19)
        {
          id v51 = v16;
          uint64_t v45 = v11;
          id v20 = *v56;
          swift_bridgeObjectRetain();
          uint64_t v50 = v4;
          uint64_t v21 = (uint64_t *)(v4 + 40);
          while (1)
          {
            uint64_t v22 = *(v21 - 1);
            uint64_t v4 = *v21;
            v20(v6, v55, v3);
            swift_bridgeObjectRetain();
            uint64_t v23 = DOCFPItemDragPasteboardType.typeIdentifier.getter();
            uint64_t v25 = v24;
            (*a1)(v6, v3);
            if (v22 == v23 && v4 == v25) {
              break;
            }
            char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27)
            {
              swift_bridgeObjectRelease();

              goto LABEL_23;
            }
            v21 += 2;
            if (!--v19)
            {

              swift_bridgeObjectRelease_n();
              unint64_t v9 = v47;
              uint64_t v11 = v45;
              unint64_t v12 = v43;
              if (v45 != v46) {
                goto LABEL_4;
              }
              goto LABEL_26;
            }
          }
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
LABEL_23:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          int v28 = 1;
          goto LABEL_27;
        }

        swift_bridgeObjectRelease();
        unint64_t v12 = v15;
      }
      while (v11 != v46);
    }
  }
LABEL_26:
  swift_bridgeObjectRelease_n();
  int v28 = 0;
LABEL_27:
  uint64_t v57 = &OBJC_PROTOCOL___UIDropSession;
  uint64_t v29 = swift_dynamicCastObjCProtocolConditional();
  if (v29)
  {
    NSString v30 = (void *)v29;
    LODWORD(v56) = v28;
    swift_unknownObjectRetain();
    uint64_t v31 = (uint64_t)v53;
    static UTType.item.getter();
    swift_getObjectType();
    unint64_t v32 = (unint64_t)sub_10049C6C0(v30, v31);
    id v33 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v33(v31, v54);
    if (v32 >> 62) {
      goto LABEL_44;
    }
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v34; uint64_t v34 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v35 = 4;
      while (1)
      {
        id v36 = (v32 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v32 + 8 * v35);
        uint64_t v37 = v36;
        uint64_t v38 = v35 - 3;
        if (__OFADD__(v35 - 4, 1)) {
          break;
        }
        id v39 = [v36 contentType];
        Swift::String v40 = v53;
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v39) = UTType.isFolderUTI.getter();
        v33((uint64_t)v40, v54);

        if (v39)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
        ++v35;
        if (v38 == v34) {
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_44:
      swift_bridgeObjectRetain();
    }
LABEL_37:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    return v56 != 0;
  }
  return (v28 & 1) != 0;
}

uint64_t sub_10049C110(void (**a1)(char *, uint64_t), uint64_t a2)
{
  uint64_t v48 = a2;
  uint64_t v3 = type metadata accessor for DOCFPItemDragPasteboardType();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for UTType();
  uint64_t v49 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  Swift::String v53 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    Swift::String v52 = a1;
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    Swift::String v52 = a1;
    if (v10)
    {
LABEL_3:
      uint64_t v11 = 0;
      unint64_t v12 = v9 & 0xC000000000000001;
      unint64_t v44 = v9 + 32;
      unsigned int v55 = enum case for DOCFPItemDragPasteboardType.file(_:);
      Class v56 = (void (**)(char *, void, uint64_t))(v4 + 104);
      a1 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v46 = v10;
      unint64_t v47 = v9;
      unint64_t v43 = v9 & 0xC000000000000001;
      do
      {
LABEL_4:
        if (v12)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v14 = __OFADD__(v11++, 1);
          if (v14) {
            goto LABEL_24;
          }
        }
        else
        {
          id v13 = *(id *)(v44 + 8 * v11);
          BOOL v14 = __OFADD__(v11++, 1);
          if (v14)
          {
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
        }
        unint64_t v15 = v12;
        Swift::String v16 = v13;
        id v17 = [v13 itemProvider];
        id v18 = [v17 registeredTypeIdentifiers];

        uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v19 = *(void *)(v4 + 16);
        if (v19)
        {
          id v51 = v16;
          uint64_t v45 = v11;
          id v20 = *v56;
          swift_bridgeObjectRetain();
          uint64_t v50 = v4;
          uint64_t v21 = (uint64_t *)(v4 + 40);
          while (1)
          {
            uint64_t v22 = *(v21 - 1);
            uint64_t v4 = *v21;
            v20(v6, v55, v3);
            swift_bridgeObjectRetain();
            uint64_t v23 = DOCFPItemDragPasteboardType.typeIdentifier.getter();
            uint64_t v25 = v24;
            (*a1)(v6, v3);
            if (v22 == v23 && v4 == v25) {
              break;
            }
            char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27)
            {
              swift_bridgeObjectRelease();

              goto LABEL_23;
            }
            v21 += 2;
            if (!--v19)
            {

              swift_bridgeObjectRelease_n();
              unint64_t v9 = v47;
              uint64_t v11 = v45;
              unint64_t v12 = v43;
              if (v45 != v46) {
                goto LABEL_4;
              }
              goto LABEL_26;
            }
          }
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease_n();
LABEL_23:
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          int v28 = 1;
          goto LABEL_27;
        }

        swift_bridgeObjectRelease();
        unint64_t v12 = v15;
      }
      while (v11 != v46);
    }
  }
LABEL_26:
  swift_bridgeObjectRelease_n();
  int v28 = 0;
LABEL_27:
  uint64_t v57 = &OBJC_PROTOCOL___UIDropSession;
  uint64_t v29 = swift_dynamicCastObjCProtocolConditional();
  if (v29)
  {
    NSString v30 = (void *)v29;
    LODWORD(v56) = v28;
    swift_unknownObjectRetain();
    uint64_t v31 = (uint64_t)v53;
    static UTType.item.getter();
    swift_getObjectType();
    unint64_t v32 = (unint64_t)sub_10049C6C0(v30, v31);
    id v33 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v33(v31, v54);
    if (v32 >> 62) {
      goto LABEL_44;
    }
    uint64_t v34 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v34; uint64_t v34 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v35 = 4;
      while (1)
      {
        id v36 = (v32 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v32 + 8 * v35);
        uint64_t v37 = v36;
        uint64_t v38 = v35 - 3;
        if (__OFADD__(v35 - 4, 1)) {
          break;
        }
        id v39 = [v36 contentType];
        Swift::String v40 = v53;
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v39) = UTType.isFolderUTI.getter();
        v33((uint64_t)v40, v54);

        if ((v39 & 1) == 0)
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
        ++v35;
        if (v38 == v34) {
          goto LABEL_37;
        }
      }
      __break(1u);
LABEL_44:
      swift_bridgeObjectRetain();
    }
LABEL_37:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
    return v56 != 0;
  }
  return (v28 & 1) != 0;
}

void *sub_10049C6C0(void *a1, uint64_t a2)
{
  sub_10049C790(a1, a2);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = 40;
    do
    {
      id v6 = *(id *)(v3 + v5);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v5 += 16;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_10049C790(void *a1, uint64_t a2)
{
  uint64_t v36 = a2;
  uint64_t v35 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v34 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [a1 localDragSession];
  swift_unknownObjectRelease();
  if (!v5) {
    return;
  }
  id v6 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  unint64_t v9 = sub_10018F684(0, v8 & ~(v8 >> 63), 0, _swiftEmptyArrayStorage);
  id v10 = [a1 items];
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_6;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_28;
  }
LABEL_6:
  if (v12 >= 1)
  {
    id v33 = v9;
    uint64_t v13 = 0;
    unint64_t v14 = v11 & 0xC000000000000001;
    unint64_t v15 = (void (**)(char *, uint64_t))(v3 + 8);
    Swift::String v16 = &selRef_cellForItemAtIndexPath_;
    uint64_t v37 = (char *)&type metadata for Any + 8;
    unint64_t v31 = v11;
    uint64_t v32 = v12;
    do
    {
      if (v14) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v11 + 8 * v13 + 32);
      }
      id v18 = v17;
      if (objc_msgSend(v17, v16[9], v31, v32))
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v39, 0, sizeof(v39));
      }
      sub_1000516C4((uint64_t)v39, (uint64_t)v40);
      if (v41)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        if (swift_dynamicCast())
        {
          uint64_t v19 = v16;
          id v20 = v38;
          id v21 = [v38 contentType];
          uint64_t v22 = v34;
          static UTType._unconditionallyBridgeFromObjectiveC(_:)();

          LOBYTE(v21) = UTType.conforms(to:)();
          (*v15)(v22, v35);
          if (v21)
          {
            unint64_t v23 = v14;
            uint64_t v24 = v15;
            unint64_t v26 = v33[2];
            unint64_t v25 = v33[3];
            char v27 = v33;
            id v28 = v18;
            id v29 = v20;
            if (v26 >= v25 >> 1) {
              char v27 = sub_10018F684((void *)(v25 > 1), v26 + 1, 1, v27);
            }
            Swift::String v16 = v19;
            id v33 = v27;
            v27[2] = v26 + 1;
            NSString v30 = &v27[2 * v26];
            v30[4] = v28;
            v30[5] = v29;

            unint64_t v15 = v24;
            unint64_t v14 = v23;
            unint64_t v11 = v31;
            uint64_t v12 = v32;
          }
          else
          {

            Swift::String v16 = v19;
          }
        }
        else
        {
        }
      }
      else
      {

        sub_1000CBBA4((uint64_t)v40, (uint64_t *)&unk_100705D60);
      }
      ++v13;
    }
    while (v12 != v13);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_10049CBB8(void *a1)
{
  uint64_t v2 = type metadata accessor for DOCFPItemDragPasteboardType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 0;
  }
LABEL_25:
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  if (!v8) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t v9 = 0;
  unint64_t v10 = v7 & 0xC000000000000001;
  unint64_t v31 = v7 + 32;
  unsigned int v37 = enum case for DOCFPItemDragPasteboardType.favorite(_:);
  id v38 = (void (**)(char *, void, uint64_t))(v3 + 104);
  unint64_t v11 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v33 = v8;
  unint64_t v34 = v7;
  unint64_t v30 = v7 & 0xC000000000000001;
  while (1)
  {
    if (v10)
    {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v13 = __OFADD__(v9++, 1);
      if (v13) {
        goto LABEL_24;
      }
    }
    else
    {
      id v12 = *(id *)(v31 + 8 * v9);
      BOOL v13 = __OFADD__(v9++, 1);
      if (v13)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    unint64_t v14 = v10;
    unint64_t v15 = v12;
    id v16 = [v12 itemProvider];
    uint64_t v3 = (uint64_t)[v16 registeredTypeIdentifiers];

    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18) {
      break;
    }

    swift_bridgeObjectRelease();
    unint64_t v10 = v14;
    uint64_t v27 = v33;
LABEL_19:
    if (v9 == v27) {
      goto LABEL_20;
    }
  }
  id v36 = v15;
  uint64_t v32 = v9;
  uint64_t v19 = *v38;
  swift_bridgeObjectRetain();
  uint64_t v35 = v17;
  id v20 = (uint64_t *)(v17 + 40);
  while (1)
  {
    uint64_t v21 = *(v20 - 1);
    uint64_t v22 = *v20;
    v19(v5, v37, v2);
    swift_bridgeObjectRetain();
    uint64_t v23 = DOCFPItemDragPasteboardType.typeIdentifier.getter();
    uint64_t v25 = v24;
    (*v11)(v5, v2);
    if (v21 == v23 && v22 == v25)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      goto LABEL_23;
    }
    uint64_t v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3) {
      break;
    }
    v20 += 2;
    if (!--v18)
    {

      swift_bridgeObjectRelease_n();
      uint64_t v27 = v33;
      unint64_t v7 = v34;
      uint64_t v9 = v32;
      unint64_t v10 = v30;
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();

LABEL_23:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_10049CF24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = &OBJC_PROTOCOL___UIDropSession;
  uint64_t v6 = swift_dynamicCastObjCProtocolConditional();
  if (v6)
  {
    unint64_t v7 = (void *)v6;
    swift_unknownObjectRetain();
    static UTType.item.getter();
    swift_getObjectType();
    unint64_t v8 = (unint64_t)sub_10049C6C0(v7, (uint64_t)v5);
    uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
    v18(v5, v2);
    if (v8 >> 62) {
      goto LABEL_14;
    }
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (uint64_t i = a1; v9; uint64_t i = a1)
    {
      a1 = 4;
      while (1)
      {
        id v10 = (v8 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v8 + 8 * a1);
        unint64_t v11 = v10;
        uint64_t v12 = a1 - 3;
        if (__OFADD__(a1 - 4, 1)) {
          break;
        }
        id v13 = [v10 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        char v14 = UTType.isFolderUTI.getter();
        v18(v5, v2);

        if ((v14 & 1) == 0)
        {
          ++a1;
          if (v12 != v9) {
            continue;
          }
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    }
    char v14 = 0;
LABEL_16:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = 0;
  }
  return v14 & 1;
}

unint64_t sub_10049D15C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CBE70(&qword_100711D98);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (_OWORD *)(a1 + 80); ; i += 4)
    {
      Swift::UInt64 v5 = *((void *)i - 6);
      Swift::UInt64 v6 = *((void *)i - 5);
      char v7 = *((unsigned char *)i - 32);
      uint64_t v9 = *((void *)i - 3);
      uint64_t v8 = *((void *)i - 2);
      uint64_t v10 = *((void *)i - 1);
      long long v18 = *i;
      unint64_t result = sub_10017BED8(v5, v6, v7);
      if (v12) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v13 = v3[6] + 24 * result;
      *(void *)uint64_t v13 = v5;
      *(void *)(v13 + 8) = v6;
      *(unsigned char *)(v13 + 16) = v7;
      uint64_t v14 = v3[7] + 40 * result;
      *(void *)uint64_t v14 = v9;
      *(void *)(v14 + 8) = v8;
      *(void *)(v14 + 16) = v10;
      *(_OWORD *)(v14 + 24) = v18;
      uint64_t v15 = v3[2];
      BOOL v16 = __OFADD__(v15, 1);
      uint64_t v17 = v15 + 1;
      if (v16) {
        goto LABEL_10;
      }
      v3[2] = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10049D29C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CBE70(&qword_100711D90);
    uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (void *)(a1 + 56); ; i += 4)
    {
      Swift::UInt64 v5 = *(i - 3);
      Swift::UInt64 v6 = *(i - 2);
      char v7 = *((unsigned char *)i - 8);
      uint64_t v8 = *i;
      unint64_t result = sub_10017BED8(v5, v6, v7);
      if (v10) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v11 = v3[6] + 24 * result;
      *(void *)uint64_t v11 = v5;
      *(void *)(v11 + 8) = v6;
      *(unsigned char *)(v11 + 16) = v7;
      *(void *)(v3[7] + 8 * result) = v8;
      uint64_t v12 = v3[2];
      BOOL v13 = __OFADD__(v12, 1);
      uint64_t v14 = v12 + 1;
      if (v13) {
        goto LABEL_10;
      }
      v3[2] = v14;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10049D394(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000CBE70(&qword_1007177D0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1000BBA9C(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    char v10 = (void *)(v3[7] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000BBA9C(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10049D4A4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_1000CBE70(&qword_100717858);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1000BBA9C(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000BBA9C(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void *sub_10049D5A4(uint64_t a1)
{
  return sub_1004A0E1C(a1, (uint64_t *)&unk_100705BA0);
}

Swift::Int sub_10049D5B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CBE70(&qword_100717A10);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        char v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_10049D754(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unsigned int v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1000CBE70(&qword_100717820);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1004A0C6C(&qword_100717828, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1004A0C6C(&qword_100717830, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_10049DA6C(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        if (static NSObject.== infix(_:_:)())
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        ++v3;
        if (v7 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)(v4 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10049DBFC(unint64_t a1, void *a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_38;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v4 = 0;
    uint64_t v33 = v2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v34 = v2 & 0xC000000000000001;
    uint64_t v31 = v2;
    uint64_t v32 = v2 + 32;
    uint64_t v30 = i;
    while (1)
    {
      if (v34)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v4 >= *(void *)(v33 + 16)) {
          goto LABEL_36;
        }
        id v5 = *(id *)(v32 + 8 * v4);
      }
      id v6 = v5;
      if (__OFADD__(v4++, 1)) {
        break;
      }
      id v8 = [v5 tags];
      if (v8)
      {
        uint64_t v9 = v8;
        sub_10009E6C4(0, &qword_10070AE60);
        unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = v6;
        unint64_t v36 = v4;
        if (v10 >> 62)
        {
          id v28 = a2;
          swift_bridgeObjectRetain();
          uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
          if (v2)
          {
LABEL_14:
            unint64_t v37 = v10;
            unint64_t v38 = v10 & 0xC000000000000001;
            uint64_t v12 = 4;
            do
            {
              uint64_t v13 = v12 - 4;
              if (v38)
              {
                id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v15 = v12 - 3;
                if (__OFADD__(v13, 1)) {
                  goto LABEL_35;
                }
              }
              else
              {
                id v14 = *(id *)(v10 + 8 * v12);
                uint64_t v15 = v12 - 3;
                if (__OFADD__(v13, 1))
                {
LABEL_35:
                  __break(1u);
LABEL_36:
                  __break(1u);
                  goto LABEL_37;
                }
              }
              uint64_t v16 = v2;
              uint64_t v17 = v14;
              id v18 = [v14 label];
              uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v21 = v20;

              id v22 = [a2 label];
              uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v25 = v24;

              BOOL v26 = v19 == v23 && v21 == v25;
              if (v26)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
LABEL_30:
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                uint64_t i = v30;
                uint64_t v2 = v31;
                unint64_t v4 = v36;
                goto LABEL_6;
              }
              char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v27)
              {

                goto LABEL_30;
              }
              ++v12;
              uint64_t v2 = v16;
              BOOL v26 = v15 == v16;
              unint64_t v10 = v37;
            }
            while (!v26);
          }
        }
        else
        {
          uint64_t v2 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v11 = a2;
          swift_bridgeObjectRetain();
          if (v2) {
            goto LABEL_14;
          }
        }

        swift_bridgeObjectRelease_n();
        uint64_t i = v30;
        uint64_t v2 = v31;
        unint64_t v4 = v36;
      }
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
LABEL_6:
      if (v4 == i) {
        return _swiftEmptyArrayStorage;
      }
    }
LABEL_37:
    __break(1u);
LABEL_38:
    ;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10049DF38(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v3) {
      return _swiftEmptyArrayStorage;
    }
    Swift::Int result = (void *)sub_1001911E8(0, v3 & ~(v3 >> 63), 0);
    if (v3 < 0) {
      break;
    }
    uint64_t v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      unint64_t v7 = v6;
      id v8 = [v6 tags];
      if (v8)
      {
        uint64_t v9 = v8;
        sub_10009E6C4(0, &qword_10070AE60);
        uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        uint64_t v10 = (uint64_t)_swiftEmptyArrayStorage;
      }
      id v11 = a2;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_1001911E8(v12 > 1, v13 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13 + 4] = v10;
      if (v3 == v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10049E148(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8)
  {
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v8 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = a3;
    uint64_t v10 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(a1 + 8 * v10 + 32);
      }
      unint64_t v12 = v11;
      ++v10;
      id v13 = [v11 itemProvider:v16];

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v8 != v10);
    a3 = v16;
  }
  id v14 = (void *)swift_allocObject();
  id v14[2] = a3;
  v14[3] = a4;
  v14[4] = a2;
  swift_retain();
  id v15 = a2;
  sub_1003C3D4C((id *)_swiftEmptyArrayStorage, a1, a2, 1, (uint64_t)sub_1004A0D48, (uint64_t)v14);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10049E304(void *a1, void *a2, uint64_t a3, void *a4)
{
  unint64_t v34 = a2;
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1004A14A8;
  *(void *)(v11 + 24) = v10;
  uint64_t v33 = v11;
  swift_retain_n();
  id v32 = a4;
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v9);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  id v14 = (void *)static DOCLog.UI.getter();
  int v35 = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_100073F48();
  *(void *)(v15 + 32) = 0xD000000000000044;
  *(void *)(v15 + 40) = 0x80000001005F8EF0;
  uint64_t v36 = v13;
  uint64_t v16 = *(void *)(v13 + 16);
  *(void *)(v15 + 96) = &type metadata for Int;
  *(void *)(v15 + 104) = &protocol witness table for Int;
  *(void *)(v15 + 72) = v16;
  id v17 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v15 + 136) = &type metadata for Int;
  *(void *)(v15 + 144) = &protocol witness table for Int;
  *(void *)(v15 + 112) = v19;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v20 = [a1 items];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = v36;
  swift_bridgeObjectRelease();
  if (v16 == v22)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
    if (v16)
    {
      unint64_t v37 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v25 = (void **)(v23 + 40);
      BOOL v26 = v34;
      do
      {
        char v27 = *v25;
        v25 += 2;
        id v28 = v27;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v16;
      }
      while (v16);
      uint64_t v24 = v37;
    }
    else
    {
      BOOL v26 = v34;
    }
    sub_100499854((uint64_t)v24, v26);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v29 = [a1 items];
    unint64_t v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v30, v34, (uint64_t)sub_1004A1BCC, v33);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_10049E748(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v32 = a2;
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1004A1538;
  *(void *)(v10 + 24) = a4;
  uint64_t v35 = v10;
  uint64_t v33 = a4;
  swift_retain_n();
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v9);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v13 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1005A0230;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_100073F48();
  *(void *)(v14 + 32) = 0xD000000000000044;
  *(void *)(v14 + 40) = 0x80000001005F8EF0;
  uint64_t v34 = v12;
  uint64_t v15 = *(void *)(v12 + 16);
  *(void *)(v14 + 96) = &type metadata for Int;
  *(void *)(v14 + 104) = &protocol witness table for Int;
  *(void *)(v14 + 72) = v15;
  id v16 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v14 + 136) = &type metadata for Int;
  *(void *)(v14 + 144) = &protocol witness table for Int;
  *(void *)(v14 + 112) = v18;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v19 = [a1 items];
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v15 == v21)
  {
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t v23 = v34;
    if (v15)
    {
      uint64_t v36 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v24 = (void **)(v23 + 40);
      uint64_t v25 = v32;
      do
      {
        BOOL v26 = *v24;
        v24 += 2;
        id v27 = v26;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v15;
      }
      while (v15);
      uint64_t v22 = v36;
    }
    else
    {
      uint64_t v25 = v32;
    }
    sub_10010730C((unint64_t)v22, v25);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v28 = [a1 items];
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v29, v32, (uint64_t)sub_1004A1BCC, v35);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_10049EB74(unint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6)
{
  uint64_t v45 = a4;
  uint64_t v46 = a6;
  uint64_t v47 = a3;
  id v44 = a2;
  uint64_t v8 = type metadata accessor for DOCOperationItem();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (void **)((char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (uint64_t *)((char *)&v39 - v13);
  uint64_t v15 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  uint64_t v42 = sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v16 = swift_allocObject();
  long long v41 = xmmword_1005A0030;
  *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
  *(void *)(v16 + 56) = &type metadata for String;
  unint64_t v17 = sub_100073F48();
  *(void *)(v16 + 64) = v17;
  unint64_t v39 = (unint64_t)" had %d items";
  unint64_t v40 = v17;
  *(void *)(v16 + 32) = 0xD000000000000044;
  *(void *)(v16 + 40) = 0x80000001005F8F80;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v19 = _swiftEmptyArrayStorage;
  if (!v18) {
    goto LABEL_16;
  }
  uint64_t v48 = _swiftEmptyArrayStorage;
  sub_100190F0C(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    unint64_t v43 = a5;
    id v19 = v48;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v18; ++i)
      {
        *uint64_t v14 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v19;
        unint64_t v22 = v19[2];
        unint64_t v21 = v19[3];
        if (v22 >= v21 >> 1)
        {
          sub_100190F0C(v21 > 1, v22 + 1, 1);
          id v19 = v48;
        }
        v19[2] = v22 + 1;
        sub_1004A0DA8((uint64_t)v14, (uint64_t)v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v22, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
      }
    }
    else
    {
      uint64_t v23 = (void **)(a1 + 32);
      do
      {
        uint64_t v24 = *v23;
        *uint64_t v12 = *v23;
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = v19;
        unint64_t v26 = v19[2];
        unint64_t v25 = v19[3];
        id v27 = v24;
        if (v26 >= v25 >> 1)
        {
          sub_100190F0C(v25 > 1, v26 + 1, 1);
          id v19 = v48;
        }
        v19[2] = v26 + 1;
        sub_1004A0DA8((uint64_t)v12, (uint64_t)v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v26, (uint64_t (*)(void))type metadata accessor for DOCOperationItem);
        ++v23;
        --v18;
      }
      while (v18);
    }
    a5 = v43;
LABEL_16:
    id v28 = [self defaultManager];
    id v29 = FPActionUntrash;
    char v30 = sub_1005350BC();

    if (v30)
    {
      sub_100535854(4, (uint64_t)v19, v44, 0, 0, 1, v45, a5, v46);
    }
    else
    {
      id v31 = FPActionReparent;
      char v32 = sub_1005350BC();

      if (v32)
      {
        sub_100535854(0, (uint64_t)v19, v44, 0, 0, 1, v45, a5, v46);
      }
      else
      {
        id v33 = FPActionCopy;
        char v34 = sub_1005350BC();

        if ((v34 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.debug.getter();
          uint64_t v36 = swift_allocObject();
          *(_OWORD *)(v36 + 16) = v41;
          unint64_t v37 = v40;
          *(void *)(v36 + 56) = &type metadata for String;
          *(void *)(v36 + 64) = v37;
          unint64_t v38 = v39 | 0x8000000000000000;
          *(void *)(v36 + 32) = 0xD000000000000044;
          *(void *)(v36 + 40) = v38;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          if (a5) {
            a5(0);
          }
          goto LABEL_23;
        }
        sub_100535854(1, (uint64_t)v19, v44, 0, 0, 1, v45, a5, v46);
      }
    }
    swift_bridgeObjectRelease();
LABEL_23:

    return;
  }
  __break(1u);
}

uint64_t sub_10049F064(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  unsigned int v55 = a2;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UTType();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  *(void *)(v14 + 24) = a5;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1004A1580;
  *(void *)(v15 + 24) = v14;
  uint64_t v53 = v15;
  uint64_t v54 = v14;
  swift_retain_n();
  uint64_t v47 = a4;
  id v48 = a5;
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v13);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v18 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1005A0230;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_100073F48();
  *(void *)(v19 + 32) = 0xD000000000000044;
  *(void *)(v19 + 40) = 0x80000001005F8EF0;
  uint64_t v52 = v17;
  uint64_t v20 = *(void *)(v17 + 16);
  *(void *)(v19 + 96) = &type metadata for Int;
  *(void *)(v19 + 104) = &protocol witness table for Int;
  *(void *)(v19 + 72) = v20;
  id v21 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v19 + 136) = &type metadata for Int;
  *(void *)(v19 + 144) = &protocol witness table for Int;
  *(void *)(v19 + 112) = v23;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v24 = [a1 items];
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v27 = v52;
  swift_bridgeObjectRelease();
  if (v20 == v26)
  {
    id v28 = _swiftEmptyArrayStorage;
    if (v20)
    {
      Class v56 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      id v29 = (void **)(v27 + 40);
      do
      {
        char v30 = *v29;
        v29 += 2;
        id v31 = v30;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v20;
      }
      while (v20);
      id v28 = v56;
    }
    id v32 = [*(id *)&v47[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration] hostIdentifier];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v33 = v48;
    char v34 = v49;
    Date.init()();
    id v35 = objc_allocWithZone((Class)DOCHotFolderEvent);
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v38 = [v35 initWithAppBundleIdentifier:v36 folderItem:v33 type:1 lastUsedDate:isa frecency:1.0];

    (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
    type metadata accessor for DOCSmartFolderManager();
    unint64_t v39 = (void *)static DOCSmartFolderManager.sharedManager.getter();
    DOCSmartFolderManager.register(event:)();

    id v40 = [self defaultManager];
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class v41 = Array._bridgeToObjectiveC()().super.isa;
    id v42 = [v40 eligibleActionsForDroppingItems:v41 underItem:v33];

    type metadata accessor for FPAction(0);
    sub_1004A0C6C((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v43 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049EB74((unint64_t)v28, v33, v43, v55, 0, 0);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v44 = [a1 items];
    unint64_t v45 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v45, v55, (uint64_t)sub_1004A1BCC, v53);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_10049F708(unint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v55 = a5;
  uint64_t v54 = a4;
  uint64_t v65 = a2;
  id v66 = a3;
  uint64_t v6 = (char **)type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = (uint64_t)*(v6 - 1);
  __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = _swiftEmptyArrayStorage;
  dispatch_group_t v67 = dispatch_group_create();
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = &off_10059B000; v11; uint64_t i = &off_10059B000)
  {
    uint64_t v50 = v10;
    uint64_t v51 = v7;
    uint64_t v52 = v6;
    unint64_t v64 = a1 & 0xC000000000000001;
    uint64_t v60 = &v73;
    uint64_t v7 = 4;
    long long v63 = xmmword_10059B760;
    unint64_t v53 = (unint64_t)"%@: No UTIs that are acceptable";
    unint64_t v59 = 0x80000001005F9050;
    uint64_t v13 = *((void *)i + 233);
    uint64_t v61 = v11;
    unint64_t v62 = a1;
    uint64_t v14 = v67;
    while (1)
    {
      id v15 = v64 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a1 + 8 * v7);
      uint64_t v16 = v15;
      uint64_t v6 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v17 = [v15 itemProvider];
      uint64_t v18 = sub_1003C555C();
      uint64_t v20 = v19;

      if (!v20)
      {
        swift_bridgeObjectRelease();
        id v36 = [v16 itemProvider];
        id v37 = [v36 registeredTypeIdentifiers];

        uint64_t v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v39 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.debug.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = v63;
        *(void *)(v40 + 56) = &type metadata for String;
        *(void *)(v40 + 64) = sub_100073F48();
        unint64_t v41 = v53 | 0x8000000000000000;
        *(void *)(v40 + 32) = 0xD00000000000003CLL;
        *(void *)(v40 + 40) = v41;
        *(void *)(v40 + 96) = sub_1000CBE70(&qword_10070AEB0);
        *(void *)(v40 + 104) = sub_100073DF0((unint64_t *)&qword_10070B660, &qword_10070AEB0);
        *(void *)(v40 + 72) = v38;
        os_log(_:dso:log:type:_:)();
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      id v21 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      uint64_t v69 = v7 - 3;
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v63;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_100073F48();
      *(void *)(v22 + 32) = 0xD00000000000003CLL;
      *(void *)(v22 + 40) = v59;
      *(void *)(v22 + 96) = &type metadata for String;
      *(void *)(v22 + 104) = v23;
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 72) = v18;
      *(void *)(v22 + 80) = v20;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      dispatch_group_enter(v14);
      id v24 = [v16 itemProvider];
      uint64_t v10 = (char *)String._bridgeToObjectiveC()();
      unint64_t v25 = (void *)swift_allocObject();
      uint64_t v27 = v65;
      uint64_t v26 = v66;
      v25[2] = v14;
      v25[3] = v26;
      v25[4] = v16;
      v25[5] = v18;
      v25[6] = v20;
      v25[7] = v27;
      v25[8] = v68;
      uint64_t v75 = sub_1004A1620;
      uint64_t v76 = v25;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v72 = v13;
      uint64_t v73 = sub_1003C69B0;
      uint64_t v74 = &unk_1006AF998;
      id v28 = _Block_copy(&aBlock);
      id v29 = v14;
      id v30 = v26;
      uint64_t v31 = v61;
      id v32 = v16;
      id v33 = v27;
      swift_retain();
      swift_release();
      id v34 = [v24 loadInPlaceFileRepresentationForTypeIdentifier:v10 completionHandler:v28];
      id v35 = v28;
      a1 = v62;
      _Block_release(v35);

      ++v7;
      if (v69 == v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v52;
        uint64_t v7 = v51;
        uint64_t v10 = v50;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease();
LABEL_15:
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v42 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v43 = (void *)swift_allocObject();
  uint64_t v44 = v54;
  uint64_t v45 = v55;
  v43[2] = v54;
  v43[3] = v45;
  v43[4] = v68;
  uint64_t v75 = sub_1004A169C;
  uint64_t v76 = v43;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v72 = 1107296256;
  uint64_t v73 = sub_1000666D8;
  uint64_t v74 = &unk_1006AF9E8;
  uint64_t v46 = _Block_copy(&aBlock);
  swift_retain();
  sub_1000C0640(v44);
  static DispatchQoS.unspecified.getter();
  unint64_t v70 = _swiftEmptyArrayStorage;
  sub_1004A0C6C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  uint64_t v47 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  dispatch_group_t v48 = v67;
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v46);

  (*(void (**)(char *, char **))(v7 + 8))(v47, v6);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v58);
  swift_release();
  swift_release();
}

uint64_t sub_10049FEDC(void *a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v40 = a2;
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1004A14A0;
  *(void *)(v11 + 24) = v10;
  uint64_t v42 = v11;
  uint64_t v43 = v10;
  swift_retain_n();
  id v39 = a4;
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v9);
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1005A0230;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_100073F48();
  *(void *)(v15 + 32) = 0xD000000000000044;
  *(void *)(v15 + 40) = 0x80000001005F8EF0;
  uint64_t v41 = v13;
  uint64_t v16 = *(void *)(v13 + 16);
  *(void *)(v15 + 96) = &type metadata for Int;
  *(void *)(v15 + 104) = &protocol witness table for Int;
  *(void *)(v15 + 72) = v16;
  id v17 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v15 + 136) = &type metadata for Int;
  *(void *)(v15 + 144) = &protocol witness table for Int;
  *(void *)(v15 + 112) = v19;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v20 = [a1 items];
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v23 = v42;
  uint64_t v24 = v41;
  swift_bridgeObjectRelease();
  if (v16 != v22)
  {
    swift_bridgeObjectRelease();
    id v35 = [a1 items];
    unint64_t v36 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v36, v40, (uint64_t)sub_1004A1BCC, v23);
    swift_release();
    swift_release();
    goto LABEL_17;
  }
  if (v16)
  {
    uint64_t v44 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t v25 = (void **)(v24 + 40);
    do
    {
      uint64_t v26 = *v25;
      v25 += 2;
      id v27 = v26;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v16;
    }
    while (v16);
  }
  id v28 = v39;
  unint64_t v29 = swift_bridgeObjectRetain();
  unint64_t v30 = (unint64_t)sub_10049DA6C(v29);
  swift_bridgeObjectRelease();

  if (v30 >> 62)
  {
    if (_CocoaArrayWrapper.endIndex.getter() >= 1) {
      goto LABEL_11;
    }
LABEL_16:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*(uint64_t *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1) {
    goto LABEL_16;
  }
LABEL_11:
  id v31 = [self defaultManager];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v33 = [v31 eligibleActionsForDroppingItems:isa underItem:v28];

  type metadata accessor for FPAction(0);
  sub_1004A0C6C((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
  uint64_t v34 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10049EB74(v30, v28, v34, v40, 0, 0);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1004A048C(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(void), uint64_t a7)
{
  uint64_t v46 = a2;
  uint64_t v12 = type metadata accessor for UTType();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (void *)swift_allocObject();
  _OWORD v16[2] = a4;
  v16[3] = a5;
  uint64_t v45 = a5;
  uint64_t v42 = a6;
  v16[4] = a6;
  v16[5] = a7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1004A0CF4;
  *(void *)(v17 + 24) = v16;
  uint64_t v49 = v17;
  swift_retain_n();
  id v18 = a4;
  uint64_t v43 = a7;
  uint64_t v44 = v18;
  swift_retain();
  static UTType.item.getter();
  swift_getObjectType();
  sub_10049C790(a1, (uint64_t)v15);
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t v21 = (void *)static DOCLog.UI.getter();
  int v47 = static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005A0230;
  *(void *)(v22 + 56) = &type metadata for String;
  *(void *)(v22 + 64) = sub_100073F48();
  *(void *)(v22 + 32) = 0xD000000000000044;
  *(void *)(v22 + 40) = 0x80000001005F8EF0;
  uint64_t v48 = v20;
  uint64_t v23 = *(void *)(v20 + 16);
  *(void *)(v22 + 96) = &type metadata for Int;
  *(void *)(v22 + 104) = &protocol witness table for Int;
  *(void *)(v22 + 72) = v23;
  id v24 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v22 + 136) = &type metadata for Int;
  *(void *)(v22 + 144) = &protocol witness table for Int;
  *(void *)(v22 + 112) = v26;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v27 = [a1 items];
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = v48;
  swift_bridgeObjectRelease();
  if (v23 == v29)
  {
    id v31 = _swiftEmptyArrayStorage;
    if (v23)
    {
      uint64_t v50 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      id v32 = (void **)(v30 + 40);
      id v33 = v46;
      id v35 = v42;
      uint64_t v34 = v43;
      do
      {
        unint64_t v36 = *v32;
        v32 += 2;
        id v37 = v36;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v23;
      }
      while (v23);
      id v31 = v50;
    }
    else
    {
      id v33 = v46;
      id v35 = v42;
      uint64_t v34 = v43;
    }
    sub_100315818((unint64_t)v31, v33, v44, v45, v35, v34);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v38 = [a1 items];
    unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10049E148(v39, v46, (uint64_t)sub_1004A0D00, v49);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

void *sub_1004A0904(uint64_t a1)
{
  return sub_1004A0E1C(a1, (uint64_t *)&unk_1007179E0);
}

void sub_1004A0910(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1000CBE70(&qword_1007177C0);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1004A0C6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004A0CB4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004A0CF4(unint64_t a1, void *a2)
{
  return sub_100315818(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1004A0D00(uint64_t a1, uint64_t a2)
{
  return sub_10049A21C(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1004A0D08()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004A0D48(uint64_t a1)
{
  sub_10049A300(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1004A0D54()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004A0D9C()
{
  return sub_10049A3F4(*(void *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1004A0DA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1004A0E10(uint64_t a1)
{
  return sub_1004A0E1C(a1, &qword_100717878);
}

void *sub_1004A0E1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1000CBE70(a2);
    uint64_t v4 = static _SetStorage.allocate(capacity:)();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v32 = v2;
    uint64_t v33 = a1 + 32;
    while (1)
    {
      uint64_t v7 = *(void **)(v33 + 8 * v5);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v8 = v7;
      String.hash(into:)();
      Swift::Int v9 = Hasher._finalize()();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v12 = v9 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = *(void *)(v6 + 8 * (v12 >> 6));
      uint64_t v15 = 1 << v12;
      if (((1 << v12) & v14) != 0)
      {
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;
        if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        uint64_t result = (void *)swift_bridgeObjectRelease();
        if (v21) {
          goto LABEL_4;
        }
        uint64_t v22 = ~v11;
        while (1)
        {
          unint64_t v12 = (v12 + 1) & v22;
          unint64_t v13 = v12 >> 6;
          uint64_t v14 = *(void *)(v6 + 8 * (v12 >> 6));
          uint64_t v15 = 1 << v12;
          if ((v14 & (1 << v12)) == 0) {
            break;
          }
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;
          if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26) {
            goto LABEL_3;
          }
          char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          uint64_t result = (void *)swift_bridgeObjectRelease();
          if (v28) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v6 + 8 * v13) = v15 | v14;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v8;
      uint64_t v29 = *(void *)(v4 + 16);
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30)
      {
        __break(1u);
        return result;
      }
      *(void *)(v4 + 16) = v31;
LABEL_5:
      if (++v5 == v32) {
        return (void *)v4;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

Swift::Int sub_1004A1048(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1000CBE70((uint64_t *)&unk_100717890);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(void *)(v6 + 8 * v4);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v7);
      Swift::Int result = Hasher._finalize()();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(void *)(v14 + 8 * v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(void *)(v14 + 8 * v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(void *)(v14 + 8 * v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_1004A118C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void **)(a1 + 168);
  uint64_t v4 = *(void **)(a1 + 184);
  id v5 = *(id *)a1;
  id v6 = v2;
  id v7 = v3;
  id v8 = v4;
  return a1;
}

void sub_1004A11D8(void *a1)
{
}

void sub_1004A11EC(void *a1)
{
}

void sub_1004A1200(void *a1, unint64_t *a2)
{
  id v4 = [a1 localDragSession];
  swift_unknownObjectRelease();
  if (!v4) {
    return;
  }
  unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
  id v5 = [a1 items];
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_22;
  }
LABEL_4:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v12 = v7;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v6 + 8 * v8 + 32);
      }
      unint64_t v10 = v9;
      if ([v9 localObject])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v14, 0, sizeof(v14));
      }
      sub_1000516C4((uint64_t)v14, (uint64_t)v15);
      if (v16)
      {
        sub_10009E6C4(0, a2);
        if (swift_dynamicCast())
        {
          id v11 = v13;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          uint64_t v7 = v12;
        }
        else
        {
        }
      }
      else
      {

        sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_100705D60);
      }
      ++v8;
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004A1498(uint64_t a1, uint64_t a2)
{
  return sub_100499F04(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1004A14A0(uint64_t a1, void *a2)
{
  return sub_1001A72D4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_1004A14A8(uint64_t a1, void *a2)
{
  return sub_100499854(a1, a2);
}

uint64_t sub_1004A14CC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004A1514(uint64_t a1)
{
  return sub_100499C9C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1004A1520()
{
  return sub_1004A1940((void (*)(void))&_swift_errorRelease);
}

void sub_1004A1538(unint64_t a1, void *a2)
{
}

uint64_t sub_1004A1540()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004A1580(unint64_t a1, void *a2)
{
  return sub_100107818(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1004A1588()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A15C0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1004A1620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10049A510(a1, a2, a3, *(NSObject **)(v3 + 16), *(void **)(v3 + 24), *(void **)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(void **)(v3 + 56), *(void *)(v3 + 64));
}

uint64_t sub_1004A1654()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004A169C()
{
  return sub_10049B978(*(void *)(v0 + 16));
}

uint64_t sub_1004A16A8()
{
  return sub_1004A1940((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1004A16C0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004A16F8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1004A17F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  unint64_t v6 = v1[3];
  uint64_t v7 = (void *)v1[4];
  uint64_t v8 = (void *)v1[5];
  uint64_t v9 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10049B570(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_1004A189C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1004A18F4()
{
  sub_10049B0F8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1004A1908()
{
  return sub_1004A1940((void (*)(void))&_swift_release);
}

Swift::Int sub_1004A1920()
{
  return sub_10049B4B0();
}

uint64_t sub_1004A1928()
{
  return sub_1004A1940((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_1004A1940(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return _swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1004A1988()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004A19C0(uint64_t a1, char a2, uint64_t a3)
{
  sub_1004996F0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1004A19C8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004A1A08(uint64_t a1, void (*a2)(void, void, void))
{
  return sub_100498C54(a1, a2, *(void **)(v2 + 16), *(void (**)(char *, void, void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1004A1A14()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1004A1AA4()
{
  type metadata accessor for URL();
  if (*(unsigned char *)(v0 + 16) == 1) {
    URL.stopAccessingSecurityScopedResource()();
  }
}

void sub_1004A1B0C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  sub_1004986AC(a1, a2, a3, *(void *)(v3 + 16));
}

ValueMetadata *_s13DOCFPDragInfoVMa()
{
  return &_s13DOCFPDragInfoVN;
}

id sub_1004A1C70()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton];
  }
  else
  {
    id v4 = sub_1004A1CD4(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1004A1CD4(void *a1)
{
  int v47 = a1;
  uint64_t v1 = type metadata accessor for UIShape();
  uint64_t v45 = *(void *)(v1 - 8);
  uint64_t v46 = v1;
  __chkstk_darwin(v1);
  id v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070D500);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v44 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v51 = (char *)&v44 - v15;
  static UIButton.Configuration.borderless()();
  type metadata accessor for DOCButton();
  unint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v17(v13, v16, v7);
  uint64_t v48 = v7;
  v17(v10, v13, v7);
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v18 = (void *)UIButton.init(configuration:primaryAction:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v49 = v8 + 8;
  uint64_t v50 = v19;
  v19(v13, v7);
  [v18 setUserInteractionEnabled:0];
  [v18 setMinimumContentSizeCategory:UIContentSizeCategoryLarge];
  [v18 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  sub_10009E6C4(0, &qword_10070D210);
  id v20 = v18;
  static UIShape.circle.getter();
  UIShape.inset(by:)();
  uint64_t v22 = v45;
  uint64_t v21 = v46;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v3, v46);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v6, 0, 1, v21);
  uint64_t v23 = (void *)UIHoverStyle.init(shape:)();
  [v20 setHoverStyle:v23];

  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v47;
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1004A2DEC;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  aBlock[3] = &unk_1006AFE58;
  uint64_t v26 = _Block_copy(aBlock);
  id v27 = v20;
  swift_release();
  [v27 setConfigurationUpdateHandler:v26];
  _Block_release(v26);

  [v25 addSubview:v27];
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  char v28 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1005A1560;
  id v30 = [v27 leadingAnchor];
  id v31 = [v25 leadingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v25 trailingAnchor];
  id v34 = [v27 trailingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  *(void *)(v29 + 40) = v35;
  id v36 = [v27 topAnchor];
  id v37 = [v25 topAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  *(void *)(v29 + 48) = v38;
  id v39 = [v25 bottomAnchor];
  id v40 = [v27 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  *(void *)(v29 + 56) = v41;
  aBlock[0] = v29;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v28 activateConstraints:isa];

  v50(v51, v48);
  return v27;
}

uint64_t sub_1004A236C(void *a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for UIButton.Configuration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = (char *)result;
    UIButton.configuration.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {

      return sub_1002B920C((uint64_t)v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      sub_10009BF68(0, 1, v13[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance]);
      UIButton.Configuration.image.setter();
      id v14 = [self configurationWithTextStyle:*(void *)&v13[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] scale:*(void *)&v13[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics + 8]];
      UIButton.Configuration.preferredSymbolConfigurationForImage.setter();

      UIButton.Configuration.contentInsets.setter();
      id v15 = [v13 traitCollection];
      id v16 = [v15 userInterfaceIdiom];

      if (v16 == (id)6) {
        id v17 = [self whiteColor];
      }
      else {
        id v18 = *(id *)&v13[OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor];
      }
      UIButton.Configuration.baseForegroundColor.setter();
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v11, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
      UIButton.configuration.setter();
      uint64_t v19 = (void *)UIButton.Configuration.image.getter();
      id v20 = v19;
      if (v19) {

      }
      [a1 setHidden:v20 == 0];
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  return result;
}

void sub_1004A26CC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView;
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView])
  {
    id v2 = [objc_allocWithZone((Class)DOCDownloadProgressView) init];
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v2 setActiveStrokeColor:*(void *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor]];
    [v2 setInactiveStrokeColor:*(void *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor]];
    [v2 setObservedProgress:*(void *)&v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress]];
    [v2 setCanShowStopButton:v0[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton]];
    [v0 addSubview:v2];
    static NSDirectionalEdgeInsets.uniform(_:)();
    id v3 = (id)DOCConstraintsToResizeWithSuperview();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    Array<A>.doc_setActive(_:)();
    swift_bridgeObjectRelease();
    uint64_t v4 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;
  }
}

void sub_1004A2850()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView);
  if (v1)
  {
    id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress);
    id v7 = *(id *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView);
    if (v2)
    {
      id v3 = v1;
      BOOL v4 = ([v2 isFinished] & 1) != 0
        || *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance) != 7;
      uint64_t v6 = v7;
    }
    else
    {
      id v5 = v7;
      uint64_t v6 = v7;
      BOOL v4 = 1;
    }
    [v6 setHidden:v4];
    [v7 setCanShowStopButton:*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton)];
    [v7 setActiveStrokeColor:*(void *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor)];
    [v7 setInactiveStrokeColor:*(void *)(v0 + OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor)];
  }
}

id sub_1004A2968(double a1, double a2, double a3, double a4)
{
  v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton] = 0;
  v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] = 2;
  *(void *)&v4[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] = UIFontTextStyleBody;
  uint64_t v9 = OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor;
  uint64_t v10 = self;
  uint64_t v11 = v4;
  uint64_t v12 = UIFontTextStyleBody;
  *(void *)&v4[v9] = [v10 secondaryLabelColor];
  uint64_t v13 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor;
  id v14 = self;
  *(void *)&v11[v13] = [v14 defaultProgressColor];
  uint64_t v15 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor;
  *(void *)&v11[v15] = [v14 defaultTrackColor];
  id v16 = &v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics];
  *id v16 = 0;
  v16[1] = 2;
  v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress] = 0;

  v18.receiver = v11;
  v18.super_class = (Class)type metadata accessor for DOCItemStatusView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1004A2B14(void *a1)
{
  v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_canShowStopButton] = 0;
  v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusAppearance] = 2;
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCItemStatusView_statusImageFontStyle] = UIFontTextStyleBody;
  uint64_t v3 = OBJC_IVAR____TtC5Files17DOCItemStatusView_iconColor;
  BOOL v4 = self;
  id v5 = v1;
  uint64_t v6 = UIFontTextStyleBody;
  *(void *)&v1[v3] = [v4 secondaryLabelColor];
  uint64_t v7 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressCompletedColor;
  uint64_t v8 = self;
  *(void *)&v5[v7] = [v8 defaultProgressColor];
  uint64_t v9 = OBJC_IVAR____TtC5Files17DOCItemStatusView_progressBackgroundRingColor;
  *(void *)&v5[v9] = [v8 defaultTrackColor];
  uint64_t v10 = &v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_metrics];
  *uint64_t v10 = 0;
  v10[1] = 2;
  v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_hoverEffectsAllowedIfInteractionDisabled] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView____lazy_storage___statusButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_progressView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC5Files17DOCItemStatusView_observedProgress] = 0;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for DOCItemStatusView();
  [super initWithCoder:a1];

  return v11;
}

id sub_1004A2CB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemStatusView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCItemStatusView()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCItemStatusView.Metrics()
{
  return &type metadata for DOCItemStatusView.Metrics;
}

uint64_t sub_1004A2DB4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A2DEC(void *a1)
{
  return sub_1004A236C(a1);
}

void *sub_1004A2DF4()
{
  sub_1000CBE70((uint64_t *)&unk_100717C30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10059B760;
  *(void *)(inited + 32) = 7893604;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(void *)(inited + 48) = &off_10068B280;
  *(void *)(inited + 56) = 0x72616365646973;
  *(void *)(inited + 64) = 0xE700000000000000;
  *(void *)(inited + 72) = &off_10068B350;
  uint64_t result = (void *)sub_100495DD4(inited);
  off_100717AA0 = result;
  return result;
}

uint64_t sub_1004A2E78(char *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v120 = a5;
  uint64_t v119 = a4;
  uint64_t v118 = a3;
  uint64_t v131 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v131 - 8);
  uint64_t v8 = __chkstk_darwin(v131);
  uint64_t v116 = (char *)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v11 = (char *)&v114 - v10;
  uint64_t v12 = swift_allocObject();
  uint64_t v117 = v12;
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  uint64_t v115 = v12 + 16;
  unint64_t v138 = a2;
  unint64_t v134 = a1;
  uint64_t v129 = v11;
  if (!a1) {
    goto LABEL_26;
  }
  uint64_t v133 = v7;
  objc_super v13 = &a1[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
  if (a1[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
  {
    id v14 = a1;
    goto LABEL_5;
  }
  uint64_t v15 = *(void **)v13;
  uint64_t v16 = *((void *)v13 + 1);
  id v17 = a1;
  sub_10007896C(v15, v16, 0);

  a2 = v138;
  id v14 = (char *)swift_unknownObjectRelease();
  if (!v16)
  {

    uint64_t v7 = v133;
LABEL_26:
    uint64_t v136 = (void *)sub_100495EF8((uint64_t)_swiftEmptyArrayStorage);
LABEL_33:
    unint64_t v143 = (unint64_t)_swiftEmptyArrayStorage;
    if (a2 >> 62) {
      goto LABEL_87;
    }
    uint64_t v46 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v46)
    {
LABEL_88:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v109 = v143;
      uint64_t v110 = (void *)swift_allocObject();
      uint64_t v111 = v117;
      v110[2] = v118;
      v110[3] = v111;
      uint64_t v112 = v120;
      v110[4] = v119;
      v110[5] = v112;
      swift_retain();
      swift_retain();
      sub_1004A52B0(v109, (uint64_t)sub_1004A52A4, (uint64_t)v110);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
LABEL_35:
    unint64_t v48 = 0;
    uint64_t v124 = 0;
    unint64_t v49 = a2 & 0xC000000000000001;
    unint64_t v132 = a2 + 32;
    uint64_t v133 = a2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v130 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v123 = &v140;
    *(void *)&long long v47 = 136315394;
    long long v122 = v47;
    Swift::String v121 = (char *)&type metadata for Any + 8;
    while (1)
    {
      if (v49)
      {
        uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v44 = __OFADD__(v48++, 1);
        if (v44) {
          goto LABEL_85;
        }
      }
      else
      {
        if (v48 >= *(void *)(v133 + 16)) {
          goto LABEL_86;
        }
        uint64_t v7 = *(void *)(v132 + 8 * v48);
        swift_unknownObjectRetain();
        BOOL v44 = __OFADD__(v48++, 1);
        if (v44)
        {
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          swift_bridgeObjectRetain();
          uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
          if (!v46) {
            goto LABEL_88;
          }
          goto LABEL_35;
        }
      }
      uint64_t v50 = sub_1004A4EA4((void *)v7);
      if (v51)
      {
        uint64_t v52 = v50;
        unint64_t v53 = v51;
        unint64_t v137 = v7;
        uint64_t v135 = v48;
        swift_bridgeObjectRetain();
        uint64_t v54 = 4;
        do
        {
          uint64_t v55 = v54 - 4;
          if (v49)
          {
            a2 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v56 = v54 - 3;
            if (__OFADD__(v55, 1)) {
              goto LABEL_84;
            }
          }
          else
          {
            a2 = *(void *)(a2 + 8 * v54);
            swift_unknownObjectRetain();
            uint64_t v56 = v54 - 3;
            if (__OFADD__(v55, 1))
            {
LABEL_84:
              __break(1u);
              goto LABEL_85;
            }
          }
          id v57 = [(id)a2 filename];
          uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v60 = v59;

          unint64_t v141 = (void *)v58;
          unint64_t v142 = v60;
          uint64_t v139 = v52;
          unint64_t v140 = v53;
          sub_10009D28C();
          uint64_t v7 = StringProtocol.caseInsensitiveCompare<A>(_:)();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          if (!v7)
          {
            a2 = v138;
            swift_bridgeObjectRelease();
            id v66 = v129;
            static Logger.UI.getter();
            dispatch_group_t v67 = (void *)v137;
            swift_unknownObjectRetain_n();
            swift_bridgeObjectRetain();
            uint64_t v68 = Logger.logObject.getter();
            os_log_type_t v69 = static os_log_type_t.debug.getter();
            uint64_t v7 = v69;
            if (os_log_type_enabled(v68, v69))
            {
              uint64_t v70 = swift_slowAlloc();
              LODWORD(v128) = v7;
              uint64_t v7 = v70;
              uint64_t v127 = swift_slowAlloc();
              unint64_t v141 = (void *)v127;
              *(_DWORD *)uint64_t v7 = v122;
              uint64_t v125 = v7 + 4;
              id v71 = [v67 filename];
              uint64_t v72 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              os_log_t v126 = v68;
              unint64_t v74 = v73;

              uint64_t v75 = v72;
              a2 = v138;
              uint64_t v139 = sub_10009B0E4(v75, v74, (uint64_t *)&v141);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v7 + 12) = 2080;
              swift_bridgeObjectRetain();
              uint64_t v139 = sub_10009B0E4(v52, v53, (uint64_t *)&v141);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              os_log_t v76 = v126;
              _os_log_impl((void *)&_mh_execute_header, v126, (os_log_type_t)v128, "Found related file in source array (%s => %s", (uint8_t *)v7, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              swift_unknownObjectRelease();
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_unknownObjectRelease_n();
            }
            (*v130)(v66, v131);
            unint64_t v48 = v135;
            goto LABEL_37;
          }
          ++v54;
          a2 = v138;
        }
        while (v56 != v46);
        swift_bridgeObjectRelease();
        uint64_t v61 = (void *)v137;
        if (v134)
        {
          unint64_t v62 = &v134[OBJC_IVAR____TtC5Files17DOCNodeCollection_type];
          if (v134[OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16])
          {
            long long v63 = *(char **)v62;
            uint64_t v64 = *((void *)v62 + 1);
            uint64_t v65 = v134;
            goto LABEL_63;
          }
          uint64_t v78 = *(char **)v62;
          uint64_t v77 = *((void *)v62 + 1);
          unint64_t v79 = v134;
          sub_10007896C(v78, v77, 0);

          uint64_t v65 = (char *)swift_unknownObjectRelease();
          if (v77)
          {
            long long v63 = *(char **)v62;
            if (v62[16])
            {
              uint64_t v64 = *((void *)v62 + 1);
LABEL_63:
              uint64_t v128 = &v114;
              uint64_t v127 = *(void *)&v63[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_stateLock];
              id v80 = (os_unfair_lock_s *)v127;
              uint64_t v81 = __chkstk_darwin(v65);
              *(&v114 - 2) = (uint64_t)v63;
              __chkstk_darwin(v81);
              *(&v114 - 2) = (uint64_t)sub_1000CB14C;
              *(&v114 - 1) = v82;
              NSString v83 = v80 + 4;
              sub_10007896C(v63, v64, 1);
              swift_retain();
              os_unfair_lock_lock(v80 + 4);
              uint64_t v84 = v64;
              uint64_t v85 = v63;
              uint64_t v86 = v124;
              sub_1000CB0D4(&v141);
              uint64_t v124 = v86;
              os_unfair_lock_unlock(v83);
              swift_release();
              sub_1000C71C8(v85, v84, 1);
              uint64_t v61 = (void *)v137;
            }
            else
            {
              Class v106 = v63;
              id v107 = [v106 items];
              sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
              unint64_t v108 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              swift_bridgeObjectRetain();
              if (v108 >> 62)
              {
                sub_1000CBE70((uint64_t *)&unk_100706730);
                _bridgeCocoaArray<A>(_:)();

                swift_bridgeObjectRelease_n();
              }
              else
              {
                dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();

                swift_bridgeObjectRelease();
              }
            }
            sub_1000CBE70((uint64_t *)&unk_100706730);
            uint64_t v7 = Array<A>.contains(node:)();
            swift_bridgeObjectRelease();
            if (v7)
            {
              unint64_t v141 = (void *)v52;
              unint64_t v142 = v53;
              uint64_t v87 = StringProtocol.localizedLowercase.getter();
              uint64_t v89 = v88;
              swift_bridgeObjectRelease();
              uint64_t v7 = (uint64_t)v136;
              if (v136[2] && (uint64_t v90 = sub_100042F50(v87, v89), (v91 & 1) != 0))
              {
                uint64_t v92 = *(void **)(*(void *)(v7 + 56) + 8 * v90);
                swift_unknownObjectRetain();
                swift_bridgeObjectRelease();
                id v93 = v116;
                static Logger.UI.getter();
                swift_unknownObjectRetain_n();
                swift_unknownObjectRetain_n();
                id v94 = Logger.logObject.getter();
                os_log_type_t v95 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v94, v95))
                {
                  uint64_t v96 = swift_slowAlloc();
                  uint64_t v128 = (uint64_t *)swift_slowAlloc();
                  unint64_t v141 = v128;
                  *(_DWORD *)uint64_t v96 = v122;
                  uint64_t v127 = v96 + 4;
                  os_log_type_t v97 = v95;
                  id v98 = [v61 filename];
                  uint64_t v99 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v101 = v100;

                  uint64_t v139 = sub_10009B0E4(v99, v101, (uint64_t *)&v141);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_unknownObjectRelease_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v96 + 12) = 2080;
                  uint64_t v127 = v96 + 14;
                  id v102 = [v92 filename];
                  uint64_t v103 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                  unint64_t v105 = v104;

                  uint64_t v139 = sub_10009B0E4(v103, v105, (uint64_t *)&v141);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_unknownObjectRelease_n();
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v94, v97, "Found related file in current node collection (%s => %s", (uint8_t *)v96, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();

                  (*v130)(v116, v131);
                }
                else
                {

                  swift_unknownObjectRelease_n();
                  swift_unknownObjectRelease_n();
                  (*v130)(v93, v131);
                }
                swift_unknownObjectRetain();
                uint64_t v7 = v115;
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v7 & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
                {
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                  uint64_t v7 = v115;
                }
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();

                swift_unknownObjectRelease();
LABEL_81:
                swift_unknownObjectRelease();
              }
              else
              {

                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
              }
              a2 = v138;
              unint64_t v48 = v135;
              goto LABEL_37;
            }

            swift_bridgeObjectRelease();
            goto LABEL_81;
          }

          a2 = v138;
        }
        swift_bridgeObjectRelease();
        swift_unknownObjectRetain();
        uint64_t v7 = (uint64_t)&v143;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v143 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        swift_unknownObjectRelease();
        unint64_t v48 = v135;
      }
      else
      {
        swift_unknownObjectRelease();
      }
LABEL_37:
      if (v48 == v46) {
        goto LABEL_88;
      }
    }
  }
LABEL_5:
  unint64_t v18 = sub_10007CC5C((uint64_t)v14);
  uint64_t v19 = v18;
  if (v18 >> 62) {
    goto LABEL_30;
  }
  uint64_t v20 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    uint64_t v136 = &_swiftEmptyDictionarySingleton;
LABEL_32:
    swift_bridgeObjectRelease();

    uint64_t v7 = v133;
    goto LABEL_33;
  }
LABEL_7:
  uint64_t v136 = &_swiftEmptyDictionarySingleton;
  unint64_t v137 = v19 & 0xC000000000000001;
  a2 = 4;
  uint64_t v135 = v19;
  while (1)
  {
    unint64_t v22 = a2 - 4;
    if (v137)
    {
      uint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      unint64_t v24 = a2 - 3;
      if (__OFADD__(v22, 1)) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v23 = (void *)swift_unknownObjectRetain();
      unint64_t v24 = a2 - 3;
      if (__OFADD__(v22, 1))
      {
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        swift_bridgeObjectRetain_n();
        uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v20) {
          goto LABEL_31;
        }
        goto LABEL_7;
      }
    }
    uint64_t v25 = v23;
    id v26 = [v23 filename];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    unint64_t v141 = (void *)v19;
    unint64_t v142 = v28;
    sub_10009D28C();
    uint64_t v29 = StringProtocol.localizedLowercase.getter();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v136;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v141 = (void *)v32;
    unint64_t v35 = sub_100042F50(v29, v31);
    uint64_t v36 = *(void *)(v32 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      goto LABEL_28;
    }
    uint64_t v19 = v34;
    if (*(void *)(v32 + 24) >= v38)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10035AC68();
      }
      goto LABEL_21;
    }
    sub_1003523CC(v38, isUniquelyReferenced_nonNull_native);
    uint64_t v39 = sub_100042F50(v29, v31);
    if ((v19 & 1) != (v40 & 1)) {
      break;
    }
    unint64_t v35 = v39;
LABEL_21:
    id v41 = v141;
    uint64_t v136 = v141;
    if (v19)
    {
      uint64_t v21 = v141[7];
      swift_unknownObjectRelease();
      *(void *)(v21 + 8 * v35) = v25;
    }
    else
    {
      v141[(v35 >> 6) + 8] |= 1 << v35;
      uint64_t v42 = (uint64_t *)(v41[6] + 16 * v35);
      *uint64_t v42 = v29;
      v42[1] = v31;
      *(void *)(v41[7] + 8 * v35) = v25;
      uint64_t v43 = v41[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_29;
      }
      v41[2] = v45;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++a2;
    uint64_t v19 = v135;
    if (v24 == v20)
    {
      swift_bridgeObjectRelease();
      a2 = v138;
      goto LABEL_32;
    }
  }
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1004A3CF4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v46 = a3;
  uint64_t v44 = a2;
  uint64_t v50 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  unint64_t v48 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  long long v47 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v45 = dispatch_group_create();
  if (!(a1 >> 62))
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    objc_super v13 = &off_10059B000;
    if (v12) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v26 = (void *)static OS_dispatch_queue.main.getter();
    unint64_t v27 = (void *)swift_allocObject();
    v27[2] = a4;
    v27[3] = a5;
    v27[4] = v46;
    uint64_t v56 = sub_1003ED600;
    id v57 = v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v53 = *((void *)v13 + 233);
    uint64_t v54 = sub_1000666D8;
    uint64_t v55 = &unk_1006B0048;
    unint64_t v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    uint64_t v29 = v47;
    static DispatchQoS.unspecified.getter();
    unint64_t v51 = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    uint64_t v30 = v48;
    uint64_t v31 = v50;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch_group_t v32 = v45;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();

    _Block_release(v28);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v49);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  objc_super v13 = &off_10059B000;
  if (!v12) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t result = sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v43 = result;
  if (v12 >= 1)
  {
    uint64_t v33 = a4;
    uint64_t v34 = a5;
    uint64_t v15 = 0;
    uint64_t v39 = &v54;
    unint64_t v40 = a1 & 0xC000000000000001;
    uint64_t v36 = v8;
    uint64_t v38 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v35 = v10;
    BOOL v37 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v41 = v12;
    unint64_t v42 = a1;
    id v17 = v47;
    uint64_t v16 = v48;
    uint64_t v18 = v50;
    do
    {
      if (v40)
      {
        uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v19 = *(void *)(a1 + 8 * v15 + 32);
        swift_retain();
      }
      ++v15;
      dispatch_group_t v20 = v45;
      dispatch_group_enter(v45);
      uint64_t v21 = (void *)swift_allocObject();
      v21[2] = v20;
      uint64_t v21[3] = v19;
      v21[4] = v44;
      void v21[5] = v46;
      uint64_t v22 = *(void *)(v19 + 24);
      *(void *)(v19 + 24) = sub_1004A589C;
      *(void *)(v19 + 32) = v21;
      swift_retain();
      swift_retain();
      uint64_t v23 = v20;
      swift_retain();
      sub_1000A7258(v22);
      unint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v56 = sub_1004A58A8;
      id v57 = (void *)v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v53 = 1107296256;
      uint64_t v54 = sub_1000666D8;
      uint64_t v55 = &unk_1006AFFF8;
      uint64_t v25 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      long long aBlock = (void **)_swiftEmptyArrayStorage;
      sub_1001102E4();
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_1000B921C();
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v25);

      (*v38)(v16, v18);
      (*v37)(v17, v49);
      swift_release();
      swift_release();
      a1 = v42;
    }
    while (v41 != v15);
    swift_bridgeObjectRelease();
    uint64_t v8 = v36;
    uint64_t v10 = v35;
    a5 = v34;
    a4 = v33;
    objc_super v13 = &off_10059B000;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

void sub_1004A42BC(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5)
{
  dispatch_group_t v40 = a2;
  uint64_t v59 = a1;
  uint64_t v48 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v49 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v9 = *(void *)(a3 + 40);
  if (v9 >> 62) {
    goto LABEL_37;
  }
  uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v10; uint64_t v10 = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v12 = 0;
    long long v47 = a5 + 2;
    unint64_t v56 = v9 & 0xC000000000000001;
    unint64_t v50 = v9 + 32;
    uint64_t v51 = v9 & 0xFFFFFFFFFFFFFF8;
    uint64_t v13 = v59 & 0xFFFFFFFFFFFFFF8;
    uint64_t v54 = v59 & 0xFFFFFFFFFFFFFF8;
    if (v59 < 0) {
      uint64_t v13 = v59;
    }
    v39[1] = v13;
    unint64_t v58 = v59 & 0xC000000000000001;
    uint64_t v46 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v43 = &v62;
    unint64_t v55 = (unint64_t)v59 >> 62;
    *(void *)&long long v11 = 136315394;
    long long v42 = v11;
    uint64_t v41 = (char *)&type metadata for Any + 8;
    uint64_t v52 = v10;
    unint64_t v53 = v9;
    while (v56)
    {
      id v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v15 = __OFADD__(v12++, 1);
      if (v15) {
        goto LABEL_35;
      }
LABEL_14:
      uint64_t v16 = sub_1004A4EA4(v14);
      if (v17)
      {
        uint64_t v18 = v16;
        uint64_t v19 = v17;
        id v57 = v14;
        if (v55)
        {
          swift_bridgeObjectRetain();
          uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
          if (v20)
          {
LABEL_17:
            uint64_t v7 = 4;
            while (1)
            {
              a5 = (void *)(v7 - 4);
              if (v58)
              {
                uint64_t v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
                unint64_t v9 = v7 - 3;
                if (__OFADD__(a5, 1)) {
                  goto LABEL_34;
                }
              }
              else
              {
                uint64_t v21 = *(void **)(v59 + 8 * v7);
                swift_unknownObjectRetain();
                unint64_t v9 = v7 - 3;
                if (__OFADD__(a5, 1))
                {
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
              }
              id v22 = [v21 filename];
              uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v25 = v24;

              v60[0] = v23;
              v60[1] = v25;
              uint64_t v61 = v18;
              uint64_t v62 = v19;
              sub_10009D28C();
              a5 = (void *)StringProtocol.caseInsensitiveCompare<A>(_:)();
              swift_bridgeObjectRelease();
              if (!a5) {
                break;
              }
              swift_unknownObjectRelease();
              ++v7;
              if (v9 == v20) {
                goto LABEL_6;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            id v26 = v49;
            static Logger.UI.getter();
            unint64_t v27 = v57;
            swift_unknownObjectRetain_n();
            swift_unknownObjectRetain_n();
            unint64_t v28 = Logger.logObject.getter();
            os_log_type_t v29 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v28, v29))
            {
              uint64_t v30 = swift_slowAlloc();
              uint64_t v45 = swift_slowAlloc();
              v60[0] = v45;
              *(_DWORD *)uint64_t v30 = v42;
              uint64_t v44 = v30 + 4;
              id v31 = [v27 filename];
              uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v34 = v33;

              uint64_t v61 = sub_10009B0E4(v32, v34, v60);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v30 + 12) = 2080;
              uint64_t v44 = v30 + 14;
              id v35 = [v21 filename];
              uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v38 = v37;

              uint64_t v61 = sub_10009B0E4(v36, v38, v60);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_unknownObjectRelease_n();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v28, v29, "Found related file in parent node (%s => %s", (uint8_t *)v30, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_unknownObjectRelease_n();
              swift_unknownObjectRelease_n();
            }
            (*v46)(v26, v48);
            uint64_t v10 = v52;
            unint64_t v9 = v53;
            a5 = v47;
            swift_beginAccess();
            swift_unknownObjectRetain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
              a5 = v47;
            }
            uint64_t v7 = (uint64_t)a5;
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            swift_unknownObjectRelease();
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v20 = *(void *)(v54 + 16);
          swift_bridgeObjectRetain();
          if (v20) {
            goto LABEL_17;
          }
        }
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v52;
        unint64_t v9 = v53;
      }
LABEL_7:
      swift_unknownObjectRelease();
      if (v12 == v10) {
        goto LABEL_38;
      }
    }
    if (v12 >= *(void *)(v51 + 16)) {
      goto LABEL_36;
    }
    id v14 = *(void **)(v50 + 8 * v12);
    swift_unknownObjectRetain();
    BOOL v15 = __OFADD__(v12++, 1);
    if (!v15) {
      goto LABEL_14;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
  }
LABEL_38:
  swift_bridgeObjectRelease();
  dispatch_group_leave(v40);
}

void sub_1004A48E0(uint64_t a1, uint64_t a2, dispatch_group_t group, void *a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v7 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10059B760;
    id v9 = [a4 description];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_100073F48();
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v12;
    uint64_t v13 = _convertErrorToNSError(_:)();
    *(void *)(v8 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v8 + 104) = sub_10018DCDC();
    *(void *)(v8 + 72) = v13;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    dispatch_group_leave(group);
  }
  else
  {
    if (a1)
    {
      id v14 = (uint64_t *)(a5 + 16);
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      DOCNode.identifierKey.getter();
      swift_beginAccess();
      uint64_t v16 = *v14;
      if (*(void *)(*v14 + 16) && (unint64_t v17 = sub_10008E070((uint64_t)v25), (v18 & 1) != 0))
      {
        uint64_t v19 = *(void **)(*(void *)(v16 + 56) + 8 * v17);
        swift_endAccess();
        swift_retain();
        sub_10008E17C((uint64_t)v25);
      }
      else
      {
        swift_endAccess();
        sub_10008E17C((uint64_t)v25);
        type metadata accessor for DOCRelatedNodeObserver();
        uint64_t v19 = (void *)swift_allocObject();
        uint64_t v19[3] = 0;
        v19[4] = 0;
        v19[5] = _swiftEmptyArrayStorage;
        uint64_t v20 = type metadata accessor for DOCNodeCollection();
        uint64_t v21 = (void *)swift_unknownObjectRetain();
        uint64_t v22 = sub_10001A2F0(v21, 0, 0, 0x100000000uLL, v20, ObjectType);
        v19[2] = v22;
        *(void *)(v22 + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate + 8) = &off_1006AFE80;
        swift_unknownObjectWeakAssign();
      }
      swift_beginAccess();
      swift_unknownObjectRetain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v19[5] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v19[5] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      DOCNode.identifierKey.getter();
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v24 = *v14;
      *id v14 = 0x8000000000000000;
      sub_1003E1AB4((uint64_t)v19, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
      *id v14 = v24;
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)v25);
      swift_endAccess();
      swift_release();
      swift_unknownObjectRelease();
    }
    dispatch_group_leave(group);
  }
}

uint64_t sub_1004A4C58(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1004A4CD8(void (*a1)(void *))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1002F5B18(v2);
  swift_bridgeObjectRelease();
  a1(v3);
  return swift_release();
}

uint64_t type metadata accessor for DOCRelatedNodeMatcher()
{
  return self;
}

uint64_t sub_1004A4D78()
{
  sub_1000A7258(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCRelatedNodeObserver()
{
  return self;
}

void sub_1004A4DE4()
{
  sub_10019E3AC();
  uint64_t v1 = *(void (**)(void))(v0 + 24);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    sub_10007CC5C(v2);
    v1();
    sub_1000A7258((uint64_t)v1);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004A4E6C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004A4EA4(void *a1)
{
  uint64_t result = (uint64_t)[a1 filename];
  if (result)
  {
    uint64_t v2 = (void *)result;
    id v3 = [(id)result pathExtension];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::String v4 = String.lowercased()();
    swift_bridgeObjectRelease();
    uint64_t result = String.count.getter();
    if (result < 1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      id v26 = v2;
      if (qword_100705260 != -1) {
LABEL_55:
      }
        uint64_t result = swift_once();
      int64_t v5 = 0;
      os_log_type_t v29 = off_100717AA0;
      uint64_t v6 = 1 << *((unsigned char *)off_100717AA0 + 32);
      uint64_t v7 = -1;
      if (v6 < 64) {
        uint64_t v7 = ~(-1 << v6);
      }
      unint64_t v8 = v7 & *((void *)off_100717AA0 + 8);
      unint64_t v27 = (char *)off_100717AA0 + 64;
      int64_t v28 = (unint64_t)(v6 + 63) >> 6;
      while (1)
      {
        do
        {
LABEL_7:
          if (v8)
          {
            unint64_t v9 = __clz(__rbit64(v8));
            v8 &= v8 - 1;
            unint64_t v10 = v9 | (v5 << 6);
          }
          else
          {
            int64_t v11 = v5 + 1;
            if (__OFADD__(v5, 1)) {
              goto LABEL_54;
            }
            if (v11 >= v28)
            {
LABEL_50:
              swift_bridgeObjectRelease();

              return 0;
            }
            unint64_t v12 = *(void *)&v27[8 * v11];
            ++v5;
            if (!v12)
            {
              int64_t v5 = v11 + 1;
              if (v11 + 1 >= v28) {
                goto LABEL_50;
              }
              unint64_t v12 = *(void *)&v27[8 * v5];
              if (!v12)
              {
                int64_t v5 = v11 + 2;
                if (v11 + 2 >= v28) {
                  goto LABEL_50;
                }
                unint64_t v12 = *(void *)&v27[8 * v5];
                if (!v12)
                {
                  int64_t v13 = v11 + 3;
                  if (v13 >= v28) {
                    goto LABEL_50;
                  }
                  unint64_t v12 = *(void *)&v27[8 * v13];
                  if (!v12)
                  {
                    while (1)
                    {
                      int64_t v5 = v13 + 1;
                      if (__OFADD__(v13, 1)) {
                        break;
                      }
                      if (v5 >= v28) {
                        goto LABEL_50;
                      }
                      unint64_t v12 = *(void *)&v27[8 * v5];
                      ++v13;
                      if (v12) {
                        goto LABEL_22;
                      }
                    }
                    __break(1u);
                    goto LABEL_57;
                  }
                  int64_t v5 = v13;
                }
              }
            }
LABEL_22:
            unint64_t v8 = (v12 - 1) & v12;
            unint64_t v10 = __clz(__rbit64(v12)) + (v5 << 6);
          }
          uint64_t v14 = *(void *)(v29[7] + 8 * v10);
          uint64_t v15 = *(void *)(v14 + 16);
        }
        while (!v15);
        if (*(void *)(v14 + 32) == v4._countAndFlagsBits && *(void **)(v14 + 40) == v4._object) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if (result) {
          break;
        }
        if (v15 != 1)
        {
          if (*(void *)(v14 + 48) == v4._countAndFlagsBits && *(void **)(v14 + 56) == v4._object) {
            break;
          }
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if (result) {
            break;
          }
          if (v15 != 2)
          {
            char v18 = (void **)(v14 + 72);
            uint64_t v19 = 2;
            while (1)
            {
              uint64_t v20 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                break;
              }
              if (*(v18 - 1) == (void *)v4._countAndFlagsBits && *v18 == v4._object) {
                goto LABEL_45;
              }
              uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
              if (result) {
                goto LABEL_45;
              }
              v18 += 2;
              ++v19;
              if (v20 == v15) {
                goto LABEL_7;
              }
            }
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
        }
      }
LABEL_45:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t result = (uint64_t)[v26 stringByDeletingPathExtension];
      if (!result) {
        goto LABEL_58;
      }
      uint64_t v22 = (void *)result;
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v24 = [v22 stringByAppendingPathExtension:v23];

      if (v24)
      {
        uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_release();

        return v25;
      }
      swift_release();
    }
    return 0;
  }
  else
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
  }
  return result;
}

uint64_t sub_1004A5264()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004A52A4(unint64_t a1)
{
  return sub_1004A3CF4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1004A52B0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v38 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v35 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  __chkstk_darwin(v11);
  unint64_t v34 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_group_t v13 = dispatch_group_create();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &_swiftEmptyDictionarySingleton;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v15 = result;
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  dispatch_group_t v40 = v8;
  uint64_t v41 = v9;
  if (!v15)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    NSString v23 = v34;
    uint64_t v22 = v35;
    uint64_t v24 = v36;
    (*(void (**)(char *, void, uint64_t))(v35 + 104))(v34, enum case for DispatchQoS.QoSClass.default(_:), v36);
    uint64_t v25 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
    id v26 = (void *)swift_allocObject();
    v26[2] = v37;
    v26[3] = a3;
    _DWORD v26[4] = v14;
    long long v47 = sub_1004A5848;
    uint64_t v48 = v26;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v44 = 1107296256;
    uint64_t v45 = sub_1000666D8;
    uint64_t v46 = &unk_1006AFFA8;
    unint64_t v27 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    int64_t v28 = v38;
    static DispatchQoS.unspecified.getter();
    long long v42 = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    os_log_type_t v29 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v27);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v29, v5);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v28, v41);
    swift_release();
    return swift_release();
  }
  if (v15 >= 1)
  {
    uint64_t v31 = a3;
    uint64_t v32 = v6;
    uint64_t v33 = v5;
    uint64_t v17 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        char v18 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        char v18 = *(void **)(a1 + 8 * v17 + 32);
        swift_unknownObjectRetain();
      }
      ++v17;
      dispatch_group_enter(v13);
      uint64_t v19 = (void *)swift_allocObject();
      v19[2] = v13;
      uint64_t v19[3] = v18;
      v19[4] = v14;
      long long v47 = sub_1004A5838;
      uint64_t v48 = v19;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      uint64_t v45 = sub_1004A4C58;
      uint64_t v46 = &unk_1006AFF58;
      uint64_t v20 = _Block_copy(&aBlock);
      uint64_t v21 = v13;
      swift_unknownObjectRetain();
      swift_retain();
      swift_release();
      [v18 fetchParent:v20];
      _Block_release(v20);
      swift_unknownObjectRelease();
    }
    while (v15 != v17);
    swift_bridgeObjectRelease();
    uint64_t v6 = v32;
    uint64_t v5 = v33;
    a3 = v31;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004A57F0()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004A5838(uint64_t a1, uint64_t a2)
{
  sub_1004A48E0(a1, a2, *(dispatch_group_t *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1004A5848()
{
  return sub_1004A4CD8(*(void (**)(void *))(v0 + 16));
}

uint64_t sub_1004A5854()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1004A589C(uint64_t a1)
{
  sub_1004A42BC(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_1004A58A8()
{
}

id sub_1004A58DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 fractionCompleted];
  *a2 = v4;
  return result;
}

uint64_t sub_1004A5910(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

id sub_1004A5940(uint64_t a1, void *a2)
{
  id v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  uint64_t v5 = (void *)v3();
  uint64_t v7 = v6;
  swift_release();

  if (v5)
  {
    v9[4] = v5;
    v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1000666D8;
    v9[3] = &unk_1006B0578;
    uint64_t v5 = _Block_copy(v9);
    swift_release();
  }

  return v5;
}

BOOL DOCProgressState.isEnded.getter(char a1)
{
  return (a1 & 0xFE) != 2;
}

uint64_t DOCProgressState.isCancelled.getter(unsigned __int8 a1)
{
  return ((a1 & 0xFE) != 2) & a1;
}

uint64_t sub_1004A5A44@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t v6 = a4 + *(int *)(type metadata accessor for DOCOperationProgress.OperationWithProvider() + 28);

  return sub_1001146DC(a2, v6);
}

uint64_t static DOCOperationProgress._new(withOperation:progressProvider:observing:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 296);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCOperationProgress.OperationWithProvider();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - v13;
  type metadata accessor for DOCOperationProgress();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1000D4774(a2, (uint64_t)v18);
  sub_1004A5A44((uint64_t)v10, v18, v7, (uint64_t)v14);
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1004AA380((uint64_t)v14, a3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v15;
}

uint64_t type metadata accessor for DOCOperationProgress.OperationWithProvider()
{
  return sub_1000D21B0();
}

uint64_t type metadata accessor for DOCOperationProgress()
{
  return sub_1000D21B0();
}

uint64_t DOCGenericOperationProgress.__allocating_init(operation:observing:)(void *a1, uint64_t a2)
{
  swift_allocObject();
  uint64_t v4 = a1[3];
  uint64_t v5 = sub_1000A6B78(a1, v4);
  v10[3] = v4;
  uint64_t v6 = sub_100052C70(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v5, v4);
  sub_1000D4774((uint64_t)a1, (uint64_t)v9);
  uint64_t v7 = sub_1004A6564((uint64_t)v10, v9, a2);
  sub_10009B1B8((uint64_t)a1);
  return v7;
}

uint64_t DOCFileOperationProgress.__allocating_init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCFileOperation();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t v10 = swift_allocObject();
  sub_1002FBA5C(a1, (uint64_t)v9);
  sub_1002FBA5C(a1, (uint64_t)v6);
  uint64_t v11 = sub_1004A9794((uint64_t)v9, (uint64_t)v6, a2, v10);
  sub_1001B35F8(a1);
  return v11;
}

uint64_t DOCProgressValue.description.getter(uint64_t a1, char a2)
{
  if (a2) {
    return 0x6D72657465646E69;
  }
  Double.write<A>(to:)();
  v2._uint64_t countAndFlagsBits = 0x6C706D6F63202520;
  v2._object = (void *)0xEC00000064657465;
  String.append(_:)(v2);
  return 0;
}

void DOCProgressValue.hash(into:)(uint64_t a1, Swift::UInt64 a2, char a3)
{
  if (a3)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a2;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    Hasher._combine(_:)(v4);
  }
}

uint64_t static DOCProgressValue.__derived_enum_equals(_:_:)(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  if ((a2 | a4)) {
    char v4 = a2 & a4;
  }
  else {
    char v4 = *(double *)&a1 == *(double *)&a3;
  }
  return v4 & 1;
}

Swift::Int DOCProgressValue.hashValue.getter(Swift::UInt64 a1, char a2)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = a1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    Hasher._combine(_:)(v4);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1004A5FF0()
{
  return DOCProgressValue.hashValue.getter(*(void *)v0, *(unsigned char *)(v0 + 8));
}

void sub_1004A5FFC()
{
  if (*(unsigned char *)(v0 + 8))
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v1 = *(void *)v0;
    Hasher._combine(_:)(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v2 = v1;
    }
    else {
      Swift::UInt64 v2 = 0;
    }
    Hasher._combine(_:)(v2);
  }
}

Swift::Int sub_1004A604C()
{
  Swift::UInt64 v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v1;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    Hasher._combine(_:)(v3);
  }
  return Hasher._finalize()();
}

uint64_t sub_1004A60B8(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_1004A60E8()
{
  if (*(unsigned char *)(v0 + 8)) {
    return 0x6D72657465646E69;
  }
  Double.write<A>(to:)();
  v2._uint64_t countAndFlagsBits = 0x6C706D6F63202520;
  v2._object = (void *)0xEC00000064657465;
  String.append(_:)(v2);
  return 0;
}

void DOCProgressState.hash(into:)(uint64_t a1, char a2)
{
  if (a2 == 2)
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (a2 == 3)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    return;
  }
  Swift::UInt8 v3 = a2 & 1;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v3);
}

BOOL static DOCProgressState.__derived_enum_equals(_:_:)(char a1, char a2)
{
  if (a1 == 2) {
    return a2 == 2;
  }
  if (a1 == 3) {
    return a2 == 3;
  }
  if ((a2 & 0xFE) == 2) {
    return 0;
  }
  return (((a1 & 1) == 0) ^ a2) & 1;
}

Swift::Int DOCProgressState.hashValue.getter(char a1)
{
  Hasher.init(_seed:)();
  if (a1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (a1 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(a1 & 1);
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 1;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1004A62C8()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (v1 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v1 & 1);
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 1;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1004A634C()
{
  int v1 = *v0;
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
    goto LABEL_5;
  }
  if (v1 == 3)
  {
    Swift::UInt v2 = 1;
LABEL_5:
    Hasher._combine(_:)(v2);
    return;
  }
  Swift::UInt8 v3 = v1 & 1;
  Hasher._combine(_:)(2uLL);
  Hasher._combine(_:)(v3);
}

Swift::Int sub_1004A63AC()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  if (v1 == 2)
  {
    Swift::UInt v2 = 0;
  }
  else
  {
    if (v1 != 3)
    {
      Hasher._combine(_:)(2uLL);
      Hasher._combine(_:)(v1 & 1);
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 1;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

BOOL sub_1004A642C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 2) {
    return v3 == 2;
  }
  if (v2 == 3) {
    return v3 == 3;
  }
  if ((v3 & 0xFE) == 2) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

uint64_t DOCFileOperationProgress.init(operation:observing:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DOCFileOperation();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - v9;
  sub_1002FBA5C(a1, (uint64_t)&v13 - v9);
  sub_1002FBA5C(a1, (uint64_t)v7);
  uint64_t v11 = sub_1004A9794((uint64_t)v10, (uint64_t)v7, a2, v2);
  sub_1001B35F8(a1);
  return v11;
}

uint64_t sub_1004A6564(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v33 = a1;
  uint64_t v34 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)(v4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = v4 + *(void *)(*(void *)v4 + 328);
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = *(void *)(*(void *)v4 + 336);
  *(unsigned char *)(v4 + v12) = 2;
  uint64_t v13 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 344));
  swift_retain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = sub_100062330(6);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *uint64_t v13 = v14;
  v13[1] = v16;
  v13[2] = v18;
  v13[3] = v20;
  uint64_t v21 = v4 + *(void *)(*(void *)v4 + 368);
  *(unsigned char *)uint64_t v21 = 0;
  *(void *)(v21 + 8) = 0;
  *(void *)(v21 + 16) = 0xE000000000000000;
  uint64_t v22 = v4 + *(void *)(*(void *)v4 + 376);
  *(unsigned char *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0xE000000000000000;
  NSString v23 = (_OWORD *)(v4 + *(void *)(*(void *)v4 + 384));
  *NSString v23 = 0u;
  v23[1] = 0u;
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 392)) = 0;
  *(void *)(v4 + *(void *)(*(void *)v4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(v4 + *(void *)(*(void *)v4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v24 = v33;
  sub_10009B208(v33, v4 + *(void *)(*(void *)v4 + 312));
  uint64_t v25 = a2[3];
  uint64_t v26 = a2[4];
  sub_1000A6B78(a2, v25);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v26 + 8))(v35, v25, v26);
  uint64_t v27 = v4 + *(void *)(*(void *)v4 + 320);
  long long v28 = v35[1];
  *(_OWORD *)uint64_t v27 = v35[0];
  *(_OWORD *)(v27 + 16) = v28;
  *(void *)(v27 + 32) = v36;
  sub_1000D4774((uint64_t)a2, v4 + *(void *)(*(void *)v4 + 352));
  *(void *)(v4 + *(void *)(*(void *)v4 + 360)) = v34;
  *(unsigned char *)(v4 + v12) = 2;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  swift_release();
  *(_WORD *)(v4 + 24) = 256;
  *(void *)(v4 + 32) = 0;
  uint64_t v29 = v4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v30 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *(void *)(v4 + 16) = 0x3FE0000000000000;
  sub_1002B5CBC(0);
  sub_10009B1B8(v24);
  sub_10009B1B8((uint64_t)a2);
  return v4;
}

void sub_1004A6908()
{
}

uint64_t _s5Files27DOCGenericOperationProgressCfd_0()
{
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_10070D8E8);
  sub_1000A7258(*(void *)(v0 + direct field offset for DOCOperationProgress.updateHandler));
  sub_10009B1B8(v0 + *(void *)(*(void *)v0 + 312));
  sub_10008E17C(v0 + *(void *)(*(void *)v0 + 320));
  swift_bridgeObjectRelease();
  sub_10009B1B8(v0 + *(void *)(*(void *)v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + *(void *)(*(void *)v0 + 384), (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s5Files24DOCFileOperationProgressCfd_0()
{
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_10070D8E8);
  sub_1000A7258(*(void *)(v0 + direct field offset for DOCOperationProgress.updateHandler));
  sub_1001B35F8(v0 + *(void *)(*(void *)v0 + 312));
  sub_10008E17C(v0 + *(void *)(*(void *)v0 + 320));
  swift_bridgeObjectRelease();
  sub_10009B1B8(v0 + *(void *)(*(void *)v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v0 + *(void *)(*(void *)v0 + 384), (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t *DOCOperationProgress.deinit()
{
  uint64_t v1 = *v0;
  DOCAbstractPacedPropertyUpdater.invalidate()();
  sub_1000CBBA4((uint64_t)v0 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState, &qword_10070D8E8);
  sub_1000A7258(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 312));
  sub_10008E17C((uint64_t)v0 + *(void *)(*v0 + 320));
  swift_bridgeObjectRelease();
  sub_10009B1B8((uint64_t)v0 + *(void *)(*v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v0 + *(void *)(*v0 + 384), (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DOCFileOperationProgress.__deallocating_deinit()
{
  return sub_1004A88B4(_s5Files24DOCFileOperationProgressCfd_0);
}

uint64_t DOCOperationProgress.updateHandler.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_1000C0640(*v1);
  return v2;
}

uint64_t DOCOperationProgress.updateHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return sub_1000A7258(v6);
}

uint64_t (*DOCOperationProgress.updateHandler.modify())()
{
  return j__swift_endAccess;
}

uint64_t DOCOperationProgress.localizedOperationDescription.getter()
{
  uint64_t v0 = sub_1004AA484();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t DOCOperationProgress.localizedProgressDescription.getter()
{
  uint64_t v0 = sub_1004AA524();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1004A6F68()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 352));
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = sub_1000A6B78(v1, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  double v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, double))(v5 + 16))((char *)&v11 - v7, v6);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t DOCOperationProgress.description.getter()
{
  return DOCOperationProgress.description(includingProgressDetails:)(1)._countAndFlagsBits;
}

Swift::String __swiftcall DOCOperationProgress.description(includingProgressDetails:)(Swift::Bool includingProgressDetails)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v14 = (void *)sub_1004A6F68();
  id v15 = [v14 fileURL];

  if (v15)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  sub_1000CBE0C((uint64_t)v10, (uint64_t)v13, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4))
  {
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    uint64_t v16 = (void *)0xE500000000000000;
    uint64_t v17 = 0x273F3F3F27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v13, v4);
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    uint64_t v17 = URL.lastPathComponent.getter();
    uint64_t v16 = v18;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_10008E1D0(v2 + *(void *)(*(void *)v2 + 320), (uint64_t)&v45);
  AnyHashable.description.getter();
  sub_10008E17C((uint64_t)&v45);
  sub_100062330(6);
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  v43[1] = v20;
  uint64_t v44 = v17;
  if (includingProgressDetails)
  {
    uint64_t v45 = 32;
    unint64_t v46 = 0xE100000000000000;
    uint64_t v21 = (void *)sub_1004A6F68();
    id v22 = [v21 description];

    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    v26._uint64_t countAndFlagsBits = v23;
    v26._object = v25;
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    v27._uint64_t countAndFlagsBits = 59;
    v27._object = (void *)0xE100000000000000;
    String.append(_:)(v27);
    uint64_t v29 = v45;
    long long v28 = (void *)v46;
  }
  else
  {
    uint64_t v29 = 0;
    long long v28 = (void *)0xE000000000000000;
  }
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  _StringGuts.grow(_:)(44);
  swift_bridgeObjectRelease();
  uint64_t v45 = 60;
  unint64_t v46 = 0xE100000000000000;
  v30._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x496775626564203ALL;
  v31._object = (void *)0xEC000000203D2044;
  String.append(_:)(v31);
  swift_bridgeObjectRetain();
  v32._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33._uint64_t countAndFlagsBits = 0x203D204449706F20;
  v33._object = (void *)0xE800000000000000;
  String.append(_:)(v33);
  v34._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v35._uint64_t countAndFlagsBits = 0x3D20656C6966203BLL;
  v35._object = (void *)0xEA00000000002720;
  String.append(_:)(v35);
  v36._uint64_t countAndFlagsBits = v44;
  v36._object = v16;
  String.append(_:)(v36);
  swift_bridgeObjectRelease();
  v37._uint64_t countAndFlagsBits = 15143;
  v37._object = (void *)0xE200000000000000;
  String.append(_:)(v37);
  v38._uint64_t countAndFlagsBits = v29;
  v38._object = v28;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = 62;
  v39._object = (void *)0xE100000000000000;
  String.append(_:)(v39);
  uint64_t v40 = v45;
  uint64_t v41 = (void *)v46;
  result._object = v41;
  result._uint64_t countAndFlagsBits = v40;
  return result;
}

uint64_t sub_1004A7538()
{
  uint64_t v1 = (uint64_t *)(v0 + direct field offset for DOCOperationProgress.updateHandler);
  swift_beginAccess();
  uint64_t v2 = *v1;
  *uint64_t v1 = 0;
  v1[1] = 0;
  return sub_1000A7258(v2);
}

uint64_t sub_1004A7588()
{
  uint64_t v1 = (void *)sub_1004A6F68();
  int v2 = sub_1004A9F04(v1);
  if (*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 392))) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  uint64_t v4 = *(void *)(*(void *)v0 + 336);
  int v5 = *(unsigned __int8 *)(v0 + v4);
  if (v3 == 2)
  {
    if (v5 == 2) {
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v3 == 3)
  {
    if (v5 != 3) {
      goto LABEL_11;
    }
LABEL_9:
    int v6 = 0;
    goto LABEL_13;
  }
  if ((v5 & 0xFE) == 2)
  {
LABEL_11:
    int v6 = 1;
    goto LABEL_13;
  }
  int v6 = v3 ^ v5;
LABEL_13:
  uint64_t v7 = (void *)sub_1004A6F68();
  unsigned __int8 v8 = [v7 isIndeterminate];
  if (v8)
  {

    uint64_t v9 = v0 + *(void *)(*(void *)v0 + 328);
    int v10 = *(unsigned __int8 *)(v9 + 8) ^ 1;
    double v11 = 0.0;
  }
  else
  {
    [v7 fractionCompleted];
    double v13 = v12;

    double v11 = fmin(v13, 1.0);
    if (v11 < 0.0) {
      double v11 = 0.0;
    }
    uint64_t v9 = v0 + *(void *)(*(void *)v0 + 328);
    int v10 = (*(unsigned char *)(v9 + 8) & 1) != 0 || v11 != *(double *)v9;
  }
  *(unsigned char *)(v0 + v4) = v3;
  *(double *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = v8;
  uint64_t v14 = (unsigned char *)(v0 + *(void *)(*(void *)v0 + 368));
  swift_beginAccess();
  *uint64_t v14 = 0;
  id v15 = (unsigned char *)(v0 + *(void *)(*(void *)v0 + 376));
  swift_beginAccess();
  unsigned char *v15 = 0;
  return (v6 | v10) & 1;
}

uint64_t sub_1004A7770()
{
  uint64_t v1 = (void *)sub_1004A6F68();
  LODWORD(result) = sub_1004A9F04(v1);
  if (*(unsigned char *)(v0 + *(void *)(*(void *)v0 + 392))) {
    return 1;
  }
  else {
    return result;
  }
}

uint64_t sub_1004A77AC()
{
  uint64_t v1 = (void (**)(uint64_t))(v0 + direct field offset for DOCOperationProgress.updateHandler);
  uint64_t result = swift_beginAccess();
  int v3 = *v1;
  if (*v1)
  {
    swift_retain();
    v3(v0);
    return sub_1000A7258((uint64_t)v3);
  }
  return result;
}

uint64_t sub_1004A7828()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 392));
}

void sub_1004A7844(char a1)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 392)) = a1;
  sub_1004A8B20();
}

uint64_t sub_1004A7860()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  __chkstk_darwin(v5);
  unint64_t v46 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 296);
  type metadata accessor for DOCOperationProgress();
  type metadata accessor for DOCWeakUncheckedSendable();
  uint64_t v9 = sub_10039FA54();
  uint64_t v10 = swift_allocObject();
  uint64_t v50 = v9;
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1004ABBC4;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1004ABBC4;
  *(void *)(v13 + 24) = v11;
  uint64_t v14 = *(void *)(*v1 + 360);
  aBlock[0] = *(id *)((char *)v1 + v14);
  v51[0] = 1;
  type metadata accessor for DOCOperationProgress.ObservedEvent();
  type metadata accessor for Array();
  swift_retain_n();
  swift_getWitnessTable();
  swift_getWitnessTable();
  int v15 = Sequence<>.contains(_:)();
  aBlock[0] = *(id *)((char *)v1 + v14);
  v51[0] = 0;
  char v16 = Sequence<>.contains(_:)();
  int v49 = v15;
  if (v15)
  {
    aBlock[0] = (id)sub_1004A6F68();
    swift_getKeyPath();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1004ABBCC;
    *(void *)(v17 + 24) = v12;
    swift_retain();
    _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    uint64_t v18 = (void *)((char *)v1 + *(void *)(*v1 + 408));
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    aBlock[0] = (id)sub_1004A6F68();
    swift_getKeyPath();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1004ABBD4;
    *(void *)(v19 + 24) = v13;
    swift_retain();
    uint64_t v20 = (void *)_KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    uint64_t v21 = (void *)static DOCLog.UI.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_10059B760;
    uint64_t v23 = sub_1004A6F68();
    *(void *)(v22 + 56) = sub_10009E6C4(0, &qword_10070EB70);
    *(void *)(v22 + 64) = sub_1001141E0();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 96) = type metadata accessor for NSKeyValueObservation();
    *(void *)(v22 + 104) = sub_1004ABE64(&qword_100707430, (void (*)(uint64_t))&type metadata accessor for NSKeyValueObservation);
    *(void *)(v22 + 72) = v20;
    id v24 = v20;
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v25 = v24;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  if ((v16 & 1) == 0) {
    goto LABEL_19;
  }
  aBlock[0] = (id)sub_1004A6F68();
  swift_getKeyPath();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1004ABBCC;
  *(void *)(v26 + 24) = v12;
  swift_retain();
  _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  Swift::String v27 = (void *)((char *)v1 + *(void *)(*v1 + 400));
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  aBlock[0] = (id)sub_1004A6F68();
  swift_getKeyPath();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_1004ABBCC;
  *(void *)(v28 + 24) = v12;
  swift_retain();
  _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();

  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  if ((v49 & 1) == 0)
  {
    aBlock[0] = (id)sub_1004A6F68();
    swift_getKeyPath();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1004ABBCC;
    *(void *)(v29 + 24) = v12;
    swift_retain();
    _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  Swift::String v30 = (void *)sub_1004A6F68();
  if ((sub_1004A9F04(v30) & 0xFE) == 2)
  {
    Swift::String v31 = (void *)sub_1004A6F68();
    Swift::String v32 = v45;
    NSProgress.publishedFileURL.getter(v45);

    uint64_t v34 = v47;
    uint64_t v33 = v48;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v32, 1, v47) == 1)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return sub_1000CBBA4((uint64_t)v32, &qword_1007076B0);
    }
    else
    {
      (*(void (**)(void))(v33 + 32))();
      Swift::String v36 = self;
      URL._bridgeToObjectiveC()(v37);
      Swift::String v39 = v38;
      uint64_t v40 = (void *)swift_allocObject();
      uint64_t v41 = v50;
      v40[2] = sub_1004ABCF0;
      v40[3] = v41;
      aBlock[4] = sub_1004ABD30;
      aBlock[5] = v40;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_1004A5940;
      aBlock[3] = &unk_1006B0500;
      long long v42 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v43 = [v36 addSubscriberForFileURL:v39 withPublishingHandler:v42];
      _Block_release(v42);

      _bridgeAnyObjectToAny(_:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v46, v34);
      sub_1000CBE0C((uint64_t)aBlock, (uint64_t)v51, (uint64_t *)&unk_100705D60);
      uint64_t v44 = (uint64_t)v1 + *(void *)(*v1 + 384);
      swift_beginAccess();
      sub_1000D225C((uint64_t)v51, v44);
      return swift_endAccess();
    }
  }
  else
  {
LABEL_19:
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1004A83C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + *(void *)(*(void *)v0 + 400));
  swift_beginAccess();
  uint64_t v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  *uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(v1 + *(void *)(*(void *)v1 + 408));
  swift_beginAccess();
  uint64_t v20 = v9;
  uint64_t v10 = *v9;
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v11 = result;
    if (result)
    {
LABEL_12:
      if (v11 >= 1)
      {
        uint64_t v12 = 0;
        do
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v13 = *(id *)(v10 + 8 * v12 + 32);
          }
          uint64_t v14 = v13;
          ++v12;
          int v15 = (void *)static DOCLog.UI.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v16 = swift_allocObject();
          *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
          *(void *)(v16 + 56) = type metadata accessor for NSKeyValueObservation();
          *(void *)(v16 + 64) = sub_1004ABE64(&qword_100707430, (void (*)(uint64_t))&type metadata accessor for NSKeyValueObservation);
          *(void *)(v16 + 32) = v14;
          id v17 = v14;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          dispatch thunk of NSKeyValueObservation.invalidate()();
        }
        while (v11 != v12);
        goto LABEL_19;
      }
LABEL_24:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v11) {
      goto LABEL_12;
    }
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  *uint64_t v20 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease();
  uint64_t v18 = v1 + *(void *)(*(void *)v1 + 384);
  swift_beginAccess();
  sub_100053674(v18, (uint64_t)&v21);
  if (!*((void *)&v22 + 1)) {
    return sub_1000CBBA4((uint64_t)&v21, (uint64_t *)&unk_100705D60);
  }
  sub_1000A54B0(&v21, &v23);
  uint64_t v19 = self;
  sub_1000A6B78(&v23, v24);
  [v19 removeSubscriber:_bridgeAnythingToObjectiveC<A>(_:)()];
  swift_unknownObjectRelease();
  long long v21 = 0u;
  long long v22 = 0u;
  swift_beginAccess();
  sub_1000D225C((uint64_t)&v21, v18);
  swift_endAccess();
  return sub_10009B1B8((uint64_t)&v23);
}

uint64_t DOCGenericOperationProgress.init(operation:observing:)(void *a1, uint64_t a2)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = sub_1000A6B78(a1, v4);
  v10[3] = v4;
  uint64_t v6 = sub_100052C70(v10);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(v6, v5, v4);
  sub_1000D4774((uint64_t)a1, (uint64_t)v9);
  uint64_t v7 = sub_1004A6564((uint64_t)v10, v9, a2);
  sub_10009B1B8((uint64_t)a1);
  return v7;
}

void sub_1004A8850()
{
}

void sub_1004A886C()
{
}

uint64_t DOCGenericOperationProgress.__deallocating_deinit()
{
  return sub_1004A88B4(_s5Files27DOCGenericOperationProgressCfd_0);
}

uint64_t sub_1004A88B4(uint64_t (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

BOOL sub_1004A890C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static DOCBrowserHistoryShiftDirection.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1004A8918()
{
  return DOCBrowserHistoryShiftDirection.hashValue.getter(*v0);
}

void sub_1004A8920(uint64_t a1)
{
  DOCBrowserHistoryShiftDirection.hash(into:)(a1, *v1);
}

Swift::Int sub_1004A8928()
{
  Hasher.init(_seed:)();
  DOCBrowserHistoryShiftDirection.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

void *sub_1004A8968(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  swift_allocObject();
  uint64_t v8 = sub_1004A9FA0(a1, a2, a3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 296) - 8) + 8))(a1);
  return v8;
}

void sub_1004A89FC(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1004A6F68();
  id v3 = [v2 localizedDescription];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

void sub_1004A8A70(uint64_t *a1@<X8>)
{
  uint64_t v2 = (void *)sub_1004A6F68();
  [v2 fractionCompleted];
  if (v3 <= 0.0)
  {
    id v5 = [v2 fileOperationKind];
    uint64_t v6 = (uint64_t)sub_100529A38((uint64_t)v5);
    goto LABEL_5;
  }
  id v4 = [v2 localizedAdditionalDescription];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_5:
    uint64_t v8 = v6;
    uint64_t v9 = v7;

    *a1 = v8;
    a1[1] = v9;
    return;
  }
  __break(1u);
}

void sub_1004A8B20()
{
  if (*(uint64_t *)(v0 + 32) <= 0)
  {
    v5[0] = 0;
    v5[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(37);
    v1._object = (void *)0x80000001005E3650;
    v1._uint64_t countAndFlagsBits = 0xD000000000000023;
    String.append(_:)(v1);
    type metadata accessor for DOCAbstractPacedPropertyUpdater(0);
    _print_unlocked<A, B>(_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v8 = v0;
    swift_retain();
    sub_1000CBE70((uint64_t *)&unk_10070D200);
    swift_dynamicCast();
    uint64_t v2 = v6;
    uint64_t v3 = v7;
    sub_1000A6B78(v5, v6);
    int v4 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3);
    sub_10009B1B8((uint64_t)v5);
    if (v4) {
      sub_1002B5FB8(v4 == 2);
    }
  }
}

void sub_1004A8C50(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14 = (void *)swift_allocObject();
  _OWORD v14[2] = a7;
  v14[3] = a6;
  v14[4] = a1;
  v14[5] = a2;
  void v14[6] = a4;
  v14[7] = a5;
  v14[8] = a3;
  v17[4] = sub_1004ABEFC;
  v17[5] = v14;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1000666D8;
  v17[3] = &unk_1006B0618;
  int v15 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v15);
}

uint64_t sub_1004A8D68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      _StringGuts.grow(_:)(37);
      v13._uint64_t countAndFlagsBits = 0x73626F206469645BLL;
      v13._object = (void *)0xEE00205D65767265;
      String.append(_:)(v13);
      v14._uint64_t countAndFlagsBits = a2;
      v14._object = a3;
      String.append(_:)(v14);
      v15._uint64_t countAndFlagsBits = 543584032;
      v15._object = (void *)0xE400000000000000;
      String.append(_:)(v15);
      swift_bridgeObjectRetain();
      v16._uint64_t countAndFlagsBits = static String._fromSubstring(_:)();
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17._uint64_t countAndFlagsBits = 0x6465676E61686320;
      v17._object = (void *)0xED0000203A6F7420;
      String.append(_:)(v17);
      v18._uint64_t countAndFlagsBits = a4;
      v18._object = a5;
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      Swift::Bool v19 = (sub_1004A9F04(a6) & 0xFE) != 2;
      DOCAbstractPacedPropertyUpdater.setNeedsUpdateProperties(notifyImmediately:)(v19);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1004A8F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  sub_1000CBE70(&qword_100718670);
  NSKeyValueObservedChange.oldValue.getter();
  uint64_t result = NSKeyValueObservedChange.newValue.getter();
  if (v16 == 2)
  {
    if (v15 == 2) {
      return result;
    }
  }
  else if (v15 != 2 && ((((v15 & 1) == 0) ^ v16) & 1) != 0)
  {
    return result;
  }
  NSKeyValueObservedChange.newValue.getter();
  uint64_t v10 = 1702195828;
  if ((v14 & 1) == 0) {
    uint64_t v10 = 0x65736C6166;
  }
  unint64_t v11 = 0xE400000000000000;
  if ((v14 & 1) == 0) {
    unint64_t v11 = 0xE500000000000000;
  }
  if (v14 == 2) {
    uint64_t v12 = 0x2A6C696E2ALL;
  }
  else {
    uint64_t v12 = v10;
  }
  if (v14 == 2) {
    unint64_t v13 = 0xE500000000000000;
  }
  else {
    unint64_t v13 = v11;
  }
  a5(a1, a2, a3, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A903C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))
{
  sub_1000CBE70(&qword_100718668);
  NSKeyValueObservedChange.oldValue.getter();
  uint64_t result = NSKeyValueObservedChange.newValue.getter();
  if (v16)
  {
    if (v14) {
      return result;
    }
  }
  else if ((v14 & 1) == 0 && v15 == v13)
  {
    return result;
  }
  NSKeyValueObservedChange.newValue.getter();
  if (v16)
  {
    unint64_t v10 = 0xE500000000000000;
    uint64_t v11 = 0x2A6C696E2ALL;
  }
  else
  {
    uint64_t v11 = Double.description.getter();
    unint64_t v10 = v12;
  }
  a5(a1, a2, a3, v11, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004A9140(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  unint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = *(void *)(*(void *)(v1 + 80) + 296);
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1004ABE5C;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006B05C8;
  double v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1004ABE64((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1004A9434()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_release();
    if (Strong)
    {
      *(unsigned char *)(Strong + *(void *)(*(void *)Strong + 392)) = 1;
      sub_1004A8B20();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1004A94C0()
{
  uint64_t v1 = *v0;
  sub_1000A7258(*(uint64_t *)((char *)v0 + direct field offset for DOCOperationProgress.updateHandler));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 296) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 312));
  sub_10008E17C((uint64_t)v0 + *(void *)(*v0 + 320));
  swift_bridgeObjectRelease();
  sub_10009B1B8((uint64_t)v0 + *(void *)(*v0 + 352));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v0 + *(void *)(*v0 + 384), (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t DOCOperationProgress.__deallocating_deinit()
{
  DOCOperationProgress.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1004A96BC()
{
  return sub_1004A7538();
}

uint64_t sub_1004A96E0()
{
  return sub_1004A7588();
}

uint64_t sub_1004A9704()
{
  return sub_1004A77AC();
}

uint64_t sub_1004A9728()
{
  return sub_1004A7860();
}

uint64_t sub_1004A974C()
{
  return sub_1004A83C8();
}

uint64_t sub_1004A9770()
{
  return DOCOperationProgress.description.getter();
}

uint64_t sub_1004A9794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v31 = a3;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[3] = type metadata accessor for DOCFileOperation();
  v32[4] = (uint64_t)&protocol witness table for DOCFileOperation;
  unint64_t v10 = sub_100052C70(v32);
  sub_100114104(a2, (uint64_t)v10);
  uint64_t v11 = (void *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = a4 + *(void *)(*(void *)a4 + 328);
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  uint64_t v13 = *(void *)(*(void *)a4 + 336);
  *(unsigned char *)(a4 + v13) = 2;
  char v14 = (uint64_t *)(a4 + *(void *)(*(void *)a4 + 344));
  swift_retain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = sub_100062330(6);
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  *char v14 = v15;
  v14[1] = v17;
  _OWORD v14[2] = v19;
  v14[3] = v21;
  uint64_t v22 = a4 + *(void *)(*(void *)a4 + 368);
  *(unsigned char *)uint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0xE000000000000000;
  uint64_t v23 = a4 + *(void *)(*(void *)a4 + 376);
  *(unsigned char *)uint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  *(void *)(v23 + 16) = 0xE000000000000000;
  uint64_t v24 = (_OWORD *)(a4 + *(void *)(*(void *)a4 + 384));
  *uint64_t v24 = 0u;
  v24[1] = 0u;
  *(unsigned char *)(a4 + *(void *)(*(void *)a4 + 392)) = 0;
  *(void *)(a4 + *(void *)(*(void *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(a4 + *(void *)(*(void *)a4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v25 = v30;
  sub_1002FBA5C(v30, a4 + *(void *)(*(void *)a4 + 312));
  sub_10008E1D0((uint64_t)v10, a4 + *(void *)(*(void *)a4 + 320));
  sub_1000D4774((uint64_t)v32, a4 + *(void *)(*(void *)a4 + 352));
  *(void *)(a4 + *(void *)(*(void *)a4 + 360)) = v31;
  *(unsigned char *)(a4 + v13) = 2;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = 1;
  swift_release();
  *(_WORD *)(a4 + 24) = 256;
  *(void *)(a4 + 32) = 0;
  uint64_t v26 = a4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v27 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
  *(void *)(a4 + 16) = 0x3FE0000000000000;
  sub_1002B5CBC(0);
  sub_1001B35F8(v25);
  sub_10009B1B8((uint64_t)v32);
  return a4;
}

uint64_t sub_1004A9B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a1;
  uint64_t v36 = a3;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39[3] = a5;
  v39[4] = a6;
  uint64_t v33 = sub_100052C70(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(v33, a2, a5);
  char v14 = (void *)(a4 + direct field offset for DOCOperationProgress.updateHandler);
  *char v14 = 0;
  v14[1] = 0;
  uint64_t v15 = a4 + *(void *)(*(void *)a4 + 328);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  uint64_t v34 = *(void *)(*(void *)a4 + 336);
  *(unsigned char *)(a4 + v34) = 2;
  uint64_t v16 = (uint64_t *)(a4 + *(void *)(*(void *)a4 + 344));
  swift_retain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v17 = sub_100062330(6);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  *uint64_t v16 = v17;
  v16[1] = v19;
  _OWORD v16[2] = v21;
  v16[3] = v23;
  uint64_t v24 = a4 + *(void *)(*(void *)a4 + 368);
  *(unsigned char *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(void *)(v24 + 16) = 0xE000000000000000;
  uint64_t v25 = a4 + *(void *)(*(void *)a4 + 376);
  *(unsigned char *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(void *)(v25 + 16) = 0xE000000000000000;
  uint64_t v26 = (_OWORD *)(a4 + *(void *)(*(void *)a4 + 384));
  *uint64_t v26 = 0u;
  v26[1] = 0u;
  *(unsigned char *)(a4 + *(void *)(*(void *)a4 + 392)) = 0;
  *(void *)(a4 + *(void *)(*(void *)a4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)(a4 + *(void *)(*(void *)a4 + 408)) = _swiftEmptyArrayStorage;
  uint64_t v27 = v35;
  sub_1002FBA5C(v35, a4 + *(void *)(*(void *)a4 + 312));
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(a6 + 8))(v37, a5, a6);
  uint64_t v28 = a4 + *(void *)(*(void *)a4 + 320);
  long long v29 = v37[1];
  *(_OWORD *)uint64_t v28 = v37[0];
  *(_OWORD *)(v28 + 16) = v29;
  *(void *)(v28 + 32) = v38;
  sub_1000D4774((uint64_t)v39, a4 + *(void *)(*(void *)a4 + 352));
  *(void *)(a4 + *(void *)(*(void *)a4 + 360)) = v36;
  *(unsigned char *)(a4 + v34) = 2;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  swift_release();
  *(_WORD *)(a4 + 24) = 256;
  *(void *)(a4 + 32) = 0;
  uint64_t v30 = a4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v31 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 1, 1, v31);
  *(void *)(a4 + 16) = 0x3FE0000000000000;
  sub_1002B5CBC(0);
  sub_1001B35F8(v27);
  sub_10009B1B8((uint64_t)v39);
  return a4;
}

uint64_t sub_1004A9F04(void *a1)
{
  if ([a1 isCancelled])
  {

    return 1;
  }
  else if ([a1 isFinished] || (objc_msgSend(a1, "fractionCompleted"), v3 >= 1.0))
  {

    return 0;
  }
  else
  {
    unsigned int v4 = [a1 isPaused];

    if (v4) {
      return 3;
    }
    else {
      return 2;
    }
  }
}

void *sub_1004A9FA0(uint64_t a1, void *a2, uint64_t a3)
{
  unsigned int v4 = v3;
  uint64_t v33 = a3;
  uint64_t v31 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)((char *)v4 + direct field offset for DOCOperationProgress.updateHandler);
  *uint64_t v11 = 0;
  v11[1] = 0;
  uint64_t v12 = (char *)v4 + *(void *)(*v4 + 328);
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  uint64_t v32 = *(void *)(*v4 + 336);
  *((unsigned char *)v4 + v32) = 2;
  uint64_t v13 = (void *)((char *)v4 + *(void *)(*v4 + 344));
  swift_retain();
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v14 = sub_100062330(6);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *uint64_t v13 = v14;
  v13[1] = v16;
  v13[2] = v18;
  v13[3] = v20;
  uint64_t v21 = (char *)v4 + *(void *)(*v4 + 368);
  char *v21 = 0;
  *((void *)v21 + 1) = 0;
  *((void *)v21 + 2) = 0xE000000000000000;
  uint64_t v22 = (char *)v4 + *(void *)(*v4 + 376);
  *uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  *((void *)v22 + 2) = 0xE000000000000000;
  uint64_t v23 = (_OWORD *)((char *)v4 + *(void *)(*v4 + 384));
  *uint64_t v23 = 0u;
  v23[1] = 0u;
  *((unsigned char *)v4 + *(void *)(*v4 + 392)) = 0;
  *(void *)((char *)v4 + *(void *)(*v4 + 400)) = _swiftEmptyArrayStorage;
  *(void *)((char *)v4 + *(void *)(*v4 + 408)) = _swiftEmptyArrayStorage;
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v6 + 296) - 8) + 16))((char *)v4 + *(void *)(*v4 + 312), v31);
  uint64_t v24 = a2[3];
  uint64_t v25 = a2[4];
  sub_1000A6B78(a2, v24);
  (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v25 + 8))(v34, v24, v25);
  uint64_t v26 = (char *)v4 + *(void *)(*v4 + 320);
  long long v27 = v34[1];
  *(_OWORD *)uint64_t v26 = v34[0];
  *((_OWORD *)v26 + 1) = v27;
  *((void *)v26 + 4) = v35;
  sub_1000D4774((uint64_t)a2, (uint64_t)v4 + *(void *)(*v4 + 352));
  *(void *)((char *)v4 + *(void *)(*v4 + 360)) = v33;
  *((unsigned char *)v4 + v32) = 2;
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  swift_release();
  *((_WORD *)v4 + 12) = 256;
  v4[4] = 0;
  uint64_t v28 = (char *)v4 + OBJC_IVAR____TtC5Files31DOCAbstractPacedPropertyUpdater____lazy_storage___clientNotifyState;
  uint64_t v29 = type metadata accessor for DOCAbstractPacedPropertyUpdater.ClientNotifyState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
  v4[2] = 0x3FE0000000000000;
  sub_1002B5CBC(0);
  sub_10009B1B8((uint64_t)a2);
  return v4;
}

uint64_t sub_1004AA380(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 296);
  double v6 = __chkstk_darwin(a1);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, double))(v9 + 16))(v8, a1, v5, v6);
  uint64_t v10 = type metadata accessor for DOCOperationProgress.OperationWithProvider();
  sub_1000D4774(a1 + *(int *)(v10 + 28), (uint64_t)v13);
  return (*(uint64_t (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 640))(v8, v13, a2);
}

uint64_t sub_1004AA484()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 368);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
  }
  else
  {
    sub_1004A89FC(v5);
    uint64_t v2 = v5[0];
    uint64_t v3 = v5[1];
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v3;
    *(unsigned char *)uint64_t v1 = 1;
  }
  swift_endAccess();
  return v2;
}

uint64_t sub_1004AA524()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 376);
  swift_beginAccess();
  if (*(unsigned char *)v1 == 1)
  {
    uint64_t v2 = *(void *)(v1 + 8);
  }
  else
  {
    sub_1004A8A70(v5);
    uint64_t v2 = v5[0];
    uint64_t v3 = v5[1];
    swift_bridgeObjectRelease();
    *(void *)(v1 + 8) = v2;
    *(void *)(v1 + 16) = v3;
    *(unsigned char *)uint64_t v1 = 1;
  }
  swift_endAccess();
  return v2;
}

unint64_t sub_1004AA5C8()
{
  unint64_t result = qword_100717C40;
  if (!qword_100717C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717C40);
  }
  return result;
}

unint64_t sub_1004AA620()
{
  unint64_t result = qword_100717C48;
  if (!qword_100717C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100717C48);
  }
  return result;
}

uint64_t sub_1004AA674()
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for DOCProgressValue(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCProgressValue(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1004AA6E0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1004AA6FC(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressValue()
{
  return &type metadata for DOCProgressValue;
}

uint64_t getEnumTagSinglePayload for DOCProgressState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1004AA7DCLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCProgressState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1004AA8C4);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressState()
{
  return &type metadata for DOCProgressState;
}

uint64_t type metadata accessor for DOCFileOperationProgress(uint64_t a1)
{
  return sub_10009E984(a1, qword_100717C78);
}

uint64_t type metadata accessor for DOCGenericOperationProgress(uint64_t a1)
{
  return sub_10009E984(a1, qword_100718038);
}

uint64_t sub_1004AA940()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1004AA978()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1004AAA70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unsigned char *sub_1004AAA78(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004AAB44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCOperationProgress.ObservedEvent()
{
  return sub_1000D21B0();
}

uint64_t type metadata accessor for DOCTrace()
{
  return self;
}

uint64_t sub_1004AABA8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1004AAC44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = ~v5;
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 1) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v5 + 16) & v6));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 1) & v6, ((unint64_t)a2 + v5 + 1) & v6);
  }
  return v3;
}

uint64_t sub_1004AAD28(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

unsigned char *sub_1004AAD64(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1004AADD4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1004AAE44(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

unsigned char *sub_1004AAEB4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((unint64_t)&a1[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (unint64_t)&a2[*(unsigned __int8 *)(v4 + 80) + 1] & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1004AAF24(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 1) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)&a1[v9];
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)&a1[v9];
      if (!*(_WORD *)&a1[v9]) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&a1[v6 + 1] & ~v6);
      }
      unsigned int v15 = *a1;
      BOOL v16 = v15 >= 2;
      int v17 = (v15 + 2147483646) & 0x7FFFFFFF;
      if (v16) {
        return (v17 + 1);
      }
      else {
        return 0;
      }
    }
  }
  int v11 = a1[v9];
  if (!a1[v9]) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *(unsigned __int16 *)a1;
        break;
      case 3:
        LODWORD(v9) = *(unsigned __int16 *)a1 | (a1[2] << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1004AB0CC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 1) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1004AB324);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 1] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else
        {
          *a1 = a2 + 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CachedValue()
{
  return sub_1000D21B0();
}

uint64_t sub_1004AB364()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1004AB3FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = ((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 24);
    *(void *)(v10 + 24) = v12;
    *(void *)(v10 + 32) = *(void *)(v11 + 32);
    (**(void (***)(void))(v12 - 8))();
  }
  return v4;
}

uint64_t sub_1004AB538(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  return sub_10009B1B8((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1004AB598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 24);
  *(void *)(v7 + 24) = v9;
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  (**(void (***)(void))(v9 - 8))();
  return a1;
}

uint64_t sub_1004AB658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  sub_1002B25D4((uint64_t *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (uint64_t *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8));
  return a1;
}

uint64_t sub_1004AB6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 32);
  long long v10 = *(_OWORD *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(_OWORD *)(v7 + 16) = v10;
  *(void *)(v7 + 32) = v9;
  return a1;
}

uint64_t sub_1004AB754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  sub_10009B1B8(v7);
  long long v9 = *(_OWORD *)v8;
  long long v10 = *(_OWORD *)(v8 + 16);
  *(void *)(v7 + 32) = *(void *)(v8 + 32);
  *(_OWORD *)unint64_t v7 = v9;
  *(_OWORD *)(v7 + 16) = v10;
  return a1;
}

uint64_t sub_1004AB7E0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1004AB92CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

double sub_1004AB940(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFD8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFD8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 40);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return result;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return result;
      default:
        return result;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1004ABB2CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if ((a2 & 0x80000000) != 0)
          {
            double result = 0.0;
            *(_OWORD *)(v19 + 8) = 0u;
            *(_OWORD *)(v19 + 24) = 0u;
            *(void *)unint64_t v19 = a2 ^ 0x80000000;
          }
          else
          {
            *(void *)(v19 + 24) = a2 - 1;
          }
        }
        else
        {
          unint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return result;
  }
}

uint64_t sub_1004ABB54()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004ABB8C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004ABBC4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  sub_1004A8C50(a1, a2, a3, a4, a5, *(void *)(v5 + 24), *(void *)(v5 + 16));
}

uint64_t sub_1004ABBCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004A8F1C(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

uint64_t sub_1004ABBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1004A903C(a1, a2, a3, a4, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v4 + 16));
}

const char *sub_1004ABBDC()
{
  return "isCancelled";
}

id sub_1004ABBE8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isCancelled];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004ABC1C(void *a1, uint64_t a2)
{
  return sub_1004ABE14(a1, a2, 0x6C65636E61437369, 0xEB0000000064656CLL);
}

const char *sub_1004ABC3C()
{
  return "isPaused";
}

id sub_1004ABC48@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isPaused];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004ABC7C(void *a1, uint64_t a2)
{
  return sub_1004ABE14(a1, a2, 0x6465737561507369, 0xE800000000000000);
}

const char *sub_1004ABC94()
{
  return "isFinished";
}

id sub_1004ABCA0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isFinished];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004ABCD4(void *a1, uint64_t a2)
{
  return sub_1004ABE14(a1, a2, 0x6873696E69467369, 0xEA00000000006465);
}

uint64_t (*sub_1004ABCF0())()
{
  return sub_1004ABE54;
}

uint64_t sub_1004ABD30()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

const char *sub_1004ABD60()
{
  return "isIndeterminate";
}

id sub_1004ABD6C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isIndeterminate];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_1004ABDA0(void *a1, uint64_t a2)
{
  return sub_1004ABE14(a1, a2, 0x657465646E497369, 0xEF6574616E696D72);
}

id sub_1004ABDC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 fractionCompleted];
  *a2 = v4;
  return result;
}

uint64_t sub_1004ABDF8(void *a1, uint64_t a2)
{
  return sub_1004ABE14(a1, a2, 0xD000000000000011, 0x80000001005ADB90);
}

uint64_t sub_1004ABE14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(v4 + 16))(a3, a4, *a1, a2);
}

uint64_t sub_1004ABE54()
{
  return sub_1004A9140(v0);
}

uint64_t sub_1004ABE5C()
{
  return sub_1004A9434();
}

uint64_t sub_1004ABE64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004ABEAC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004ABEFC()
{
  return sub_1004A8D68(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1004ABF44()
{
  return sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
}

uint64_t sub_1004ABF64()
{
  return sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
}

uint64_t sub_1004ABF84(uint64_t (*a1)(uint64_t), uint64_t *a2)
{
  uint64_t v4 = (uint64_t *)(v2 + qword_10070FE30);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = *(void *)(*v4 + 16);
  unsigned int v7 = _swiftEmptyArrayStorage;
  if (!v6) {
    return (uint64_t)v7;
  }
  uint64_t v31 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t result = a1(v5);
  uint64_t v9 = result;
  int v11 = v10;
  uint64_t v12 = 0;
  uint64_t v13 = v5 + 64;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v5 + 32))
  {
    unint64_t v15 = (unint64_t)v9 >> 6;
    if ((*(void *)(v13 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
      goto LABEL_24;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_25;
    }
    sub_10008E1D0(*(void *)(v5 + 48) + 40 * v9, (uint64_t)v29);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
    uint64_t v16 = v30;
    sub_10008E1D0((uint64_t)v29, (uint64_t)v27);
    *((void *)&v28 + 1) = v16;
    v25[0] = v27[0];
    v25[1] = v27[1];
    long long v26 = v28;
    swift_retain_n();
    sub_1000CBBA4((uint64_t)v29, a2);
    sub_10008E1D0((uint64_t)v25, (uint64_t)v23);
    uint64_t v24 = *((void *)&v26 + 1);
    swift_retain();
    sub_10008E17C((uint64_t)v23);
    sub_1000CBBA4((uint64_t)v25, a2);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    uint64_t result = specialized ContiguousArray._endMutation()();
    int64_t v14 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 >= v14) {
      goto LABEL_26;
    }
    uint64_t v17 = *(void *)(v13 + 8 * v15);
    if ((v17 & (1 << v9)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v5 + 36) != v11) {
      goto LABEL_28;
    }
    unint64_t v18 = v17 & (-2 << (v9 & 0x3F));
    if (v18)
    {
      int64_t v14 = __clz(__rbit64(v18)) | v9 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v19 = v15 + 1;
      unint64_t v20 = (unint64_t)(v14 + 63) >> 6;
      if (v15 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v13 + 8 * v19);
        if (!v21)
        {
          unint64_t v19 = v15 + 2;
          if (v15 + 2 >= v20) {
            goto LABEL_4;
          }
          unint64_t v21 = *(void *)(v13 + 8 * v19);
          if (!v21)
          {
            while (v20 - 3 != v15)
            {
              unint64_t v21 = *(void *)(v5 + 88 + 8 * v15++);
              if (v21)
              {
                unint64_t v19 = v15 + 2;
                goto LABEL_15;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_15:
        int64_t v14 = __clz(__rbit64(v21)) + (v19 << 6);
      }
    }
LABEL_4:
    ++v12;
    uint64_t v9 = v14;
    if (v12 == v6)
    {
      unsigned int v7 = v31;
      swift_bridgeObjectRelease();
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1004AC224()
{
  uint64_t v2 = v0;
  unint64_t v3 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    int v14 = 0;
    goto LABEL_21;
  }
  unint64_t v5 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
  unint64_t v6 = v5;
  if (v5 >> 62)
  {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_6;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_18;
  }
LABEL_6:
  v40[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100190D28(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_72:
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
LABEL_46:
    int v14 = v39;
    uint64_t v16 = v38;
    swift_bridgeObjectRelease();
    int v27 = 0;
    double v1 = v1 / (double)v29;
    goto LABEL_52;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (void *)v40[0];
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v10 = swift_retain();
    }
    char v11 = *(unsigned char *)(v10 + *(void *)(*(void *)v10 + 336));
    swift_release();
    v40[0] = (uint64_t)v9;
    unint64_t v13 = v9[2];
    unint64_t v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      sub_100190D28(v12 > 1, v13 + 1, 1);
      uint64_t v9 = (void *)v40[0];
    }
    ++v8;
    v9[2] = v13 + 1;
    *((unsigned char *)v9 + v13 + 32) = v11;
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
LABEL_19:
  v40[0] = (uint64_t)v9;
  swift_bridgeObjectRetain();
  sub_1004ACEA0(v40);
  swift_bridgeObjectRelease();
  if (*(void *)(v40[0] + 16))
  {
    int v14 = *(unsigned __int8 *)(v40[0] + 32);
    swift_release();
LABEL_21:
    unint64_t v15 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
    if (v15 >> 62) {
LABEL_49:
    }
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    else {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    double v1 = 0.0;
    if (v16 < 1)
    {
      int v27 = 0;
      goto LABEL_52;
    }
    unint64_t v17 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
    unint64_t v18 = v17;
    int v39 = v14;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      if (v19) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_26:
        uint64_t v38 = v16;
        uint64_t v20 = 0;
        char v21 = 0;
LABEL_27:
        uint64_t v22 = v20;
        do
        {
          if ((v18 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v20 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v23 = swift_retain();
            uint64_t v20 = v22 + 1;
            if (__OFADD__(v22, 1))
            {
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
          }
          uint64_t v24 = v23 + *(void *)(*(void *)v23 + 328);
          double v25 = *(double *)v24;
          int v14 = *(unsigned __int8 *)(v24 + 8);
          char v26 = *(unsigned char *)(v23 + *(void *)(*(void *)v23 + 336));
          swift_release();
          if ((v26 & 0xFE) == 2)
          {
            if ((v14 & 1) == 0)
            {
              double v1 = v1 + v25;
              goto LABEL_40;
            }
            double v1 = v1 + 0.0;
          }
          else if ((v26 & 1) == 0)
          {
            double v1 = v1 + 1.0;
LABEL_40:
            char v21 = 1;
            if (v20 != v19) {
              goto LABEL_27;
            }
            swift_bridgeObjectRelease_n();
            goto LABEL_44;
          }
          ++v22;
        }
        while (v20 != v19);
        swift_bridgeObjectRelease_n();
        if ((v21 & 1) == 0)
        {
          int v27 = 1;
          double v1 = 0.0;
          int v14 = v39;
          uint64_t v16 = v38;
          goto LABEL_52;
        }
LABEL_44:
        unint64_t v28 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
        if (v28 >> 62) {
          goto LABEL_72;
        }
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_46;
      }
    }
    swift_bridgeObjectRelease_n();
    int v27 = 1;
LABEL_52:
    uint64_t v30 = (unsigned char *)(v2 + direct field offset for DOCOperationCombinedProgress.state);
    uint64_t v31 = 1;
    swift_beginAccess();
    int v32 = *v30;
    switch(v32)
    {
      case 2:
        if (v14 == 2) {
          goto LABEL_59;
        }
        break;
      case 3:
        if (v14 == 3) {
          goto LABEL_59;
        }
        break;
      case 4:
LABEL_70:
        *uint64_t v30 = v14;
        uint64_t v36 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
        swift_beginAccess();
        *(double *)uint64_t v36 = v1;
        *(unsigned char *)(v36 + 8) = v27;
        *(unsigned char *)(v36 + 9) = v16 < 1;
        return v31;
      default:
        if ((v14 & 0xFE) != 2 && (v14 & 1) != ((v32 & 1) == 0))
        {
LABEL_59:
          uint64_t v33 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
          swift_beginAccess();
          if (v16 < 1) {
            int v34 = *(unsigned __int8 *)(v33 + 9);
          }
          else {
            int v34 = 0;
          }
          if (v16 >= 1 && (*(unsigned char *)(v33 + 9) & 1) == 0)
          {
            int v35 = *(unsigned __int8 *)(v33 + 8);
            if ((v27 | v35)) {
              int v34 = v27 & v35;
            }
            else {
              int v34 = *(double *)v33 == v1;
            }
          }
          uint64_t v31 = v34 ^ 1u;
          goto LABEL_70;
        }
        break;
    }
    uint64_t v31 = 1;
    goto LABEL_70;
  }
  swift_release();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004AC7E4()
{
  uint64_t v2 = v0;
  unint64_t v3 = sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
  if (v3 >> 62) {
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    int v14 = 0;
    goto LABEL_21;
  }
  unint64_t v5 = sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
  unint64_t v6 = v5;
  if (v5 >> 62)
  {
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    if (v7) {
      goto LABEL_6;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v7) {
    goto LABEL_18;
  }
LABEL_6:
  v41[0] = (uint64_t)_swiftEmptyArrayStorage;
  sub_100190D28(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
    __break(1u);
LABEL_71:
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
LABEL_46:
    int v14 = v40;
    uint64_t v16 = v39;
    swift_bridgeObjectRelease();
    int v27 = 0;
    double v1 = v1 / (double)v29;
    goto LABEL_52;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (void *)v41[0];
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v10 = swift_retain();
    }
    char v11 = *(unsigned char *)(v10 + *(void *)(*(void *)v10 + 336));
    swift_release();
    v41[0] = (uint64_t)v9;
    unint64_t v13 = v9[2];
    unint64_t v12 = v9[3];
    if (v13 >= v12 >> 1)
    {
      sub_100190D28(v12 > 1, v13 + 1, 1);
      uint64_t v9 = (void *)v41[0];
    }
    ++v8;
    v9[2] = v13 + 1;
    *((unsigned char *)v9 + v13 + 32) = v11;
  }
  while (v7 != v8);
  swift_bridgeObjectRelease();
LABEL_19:
  v41[0] = (uint64_t)v9;
  swift_bridgeObjectRetain();
  sub_1004ACEA0(v41);
  swift_bridgeObjectRelease();
  if (*(void *)(v41[0] + 16))
  {
    int v14 = *(unsigned __int8 *)(v41[0] + 32);
    swift_release();
LABEL_21:
    unint64_t v15 = sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
    if (v15 >> 62) {
LABEL_49:
    }
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    else {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    double v1 = 0.0;
    if (v16 < 1)
    {
      int v27 = 0;
      goto LABEL_52;
    }
    unint64_t v17 = sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
    unint64_t v18 = v17;
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
      if (v19) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_26:
        uint64_t v39 = v16;
        int v40 = v14;
        uint64_t v20 = 0;
        char v21 = 0;
LABEL_27:
        uint64_t v22 = v20;
        do
        {
          if ((v18 & 0xC000000000000001) != 0)
          {
            uint64_t v23 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v20 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v23 = swift_retain();
            uint64_t v20 = v22 + 1;
            if (__OFADD__(v22, 1))
            {
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
          }
          uint64_t v24 = v23 + *(void *)(*(void *)v23 + 328);
          double v25 = *(double *)v24;
          int v14 = *(unsigned __int8 *)(v24 + 8);
          char v26 = *(unsigned char *)(v23 + *(void *)(*(void *)v23 + 336));
          swift_release();
          if ((v26 & 0xFE) == 2)
          {
            if ((v14 & 1) == 0)
            {
              double v1 = v1 + v25;
              goto LABEL_40;
            }
            double v1 = v1 + 0.0;
          }
          else if ((v26 & 1) == 0)
          {
            double v1 = v1 + 1.0;
LABEL_40:
            char v21 = 1;
            if (v20 != v19) {
              goto LABEL_27;
            }
            swift_bridgeObjectRelease_n();
            goto LABEL_44;
          }
          ++v22;
        }
        while (v20 != v19);
        swift_bridgeObjectRelease_n();
        if ((v21 & 1) == 0)
        {
          int v27 = 1;
          double v1 = 0.0;
          int v14 = v40;
          uint64_t v16 = v39;
          goto LABEL_52;
        }
LABEL_44:
        unint64_t v28 = sub_1004ABF84(sub_100408BEC, &qword_1007187E0);
        if (v28 >> 62) {
          goto LABEL_71;
        }
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_46;
      }
    }
    swift_bridgeObjectRelease_n();
    int v27 = 1;
LABEL_52:
    uint64_t v30 = (unsigned char *)(v2 + direct field offset for DOCOperationCombinedProgress.state);
    uint64_t v31 = 1;
    swift_beginAccess();
    int v32 = *v30;
    switch(v32)
    {
      case 2:
        if (v14 == 2) {
          goto LABEL_59;
        }
        break;
      case 3:
        if (v14 == 3) {
          goto LABEL_59;
        }
        break;
      case 4:
LABEL_69:
        *uint64_t v30 = v14;
        uint64_t v37 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
        swift_beginAccess();
        *(double *)uint64_t v37 = v1;
        *(unsigned char *)(v37 + 8) = v27;
        *(unsigned char *)(v37 + 9) = v16 < 1;
        return v31;
      default:
        if ((v14 & 0xFE) != 2 && (v14 & 1) != ((v32 & 1) == 0))
        {
LABEL_59:
          uint64_t v33 = v2 + direct field offset for DOCOperationCombinedProgress.progressValue;
          swift_beginAccess();
          if (v16 < 1) {
            int v34 = *(unsigned __int8 *)(v33 + 9);
          }
          else {
            int v34 = 0;
          }
          if (v16 >= 1 && (*(unsigned char *)(v33 + 9) & 1) == 0)
          {
            int v35 = *(unsigned __int8 *)(v33 + 8);
            char v36 = v27 | v35;
            int v34 = v27 & v35;
            if ((v36 & 1) == 0) {
              int v34 = *(double *)v33 == v1;
            }
          }
          uint64_t v31 = v34 ^ 1u;
          goto LABEL_69;
        }
        break;
    }
    uint64_t v31 = 1;
    goto LABEL_69;
  }
  swift_release();
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1004ACD98()
{
  unint64_t v0 = sub_1004ABF84(sub_100408BEC, &qword_10070D1F8);
  unint64_t v1 = v0;
  if (v0 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    sub_1004ACF0C();
    swift_release();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();

  return sub_1004AC224();
}

Swift::Int sub_1004ACEA0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_10052026C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1004AFC50(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1004ACF0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + *(void *)(*(void *)v0 + 352));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  unint64_t v5 = sub_1000A6B78(v2, v3);
  uint64_t v6 = *(void *)(v3 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v31[-v7];
  (*(void (**)(unsigned char *))(v6 + 16))(&v31[-v7]);
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v3);
  int v10 = sub_1004A9F04(v9);
  if (*(unsigned char *)(v1 + *(void *)(*(void *)v1 + 392))) {
    int v11 = 1;
  }
  else {
    int v11 = v10;
  }
  uint64_t v12 = *(void *)(*(void *)v1 + 336);
  int v13 = *(unsigned __int8 *)(v1 + v12);
  if (v11 == 2)
  {
    if (v13 == 2) {
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v11 == 3)
  {
    if (v13 != 3) {
      goto LABEL_11;
    }
LABEL_9:
    int v14 = 0;
    goto LABEL_13;
  }
  if ((v13 & 0xFE) == 2)
  {
LABEL_11:
    int v14 = 1;
    goto LABEL_13;
  }
  int v14 = v11 ^ v13;
LABEL_13:
  uint64_t v15 = v2[3];
  uint64_t v16 = v2[4];
  unint64_t v17 = sub_1000A6B78(v2, v15);
  uint64_t v18 = *(void *)(v15 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v31[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v18 + 16))(v20);
  char v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v15);
  unsigned __int8 v22 = [v21 isIndeterminate];
  if (v22)
  {

    uint64_t v23 = v1 + *(void *)(*(void *)v1 + 328);
    int v24 = *(unsigned __int8 *)(v23 + 8) ^ 1;
    double v25 = 0.0;
  }
  else
  {
    [v21 fractionCompleted];
    double v27 = v26;

    double v25 = fmin(v27, 1.0);
    if (v25 < 0.0) {
      double v25 = 0.0;
    }
    uint64_t v23 = v1 + *(void *)(*(void *)v1 + 328);
    int v24 = (*(unsigned char *)(v23 + 8) & 1) != 0 || v25 != *(double *)v23;
  }
  *(unsigned char *)(v1 + v12) = v11;
  *(double *)uint64_t v23 = v25;
  *(unsigned char *)(v23 + 8) = v22;
  unint64_t v28 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 368));
  swift_beginAccess();
  *unint64_t v28 = 0;
  uint64_t v29 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 376));
  swift_beginAccess();
  *uint64_t v29 = 0;
  return (v14 | v24) & 1;
}

id sub_1004AD2C8(void (*a1)(void *))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_9;
  }
  uint64_t v3 = (void *)Strong;
  uint64_t v4 = *(void *)(Strong + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView);
  swift_retain();
  sub_1004ACD98();
  swift_release();
  sub_100294910();
  if ((*(unsigned char *)(v4 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress + 8) & 1) != 0
    || *(double *)(v4 + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress) >= 1.0)
  {

LABEL_9:
    a1(_swiftEmptyArrayStorage);
    return (id)swift_bridgeObjectRelease();
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v6 = result;
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    v15._uint64_t countAndFlagsBits = 0xD000000000000040;
    v15._object = (void *)0x80000001005EE050;
    v7._object = (void *)0x80000001005EE030;
    v7._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v8._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v8._object = (void *)0xEB00000000656C62;
    v9._uint64_t countAndFlagsBits = 0x73736572676F7250;
    v9._object = (void *)0xE800000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v15);

    int v10 = self;
    NSString v11 = String._bridgeToObjectiveC()();
    id v12 = [v10 __systemImageNamedSwift:v11];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    int v13 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();

    id v14 = v13;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_1004AD594()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1004AE18C(0);
  }
}

void sub_1004AD654(void *a1)
{
  id v2 = [a1 doc_presentingViewController];
  if (v2
    && (uint64_t v3 = v2,
        id v4 = [v2 presentedViewController],
        v3,
        v4)
    || (id v5 = [a1 window],
        id v4 = [v5 rootViewController],
        v5,
        v4))
  {
    id v6 = v4;
    id v7 = v6;
    sub_1004AD7B4(v6);
  }
}

void sub_1004AD7B4(void *a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int v10 = (char *)&v33 - v9;
  uint64_t v11 = *(void *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView]
      + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress;
  if ((*(unsigned char *)(v11 + 8) & 1) != 0 || *(double *)v11 >= 1.0) {
    return;
  }
  id Strong = a1;
  if (a1 || (id Strong = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v13 = a1;
LABEL_6:
    id v14 = Strong;
    uint64_t v15 = *(void *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource + 8];
    int v16 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration];
    int v17 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration + 1];
    int v18 = v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_configuration + 2];
    objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionViewer());
    if (v18) {
      int v19 = 0x10000;
    }
    else {
      int v19 = 0;
    }
    if (v17) {
      int v20 = 256;
    }
    else {
      int v20 = 0;
    }
    unsigned int v21 = v20 | v16 | v19;
    uint64_t v22 = swift_unknownObjectRetain();
    uint64_t v23 = sub_1002E27F8(v22, v15, v21, (uint64_t)&off_10068B380);
    sub_1002E2D90(v14, v2, 0, 15);

    return;
  }
  static Logger.ProgressUI.getter();
  int v24 = Logger.logObject.getter();
  uint64_t v25 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v24, (os_log_type_t)v25))
  {
    double v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v25, "ERROR: No presentingVC for progress UI, falling back to any window's root", v26, 2u);
    swift_slowDealloc();
  }

  double v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v10, v4);
  id v28 = [self anyWindowPreferingKeyWindow];
  if (v28)
  {
    uint64_t v29 = v28;
    id Strong = [v28 rootViewController];

    if (Strong) {
      goto LABEL_6;
    }
  }
  static Logger.ProgressUI.getter();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v30, v31))
  {
    int v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "ERROR: No presentingVC for progress UI, falling to present UI", v32, 2u);
    swift_slowDealloc();
  }

  v27(v8, v4);
}

void sub_1004ADAEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_retain();
    sub_1004ACD98();
    swift_release();
    sub_100294910();
    sub_1004AD7B4(0);
  }
}

id sub_1004ADC2C()
{
  return sub_1004AEFE0((uint64_t (*)(void))type metadata accessor for DOCProgressCollectionIndicatorButtonItem.ProgressItemContainerView);
}

void *sub_1004ADC84()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_containerView];
  [v2 setClipsToBounds:0];
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView];
  [v2 addSubview:v3];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v2 widthAnchor];
  id v5 = [v4 constraintEqualToConstant:0.0];

  uint64_t v6 = OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint] = v5;

  id result = *(void **)&v1[v6];
  if (result)
  {
    [result setActive:1];
    uint64_t v9 = self;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1005A00C0;
    id v11 = [v2 heightAnchor];
    id v12 = [v11 constraintEqualToConstant:44.0];

    *(void *)(v10 + 32) = v12;
    id v13 = [v3 heightAnchor];
    id v14 = [v13 constraintEqualToConstant:21.5];

    *(void *)(v10 + 40) = v14;
    id v15 = [v3 widthAnchor];
    id v16 = [v15 constraintEqualToConstant:21.5];

    *(void *)(v10 + 48) = v16;
    id v17 = [v3 centerYAnchor];
    id v18 = [v2 centerYAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    *(void *)(v10 + 56) = v19;
    id v20 = [v3 trailingAnchor];
    id v21 = [v2 trailingAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21 constant:-13.25];

    *(void *)(v10 + 64) = v22;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 activateConstraints:isa, v10];

    v31.receiver = v1;
    v31.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0);
    [super setCustomView:v2];
    int v24 = v1;
    sub_100295A20();

    uint64_t v25 = self;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v24;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_1004B0700;
    *(void *)(v27 + 24) = v26;
    v30[4] = sub_1000879B8;
    v30[5] = v27;
    v30[0] = _NSConcreteStackBlock;
    v30[1] = 1107296256;
    v30[2] = sub_100087990;
    v30[3] = &unk_1006B07B0;
    id v28 = _Block_copy(v30);
    uint64_t v29 = v24;
    swift_retain();
    swift_release();
    [v25 performWithoutAnimation:v28];
    _Block_release(v28);
    LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (void *)swift_release();
    if ((v24 & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_1004AE124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static UUID.== infix(_:_:)() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
      && *(double *)(a1 + *(int *)(a3 + 24)) == *(double *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_1004AE18C(char a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v29 + 64);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - v8;
  uint64_t v10 = sub_1000CBE70(&qword_1007187C8);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  id v13 = (char *)&aBlock[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&aBlock[-1] - v14;
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_progressSource + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(ObjectType, v16) + 16);
  swift_bridgeObjectRelease();
  if (v18) {
    int v19 = 1;
  }
  else {
    int v19 = *(unsigned __int8 *)(*(void *)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_indicatorView]
  }
                             + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress
                             + 8) ^ 1;
  uint64_t v20 = (uint64_t)&v2[OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange];
  swift_beginAccess();
  sub_1004AF7FC(v20, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v15, 1, v4))
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007187C8);
    uint64_t result = (uint64_t)[v2 isHidden];
    int v22 = result ^ 1;
    if (a1) {
      goto LABEL_9;
    }
LABEL_8:
    if (((v19 ^ v22) & 1) == 0) {
      return result;
    }
    goto LABEL_9;
  }
  sub_1004AF864((uint64_t)v15, (uint64_t)v9);
  sub_1000CBBA4((uint64_t)v15, &qword_1007187C8);
  int v22 = v9[*(int *)(v4 + 20)];
  uint64_t result = sub_1004AF930((uint64_t)v9);
  if ((a1 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_9:
  if (v19) {
    double v23 = 48.0;
  }
  else {
    double v23 = 0.0;
  }
  UUID.init()();
  v7[*(int *)(v4 + 20)] = v19 & 1;
  *(double *)&v7[*(int *)(v4 + 24)] = v23;
  sub_1004AF864((uint64_t)v7, (uint64_t)v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v13, 0, 1, v4);
  swift_beginAccess();
  sub_1004AF8C8((uint64_t)v13, v20);
  swift_endAccess();
  if ((v19 & 1) != 0 && [self areAnimationsEnabled])
  {
    [v2 setHidden:0];
    int v24 = self;
    sub_1004AF864((uint64_t)v7, (uint64_t)v9);
    unint64_t v25 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v2;
    sub_1004AF990((uint64_t)v9, v26 + v25);
    aBlock[4] = sub_1004AF9F4;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    aBlock[3] = &unk_1006B06E8;
    uint64_t v27 = _Block_copy(aBlock);
    id v28 = v2;
    swift_release();
    [v24 performAfterCATransactionCommits:v27];
    _Block_release(v27);
  }
  else
  {
    sub_1004AE5B0(v2, (uint64_t)v7);
  }
  return sub_1004AF930((uint64_t)v7);
}

uint64_t sub_1004AE5B0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v43 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v42 = (uint64_t)&v41 - v9;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1000CBE70(&qword_1007187D0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  id v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1000CBE70(&qword_1007187C8);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  int v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = (char *)&v41 - v20;
  uint64_t v45 = a1;
  uint64_t v22 = (uint64_t)a1 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange;
  swift_beginAccess();
  uint64_t v44 = a2;
  sub_1004AF864(a2, (uint64_t)v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v21, 0, 1, v4);
  uint64_t v23 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_1004AF7FC(v22, (uint64_t)v15);
  sub_1004AF7FC((uint64_t)v21, v23);
  int v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v15, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v21, &qword_1007187C8);
    if (v24(v23, 1, v4) == 1)
    {
      sub_1000CBBA4((uint64_t)v15, &qword_1007187C8);
LABEL_4:
      sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
      uint64_t v25 = v44;
      uint64_t v26 = v42;
      sub_1004AF864(v44, v42);
      uint64_t v27 = *(unsigned __int8 *)(v5 + 80);
      uint64_t v28 = (v27 + 16) & ~v27;
      unint64_t v29 = (v6 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v30 = swift_allocObject();
      sub_1004AF990(v26, v30 + v28);
      objc_super v31 = v45;
      *(void *)(v30 + v29) = v45;
      uint64_t v32 = v43;
      sub_1004AF864(v25, v43);
      uint64_t v33 = swift_allocObject();
      *(void *)(v33 + 16) = v31;
      sub_1004AF990(v32, v33 + ((v27 + 24) & ~v27));
      id v34 = v31;
      static UIView.doc_performAnimatable(allowingAnimations:animationDuration:animations:completion:)();
      swift_release();
      return swift_release();
    }
    goto LABEL_7;
  }
  sub_1004AF7FC((uint64_t)v15, (uint64_t)v19);
  if (v24(v23, 1, v4) == 1)
  {
    sub_1000CBBA4((uint64_t)v21, &qword_1007187C8);
    sub_1004AF930((uint64_t)v19);
LABEL_7:
    char v36 = &qword_1007187D0;
    uint64_t v37 = (uint64_t)v15;
    return sub_1000CBBA4(v37, v36);
  }
  sub_1004AF990(v23, (uint64_t)v11);
  if ((static UUID.== infix(_:_:)() & 1) == 0 || v19[*(int *)(v4 + 20)] != v11[*(int *)(v4 + 20)])
  {
    sub_1004AF930((uint64_t)v11);
    sub_1000CBBA4((uint64_t)v21, &qword_1007187C8);
    sub_1004AF930((uint64_t)v19);
    uint64_t v37 = (uint64_t)v15;
    char v36 = &qword_1007187C8;
    return sub_1000CBBA4(v37, v36);
  }
  uint64_t v38 = *(int *)(v4 + 24);
  double v39 = *(double *)&v19[v38];
  double v40 = *(double *)&v11[v38];
  sub_1004AF930((uint64_t)v11);
  sub_1000CBBA4((uint64_t)v21, &qword_1007187C8);
  sub_1004AF930((uint64_t)v19);
  uint64_t result = sub_1000CBBA4((uint64_t)v15, &qword_1007187C8);
  if (v39 == v40) {
    goto LABEL_4;
  }
  return result;
}

void sub_1004AEA68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  uint64_t v5 = *(void **)(a2 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_widthConstraint);
  if (v5)
  {
    [v5 setConstant:*(double *)(a1 + *(int *)(v4 + 24))];
    sub_10009E6C4(0, &qword_1007187D8);
    uint64_t v6 = (void *)UIView.doc_nearestAncestor<A>(ofType:)();
    if (v6)
    {
      id v7 = v6;
      [v6 layoutIfNeeded];
    }
  }
  else
  {
    __break(1u);
  }
}

id sub_1004AEB2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_1007187D0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_1007187C8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v32 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v31 - v19;
  id v34 = a2;
  uint64_t v21 = (uint64_t)a2 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange;
  swift_beginAccess();
  uint64_t v33 = a3;
  sub_1004AF864(a3, (uint64_t)v20);
  objc_super v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v31(v20, 0, 1, v5);
  uint64_t v22 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_1004AF7FC(v21, (uint64_t)v12);
  sub_1004AF7FC((uint64_t)v20, v22);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v23((uint64_t)v12, 1, v5) == 1)
  {
    sub_1000CBBA4((uint64_t)v20, &qword_1007187C8);
    if (v23(v22, 1, v5) == 1)
    {
      sub_1000CBBA4((uint64_t)v12, &qword_1007187C8);
LABEL_4:
      uint64_t v24 = (uint64_t)v32;
      v31(v32, 1, 1, v5);
      swift_beginAccess();
      sub_1004AF8C8(v24, v21);
      swift_endAccess();
      return [v34 setHidden:(*(unsigned char *)(v33 + *(int *)(v5 + 20)) & 1) == 0];
    }
    goto LABEL_7;
  }
  sub_1004AF7FC((uint64_t)v12, (uint64_t)v18);
  if (v23(v22, 1, v5) == 1)
  {
    sub_1000CBBA4((uint64_t)v20, &qword_1007187C8);
    sub_1004AF930((uint64_t)v18);
LABEL_7:
    uint64_t v26 = &qword_1007187D0;
    uint64_t v27 = (uint64_t)v12;
    return (id)sub_1000CBBA4(v27, v26);
  }
  sub_1004AF990(v22, (uint64_t)v8);
  if ((static UUID.== infix(_:_:)() & 1) == 0 || v18[*(int *)(v5 + 20)] != v8[*(int *)(v5 + 20)])
  {
    sub_1004AF930((uint64_t)v8);
    sub_1000CBBA4((uint64_t)v20, &qword_1007187C8);
    sub_1004AF930((uint64_t)v18);
    uint64_t v27 = (uint64_t)v12;
    uint64_t v26 = &qword_1007187C8;
    return (id)sub_1000CBBA4(v27, v26);
  }
  uint64_t v28 = *(int *)(v5 + 24);
  double v29 = *(double *)&v18[v28];
  double v30 = *(double *)&v8[v28];
  sub_1004AF930((uint64_t)v8);
  sub_1000CBBA4((uint64_t)v20, &qword_1007187C8);
  sub_1004AF930((uint64_t)v18);
  id result = (id)sub_1000CBBA4((uint64_t)v12, &qword_1007187C8);
  if (v29 == v30) {
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1004AEF4C()
{
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();

  return sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files40DOCProgressCollectionIndicatorButtonItem_inFlightVisibilityChange, &qword_1007187C8);
}

id sub_1004AEFC8()
{
  return sub_1004AEFE0(type metadata accessor for DOCProgressCollectionIndicatorButtonItem);
}

id sub_1004AEFE0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t sub_1004AF0A8()
{
  return type metadata accessor for DOCProgressCollectionIndicatorButtonItem(0);
}

uint64_t type metadata accessor for DOCProgressCollectionIndicatorButtonItem(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_1007186E8);
}

void sub_1004AF0D0()
{
  sub_1004AF1AC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1004AF1AC()
{
  if (!qword_1007186F8)
  {
    type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007186F8);
    }
  }
}

uint64_t type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(uint64_t a1)
{
  return sub_10009E984(a1, qword_100718788);
}

uint64_t type metadata accessor for DOCProgressCollectionIndicatorButtonItem.ProgressItemContainerView()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCProgressCollectionIndicatorButtonItem.Metrics()
{
  return &type metadata for DOCProgressCollectionIndicatorButtonItem.Metrics;
}

void *sub_1004AF258(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_1004AF32C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  objc_super v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1004AF390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1004AF414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1004AF49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1004AF520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1004AF5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004AF5B8);
}

uint64_t sub_1004AF5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1004AF688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004AF69C);
}

uint64_t sub_1004AF69C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1004AF758()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004AF7FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007187C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AF864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AF8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007187C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AF930(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004AF990(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004AF9F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1004AE5B0(v2, v3);
}

uint64_t sub_1004AFA58()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return _swift_deallocObject(v0, v5 + 8, v4);
}

void sub_1004AFB4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004AEA68(v0 + v2, v3);
}

id sub_1004AFBDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DOCProgressCollectionIndicatorButtonItem.VisibilityChangeTransaction(0)
                 - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1004AEB2C(a1, v4, v5);
}

Swift::Int sub_1004AFC50(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_178;
    }
    if (v3) {
      return sub_1004B0358(0, v3, 1, a1);
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_186:
      Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    Swift::Int v95 = result;
    id v93 = a1;
    if (v3 >= 2)
    {
      uint64_t v6 = v5 >> 1;
      uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)(v7 + 16) = v6;
      id v94 = (void *)v7;
      __dst = (unsigned __int8 *)(v7 + 32);
      goto LABEL_12;
    }
    uint64_t v8 = (char *)_swiftEmptyArrayStorage;
    __dst = (unsigned __int8 *)&_swiftEmptyArrayStorage[4];
    id v94 = _swiftEmptyArrayStorage;
    if (v3 == 1)
    {
LABEL_12:
      Swift::Int v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v8 = (char *)_swiftEmptyArrayStorage;
      Swift::Int v96 = v3;
      uint64_t v97 = *a1;
      while (1)
      {
        Swift::Int v12 = v9++;
        if (v9 >= v3) {
          goto LABEL_65;
        }
        int v13 = *(unsigned __int8 *)(v10 + v9);
        int v14 = *(unsigned __int8 *)(v10 + v12);
        if (v13) {
          unint64_t v15 = 3;
        }
        else {
          unint64_t v15 = 4;
        }
        if (v13 == 3) {
          unint64_t v15 = 2;
        }
        if (v13 == 2) {
          unint64_t v15 = 1;
        }
        if (v14) {
          uint64_t v16 = 3;
        }
        else {
          uint64_t v16 = 4;
        }
        if (v14 == 3) {
          uint64_t v16 = 2;
        }
        unint64_t v17 = v14 == 2 ? 1 : v16;
        Swift::Int v9 = v12 + 2;
        if (v12 + 2 < v3) {
          break;
        }
LABEL_53:
        if (v15 < v17)
        {
LABEL_56:
          if (v9 < v12) {
            goto LABEL_179;
          }
          if (v12 < v9)
          {
            Swift::Int v23 = v9 - 1;
            Swift::Int v24 = v12;
            do
            {
              if (v24 != v23)
              {
                if (!v10) {
                  goto LABEL_184;
                }
                char v25 = *(unsigned char *)(v10 + v24);
                *(unsigned char *)(v10 + v24) = *(unsigned char *)(v10 + v23);
                *(unsigned char *)(v10 + v23) = v25;
              }
              BOOL v21 = ++v24 < v23--;
            }
            while (v21);
          }
        }
LABEL_65:
        if (v9 >= v3) {
          goto LABEL_95;
        }
        if (__OFSUB__(v9, v12)) {
          goto LABEL_177;
        }
        if (v9 - v12 >= v95) {
          goto LABEL_95;
        }
        Swift::Int v26 = v12 + v95;
        if (__OFADD__(v12, v95)) {
          goto LABEL_180;
        }
        if (v26 >= v3) {
          Swift::Int v26 = v3;
        }
        if (v26 < v12)
        {
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
          goto LABEL_186;
        }
        if (v9 == v26) {
          goto LABEL_95;
        }
        uint64_t v27 = (unsigned char *)(v10 + v9);
        while (2)
        {
          int v28 = *(unsigned __int8 *)(v10 + v9);
          if (v28) {
            uint64_t v29 = 3;
          }
          else {
            uint64_t v29 = 4;
          }
          Swift::Int v30 = v12;
          objc_super v31 = v27;
          do
          {
            int v32 = *(v31 - 1);
            if (v28 == 3) {
              unint64_t v33 = 2;
            }
            else {
              unint64_t v33 = v29;
            }
            if (v28 == 2) {
              unint64_t v33 = 1;
            }
            if (v32 == 3)
            {
              BOOL v34 = v33 >= 2;
            }
            else
            {
              if (v32 == 2) {
                break;
              }
              BOOL v34 = v33 >= 3;
              if ((v32 & 1) == 0)
              {
                if (v33 > 3) {
                  break;
                }
                goto LABEL_91;
              }
            }
            if (v34) {
              break;
            }
LABEL_91:
            if (!v10) {
              goto LABEL_182;
            }
            *objc_super v31 = v32;
            *--objc_super v31 = v28;
            ++v30;
          }
          while (v9 != v30);
          ++v9;
          ++v27;
          if (v9 != v26) {
            continue;
          }
          break;
        }
        Swift::Int v9 = v26;
LABEL_95:
        if (v9 < v12) {
          goto LABEL_172;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_10051F91C(0, *((void *)v8 + 2) + 1, 1, v8);
        }
        unint64_t v36 = *((void *)v8 + 2);
        unint64_t v35 = *((void *)v8 + 3);
        unint64_t v11 = v36 + 1;
        uint64_t v10 = v97;
        if (v36 >= v35 >> 1)
        {
          uint64_t v84 = sub_10051F91C((char *)(v35 > 1), v36 + 1, 1, v8);
          uint64_t v10 = v97;
          uint64_t v8 = v84;
        }
        *((void *)v8 + 2) = v11;
        uint64_t v37 = v8 + 32;
        uint64_t v38 = &v8[16 * v36 + 32];
        *(void *)uint64_t v38 = v12;
        *((void *)v38 + 1) = v9;
        if (v36)
        {
          while (2)
          {
            unint64_t v39 = v11 - 1;
            if (v11 >= 4)
            {
              uint64_t v44 = &v37[16 * v11];
              uint64_t v45 = *((void *)v44 - 8);
              uint64_t v46 = *((void *)v44 - 7);
              BOOL v50 = __OFSUB__(v46, v45);
              uint64_t v47 = v46 - v45;
              if (v50) {
                goto LABEL_161;
              }
              uint64_t v49 = *((void *)v44 - 6);
              uint64_t v48 = *((void *)v44 - 5);
              BOOL v50 = __OFSUB__(v48, v49);
              uint64_t v42 = v48 - v49;
              char v43 = v50;
              if (v50) {
                goto LABEL_162;
              }
              unint64_t v51 = v11 - 2;
              uint64_t v52 = &v37[16 * v11 - 32];
              uint64_t v54 = *(void *)v52;
              uint64_t v53 = *((void *)v52 + 1);
              BOOL v50 = __OFSUB__(v53, v54);
              uint64_t v55 = v53 - v54;
              if (v50) {
                goto LABEL_164;
              }
              BOOL v50 = __OFADD__(v42, v55);
              uint64_t v56 = v42 + v55;
              if (v50) {
                goto LABEL_167;
              }
              if (v56 >= v47)
              {
                unint64_t v74 = &v37[16 * v39];
                uint64_t v76 = *(void *)v74;
                uint64_t v75 = *((void *)v74 + 1);
                BOOL v50 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v50) {
                  goto LABEL_171;
                }
                BOOL v67 = v42 < v77;
              }
              else
              {
LABEL_114:
                if (v43) {
                  goto LABEL_163;
                }
                unint64_t v51 = v11 - 2;
                id v57 = &v37[16 * v11 - 32];
                uint64_t v59 = *(void *)v57;
                uint64_t v58 = *((void *)v57 + 1);
                BOOL v60 = __OFSUB__(v58, v59);
                uint64_t v61 = v58 - v59;
                char v62 = v60;
                if (v60) {
                  goto LABEL_166;
                }
                long long v63 = &v37[16 * v39];
                uint64_t v65 = *(void *)v63;
                uint64_t v64 = *((void *)v63 + 1);
                BOOL v50 = __OFSUB__(v64, v65);
                uint64_t v66 = v64 - v65;
                if (v50) {
                  goto LABEL_169;
                }
                if (__OFADD__(v61, v66)) {
                  goto LABEL_170;
                }
                if (v61 + v66 < v42) {
                  goto LABEL_126;
                }
                BOOL v67 = v42 < v66;
              }
              if (v67) {
                unint64_t v39 = v51;
              }
            }
            else
            {
              if (v11 == 3)
              {
                uint64_t v41 = *((void *)v8 + 4);
                uint64_t v40 = *((void *)v8 + 5);
                BOOL v50 = __OFSUB__(v40, v41);
                uint64_t v42 = v40 - v41;
                char v43 = v50;
                goto LABEL_114;
              }
              uint64_t v68 = *((void *)v8 + 4);
              uint64_t v69 = *((void *)v8 + 5);
              BOOL v50 = __OFSUB__(v69, v68);
              uint64_t v61 = v69 - v68;
              char v62 = v50;
LABEL_126:
              if (v62) {
                goto LABEL_165;
              }
              uint64_t v70 = &v37[16 * v39];
              uint64_t v72 = *(void *)v70;
              uint64_t v71 = *((void *)v70 + 1);
              BOOL v50 = __OFSUB__(v71, v72);
              uint64_t v73 = v71 - v72;
              if (v50) {
                goto LABEL_168;
              }
              if (v73 < v61) {
                goto LABEL_14;
              }
            }
            unint64_t v78 = v39 - 1;
            if (v39 - 1 >= v11)
            {
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
              goto LABEL_181;
            }
            if (!v10) {
              goto LABEL_183;
            }
            unint64_t v79 = &v37[16 * v78];
            uint64_t v80 = *(void *)v79;
            uint64_t v81 = &v37[16 * v39];
            uint64_t v82 = *((void *)v81 + 1);
            sub_1004B03FC((unsigned __int8 *)(v10 + *(void *)v79), (unsigned __int8 *)(v10 + *(void *)v81), v10 + v82, __dst);
            if (v1) {
              goto LABEL_142;
            }
            if (v82 < v80) {
              goto LABEL_158;
            }
            if (v39 > *((void *)v8 + 2)) {
              goto LABEL_159;
            }
            *(void *)unint64_t v79 = v80;
            *(void *)&v37[16 * v78 + 8] = v82;
            unint64_t v83 = *((void *)v8 + 2);
            if (v39 >= v83) {
              goto LABEL_160;
            }
            unint64_t v11 = v83 - 1;
            memmove(&v37[16 * v39], v81 + 16, 16 * (v83 - 1 - v39));
            *((void *)v8 + 2) = v83 - 1;
            uint64_t v10 = v97;
            if (v83 <= 2) {
              goto LABEL_14;
            }
            continue;
          }
        }
        unint64_t v11 = 1;
LABEL_14:
        Swift::Int v3 = v96;
        if (v9 >= v96) {
          goto LABEL_145;
        }
      }
      while (1)
      {
        int v18 = *(unsigned __int8 *)(v10 + v9);
        if (v18) {
          unint64_t v19 = 3;
        }
        else {
          unint64_t v19 = 4;
        }
        if (v18 == 3) {
          unint64_t v19 = 2;
        }
        if (v18 == 2) {
          unint64_t v19 = 1;
        }
        if (v13 == 2)
        {
          if (v15 < v17) {
            goto LABEL_56;
          }
        }
        else
        {
          if (v13 == 3)
          {
            BOOL v20 = v15 < v17;
            BOOL v21 = v19 > 1;
            goto LABEL_49;
          }
          if (v13)
          {
            BOOL v20 = v15 < v17;
            BOOL v21 = v19 > 2;
LABEL_49:
            int v22 = v21;
            if (((v20 ^ v22) & 1) == 0) {
              goto LABEL_53;
            }
            goto LABEL_34;
          }
          if (v15 < v17 == v19 > 3) {
            goto LABEL_53;
          }
        }
LABEL_34:
        ++v9;
        int v13 = v18;
        if (v3 == v9)
        {
          Swift::Int v9 = v3;
          if (v15 < v17) {
            goto LABEL_56;
          }
          goto LABEL_65;
        }
      }
    }
    unint64_t v11 = _swiftEmptyArrayStorage[2];
LABEL_145:
    uint64_t v85 = v8;
    if (v11 >= 2)
    {
      uint64_t v86 = *v93;
      do
      {
        unint64_t v87 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_173;
        }
        if (!v86) {
          goto LABEL_185;
        }
        uint64_t v88 = v85;
        uint64_t v89 = *(void *)&v85[16 * v87 + 32];
        uint64_t v90 = *(void *)&v85[16 * v11 + 24];
        sub_1004B03FC((unsigned __int8 *)(v86 + v89), (unsigned __int8 *)(v86 + *(void *)&v85[16 * v11 + 16]), v86 + v90, __dst);
        if (v1) {
          break;
        }
        if (v90 < v89) {
          goto LABEL_174;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v88 = sub_100520230((uint64_t)v88);
        }
        if (v87 >= *((void *)v88 + 2)) {
          goto LABEL_175;
        }
        char v91 = &v88[16 * v87 + 32];
        *(void *)char v91 = v89;
        *((void *)v91 + 1) = v90;
        unint64_t v92 = *((void *)v88 + 2);
        if (v11 > v92) {
          goto LABEL_176;
        }
        memmove(&v88[16 * v11 + 16], &v88[16 * v11 + 32], 16 * (v92 - v11));
        uint64_t v85 = v88;
        *((void *)v88 + 2) = v92 - 1;
        unint64_t v11 = v92 - 1;
      }
      while (v92 > 2);
    }
LABEL_142:
    swift_bridgeObjectRelease();
    v94[2] = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004B0358(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = (unsigned char *)(*a4 + a3);
LABEL_5:
    int v6 = *(unsigned __int8 *)(v4 + a3);
    if (v6) {
      uint64_t v7 = 3;
    }
    else {
      uint64_t v7 = 4;
    }
    uint64_t v8 = result;
    Swift::Int v9 = v5;
    while (1)
    {
      int v10 = *(v9 - 1);
      if (v6 == 3) {
        unint64_t v11 = 2;
      }
      else {
        unint64_t v11 = v7;
      }
      if (v6 == 2) {
        unint64_t v11 = 1;
      }
      if (v10 == 3)
      {
        BOOL v12 = v11 >= 2;
      }
      else
      {
        if (v10 == 2) {
          goto LABEL_4;
        }
        BOOL v12 = v11 >= 3;
        if ((v10 & 1) == 0)
        {
          if (v11 > 3) {
            goto LABEL_4;
          }
          goto LABEL_21;
        }
      }
      if (v12) {
        goto LABEL_4;
      }
LABEL_21:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      unsigned char *v9 = v10;
      *--Swift::Int v9 = v6;
      if (a3 == ++v8)
      {
LABEL_4:
        ++a3;
        ++v5;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1004B03FC(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  Swift::Int v26 = __src;
  uint64_t v4 = __dst;
  int v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  char v25 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_66;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    unint64_t v15 = &v4[v9];
    Swift::Int v24 = &v4[v9];
    Swift::Int v26 = v6;
    if (v7 >= v6 || (unsigned __int8 *)a3 == v6)
    {
LABEL_65:
      sub_10051FA3C((void **)&v26, (const void **)&v25, &v24);
      return 1;
    }
    uint64_t v16 = (unsigned __int8 *)(a3 - 1);
    while (1)
    {
      unint64_t v17 = v16 + 1;
      int v18 = *(v15 - 1);
      unint64_t v19 = v6 - 1;
      int v20 = *(v6 - 1);
      if (v18) {
        uint64_t v21 = 3;
      }
      else {
        uint64_t v21 = 4;
      }
      if (v18 == 3) {
        uint64_t v21 = 2;
      }
      if (v18 == 2) {
        unint64_t v22 = 1;
      }
      else {
        unint64_t v22 = v21;
      }
      if (v20 != 2)
      {
        if (v20 == 3)
        {
          if (v22 < 2) {
            goto LABEL_53;
          }
        }
        else if (v20)
        {
          if (v22 < 3)
          {
LABEL_53:
            if (v17 != v6 || v16 >= v6) {
              *uint64_t v16 = v20;
            }
            Swift::Int v26 = --v6;
            if (v19 <= v7) {
              goto LABEL_65;
            }
            goto LABEL_41;
          }
        }
        else if (v22 <= 3)
        {
          goto LABEL_53;
        }
      }
      Swift::Int v24 = v15 - 1;
      if (v17 < v15 || v16 >= v15 || v17 != v15) {
        *uint64_t v16 = *(v15 - 1);
      }
      --v15;
      if (v6 <= v7) {
        goto LABEL_65;
      }
LABEL_41:
      --v16;
      if (v15 <= v4) {
        goto LABEL_65;
      }
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    int v10 = &v4[v8];
    Swift::Int v24 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        int v11 = *v6;
        int v12 = *v4;
        if (v11) {
          unint64_t v13 = 3;
        }
        else {
          unint64_t v13 = 4;
        }
        if (v11 == 3) {
          unint64_t v13 = 2;
        }
        if (v11 == 2) {
          unint64_t v13 = 1;
        }
        if (v12 == 2) {
          break;
        }
        if (v12 == 3)
        {
          if (v13 >= 2) {
            break;
          }
        }
        else if (v12)
        {
          if (v13 >= 3) {
            break;
          }
        }
        else if (v13 > 3)
        {
          break;
        }
        int v14 = v6 + 1;
        if (v7 < v6 || v7 >= v14 || v7 != v6) {
          *uint64_t v7 = v11;
        }
LABEL_29:
        ++v7;
        if (v4 < v10)
        {
          int v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        Swift::Int v26 = v7;
        goto LABEL_65;
      }
      if (v7 != v4) {
        *uint64_t v7 = v12;
      }
      char v25 = ++v4;
      int v14 = v6;
      goto LABEL_29;
    }
    goto LABEL_65;
  }
LABEL_66:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004B06C8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B0700()
{
  return sub_1004AE18C(1);
}

uint64_t sub_1004B0728()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B0738()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004B0770()
{
}

uint64_t sub_1004B0778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, char a7)
{
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithString:v11];

  unint64_t v13 = self;
  id v14 = v12;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [v13 _systemImageNamed:v15 withConfiguration:0];

  if (v16)
  {

    if ((a7 & 1) == 0)
    {
      id v17 = [v16 imageWithBaselineOffsetFromBottom:*(double *)&a6];

      id v16 = v17;
    }
    id v18 = [self textAttachmentWithImage:v16];
    sub_1004B0A10();
    id v19 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v18];
    id v20 = objc_allocWithZone((Class)NSAttributedString);
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 initWithString:v21];

    [v14 insertAttributedString:v22 atIndex:0];
    [v14 insertAttributedString:v19 atIndex:0];
    id v23 = a5;
    [v14 addAttribute:NSFontAttributeName value:v23 range:0, [v14 length]];

    return (uint64_t)v14;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

unint64_t sub_1004B0A10()
{
  unint64_t result = qword_100709D50;
  if (!qword_100709D50)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100709D50);
  }
  return result;
}

void sub_1004B0A50(void *a1)
{
  uint64_t v2 = v1;
  Swift::Int v3 = a1;
  uint64_t v4 = OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor);
  *(void *)(v1 + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_preferredIconColor) = a1;
  id v10 = a1;
  if (v3)
  {
    if (v5)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
      id v6 = v5;
      id v7 = v10;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8) {
        goto LABEL_9;
      }
      Swift::Int v3 = *(void **)(v2 + v4);
    }
    goto LABEL_7;
  }
  if (v5)
  {
    Swift::Int v3 = 0;
LABEL_7:
    id v9 = v3;
    sub_100292FB0(v3);
  }
  id v6 = v5;
LABEL_9:
}

void sub_1004B0B3C(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 window];
  if (v3)
  {
    uint64_t v4 = v3;
    NSString v15 = (char *)[v3 rootViewController];

    uint64_t v5 = v15;
    if (v15)
    {
      if ((*(unsigned char *)(*(void *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView]
                     + OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress
                     + 8) & 1) == 0)
      {
        uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressSource + 8];
        int v7 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration];
        int v8 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration + 1];
        int v9 = v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_configuration + 2];
        objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionViewer());
        if (v9) {
          int v10 = 0x10000;
        }
        else {
          int v10 = 0;
        }
        if (v8) {
          int v11 = 256;
        }
        else {
          int v11 = 0;
        }
        unsigned int v12 = v11 | v7 | v10;
        uint64_t v13 = swift_unknownObjectRetain();
        id v14 = sub_1002E27F8(v13, v6, v12, (uint64_t)_swiftEmptyArrayStorage);
        sub_1002E2D90(v15, 0, v2, *(void *)&v2[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_popoverArrowDirection]);

        uint64_t v5 = v14;
      }
    }
  }
}

void sub_1004B0D18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v0 addSubview:v2];
  id v3 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A1560;
  id v5 = [v2 leadingAnchor];
  id v6 = [v1 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v4 + 32) = v7;
  id v8 = [v2 trailingAnchor];
  id v9 = [v1 trailingAnchor];
  id v10 = [v8 constraintEqualToAnchor:v9];

  *(void *)(v4 + 40) = v10;
  id v11 = [v2 topAnchor];
  id v12 = [v1 topAnchor];
  id v13 = [v11 constraintEqualToAnchor:v12];

  *(void *)(v4 + 48) = v13;
  id v14 = [v2 bottomAnchor];
  id v15 = [v1 bottomAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  *(void *)(v4 + 56) = v16;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 activateConstraints:isa];

  id v18 = v1;
  sub_100295A20();
}

void sub_1004B0FF0()
{
  swift_unknownObjectRelease();

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files43DOCProgressCollectionIndicatorPresenterView_progressIndicatorView);
}

id sub_1004B1040()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCProgressCollectionIndicatorPresenterView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCProgressCollectionIndicatorPresenterView()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionCellStackMetrics(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionCellStackMetrics(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCellStackMetrics()
{
  return &type metadata for DOCItemCollectionCellStackMetrics;
}

BOOL sub_1004B1158(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t sub_1004B11A0(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718888);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100718890);
  __chkstk_darwin(v8);
  sub_10039B864();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x20756F79206E6143;
  v9._object = (void *)0xEB00000000206F67;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x20656874206E6920;
  v10._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v25 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::Int v24 = *(void (**)(char *))(v5 + 104);
  uint64_t v11 = v26;
  v24(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22[1] = v5 + 8;
  id v23 = v12;
  v12(v7, v11);
  v13._uint64_t countAndFlagsBits = 1886413088;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v22[0] = v14;
  v14(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x657461676976614ELL;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 544106784;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  ((void (*)(char *, void, uint64_t))v24)(v7, v25, v11);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v23(v7, v11);
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  ((void (*)(char *, uint64_t))v22[0])(v4, v29);
  sub_1000CBE70(&qword_100718898);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10059B760;
  *(void *)(v19 + 32) = v28;
  *(void *)(v19 + 40) = v18;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1004B1618(uint64_t a1)
{
  return sub_1004B1B04(a1, (uint64_t)&unk_1005ADE90, (void (*)(uint64_t))sub_10039B864);
}

uint64_t sub_1004B1650(uint64_t a1)
{
  uint64_t v27 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718888);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100718890);
  __chkstk_darwin(v8);
  sub_10039B864();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._object = (void *)0x80000001005F9A80;
  v9._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 544106784;
  v10._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v25 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::Int v24 = *(void (**)(char *))(v5 + 104);
  uint64_t v11 = v26;
  v24(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22[1] = v5 + 8;
  id v23 = v12;
  v12(v7, v11);
  v13._uint64_t countAndFlagsBits = 63;
  v13._object = (void *)0xE100000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v22[0] = v14;
  v14(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v15._object = (void *)0x80000001005F9AA0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0x6E6F207369687420;
  v16._object = (void *)0xED0000206E692065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  ((void (*)(char *, void, uint64_t))v24)(v7, v25, v11);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v23(v7, v11);
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  ((void (*)(char *, uint64_t))v22[0])(v4, v29);
  sub_1000CBE70(&qword_100718898);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10059B760;
  *(void *)(v19 + 32) = v28;
  *(void *)(v19 + 40) = v18;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1004B1AD0(uint64_t a1)
{
  return sub_1004B1B04(a1, (uint64_t)&unk_1005ADE90, (void (*)(uint64_t))sub_10039B864);
}

uint64_t sub_1004B1B04(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  uint64_t v8 = swift_release();
  a3(v8);
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v9 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1000CBE70(&qword_100712460);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  *(void *)(v10 + 32) = v9;
  uint64_t v11 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1004B1C74()
{
  return sub_1004B2CD0();
}

uint64_t sub_1004B1C98(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718888);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100718890);
  __chkstk_darwin(v8);
  sub_10039B864();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._object = (void *)0x80000001005F9A40;
  v9._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._uint64_t countAndFlagsBits = 0x207265646C6F6620;
  v10._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v25 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::Int v24 = *(void (**)(char *))(v5 + 104);
  uint64_t v11 = v27;
  v24(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22[1] = v5 + 8;
  id v23 = v12;
  v12(v7, v11);
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v22[0] = v14;
  v14(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x6874206F74206F47;
  v15._object = (void *)0xEA00000000002065;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0x207265646C6F6620;
  v16._object = (void *)0xEB00000000206E69;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  ((void (*)(char *, void, uint64_t))v24)(v7, v25, v11);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v23(v7, v11);
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  ((void (*)(char *, uint64_t))v22[0])(v4, v29);
  sub_1000CBE70(&qword_100718898);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10059B760;
  *(void *)(v19 + 32) = v28;
  *(void *)(v19 + 40) = v18;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1004B2120(uint64_t a1)
{
  return sub_1004B1B04(a1, (uint64_t)&unk_1005ADE90, (void (*)(uint64_t))sub_10039B864);
}

uint64_t sub_1004B2154()
{
  return sub_1004B2CD0();
}

uint64_t sub_1004B2178(uint64_t a1)
{
  uint64_t v26 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v29 = v1;
  uint64_t v30 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  id v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100718878);
  __chkstk_darwin(v8);
  sub_100421058();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v9._uint64_t countAndFlagsBits = 0x657461676976614ELL;
  v9._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  swift_getKeyPath();
  sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v10._object = (void *)0x80000001005F9A60;
  v10._uint64_t countAndFlagsBits = 0xD000000000000014;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  unsigned int v25 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::Int v24 = *(void (**)(char *))(v5 + 104);
  uint64_t v11 = v27;
  v24(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22[1] = v5 + 8;
  id v23 = v12;
  v12(v7, v11);
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v30 + 8);
  v30 += 8;
  v22[0] = v14;
  v14(v4, v29);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x657461676976614ELL;
  v15._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 544106784;
  v16._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  ((void (*)(char *, void, uint64_t))v24)(v7, v25, v11);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v23(v7, v11);
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v18 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  ((void (*)(char *, uint64_t))v22[0])(v4, v29);
  sub_1000CBE70(&qword_100718880);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10059B760;
  *(void *)(v19 + 32) = v28;
  *(void *)(v19 + 40) = v18;
  uint64_t v20 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1004B25EC(uint64_t a1)
{
  return sub_1004B1B04(a1, (uint64_t)&unk_1005ADE68, (void (*)(uint64_t))sub_100421058);
}

uint64_t sub_1004B2620()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1004B26D4(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718870);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  uint64_t v39 = v2;
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_100718878);
  __chkstk_darwin(v9);
  sub_100421058();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._object = (void *)0x80000001005F9A40;
  v10._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  unint64_t v37 = sub_10041FAB4();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 0x7765697665727020;
  v11._object = (void *)0xEC000000206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  unsigned int v36 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  unint64_t v35 = *(void (**)(char *))(v6 + 104);
  uint64_t v31 = v5;
  v35(v8);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v33 = v6 + 8;
  BOOL v34 = v12;
  v12(v8, v5);
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v30 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v39 + 8);
  v39 += 8;
  int v32 = v14;
  v14(v4, v38);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0x206F74206F47;
  v15._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0x7765697665727020;
  v16._object = (void *)0xEC000000206E6920;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = v31;
  ((void (*)(char *, void, uint64_t))v35)(v8, v36, v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v34(v8, v17);
  v18._uint64_t countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v29 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v4, v38);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._uint64_t countAndFlagsBits = 0x20656D20776F6853;
  v19._object = (void *)0xEC00000020656874;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._uint64_t countAndFlagsBits = 0x6E69206D65746920;
  v20._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  uint64_t v21 = v31;
  ((void (*)(char *, void, uint64_t))v35)(v8, v36, v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v34(v8, v21);
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v22);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v23 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v32(v4, v38);
  sub_1000CBE70(&qword_100718880);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A0230;
  uint64_t v25 = v29;
  *(void *)(v24 + 32) = v30;
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 48) = v23;
  uint64_t v26 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v26;
}

uint64_t sub_1004B2C9C(uint64_t a1)
{
  return sub_1004B1B04(a1, (uint64_t)&unk_1005ADE68, (void (*)(uint64_t))sub_100421058);
}

uint64_t sub_1004B2CD0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10059B760;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1004B2D54(uint64_t a1)
{
  uint64_t v43 = a1;
  uint64_t v1 = sub_1000CBE70(&qword_100718858);
  uint64_t v46 = *(void *)(v1 - 8);
  uint64_t v47 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100718860);
  __chkstk_darwin(v7);
  sub_1002465DC();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._uint64_t countAndFlagsBits = 0x20796D206E65704FLL;
  v8._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v8);
  swift_getKeyPath();
  uint64_t v45 = sub_1004B4AF8((unint64_t *)&qword_10070C070, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v9._uint64_t countAndFlagsBits = 0x6E6920656C696620;
  v9._object = (void *)0xED00002065687420;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v9);
  LODWORD(v42) = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  Swift::String v10 = *(void (**)(void))(v4 + 104);
  uint64_t v40 = v4 + 104;
  uint64_t v41 = (void (*)(char *, void, uint64_t))v10;
  uint64_t v11 = v37;
  v10(v6);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  id v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v38 = v4 + 8;
  uint64_t v39 = v12;
  v12(v6, v11);
  v13._uint64_t countAndFlagsBits = 1886413088;
  v13._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v13);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v36 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  id v14 = *(void (**)(char *, uint64_t))(v46 + 8);
  v46 += 8;
  uint64_t v44 = v14;
  v14(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v15._uint64_t countAndFlagsBits = 0xD000000000000011;
  v15._object = (void *)0x80000001005F99E0;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v15);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v16._uint64_t countAndFlagsBits = 0xD000000000000014;
  v16._object = (void *)0x80000001005F9A00;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v16);
  uint64_t v17 = v37;
  v41(v6, v42, v37);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v39(v6, v17);
  v18._uint64_t countAndFlagsBits = 1886413088;
  v18._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v35 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v44(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v19._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v19._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v19);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v20._uint64_t countAndFlagsBits = 544106784;
  v20._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v20);
  v41(v6, v42, v17);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v39(v6, v17);
  v21._uint64_t countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v21);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v42 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v22 = v47;
  v44(v3, v47);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v23._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v23);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v24._object = (void *)0x80000001005F9A20;
  v24._uint64_t countAndFlagsBits = 0xD000000000000010;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = (void (*)(char *, void, uint64_t))static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v25 = v44;
  v44(v3, v22);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v26._uint64_t countAndFlagsBits = 0x206E65704FLL;
  v26._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v26);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v27._uint64_t countAndFlagsBits = 0x6D65746920;
  v27._object = (void *)0xE500000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v27);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v28 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v25(v3, v47);
  sub_1000CBE70(&qword_100718868);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_10059B7A0;
  uint64_t v30 = v35;
  *(void *)(v29 + 32) = v36;
  *(void *)(v29 + 40) = v30;
  uint64_t v31 = (void (*)(void, void, void))v41;
  *(void *)(v29 + 48) = v42;
  *(void *)(v29 + 56) = v31;
  *(void *)(v29 + 64) = v28;
  uint64_t v32 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_1004B34FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileEntity();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1001173A0(a1, (uint64_t)&v9 - v6);
  sub_1001173A0((uint64_t)v7, (uint64_t)v4);
  IntentParameter.wrappedValue.setter();
  return sub_100117404((uint64_t)v7);
}

uint64_t sub_1004B35BC()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1004B4AF8((unint64_t *)&qword_10070C070, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1002465DC();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1004B3754()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v3 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v5 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v6 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v7 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1005A1E30;
  *(void *)(v8 + 32) = v0;
  *(void *)(v8 + 40) = v1;
  *(void *)(v8 + 48) = v2;
  *(void *)(v8 + 56) = v3;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = v6;
  *(void *)(v8 + 88) = v7;
  uint64_t v9 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1004B38F0(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_100718840);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v61 = v2;
  uint64_t v62 = v3;
  __chkstk_darwin(v2);
  BOOL v60 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for _AssistantIntent.PhraseToken();
  uint64_t v5 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100718848);
  __chkstk_darwin(v8);
  unint64_t v9 = sub_1000D1508();
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v10._uint64_t countAndFlagsBits = 0x6620686372616553;
  v10._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v10);
  swift_getKeyPath();
  uint64_t v53 = sub_1004B4AF8(&qword_100718838, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  uint64_t v51 = a1;
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v11._uint64_t countAndFlagsBits = 544106784;
  v11._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v11);
  unsigned int v57 = enum case for _AssistantIntent.PhraseToken.applicationName(_:);
  uint64_t v12 = v5;
  uint64_t v54 = *(void (**)(char *))(v5 + 104);
  uint64_t v59 = v5 + 104;
  uint64_t v13 = v52;
  v54(v7);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v58 = v12 + 8;
  v56(v7, v13);
  v14._uint64_t countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v14);
  Swift::String v15 = v60;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  unint64_t v50 = v9;
  uint64_t v49 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v16 = v61;
  uint64_t v55 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  v55(v15, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v17._uint64_t countAndFlagsBits = 0x6620686372616553;
  v17._object = (void *)0xEB0000000020726FLL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v17);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v18._uint64_t countAndFlagsBits = 0x20656874206E6920;
  v18._object = (void *)0xE800000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v18);
  uint64_t v19 = v57;
  uint64_t v20 = v13;
  uint64_t v21 = v13;
  uint64_t v22 = (void (*)(char *, uint64_t, uint64_t))v54;
  ((void (*)(char *, void, uint64_t))v54)(v7, v57, v21);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  Swift::String v23 = v56;
  v56(v7, v20);
  v24._uint64_t countAndFlagsBits = 1886413088;
  v24._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v24);
  uint64_t v25 = v60;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v48 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v26 = v16;
  Swift::String v27 = v55;
  v55(v25, v26);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v28._uint64_t countAndFlagsBits = 0x726F66206B6F6F4CLL;
  v28._object = (void *)0xE900000000000020;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v28);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v29._uint64_t countAndFlagsBits = 544106784;
  v29._object = (void *)0xE400000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v29);
  uint64_t v30 = v19;
  uint64_t v31 = v52;
  v22(v7, v30, v52);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v23(v7, v31);
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v32);
  uint64_t v33 = v60;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v47 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v27(v33, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v34._uint64_t countAndFlagsBits = 0x207972657551;
  v34._object = (void *)0xE600000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v34);
  swift_getKeyPath();
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  v35._uint64_t countAndFlagsBits = 0x20796D206E6920;
  v35._object = (void *)0xE700000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v35);
  ((void (*)(char *, void, uint64_t))v54)(v7, v57, v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v56(v7, v31);
  v36._uint64_t countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v36);
  uint64_t v37 = v60;
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v53 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  uint64_t v38 = v37;
  v55(v37, v61);
  _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v39._uint64_t countAndFlagsBits = 0x6920686372616553;
  v39._object = (void *)0xEA0000000000206ELL;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v39);
  ((void (*)(char *, void, uint64_t))v54)(v7, v57, v31);
  _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
  v56(v7, v31);
  v40._uint64_t countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(v40);
  _AssistantIntent.Phrase.init(stringInterpolation:)();
  uint64_t v41 = static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
  v55(v38, v61);
  sub_1000CBE70(&qword_100718850);
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_10059B7A0;
  uint64_t v43 = v48;
  *(void *)(v42 + 32) = v49;
  *(void *)(v42 + 40) = v43;
  uint64_t v44 = v53;
  *(void *)(v42 + 48) = v47;
  *(void *)(v42 + 56) = v44;
  *(void *)(v42 + 64) = v41;
  uint64_t v45 = static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_1004B4130(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v12 - v8;
  Swift::String v10 = *(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_1004B4264()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.Value();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_1004B4AF8(&qword_100718838, (void (*)(uint64_t))&type metadata accessor for StringSearchCriteria);
  _AssistantIntent.IntentProjection.subscript.getter();
  swift_release();
  sub_1000D1508();
  _AssistantIntent.Value.init<A>(for:builder:)();
  uint64_t v4 = static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000CBE70(&qword_100712460);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1004B43FC()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v1 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 48) = v2;
  uint64_t v4 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1004B44D0()
{
  uint64_t v0 = static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
  sub_1000CBE70(&qword_100712430);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A0030;
  *(void *)(v1 + 32) = v0;
  uint64_t v2 = static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1004B4550()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D1508();
  _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
  uint64_t v4 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1000CBE70(&qword_100712428);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for FilesOnlyAssistantIntentsProvider()
{
  return &type metadata for FilesOnlyAssistantIntentsProvider;
}

uint64_t sub_1004B4698()
{
  uint64_t v0 = type metadata accessor for _AssistantIntent();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10041FF80();
  sub_10039B864();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v14 = static _AssistantIntent.Builder.buildExpression(_:)();
  uint64_t v4 = *(void (**)(char *, uint64_t))(v1 + 8);
  v4(v3, v0);
  uint64_t v15 = sub_10041FF80();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v5 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v15 = sub_10041FF80();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v6 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v15 = sub_100420B24();
  sub_100421058();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v7 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v15 = sub_100420B24();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v8 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v15 = sub_100246968();
  sub_1002465DC();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v9 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  uint64_t v15 = sub_10054D098();
  sub_1000D1508();
  _AssistantIntent.init<A>(_:phrases:parameterValues:)();
  uint64_t v10 = static _AssistantIntent.Builder.buildExpression(_:)();
  v4(v3, v0);
  sub_1000CBE70(&qword_100712458);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A1DF0;
  *(void *)(v11 + 32) = v14;
  *(void *)(v11 + 40) = v5;
  *(void *)(v11 + 48) = v6;
  *(void *)(v11 + 56) = v7;
  *(void *)(v11 + 64) = v8;
  *(void *)(v11 + 72) = v9;
  *(void *)(v11 + 80) = v10;
  uint64_t v12 = static _AssistantIntent.Builder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1004B4ACC()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_1004B4AF8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004B4B4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = IntentParameter.wrappedValue.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1004B4B8C()
{
  return IntentParameter.wrappedValue.setter();
}

Swift::Double *defaultSuspendVisualChangesTimeout.unsafeMutableAddressor()
{
  return &defaultSuspendVisualChangesTimeout;
}

uint64_t sub_1004B4BD4()
{
  return 0;
}

void sub_1004B4BE0(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  strcpy((char *)v13, "Coordinator-");
  BYTE5(v13[1]) = 0;
  HIWORD(v13[1]) = -5120;
  v7._uint64_t countAndFlagsBits = (*(uint64_t (**)(void))(v3 + 96))();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = v13[0];
  unint64_t v8 = v13[1];
  os_log_type_t v10 = a1;
  log = static DOCLog.UI.getter();
  if (os_log_type_enabled(log, a1))
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v11 = swift_slowAlloc();
    v13[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    sub_10009B0E4(v9, v8, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10009B0E4(a2, a3, v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v10, "[%s] %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t DOCHierarchyController.ChangeCoordinator.deinit()
{
  return v0;
}

Swift::Void __swiftcall DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(Swift::Double timeout)
{
  uint64_t v20 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v19 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1004B6090(0, 0xD00000000000001DLL, (void *)0x80000001005F9AC0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, v7);
  aBlock[4] = sub_1004B6230;
  uint64_t v25 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006B08B0;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v17 = v20;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  v15(v13, v19);
}

uint64_t sub_1004B51AC(uint64_t a1)
{
  swift_beginAccess();
  swift_retain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1004B9090(v2, a1);
  swift_bridgeObjectRelease();
  return swift_release();
}

Swift::Void __swiftcall DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(_:)(Swift::String_optional a1)
{
  if (a1.value._object) {
    unint64_t countAndFlagsBits = a1.value._countAndFlagsBits;
  }
  else {
    unint64_t countAndFlagsBits = 0xD000000000000023;
  }
  if (a1.value._object) {
    object = a1.value._object;
  }
  else {
    object = (void *)0x80000001005F9AE0;
  }
  swift_bridgeObjectRetain();
  sub_1004B6238(0, countAndFlagsBits, object);

  swift_bridgeObjectRelease();
}

void DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(afterUpdatingBrowsedLocationTo:)()
{
  uint64_t v1 = v0;
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  id v4 = [v2 hierarchyController];
  uint64_t v5 = (char *)[v2 dataSource];
  id v6 = *(id *)&v5[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  os_log_type_t v7 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v7, 0xD000000000000026, 0x80000001005F9B10);
  sub_1004B6090(1, 0xD000000000000018, (void *)0x80000001005F9B40);
  id v8 = [self defaultManager];
  URL._bridgeToObjectiveC()(v9);
  uint64_t v11 = v10;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v3;
  v12[3] = v1;
  v12[4] = v4;
  v12[5] = v6;
  v17[4] = sub_1004B6424;
  v17[5] = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10000CAE4;
  v17[3] = &unk_1006B0900;
  uint64_t v13 = _Block_copy(v17);
  id v14 = v6;
  id v15 = v3;
  swift_retain();
  id v16 = v4;
  swift_release();
  [v8 fetchItemForURL:v11 completionHandler:v13];
  _Block_release(v13);
}

uint64_t sub_1004B54A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1004B9AF8;
  void aBlock[5] = a1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006B0CF8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1004B5720(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v28 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v26 = *(void *)(v14 - 8);
  uint64_t v27 = v14;
  __chkstk_darwin(v14);
  id v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = a3;
  v17[4] = a4;
  v17[5] = a5;
  void v17[6] = a6;
  aBlock[4] = sub_1004B9A70;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006B0C08;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a1;
  id v20 = a3;
  swift_retain();
  id v21 = a5;
  id v22 = a6;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v23 = (void *)v25;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v16, v27);
}

uint64_t sub_1004B59D8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
LABEL_4:
    os_log_type_t v21 = static os_log_type_t.info.getter();
    sub_1004B4BE0(v21, 0xD00000000000002CLL, 0x80000001005FA010);
    return sub_1004B54A8(a3);
  }
  uint64_t v46 = a5;
  uint64_t v47 = v12;
  uint64_t v48 = v10;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v18 = a1;
  id v19 = (void *)DOCNode.representedLocation.getter();
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  char v20 = static NSObject.== infix(_:_:)();

  if (v20)
  {

    goto LABEL_4;
  }
  id v49 = v18;
  os_log_type_t v23 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v23, 0xD000000000000027, 0x80000001005FA040);
  Swift::String v24 = dispatch_group_create();
  dispatch_group_enter(v24);
  unint64_t v25 = (unint64_t)sub_100225C60();
  if (v25 >> 62) {
    uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v45 = v9;
  swift_bridgeObjectRelease();
  if (v26 <= 1)
  {
    uint64_t v27 = (void *)DOCNode.representedLocation.getter();
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v24;
    uint64_t v31 = v24;
    sub_1000BCD84(v27, v27, 0, 1, 0, sub_1002EFD24, v30);
  }
  else
  {
    sub_10023C8FC(1);
    uint64_t v27 = (void *)DOCNode.representedLocation.getter();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v24;
    Swift::String v29 = v24;
    sub_10022EBF4(v27, 0, 0, 0, 0, (uint64_t)sub_10021FD14, v28);
  }

  swift_release();
  dispatch_group_enter(v24);
  sub_1000CBE70(&qword_100718E58);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = a2;
  id v33 = a2;
  *(void *)(inited + 40) = DOCNode.representedLocation.getter();
  unint64_t v34 = sub_10049601C(inited);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v24;
  uint64_t v36 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v17, 1, 1, v36);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v37 = v24;
  uint64_t v38 = (void *)static OS_dispatch_queue.main.getter();
  int64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1002EFD24;
  *(void *)(v39 + 24) = v35;
  swift_retain();
  sub_1000CC768((uint64_t)v17, v34, v38, (uint64_t)sub_100045FAC, v39);

  swift_release();
  sub_1000CBBA4((uint64_t)v17, &qword_10070E838);
  swift_bridgeObjectRelease();
  swift_release();
  Swift::String v40 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1004B9AF0;
  void aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  aBlock[3] = &unk_1006B0CA8;
  uint64_t v41 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v42 = v51;
  uint64_t v43 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v41);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v43);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v47);
  return swift_release();
}

void sub_1004B6090(char a1, uint64_t a2, void *a3)
{
  char v6 = a1 & 1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v7 + 16);
  if ((sub_100535288(v6, v7) & 1) == 0)
  {
    os_log_type_t v9 = static os_log_type_t.info.getter();
    _StringGuts.grow(_:)(21);
    v10._unint64_t countAndFlagsBits = 0x6F69747265737361;
    v10._object = (void *)0xEE00203D2B20736ELL;
    String.append(_:)(v10);
    char v14 = v6;
    _print_unlocked<A, B>(_:_:)();
    v11._unint64_t countAndFlagsBits = 23328;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    v12._unint64_t countAndFlagsBits = a2;
    v12._object = a3;
    String.append(_:)(v12);
    v13._unint64_t countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    sub_1004B4BE0(v9, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1000EECC4(&v14, v6);
    swift_endAccess();
  }
  if (!v8)
  {
    if (*(void *)(*(void *)(v3 + 32) + 16)) {
      sub_1004B6430();
    }
  }
}

uint64_t sub_1004B6230()
{
  return sub_1004B51AC(v0);
}

void sub_1004B6238(char a1, uint64_t a2, void *a3)
{
  char v6 = a1 & 1;
  swift_beginAccess();
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v7 + 16);
  if (sub_100535288(v6, v7))
  {
    os_log_type_t v9 = static os_log_type_t.info.getter();
    _StringGuts.grow(_:)(21);
    v10._unint64_t countAndFlagsBits = 0x6F69747265737361;
    v10._object = (void *)0xEE00203D2D20736ELL;
    String.append(_:)(v10);
    _print_unlocked<A, B>(_:_:)();
    v11._unint64_t countAndFlagsBits = 23328;
    v11._object = (void *)0xE200000000000000;
    String.append(_:)(v11);
    v12._unint64_t countAndFlagsBits = a2;
    v12._object = a3;
    String.append(_:)(v12);
    v13._unint64_t countAndFlagsBits = 93;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    sub_1004B4BE0(v9, 0, 0xE000000000000000);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_1004FE118(v6);
    swift_endAccess();
  }
  if (v8)
  {
    if (!*(void *)(*(void *)(v3 + 32) + 16)) {
      sub_1004B6648();
    }
  }
}

uint64_t sub_1004B63D4()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004B6424(void *a1, uint64_t a2)
{
  return sub_1004B5720(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

void sub_1004B6430()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)v0[3];
  uint64_t v3 = (char *)[v2 dataSource];
  uint64_t v15 = *(id *)&v3[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v15[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 1;
  if ((*(uint64_t (**)(void))(*v1 + 144))())
  {
    os_log_type_t v4 = static os_log_type_t.info.getter();
    sub_1004B4BE0(v4, 0x746F687370616E73, 0xEC000000676E6974);
    id v5 = [v2 view];
    if (!v5)
    {
      __break(1u);
      goto LABEL_14;
    }
    char v6 = v5;
    id v7 = [v5 snapshotViewAfterScreenUpdates:0];

    if (v7)
    {
      id v8 = [v2 view];
      if (v8)
      {
        os_log_type_t v9 = v8;
        [v8 addSubview:v7];

        id v10 = [v7 window];
        if (v10)
        {
          Swift::String v11 = v10;
          [v10 setUserInteractionEnabled:0];
        }
        id v12 = [v7 window];

        Swift::String v13 = (void *)v1[5];
        char v14 = (void *)v1[6];
        v1[5] = v7;
        v1[6] = v12;
        sub_100180FC8(v13, v14);
        return;
      }
LABEL_14:
      __break(1u);
      return;
    }
  }
}

void sub_1004B6648()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char *)[*(id *)(v0 + 24) dataSource];
  Swift::String v11 = *(id *)&v2[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

  v11[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
  uint64_t v3 = *(void **)(v1 + 40);
  if (v3)
  {
    os_log_type_t v4 = *(void **)(v1 + 48);
    id v5 = v4;
    id v6 = v3;
    os_log_type_t v7 = static os_log_type_t.info.getter();
    sub_1004B4BE0(v7, 0xD000000000000012, 0x80000001005F9FF0);
    [v6 removeFromSuperview];
    if (v4)
    {
      id v8 = v5;
      [v8 setUserInteractionEnabled:1];

      id v6 = v8;
    }

    os_log_type_t v9 = *(void **)(v1 + 40);
    id v10 = *(void **)(v1 + 48);
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    sub_100180FC8(v9, v10);
  }
  else
  {
  }
}

void sub_1004B67B8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = *(void **)(v0 + 48);

  sub_100180FC8(v1, v2);
}

id *DOCHierarchyController.BrowsedLocationRenameCoordinator.deinit()
{
  swift_bridgeObjectRelease();
  sub_100180FC8(v0[5], v0[6]);
  return v0;
}

uint64_t DOCHierarchyController.BrowsedLocationRenameCoordinator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_100180FC8(v0[5], v0[6]);

  return swift_deallocClassInstance();
}

uint64_t sub_1004B6870()
{
  return 0x6E6F697461636F4CLL;
}

BOOL sub_1004B6894()
{
  id v1 = [*(id *)(v0 + 16) sourceIdentifier];
  if (DOCDocumentSourceIdentifier.isICloud.getter())
  {

    char v2 = 1;
  }
  else
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
    if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6) {
      char v2 = 1;
    }
    else {
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return (v2 & 1) == 0;
}

void sub_1004B695C(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v35 - v9;
  __chkstk_darwin(v11);
  Swift::String v13 = (char *)&v35 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v40 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v37 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v38 = (char *)&v35 - v17;
  __chkstk_darwin(v18);
  uint64_t v36 = (char *)&v35 - v19;
  os_log_type_t v20 = static os_log_type_t.info.getter();
  uint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  uint64_t v41 = 0xD000000000000023;
  unint64_t v42 = 0x80000001005F9F60;
  uint64_t v39 = a1;
  if (a2) {
    uint64_t v21 = a1;
  }
  else {
    uint64_t v21 = 7104878;
  }
  if (a2) {
    id v22 = a2;
  }
  else {
    id v22 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v23._unint64_t countAndFlagsBits = v21;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  sub_1004B4BE0(v20, v41, v42);
  swift_bridgeObjectRelease();
  if (a2)
  {
    id v24 = [*(id *)(v2 + 16) fileProviderItem];
    if (v24)
    {
      unint64_t v25 = v24;
      id v26 = [v24 fileURL];

      if (v26)
      {
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v27 = (void *)v40;
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v28(v7, 0, 1, v14);
      }
      else
      {
        uint64_t v27 = (void *)v40;
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56);
        v28(v7, 1, 1, v14);
      }
      sub_10032D1DC((uint64_t)v7, (uint64_t)v10);
      Swift::String v29 = (unsigned int (*)(char *, uint64_t, uint64_t))v27[6];
      if (v29(v10, 1, v14))
      {
        sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
        v28(v13, 1, 1, v14);
      }
      else
      {
        uint64_t v30 = (void (*)(char *, char *, uint64_t))v27[2];
        uint64_t v35 = v29;
        uint64_t v31 = v37;
        v30(v37, v10, v14);
        sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
        Swift::String v32 = v38;
        URL.deletingLastPathComponent()();
        id v33 = (void (*)(char *, uint64_t))v27[1];
        v33(v31, v14);
        URL.appendingPathComponent(_:)();
        v33(v32, v14);
        v28(v13, 0, 1, v14);
        if (v35(v13, 1, v14) != 1)
        {
          unint64_t v34 = v36;
          (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v36, v13, v14);
          DOCHierarchyController.SuspendableUIChangeCoordinator.endSuspendingVisualChanges(afterUpdatingBrowsedLocationTo:)();
          v33(v34, v14);
          return;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v13, 1, 1, v14);
    }
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    sub_1004B6238(0, 0xD000000000000024, (void *)0x80000001005F9FC0);
  }
  else
  {
    sub_1004B6238(0, 0xD000000000000022, (void *)0x80000001005F9F90);
  }
}

uint64_t sub_1004B6E4C()
{
  return 0x6E6F697461636F4CLL;
}

uint64_t sub_1004B6E6C()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v2 = v0;
    sub_1000CBE70(&qword_100718E50);
    swift_allocObject();
    swift_retain();
    uint64_t v1 = NSNotification.SubscriptionsController.init(observee:)();
    *(void *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1004B6EF0(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v41 = a2;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v7 - 8);
  uint64_t v47 = v7;
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  unint64_t v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v11 - 8);
  Swift::String v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [*(id *)(v3 + 24) hierarchyController];
  uint64_t v15 = sub_100225C60();

  _s30BrowsedLocationMoveCoordinatorC17CoordinationStateCMa();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = 0;
  uint64_t v17 = dispatch_group_create();
  *(void *)(v16 + 24) = v17;
  DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
  os_log_type_t v18 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v18, 0xD000000000000028, 0x80000001005F9E10);
  dispatch_group_enter(v17);
  uint64_t v19 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v13, 1, 1, v19);
  os_log_type_t v20 = (void *)swift_allocObject();
  v20[2] = 0;
  v20[3] = 0;
  _DWORD v20[4] = v16;
  void v20[5] = a3;
  void v20[6] = v15;
  v20[7] = v4;
  swift_retain();
  id v21 = a3;
  swift_retain();
  sub_10003D154((uint64_t)v13, (uint64_t)&unk_100718E40, (uint64_t)v20);
  swift_release();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v22, 0xD000000000000022, 0x80000001005F9E40);
  dispatch_group_enter(*(dispatch_group_t *)(v16 + 24));
  sub_1004B6E6C();
  if (qword_100704EC0 != -1) {
    swift_once();
  }
  uint64_t v50 = (void *)type metadata accessor for DOCMoveOperation();
  aBlock[0] = a1;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v4;
  *(void *)(v23 + 24) = v16;
  id v24 = self;
  swift_retain();
  swift_retain();
  id v25 = a1;
  id v26 = [v24 mainQueue];
  dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_100705D60);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v4;
  *(void *)(v27 + 24) = v4;
  uint64_t v28 = *(void **)(v16 + 24);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  swift_retain_n();
  id v29 = v28;
  uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v4;
  v31[3] = v25;
  Swift::String v32 = v41;
  v31[4] = v41;
  v31[5] = sub_1004B8F44;
  void v31[6] = v27;
  v31[7] = v16;
  v31[8] = v21;
  uint64_t v51 = sub_1004B8FAC;
  uint64_t v52 = v31;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  uint64_t v50 = &unk_1006B0AD8;
  id v33 = _Block_copy(aBlock);
  swift_retain();
  id v34 = v21;
  swift_retain();
  id v35 = v25;
  id v36 = v32;
  swift_retain();
  uint64_t v37 = v42;
  static DispatchQoS.unspecified.getter();
  uint64_t v48 = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v38 = v45;
  uint64_t v39 = v47;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_group.notify(qos:flags:queue:execute:)();
  _Block_release(v33);
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v44);
  return swift_release();
}

uint64_t sub_1004B74E8(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = a2;
  return _swift_task_switch(sub_1004B7508, 0, 0);
}

uint64_t sub_1004B7508()
{
  id v1 = [*(id *)(v0 + 128) fileProviderItem];
  if (v1
    && (uint64_t v2 = v1,
        id v3 = [v1 itemID],
        *(void *)(v0 + 144) = v3,
        v2,
        v3))
  {
    id v4 = [self defaultManager];
    *(void *)(v0 + 152) = v4;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 120;
    *(void *)(v0 + 24) = sub_1004B76B8;
    uint64_t v5 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_1004B7A24;
    *(void *)(v0 + 104) = &unk_1006B0BC8;
    *(void *)(v0 + 112) = v5;
    [v4 fetchParentsForItemID:v3 recursively:1 completionHandler:v0 + 80];
    return _swift_continuation_await(v0 + 16);
  }
  else
  {
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6(0);
  }
}

uint64_t sub_1004B76B8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_1004B7998;
  }
  else {
    uint64_t v2 = sub_1004B77C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1004B77C8()
{
  unint64_t v1 = *(void *)(v0 + 120);

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_11;
    }
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if (v2 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  do
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v1 + 8 * v4 + 32);
    }
    uint64_t v6 = v5;
    ++v4;
    id v7 = [v5 itemID];

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v2 != v4);
LABEL_11:
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void **)(v0 + 144);
  swift_bridgeObjectRetain();
  unint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1004B9510(v9, (unint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease();
  uint64_t v11 = *(uint64_t (**)(void *))(v0 + 8);
  return v11(v10);
}

uint64_t sub_1004B7998()
{
  unint64_t v1 = (void *)v0[19];
  uint64_t v2 = (void *)v0[18];
  swift_willThrow();

  swift_errorRelease();
  id v3 = (uint64_t (*)(void))v0[1];
  return v3(0);
}

uint64_t sub_1004B7A24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1004B7B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7[2] = a4;
  v7[3] = a7;
  uint64_t v10 = (void *)swift_task_alloc();
  v7[4] = v10;
  *uint64_t v10 = v7;
  v10[1] = sub_1004B7BB4;
  v10[16] = a5;
  v10[17] = a6;
  return _swift_task_switch(sub_1004B7508, 0, 0);
}

uint64_t sub_1004B7BB4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004B7CB4, 0, 0);
}

uint64_t sub_1004B7CB4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = v0[5];

  os_log_type_t v3 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v3, 0xD000000000000025, 0x80000001005F9F30);
  dispatch_group_leave(*(dispatch_group_t *)(v1 + 24));
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1004B7D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  os_log_type_t v5 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v5, 0xD00000000000001ALL, 0x80000001005F9F10);
  uint64_t v6 = *(NSObject **)(a4 + 24);

  dispatch_group_leave(v6);
}

uint64_t sub_1004B7DF0(uint64_t a1, uint64_t a2)
{
  sub_1004B6238(0, 0xD000000000000023, (void *)0x80000001005F9AE0);
  v4[3] = type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator();
  v4[0] = a2;
  swift_retain();
  doc_keepAlive(_:)();
  return sub_10009B1B8((uint64_t)v4);
}

uint64_t sub_1004B7E60(uint64_t a1, void *a2, void *a3, uint64_t (*a4)(void), uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v45 = a6;
  uint64_t v46 = a7;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v49 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v47 = *(void *)(v13 - 8);
  uint64_t v48 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchTime();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v50 = v16;
  uint64_t v51 = v17;
  uint64_t v18 = __chkstk_darwin(v16);
  os_log_type_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  os_log_type_t v22 = (char *)&v42 - v21;
  os_log_type_t v23 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v23, 0xD00000000000001CLL, 0x80000001005F9E70);
  id v24 = [a2 transferResults];
  if (v24)
  {
    id v25 = v24;
    uint64_t v44 = v10;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    void aBlock[6] = a3;
    sub_10031DDA8();
    id v27 = a3;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v26 + 16))
    {
      unint64_t v28 = sub_10008E070((uint64_t)aBlock);
      if (v29)
      {
        id v30 = *(id *)(*(void *)(v26 + 56) + 8 * v28);
        swift_bridgeObjectRelease();
        sub_10008E17C((uint64_t)aBlock);
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        uint64_t v42 = static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        + infix(_:_:)();
        uint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
        v51 += 8;
        uint64_t v43 = v31;
        v31(v20, v50);
        Swift::String v32 = (void *)swift_allocObject();
        id v33 = v46;
        v32[2] = v45;
        v32[3] = a1;
        v32[4] = v33;
        uint64_t v32[5] = v30;
        uint64_t v34 = v53;
        v32[6] = v52;
        v32[7] = v34;
        aBlock[4] = sub_1004B9018;
        void aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        void aBlock[3] = &unk_1006B0B28;
        id v35 = _Block_copy(aBlock);
        id v36 = v30;
        swift_retain();
        swift_retain();
        id v37 = v33;
        swift_retain();
        swift_release();
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_1001102E4();
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_1000B921C();
        uint64_t v38 = v44;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v39 = (void *)v42;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v35);

        (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v38);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v48);
        return v43(v22, v50);
      }
    }
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)aBlock);
  }
  os_log_type_t v41 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v41, 0xD00000000000002DLL, 0x80000001005F9E90);
  return v52();
}

uint64_t sub_1004B8368(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void **)(a1 + 16);
  id v11 = v10;
  _StringGuts.grow(_:)(40);
  swift_bridgeObjectRelease();
  strcpy((char *)v25, "resetting to (");
  HIBYTE(v25[1]) = -18;
  id v12 = [a3 description];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v16._unint64_t countAndFlagsBits = v13;
  v16._object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._object = (void *)0x80000001005F9EC0;
  v17._unint64_t countAndFlagsBits = 0xD000000000000016;
  String.append(_:)(v17);
  id v18 = v11;
  sub_1000CBE70(&qword_10071A170);
  v19._unint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  LOBYTE(v15) = static os_log_type_t.info.getter();
  swift_bridgeObjectRetain();
  sub_1004B4BE0((os_log_type_t)v15, v25[0], v25[1]);
  swift_bridgeObjectRelease_n();
  id v20 = [*(id *)(a2 + 24) hierarchyController];
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = a2;
  uint64_t v21[3] = a4;
  v21[4] = a5;
  void v21[5] = a6;
  swift_retain();
  id v22 = a4;
  swift_retain();
  sub_1000BCD84(a3, v10, 0, 1, 0, (void (*)(void))sub_1004B902C, (uint64_t)v21);

  return swift_release();
}

uint64_t sub_1004B8594(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v32 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  __chkstk_darwin(v9);
  id v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v28 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  Swift::String v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v18 = (char *)&v25 - v17;
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v27 = *(void (**)(char *, uint64_t))(v13 + 8);
  v27(v16, v12);
  Swift::String v19 = (void *)swift_allocObject();
  id v20 = v26;
  v19[2] = a1;
  uint64_t v19[3] = v20;
  v19[4] = a3;
  v19[5] = v29;
  aBlock[4] = sub_1004B9084;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B0BA0;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  id v22 = v20;
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  os_log_type_t v23 = (void *)v25;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
  return ((uint64_t (*)(char *, uint64_t))v27)(v18, v28);
}

uint64_t sub_1004B8930(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  os_log_type_t v5 = static os_log_type_t.info.getter();
  sub_1004B4BE0(v5, 0xD000000000000024, 0x80000001005F9EE0);
  DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(a2, 1, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
  return a3();
}

uint64_t sub_1004B89E8()
{
  return swift_release();
}

id *DOCHierarchyController.BrowsedLocationMoveCoordinator.deinit()
{
  swift_bridgeObjectRelease();
  sub_100180FC8(v0[5], v0[6]);
  swift_release();
  return v0;
}

uint64_t DOCHierarchyController.BrowsedLocationMoveCoordinator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_100180FC8(v0[5], v0[6]);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCHierarchyController.ChangeCoordinator()
{
  return self;
}

uint64_t type metadata accessor for DOCHierarchyController.SuspendableUIChangeCoordinator()
{
  return self;
}

uint64_t type metadata accessor for DOCHierarchyController.BrowsedLocationRenameCoordinator()
{
  return self;
}

uint64_t type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator()
{
  return self;
}

unint64_t sub_1004B8B18()
{
  uint64_t v1 = (char *)[v0 hierarchyController];
  uint64_t v2 = &v1[OBJC_IVAR____TtC5Files22DOCHierarchyController_locations];
  swift_beginAccess();
  unint64_t v3 = *(void *)v2;
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:

    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  unint64_t result = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_15:
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v6 = *(id *)(v3 + 8 * result + 32);
LABEL_8:
    id v7 = v6;

    swift_bridgeObjectRelease();
    type metadata accessor for DOCHierarchyController.BrowsedLocationRenameCoordinator();
    uint64_t v8 = (void *)swift_allocObject();
    v8[5] = 0;
    void v8[6] = 0;
    v8[3] = v0;
    v8[4] = &_swiftEmptySetSingleton;
    v8[2] = v7;
    id v9 = v0;
    if (sub_1004B6894()) {
      return (unint64_t)v8;
    }
    swift_release();
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t _s30BrowsedLocationMoveCoordinatorC17CoordinationStateCMa()
{
  return self;
}

ValueMetadata *_s30SuspendableUIChangeCoordinatorC15SnapshotContextVMa()
{
  return &_s30SuspendableUIChangeCoordinatorC15SnapshotContextVN;
}

unsigned char *_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004B8D78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionOMa()
{
  return &_s30SuspendableUIChangeCoordinatorC21VisualChangeAssertionON;
}

unint64_t sub_1004B8DB4()
{
  unint64_t result = qword_100718E30;
  if (!qword_100718E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100718E30);
  }
  return result;
}

uint64_t sub_1004B8E08()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B8E60(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000CB70;
  return sub_1004B7B00(a1, v4, v5, v6, v7, v9, v8);
}

void sub_1004B8F38(uint64_t a1, uint64_t a2)
{
  sub_1004B7D70(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1004B8F44()
{
  return sub_1004B7DF0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004B8F4C()
{
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004B8FAC()
{
  return sub_1004B7E60(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32), *(uint64_t (**)(void))(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_1004B8FC0()
{
  swift_release();
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004B9018()
{
  return sub_1004B8368(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1004B902C()
{
  return sub_1004B8594(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1004B903C()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004B9084()
{
  return sub_1004B8930(*(void *)(v0 + 16), *(void **)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

void sub_1004B9090(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v38 = a1 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 56);
  uint64_t v7 = (uint64_t *)(a2 + 32);
  id v37 = (void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v8 = 0;
  int64_t v39 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v36 = v3;
  while (v6)
  {
    unint64_t v9 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_23:
    uint64_t v14 = *v7;
    if (*(void *)(*v7 + 16))
    {
      Swift::UInt v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v10);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v15);
      Swift::Int v16 = Hasher._finalize()();
      uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v18 = v16 & ~v17;
      if ((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
      {
        uint64_t v19 = *(void *)(v14 + 48);
        if (v15 == *(unsigned __int8 *)(v19 + v18))
        {
LABEL_29:
          os_log_type_t v21 = static os_log_type_t.info.getter();
          _StringGuts.grow(_:)(21);
          v22._unint64_t countAndFlagsBits = 0x6F69747265737361;
          v22._object = (void *)0xEE00203D2D20736ELL;
          String.append(_:)(v22);
          _print_unlocked<A, B>(_:_:)();
          v23._unint64_t countAndFlagsBits = 23328;
          v23._object = (void *)0xE200000000000000;
          String.append(_:)(v23);
          v24._unint64_t countAndFlagsBits = 0x74756F656D6974;
          v24._object = (void *)0xE700000000000000;
          String.append(_:)(v24);
          v25._unint64_t countAndFlagsBits = 93;
          v25._object = (void *)0xE100000000000000;
          String.append(_:)(v25);
          sub_1004B4BE0(v21, 0, 0xE000000000000000);
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_1004FE118(v15);
          swift_endAccess();
        }
        else
        {
          uint64_t v20 = ~v17;
          while (1)
          {
            unint64_t v18 = (v18 + 1) & v20;
            if (((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              break;
            }
            if (v15 == *(unsigned __int8 *)(v19 + v18)) {
              goto LABEL_29;
            }
          }
        }
      }
      if (!*(void *)(*v7 + 16))
      {
        uint64_t v26 = (char *)[*(id *)(a2 + 24) dataSource];
        id v27 = *(id *)&v26[OBJC_IVAR____TtC5Files30DOCBrowserNavigationDataSource_historyDataSource];

        v27[OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_ignoreExternalUpdates] = 0;
        uint64_t v28 = *(void **)(a2 + 40);
        if (v28)
        {
          uint64_t v29 = *(void **)(a2 + 48);
          id v30 = v29;
          id v31 = v28;
          os_log_type_t v32 = static os_log_type_t.info.getter();
          sub_1004B4BE0(v32, 0xD000000000000012, 0x80000001005F9FF0);
          [v31 removeFromSuperview];
          if (v29)
          {
            id v33 = v30;
            [v33 setUserInteractionEnabled:1];

            id v31 = v33;
          }
          uint64_t v3 = v36;

          uint64_t v34 = *(void **)(a2 + 40);
          id v35 = *(void **)(a2 + 48);
          *id v37 = 0;
          v37[1] = 0;
          sub_100180FC8(v34, v35);
        }
        else
        {
        }
      }
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v11 >= v39) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v38 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v39) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v38 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v39) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v38 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v39) {
    goto LABEL_35;
  }
  unint64_t v12 = *(void *)(v38 + 8 * v8);
  if (v12) {
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v39)
  {
LABEL_35:
    swift_release();
    return;
  }
  unint64_t v12 = *(void *)(v38 + 8 * v13);
  int64_t v8 = v13;
  if (v12)
  {
LABEL_22:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v39) {
      goto LABEL_35;
    }
    unint64_t v12 = *(void *)(v38 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_37:
  __break(1u);
}

void *sub_1004B9510(unint64_t a1, unint64_t a2)
{
  uint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_45;
  }
  unint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v3)
  {
    unint64_t v4 = v2 & 0xC000000000000001;
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
    uint64_t v6 = v2 + 32;
    uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    unint64_t v24 = v2 & 0xC000000000000001;
    unint64_t v28 = a2 & 0xC000000000000001;
    uint64_t v25 = v2;
    uint64_t v26 = v2 + 32;
    uint64_t v27 = v2 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          if (__OFSUB__(v3--, 1)) {
            goto LABEL_41;
          }
          if (v4)
          {
            id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if ((v3 & 0x8000000000000000) != 0) {
              goto LABEL_43;
            }
            if (v3 >= *(void *)(v5 + 16)) {
              goto LABEL_44;
            }
            id v9 = *(id *)(v6 + 8 * v3);
          }
          unint64_t v10 = v9;
          id v11 = [v9 fileProviderItem];
          if (v11)
          {
            unint64_t v12 = v11;
            id v13 = [v11 itemID];

            if (v13) {
              break;
            }
          }

          if (!v3) {
            goto LABEL_46;
          }
        }
        if (a2 >> 62) {
          break;
        }
        uint64_t v14 = *(void *)(v7 + 16);
        swift_bridgeObjectRetain();
        if (v14) {
          goto LABEL_15;
        }
LABEL_34:

        swift_bridgeObjectRelease();
        if (!v3) {
          goto LABEL_46;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (!v14) {
        goto LABEL_34;
      }
LABEL_15:
      if (v28) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a2 + 32);
      }
      Swift::Int v16 = v15;
      sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
      char v17 = static NSObject.== infix(_:_:)();

      if (v17)
      {
LABEL_37:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      if (v14 != 1) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_31:
      uint64_t v6 = v26;
      uint64_t v5 = v27;
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
      if (!v3) {
        goto LABEL_46;
      }
    }
    if (v28)
    {
      uint64_t v18 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v19 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        uint64_t v2 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v2) {
          goto LABEL_37;
        }
        ++v18;
        if (v19 == v14) {
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v2 = 5;
    while (1)
    {
      uint64_t v20 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      id v21 = *(id *)(a2 + 8 * v2);
      char v22 = static NSObject.== infix(_:_:)();

      if (v22) {
        goto LABEL_37;
      }
      ++v2;
      if (v20 == v14)
      {
LABEL_30:

        swift_bridgeObjectRelease();
        uint64_t v2 = v25;
        unint64_t v4 = v24;
        goto LABEL_31;
      }
    }
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
  }
LABEL_46:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1004B981C(char *a1, void *a2, void *a3)
{
  if ([a1 byCopy]) {
    return 0;
  }
  unint64_t v6 = *(void *)&a1[OBJC_IVAR____TtC5Files16DOCMoveOperation_sourceItems];
  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1)
    {
      uint64_t result = swift_bridgeObjectRetain();
      goto LABEL_5;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 != 1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_8;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v8 = *(id *)(v6 + 32);
LABEL_8:
    id v9 = v8;
    swift_bridgeObjectRelease();
    id v10 = v9;
    id v11 = [a2 fileProviderItem];
    if (v11)
    {
      unint64_t v12 = v11;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v10 = v10;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {
        type metadata accessor for DOCHierarchyController.BrowsedLocationMoveCoordinator();
        uint64_t v14 = (void *)swift_allocObject();
        void v14[6] = 0;
        v14[7] = 0;
        v14[4] = &_swiftEmptySetSingleton;
        v14[5] = 0;
        _OWORD v14[2] = a2;
        v14[3] = a3;
        id v15 = a2;
        id v16 = a3;
        char v17 = (void *)DOCNode.representedLocation.getter();
        sub_1004B6EF0(a1, v10, v17);

        swift_release();
        return 1;
      }
    }
    else
    {
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004B9A18()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004B9A70()
{
  return sub_1004B59D8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1004B9A80()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004B9AB8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004B9AF0()
{
  return sub_1004B54A8(v0);
}

void sub_1004B9AF8()
{
  sub_1004B6238(1, 0xD000000000000018, (void *)0x80000001005FA070);

  sub_1004B6238(0, 0xD000000000000023, (void *)0x80000001005F9AE0);
}

id sub_1004B9B8C(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v3 = &v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics];
  __asm { FMOV            V1.2D, #4.0 }
  *(_OWORD *)unint64_t v3 = xmmword_1005AE070;
  *((_OWORD *)v3 + 1) = _Q1;
  *((void *)v3 + 4) = 0x4010000000000000;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar] = 1;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel] = a1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  swift_retain();
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1004B9DF0();

  swift_release();
  return v9;
}

void sub_1004B9CBC(uint64_t a1, void *a2, uint64_t a3)
{
}

uint64_t sub_1004B9CEC(uint64_t a1, void *a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  sub_1004BCFFC(a2, a3, a4, a5);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    v9[4] = sub_1004BDAD8;
    void v9[5] = v7;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1000666D8;
    v9[3] = &unk_1006B0ED8;
    id v8 = _Block_copy(v9);
    swift_unknownObjectRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1004B9DF0()
{
  id v1 = sub_1004BACD4();
  [v0 addSubview:v1];

  uint64_t v2 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A1560;
  id v4 = sub_1004BACD4();
  id v5 = [v4 leadingAnchor];

  id v6 = [v0 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_1004BACD4();
  id v9 = [v8 trailingAnchor];

  id v10 = [v0 trailingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v3 + 40) = v11;
  id v12 = sub_1004BACD4();
  id v13 = [v12 topAnchor];

  id v14 = [v0 topAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 48) = v15;
  id v16 = sub_1004BACD4();
  id v17 = [v16 bottomAnchor];

  id v18 = [v0 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v3 + 56) = v19;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

char *sub_1004BA080()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar;
  uint64_t v2 = *(char **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar);
  uint64_t v3 = v2;
  if (v2 == (char *)1)
  {
    uint64_t v3 = sub_1004BA0F0(v0);
    id v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v3;
    id v5 = v3;
    sub_1000D8158(v4);
  }
  sub_1000D8148(v2);
  return v3;
}

char *sub_1004BA0F0(uint64_t a1)
{
  swift_retain();
  uint64_t v2 = sub_100111528();
  swift_release();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionIndicatorView());
  swift_retain();
  id v4 = sub_1004BD70C(0, v2, v3, 0.3);
  id v5 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A0C30;
  id v7 = [v4 heightAnchor];
  uint64_t v8 = a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics;
  id v9 = [v7 constraintEqualToConstant:*(double *)(a1 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics)];

  *(void *)(v6 + 32) = v9;
  id v10 = [v4 widthAnchor];
  id v11 = [v10 constraintEqualToConstant:*(double *)(v8 + 8)];

  Class isa = NSLayoutConstraint.with(priority:)((__C::UILayoutPriority)1144750080).super.isa;
  *(void *)(v6 + 40) = isa;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 activateConstraints:v13];
  swift_release();

  return v4;
}

id sub_1004BA2E0()
{
  return sub_1004BA5F4(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleLabel, (uint64_t (*)(uint64_t))sub_1004BA300);
}

id sub_1004BA300(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  LODWORD(v6) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v6];
  LODWORD(v7) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v7];
  return v2;
}

id sub_1004BA43C()
{
  return sub_1004BA5F4(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleLabel, (uint64_t (*)(uint64_t))sub_1004BA45C);
}

id sub_1004BA45C(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  [v2 setNumberOfLines:0];
  id v6 = [self secondaryLabelColor];
  [v2 setTextColor:v6];

  LODWORD(v7) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v7];
  LODWORD(v8) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v8];
  return v2;
}

id sub_1004BA5D4()
{
  return sub_1004BA5F4(&OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___separatorLabel, (uint64_t (*)(uint64_t))sub_1004BA658);
}

id sub_1004BA5F4(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2(v2);
    double v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1004BA658(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = self;
  id v4 = [a1 traitCollection];
  id v5 = [v3 preferredFontForTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:v4];

  [v2 setFont:v5];
  [v2 setAdjustsFontForContentSizeCategory:1];
  [v2 setTextAlignment:1];
  id v6 = [self secondaryLabelColor];
  [v2 setTextColor:v6];

  NSString v7 = String._bridgeToObjectiveC()();
  [v2 setText:v7];

  LODWORD(v8) = 1148846080;
  [v2 setContentCompressionResistancePriority:0 forAxis:v8];
  LODWORD(v9) = 1148846080;
  [v2 setContentHuggingPriority:0 forAxis:v9];
  return v2;
}

id sub_1004BA7E8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButton);
  }
  else
  {
    id v4 = sub_1004BA848();
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1004BA848()
{
  uint64_t v0 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [objc_allocWithZone((Class)UIButton) init];
  static UIButton.Configuration.plain()();

  UIButton.Configuration.contentInsets.setter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v3);
  UIButton.Configuration.titleAlignment.setter();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v2, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  UIButton.configuration.setter();
  [v11 setDeliversTouchesForGesturesToSuperview:0];
  LODWORD(v12) = 1148846080;
  [v11 setContentCompressionResistancePriority:0 forAxis:v12];
  LODWORD(v13) = 1148846080;
  [v11 setContentHuggingPriority:0 forAxis:v13];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

id sub_1004BAB0C()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___titleContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics + 16)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1004BABF0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:0];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics + 24)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1004BACD4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:1];
    [v4 setDistribution:0];
    [v4 setSpacing:*(double *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_metrics + 32)];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1004BADB8(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      id v6 = a1;
      id v7 = sub_1004BA2E0();
      id v8 = [v6 title];
      [v7 setText:v8];

      sub_100113CF8(a1, 1);
      return;
    }
    switch((unint64_t)a1)
    {
      case 1uLL:
        id v25 = (id)_DocumentManagerBundle();
        if (!v25) {
          goto LABEL_36;
        }
        uint64_t v26 = v25;
        v61._unint64_t countAndFlagsBits = 0xD00000000000003ELL;
        v61._object = (void *)0x80000001005FA3C0;
        v27._unint64_t countAndFlagsBits = 0x77206465636E7953;
        v27._object = (void *)0xEE00402520687469;
        v28._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v28._object = (void *)0xEB00000000656C62;
        v29._unint64_t countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v61);

        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
        id v31 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel) + 32);
        swift_retain();
        id v32 = v31;
        if (![v32 isiCloudDriveProvider]) {
          goto LABEL_29;
        }
        goto LABEL_19;
      case 2uLL:
        id v33 = (id)_DocumentManagerBundle();
        if (!v33) {
          goto LABEL_37;
        }
        uint64_t v34 = v33;
        v62._unint64_t countAndFlagsBits = 0xD00000000000009ALL;
        v62._object = (void *)0x80000001005FA320;
        v35._unint64_t countAndFlagsBits = 0x20676E69636E7953;
        v35._object = (void *)0xEF40252068746977;
        v36._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v36._object = (void *)0xEB00000000656C62;
        v37._unint64_t countAndFlagsBits = 0;
        v37._object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v62);

        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
        uint64_t v38 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel) + 32);
        swift_retain();
        id v32 = v38;
        if ([v32 isiCloudDriveProvider])
        {
LABEL_19:
          uint64_t v39 = 0x64756F6C4369;
          swift_release();

          unint64_t v40 = 0xE600000000000000;
        }
        else
        {
LABEL_29:
          id v56 = [v32 providerDisplayName];
          uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v40 = v57;
          swift_release();
        }
        *(void *)(v30 + 56) = &type metadata for String;
        *(void *)(v30 + 64) = sub_100073F48();
        *(void *)(v30 + 32) = v39;
        *(void *)(v30 + 40) = v40;
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v41 = sub_1004BA2E0();
        id v59 = String._bridgeToObjectiveC()();
        goto LABEL_31;
      case 4uLL:
        id v41 = sub_1004BA2E0();
        id v42 = (id)_DocumentManagerBundle();
        if (!v42) {
          goto LABEL_38;
        }
        uint64_t v43 = v42;
        v63._unint64_t countAndFlagsBits = 0xD00000000000004BLL;
        v63._object = (void *)0x80000001005FA240;
        v44._unint64_t countAndFlagsBits = 0x676E697461647055;
        v44._object = (void *)0xAB00000000A680E2;
        v45._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v45._object = (void *)0xEB00000000656C62;
        v46._unint64_t countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v44, v45, (NSBundle)v43, v46, v63);

        goto LABEL_28;
      default:
        id v14 = (id)_DocumentManagerBundle();
        uint64_t v15 = v14;
        if (a4)
        {
          if (v14)
          {
            unint64_t v16 = 0xD000000000000041;
            unint64_t v58 = 0x80000001005FA4C0;
            unint64_t v17 = 0x80000001005FA4A0;
            unint64_t v18 = 0xD000000000000011;
            goto LABEL_24;
          }
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
        }
        else if (v14)
        {
          unint64_t v18 = 0xD000000000000016;
          unint64_t v16 = 0xD000000000000072;
          unint64_t v58 = 0x80000001005FA420;
          unint64_t v17 = 0x80000001005FA400;
LABEL_24:
          v47._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v47._object = (void *)0xEB00000000656C62;
          v48._unint64_t countAndFlagsBits = 0;
          v48._object = (void *)0xE000000000000000;
          DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v18, v47, (NSBundle)v15, v48, *(Swift::String *)&v16);

          id v41 = sub_1004BA2E0();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v49 = swift_allocObject();
          *(_OWORD *)(v49 + 16) = xmmword_1005A0030;
          uint64_t v50 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel) + 32);
          swift_retain();
          id v51 = v50;
          if ([v51 isiCloudDriveProvider])
          {
            uint64_t v52 = 0x64756F6C4369;
            swift_release();

            unint64_t v53 = 0xE600000000000000;
          }
          else
          {
            id v54 = [v51 providerDisplayName];
            uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v53 = v55;
            swift_release();
          }
          *(void *)(v49 + 56) = &type metadata for String;
          *(void *)(v49 + 64) = sub_100073F48();
          *(void *)(v49 + 32) = v52;
          *(void *)(v49 + 40) = v53;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_28:
          id v59 = String._bridgeToObjectiveC()();
LABEL_31:
          swift_bridgeObjectRelease();
          [v41 setText:v59];

          goto LABEL_32;
        }
        __break(1u);
        JUMPOUT(0x1004BB57CLL);
    }
  }
  uint64_t v9 = *(void **)(*(void *)(v4 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel) + 32);
  swift_retain();
  id v10 = v9;
  if ([v10 isiCloudDriveProvider])
  {
    uint64_t v11 = 0x64756F6C4369;
    swift_release();

    unint64_t v12 = 0xE600000000000000;
  }
  else
  {
    id v19 = [v10 providerDisplayName];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v20;
    swift_release();
  }
  v21._unint64_t countAndFlagsBits = 0xD000000000000017;
  v22._unint64_t countAndFlagsBits = 0xD00000000000006CLL;
  v21._object = (void *)0x80000001005FA290;
  v22._object = (void *)0x80000001005FA2B0;
  DOCLocalizedDictionaryString(_:comment:)(v21, v22);
  id v23 = sub_1004BA2E0();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10059B760;
  *(void *)(v24 + 56) = &type metadata for Int;
  *(void *)(v24 + 64) = &protocol witness table for Int;
  *(void *)(v24 + 32) = a1;
  *(void *)(v24 + 96) = &type metadata for String;
  *(void *)(v24 + 104) = sub_100073F48();
  *(void *)(v24 + 72) = v11;
  *(void *)(v24 + 80) = v12;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v59 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setText:v59];

LABEL_32:
}

void sub_1004BB590(void *a1, char a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v63 - v11;
  uint64_t v13 = sub_1000CBE70(&qword_100706748);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  unint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  id v19 = (char *)&v63 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  Swift::String v22 = (char *)&v63 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v63 - v23;
  if (!a2)
  {
LABEL_9:
    id v32 = (id)_DocumentManagerBundle();
    if (v32)
    {
      id v33 = v32;
      v66._object = (void *)0x80000001005FA180;
      v34._unint64_t countAndFlagsBits = 0x6573756150;
      v34._object = (void *)0xE500000000000000;
      v35._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v35._object = (void *)0xEB00000000656C62;
      v36._unint64_t countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      v66._unint64_t countAndFlagsBits = 0xD000000000000037;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v66);

      id v30 = sub_1004BA7E8();
      UIButton.configuration.getter();
      uint64_t v37 = type metadata accessor for UIButton.Configuration();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v24, 1, v37))
      {
        swift_bridgeObjectRelease();
        sub_1002B91A4((uint64_t)v24, (uint64_t)v22);
        UIButton.configuration.setter();

        sub_1002B920C((uint64_t)v24);
        goto LABEL_26;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      unint64_t v53 = UIFontTextStyleFootnote;
      id v54 = [v3 traitCollection];
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      swift_getKeyPath();
      id v64 = [self preferredFontForTextStyle:v53 compatibleWithTraitCollection:v54];
      sub_1002DC380();
      AttributedString.subscript.setter();
      swift_bridgeObjectRelease();

      uint64_t v56 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v12, 0, 1, v56);
      UIButton.Configuration.attributedTitle.setter();
      UIButton.configuration.setter();

      goto LABEL_26;
    }
    goto LABEL_32;
  }
  if (a2 != 1)
  {
    if (a2 != 2) {
      return;
    }
    if (a1 != (void *)2)
    {
      if (a1 != (void *)3) {
        return;
      }
      id v25 = (id)_DocumentManagerBundle();
      if (v25)
      {
        uint64_t v26 = v25;
        v65._unint64_t countAndFlagsBits = 0xD000000000000038;
        v65._object = (void *)0x80000001005FA140;
        v27._unint64_t countAndFlagsBits = 0x656D75736552;
        v27._object = (void *)0xE600000000000000;
        v28._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v28._object = (void *)0xEB00000000656C62;
        v29._unint64_t countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v65);

        id v30 = sub_1004BA7E8();
        UIButton.configuration.getter();
        uint64_t v31 = type metadata accessor for UIButton.Configuration();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v19, 1, v31))
        {
          swift_bridgeObjectRelease();
          sub_1002B91A4((uint64_t)v19, (uint64_t)v22);
          UIButton.configuration.setter();

          sub_1002B920C((uint64_t)v19);
LABEL_26:
          id v57 = sub_1004BA7E8();
          [v57 setUserInteractionEnabled:1];

          id v58 = sub_1004BA7E8();
          sub_10009E6C4(0, (unint64_t *)&qword_100706740);
          uint64_t v59 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v60 = swift_allocObject();
          *(void *)(v60 + 16) = v59;
          *(void *)(v60 + 24) = v3;
          id v61 = v3;
          Swift::String v62 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          [v58 setDoc_primaryAction:v62];

          return;
        }
        goto LABEL_25;
      }
LABEL_33:
      __break(1u);
      return;
    }
    goto LABEL_9;
  }
  id v38 = [a1 actions];
  sub_10009E6C4(0, &qword_100707440);
  unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v39 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = (void *)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v40) {
      goto LABEL_18;
    }
  }
  else
  {
    unint64_t v40 = *(void **)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v40) {
      goto LABEL_18;
    }
  }
  if ((v39 & 0xC000000000000001) != 0)
  {
    id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    id v41 = *(id *)(v39 + 32);
  }
  unint64_t v40 = v41;
LABEL_18:
  swift_bridgeObjectRelease();
  id v42 = sub_1004BA7E8();
  UIButton.configuration.getter();
  uint64_t v43 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v16, 1, v43))
  {
    sub_1002B91A4((uint64_t)v16, (uint64_t)v22);
    UIButton.configuration.setter();

    sub_1002B920C((uint64_t)v16);
  }
  else
  {
    if (v40)
    {
      id v44 = [v40 title];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    swift_bridgeObjectRetain();
    Swift::String v63 = UIFontTextStyleFootnote;
    id v45 = [v3 traitCollection];
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    uint64_t v46 = swift_getKeyPath();
    __chkstk_darwin(v46);
    swift_getKeyPath();
    Swift::String v47 = self;
    Swift::String v48 = v63;
    id v64 = [v47 preferredFontForTextStyle:v63 compatibleWithTraitCollection:v45];
    sub_1002DC380();
    AttributedString.subscript.setter();
    swift_bridgeObjectRelease();

    uint64_t v49 = type metadata accessor for AttributedString();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v10, 0, 1, v49);
    UIButton.Configuration.attributedTitle.setter();
    UIButton.configuration.setter();
  }
  id v50 = sub_1004BA7E8();
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  *(void *)(swift_allocObject() + 16) = v40;
  id v51 = v40;
  uint64_t v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  [v50 setDoc_primaryAction:v52];

  sub_100113CF8(a1, 1);
}

id sub_1004BC138(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100706748);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - v12;
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      unint64_t v16 = result;
      v28._object = (void *)0x80000001005FA200;
      v17._unint64_t countAndFlagsBits = 0x676E696D75736552;
      v17._object = (void *)0xAB00000000A680E2;
      v18._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._unint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v28._unint64_t countAndFlagsBits = 0xD00000000000003ALL;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v28);

      id v20 = sub_1004BA7E8();
      UIButton.configuration.getter();
      uint64_t v21 = type metadata accessor for UIButton.Configuration();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v13, 1, v21))
      {
        swift_bridgeObjectRelease();
        sub_1002B91A4((uint64_t)v13, (uint64_t)v11);
        UIButton.configuration.setter();

        sub_1002B920C((uint64_t)v13);
      }
      else
      {
        swift_bridgeObjectRetain();
        Swift::String v22 = UIFontTextStyleFootnote;
        id v23 = [a3 traitCollection];
        AttributeContainer.init()();
        AttributedString.init(_:attributes:)();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        id v27 = [self preferredFontForTextStyle:v22 compatibleWithTraitCollection:v23];
        sub_1002DC380();
        AttributedString.subscript.setter();
        swift_bridgeObjectRelease();

        uint64_t v25 = type metadata accessor for AttributedString();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 0, 1, v25);
        UIButton.Configuration.attributedTitle.setter();
        UIButton.configuration.setter();
      }
      id v26 = sub_1004BA7E8();
      [v26 setUserInteractionEnabled:0];

      swift_retain();
      sub_100110FC4();

      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1004BC544(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100706748);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - v12;
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      unint64_t v16 = result;
      v28._object = (void *)0x80000001005FA1C0;
      v17._unint64_t countAndFlagsBits = 0xE2676E6973756150;
      v17._object = (void *)0xAA0000000000A680;
      v18._unint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v18._object = (void *)0xEB00000000656C62;
      v19._unint64_t countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v28._unint64_t countAndFlagsBits = 0xD000000000000039;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v28);

      id v20 = sub_1004BA7E8();
      UIButton.configuration.getter();
      uint64_t v21 = type metadata accessor for UIButton.Configuration();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v13, 1, v21))
      {
        swift_bridgeObjectRelease();
        sub_1002B91A4((uint64_t)v13, (uint64_t)v11);
        UIButton.configuration.setter();

        sub_1002B920C((uint64_t)v13);
      }
      else
      {
        swift_bridgeObjectRetain();
        Swift::String v22 = UIFontTextStyleFootnote;
        id v23 = [a3 traitCollection];
        AttributeContainer.init()();
        AttributedString.init(_:attributes:)();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        id v27 = [self preferredFontForTextStyle:v22 compatibleWithTraitCollection:v23];
        sub_1002DC380();
        AttributedString.subscript.setter();
        swift_bridgeObjectRelease();

        uint64_t v25 = type metadata accessor for AttributedString();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v7, 0, 1, v25);
        UIButton.Configuration.attributedTitle.setter();
        UIButton.configuration.setter();
      }
      id v26 = sub_1004BA7E8();
      [v26 setUserInteractionEnabled:0];

      swift_retain();
      sub_100110F9C();

      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1004BC94C(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a4;
  id v7 = sub_1004BAB0C();
  id v8 = [v7 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    id v14 = sub_1004BAB0C();
    [v14 removeArrangedSubview:v13];

    [v13 removeFromSuperview];
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v15 = *(void *)(v5 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel);
  unint64_t v16 = *(void **)(v15 + 160);
  swift_retain();
  if (v16) {
    BOOL v17 = [v16 contentType] == 0;
  }
  else {
    BOOL v17 = 0;
  }
  unsigned int v18 = [*(id *)(v15 + 32) isSyncStateMessagingSupported:v28];
  swift_release();
  if (v18 && !v17)
  {
    id v19 = sub_1004BAB0C();
    id v20 = sub_1004BA2E0();
    [v19 addArrangedSubview:v20];
  }
  swift_retain();
  if (sub_1001131D8())
  {
    sub_100113074();
    uint64_t v22 = v21;
    swift_release();
    if (v22 > 0)
    {
      id v24 = sub_1004BAB0C();
      id v25 = sub_1004BA5D4();
      [v24 addArrangedSubview:v25];

      id v26 = sub_1004BAB0C();
      id v27 = sub_1004BA7E8();
      [v26 addArrangedSubview:v27];
    }
  }
  else
  {
    swift_release();
  }
  sub_1004BADB8(a1, a2, v23, v29);

  sub_1004BB590(a1, a2);
}

void sub_1004BCC14(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  id v9 = sub_1004BABF0();
  id v10 = [v9 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v38 = a1;
  id v12 = a2;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (!v13) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v13) {
      goto LABEL_10;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v14 = 0;
  do
  {
    if ((v11 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v11 + 8 * v14 + 32);
    }
    unint64_t v16 = v15;
    ++v14;
    id v17 = sub_1004BABF0();
    [v17 removeArrangedSubview:v16];

    [v16 removeFromSuperview];
  }
  while (v13 != v14);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v18 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
  swift_retain();
  char v19 = sub_100111B5C();
  swift_release();
  if (v19)
  {
    id v20 = sub_1004BABF0();
    id v21 = sub_1004BA43C();
    [v20 addArrangedSubview:v21];
  }
  uint64_t v22 = *(void *)(v6 + v18);
  uint64_t v23 = *(void **)(v22 + 160);
  char v5 = (char)v12;
  id v12 = v38;
  if (v23)
  {
    swift_retain();
    if ([v23 contentType] != (id)2 || (id v24 = *(void **)(v22 + 160)) == 0)
    {
      swift_release();
      goto LABEL_20;
    }
    id v25 = [v24 actions];
    sub_10009E6C4(0, &qword_100707440);
    unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v26 >> 62))
    {
      uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release();
      goto LABEL_17;
    }
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_17:
    swift_bridgeObjectRelease();
    if (v27 > 0)
    {
      id v28 = sub_1004BABF0();
      id v29 = sub_1004BA5D4();
      [v28 addArrangedSubview:v29];

      id v30 = sub_1004BABF0();
      id v31 = sub_1004BA7E8();
      [v30 addArrangedSubview:v31];
    }
  }
LABEL_20:
  if (v5 == 1)
  {
    id v34 = v12;
    id v35 = sub_1004BA43C();
    id v36 = [v34 subTitle];
    [v35 setText:v36];

    sub_100113CF8(v12, 1);
  }
  else if (v5 == 2 && !v12)
  {
    id v32 = sub_1004BA43C();
    if (a4) {
      NSString v33 = String._bridgeToObjectiveC()();
    }
    else {
      NSString v33 = 0;
    }
    [v32 setText:v33];
  }

  sub_1004BB590(v12, v5);
}

void sub_1004BCFFC(void *a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v7 = sub_1004BACD4();
  id v8 = [v7 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    if (!v10) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    ++v11;
    id v14 = sub_1004BACD4();
    [v14 removeArrangedSubview:v13];

    [v13 removeFromSuperview];
  }
  while (v10 != v11);
LABEL_10:
  swift_bridgeObjectRelease_n();
  uint64_t v15 = OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_viewModel;
  swift_retain();
  sub_10011187C();
  char v17 = v16;
  swift_release();
  if (v17)
  {
    uint64_t v18 = sub_1004BA080();
    if (v18)
    {
      char v19 = v18;
      id v20 = sub_1004BACD4();
      [v20 addArrangedSubview:v19];

      id v38 = self;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1005A04F0;
      id v22 = [v19 widthAnchor];
      id v23 = sub_1004BACD4();
      id v24 = [v23 widthAnchor];

      id v25 = [v22 constraintLessThanOrEqualToAnchor:v24];
      *(void *)(v21 + 32) = v25;
      specialized Array._endMutation()();
      sub_10009E6C4(0, (unint64_t *)&unk_100706720);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v38 activateConstraints:isa];
    }
  }
  uint64_t v27 = *(void *)(v5 + v15);
  id v28 = *(void **)(v27 + 160);
  swift_retain();
  if (v28) {
    BOOL v29 = [v28 contentType] == 0;
  }
  else {
    BOOL v29 = 0;
  }
  if ([*(id *)(v27 + 32) isSyncStateMessagingSupported] && !v29)
  {
    swift_release();
LABEL_21:
    id v32 = sub_1004BACD4();
    id v33 = sub_1004BAB0C();
    [v32 addArrangedSubview:v33];

    goto LABEL_23;
  }
  if ((sub_1001131D8() & 1) == 0)
  {
    swift_release();
    goto LABEL_23;
  }
  sub_100113074();
  uint64_t v31 = v30;
  swift_release();
  if (v31 > 0) {
    goto LABEL_21;
  }
LABEL_23:
  swift_retain();
  char v34 = sub_100111A14();
  swift_release();
  if (v34)
  {
    id v36 = sub_1004BACD4();
    id v37 = sub_1004BABF0();
    [v36 addArrangedSubview:v37];
  }
  sub_1004BC94C(a1, a2, v35, a4);

  sub_1004BCC14(a1, (void *)a2, a3, a4);
}

void sub_1004BD434()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView_delegate);
  swift_release();
  sub_1000D8158(*(id *)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___progressBar));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___actionButtonContainerView));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___subtitleContainer));
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCFileProviderSyncStateFooterView____lazy_storage___mainContainer);
}

id sub_1004BD504()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFileProviderSyncStateFooterView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCFileProviderSyncStateFooterView()
{
  return self;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateFooterView.Metrics()
{
  return &type metadata for DOCFileProviderSyncStateFooterView.Metrics;
}

uint64_t sub_1004BD648()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004BD688()
{
  return 8;
}

uint64_t sub_1004BD694()
{
  return swift_release();
}

uint64_t sub_1004BD69C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1004BD6B0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004BD6BC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004BD6F8(uint64_t a1)
{
  return sub_1004BC138(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

id sub_1004BD704(uint64_t a1)
{
  return sub_1004BC544(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

char *sub_1004BD70C(char a1, uint64_t a2, unsigned char *a3, double a4)
{
  char v7 = a1 & 1;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_unknownObjectWeakInit();
  a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_enabled] = 1;
  id v12 = &a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_combinedProgress];
  *(void *)id v12 = 0;
  v12[8] = 1;
  a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_autohideContentOnCompletion] = 1;
  *(void *)&a3[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_preferredIconColor] = 0;
  uint64_t v13 = OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup;
  type metadata accessor for DOCGenericOperationCombinedProgress(0);
  swift_allocObject();
  id v14 = a3;
  *(void *)&a3[v13] = sub_100304074((uint64_t)_swiftEmptyArrayStorage, (uint64_t)&off_100689738);
  *(void *)&v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView____lazy_storage___didTapGestureRecognizer] = 0;
  uint64_t v15 = (uint64_t *)&v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_debugID];
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v16 = sub_100062330(6);
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t *v15 = v16;
  v15[1] = v18;
  _OWORD v15[2] = v20;
  v15[3] = v22;
  v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_isShowingContent] = 0;
  *(void *)&v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_pointerInteraction] = 0;
  v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_sourceUpdateHandlerIsInstalled] = 0;
  id v23 = &v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_source];
  *id v23 = a2;
  v23[1] = &protocol witness table for DOCFilterableOperationProgressCollectionSource<A>;
  id v24 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
  sub_100317F9C(v7, a4 + 0.1);
  *(void *)&v14[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_aggregateIndicatorView] = v25;

  unint64_t v26 = (objc_class *)type metadata accessor for DOCProgressCollectionIndicatorView();
  v42.receiver = v14;
  v42.super_class = v26;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v40 = 0;
  unint64_t v41 = 0xE000000000000000;
  id v28 = (char *)v27;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  uint64_t v40 = 0xD000000000000011;
  unint64_t v41 = 0x80000001005FA510;
  id v29 = [v28 description];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v32 = v31;

  v33._unint64_t countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  sub_100293194(v40, v41);
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)&v28[OBJC_IVAR____TtC5Files34DOCProgressCollectionIndicatorView_progressGroup];
  swift_beginAccess();
  *(double *)(v34 + 16) = a4;
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v36 = (uint64_t *)(v34 + direct field offset for DOCOperationCombinedProgress.updateHandler);
  swift_beginAccess();
  uint64_t v37 = *v36;
  *id v36 = (uint64_t)sub_1004BDAD0;
  v36[1] = v35;
  sub_100307844(v37);
  sub_100293458();
  sub_100294910();

  return v28;
}

void sub_1004BDAD0()
{
}

uint64_t sub_1004BDAD8()
{
  return sub_1001AFBFC();
}

uint64_t sub_1004BDD58()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 delegate];
  if (!v7) {
    goto LABEL_19;
  }
  id v8 = v7;
  type metadata accessor for DOCSuggestionsTableViewController();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
LABEL_18:
    swift_unknownObjectRelease();
LABEL_19:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = (unint64_t)[v9 numberOfSectionsInTableView:v1];
  if ((v10 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v11 = v10;
  v28[1] = v8;
  if (v10)
  {
    uint64_t v12 = 0;
    uint64_t v13 = (void (**)(char *, uint64_t))(v3 + 8);
    CGFloat v14 = 0.0;
    CGFloat v15 = 0.0;
    CGFloat v16 = 0.0;
    CGFloat v17 = 0.0;
    while (v12 != v11)
    {
      unint64_t v18 = (unint64_t)[v1 numberOfRowsInSection:v12];
      if ((v18 & 0x8000000000000000) != 0) {
        goto LABEL_16;
      }
      unint64_t v19 = v18;
      if (v18)
      {
        uint64_t v20 = 0;
        do
        {
          uint64_t v21 = v20 + 1;
          IndexPath.init(row:section:)();
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          (*v13)(v6, v2);
          [v1 rectForRowAtIndexPath:isa];
          CGFloat v16 = v23;
          CGFloat v17 = v24;
          CGFloat v14 = v25;
          CGFloat v15 = v26;

          uint64_t v20 = v21;
        }
        while (v19 != v21);
      }
      if (++v12 == v11) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  CGFloat v14 = 0.0;
  CGFloat v15 = 0.0;
  CGFloat v16 = 0.0;
  CGFloat v17 = 0.0;
LABEL_14:
  v29.origin.x = v16;
  v29.origin.y = v17;
  v29.size.width = v14;
  v29.size.height = v15;
  CGRectGetMaxY(v29);
  return swift_unknownObjectRelease();
}

id sub_1004BDFC4(uint64_t a1)
{
  return sub_1004C0434(a1, type metadata accessor for DOCSuggestionsTableView);
}

uint64_t type metadata accessor for DOCSuggestionsTableView()
{
  return self;
}

id sub_1004BE0D8()
{
  return sub_1004C0434(0, type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell);
}

id sub_1004BE0F8()
{
  swift_getObjectType();
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions] = _swiftEmptyArrayStorage;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCSuggestionsTableViewController();
  id v1 = [super initWithStyle:0];
  sub_1000CBE70((uint64_t *)&unk_100708760);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1005A0030;
  *(void *)(v2 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v2 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  id v3 = v1;
  UIViewController.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

void sub_1004BE368()
{
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for DOCSuggestionsTableViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v2 = v1;
  [v1 setClipsToBounds:1];

  id v3 = [v0 tableView];
  if (!v3)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  double v4 = v3;
  id v5 = [objc_allocWithZone((Class)UIView) init];
  [v4 setTableFooterView:v5];

  id v6 = [v0 tableView];
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v7 = v6;
  [v6 setBouncesVertically:0];

  id v8 = [v0 tableView];
  if (!v8)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v9 = v8;
  [v8 setCellLayoutMarginsFollowReadableWidth:1];

  id v10 = [v0 tableView];
  if (!v10)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v11 = v10;
  [v10 setDelegate:v0];

  id v12 = [v0 tableView];
  if (!v12)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v13 = v12;
  [v12 setDataSource:v0];

  id v14 = [v0 tableView];
  if (!v14)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  CGFloat v15 = v14;
  type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v17 = String._bridgeToObjectiveC()();
  [v15 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v17];

  id v18 = [v0 tableView];
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v19 = v18;
  [v18 setShowsVerticalScrollIndicator:0];

  id v20 = [v0 tableView];
  if (!v20)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v21 = v20;
  [v20 setShowsHorizontalScrollIndicator:0];

  id v22 = [v0 tableView];
  if (v22)
  {
    double v23 = v22;
    [v22 setAllowsMultipleSelection:0];

    return;
  }
LABEL_21:
  __break(1u);
}

id sub_1004BE670()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v19 - v9;
  unint64_t v11 = (objc_class *)type metadata accessor for DOCSuggestionsTableViewController();
  v19.receiver = v0;
  v19.super_class = v11;
  [super resignFirstResponder];
  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v14 = result;
  id v15 = [result indexPathForSelectedRow];

  if (!v15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    goto LABEL_7;
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  CGFloat v16 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v16(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_7:
    sub_10011631C((uint64_t)v3);
    return v12;
  }
  v16(v10, v3, v4);
  id result = [v0 tableView];
  if (result)
  {
    NSString v17 = result;
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v17 deselectRowAtIndexPath:isa animated:1];

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    return v12;
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_1004BEA74()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v16 - v10;
  id result = [v0 tableView];
  if (result)
  {
    uint64_t v13 = result;
    id v14 = [result indexPathForSelectedRow];

    if (v14)
    {
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      id v15 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v15(v3, v7, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        v15(v11, v3, v4);
        sub_1004BF958();
        return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
    }
    return (id)sub_10011631C((uint64_t)v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004BED50(uint64_t a1, char a2, int a3)
{
  uint64_t v4 = v3;
  int v98 = a3;
  uint64_t v103 = a1;
  unint64_t v105 = (void *)type metadata accessor for IndexPath();
  uint64_t v6 = (char *)*(v105 - 1);
  __chkstk_darwin(v105);
  id v94 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v101 = (char *)&v92 - v9;
  __chkstk_darwin(v10);
  unint64_t v100 = (char *)&v92 - v11;
  __chkstk_darwin(v12);
  id v93 = (char *)&v92 - v13;
  __chkstk_darwin(v14);
  Swift::Int v95 = (char *)&v92 - v15;
  uint64_t v16 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v97 = (uint64_t)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v20 = (char *)&v92 - v19;
  __chkstk_darwin(v21);
  double v23 = (char *)&v92 - v22;
  __chkstk_darwin(v24);
  Swift::Int v96 = (char *)&v92 - v25;
  __chkstk_darwin(v26);
  id v28 = (char *)&v92 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v92 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v92 - v33;
  __chkstk_darwin(v35);
  uint64_t v102 = (uint64_t)&v92 - v36;
  __chkstk_darwin(v37);
  unint64_t v39 = (char *)&v92 - v38;
  double v41 = __chkstk_darwin(v40);
  uint64_t v104 = (uint64_t)&v92 - v42;
  uint64_t v99 = v4;
  unint64_t result = [v4 tableView];
  if (!result)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  id v44 = (void *)result;
  id v45 = [(id)result indexPathForSelectedRow];

  if (v45)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v46 = (void (*)(char *, uint64_t, uint64_t, void *))*((void *)v6 + 7);
    v46(v39, 0, 1, v105);
  }
  else
  {
    uint64_t v46 = (void (*)(char *, uint64_t, uint64_t, void *))*((void *)v6 + 7);
    v46(v39, 1, 1, v105);
  }
  uint64_t v47 = v104;
  sub_1001AA3C4((uint64_t)v39, v104);
  if (!a2)
  {
    uint64_t v51 = v102;
    IndexPath.init(row:section:)();
    uint64_t v49 = v105;
    v46((char *)v51, 0, 1, v105);
LABEL_11:
    uint64_t v52 = v101;
    goto LABEL_14;
  }
  if (a2 != 1)
  {
    uint64_t v52 = v101;
    if (!v103)
    {
      sub_10010BFFC(v47, (uint64_t)v34);
      uint64_t v68 = (unsigned int (*)(char *, uint64_t, void *))*((void *)v6 + 6);
      uint64_t v69 = v6;
      uint64_t v70 = v105;
      if (v68(v34, 1, v105) == 1)
      {
        uint64_t v67 = (uint64_t)v34;
        goto LABEL_28;
      }
      unint64_t v78 = v95;
      (*((void (**)(char *, char *, void *))v69 + 4))(v95, v34, v70);
      unint64_t result = (unint64_t)[v99 tableView];
      if (result)
      {
        unint64_t v79 = (void *)result;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v79 deselectRowAtIndexPath:isa animated:0];

        (*((void (**)(char *, void *))v69 + 1))(v78, v70);
        goto LABEL_51;
      }
      goto LABEL_64;
    }
    uint64_t v51 = v102;
    IndexPath.init(row:section:)();
    uint64_t v49 = v105;
    v46((char *)v51, 0, 1, v105);
LABEL_14:
    sub_10010BFFC(v51, (uint64_t)v20);
    unint64_t v53 = (unsigned int (*)(char *, uint64_t, void *))*((void *)v6 + 6);
    if (v53(v20, 1, v49) == 1)
    {
      sub_10011631C(v51);
      sub_10011631C(v47);
      uint64_t v47 = (uint64_t)v20;
      return sub_10011631C(v47);
    }
    id v54 = (void *)*((void *)v6 + 4);
    unint64_t v55 = v100;
    ((void (*)(char *, char *, void *))v54)(v100, v20, v49);
    uint64_t v56 = IndexPath.row.getter();
    (*((void (**)(char *, char *, void *))v6 + 2))(v52, v55, v49);
    if (v56 < 0)
    {
      uint64_t v6 = (char *)*((void *)v6 + 1);
      ((void (*)(char *, void *))v6)(v52, v49);
    }
    else
    {
      unint64_t v105 = v54;
      uint64_t v57 = IndexPath.row.getter();
      unint64_t result = (unint64_t)[v99 tableView];
      if (!result)
      {
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
        goto LABEL_62;
      }
      id v58 = (void *)result;
      id v59 = [(id)result numberOfRowsInSection:0];

      uint64_t v6 = (char *)*((void *)v6 + 1);
      ((void (*)(char *, void *))v6)(v52, v49);
      if (v57 < (uint64_t)v59)
      {
        uint64_t v47 = v104;
        uint64_t v60 = v97;
        sub_10010BFFC(v104, v97);
        if (v53((char *)v60, 1, v49) == 1)
        {
          sub_10011631C(v60);
          id v61 = v99;
          uint64_t v62 = (uint64_t)v100;
          Swift::String v63 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
        }
        else
        {
          uint64_t v81 = v94;
          ((void (*)(char *, uint64_t, void *))v105)(v94, v60, v49);
          Swift::String v63 = &selRef_doc_adjustForAutomaticKeyboardInfo_animated_lastAdjustment_;
          id v61 = v99;
          unint64_t result = (unint64_t)[v99 tableView];
          if (!result)
          {
LABEL_65:
            __break(1u);
            goto LABEL_66;
          }
          uint64_t v82 = (void *)result;
          Class v83 = IndexPath._bridgeToObjectiveC()().super.isa;
          [v82 deselectRowAtIndexPath:v83 animated:0];

          ((void (*)(char *, void *))v6)(v81, v49);
          uint64_t v62 = (uint64_t)v100;
        }
        unint64_t result = (unint64_t)[v61 v63[228]];
        if (!result) {
          goto LABEL_61;
        }
        uint64_t v84 = (void *)result;
        Class v85 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v84 selectRowAtIndexPath:v85 animated:0 scrollPosition:0];

        unint64_t result = (unint64_t)[v61 v63[228]];
        if (!result)
        {
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        uint64_t v86 = (void *)result;
        UITableView.doc_scrollToItemIfNeeded(at:)(v62);

        if ((v98 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
        {
          unint64_t result = IndexPath.row.getter();
          uint64_t v87 = *(void *)&v61[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions];
          if ((v87 & 0xC000000000000001) == 0)
          {
            if ((result & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (result < *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v88 = *(id *)(v87 + 8 * result + 32);
              ((void (*)(uint64_t, void *))v6)(v62, v49);
              sub_10011631C(v102);
              swift_unknownObjectRelease();

              return sub_10011631C(v47);
            }
            __break(1u);
            goto LABEL_58;
          }
LABEL_55:
          swift_bridgeObjectRetain();
          specialized _ArrayBuffer._getElementSlowPath(_:)();
          swift_bridgeObjectRelease();
          ((void (*)(uint64_t, void *))v6)(v62, v49);
          sub_10011631C(v102);
          swift_unknownObjectRelease();
          uint64_t v47 = v104;
          swift_unknownObjectRelease();
          return sub_10011631C(v47);
        }
        ((void (*)(uint64_t, void *))v6)(v62, v49);
        uint64_t v72 = v102;
LABEL_48:
        sub_10011631C(v72);
        return sub_10011631C(v47);
      }
      uint64_t v47 = v104;
    }
    uint64_t v71 = v102;
    ((void (*)(char *, void *))v6)(v100, v49);
    uint64_t v72 = v71;
    goto LABEL_48;
  }
  Swift::Int v95 = v6;
  uint64_t v49 = v6 + 48;
  Swift::String v48 = (uint64_t (*)(char *, uint64_t, void *))*((void *)v6 + 6);
  id v50 = v105;
  if (v48((char *)v47, 1, v105) == 1)
  {
    if (v103 >= 1) {
      sub_1004BED50(1, 2, v98 & 1);
    }
    return sub_10011631C(v47);
  }
  sub_10010BFFC(v47, (uint64_t)v31);
  unint64_t result = v48(v31, 1, v50);
  if (result == 1) {
    goto LABEL_60;
  }
  uint64_t v64 = IndexPath.row.getter();
  uint64_t v62 = (uint64_t)(v95 + 8);
  unint64_t v92 = (void (*)(char *, void *))*((void *)v95 + 1);
  v92(v31, v50);
  uint64_t v65 = v103;
  if (v64 || (v103 & 0x8000000000000000) == 0)
  {
    uint64_t v47 = v104;
    sub_10010BFFC(v104, (uint64_t)v23);
    uint64_t v73 = v105;
    unint64_t result = v48(v23, 1, v105);
    if (result == 1)
    {
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    uint64_t v74 = IndexPath.row.getter();
    v92(v23, v73);
    BOOL v75 = __OFADD__(v74, v65);
    uint64_t v6 = v95;
    if (v75)
    {
      __break(1u);
      goto LABEL_55;
    }
    uint64_t v49 = v73;
    uint64_t v76 = v96;
    IndexPath.init(row:section:)();
    v46(v76, 0, 1, v73);
    uint64_t v77 = (uint64_t)v76;
    uint64_t v51 = v102;
    sub_1001AA3C4(v77, v102);
    goto LABEL_11;
  }
  uint64_t v47 = v104;
  sub_10010BFFC(v104, (uint64_t)v28);
  Swift::String v66 = v105;
  if (v48(v28, 1, v105) == 1)
  {
    uint64_t v67 = (uint64_t)v28;
LABEL_28:
    sub_10011631C(v67);
    goto LABEL_51;
  }
  uint64_t v89 = v93;
  (*((void (**)(char *, char *, void *))v95 + 4))(v93, v28, v66);
  unint64_t result = (unint64_t)[v99 tableView];
  if (result)
  {
    uint64_t v90 = (void *)result;
    Class v91 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v90 deselectRowAtIndexPath:v91 animated:0];

    v92(v89, v66);
LABEL_51:
    if (swift_unknownObjectWeakLoadStrong()) {
      swift_unknownObjectRelease();
    }
    return sub_10011631C(v47);
  }
LABEL_66:
  __break(1u);
  return result;
}

void sub_1004BF84C(char a1)
{
  id v3 = [v1 tableView];
  if (!v3)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = v3;
  [v3 reloadData];

  id v5 = [v1 tableView];
  if (!v5)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v6 = v5;
  [v5 invalidateIntrinsicContentSize];

  if (a1)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      if ((*(unsigned char *)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement) & 1) == 0)
      {
        uint64_t v8 = *(void **)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView);
        id v9 = v8;
        sub_1001BBDCC(v8);
        sub_1001BC12C();
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_1004BF958()
{
  unint64_t v1 = IndexPath.row.getter();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions];
  if ((v2 & 0xC000000000000001) == 0)
  {
    if ((v1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v1 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v10 = *(id *)(v2 + 8 * v1 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  swift_bridgeObjectRelease();
LABEL_5:
  id v3 = [v0 tableView];
  if (!v3)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v4 = v3;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v4 deselectRowAtIndexPath:isa animated:1];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = v10;
  if (Strong)
  {
    uint64_t v8 = *(void **)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion);
    *(void *)(Strong + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion) = v10;
    id v9 = v10;

    sub_10051D330();
    swift_unknownObjectRelease();

    uint64_t v7 = v10;
  }
}

void sub_1004BFC44(void *a1)
{
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [a1 dequeueReusableCellWithIdentifier:v7];

  if (!v8) {
    goto LABEL_14;
  }
  type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell();
  uint64_t v9 = swift_dynamicCastClassUnconditional();
  unint64_t v10 = IndexPath.row.getter();
  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions);
  uint64_t v55 = v3;
  uint64_t v54 = v4;
  unint64_t v53 = (void *)v9;
  id v52 = v8;
  if ((v11 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v12 = *(id *)(v11 + 8 * v10 + 32);
LABEL_6:
  uint64_t v13 = (char *)v12 + OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange;
  int v14 = *((unsigned __int8 *)v12 + OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange + 16);
  uint64_t v15 = self;
  uint64_t v16 = &selRef_labelColor;
  if (!v14) {
    uint64_t v16 = &selRef_secondaryLabelColor;
  }
  id v17 = [v15 *v16];
  (*(void (**)(void))((swift_isaMask & *v12) + 0xB0))();
  uint64_t v49 = sub_1000CBE70((uint64_t *)&unk_100706750);
  uint64_t inited = swift_initStackObject();
  long long v48 = xmmword_1005A0030;
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  uint64_t v50 = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  *(void *)(inited + 64) = v50;
  *(void *)(inited + 40) = v17;
  uint64_t v47 = NSForegroundColorAttributeName;
  id v51 = v17;
  sub_10009CC48(inited);
  id v19 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10009CBF0();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [v19 initWithString:v20 attributes:isa];

  double v23 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
  if ((v13[16] & 1) == 0)
  {
    uint64_t v46 = *((void *)v13 + 1);
    uint64_t v45 = *(void *)v13;
    uint64_t v24 = swift_initStackObject();
    *(_OWORD *)(v24 + 16) = v48;
    uint64_t v25 = v47;
    *(void *)(v24 + 32) = v47;
    uint64_t v26 = self;
    uint64_t v27 = v25;
    id v28 = [v26 labelColor];
    *(void *)(v24 + 64) = v50;
    *(void *)(v24 + 40) = v28;
    sub_10009CC48(v24);
    Class v29 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    double v23 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
    [v22 setAttributes:v29 range:v45];
  }
  uint64_t v30 = static UIListContentConfiguration.cell()();
  (*(void (**)(uint64_t))((swift_isaMask & *v12) + 0x170))(v30);
  UIListContentConfiguration.image.setter();
  uint64_t v31 = self;
  id v32 = [v31 v23[416]];
  uint64_t v33 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.tintColor.setter();
  v33(v56, 0);
  uint64_t v34 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.maximumSize.setter();
  v34(v56, 0);
  static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  static UIListContentConfiguration.ImageProperties.standardDimension.getter();
  uint64_t v35 = (void (*)(uint64_t *, void))UIListContentConfiguration.imageProperties.modify();
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
  v35(v56, 0);
  id v36 = v22;
  UIListContentConfiguration.attributedText.setter();
  uint64_t v37 = v55;
  v56[3] = v55;
  v56[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v38 = sub_100052C70(v56);
  uint64_t v39 = v54;
  (*(void (**)(uint64_t *, char *, uint64_t))(v54 + 16))(v38, v6, v37);
  id v40 = v52;
  double v41 = v53;
  UITableViewCell.contentConfiguration.setter();

  id v42 = v40;
  id v43 = [v31 clearColor];
  [v41 setBackgroundColor:v43];

  (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v37);
}

id sub_1004C041C(uint64_t a1)
{
  return sub_1004C0434(a1, type metadata accessor for DOCSuggestionsTableViewController);
}

id sub_1004C0434(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCSuggestionsTableViewController()
{
  return self;
}

uint64_t type metadata accessor for DOCSuggestionsTableViewController.SuggestionsCell()
{
  return self;
}

id sub_1004C0510(void *a1)
{
  return [a1 invalidateIntrinsicContentSize];
}

void sub_1004C0520(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
    sub_1004BF84C(1);
    return;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_14;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        objc_super v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        objc_super v4 = (char *)*(id *)(v1 + 8 * i + 32);
      }
      uint64_t v5 = v4;
      uint64_t v6 = *(uint64_t (**)(uint64_t))&v4[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
      if (v6)
      {
        uint64_t v7 = swift_retain();
        uint64_t v8 = v6(v7);
        uint64_t v9 = (void **)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
        swift_beginAccess();
        unint64_t v10 = *v9;
        void *v9 = (void *)v8;

        sub_1000A7258((uint64_t)v6);
      }
      uint64_t v11 = *(uint64_t (**)(uint64_t))&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
      if (v11)
      {
        uint64_t v12 = swift_retain();
        uint64_t v13 = v11(v12);
        int v14 = (void **)&v5[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
        swift_beginAccess();
        uint64_t v15 = *v14;
        *int v14 = (void *)v13;

        sub_1000A7258((uint64_t)v11);
      }
    }
    goto LABEL_14;
  }
  __break(1u);
}

uint64_t sub_1004C06FC()
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A1560;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v2 = self;
  id v3 = [v2 keyCommandWithInput:v1 modifierFlags:0 action:"keyCommandMoveSelectionUp"];

  *(void *)(v0 + 32) = v3;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 keyCommandWithInput:v4 modifierFlags:0 action:"keyCommandMoveSelectionDown"];

  *(void *)(v0 + 40) = v5;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v2 keyCommandWithInput:v6 modifierFlags:0 action:"keyCommandConfirmSelection"];

  *(void *)(v0 + 48) = v7;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v2 keyCommandWithInput:v8 modifierFlags:0 action:"keyCommandCancelSelection"];

  *(void *)(v0 + 56) = v9;
  specialized Array._endMutation()();
  return v0;
}

uint64_t sub_1004C08C8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x69726F7661666E75;
    }
    else {
      uint64_t v3 = 0x656C67676F74;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000006574;
    }
    else {
      unint64_t v4 = 0xE600000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x69726F7661666E75;
      }
      else {
        uint64_t v6 = 0x656C67676F74;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000006574;
      }
      else {
        unint64_t v7 = 0xE600000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x657469726F766166;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x657469726F766166)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1004C09E4(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000014;
  unint64_t v4 = 0x80000001005D22F0;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x80000001005D2310;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 2:
      unint64_t v3 = 0x6E6F697461636F6CLL;
      unint64_t v4 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v3 = 0x6F4C726F68636E61;
      unint64_t v4 = 0xEE006E6F69746163;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000014;
  unint64_t v6 = 0x80000001005D22F0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x80000001005D2310;
      if (v3 == 0xD000000000000011) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v5 = 0x6E6F697461636F6CLL;
      unint64_t v6 = 0xE900000000000073;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEE006E6F69746163;
      if (v3 == 0x6F4C726F68636E61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1004C0B9C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1702260557;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1702260557;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 2037411651;
      break;
    case 2:
      uint64_t v5 = 0x746163696C707544;
      goto LABEL_9;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6873617254;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x68736172746E55;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x6574656C6544;
      break;
    case 6:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x65766968637241;
      break;
    case 7:
      uint64_t v5 = 0x7669686372616E55;
LABEL_9:
      unint64_t v3 = 0xE900000000000065;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v2 = 2037411651;
      break;
    case 2:
      uint64_t v2 = 0x746163696C707544;
      goto LABEL_18;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6873617254;
      break;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x68736172746E55;
      break;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x6574656C6544;
      break;
    case 6:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x65766968637241;
      break;
    case 7:
      uint64_t v2 = 0x7669686372616E55;
LABEL_18:
      unint64_t v6 = 0xE900000000000065;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1004C0DC4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 7368564;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 7368564;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x796C746E65636572;
      unint64_t v3 = 0xEC00000064657355;
      break;
    case 2:
      uint64_t v5 = 0x6E6F697461636F6CLL;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x657469726F766166;
LABEL_5:
      unint64_t v3 = 0xE900000000000073;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x73726576726573;
      break;
    case 5:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1936154996;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEC00000064657355;
      if (v5 == 0x796C746E65636572) {
        goto LABEL_17;
      }
      goto LABEL_20;
    case 2:
      uint64_t v7 = 0x6E6F697461636F6CLL;
      goto LABEL_13;
    case 3:
      uint64_t v7 = 0x657469726F766166;
LABEL_13:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != v7) {
        goto LABEL_20;
      }
      goto LABEL_17;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x73726576726573;
      goto LABEL_16;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1936154996) {
        goto LABEL_20;
      }
      goto LABEL_17;
    default:
LABEL_16:
      if (v5 != v2) {
        goto LABEL_20;
      }
LABEL_17:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_20:
      }
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_1004C0FB8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x64726177726F66;
  }
  else {
    uint64_t v3 = 1801675106;
  }
  if (v2) {
    unint64_t v4 = 0xE400000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x64726177726F66;
  }
  else {
    uint64_t v5 = 1801675106;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE400000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1004C1058(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6576697463616E69;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6576697463616E69;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x676E697461657263;
      break;
    case 2:
      uint64_t v5 = 0x6E6974726F706D69;
      unint64_t v3 = 0xE900000000000067;
      break;
    case 3:
      uint64_t v5 = 0x69746E6573657270;
      unint64_t v3 = 0xEA0000000000676ELL;
      break;
    case 4:
      uint64_t v5 = 0x65746E6573657270;
      unint64_t v3 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x676E697461657263) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000067;
      if (v5 != 0x6E6974726F706D69) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x69746E6573657270;
      unint64_t v6 = 0xEA0000000000676ELL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE900000000000064;
      if (v5 != 0x65746E6573657270) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1004C123C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x676154656E6F6ELL;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x676154656E6F6ELL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 2036429415;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6E65657267;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x656C70727570;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702194274;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x776F6C6C6579;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 6579570;
      break;
    case 7:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x65676E61726FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 2036429415) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x6E65657267) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x656C70727570) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702194274) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x776F6C6C6579) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 6579570;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x65676E61726FLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1004C1478(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000015;
  unint64_t v4 = 0x80000001005D2560;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE800000000000000;
      unint64_t v3 = 0x64616F6C6E776F64;
      break;
    case 2:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v3 = 0x7974706D65;
      break;
    case 3:
      unint64_t v4 = 0xE500000000000000;
      unint64_t v3 = 0x726F727265;
      break;
    case 4:
      unint64_t v3 = 0x626967696C656E69;
      unint64_t v4 = 0xEA0000000000656CLL;
      break;
    case 5:
      unint64_t v3 = 0x616F6C7055746F6ELL;
      unint64_t v4 = 0xEB00000000646564;
      break;
    case 6:
      unint64_t v4 = 0x80000001005D25B0;
      unint64_t v3 = 0xD000000000000014;
      break;
    case 7:
      unint64_t v3 = 0x50676E69776F6873;
      unint64_t v4 = 0xEF73736572676F72;
      break;
    case 8:
      unint64_t v3 = 0x6F546E7275746572;
      unint64_t v4 = 0xEE007265646E6553;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000015;
  unint64_t v6 = 0x80000001005D2560;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v3 == 0x64616F6C6E776F64) {
        goto LABEL_25;
      }
      goto LABEL_28;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v3 != 0x7974706D65) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v3 != 0x726F727265) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      unint64_t v6 = 0xEA0000000000656CLL;
      if (v3 != 0x626967696C656E69) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEB00000000646564;
      if (v3 != 0x616F6C7055746F6ELL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0x80000001005D25B0;
      if (v3 != 0xD000000000000014) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      unint64_t v5 = 0x50676E69776F6873;
      unint64_t v6 = 0xEF73736572676F72;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEE007265646E6553;
      if (v3 != 0x6F546E7275746572) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v3 != v5) {
        goto LABEL_28;
      }
LABEL_25:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_28:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1004C1784(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x637241656C707061;
  }
  else {
    uint64_t v3 = 7367034;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xEC00000065766968;
  }
  if (a2) {
    uint64_t v5 = 0x637241656C707061;
  }
  else {
    uint64_t v5 = 7367034;
  }
  if (a2) {
    unint64_t v6 = 0xEC00000065766968;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1004C182C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000646572;
  uint64_t v3 = 0x6165707061736964;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6165707061736964;
  unint64_t v6 = 0xEB00000000646572;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6E69726165707061;
      unint64_t v6 = 0xE900000000000067;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6465726165707061;
      break;
    case 3:
      unint64_t v6 = 0xEC000000676E6972;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE900000000000067;
      if (v5 == 0x6E69726165707061) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6465726165707061;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC000000676E6972;
      if (v5 == 0x6165707061736964) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1004C19C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEF646574726F7070;
  unint64_t v3 = 0x7553746F4E707061;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000012;
    }
    else {
      unint64_t v5 = 0xD00000000000001ALL;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001005D23C0;
    }
    else {
      unint64_t v6 = 0x80000001005D23E0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x7553746F4E707061;
  unint64_t v6 = 0xEF646574726F7070;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 0xD00000000000001ALL;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001005D23C0;
    }
    else {
      unint64_t v2 = 0x80000001005D23E0;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

id DOCDocumentManager.__allocating_init(configuration:sourceObserver:hierarchyController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v7 = (char *)objc_allocWithZone(v3);
  *(void *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = a1;
  *(void *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = a2;
  *(void *)&v7[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = a3;
  v9.receiver = v7;
  v9.super_class = v3;
  return [super init];
}

uint64_t sub_1004C1B98(unsigned __int8 *a1, char *a2)
{
  return sub_1004C1058(*a1, *a2);
}

Swift::Int sub_1004C1BA4()
{
  return Hasher._finalize()();
}

uint64_t sub_1004C1CA8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004C1D94()
{
  return Hasher._finalize()();
}

unint64_t sub_1004C1E94@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004CCCAC(*a1);
  *a2 = result;
  return result;
}

void sub_1004C1EC4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6576697463616E69;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 0x676E697461657263;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E6974726F706D69;
      a1[1] = 0xE900000000000067;
      break;
    case 3:
      *a1 = 0x69746E6573657270;
      a1[1] = 0xEA0000000000676ELL;
      break;
    case 4:
      *a1 = 0x65746E6573657270;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE800000000000000;
      break;
  }
}

uint64_t sub_1004C1F8C()
{
  uint64_t result = 0x6576697463616E69;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697461657263;
      break;
    case 2:
      uint64_t result = 0x6E6974726F706D69;
      break;
    case 3:
      uint64_t result = 0x69746E6573657270;
      break;
    case 4:
      uint64_t result = 0x65746E6573657270;
      break;
    default:
      return result;
  }
  return result;
}

id sub_1004C2044()
{
  uint64_t v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if (v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates] == 1)
  {
    uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController];
    if (v2)
    {
      id v3 = [v2 viewIfLoaded];
      if (v3)
      {
        int v4 = v3;
        v0[v1] = 0;
        [v3 setUserInteractionEnabled:1];
        unint64_t v5 = *(void **)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView];
        if (v5)
        {
          *(void *)&v0[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView] = 0;
          [v5 removeFromSuperview];
        }
      }
    }
  }
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession();
  return [super dealloc];
}

void sub_1004C21D4()
{
  uint64_t v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates) & 1) == 0
    && *(unsigned char *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isInUIPDocumentLanding) == 1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController);
    if (v2)
    {
      id v3 = [v2 viewIfLoaded];
      if (v3)
      {
        *(unsigned char *)(v0 + v1) = 1;
        id v7 = v3;
        [v3 setUserInteractionEnabled:0];
        id v4 = [v7 snapshotViewAfterScreenUpdates:0];
        if (v4)
        {
          unint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView);
          *(void *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView) = v4;
          id v6 = v4;

          UIView.doc_addAutoresizingSubview(_:insetBy:)();
        }
      }
    }
  }
}

void sub_1004C22EC()
{
  uint64_t v1 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates) == 1)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController);
    if (v2)
    {
      id v3 = [v2 viewIfLoaded];
      if (v3)
      {
        *(unsigned char *)(v0 + v1) = 0;
        id v5 = v3;
        [v3 setUserInteractionEnabled:1];
        id v4 = *(void **)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView);
        if (v4)
        {
          *(void *)(v0 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView) = 0;
          [v4 removeFromSuperview];
        }
      }
    }
  }
}

void sub_1004C23E0(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v59 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  id v6 = *(void **)(v5 - 8);
  __chkstk_darwin(v5);
  id v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1000CBE70((uint64_t *)&unk_10070D810);
  __chkstk_darwin(v56);
  uint64_t v57 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_10070B6D0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v53 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  int v14 = (char *)&v50 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v50 - v15;
  uint64_t v54 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase;
  uint64_t v55 = a1;
  uint64_t v58 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase);
  id v17 = (void (*)(char *, uint64_t, uint64_t))v6[2];
  v17((char *)&v50 - v15, a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier, v5);
  uint64_t v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v6[7];
  uint64_t v19 = 1;
  v18(v16, 0, 1, v5);
  id v51 = v3;
  NSString v20 = (char *)[v3 activeDocumentCreationSession];
  if (v20)
  {
    uint64_t v21 = v20;
    v17(v14, (uint64_t)&v20[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier], v5);

    uint64_t v19 = 0;
  }
  id v22 = v6;
  uint64_t v23 = v56;
  uint64_t v24 = (uint64_t)v57;
  v18(v14, v19, 1, v5);
  uint64_t v25 = v24 + *(int *)(v23 + 48);
  uint64_t v26 = &qword_10070B6D0;
  sub_1000CBC00((uint64_t)v16, v24, &qword_10070B6D0);
  sub_1000CBC00((uint64_t)v14, v25, &qword_10070B6D0);
  uint64_t v27 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v6[6];
  if (v27(v24, 1, v5) == 1)
  {
    sub_1000CBBA4((uint64_t)v14, &qword_10070B6D0);
    sub_1000CBBA4((uint64_t)v16, &qword_10070B6D0);
    if (v27(v25, 1, v5) == 1)
    {
      char v28 = -1;
    }
    else
    {
      uint64_t v26 = (uint64_t *)&unk_10070D810;
      char v28 = 0;
    }
  }
  else
  {
    uint64_t v29 = v53;
    sub_1000CBC00(v24, v53, &qword_10070B6D0);
    if (v27(v25, 1, v5) == 1)
    {
      sub_1000CBBA4((uint64_t)v14, &qword_10070B6D0);
      sub_1000CBBA4((uint64_t)v16, &qword_10070B6D0);
      ((void (*)(uint64_t, uint64_t))v22[1])(v29, v5);
      char v28 = 0;
      uint64_t v26 = (uint64_t *)&unk_10070D810;
    }
    else
    {
      uint64_t v30 = v52;
      ((void (*)(char *, uint64_t, uint64_t))v22[4])(v52, v25, v5);
      sub_1000BAE04(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v31 = (void (*)(char *, uint64_t))v22[1];
      v31(v30, v5);
      uint64_t v26 = &qword_10070B6D0;
      sub_1000CBBA4((uint64_t)v14, &qword_10070B6D0);
      sub_1000CBBA4((uint64_t)v16, &qword_10070B6D0);
      v31((char *)v29, v5);
    }
  }
  uint64_t v33 = v58;
  unsigned __int8 v32 = v59;
  sub_1000CBBA4(v24, v26);
  if ((sub_1004C1058(v32, v33) & 1) == 0)
  {
    uint64_t v34 = 0x6576697463616E69;
    static os_log_type_t.info.getter();
    uint64_t v60 = 0;
    unint64_t v61 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    uint64_t v60 = 0xD000000000000016;
    unint64_t v61 = 0x80000001005FACD0;
    unint64_t v35 = 0xE800000000000000;
    uint64_t v36 = 0x6576697463616E69;
    switch(v33)
    {
      case 1:
        uint64_t v36 = 0x676E697461657263;
        break;
      case 2:
        uint64_t v36 = 0x6E6974726F706D69;
        unint64_t v35 = 0xE900000000000067;
        break;
      case 3:
        uint64_t v36 = 0x69746E6573657270;
        unint64_t v35 = 0xEA0000000000676ELL;
        break;
      case 4:
        uint64_t v36 = 0x65746E6573657270;
        unint64_t v35 = 0xE900000000000064;
        break;
      default:
        break;
    }
    unint64_t v37 = v35;
    String.append(_:)(*(Swift::String *)&v36);
    swift_bridgeObjectRelease();
    v38._unint64_t countAndFlagsBits = 544175136;
    v38._object = (void *)0xE400000000000000;
    String.append(_:)(v38);
    uint64_t v39 = (void *)0xE800000000000000;
    switch(v32)
    {
      case 1u:
        uint64_t v34 = 0x676E697461657263;
        break;
      case 2u:
        uint64_t v34 = 0x6E6974726F706D69;
        uint64_t v39 = (void *)0xE900000000000067;
        break;
      case 3u:
        uint64_t v34 = 0x69746E6573657270;
        uint64_t v39 = (void *)0xEA0000000000676ELL;
        break;
      case 4u:
        uint64_t v34 = 0x65746E6573657270;
        uint64_t v39 = (void *)0xE900000000000064;
        break;
      default:
        break;
    }
    v40._unint64_t countAndFlagsBits = v34;
    v40._object = v39;
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    uint64_t v41 = v55;
    sub_1004CC92C(v55, v60, v61);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v41 + v54) = v32;
    if (v28)
    {
      switch(v32)
      {
        case 0u:
        case 4u:
          goto LABEL_23;
        case 1u:
          return;
        case 2u:
          sub_1004C21D4();
          return;
        case 3u:
          uint64_t v49 = *(void **)(v55
                         + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController);
          if (!v49 || !objc_msgSend(v49, "doc_hasDisappeared")) {
            return;
          }
LABEL_23:
          id v42 = v51;
          if (*(unsigned char *)(v55
                        + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_switchToRecentsAfterPresentation) == 1)
          {
            uint64_t Strong = swift_unknownObjectWeakLoadStrong();
            if (Strong)
            {
              uint64_t v44 = (void *)Strong;
              uint64_t v45 = self;
              id v46 = [v44 configuration];
              id v47 = [v46 sceneIdentifier];

              id v48 = [v45 globalTabbedBrowserControllerForIdentifier:v47];
              if (v48)
              {
                [v48 switchToTab:0];
              }
            }
          }
          sub_1004C22EC();
          [v42 setActiveDocumentCreationSession:0];
          break;
        default:
          JUMPOUT(0);
      }
    }
  }
}

id DOCDocumentManager.init(configuration:sourceObserver:hierarchyController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_activeDocumentCreationSession] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration] = a1;
  *(void *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver] = a2;
  *(void *)&v3[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController] = a3;
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCDocumentManager();
  return [super init];
}

Swift::Void __swiftcall DOCDocumentManager.configureUIPDocumentLandingStyleIfNecessary()()
{
  [*(id *)(v0 + OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration) setIsInUIPDocumentLanding:1];
}

void sub_1004C2D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v40[1] = a3;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  objc_super v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v40 - v10;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  int v14 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v42 = Strong;
    uint64_t v20 = swift_unknownObjectWeakLoadStrong();
    if (v20)
    {
      uint64_t v21 = (void *)v20;
      sub_1000CBC00(a2, (uint64_t)v14, &qword_1007076B0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
      {
        sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
        static Logger.UI.getter();
        id v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "Import failed", v24, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v6);
        if ([v21 respondsToSelector:"documentBrowser:failedToImportDocumentAtURL:error:"])
        {
          swift_unknownObjectRetain();
          URL._bridgeToObjectiveC()(v25);
          uint64_t v27 = v26;
          if (a4) {
            char v28 = (void *)_convertErrorToNSError(_:)();
          }
          else {
            char v28 = 0;
          }
          [v21 documentBrowser:v42 failedToImportDocumentAtURL:v27 error:v28];

          swift_unknownObjectRelease_n();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
        static Logger.UI.getter();
        uint64_t v30 = Logger.logObject.getter();
        os_log_type_t v31 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v30, v31))
        {
          unsigned __int8 v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned __int8 v32 = 0;
          _os_log_impl((void *)&_mh_execute_header, v30, v31, "Import successful", v32, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
        if ([v21 respondsToSelector:"documentBrowser:didImportDocumentAtURL:toDestinationURL:"])
        {
          swift_unknownObjectRetain();
          URL._bridgeToObjectiveC()(v33);
          unint64_t v35 = v34;
          URL._bridgeToObjectiveC()(v36);
          Swift::String v38 = v37;
          [v21 documentBrowser:v42 didImportDocumentAtURL:v35 toDestinationURL:v37];

          swift_unknownObjectRelease_n();
          id v39 = v38;
        }
        else
        {
          swift_unknownObjectRelease();
          id v39 = v42;
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
    }
    else
    {
      id v29 = v42;
    }
  }
}

uint64_t sub_1004C3208(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  id v47 = a6;
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  uint64_t v40 = a5;
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  int v41 = a2;
  uint64_t v49 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v52 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  id v48 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchQoS.QoSClass.default(_:), v17);
  uint64_t v39 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  unint64_t v21 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v22 = (v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v40;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v24 + v21, v16, v13);
  uint64_t v25 = (void *)(v24 + v22);
  uint64_t v26 = v43;
  *uint64_t v25 = v42;
  v25[1] = v26;
  unint64_t v27 = v24 + ((v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = v45;
  char v28 = v46;
  *(void *)unint64_t v27 = v46;
  *(unsigned char *)(v27 + 8) = v41;
  uint64_t v30 = (void *)(v24 + v23);
  *uint64_t v30 = v44;
  v30[1] = v29;
  os_log_type_t v31 = v47;
  *(void *)(v24 + ((v23 + 23) & 0xFFFFFFFFFFFFFFF8)) = v47;
  aBlock[4] = sub_1004CE214;
  void aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B15D0;
  unsigned __int8 v32 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v33 = v31;
  swift_retain();
  id v34 = v28;
  static DispatchQoS.unspecified.getter();
  uint64_t v53 = _swiftEmptyArrayStorage;
  sub_1000BAE04((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v36 = v48;
  uint64_t v35 = v49;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v37 = (void *)v39;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v35);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v51);
  return swift_release();
}

uint64_t sub_1004C36CC(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t, uint64_t), uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v164 = a7;
  int v156 = a6;
  uint64_t v169 = a3;
  uint64_t v170 = (char *)a5;
  uint64_t v172 = a4;
  uint64_t v174 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v174 - 8);
  uint64_t v13 = __chkstk_darwin(v174);
  id v163 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v171 = (uint64_t)&v146 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v154 = (char *)&v146 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v159 = (char *)&v146 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v155 = (char *)&v146 - v22;
  uint64_t v157 = v23;
  __chkstk_darwin(v21);
  uint64_t v166 = (id (*)(uint64_t, uint64_t))((char *)&v146 - v24);
  uint64_t v25 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v161 = *(void *)(v25 - 8);
  uint64_t v26 = *(void *)(v161 + 64);
  uint64_t v27 = __chkstk_darwin(v25 - 8);
  uint64_t v162 = (uint64_t)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v168 = (char *)&v146 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unsigned __int8 v32 = (char *)&v146 - v31;
  uint64_t v33 = __chkstk_darwin(v30);
  uint64_t v35 = (char *)&v146 - v34;
  uint64_t v36 = __chkstk_darwin(v33);
  Swift::String v38 = (char *)&v146 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v146 - v39;
  id v41 = [objc_allocWithZone((Class)NSFileManager) init];
  id v173 = v41;
  uint64_t v167 = a2;
  uint64_t v165 = v38;
  if (a1 != 1)
  {
    uint64_t v160 = a8;
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v52 = v174;
    v51(v40, 1, 1, v174);
    v51(v38, 1, 1, v52);
    uint64_t v166 = 0;
    uint64_t v154 = 0;
    uint64_t v53 = (uint64_t)v40;
    uint64_t v54 = v12;
LABEL_5:
    uint64_t v155 = a9;
    uint64_t v55 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v158 = (char *)v53;
    uint64_t v56 = (uint64_t)v168;
    sub_1000CBC00(v53, (uint64_t)v168, &qword_1007076B0);
    unint64_t v57 = (*(unsigned __int8 *)(v161 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
    unint64_t v58 = (v26 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v55;
    sub_10032D1DC(v56, v59 + v57);
    uint64_t v61 = v172;
    id v60 = v173;
    *(void *)(v59 + v58) = v173;
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v59 + ((v58 + 15) & 0xFFFFFFFFFFFFFFF8));
    *uint64_t v62 = v169;
    v62[1] = (void (*)(char *, uint64_t, uint64_t))v61;
    uint64_t v63 = v162;
    sub_1000CBC00((uint64_t)v38, v162, &qword_1007076B0);
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    uint64_t v65 = v163;
    uint64_t v66 = v174;
    v64(v163, v167, v174);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v63, 1, v66) == 1)
    {
      uint64_t v67 = v54;
      uint64_t v68 = v65;
      uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
      v69(v171, v68, v174);
      id v70 = v60;
      swift_retain();
      sub_1000CBBA4(v63, &qword_1007076B0);
    }
    else
    {
      uint64_t v169 = v64;
      uint64_t v71 = v63;
      uint64_t v72 = *(void (**)(char *, uint64_t))(v54 + 8);
      id v73 = v60;
      swift_retain();
      uint64_t v74 = v174;
      v72(v65, v174);
      uint64_t v67 = v54;
      uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v54 + 32);
      uint64_t v75 = v71;
      uint64_t v64 = v169;
      v69(v171, (char *)v75, v74);
    }
    uint64_t v76 = v160;
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = sub_1004CE430;
    *(void *)(v77 + 24) = v59;
    swift_retain_n();
    id v78 = [v155 fileProviderItem];
    uint64_t v79 = (uint64_t)v158;
    if (v78)
    {
      uint64_t v80 = v78;
      swift_retain();
      id v81 = v80;
      uint64_t v82 = v171;
      sub_1004CE6E0(v171, 1, v164, v76, v80, (uint64_t)v170, (void (*)(void, id))sub_1004CE430, v59);

      swift_release();
      swift_release_n();
    }
    else
    {
      uint64_t v172 = type metadata accessor for DOCHierarchyController(0);
      uint64_t v160 = v76;
      Class v83 = v170;
      uint64_t v84 = v171;
      Class v85 = *(void (**)(char *, uint64_t, uint64_t))&v170[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
      uint64_t v168 = *(char **)&v170[OBJC_IVAR____TtC5Files18DOCDocumentManager_sourceObserver];
      uint64_t v169 = v85;
      uint64_t v86 = v174;
      v64(v159, v171, v174);
      unint64_t v87 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      unint64_t v88 = (v87 + v157 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v89 = (v87 + v157 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v90 = swift_allocObject();
      Class v91 = (void (*)(unint64_t, char *, uint64_t))v69;
      uint64_t v92 = v90;
      *(void *)(v90 + 16) = sub_10023E360;
      *(void *)(v90 + 24) = v77;
      unint64_t v93 = v90 + v87;
      uint64_t v82 = v84;
      v91(v93, v159, v86);
      unint64_t v94 = v92 + v88;
      *(void *)unint64_t v94 = v83;
      *(unsigned char *)(v94 + 8) = v156 & 1;
      Swift::Int v95 = (void *)(v92 + v89);
      uint64_t v96 = v160;
      *Swift::Int v95 = v164;
      v95[1] = v96;
      swift_bridgeObjectRetain();
      swift_retain();
      id v97 = v83;
      uint64_t v79 = (uint64_t)v158;
      sub_100230898(v169, v168, 0, (uint64_t)sub_1004CE628, v92);

      swift_release_n();
      swift_release();
      swift_release();
    }
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v82, v174);
    sub_1000CBBA4((uint64_t)v165, &qword_1007076B0);
    sub_1000CBBA4(v79, &qword_1007076B0);
    return sub_1000A7258((uint64_t)v166);
  }
  uint64_t v42 = v41;
  BOOL v43 = URL.startAccessingSecurityScopedResource()();
  URL._bridgeToObjectiveC()(v44);
  id v46 = v45;
  *(void *)&long long aBlock = 0;
  id v47 = [v42 URLForDirectory:99 inDomain:1 appropriateForURL:v45 create:1 error:&aBlock];

  id v48 = (void *)aBlock;
  if (v47)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v49 = v48;

    NSString v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v152(v35, 0, 1, v174);
    sub_10032D1DC((uint64_t)v35, (uint64_t)v40);
    uint64_t v50 = 0;
  }
  else
  {
    id v99 = (id)aBlock;
    uint64_t v50 = _convertNSErrorToError(_:)();

    swift_willThrow();
    NSString v152 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v152(v40, 1, 1, v174);
  }
  unint64_t v100 = v166;
  sub_1000CBC00((uint64_t)v40, (uint64_t)v32, &qword_1007076B0);
  int v101 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v32, 1, v174);
  BOOL v153 = v43;
  if (v101 == 1)
  {
    sub_1000CBBA4((uint64_t)v32, &qword_1007076B0);
LABEL_17:
    uint64_t v103 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v104 = swift_allocObject();
    uint64_t v105 = v104;
    *(_OWORD *)(v104 + 16) = xmmword_1005A0030;
    if (v50)
    {
      swift_errorRetain();
      uint64_t v106 = _convertErrorToNSError(_:)();
      swift_errorRelease();
      Swift::String v177 = (void *)sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      char v178 = (uint64_t (*)())sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)&long long aBlock = v106;
      sub_1001146DC(&aBlock, v105 + 32);
    }
    else
    {
      *(void *)(v104 + 56) = &type metadata for String;
      *(void *)(v104 + 64) = sub_100073F48();
      *(void *)(v105 + 32) = 0x726F727265206F6ELL;
      *(void *)(v105 + 40) = 0xE800000000000000;
    }
    id v107 = v173;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v108 = (uint64_t)v168;
    v152(v168, 1, 1, v174);
    ((void (*)(uint64_t, uint64_t))v169)(v108, v50);
    swift_errorRelease();
    sub_1000CBBA4(v108, &qword_1007076B0);
    if (v153) {
      URL.stopAccessingSecurityScopedResource()();
    }

    return sub_1000CBBA4((uint64_t)v40, &qword_1007076B0);
  }
  uint64_t v102 = *(void (**)(id (*)(uint64_t, uint64_t), char *, uint64_t))(v12 + 32);
  v102(v100, v32, v174);
  if (v50)
  {
    (*(void (**)(id (*)(uint64_t, uint64_t), uint64_t))(v12 + 8))(v100, v174);
    goto LABEL_17;
  }
  uint64_t v160 = a8;
  v158 = v40;
  uint64_t v109 = v167;
  URL.lastPathComponent.getter();
  uint64_t v110 = (void (*)(uint64_t, char *, uint64_t))v102;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  id v151 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  URL._bridgeToObjectiveC()((NSURL *)&v180._urlString);
  uint64_t v150 = v111;
  URL._bridgeToObjectiveC()(&v180);
  uint64_t v149 = v112;
  uint64_t v148 = v12;
  uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v114 = v100;
  uint64_t v115 = v159;
  uint64_t v116 = v174;
  v113(v159, v109, v174);
  uint64_t v117 = v154;
  v113(v154, (uint64_t)v114, v116);
  uint64_t v118 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v119 = (v118 + 24) & ~v118;
  uint64_t v120 = (v157 + v118 + v119) & ~v118;
  unint64_t v121 = (v157 + v120 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v122 = swift_allocObject();
  *(void *)(v122 + 16) = v173;
  v110(v122 + v119, v115, v116);
  uint64_t v147 = (void (*)(char *, char *, uint64_t))v110;
  v110(v122 + v120, v117, v116);
  uint64_t v123 = (void (**)(char *, uint64_t, uint64_t))(v122 + v121);
  uint64_t v124 = v169;
  uint64_t v125 = v172;
  unint64_t *v123 = v169;
  v123[1] = (void (*)(char *, uint64_t, uint64_t))v125;
  uint64_t v126 = swift_allocObject();
  *(void *)(v126 + 16) = sub_1004CEF6C;
  *(void *)(v126 + 24) = v122;
  uint64_t v154 = (char *)v122;
  char v178 = sub_1004CF040;
  NSString v179 = (void *)v126;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  v176 = sub_1004C4A9C;
  Swift::String v177 = &unk_1006B16C0;
  uint64_t v127 = _Block_copy(&aBlock);
  id v128 = v173;
  swift_retain();
  swift_retain();
  swift_release();
  *(void *)&long long aBlock = 0;
  id v129 = v151;
  uint64_t v130 = v150;
  uint64_t v131 = v149;
  [v151 coordinateReadingItemAtURL:v150 options:1 writingItemAtURL:v149 options:8 error:&aBlock byAccessor:v127];
  _Block_release(v127);

  id v132 = (id)aBlock;
  LOBYTE(v127) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v127) {
    __break(1u);
  }
  if (!v132)
  {
    uint64_t v54 = v148;
    uint64_t v145 = v174;
    (*(void (**)(id (*)(uint64_t, uint64_t), uint64_t))(v148 + 8))(v166, v174);
    Swift::String v38 = v165;
    v147(v165, v155, v145);
    v152(v38, 0, 1, v145);
    if (v153) {
      URL.stopAccessingSecurityScopedResource()();
    }
    uint64_t v166 = sub_1004CEF6C;
    uint64_t v53 = (uint64_t)v158;
    goto LABEL_5;
  }
  id v173 = v128;
  id v133 = v132;
  unint64_t v134 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v135 = swift_allocObject();
  *(_OWORD *)(v135 + 16) = xmmword_10059B760;
  URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
  uint64_t v137 = v136;
  *(void *)(v135 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
  *(void *)(v135 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
  *(void *)(v135 + 32) = v137;
  *(void *)(v135 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v135 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v135 + 72) = v133;
  id v138 = v133;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v139 = (void *)swift_allocObject();
  uint64_t v140 = v172;
  v139[2] = v124;
  v139[3] = v140;
  v139[4] = v138;
  char v178 = sub_1004CFC00;
  NSString v179 = v139;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  v176 = sub_1000666D8;
  Swift::String v177 = &unk_1006B1710;
  unint64_t v141 = _Block_copy(&aBlock);
  swift_retain();
  id v142 = v138;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v141);

  unint64_t v143 = *(void (**)(char *, uint64_t))(v148 + 8);
  uint64_t v144 = v174;
  v143(v155, v174);
  v143((char *)v166, v144);

  if (v153) {
    URL.stopAccessingSecurityScopedResource()();
  }

  sub_1000CBBA4((uint64_t)v158, &qword_1007076B0);
  return swift_release();
}

id sub_1004C4788(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v11 = v10;
  URL._bridgeToObjectiveC()(v12);
  uint64_t v14 = v13;
  aBlock[0] = 0;
  LODWORD(a3) = [a3 copyItemAtURL:v11 toURL:v13 error:aBlock];

  id v15 = aBlock[0];
  if (a3)
  {
    return v15;
  }
  else
  {
    id v17 = aBlock[0];
    uint64_t v18 = _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1005A0230;
    URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
    uint64_t v22 = v21;
    uint64_t v23 = a6;
    uint64_t v24 = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v20 + 56) = v24;
    uint64_t v25 = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v20 + 64) = v25;
    *(void *)(v20 + 32) = v22;
    URL._bridgeToObjectiveC()(v26);
    *(void *)(v20 + 96) = v24;
    *(void *)(v20 + 104) = v25;
    *(void *)(v20 + 72) = v27;
    uint64_t v28 = _convertErrorToNSError(_:)();
    *(void *)(v20 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 144) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v20 + 112) = v28;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v23;
    void v29[3] = a7;
    v29[4] = v18;
    aBlock[4] = sub_1004CF0AC;
    void aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B1760;
    uint64_t v30 = _Block_copy(aBlock);
    swift_retain();
    swift_errorRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v30);
    return (id)swift_errorRelease();
  }
}

uint64_t sub_1004C4A9C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  objc_super v8 = (char *)&v12 - v7;
  uint64_t v9 = *(void (**)(char *, char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v9(v8, v6);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

uint64_t sub_1004C4BD8(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  a1(v7, a3);
  return sub_1000CBBA4((uint64_t)v7, &qword_1007076B0);
}

void sub_1004C4CBC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v46 = a6;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (char *)Strong;
    sub_1000CBC00(a4, (uint64_t)v14, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1000CBBA4((uint64_t)v14, &qword_1007076B0);
      if (a1)
      {
LABEL_4:
        uint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
        id v22 = a1;
        id v23 = [v21 interactionModeForPreparing];
        uint64_t v24 = [v21 neverCreateBookmarkForOpenInPlace] ^ 1;
        uint64_t v25 = (void *)swift_allocObject();
        uint64_t v25[2] = v46;
        v25[3] = a7;
        v25[4] = v22;
        v25[5] = a2;
        uint64_t v51 = sub_1004CF28C;
        uint64_t v52 = v25;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v48 = 1107296256;
        id v49 = sub_10000A884;
        uint64_t v50 = &unk_1006B1878;
        uint64_t v26 = _Block_copy(&aBlock);
        swift_retain();
        swift_errorRetain();
        uint64_t v27 = (char *)v22;
        swift_release();
        [v27 prepareForMode:v23 usingBookmark:v24 completionBlock:v26];
        _Block_release(v26);

        uint64_t v20 = v27;
LABEL_10:

        return;
      }
    }
    else
    {
      uint64_t v45 = a2;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
      URL._bridgeToObjectiveC()(v28);
      uint64_t v30 = v29;
      long long aBlock = 0;
      unsigned int v31 = [a5 removeItemAtURL:v29 error:&aBlock];

      if (v31)
      {
        unsigned __int8 v32 = *(void (**)(char *, uint64_t))(v16 + 8);
        uint64_t v33 = aBlock;
        v32(v18, v15);
      }
      else
      {
        uint64_t v34 = aBlock;
        _convertNSErrorToError(_:)();

        uint64_t v44 = a7;
        swift_willThrow();
        uint64_t v43 = static DOCLog.UI.getter();
        v42[1] = static os_log_type_t.error.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_10059B760;
        URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
        uint64_t v37 = v36;
        *(void *)(v35 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
        *(void *)(v35 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
        *(void *)(v35 + 32) = v37;
        uint64_t v38 = _convertErrorToNSError(_:)();
        *(void *)(v35 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
        *(void *)(v35 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
        *(void *)(v35 + 72) = v38;
        uint64_t v39 = (void *)v43;
        os_log(_:dso:log:type:_:)();
        a7 = v44;
        swift_errorRelease();

        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
      a2 = v45;
      if (a1) {
        goto LABEL_4;
      }
    }
    uint64_t v40 = (void *)swift_allocObject();
    void v40[2] = v46;
    uint64_t v40[3] = a7;
    v40[4] = a2;
    uint64_t v51 = (void (*)(uint64_t))sub_1004CFC00;
    uint64_t v52 = v40;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    id v49 = sub_1000666D8;
    uint64_t v50 = &unk_1006B1828;
    id v41 = _Block_copy(&aBlock);
    swift_retain();
    swift_errorRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v41);
    goto LABEL_10;
  }
}

void sub_1004C5218(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a4;
  void v9[5] = a5;
  v12[4] = sub_1004CF2E4;
  v12[5] = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000666D8;
  v12[3] = &unk_1006B18C8;
  uint64_t v10 = _Block_copy(v12);
  swift_retain();
  id v11 = a4;
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v10);
}

uint64_t sub_1004C530C(void (*a1)(char *, uint64_t), uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a3 fileURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  a1(v9, a4);
  return sub_1000CBBA4((uint64_t)v9, &qword_1007076B0);
}

uint64_t sub_1004C5420()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = (char *)[(id)result effectiveBrowserViewController];

    if (v2)
    {
      uint64_t v3 = (void **)&v2[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      uint64_t v4 = *v3;
      if (v4 && (type metadata accessor for DOCItemCollectionViewController(0), swift_dynamicCastClass()))
      {
        id v5 = v4;

        DOCItemCollectionViewController.getCurrentLocation()();
        if (v6)
        {
          uint64_t v7 = v6;
          id v8 = [v6 sourceIdentifier];
          uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v11 = v10;
          if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
          {

            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v14 & 1) == 0)
            {
              id v15 = [v7 fileProviderItem];
              if (v15)
              {
                uint64_t v16 = v15;
                sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
                char v17 = DOCNode.isEqualTo(node:)();

                if (v17) {
                  return 1;
                }
              }
              else
              {
              }
              return 0;
            }
          }

          return 1;
        }
      }
      else
      {
      }
    }
    return 0;
  }
  return result;
}

void sub_1004C5614(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void, id), uint64_t a7)
{
  uint64_t v67 = a4;
  uint64_t v64 = a3;
  LODWORD(v68) = a2;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  __chkstk_darwin(v15);
  uint64_t v69 = a6;
  if (a5)
  {
    uint64_t v61 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v63 = a7;
    uint64_t v18 = self;
    id v19 = a5;
    id v62 = [v18 defaultManager];
    sub_1000CBE70((uint64_t *)&unk_1007087F0);
    uint64_t v20 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v58 = ~v20;
    uint64_t v59 = v20 | 7;
    uint64_t v21 = swift_allocObject();
    long long v57 = xmmword_1005A0030;
    *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
    uint64_t v65 = *(void (**)(void))(v16 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v21 + ((v20 + 32) & ~v20), a1, v15);
    id v22 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    id v23 = v19;
    uint64_t v24 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v26 = [v22 initWithURLs:isa destinationFolder:v23];

    id v60 = v23;
    [v26 setLastUsageUpdatePolicy:2];
    id v66 = v26;
    [v26 setShouldBounceOnCollision:1];
    uint64_t v27 = v67;
    if (v67)
    {
      sub_1000CBE70(&qword_100708D68);
      uint64_t v28 = (int *)(sub_1000CBE70((uint64_t *)&unk_100708D70) - 8);
      unint64_t v29 = (*(unsigned __int8 *)(*(void *)v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v28 + 80);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = v57;
      unsigned int v31 = (void *)(v30 + v29 + v28[14]);
      v65();
      *unsigned int v31 = v64;
      v31[1] = v27;
      swift_bridgeObjectRetain();
      id v32 = v66;
      sub_100495550(v30);
      sub_1000BAE04((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      Class v33 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v32 setTargetFilenamesByURL:v33];
    }
    URL.startAccessingSecurityScopedResource()();
    uint64_t v34 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v35 = v61;
    ((void (*)(char *, uint64_t, uint64_t))v65)(v61, v24, v15);
    uint64_t v36 = (v20 + 16) & v58;
    unint64_t v37 = (v17 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v40 + v36, v35, v15);
    *(void *)(v40 + v37) = v34;
    id v41 = (void *)(v40 + v38);
    uint64_t v42 = v63;
    *id v41 = v69;
    v41[1] = v42;
    id v43 = v66;
    *(void *)(v40 + v39) = v66;
    unint64_t v44 = v40 + ((v39 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v45 = v60;
    *(void *)unint64_t v44 = v60;
    *(unsigned char *)(v44 + 8) = v68 & 1;
    aBlock[4] = (uint64_t)sub_1004CDE0C;
    void aBlock[5] = v40;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001950CC;
    void aBlock[3] = (uint64_t)&unk_1006B1468;
    uint64_t v46 = _Block_copy(aBlock);
    id v47 = v43;
    id v48 = v45;
    id v49 = v47;
    swift_retain();
    swift_release();
    [v49 setActionCompletionBlock:v46];
    _Block_release(v46);

    id v50 = v62;
    [v62 scheduleAction:v49];
  }
  else
  {
    uint64_t v68 = a1;
    static Logger.UI.getter();
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315394;
      uint64_t v71 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v53 + 12) = 2080;
      uint64_t v71 = 0;
      sub_1000CBE70(&qword_10070B670);
      uint64_t v54 = String.init<A>(describing:)();
      uint64_t v71 = sub_10009B0E4(v54, v55, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s importDocument: Unable to import the destination FPItem: %s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    URL.lastPathComponent.getter();
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v49 = (id)DOCErrorNoLocationAvailableError();

    v69(0, v49);
  }
}

void sub_1004C5D6C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, id), uint64_t a5, void *a6, void *a7, int a8)
{
  LODWORD(v68) = a8;
  uint64_t v71 = a4;
  uint64_t v72 = a5;
  uint64_t v73 = a2;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v69 = *(void *)(v11 - 8);
  id v70 = (id)v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v65 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v22 = (char *)Strong;
    if (a1)
    {
      static Logger.UI.getter();
      swift_errorRetain();
      swift_errorRetain();
      id v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = swift_slowAlloc();
        id v26 = (void *)swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        aBlock[0] = v68;
        *(_DWORD *)uint64_t v25 = 136315394;
        uint64_t v75 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v25 + 12) = 2112;
        swift_errorRetain();
        uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v75 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v26 = v27;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s importDocument: Unable to import the file to the FileProvider. Error: %@", (uint8_t *)v25, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }

      (*(void (**)(char *, id))(v69 + 8))(v13, v70);
      v71(0, a1);
LABEL_17:

      goto LABEL_18;
    }
    id v28 = [a6 transferResults];
    if (v28)
    {
      unint64_t v29 = v28;
      uint64_t v67 = v22;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v30 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      unsigned int v31 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
      v31((char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v73, v17);
      sub_1000BAE04((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      AnyHashable.init<A>(_:)();
      if (*(void *)(v30 + 16))
      {
        id v66 = v31;
        unint64_t v32 = sub_10008E070((uint64_t)aBlock);
        if (v33)
        {
          id v34 = *(id *)(*(void *)(v30 + 56) + 8 * v32);
          swift_bridgeObjectRelease();
          sub_10008E17C((uint64_t)aBlock);
          uint64_t v35 = *(void **)&v67[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
          id v36 = [v35 interactionModeForPreparing];
          id v70 = v34;
          if (v36 && ([v35 neverCreateBookmarkForOpenInPlace] & 1) == 0)
          {
            id v45 = [v35 hostIdentifier];
            uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v69 = v46;
          }
          else
          {
            uint64_t v65 = 0;
            uint64_t v69 = 0;
          }
          v66((char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v73, v17);
          unint64_t v47 = (*(unsigned __int8 *)(v18 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
          unint64_t v48 = (v19 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v50 = swift_allocObject();
          *(void *)(v50 + 16) = a6;
          (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v50 + v47, v20, v17);
          uint64_t v51 = v67;
          *(void *)(v50 + v48) = v67;
          os_log_type_t v52 = (void *)(v50 + v49);
          uint64_t v53 = v72;
          *os_log_type_t v52 = v71;
          v52[1] = v53;
          unint64_t v54 = v50 + ((v49 + 23) & 0xFFFFFFFFFFFFFFF8);
          *(void *)unint64_t v54 = a7;
          *(unsigned char *)(v54 + 8) = v68 & 1;
          unint64_t v55 = self;
          id v56 = a6;
          id v57 = v51;
          swift_retain();
          id v58 = a7;
          uint64_t v59 = (char *)[v55 defaultManager];
          id v60 = (void *)swift_allocObject();
          void v60[2] = sub_1004CDF24;
          uint64_t v60[3] = v50;
          uint64_t v62 = v69;
          uint64_t v61 = v70;
          v60[4] = v65;
          v60[5] = v62;
          v60[6] = v61;
          aBlock[4] = (uint64_t)sub_1003EDAF8;
          void aBlock[5] = (uint64_t)v60;
          aBlock[0] = (uint64_t)_NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = (uint64_t)sub_1001B6B50;
          void aBlock[3] = (uint64_t)&unk_1006B14E0;
          uint64_t v63 = _Block_copy(aBlock);
          swift_bridgeObjectRetain();
          id v64 = v61;
          swift_retain();
          swift_release();
          [v59 fetchURLForItem:v64 completionHandler:v63];
          _Block_release(v63);
          id v22 = v59;
          swift_release();

          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      sub_10008E17C((uint64_t)aBlock);
      id v22 = v67;
    }
    static Logger.UI.getter();
    unint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v75 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "%s importDocument: Unable to import the file to the FileProvider: The import operation did not return any .transferResults", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, id))(v69 + 8))(v16, v70);
    uint64_t v40 = v71;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v41 = objc_allocWithZone((Class)NSError);
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v43 = [v41 initWithDomain:v42 code:1 userInfo:0];

    unint64_t v44 = (char *)v43;
    v40(0, v43);

    id v22 = v44;
    goto LABEL_17;
  }
LABEL_18:
  URL.stopAccessingSecurityScopedResource()();
}

void sub_1004C6618(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6, void (*a7)(void, void), uint64_t a8, void *a9, char a10)
{
  uint64_t v59 = a1;
  uint64_t v60 = a8;
  id v58 = a7;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v14 - 8);
  uint64_t v57 = v14;
  __chkstk_darwin(v14);
  uint64_t v61 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = __chkstk_darwin(v20);
  id v23 = (char *)&v53 - v22;
  [a4 transferResults:v21];
  if (v24)
  {
    uint64_t v25 = v24;
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    uint64_t v26 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, a5, v16);
    sub_1000BAE04((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
    AnyHashable.init<A>(_:)();
    if (*(void *)(v26 + 16))
    {
      unint64_t v27 = sub_10008E070((uint64_t)aBlock);
      if (v28)
      {
        id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
        swift_bridgeObjectRelease();
        sub_10008E17C((uint64_t)aBlock);
        uint64_t v30 = swift_allocObject();
        unsigned int v31 = v58;
        unint64_t v32 = v59;
        *(void *)(v30 + 16) = a6;
        *(void *)(v30 + 24) = v31;
        *(void *)(v30 + 32) = v60;
        *(void *)(v30 + 40) = v32;
        *(void *)(v30 + 48) = a3;
        *(void *)(v30 + 56) = a9;
        *(void *)(v30 + 64) = v29;
        *(unsigned char *)(v30 + 72) = a10 & 1;
        aBlock[4] = (uint64_t)sub_1004CE0AC;
        void aBlock[5] = v30;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1000666D8;
        void aBlock[3] = (uint64_t)&unk_1006B1530;
        char v33 = _Block_copy(aBlock);
        swift_errorRetain();
        id v34 = v32;
        id v35 = a9;
        id v36 = v29;
        id v37 = a6;
        swift_retain();
        swift_release();
        DOCRunInMainThread();
        _Block_release(v33);

        return;
      }
    }
    swift_bridgeObjectRelease();
    sub_10008E17C((uint64_t)aBlock);
  }
  os_log_type_t v38 = v61;
  static Logger.UI.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a5, v16);
  id v39 = a4;
  swift_errorRetain();
  id v40 = v39;
  swift_errorRetain();
  id v41 = Logger.logObject.getter();
  int v42 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v41, (os_log_type_t)v42))
  {
    int v55 = v42;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    aBlock[0] = v54;
    *(_DWORD *)uint64_t v43 = 136315906;
    uint64_t v63 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2080;
    sub_1000BAE04((unint64_t *)&qword_10070ACE0, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v63 = sub_10009B0E4(v44, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    *(_WORD *)(v43 + 22) = 2080;
    id v46 = [v40 transferResults];
    if (v46)
    {
      unint64_t v47 = v46;
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      uint64_t v48 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v48 = 0;
    }
    uint64_t v63 = v48;
    sub_1000CBE70(&qword_100719020);
    uint64_t v49 = String.init<A>(describing:)();
    uint64_t v63 = sub_10009B0E4(v49, v50, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 32) = 2080;
    uint64_t v63 = a3;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v51 = String.init<A>(describing:)();
    uint64_t v63 = sub_10009B0E4(v51, v52, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, (os_log_type_t)v55, "%s importOperation finished with no item matching sourceURL: %s transferResults: %s. Error: %s", (uint8_t *)v43, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v57);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v57);
  }
  v58(v59, a3);
}

void sub_1004C6CF8(void *a1, void (*a2)(void, void), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7, int a8)
{
  int v64 = a8;
  uint64_t v66 = a3;
  uint64_t v67 = a4;
  uint64_t v68 = a2;
  uint64_t v65 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v13 = &v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v57[-v15];
  __chkstk_darwin(v17);
  uint64_t v19 = &v57[-v18];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (double v21 = Strong,
        id v22 = [Strong effectiveBrowserViewController],
        v21,
        v22))
  {
    if (sub_1004C5420())
    {
      static Logger.UI.getter();
      id v23 = a7;
      id v24 = v22;
      id v25 = v23;
      id v26 = v24;
      unint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      int v29 = v28;
      BOOL v30 = os_log_type_enabled(v27, v28);
      id v62 = v26;
      if (v30)
      {
        uint64_t v31 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        id v63 = v25;
        char v33 = (void *)v32;
        uint64_t v60 = swift_slowAlloc();
        aBlock[0] = v60;
        *(_DWORD *)uint64_t v31 = 136315650;
        uint64_t v70 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
        os_log_t v59 = v27;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v31 + 12) = 2112;
        uint64_t v61 = a5;
        uint64_t v70 = (uint64_t)v63;
        id v34 = v63;
        int v58 = v29;
        id v35 = v34;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *char v33 = v63;

        *(_WORD *)(v31 + 22) = 2112;
        uint64_t v70 = (uint64_t)v26;
        id v36 = v26;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        id v37 = v33;
        id v25 = v63;
        v37[1] = v22;

        a5 = v61;
        os_log_t v38 = v59;
        _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v58, "%s 1. importOperation finished with item: %@). Calling reveal on effectiveBrowserViewController: %@ expecting completion handler to be called", (uint8_t *)v31, 0x20u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v16, v65);
      uint64_t v47 = v66;
      id v46 = v67;
      uint64_t v48 = v68;
      char v49 = v64;
      if ((v64 & 1) == 0) {
        v68(v67, a5);
      }
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_1005A04F0;
      *(void *)(v50 + 32) = v25;
      aBlock[0] = v50;
      specialized Array._endMutation()();
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v25;
      *(unsigned char *)(v51 + 24) = v49 & 1;
      *(void *)(v51 + 32) = v48;
      *(void *)(v51 + 40) = v47;
      *(void *)(v51 + 48) = v46;
      *(void *)(v51 + 56) = a5;
      id v52 = v25;
      swift_retain();
      id v53 = v46;
      swift_errorRetain();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      aBlock[4] = (uint64_t)sub_1004CE114;
      void aBlock[5] = v51;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10000A884;
      void aBlock[3] = (uint64_t)&unk_1006B1580;
      int v55 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v56 = v62;
      [v62 revealWithItems:isa selectEvenIfVisible:0 completionBlock:v55];
      _Block_release(v55);

      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      int v42 = [a1 activeDocumentCreationSession];
      if (v42)
      {
        v42[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_switchToRecentsAfterPresentation] = 1;
      }
      static Logger.UI.getter();
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v43, v44))
      {
        unint64_t v45 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)unint64_t v45 = 136315138;
        uint64_t v70 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s importDocument: Skipping reveal item, since the destination isn't the current location, which can happen in UIP", v45, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v65);
      v68(v67, a5);
    }
  }
  else
  {
    static Logger.UI.getter();
    id v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v39, v40))
    {
      id v41 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v41 = 136315138;
      uint64_t v70 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s importDocument: Unable to reveal item, since effective browser view controller can't be obtained", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v19, v65);
    v68(v67, a5);
  }
}

uint64_t sub_1004C74BC(int a1, void *a2, char a3, uint64_t (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v34 = a1;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v16 = a2;
  id v35 = v15;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.debug.getter();
  int v19 = v18;
  if (!os_log_type_enabled(v17, v18))
  {

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v35, v12);
    if ((a3 & 1) == 0) {
      return result;
    }
    return a4(a6, a7);
  }
  uint64_t v20 = swift_slowAlloc();
  uint64_t v32 = v13;
  uint64_t v21 = v20;
  int v29 = (void *)swift_slowAlloc();
  uint64_t v30 = swift_slowAlloc();
  uint64_t v37 = v30;
  *(_DWORD *)uint64_t v21 = 136315650;
  uint64_t v33 = a7;
  uint64_t v36 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, &v37);
  uint64_t v31 = v12;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v21 + 12) = 2112;
  int v28 = v19;
  uint64_t v36 = (uint64_t)v16;
  id v22 = v16;
  os_log_t v27 = v17;
  id v23 = v22;
  a7 = v33;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *int v29 = v16;

  *(_WORD *)(v21 + 22) = 1024;
  LODWORD(v36) = v34 & 1;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  os_log_t v24 = v27;
  _os_log_impl((void *)&_mh_execute_header, v27, (os_log_type_t)v28, "%s 2. importOperation reveal item: %@ completed with success: %{BOOL}d)", (uint8_t *)v21, 0x1Cu);
  sub_1000CBE70(&qword_100707CC0);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  if (a3) {
    return a4(a6, a7);
  }
  return result;
}

void sub_1004C77E8(void *a1, void (*a2)(void, id), uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v27 = a3;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (id v18 = [a1 fileProviderItem]) != 0)
  {
    int v19 = v18;
    id v26 = v18;
    sub_1004C5614(a4, a6 & 1, a7, a8, v19, a2, v27);

    id v20 = v26;
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      id v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "importDocument: Unable to get the current location or the default location", v23, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    URL.lastPathComponent.getter();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v25 = (id)DOCErrorNoLocationAvailableError();

    a2(0, v25);
  }
}

void sub_1004C7CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v8, &qword_1007076B0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    URL._bridgeToObjectiveC()(v11);
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  if (a2) {
    uint64_t v14 = (void *)_convertErrorToNSError(_:)();
  }
  else {
    uint64_t v14 = 0;
  }
  (*(void (**)(uint64_t, void *, void *))(a3 + 16))(a3, v12, v14);
}

void sub_1004C7E30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v37 = a8;
  os_log_t v38 = a6;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  int v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v33 = a9;
    uint64_t v34 = a10;
    id v20 = a1;
    id v36 = [v20 itemID];
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v16);
    unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    id v35 = a5;
    id v23 = (char *)swift_allocObject();
    *((void *)v23 + 2) = v20;
    *((void *)v23 + 3) = a3;
    NSString v24 = v38;
    *((void *)v23 + 4) = a4;
    *((void *)v23 + 5) = v24;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v23[v21], v19, v16);
    id v25 = &v23[v22];
    uint64_t v26 = v33;
    *(void *)id v25 = v37;
    *((void *)v25 + 1) = v26;
    *(void *)&v23[(v22 + 23) & 0xFFFFFFFFFFFFFFF8] = v34;
    uint64_t v43 = sub_1004CF7BC;
    os_log_type_t v44 = v23;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v40 = 1107296256;
    id v41 = sub_10016A350;
    int v42 = &unk_1006B1AF8;
    uint64_t v27 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    id v28 = v20;
    id v29 = v24;
    swift_release();
    uint64_t v30 = v36;
    [v35 fetchParentsForItemID:v36 recursively:0 completionHandler:v27];
    _Block_release(v27);
  }
  else
  {
    uint64_t v31 = (char *)swift_allocObject();
    *((void *)v31 + 2) = a3;
    *((void *)v31 + 3) = a4;
    *((void *)v31 + 4) = a2;
    uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t))sub_1004CFC00;
    os_log_type_t v44 = v31;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v40 = 1107296256;
    id v41 = sub_1000666D8;
    int v42 = &unk_1006B1AA8;
    uint64_t v32 = _Block_copy(&aBlock);
    swift_retain();
    swift_errorRetain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v32);
  }
}

void sub_1004C8140(unint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    uint64_t v14 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10059B760;
    *(void *)(v15 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v15 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v15 + 32) = a3;
    id v16 = a3;
    uint64_t v17 = _convertErrorToNSError(_:)();
    *(void *)(v15 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v15 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v15 + 72) = v17;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)swift_allocObject();
    long long v18[2] = a4;
    void v18[3] = a5;
    v18[4] = a2;
    uint64_t v37 = sub_1004CF0AC;
    os_log_t v38 = v18;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    id v35 = sub_1000666D8;
    id v36 = &unk_1006B1BC0;
    int v19 = _Block_copy(&aBlock);
    swift_retain();
    swift_errorRetain();
LABEL_15:
    swift_release();
    DOCRunInMainThread();
    _Block_release(v19);
    return;
  }
  if (!a1)
  {
LABEL_14:
    id v29 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1005A0030;
    *(void *)(v30 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)(v30 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
    *(void *)(v30 + 32) = a3;
    id v31 = a3;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = a4;
    *(void *)(v32 + 24) = a5;
    uint64_t v37 = sub_1004CF8A0;
    os_log_t v38 = (void *)v32;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v34 = 1107296256;
    id v35 = sub_1000666D8;
    id v36 = &unk_1006B1B48;
    int v19 = _Block_copy(&aBlock);
    swift_retain();
    goto LABEL_15;
  }
  if (!(a1 >> 62))
  {
    uint64_t v23 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v23) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_6:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v24 = *(id *)(a1 + 32);
  }
  id v25 = v24;
  swift_bridgeObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v26 = (void *)DOCNode.sourceIdentifier.getter();
  id v27 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v26 node:v25];

  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a4;
  *(void *)(v28 + 24) = a5;
  swift_retain();
  sub_1004C3208(a7, 1, a8, a9, a10, v27, (uint64_t)sub_1004CF8A8, v28);

  swift_release();
}

uint64_t sub_1004C85FC(void (*a1)(char *, void))
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  a1(v4, 0);
  return sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
}

void sub_1004C86D4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v18 = v4;
    id v20 = v2;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    int v19 = a1;
    if (a1)
    {
      aBlock[0] = v8;
      uint64_t v13 = v8;
    }
    else
    {
      aBlock[0] = 0;
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v19;
    *uint64_t v12 = v19;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Creating document at %@", v11, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    uint64_t v2 = v20;
    uint64_t v4 = v18;
  }
  else
  {

    uint64_t v9 = v8;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v2;
  aBlock[4] = sub_1004CD39C;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B1198;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v8;
  id v17 = v2;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v15);
}

void sub_1004C89C0(void *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  os_log_type_t v10 = (char *)&aBlock[-1] - v9;
  id v11 = [a2 activeDocumentCreationSession];

  if (v11)
  {
    static Logger.UI.getter();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Ignore document creation because the client is still processing the previous request", v14, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    uint64_t v15 = *(void **)&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_configuration];
    id v16 = [v15 sceneIdentifier];
    id v17 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v16);

    uint64_t v18 = &v17[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
    swift_beginAccess();
    if (*(void *)v18)
    {
      static Logger.UI.getter();
      int v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v19, v20))
      {
        unint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "Ignore document creation because the client is still processing an open document request", v21, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    }
    else
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v23 = (void *)Strong;
        uint64_t v24 = swift_unknownObjectWeakLoadStrong();
        if (v24)
        {
          id v25 = (void *)v24;
          uint64_t v26 = self;
          id v27 = [v23 configuration];
          id v28 = [v27 sceneIdentifier];

          id v29 = [v26 globalTabbedBrowserControllerForIdentifier:v28];
          id v42 = v25;
          if (v29)
          {
            type metadata accessor for DOCServiceDocumentBrowserViewController();
            uint64_t v30 = (void *)swift_dynamicCastClass();
            if (!v30) {
          }
            }
          else
          {
            uint64_t v30 = 0;
          }
          id v31 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession());
          id v32 = v30;
          id v33 = a1;
          id v34 = v15;
          id v35 = sub_1004CD3E4(v33, v34, v30);

          [a2 setActiveDocumentCreationSession:v35];
          sub_1004C23E0((uint64_t)v35, 1);
          id v36 = v42;
          if ([v42 respondsToSelector:"documentBrowser:didRequestDocumentCreationWithHandler:"])
          {
            uint64_t v37 = swift_allocObject();
            swift_unknownObjectWeakInit();
            os_log_t v38 = (void *)swift_allocObject();
            v38[2] = v37;
            void v38[3] = v35;
            v38[4] = v33;
            aBlock[4] = sub_1004CD558;
            void aBlock[5] = v38;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1004C8EEC;
            void aBlock[3] = &unk_1006B1260;
            id v39 = _Block_copy(aBlock);
            id v40 = v33;
            swift_unknownObjectRetain();
            swift_retain();
            id v41 = v35;
            swift_retain();
            [v36 documentBrowser:v23 didRequestDocumentCreationWithHandler:v39];
            _Block_release(v39);
            swift_release();

            swift_unknownObjectRelease_n();
            swift_release();
            swift_release();
          }
          else
          {

            swift_unknownObjectRelease();
          }
        }
        else
        {
        }
      }
      else
      {
      }
    }
  }
}

uint64_t sub_1004C8EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, uint64_t))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  v9(v8, a3);
  swift_release();
  return sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
}

void sub_1004C9028(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  os_log_t v38 = a5;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v17 = (char *)&v34 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    int v19 = (void *)Strong;
    if (!a2)
    {
LABEL_5:
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = a4;
      uint64_t v43 = sub_1004CD5A4;
      uint64_t v44 = v20;
      long long aBlock = _NSConcreteStackBlock;
      unint64_t v40 = 1107296256;
      id v41 = sub_1000666D8;
      id v42 = &unk_1006B12B0;
      unint64_t v21 = _Block_copy(&aBlock);
      id v22 = v19;
      id v23 = a4;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v21);

      return;
    }
    sub_1000CBC00(a1, (uint64_t)v10, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
      goto LABEL_5;
    }
    uint64_t v37 = a2;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v36 = v12 + 32;
    v24(v17, v10, v11);
    static os_log_type_t.info.getter();
    long long aBlock = 0;
    unint64_t v40 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    long long aBlock = (void **)0xD000000000000016;
    unint64_t v40 = 0x80000001005FAA90;
    v25._unint64_t countAndFlagsBits = URL.absoluteString.getter();
    String.append(_:)(v25);
    swift_bridgeObjectRelease();
    sub_1004CC92C((uint64_t)a4, (uint64_t)aBlock, v40);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    unint64_t v26 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v27 = (v13 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v35 = v12;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v19;
    *(void *)(v28 + 24) = a4;
    v24((char *)(v28 + v26), v15, v11);
    id v29 = v38;
    *(void *)(v28 + v27) = v37;
    *(void *)(v28 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = v29;
    uint64_t v43 = sub_1004CD6E8;
    uint64_t v44 = v28;
    long long aBlock = _NSConcreteStackBlock;
    unint64_t v40 = 1107296256;
    id v41 = sub_1000666D8;
    id v42 = &unk_1006B1300;
    uint64_t v30 = _Block_copy(&aBlock);
    id v31 = v19;
    id v32 = a4;
    id v33 = v29;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v11);
  }
}

uint64_t sub_1004C9454(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v20 = a5;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004C23E0((uint64_t)a2, 2);
  static os_log_type_t.info.getter();
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(21);
  swift_bridgeObjectRelease();
  uint64_t v21 = 0xD000000000000013;
  unint64_t v22 = 0x80000001005FAAB0;
  v13._unint64_t countAndFlagsBits = URL.absoluteString.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  sub_1004CC92C((uint64_t)a2, v21, v22);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, v12, v9);
  id v16 = a1;
  id v17 = a2;
  sub_1004C3208(a3, 0, 0, 0, a4, v20, (uint64_t)sub_1004CD858, v15);
  return swift_release();
}

void sub_1004C9650(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v23 = a3;
  uint64_t v24 = a2;
  uint64_t v22 = a1;
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v21 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.info.getter();
  long long aBlock = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  long long aBlock = (void **)0xD000000000000014;
  unint64_t v26 = 0x80000001005FAAD0;
  v13._unint64_t countAndFlagsBits = URL.absoluteString.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  sub_1004CC92C((uint64_t)a4, (uint64_t)aBlock, v26);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a5, v9);
  sub_1000CBC00(v22, (uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1007076B0);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + *(unsigned __int8 *)(v21 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v16 = swift_allocObject();
  id v17 = v23;
  *(void *)(v16 + 16) = v23;
  *(void *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v14, v12, v9);
  sub_10032D1DC((uint64_t)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(void *)(v16 + ((v8 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v24;
  id v29 = sub_1004CDA70;
  uint64_t v30 = v16;
  long long aBlock = _NSConcreteStackBlock;
  unint64_t v26 = 1107296256;
  unint64_t v27 = sub_1000666D8;
  uint64_t v28 = &unk_1006B1378;
  uint64_t v18 = _Block_copy(&aBlock);
  id v19 = v17;
  id v20 = a4;
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

void sub_1004C9944(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v62 = a5;
  uint64_t v55 = a4;
  uint64_t v56 = a3;
  uint64_t v61 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v54 = v8;
  uint64_t v60 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v57 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v58 = v10;
  uint64_t v59 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v49 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for DispatchQoS();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v48 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  id v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v40 - v18;
  static os_log_type_t.info.getter();
  sub_1004CC92C(a2, 0xD00000000000002CLL, 0x80000001005FAAF0);
  sub_1004C23E0(a2, 3);
  id v20 = [a1 activeDocumentCreationSession];
  if (v20)
  {
    uint64_t v21 = v20;
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v43 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    id v42 = v19;
    + infix(_:_:)();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v45 = v14 + 8;
    id v46 = v22;
    uint64_t v44 = v13;
    v22(v17, v13);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a1;
    *(void *)(v23 + 24) = v21;
    uint64_t v67 = sub_1004CDE00;
    uint64_t v68 = v23;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_1000666D8;
    uint64_t v66 = &unk_1006B1418;
    uint64_t v24 = _Block_copy(&aBlock);
    id v25 = a1;
    id v41 = v21;
    swift_release();
    unint64_t v26 = v48;
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_1000BAE04((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v47 = a2;
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    unint64_t v27 = v49;
    uint64_t v28 = v51;
    a2 = v47;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v29 = v42;
    uint64_t v30 = (void *)v43;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v52);
    v46(v29, v44);
  }
  static os_log_type_t.info.getter();
  sub_1004CC92C(a2, 0xD000000000000025, 0x80000001005FAB20);
  uint64_t v31 = v59;
  sub_1000CBC00(v55, v59, &qword_1007076B0);
  id v33 = v60;
  uint64_t v32 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v60, v56, v61);
  unint64_t v34 = (*(unsigned __int8 *)(v57 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v35 = (v58 + *(unsigned __int8 *)(v7 + 80) + v34) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v36 = (v54 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = a1;
  sub_10032D1DC(v31, v37 + v34);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v37 + v35, v33, v32);
  *(void *)(v37 + v36) = v62;
  uint64_t v67 = (void (*)())sub_1004CD158;
  uint64_t v68 = v37;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v64 = 1107296256;
  uint64_t v65 = sub_1000666D8;
  uint64_t v66 = &unk_1006B13C8;
  os_log_t v38 = _Block_copy(&aBlock);
  id v39 = a1;
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v38);
}

void sub_1004CA034(void *a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v28 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000CBE70((uint64_t *)&unk_10070D810);
  __chkstk_darwin(v31);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_10070B6D0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v30 = (uint64_t)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v27 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v27 - v14;
  id v29 = a1;
  uint64_t v16 = (char *)[a1 activeDocumentCreationSession];
  if (v16)
  {
    id v17 = v16;
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v18(v15, &v16[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier], v3);

    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v19(v15, 0, 1, v3);
  }
  else
  {
    id v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v19(v15, 1, 1, v3);
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  }
  v18(v13, (char *)(v32 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier), v3);
  v19(v13, 0, 1, v3);
  uint64_t v20 = (uint64_t)&v7[*(int *)(v31 + 48)];
  sub_1000CBC00((uint64_t)v15, (uint64_t)v7, &qword_10070B6D0);
  sub_1000CBC00((uint64_t)v13, v20, &qword_10070B6D0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v7, 1, v3) != 1)
  {
    uint64_t v22 = v30;
    sub_1000CBC00((uint64_t)v7, v30, &qword_10070B6D0);
    if (v21(v20, 1, v3) != 1)
    {
      uint64_t v23 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v28, v20, v3);
      sub_1000BAE04(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v23, v3);
      sub_1000CBBA4((uint64_t)v13, &qword_10070B6D0);
      sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
      v25((char *)v22, v3);
      sub_1000CBBA4((uint64_t)v7, &qword_10070B6D0);
      if ((v24 & 1) == 0) {
        return;
      }
      goto LABEL_11;
    }
    sub_1000CBBA4((uint64_t)v13, &qword_10070B6D0);
    sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v22, v3);
LABEL_9:
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_10070D810);
    return;
  }
  sub_1000CBBA4((uint64_t)v13, &qword_10070B6D0);
  sub_1000CBBA4((uint64_t)v15, &qword_10070B6D0);
  if (v21(v20, 1, v3) != 1) {
    goto LABEL_9;
  }
  sub_1000CBBA4((uint64_t)v7, &qword_10070B6D0);
LABEL_11:
  static os_log_type_t.info.getter();
  uint64_t v26 = v32;
  sub_1004CC92C(v32, 0xD000000000000036, 0x80000001005FAB50);
  sub_1004C23E0(v26, 0);
}

void sub_1004CA4FC(void *a1, char *a2)
{
  if (!a1)
  {
    uint64_t v3 = *(void *)&a2[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController];
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a2;
    uint64_t v5 = (unint64_t *)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
    swift_beginAccess();
    unint64_t v6 = *v5;
    if (v6 >> 62)
    {
      uint64_t v18 = a2;
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (v7)
      {
LABEL_7:
        unint64_t v9 = v7 - 1;
        if (__OFSUB__(v7, 1))
        {
          __break(1u);
        }
        else if ((v6 & 0xC000000000000001) == 0)
        {
          if ((v9 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v9 < *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v10 = *(id *)(v6 + 8 * v9 + 32);
            goto LABEL_12;
          }
          __break(1u);
          return;
        }
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
        uint64_t v11 = v10;
        swift_bridgeObjectRelease();
        id v12 = [v11 fileProviderItem];
        if (v12)
        {
          uint64_t v13 = v12;
          uint64_t v14 = (void *)FPActionImportHere;
          sub_1000CBE70((uint64_t *)&unk_1007084E0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
          *(void *)(inited + 32) = v13;
          unint64_t v25 = inited;
          specialized Array._endMutation()();
          id v16 = v13;
          LOBYTE(v14) = sub_1000301E0(v14, v25);
          swift_bridgeObjectRelease();

          if (v14)
          {
            id v17 = v11;
            sub_1004C89C0(v17, a2);

            swift_release();
            return;
          }
        }

        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v8 = a2;
      swift_bridgeObjectRetain();
      if (v7) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
LABEL_18:
    type metadata accessor for DOCHierarchyController(0);
    id v19 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
    uint64_t v21 = *(void **)(v3 + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1004CD3DC;
    *(void *)(v22 + 24) = v4;
    id v23 = v21;
    swift_retain();
    sub_100230898(v19, v20, v21, (uint64_t)sub_100162C78, v22);

    swift_release();
    swift_release();
    return;
  }
  id v24 = a1;
  sub_1004C89C0(v24, a2);
}

void sub_1004CA7EC(void *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v13 = a1;
    sub_1004C89C0(v13, a2);
    uint64_t v8 = v13;
  }
  else
  {
    static Logger.UI.getter();
    unint64_t v9 = Logger.logObject.getter();
    uint64_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, (os_log_type_t)v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, (os_log_type_t)v10, "Cannot create a document if we don't have a default location", v11, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1004CA96C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v32 = a6;
  uint64_t v33 = a5;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = type metadata accessor for Logger();
  __chkstk_darwin(v13);
  id v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(void *)(v17 + 24) = a3;
    id v18 = a1;
    swift_retain();
    sub_1004C3208(a4, 1, 0, 0, v32, v18, (uint64_t)sub_1004CF550, v17);

    swift_release();
  }
  else
  {
    uint64_t v29 = v14;
    uint64_t v30 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v31 = v11;
    uint64_t v32 = a2;
    uint64_t v33 = a3;
    static Logger.UI.getter();
    id v19 = Logger.logObject.getter();
    uint64_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, (os_log_type_t)v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v20, "Cannot import a document if we don't have a default location", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v13);
    uint64_t v22 = v30;
    uint64_t v23 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, a4, v10);
    unint64_t v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v33;
    *(void *)(v25 + 16) = v32;
    *(void *)(v25 + 24) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v25 + v24, v22, v10);
    aBlock[4] = sub_1004CF4EC;
    void aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B1990;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v27);
  }
}

uint64_t sub_1004CACE4(void (*a1)(char *, id))
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  URL.lastPathComponent.getter();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = (id)DOCErrorNoLocationAvailableError();

  a1(v4, v7);
  return sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
}

void sub_1004CAE08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v19 = a7;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  sub_1000CBC00(a1, (uint64_t)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1007076B0);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_10032D1DC((uint64_t)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  *(void *)(v16 + ((v14 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = a6;
  void aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = v19;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v17);
}

unint64_t sub_1004CB1F4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a2;
  uint64_t v70 = a4;
  uint64_t v68 = a3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  id v63 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v57 - v12;
  __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC5Files18DOCDocumentManager_hierarchyController];
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  uint64_t v61 = v17;
  v17((char *)&v57 - v14, a1, v7);
  uint64_t v66 = v13;
  uint64_t v62 = v8 + 16;
  v17(v13, v15, v7);
  uint64_t v18 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = (v18 + 24) & ~v18;
  unint64_t v20 = (v9 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = v18 | 7;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v5;
  uint64_t v59 = v19;
  uint64_t v22 = v21 + v19;
  uint64_t v64 = v8;
  uint64_t v23 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v67 = v7;
  v23(v22, v15, v7);
  unint64_t v24 = (void *)(v21 + v20);
  uint64_t v25 = v70;
  *unint64_t v24 = v68;
  v24[1] = v25;
  *(void *)(v21 + ((v20 + 23) & 0xFFFFFFFFFFFFFFF8)) = v69;
  uint64_t v26 = (unint64_t *)(v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
  swift_beginAccess();
  unint64_t v27 = *v26;
  id v65 = v5;
  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v29 = v5;
    swift_retain_n();
    uint64_t v30 = v29;
    swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  uint64_t v50 = v5;
  swift_retain_n();
  uint64_t v51 = v50;
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  if (!v28) {
    goto LABEL_13;
  }
LABEL_3:
  unint64_t result = v28 - 1;
  if (__OFSUB__(v28, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if ((v27 & 0xC000000000000001) != 0)
  {
LABEL_17:
    id v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    id v34 = [v33 fileProviderItem];
    if (v34)
    {
      unint64_t v35 = v34;
      uint64_t v58 = v23;
      unint64_t v36 = (void *)FPActionImportHere;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
      *(void *)(inited + 32) = v35;
      unint64_t v71 = inited;
      specialized Array._endMutation()();
      unint64_t v38 = v71;
      id v39 = v35;
      LOBYTE(v36) = sub_1000301E0(v36, v38);
      swift_bridgeObjectRelease();

      if (v36)
      {
        unint64_t v40 = v20;
        id v41 = v63;
        uint64_t v43 = (uint64_t)v66;
        uint64_t v42 = v67;
        v61(v63, v66, v67);
        uint64_t v44 = swift_allocObject();
        id v45 = v65;
        *(void *)(v44 + 16) = v65;
        v58(v44 + v59, v41, v42);
        id v46 = (void *)(v44 + v40);
        uint64_t v47 = v70;
        *id v46 = v68;
        v46[1] = v47;
        id v48 = v45;
        swift_retain();
        id v49 = v33;
        sub_1004C3208(v43, 1, 0, 0, v69, v49, (uint64_t)sub_1004CCEA0, v44);

        swift_release();
LABEL_15:
        uint64_t v56 = v64;

        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v43, v42);
        return swift_release();
      }
    }

LABEL_14:
    type metadata accessor for DOCHierarchyController(0);
    uint64_t v52 = *(void **)(v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_configuration);
    uint64_t v53 = *(void **)(v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_sourceObserver);
    uint64_t v54 = *(void **)(v16 + OBJC_IVAR____TtC5Files22DOCHierarchyController_pickerContext);
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1004CCDEC;
    *(void *)(v55 + 24) = v21;
    id v49 = v54;
    swift_retain();
    sub_100230898(v52, v53, v54, (uint64_t)sub_100162780, v55);

    swift_release();
    uint64_t v43 = (uint64_t)v66;
    uint64_t v42 = v67;
    goto LABEL_15;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v32 = *(id *)(v27 + 8 * result + 32);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

void sub_1004CB734(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v41 = a4;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Logger();
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v18 = a3;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
    uint64_t v19 = a5;
    unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = a2;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v22 + v20, v13, v10);
    uint64_t v23 = (void *)(v22 + v21);
    *uint64_t v23 = v41;
    v23[1] = v19;
    id v24 = a1;
    id v25 = a2;
    swift_retain();
    sub_1004C3208(v18, 1, 0, 0, v40, v24, (uint64_t)sub_1004CCEA0, v22);
    swift_release();
  }
  else
  {
    uint64_t v37 = v15;
    uint64_t v38 = a3;
    id v39 = a2;
    uint64_t v40 = a5;
    static Logger.UI.getter();
    uint64_t v26 = Logger.logObject.getter();
    uint64_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, (os_log_type_t)v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v27, "Cannot import a document if we don't have a default location", v28, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v17, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v38, v10);
    unint64_t v29 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v39;
    *(void *)(v30 + 16) = v39;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v30 + v29, (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
    id v32 = (void *)(v30 + ((v12 + v29 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v33 = v40;
    *id v32 = v41;
    v32[1] = v33;
    aBlock[4] = sub_1004CD160;
    void aBlock[5] = v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B10D0;
    id v34 = _Block_copy(aBlock);
    id v35 = v31;
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v34);
  }
}

uint64_t sub_1004CBB04(void *a1, uint64_t a2, void (*a3)(char *, id), uint64_t a4)
{
  uint64_t v36 = a4;
  uint64_t v37 = a3;
  uint64_t v33 = a1;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v29 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v31 + 64);
  uint64_t v10 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - v12;
  id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v35 = v6 + 56;
  v34((char *)&v28 - v12, 1, 1, v5);
  uint64_t v32 = a2;
  URL.lastPathComponent.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = (id)DOCErrorNoLocationAvailableError();

  sub_1000CBC00((uint64_t)v13, (uint64_t)v11, &qword_1007076B0);
  uint64_t v15 = a2;
  uint64_t v16 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v29);
  unint64_t v17 = (*(unsigned __int8 *)(v31 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v18 = (v9 + *(unsigned __int8 *)(v6 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = swift_allocObject();
  unint64_t v20 = v33;
  *(void *)(v19 + 16) = v33;
  sub_10032D1DC((uint64_t)v11, v19 + v17);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19 + v18, (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  unint64_t v21 = v30;
  *(void *)(v19 + ((v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v30;
  aBlock[4] = sub_1004CD158;
  void aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B1148;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v20;
  id v24 = v21;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v22);

  sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
  v34(v13, 1, 1, v16);
  URL.lastPathComponent.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v26 = (id)DOCErrorNoLocationAvailableError();

  v37(v13, v26);
  return sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
}

void sub_1004CBE9C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v28 = a2;
  uint64_t v9 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  double v16 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v14 + 16))(v17, a4, v13, v16);
  sub_1000CBC00(a1, (uint64_t)v12, &qword_1007076B0);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (v15 + *(unsigned __int8 *)(v10 + 80) + v18) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v20 = (v11 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21 + v18, v17, v13);
  sub_10032D1DC((uint64_t)v12, v21 + v19);
  uint64_t v22 = v29;
  *(void *)(v21 + v20) = v28;
  id v23 = (void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v24 = v30;
  *id v23 = v22;
  v23[1] = v24;
  aBlock[4] = sub_1004CD044;
  void aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B1030;
  NSString v25 = _Block_copy(aBlock);
  id v26 = a3;
  swift_errorRetain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v25);
}

uint64_t sub_1004CC134(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v27 = a6;
  uint64_t v28 = a5;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  uint64_t v24 = a1;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a3, (uint64_t)v14, &qword_1007076B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v16 = (v13 + *(unsigned __int8 *)(v9 + 80) + v15) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = swift_allocObject();
  unint64_t v18 = v24;
  *(void *)(v17 + 16) = v24;
  sub_10032D1DC((uint64_t)v14, v17 + v15);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v17 + v16, (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t v19 = v26;
  *(void *)(v17 + ((v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) = v26;
  aBlock[4] = sub_1004CD158;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B1080;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v18;
  swift_errorRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v20);
  return v28(v25, v19);
}

void DOCDocumentManager.init()()
{
}

id DOCDocumentManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCDocumentManager();
  return [super dealloc];
}

uint64_t sub_1004CC62C()
{
  return type metadata accessor for DOCDocumentManager.DocumentCreationSession();
}

uint64_t type metadata accessor for DOCDocumentManager.DocumentCreationSession()
{
  uint64_t result = qword_100719008;
  if (!qword_100719008) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004CC680()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DOCDocumentManager.DocumentCreationSession.Phase(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DOCDocumentManager.DocumentCreationSession.Phase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004CC89CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDocumentManager.DocumentCreationSession.Phase()
{
  return &type metadata for DOCDocumentManager.DocumentCreationSession.Phase;
}

unint64_t sub_1004CC8D8()
{
  unint64_t result = qword_100719018;
  if (!qword_100719018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719018);
  }
  return result;
}

uint64_t sub_1004CC92C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_identifier;
  static Logger.UI.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v13, v5);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v24 = v10;
    uint64_t v17 = v16;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v27 = v23;
    *(_DWORD *)uint64_t v17 = 136315394;
    v21[1] = v17 + 4;
    sub_1000BAE04((unint64_t *)&unk_10070ACF0, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v26 = sub_10009B0E4(v18, v19, &v27);
    uint64_t v22 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_10009B0E4(v25, a3, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "[CREATE DOCUMENT]: (session: %s) %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

unint64_t sub_1004CCCAC(Swift::String string)
{
  object = string._object;
  v2._unint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068B3A8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_1004CCCF8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1004CCDEC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1004CB734(a1, v6, v1 + v4, v7, v8, v9);
}

uint64_t sub_1004CCEA4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);

  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1)) {
    v10(v0 + v8, v1);
  }
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v3 | v7 | 7);
}

uint64_t sub_1004CD044()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void **)(v0 + 16);
  uint64_t v8 = v0 + v5;
  uint64_t v9 = *(void *)(v0 + v6);
  uint64_t v10 = v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  return sub_1004CC134(v7, v0 + v2, v8, v9, v11, v12);
}

uint64_t sub_1004CD160()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = *(void (**)(char *, id))v5;
  uint64_t v7 = *(void *)(v5 + 8);

  return sub_1004CBB04(v3, v4, v6, v7);
}

uint64_t sub_1004CD1F8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 16, v5);
}

void sub_1004CD2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void **)(v2 + 16);
  uint64_t v8 = v2 + v6;
  uint64_t v9 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  sub_1004CBE9C(a1, a2, v7, v8, v10, v11);
}

void sub_1004CD39C()
{
  sub_1004CA4FC(*(void **)(v0 + 16), *(char **)(v0 + 24));
}

uint64_t sub_1004CD3A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004CD3DC(void *a1)
{
  sub_1004CA7EC(a1, *(char **)(v1 + 16));
}

id sub_1004CD3E4(void *a1, void *a2, void *a3)
{
  uint64_t v7 = v3;
  UUID.init()();
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_phase] = 0;
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_switchToRecentsAfterPresentation] = 0;
  uint64_t v8 = OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController;
  *(void *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_serviceViewController] = 0;
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isDisablingScreenUpdates] = 0;
  *(void *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_snapshotCoverView] = 0;
  *(void *)&v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_targetLocation] = a1;
  uint64_t v9 = *(void **)&v7[v8];
  *(void *)&v7[v8] = a3;
  id v10 = a1;
  id v11 = a3;

  unsigned __int8 v12 = [a2 isInUIPDocumentLanding];
  v7[OBJC_IVAR____TtCC5Files18DOCDocumentManager23DocumentCreationSession_isInUIPDocumentLanding] = v12;

  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for DOCDocumentManager.DocumentCreationSession();
  return [super init];
}

uint64_t sub_1004CD4D8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004CD510()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004CD558(uint64_t a1, uint64_t a2)
{
  sub_1004C9028(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1004CD564()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004CD5A4()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1004C23E0(*(void *)(v0 + 24), 0);

  return [v1 setActiveDocumentCreationSession:0];
}

uint64_t sub_1004CD5F0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1004CD6E8()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v5 = *(void **)(v0 + 24);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004C9454(v4, v5, v0 + v2, v6, v7);
}

uint64_t sub_1004CD784()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1004CD858(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(void **)(v2 + 16);
  uint64_t v7 = *(void **)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1004C9650(a1, a2, v6, v7, v8);
}

uint64_t sub_1004CD8DC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v5 + v7) & ~v7;
  uint64_t v9 = *(void *)(v6 + 64);

  id v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v8, 1, v1)) {
    v10(v0 + v8, v1);
  }
  swift_errorRelease();

  return _swift_deallocObject(v0, ((v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v3 | v7 | 7);
}

void sub_1004CDA70()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void **)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004C9944(v6, v7, v0 + v2, v0 + v5, v8);
}

uint64_t sub_1004CDB74()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);

  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5);
  id v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9) {
    v10(v0 + v3, v5);
  }
  uint64_t v11 = (v3 + v4 + v7) & ~v7;
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10(v0 + v11, v5);
  swift_errorRelease();

  return _swift_deallocObject(v0, v12 + 8, v2 | v7 | 7);
}

void sub_1004CDD00()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1004C2D38(v6, v0 + v2, v0 + v5, v7);
}

void sub_1004CDE00()
{
  sub_1004CA034(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1004CDE10()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v7 + 9, v5);
}

void sub_1004CDF24(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004C6618(a1, a2, a3, *(void **)(v3 + 16), v3 + v8, *(void **)(v3 + v9), *(void (**)(void, void))(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v3 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1004CE004()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004CE04C()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 73, 7);
}

void sub_1004CE0AC()
{
  sub_1004C6CF8(*(void **)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_1004CE0C4()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1004CE114(int a1)
{
  return sub_1004C74BC(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_1004CE128()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_1004CE214()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1004C36CC(*(void *)(v0 + 16), v0 + v2, *(void (**)(char *, uint64_t, uint64_t))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 8), *(char **)(v0 + ((((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004CE2D8()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v2 | 7);
}

void sub_1004CE430(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v6;
  id v10 = *(void **)(v2 + v7);
  uint64_t v11 = (uint64_t *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  sub_1004C4CBC(a1, a2, v8, v9, v10, v12, v13);
}

uint64_t sub_1004CE4F4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CE52C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8 + 16, v6);
}

void sub_1004CE628(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void (**)(void, id))(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  uint64_t v9 = v1 + v4;
  uint64_t v10 = *(void *)(v1 + v6);
  char v11 = *(unsigned char *)(v1 + v6 + 8);
  uint64_t v12 = (uint64_t *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  sub_1004C77E8(a1, v7, v8, v9, v10, v11, v13, v14);
}

void sub_1004CE6E0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void (*a7)(void, id), uint64_t a8)
{
  uint64_t v66 = a4;
  uint64_t v67 = a6;
  uint64_t v64 = a3;
  LODWORD(v69) = a2;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  uint64_t v68 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  uint64_t v70 = v19;
  if (a5)
  {
    unint64_t v20 = self;
    swift_retain();
    id v21 = a5;
    id v63 = [v20 defaultManager];
    sub_1000CBE70((uint64_t *)&unk_1007087F0);
    uint64_t v22 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v59 = ~v22;
    uint64_t v60 = v22 | 7;
    uint64_t v23 = swift_allocObject();
    long long v58 = xmmword_1005A0030;
    *(_OWORD *)(v23 + 16) = xmmword_1005A0030;
    uint64_t v62 = v13;
    id v65 = *(void (**)(void))(v13 + 16);
    ((void (*)(uint64_t, uint64_t, uint64_t))v65)(v23 + ((v22 + 32) & ~v22), a1, v12);
    id v24 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
    id v25 = v21;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v24 initWithURLs:isa destinationFolder:v25];

    id v61 = v25;
    [v27 setLastUsageUpdatePolicy:2];
    [v27 setShouldBounceOnCollision:1];
    uint64_t v28 = a1;
    uint64_t v29 = v66;
    if (v66)
    {
      sub_1000CBE70(&qword_100708D68);
      uint64_t v30 = (int *)(sub_1000CBE70((uint64_t *)&unk_100708D70) - 8);
      unint64_t v31 = (*(unsigned __int8 *)(*(void *)v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v30 + 80);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = v58;
      uint64_t v33 = (void *)(v32 + v31 + v30[14]);
      v65();
      *uint64_t v33 = v64;
      v33[1] = v29;
      swift_bridgeObjectRetain();
      id v34 = v27;
      sub_100495550(v32);
      sub_1000BAE04((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
      Class v35 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v34 setTargetFilenamesByURL:v35];
    }
    URL.startAccessingSecurityScopedResource()();
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v37 = v68;
    ((void (*)(char *, uint64_t, uint64_t))v65)(v68, v28, v12);
    uint64_t v38 = (v22 + 16) & v59;
    unint64_t v39 = (v14 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v40 = (v39 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = swift_allocObject();
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v42 + v38, v37, v12);
    *(void *)(v42 + v39) = v36;
    uint64_t v43 = (uint64_t (**)())(v42 + v40);
    uint64_t v44 = (uint64_t (*)())v70;
    *uint64_t v43 = sub_10023F918;
    v43[1] = v44;
    *(void *)(v42 + v41) = v27;
    unint64_t v45 = v42 + ((v41 + 15) & 0xFFFFFFFFFFFFFFF8);
    id v46 = v61;
    *(void *)unint64_t v45 = v61;
    *(unsigned char *)(v45 + 8) = v69 & 1;
    aBlock[4] = (uint64_t)sub_1004CDE0C;
    void aBlock[5] = v42;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001950CC;
    void aBlock[3] = (uint64_t)&unk_1006B17D8;
    uint64_t v47 = _Block_copy(aBlock);
    id v48 = v27;
    id v49 = v46;
    id v50 = v48;
    swift_retain();
    swift_release();
    [v50 setActionCompletionBlock:v47];
    _Block_release(v47);

    id v51 = v63;
    [v63 scheduleAction:v50];
    swift_release();
  }
  else
  {
    uint64_t v69 = a1;
    swift_retain();
    static Logger.UI.getter();
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v68 = (char *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v68;
      *(_DWORD *)uint64_t v54 = 136315394;
      uint64_t v72 = sub_10009B0E4(0xD00000000000005DLL, 0x80000001005FAB90, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v72 = 0;
      sub_1000CBE70(&qword_10070B670);
      uint64_t v55 = String.init<A>(describing:)();
      uint64_t v72 = sub_10009B0E4(v55, v56, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "%s importDocument: Unable to import the destination FPItem: %s", (uint8_t *)v54, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    URL.lastPathComponent.getter();
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v50 = (id)DOCErrorNoLocationAvailableError();

    a7(0, v50);
    swift_release();
  }
}

uint64_t sub_1004CEE60()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;

  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v6);
}

id sub_1004CEF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 24) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  uint64_t v10 = *(void **)(v2 + 16);
  uint64_t v11 = v2 + v9;
  uint64_t v12 = (uint64_t *)(v2 + ((v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];

  return sub_1004C4788(a1, a2, v10, v2 + v7, v11, v13, v14);
}

uint64_t sub_1004CF030()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CF040()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004CF068()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004CF0AC()
{
  return sub_1004C4BD8(*(void (**)(char *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1004CF0D0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v7 + 9, v5);
}

void sub_1004CF1B8(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void **)(v1 + v7);
  uint64_t v11 = *(void (**)(void, id))(v1 + v6);
  uint64_t v12 = *(void *)(v1 + v6 + 8);
  uint64_t v13 = v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void **)v13;
  int v15 = *(unsigned __int8 *)(v13 + 8);

  sub_1004C5D6C(a1, v8, v9, v11, v12, v10, v14, v15);
}

void sub_1004CF28C(uint64_t a1)
{
  sub_1004C5218(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1004CF29C()
{
  swift_release();

  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004CF2E4()
{
  return sub_1004C530C(*(void (**)(char *, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1004CF2F0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004CF328(uint64_t a1, uint64_t a2)
{
  sub_1004C7CDC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1004CF330()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1004CF420()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004CF4EC()
{
  type metadata accessor for URL();
  uint64_t v1 = *(void (**)(char *, id))(v0 + 16);

  return sub_1004CACE4(v1);
}

void sub_1004CF550(uint64_t a1, uint64_t a2)
{
  sub_1004CAE08(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_1006B19F0, (uint64_t)sub_1004CF594, (uint64_t)&unk_1006B1A08);
}

uint64_t sub_1004CF598()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1004CF69C(uint64_t a1, uint64_t a2)
{
  return sub_1004CF7D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, char *, void, void, void))sub_1004C7E30);
}

uint64_t sub_1004CF6B8()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_1004CF7BC(uint64_t a1, uint64_t a2)
{
  return sub_1004CF7D4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, char *, void, void, void))sub_1004C8140);
}

uint64_t sub_1004CF7D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, char *, void, void, void))
{
  uint64_t v7 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return a3(a1, a2, *((void *)v3 + 2), *((void *)v3 + 3), *((void *)v3 + 4), *((void *)v3 + 5), &v3[v8], *(void *)&v3[v9], *(void *)&v3[v9 + 8], *(void *)&v3[(v9 + 23) & 0xFFFFFFFFFFFFFFF8]);
}

uint64_t sub_1004CF8A0()
{
  return sub_1004C85FC(*(void (**)(char *, void))(v0 + 16));
}

void sub_1004CF8A8(uint64_t a1, uint64_t a2)
{
  sub_1004CAE08(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t)&unk_1006B1BF8, (uint64_t)sub_1004CF594, (uint64_t)&unk_1006B1C10);
}

uint64_t sub_1004CF8EC()
{
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004CF930()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_errorRelease();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1004CFA74()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return (*(uint64_t (**)(unint64_t, void))(v0 + 16))(v0 + v2, *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004CFC0C()
{
  return 0x73656C6966;
}

uint64_t sub_1004CFC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656C6966 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1004CFCB0(uint64_t a1)
{
  unint64_t v2 = sub_1004D0718();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004CFCEC(uint64_t a1)
{
  unint64_t v2 = sub_1004D0718();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1004CFD28@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1004D05A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_1004CFD54(char a1)
{
  unint64_t result = 1936154996;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6C62617463656A65;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x656C746974627573;
      break;
    case 5:
      unint64_t result = 0x666E496572616873;
      break;
    case 6:
      unint64_t result = 0x614E656372756F73;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1004CFE54(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 2:
      unint64_t result = 0x7974706D65;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    case 4:
      unint64_t result = 0x626967696C656E69;
      break;
    case 5:
      unint64_t result = 0x616F6C7055746F6ELL;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x50676E69776F6873;
      break;
    case 8:
      unint64_t result = 0x6F546E7275746572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1004CFF9C()
{
  return sub_1004CFD54(*v0);
}

uint64_t sub_1004CFFA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004D083C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004CFFCC(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1004CFFD8(uint64_t a1)
{
  unint64_t v2 = sub_1004D14A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004D0014(uint64_t a1)
{
  unint64_t v2 = sub_1004D14A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_1004D0050@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004D0B1C(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_OWORD *)(a2 + 64) = v6[4];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_1004D009C(char *a1, char *a2)
{
  return sub_1004C1478(*a1, *a2);
}

Swift::Int sub_1004D00A8()
{
  return Hasher._finalize()();
}

uint64_t sub_1004D00F0()
{
  return sub_10010CAFC();
}

Swift::Int sub_1004D00F8()
{
  return Hasher._finalize()();
}

unint64_t sub_1004D013C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004D0F44(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1004D016C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1004CFE54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t _s20NodeStatusAppearanceOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20NodeStatusAppearanceOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D02F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20NodeStatusAppearanceOMa()
{
  return &_s20NodeStatusAppearanceON;
}

ValueMetadata *type metadata accessor for DOCDebugUIScenarioCollection()
{
  return &type metadata for DOCDebugUIScenarioCollection;
}

uint64_t sub_1004D033C()
{
  return RawRepresentable<>.init(from:)();
}

unint64_t sub_1004D03A0()
{
  unint64_t result = qword_100719028;
  if (!qword_100719028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719028);
  }
  return result;
}

uint64_t sub_1004D03F4(unsigned __int8 *a1, char *a2)
{
  return sub_1004C123C(*a1, *a2);
}

Swift::Int sub_1004D0400()
{
  return sub_10010CFA0();
}

uint64_t sub_1004D040C()
{
  return sub_10010C9EC();
}

Swift::Int sub_1004D0414()
{
  return sub_10010CFA0();
}

unint64_t sub_1004D041C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1004D1B48(*a1);
  *a2 = result;
  return result;
}

void sub_1004D044C(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x676154656E6F6ELL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 2036429415;
      goto LABEL_3;
    case 2:
      *a1 = 0x6E65657267;
      a1[1] = 0xE500000000000000;
      break;
    case 3:
      *a1 = 0x656C70727570;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 1702194274;
      a1[1] = 0xE400000000000000;
      break;
    case 5:
      *a1 = 0x776F6C6C6579;
      a1[1] = 0xE600000000000000;
      break;
    case 6:
      *a1 = 6579570;
      a1[1] = 0xE300000000000000;
      break;
    case 7:
      *a1 = 0x65676E61726FLL;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1004D0540()
{
  return RawRepresentable<>.init(from:)();
}

void *sub_1004D05A0(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100719030);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = sub_1000A6B78(a1, a1[3]);
  sub_1004D0718();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_10009B1B8((uint64_t)a1);
  }
  else
  {
    sub_1000CBE70(&qword_100719040);
    sub_1004D076C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    BOOL v7 = (void *)v9[1];
    sub_10009B1B8((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1004D0718()
{
  unint64_t result = qword_100719038;
  if (!qword_100719038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719038);
  }
  return result;
}

unint64_t sub_1004D076C()
{
  unint64_t result = qword_100719048;
  if (!qword_100719048)
  {
    sub_100074618(&qword_100719040);
    sub_1004D07E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719048);
  }
  return result;
}

unint64_t sub_1004D07E8()
{
  unint64_t result = qword_100719050;
  if (!qword_100719050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719050);
  }
  return result;
}

uint64_t sub_1004D083C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1936154996 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001005F91D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C62617463656A65 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001005FAD70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x666E496572616873 && a2 == 0xE90000000000006FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x614E656372756F73 && a2 == 0xEA0000000000656DLL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1004D0B1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_1000CBE70(&qword_100719078);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A6B78(a1, a1[3]);
  sub_1004D14A8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    sub_10009B1B8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000CBE70(&qword_100719088);
    char v34 = 0;
    sub_1004D14FC();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v9 = v31;
    char v34 = 1;
    sub_1004D15C4();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    int v10 = v31;
    LOBYTE(v31) = 2;
    int v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v34 = 3;
    sub_1004D1618();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    int v30 = v10;
    uint64_t v29 = v31;
    int v28 = v32;
    LOBYTE(v31) = 4;
    uint64_t v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v13 = v12;
    uint64_t v26 = v11;
    id v27 = a2;
    LOBYTE(v31) = 5;
    swift_bridgeObjectRetain();
    uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v16 = v15;
    uint64_t v25 = v14;
    LOBYTE(v31) = 6;
    swift_bridgeObjectRetain();
    uint64_t v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v19 = v18;
    unint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v24 = v17;
    v20(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_10009B1B8((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = v27;
    *id v27 = v9;
    *((unsigned char *)v22 + 8) = v30;
    *((unsigned char *)v22 + 9) = v33;
    void v22[2] = v29;
    *((unsigned char *)v22 + 24) = v28;
    v22[4] = v26;
    v22[5] = v13;
    v22[6] = v25;
    v22[7] = v16;
    v22[8] = v24;
    v22[9] = v19;
  }
  return result;
}

unint64_t sub_1004D0F44(Swift::String string)
{
  object = string._object;
  v2._unint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068B440, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 9) {
    return 9;
  }
  else {
    return v3;
  }
}

unint64_t sub_1004D0F90()
{
  unint64_t result = qword_100719058;
  if (!qword_100719058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719058);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCDebugUIScenarioCollection.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004D1080);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCDebugUIScenarioCollection.CodingKeys()
{
  return &type metadata for DOCDebugUIScenarioCollection.CodingKeys;
}

uint64_t _s8SettingsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s8SettingsVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8SettingsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SettingsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8SettingsVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s8SettingsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *_s8SettingsVMa()
{
  return &_s8SettingsVN;
}

unint64_t sub_1004D13A4()
{
  unint64_t result = qword_100719060;
  if (!qword_100719060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719060);
  }
  return result;
}

unint64_t sub_1004D13FC()
{
  unint64_t result = qword_100719068;
  if (!qword_100719068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719068);
  }
  return result;
}

unint64_t sub_1004D1454()
{
  unint64_t result = qword_100719070;
  if (!qword_100719070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719070);
  }
  return result;
}

unint64_t sub_1004D14A8()
{
  unint64_t result = qword_100719080;
  if (!qword_100719080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719080);
  }
  return result;
}

unint64_t sub_1004D14FC()
{
  unint64_t result = qword_100719090;
  if (!qword_100719090)
  {
    sub_100074618(&qword_100719088);
    sub_1004D1570();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719090);
  }
  return result;
}

unint64_t sub_1004D1570()
{
  unint64_t result = qword_100719098;
  if (!qword_100719098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719098);
  }
  return result;
}

unint64_t sub_1004D15C4()
{
  unint64_t result = qword_1007190A0;
  if (!qword_1007190A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190A0);
  }
  return result;
}

unint64_t sub_1004D1618()
{
  unint64_t result = qword_1007190A8;
  if (!qword_1007190A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190A8);
  }
  return result;
}

uint64_t _s8SettingsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8SettingsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D17C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8SettingsV10CodingKeysOMa()
{
  return &_s8SettingsV10CodingKeysON;
}

uint64_t _s3TagOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s3TagOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D195CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s3TagOMa()
{
  return &_s3TagON;
}

unint64_t sub_1004D1998()
{
  unint64_t result = qword_1007190B0;
  if (!qword_1007190B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190B0);
  }
  return result;
}

unint64_t sub_1004D19F0()
{
  unint64_t result = qword_1007190B8;
  if (!qword_1007190B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190B8);
  }
  return result;
}

unint64_t sub_1004D1A48()
{
  unint64_t result = qword_1007190C0;
  if (!qword_1007190C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190C0);
  }
  return result;
}

unint64_t sub_1004D1AA0()
{
  unint64_t result = qword_1007190C8;
  if (!qword_1007190C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190C8);
  }
  return result;
}

unint64_t sub_1004D1AF4()
{
  unint64_t result = qword_1007190D0;
  if (!qword_1007190D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007190D0);
  }
  return result;
}

unint64_t sub_1004D1B48(Swift::String string)
{
  object = string._object;
  v2._unint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068B538, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

id sub_1004D1B94()
{
  id v1 = [*v0 attributedText];

  return v1;
}

void sub_1004D1BCC(void *a1)
{
  [*v1 setAttributedText:a1];
}

void *sub_1004D1C14()
{
  id v1 = *(void **)(*v0 + OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText);
  id v2 = v1;
  return v1;
}

void sub_1004D1C48(void *a1)
{
  id v2 = (char *)*v1;
  unint64_t v3 = *(void **)((char *)*v1 + OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText);
  *(void *)&v2[OBJC_IVAR____TtC5Files19DOCPlatterizedLabel_attributedText] = a1;
  id v4 = a1;

  [v2 setNeedsUpdateConfiguration];
  [v2 invalidateIntrinsicContentSize];
}

id sub_1004D1CC0()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount);
  id result = (id)_DocumentManagerBundle();
  id v4 = result;
  if (v2 < 1)
  {
    if (result)
    {
      v15._object = (void *)0x80000001005FB1D0;
      v11._uint64_t countAndFlagsBits = 0x6C6C4120776F6853;
      v11._object = (void *)0xE800000000000000;
      v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v12._object = (void *)0xEB00000000656C62;
      v13._uint64_t countAndFlagsBits = 0;
      v13._object = (void *)0xE000000000000000;
      v15._uint64_t countAndFlagsBits = 0xD000000000000028;
      uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v4, v13, v15)._countAndFlagsBits;

      return (id)countAndFlagsBits;
    }
  }
  else
  {
    if (result)
    {
      v14._uint64_t countAndFlagsBits = 0xD00000000000005CLL;
      v14._object = (void *)0x80000001005FB200;
      v5._uint64_t countAndFlagsBits = 0x6C6C4120776F6853;
      v5._object = (void *)0xED00002964252820;
      v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v6._object = (void *)0xEB00000000656C62;
      v7._uint64_t countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v14);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v8 = swift_allocObject();
      uint64_t v9 = *(void *)(v0 + v1);
      *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
      *(void *)(v8 + 56) = &type metadata for Int;
      *(void *)(v8 + 64) = &protocol witness table for Int;
      *(void *)(v8 + 32) = v9;
      uint64_t countAndFlagsBits = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (id)countAndFlagsBits;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004D1E80()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  }
  else
  {
    id v4 = sub_1004D1EF4(v0);
    Swift::String v5 = *(void **)v1;
    *(void *)uint64_t v1 = v4;
    *((void *)v1 + 1) = v6;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1004D1EF4(void *a1)
{
  id v2 = [objc_allocWithZone((Class)UILabel) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v2 setNumberOfLines:0];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setAdjustsFontForContentSizeCategory:1];
  if (qword_100705270 != -1) {
    swift_once();
  }
  id v3 = (void *)qword_1007190E0;
  double v4 = *(double *)&qword_1007190E8;
  Swift::String v5 = self;
  id v6 = v3;
  id result = [v5 _preferredFontForTextStyle:v6 weight:v4];
  if (result)
  {
    uint64_t v8 = result;

    [v2 setFont:v8];
    UIAccessibilityTraits v9 = UIAccessibilityTraitHeader;
    id v10 = v2;
    unint64_t v11 = (unint64_t)[v10 accessibilityTraits];
    if ((v9 & ~v11) != 0) {
      UIAccessibilityTraits v12 = v9;
    }
    else {
      UIAccessibilityTraits v12 = 0;
    }
    [v10 setAccessibilityTraits:v12 | v11];

    id v13 = [a1 contentView];
    [v13 addSubview:v10];

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004D20A4()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton;
  if (*(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton];
  }
  else
  {
    uint64_t v2 = sub_1004D210C(v0);
    *(void *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1004D210C(void *a1)
{
  uint64_t v37 = type metadata accessor for DOCVibrancy.Style.Weight();
  uint64_t v34 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_100710C50);
  __chkstk_darwin(v4 - 8);
  uint64_t v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIButton.Configuration();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  id v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  id v13 = (char *)&v34 - v12;
  __chkstk_darwin(v11);
  Swift::String v15 = (char *)&v34 - v14;
  uint64_t v16 = self;

  Class v35 = v15;
  static UIButton.Configuration.borderless()();

  sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v17(v13, v15, v6);
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17(v10, v13, v6);
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1004DB6CC;
  *(void *)(v19 + 24) = v18;
  swift_retain_n();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  unint64_t v20 = (void *)UIButton.init(configuration:primaryAction:)();
  swift_release();
  id v21 = *(void (**)(char *, uint64_t))(v7 + 8);
  v21(v13, v6);
  swift_release();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = a1;
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1004DB6D4;
  void aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  void aBlock[3] = &unk_1006B2350;
  uint64_t v24 = _Block_copy(aBlock);
  swift_release();
  [v20 setConfigurationUpdateHandler:v24];
  _Block_release(v24);
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  LODWORD(v25) = 1148846080;
  [v20 setContentCompressionResistancePriority:0 forAxis:v25];
  uint64_t v26 = v34;
  uint64_t v27 = v37;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v3, enum case for DOCVibrancy.Style.Weight.primary(_:), v37);
  id v28 = v20;
  uint64_t v29 = v36;
  static DOCVibrancy.Style.stroke(_:)();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v27);
  uint64_t v30 = type metadata accessor for DOCVibrancy.Style();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  sub_1000CBE70(&qword_100719250);
  swift_allocObject();
  uint64_t v31 = DOCViewDecorator.init(_:wrappedForVibrancy:)();
  id v32 = [v23 contentView];
  UIView.addSubview<A>(_:)();

  v21(v35, v6);
  return v31;
}

void sub_1004D2660()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void (**)(void *))(Strong
                                       + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler);
    if (v2)
    {
      swift_retain();
      v2(v1);
      sub_1000A7258((uint64_t)v2);
    }
  }
}

uint64_t sub_1004D26F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100706748);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v25 - v10;
  uint64_t v12 = type metadata accessor for UIButton.Configuration();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v17 = (void *)result;
    UIButton.configuration.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {

      return sub_1000CBBA4((uint64_t)v11, &qword_100706748);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
      id v18 = v17;
      UIView.doc_tintColorIgnoringVibrancyContainer.getter();

      UIButton.Configuration.baseForegroundColor.setter();
      uint64_t v19 = self;
      v25[0] = v9;
      unint64_t v20 = (void *)v19;
      v25[1] = a1;
      swift_bridgeObjectRetain();
      id v21 = [v20 preferredFontForTextStyle:UIFontTextStyleFootnote];
      AttributeContainer.init()();
      AttributedString.init(_:attributes:)();
      uint64_t KeyPath = swift_getKeyPath();
      v25[-2] = __chkstk_darwin(KeyPath);
      swift_getKeyPath();
      uint64_t v25[2] = v21;
      sub_1002DC380();
      AttributedString.subscript.setter();
      uint64_t v23 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 0, 1, v23);
      UIButton.Configuration.attributedTitle.setter();
      uint64_t v24 = v25[0];
      (*(void (**)(void, char *, uint64_t))(v13 + 16))(v25[0], v15, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v12);
      UIButton.configuration.setter();

      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  return result;
}

id sub_1004D2AF8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint);
  }
  else
  {
    uint64_t v4 = v0;
    sub_1004D20A4();
    uint64_t v5 = (void *)DOCViewDecorator.leadingAnchor.getter();
    swift_release();
    id v6 = sub_1004D1E80();
    id v7 = [v6 trailingAnchor];

    id v8 = [v5 constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:v7 multiplier:1.0];
    LODWORD(v9) = 1148682240;
    [v8 setPriority:v9];
    uint64_t v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v8;
    id v3 = v8;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1004D2BE8()
{
  return sub_10048D1DC(&OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator);
}

id sub_1004D2BF4()
{
  return sub_10048D1DC(&OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator);
}

id sub_1004D2C00()
{
  if (!*(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8]) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  if (String.count.getter() < 1)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    id v16 = objc_allocWithZone((Class)NSAttributedString);
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v16 initWithString:v17];

    return v18;
  }
  id v1 = [v0 traitCollection];
  id v2 = sub_1004D98C4(v1);

  sub_1000CBE70((uint64_t *)&unk_100706750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = NSFontAttributeName;
  *(void *)(inited + 64) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
  *(void *)(inited + 40) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = NSFontAttributeName;
  id v5 = v2;
  sub_10009CC48(inited);
  sub_10009E6C4(0, &qword_10070E2D0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1004DB71C((unint64_t *)&qword_100706230, type metadata accessor for Key);
  Class v8 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v9 = [self requestForChainedTags:isa tagDimension:v7 text:v8 textAttributes:16.0];

  if (v9)
  {
    swift_bridgeObjectRelease();
    [v9 setTagToTitleSpacing:8.0];
    [v5 capHeight];
    double v11 = (v10 + -24.0) * 0.5;
    if (v11 < 0.0) {
      double v11 = 0.0;
    }
    [v9 setTagBaselineAdjustment:v11];
    id v12 = v9;
    [v12 setLayoutDirection:[v0 effectiveUserInterfaceLayoutDirection]];

    id v13 = [self shared];
    id v14 = [v13 renderAttributedStringWithRequest:v12];

    return v14;
  }
  else
  {
    id v19 = objc_allocWithZone((Class)NSAttributedString);
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithString:v20];

    return v21;
  }
}

uint64_t sub_1004D2F88(uint64_t a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags];
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = a1;
  unint64_t v3 = swift_bridgeObjectRetain();
  unsigned __int8 v4 = sub_10028EC7C(v3, v2);
  swift_bridgeObjectRelease();
  if (v4)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1004DB838;
    *(void *)(v8 + 24) = v7;
    v12[4] = sub_100162A48;
    v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100087990;
    v12[3] = &unk_1006B2300;
    id v9 = _Block_copy(v12);
    double v10 = v1;
    swift_retain();
    swift_release();
    [v6 performWithoutAnimation:v9];
    _Block_release(v9);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

void sub_1004D3158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
  if (v4)
  {
    if (a2)
    {
      BOOL v5 = *(void *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title] == a1 && v4 == a2;
      if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return;
      }
    }
  }
  else if (!a2)
  {
    return;
  }
  id v6 = &v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons];
  swift_beginAccess();
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v7 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_14;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v19 >= v12) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v8 + 8 * v19);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v19 + 1;
      if (v19 + 1 >= v12) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v8 + 8 * v13);
      if (!v20)
      {
        int64_t v13 = v19 + 2;
        if (v19 + 2 >= v12) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v8 + 8 * v13);
        if (!v20)
        {
          int64_t v13 = v19 + 3;
          if (v19 + 3 >= v12) {
            goto LABEL_32;
          }
          unint64_t v20 = *(void *)(v8 + 8 * v13);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_31:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_14:
    id v16 = *(char **)(*(void *)(v7 + 56) + 8 * v15);
    NSString v17 = *(void **)&v16[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
    id v18 = v16;
    [v17 setNeedsUpdateConfiguration];
    [v17 invalidateIntrinsicContentSize];
  }
  int64_t v21 = v19 + 4;
  if (v21 < v12)
  {
    unint64_t v20 = *(void *)(v8 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        int64_t v13 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          goto LABEL_35;
        }
        if (v13 >= v12) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v8 + 8 * v13);
        ++v21;
        if (v20) {
          goto LABEL_31;
        }
      }
    }
    int64_t v13 = v21;
    goto LABEL_31;
  }
LABEL_32:
  swift_release();
  uint64_t v22 = self;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v2;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1004DB648;
  *(void *)(v24 + 24) = v23;
  aBlock[4] = sub_100162A48;
  void aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  void aBlock[3] = &unk_1006B2210;
  double v25 = _Block_copy(aBlock);
  uint64_t v26 = v2;
  swift_retain();
  swift_release();
  [v22 performWithoutAnimation:v25];
  _Block_release(v25);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return;
  }
LABEL_36:
  __break(1u);
}

void sub_1004D3488(uint64_t a1)
{
  id v2 = sub_1004D2C00();
  id v3 = sub_1004D1E80();
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(id, uint64_t, uint64_t))(v5 + 16);
  id v8 = v3;
  v7(v2, ObjectType, v5);

  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
  void *v9 = v3;
  v9[1] = v5;

  id v11 = sub_1004D1E80();
  [v11 layoutIfNeeded];
}

uint64_t sub_1004D3558(uint64_t result)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount];
  *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = result;
  if (v2 != result)
  {
    id v3 = (uint64_t *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    if (*(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8])
    {
      uint64_t v4 = v3[4];
      sub_100208814(*v3, *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8]);
      char v5 = *(unsigned char *)(v4 + 24);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      char v5 = 0;
    }
    id v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(unsigned char *)(v7 + 24) = v5;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_100220114;
    *(void *)(v8 + 24) = v7;
    v12[4] = sub_100162A48;
    v12[5] = v8;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100087990;
    v12[3] = &unk_1006B2288;
    uint64_t v9 = _Block_copy(v12);
    uint64_t v10 = v1;
    swift_retain();
    swift_release();
    [v6 performWithoutAnimation:v9];
    _Block_release(v9);
    int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1004D3728()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2);
  char v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v36 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v36 - v8;
  id v10 = [v0 contentView];
  type metadata accessor for DOCItemCollectionView();
  id v11 = (void *)UIView.doc_nearestAncestor<A>(ofType:)();

  double v12 = 0.0;
  if (v11)
  {
    id v13 = [v11 doc_nearestAncestorViewController];

    if (v13)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      uint64_t v14 = swift_dynamicCastClass();
      if (v14 && (uint64_t v15 = v14, (sub_1000975F0() & 1) != 0))
      {
        double v16 = *(double *)(v15
                        + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_tableLayoutSidebarPlainAppearanceMetrics
                        + 32);

        double v12 = v16 + 0.0;
      }
      else
      {
      }
    }
  }
  NSString v17 = *(void (**)(char *, void, uint64_t))(v38 + 104);
  v17(v9, enum case for DOCItemSortMode.DisplayableMode.size(_:), v2);
  id v18 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints];
  swift_beginAccess();
  uint64_t v19 = *(void *)v18;
  if (*(void *)(*(void *)v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_10017C05C((uint64_t)v9);
    if (v21)
    {
      id v22 = *(id *)(*(void *)(v19 + 56) + 8 * v20);
      uint64_t v36 = v5;
      id v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v24 = *(void (**)(char *, uint64_t))(v38 + 8);
      v24(v9, v2);
      [v23 setConstant:v12 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 8]];

      char v5 = v36;
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v38 + 8);
  v24(v9, v2);
LABEL_12:
  uint64_t v25 = (uint64_t)v37;
  v17(v37, enum case for DOCItemSortMode.DisplayableMode.date(_:), v2);
  uint64_t v26 = *(void *)v18;
  if (*(void *)(*(void *)v18 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v27 = sub_10017C05C(v25);
    if (v28)
    {
      id v29 = *(id *)(*(void *)(v26 + 56) + 8 * v27);
      swift_bridgeObjectRelease();
      v24((char *)v25, v2);
      [v29 setConstant:v12 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics]];

      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
  }
  v24((char *)v25, v2);
LABEL_17:
  v17(v5, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v2);
  uint64_t v30 = *(void *)v18;
  if (!*(void *)(*(void *)v18 + 16))
  {
LABEL_21:
    v24(v5, v2);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  unint64_t v31 = sub_10017C05C((uint64_t)v5);
  if ((v32 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  int v33 = v5;
  id v34 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
  swift_bridgeObjectRelease();
  v24(v33, v2);
  [v34 setConstant:v12 + *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 16]];

LABEL_22:
  [*(id *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView] setSpacing:*(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 32] - v12];
  return sub_1004D78E0();
}

uint64_t sub_1004D3B94(void *a1, char *a2)
{
  uint64_t v5 = OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack;
  type metadata accessor for DOCStackView();
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button] = a1;
  v7[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_buttonExtendsFullWidth] = *a2;
  id v8 = a1;

  v30.receiver = v7;
  v30.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView();
  id v9 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v10 = self;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1004D9894;
  *(void *)(v12 + 24) = v11;
  char v28 = sub_1000879B8;
  uint64_t v29 = v12;
  uint64_t v24 = _NSConcreteStackBlock;
  uint64_t v25 = 1107296256;
  uint64_t v26 = sub_100087990;
  unint64_t v27 = &unk_1006B20F8;
  id v13 = _Block_copy(&v24);
  uint64_t v14 = v9;
  swift_retain();
  swift_release();
  [v10 performWithoutAnimation:v13];
  _Block_release(v13);
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13)
  {
    __break(1u);
  }
  else
  {
    double v16 = *(void **)&v14[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack];
    [v16 addArrangedSubview:*(void *)&v14[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button]];
    if (v14[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_buttonExtendsFullWidth] == 1)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
      id v17 = v16;
      id v18 = (void *)static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter();
      [v17 addArrangedSubview:v18];
    }
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v14;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1004D98AC;
    *(void *)(v20 + 24) = v19;
    char v28 = sub_100162A48;
    uint64_t v29 = v20;
    uint64_t v24 = _NSConcreteStackBlock;
    uint64_t v25 = 1107296256;
    uint64_t v26 = sub_100087990;
    unint64_t v27 = &unk_1006B2170;
    char v21 = _Block_copy(&v24);
    id v22 = v14;
    swift_retain();
    swift_release();
    [v10 performWithoutAnimation:v21];

    _Block_release(v21);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (uint64_t)v22;
    }
  }
  __break(1u);
  return result;
}

void sub_1004D3F48(char *a1)
{
  [a1 addSubview:*(void *)&a1[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack]];
  Class isa = (Class)(id)DOCConstraintsToResizeWithSuperview();
  if (!isa)
  {
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [self activateConstraints:isa];
}

void sub_1004D401C(char *a1, double a2)
{
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
  LODWORD(a2) = 1148846080;
  [v3 setContentHuggingPriority:1 forAxis:a2];
  id v4 = [a1 heightAnchor];
  id v5 = [v3 heightAnchor];
  id v6 = [v4 constraintEqualToAnchor:v5];

  [v6 setActive:1];
}

void sub_1004D4108()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_hstack));
  id v1 = *(void **)(v0
                + OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button);
}

id sub_1004D4148()
{
  return sub_1004D94F4(0, type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView);
}

void sub_1004D41B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v8 - 8);
  id v10 = &v36[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1000CBE70(&qword_100719258);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = v2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1000CBC00(v15, (uint64_t)v14, (uint64_t *)&unk_1007086D0);
  sub_1000CBC00(a1, v16, (uint64_t *)&unk_1007086D0);
  id v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1)
    {
      sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_1007086D0);
      return;
    }
  }
  else
  {
    sub_1000CBC00((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_1007086D0);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_1004DB71C(&qword_100719260, (void (*)(uint64_t))&type metadata accessor for DOCItemSortDescriptor);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v19 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_1000CBBA4((uint64_t)v14, (uint64_t *)&unk_1007086D0);
      if (v18) {
        return;
      }
      goto LABEL_8;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_1000CBBA4((uint64_t)v14, &qword_100719258);
LABEL_8:
  sub_1004D78E0();
  uint64_t v20 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess();
  uint64_t v21 = *v20;
  uint64_t v22 = v21 + 64;
  uint64_t v23 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v24 = -1;
  if (v23 < 64) {
    uint64_t v24 = ~(-1 << v23);
  }
  unint64_t v25 = v24 & *(void *)(v21 + 64);
  int64_t v26 = (unint64_t)(v23 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  while (1)
  {
    if (v25)
    {
      unint64_t v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v29 = v28 | (v27 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v33 >= v26) {
      goto LABEL_30;
    }
    unint64_t v34 = *(void *)(v22 + 8 * v33);
    ++v27;
    if (!v34)
    {
      int64_t v27 = v33 + 1;
      if (v33 + 1 >= v26) {
        goto LABEL_30;
      }
      unint64_t v34 = *(void *)(v22 + 8 * v27);
      if (!v34)
      {
        int64_t v27 = v33 + 2;
        if (v33 + 2 >= v26) {
          goto LABEL_30;
        }
        unint64_t v34 = *(void *)(v22 + 8 * v27);
        if (!v34)
        {
          int64_t v27 = v33 + 3;
          if (v33 + 3 >= v26) {
            goto LABEL_30;
          }
          unint64_t v34 = *(void *)(v22 + 8 * v27);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_29:
    unint64_t v25 = (v34 - 1) & v34;
    unint64_t v29 = __clz(__rbit64(v34)) + (v27 << 6);
LABEL_12:
    objc_super v30 = *(char **)(*(void *)(v21 + 56) + 8 * v29);
    unint64_t v31 = *(void **)&v30[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button];
    char v32 = v30;
    [v31 setNeedsUpdateConfiguration];
    [v31 invalidateIntrinsicContentSize];
  }
  int64_t v35 = v33 + 4;
  if (v35 >= v26)
  {
LABEL_30:
    swift_release();
    return;
  }
  unint64_t v34 = *(void *)(v22 + 8 * v35);
  if (v34)
  {
    int64_t v27 = v35;
    goto LABEL_29;
  }
  while (1)
  {
    int64_t v27 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v27 >= v26) {
      goto LABEL_30;
    }
    unint64_t v34 = *(void *)(v22 + 8 * v27);
    ++v35;
    if (v34) {
      goto LABEL_29;
    }
  }
LABEL_33:
  __break(1u);
}

void sub_1004D4638(char a1)
{
  int v2 = v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons];
  v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = a1;
  if (v2 != (a1 & 1))
  {
    [v1 setDeliversTouchesForGesturesToSuperview:(a1 & 1) == 0];
    sub_1004D78E0();
    uint64_t v3 = self;
    uint64_t v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    *(void *)&v1[v4] = sub_1004D7680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v6];

    sub_1004D749C();
  }
}

void sub_1004D4778()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for DOCItemSortMode.DisplayableMode.name(_:), v2);
  Class v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_10017C05C((uint64_t)v5);
    if (v9)
    {
      id v10 = (char *)*(id *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      [*(id *)&v10[OBJC_IVAR____TtCC5Files34DOCItemCollectionViewSectionHeaderP33_2134D5FF2A9D80B134FE49AAFC055C4723SortButtonContainerView_button] setMenu:*(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu)];

      return;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1004D490C()
{
  uint64_t v1 = v0;
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8);
  if (v3)
  {
    unint64_t v4 = v2[3];
    uint64_t v5 = v2[2];
    uint64_t v6 = *v2;
    sub_100208814(*v2, v3);
    swift_bridgeObjectRetain();
    sub_100220130(v6, v3);
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  uint64_t v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title);
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title);
  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8);
  *uint64_t v7 = v5;
  v7[1] = v4;
  sub_1004D3158(v8, v9);
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_100719248);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  uint64_t v11 = (void *)v2[1];
  if (v11)
  {
    uint64_t v12 = v2[4];
    uint64_t v13 = *v2;
    sub_100208814(*v2, v2[1]);
    swift_retain();
    sub_100220130(v13, (uint64_t)v11);
    uint64_t v11 = *(void **)(v12 + 32);
    id v14 = v11;
    swift_release();
  }
  *(void *)(inited + 32) = v11;
  specialized Array._endMutation()();
  uint64_t v15 = *(void **)(inited + 32);
  if (v15)
  {
    id v16 = v15;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  swift_bridgeObjectRelease();
  sub_1004D2F88((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v17 = v2[1];
  if (v17)
  {
    uint64_t v18 = v2[4];
    uint64_t v19 = *v2;
    sub_100208814(*v2, v2[1]);
    swift_retain();
    sub_100220130(v19, v17);
    swift_beginAccess();
    unint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = 0;
  }
  return sub_1004D3558(v21);
}

void sub_1004D4BBC(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) = a1;
  if (v2 != (a1 & 1))
  {
    sub_1004D749C();
    uint64_t v3 = self;
    uint64_t v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    *(void *)(v1 + v4) = sub_1004D7680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v6 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 activateConstraints:v6];
  }
}

void sub_1004D4CF0()
{
  uint64_t v1 = v0;
  if (v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride] == 2
    && !*(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler + 8];
    if (v2)
    {
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = v2;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = sub_100162058;
    }
    else
    {
      uint64_t v5 = 0;
    }
    sub_1000C0640(v2);
    sub_1000A7258((uint64_t)v5);
  }
  sub_1004D20A4();
  DOCViewDecorator.isHidden.setter();
  swift_release();
  id v10 = sub_1004D2AF8();
  sub_1004D20A4();
  char v6 = DOCViewDecorator.isHidden.getter();
  swift_release();
  if (v6)
  {
    char v7 = 0;
  }
  else
  {
    id v8 = [v1 traitCollection];
    id v9 = [v8 preferredContentSizeCategory];

    LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter();
    char v7 = v8 ^ 1;
  }
  [v10 setActive:v7 & 1];
}

uint64_t sub_1004D4E8C(uint64_t *a1)
{
  sub_1004DB764((uint64_t)a1, (uint64_t)v18);
  uint64_t v4 = v18[0];
  uint64_t v3 = v18[1];
  uint64_t v5 = v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection;
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection + 8);
  if (!v6)
  {
    sub_1004DB764((uint64_t)a1, (uint64_t)v22);
    if (!v23) {
      goto LABEL_14;
    }
LABEL_10:
    sub_100208814(v7, v6);
    sub_1004DB7CC(a1);
    sub_100220130(v7, v6);
    sub_100220130(v4, v3);
    return sub_1004D490C();
  }
  sub_1004DB764((uint64_t)a1, (uint64_t)v22);
  if (!v23) {
    goto LABEL_10;
  }
  if (v7 == v4 && v6 == v3)
  {
    sub_100208814(v4, v3);
    sub_100208814(v4, v3);
    sub_1004DB7CC(a1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100220130(v4, v3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100208814(v7, v6);
    sub_100208814(v7, v6);
    sub_1004DB7CC(a1);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100220130(v7, v6);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return sub_1004D490C();
    }
  }
LABEL_14:
  uint64_t v11 = *(void *)(v5 + 8);
  if (v11)
  {
    uint64_t v12 = *(void *)(v5 + 32);
    swift_beginAccess();
    unint64_t v13 = *(void *)(v12 + 16);
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1004DB764((uint64_t)a1, (uint64_t)v19);
    if (!v20) {
      return sub_1004D490C();
    }
  }
  else
  {
    uint64_t result = sub_1004DB764((uint64_t)a1, (uint64_t)v19);
    if (!v20) {
      return result;
    }
    uint64_t v14 = 0;
  }
  uint64_t v15 = v21;
  uint64_t result = swift_beginAccess();
  unint64_t v16 = *(void *)(v15 + 16);
  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11) {
      goto LABEL_23;
    }
    return sub_1004D490C();
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v11) {
    return sub_1004D490C();
  }
LABEL_23:
  if (v14 != v17) {
    return sub_1004D490C();
  }
  return result;
}

uint64_t sub_1004D51B0(uint64_t a1, char a2)
{
  if (a2)
  {
    id v3 = *(id *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString);
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  else
  {
    id v3 = sub_1004D1CC0();
    uint64_t v4 = v5;
  }
  uint64_t v6 = (void *)(a1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle);
  *uint64_t v6 = v3;
  v6[1] = v4;
  swift_bridgeObjectRelease();
  sub_1004D20A4();
  DOCViewDecorator<>.setNeedsUpdateConfiguration()();
  swift_release();
  sub_1004D20A4();
  DOCViewDecorator.layoutIfNeeded()();

  return swift_release();
}

char *sub_1004D5254(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  char v9 = v4;
  uint64_t result = (char *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = (Swift::String *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString];
    v106._object = (void *)0x80000001005FB260;
    v13._uint64_t countAndFlagsBits = 0x73654C20776F6853;
    v13._object = (void *)0xE900000000000073;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._object = (void *)0xEB00000000656C62;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v106._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    Swift::String v16 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v11, v15, v106);

    *uint64_t v12 = v16;
    uint64_t v17 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
    void *v17 = 0;
    v17[1] = 0;
    uint64_t v18 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle];
    *uint64_t v18 = 0;
    v18[1] = 0xE000000000000000;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator] = 0;
    uint64_t v19 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
    *(_OWORD *)(v19 + 8) = xmmword_1005AE790;
    *(_OWORD *)(v19 + 24) = xmmword_1005AE790;
    long long v20 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
    *(_OWORD *)(v19 + 40) = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
    *(_WORD *)uint64_t v19 = 256;
    *(_OWORD *)(v19 + 56) = v20;
    v19[72] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = _swiftEmptyArrayStorage;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = _swiftEmptyArrayStorage;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = _swiftEmptyArrayStorage;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = _swiftEmptyArrayStorage;
    uint64_t v21 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
    void *v21 = 0;
    v21[1] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = 0;
    uint64_t v22 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
    *(_OWORD *)uint64_t v22 = 0u;
    *((_OWORD *)v22 + 1) = 0u;
    *((void *)v22 + 4) = 0;
    uint64_t v23 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
    *(void *)&v9[v23] = [objc_allocWithZone((Class)UIStackView) init];
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons] = &_swiftEmptyDictionarySingleton;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints] = &_swiftEmptyDictionarySingleton;
    uint64_t v24 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
    uint64_t v25 = type metadata accessor for DOCItemSortDescriptor();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride] = 2;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
    v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = 0;
    int64_t v26 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
    *(_OWORD *)int64_t v26 = 0u;
    *((_OWORD *)v26 + 1) = 0u;
    *((void *)v26 + 4) = 0;
    int64_t v27 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
    *int64_t v27 = 0;
    v27[1] = 0;
    unint64_t v28 = &v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
    *unint64_t v28 = 0;
    v28[1] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView] = 0;
    *(void *)&v9[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX] = 0;

    v105.receiver = v9;
    v105.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader();
    unint64_t v29 = (char *)[v105 initWithFrame:a1, a2, a3, a4];
    sub_1004D20A4();
    DOCViewDecorator<>.buttonType.getter();
    swift_release();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1005A00D0;
    sub_1004D20A4();
    unint64_t v31 = (void *)DOCViewDecorator.trailingAnchor.getter();
    swift_release();
    id v32 = [v29 contentView];
    id v33 = [v32 layoutMarginsGuide];

    id v34 = [v33 trailingAnchor];
    id v35 = [v31 constraintEqualToAnchor:v34];

    *(void *)(v30 + 32) = v35;
    sub_1004D20A4();
    uint64_t v36 = (void *)DOCViewDecorator.firstBaselineAnchor.getter();
    swift_release();
    id v37 = sub_1004D1E80();
    id v38 = [v37 firstBaselineAnchor];

    id v39 = [v36 constraintEqualToAnchor:v38];
    *(void *)(v30 + 40) = v39;
    id v40 = [v29 contentView];
    id v41 = [v40 bottomAnchor];

    id v42 = sub_1004D1E80();
    id v43 = [v42 bottomAnchor];

    uint64_t v44 = (double *)&v29[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
    id v45 = [v41 constraintEqualToAnchor:v43 constant:*(double *)&v29[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 24]];

    *(void *)(v30 + 48) = v45;
    specialized Array._endMutation()();
    *(void *)&v29[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = v30;
    swift_bridgeObjectRelease();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_1005A1560;
    sub_1004D20A4();
    uint64_t v47 = (void *)DOCViewDecorator.leadingAnchor.getter();
    swift_release();
    id v48 = sub_1004D1E80();
    id v49 = [v48 leadingAnchor];

    id v50 = [v47 constraintEqualToAnchor:v49];
    *(void *)(v46 + 32) = v50;
    sub_1004D20A4();
    id v51 = (void *)DOCViewDecorator.trailingAnchor.getter();
    swift_release();
    id v52 = [v29 contentView];
    id v53 = [v52 layoutMarginsGuide];

    id v54 = [v53 trailingAnchor];
    id v55 = [v51 constraintLessThanOrEqualToAnchor:v54];

    *(void *)(v46 + 40) = v55;
    sub_1004D20A4();
    unint64_t v56 = (void *)DOCViewDecorator.firstBaselineAnchor.getter();
    swift_release();
    id v57 = sub_1004D1E80();
    id v58 = [v57 lastBaselineAnchor];

    id v59 = [v56 constraintEqualToSystemSpacingBelowAnchor:v58 multiplier:1.0];
    *(void *)(v46 + 48) = v59;
    id v60 = [v29 contentView];
    id v61 = [v60 bottomAnchor];

    sub_1004D20A4();
    uint64_t v62 = (void *)DOCViewDecorator.lastBaselineAnchor.getter();
    swift_release();
    id v63 = [v61 constraintEqualToSystemSpacingBelowAnchor:v62 multiplier:1.0];

    *(void *)(v46 + 56) = v63;
    specialized Array._endMutation()();
    *(void *)&v29[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = v46;
    swift_bridgeObjectRelease();
    id v64 = sub_1004D1E80();
    id v65 = [v64 topAnchor];

    id v66 = [v29 contentView];
    id v67 = [v66 topAnchor];

    id v68 = [v65 constraintEqualToAnchor:v67 constant:v44[1]];
    LODWORD(v69) = 1144913920;
    [v68 setPriority:v69];
    uint64_t v70 = self;
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1005A00D0;
    *(void *)(v71 + 32) = v68;
    id v104 = v68;
    id v72 = sub_1004D1E80();
    id v73 = [v72 leadingAnchor];

    id v74 = [v29 contentView];
    id v75 = [v74 layoutMarginsGuide];

    id v76 = [v75 leadingAnchor];
    id v77 = [v73 constraintEqualToAnchor:v76];

    *(void *)(v71 + 40) = v77;
    id v78 = [v29 contentView];
    id v79 = [v78 layoutMarginsGuide];

    id v80 = [v79 trailingAnchor];
    id v81 = sub_1004D1E80();
    id v82 = [v81 trailingAnchor];

    id v83 = [v80 constraintGreaterThanOrEqualToAnchor:v82];
    *(void *)(v71 + 48) = v83;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v70 activateConstraints:isa];

    Class v85 = v29;
    id v86 = sub_1004D2BE8();
    [v85 addSubview:v86];

    unint64_t v87 = v85;
    id v88 = sub_1004D2BF4();
    [v87 addSubview:v88];

    *(void *)&v87[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = sub_1004D7680();
    swift_bridgeObjectRelease();
    uint64_t v89 = swift_allocObject();
    *(_OWORD *)(v89 + 16) = xmmword_1005A04F0;
    id v90 = sub_1004D2BE8();
    id v91 = [v90 topAnchor];

    id v92 = [v87 topAnchor];
    id v93 = [v91 constraintEqualToAnchor:v92];

    *(void *)(v89 + 32) = v93;
    specialized Array._endMutation()();
    uint64_t v94 = v89;
    id v95 = sub_1004D2BF4();
    id v96 = [v95 bottomAnchor];

    id v97 = [v87 bottomAnchor];
    id v98 = [v96 constraintEqualToAnchor:v97];

    unint64_t v99 = swift_bridgeObjectRetain();
    sub_10009EDD8(v99);
    id v100 = v98;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    Class v101 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v70 activateConstraints:v101];

    sub_1004D749C();
    sub_1004D5FD0();
    sub_1000CBE70((uint64_t *)&unk_100708760);
    uint64_t v102 = swift_allocObject();
    *(_OWORD *)(v102 + 16) = xmmword_10059B760;
    *(void *)(v102 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v102 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    *(void *)(v102 + 48) = type metadata accessor for UITraitHorizontalSizeClass();
    *(void *)(v102 + 56) = &protocol witness table for UITraitHorizontalSizeClass;
    uint64_t v103 = v87;
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();

    return v103;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004D5FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v81 = *(void *)(v2 - 8);
  double v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView];
  uint64_t v7 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
  [v6 setAxis:0 v3];
  [*(id *)&v1[v7] setAlignment:3];
  [*(id *)&v1[v7] setDistribution:0];
  uint64_t v8 = v7;
  [*(id *)&v1[v7] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = [v1 contentView];
  [v9 addSubview:*(void *)&v1[v8]];

  id v74 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
  double v11 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 40];
  double v10 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 48];
  double v13 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 56];
  double v12 = *(double *)&v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 64];
  id v79 = self;
  id v73 = (id)sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1005A1560;
  id v15 = [*(id *)&v1[v8] topAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 topAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17 constant:v11];
  *(void *)(v14 + 32) = v18;
  id v19 = [*(id *)&v1[v8] bottomAnchor];
  id v20 = [v1 contentView];
  id v21 = [v20 bottomAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21 constant:-v13];
  *(void *)(v14 + 40) = v22;
  uint64_t v23 = *(void **)&v1[v8];
  uint64_t v67 = v8;
  id v24 = [v23 leadingAnchor];
  id v25 = [v1 contentView];
  id v26 = [v25 layoutMarginsGuide];

  id v27 = [v26 leadingAnchor];
  id v28 = [v24 constraintEqualToAnchor:v27 constant:v10];

  *(void *)(v14 + 48) = v28;
  id v29 = [*(id *)&v1[v8] trailingAnchor];
  id v30 = [v1 contentView];
  id v31 = [v30 layoutMarginsGuide];

  id v32 = [v31 trailingAnchor];
  id v33 = [v29 constraintEqualToAnchor:v32 constant:-v12];

  *(void *)(v14 + 56) = v33;
  uint64_t v83 = v14;
  specialized Array._endMutation()();
  uint64_t v66 = sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 activateConstraints:isa];

  uint64_t v35 = v81;
  uint64_t v36 = *(void (**)(void))(v81 + 104);
  ((void (*)(char *, void, uint64_t))v36)(v5, enum case for DOCItemSortMode.DisplayableMode.name(_:), v2);
  id v80 = sub_1004D6930((uint64_t)v5, (uint64_t)v1);
  id v37 = *(void (**)(char *, uint64_t))(v35 + 8);
  v37(v5, v2);
  unsigned int v68 = enum case for DOCItemSortMode.DisplayableMode.date(_:);
  v36(v5);
  id v38 = sub_1004D6930((uint64_t)v5, (uint64_t)v1);
  v37(v5, v2);
  unsigned int v69 = enum case for DOCItemSortMode.DisplayableMode.size(_:);
  v36(v5);
  id v39 = sub_1004D6930((uint64_t)v5, (uint64_t)v1);
  v37(v5, v2);
  unsigned int v70 = enum case for DOCItemSortMode.DisplayableMode.kind(_:);
  uint64_t v71 = (void (*)(char *, void, uint64_t))v36;
  v36(v5);
  id v40 = sub_1004D6930((uint64_t)v5, (uint64_t)v1);
  uint64_t v75 = v2;
  uint64_t v81 = v35 + 8;
  id v72 = v37;
  v37(v5, v2);
  id v78 = v38;
  id v41 = [v38 widthAnchor];
  id v42 = [v41 constraintEqualToConstant:0.0];

  id v77 = v39;
  id v43 = [v39 widthAnchor];
  id v44 = [v43 constraintEqualToConstant:0.0];

  id v76 = v40;
  id v45 = v40;
  uint64_t v46 = v67;
  id v47 = [v45 widthAnchor];
  id v48 = [v47 constraintEqualToConstant:0.0];

  uint64_t v49 = swift_allocObject();
  *(_OWORD *)(v49 + 16) = xmmword_1005A00D0;
  *(void *)(v49 + 32) = v42;
  *(void *)(v49 + 40) = v44;
  *(void *)(v49 + 48) = v48;
  uint64_t v83 = v49;
  specialized Array._endMutation()();
  id v50 = v42;
  id v51 = v44;
  id v73 = v48;
  Class v52 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v79 activateConstraints:v52];

  [*(id *)&v1[v46] addArrangedSubview:v80];
  if (v74[72] == 1)
  {
    id v53 = [*(id *)&v1[v46] heightAnchor];
    id v54 = [v80 heightAnchor];
    id v55 = [v53 constraintEqualToAnchor:v54 constant:0.0];

    [v55 setActive:1];
  }
  [*(id *)&v1[v46] addArrangedSubview:v78];
  [*(id *)&v1[v46] addArrangedSubview:v77];
  [*(id *)&v1[v46] addArrangedSubview:v76];
  uint64_t v56 = v75;
  id v57 = v71;
  v71(v5, v68, v75);
  id v58 = &v1[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints];
  swift_beginAccess();
  id v59 = v50;
  id v79 = v59;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = *(void *)v58;
  *(void *)id v58 = 0x8000000000000000;
  sub_1003E1E18((uint64_t)v59, (uint64_t)v5, isUniquelyReferenced_nonNull_native);
  *(void *)id v58 = v82;
  swift_bridgeObjectRelease();
  id v61 = v72;
  v72(v5, v56);
  v57(v5, v69, v56);
  id v62 = v51;
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = *(void *)v58;
  *(void *)id v58 = 0x8000000000000000;
  sub_1003E1E18((uint64_t)v62, (uint64_t)v5, v63);
  *(void *)id v58 = v82;
  swift_bridgeObjectRelease();
  v61(v5, v56);
  v57(v5, v70, v56);
  id v64 = v73;
  char v65 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v82 = *(void *)v58;
  *(void *)id v58 = 0x8000000000000000;
  sub_1003E1E18((uint64_t)v64, (uint64_t)v5, v65);
  *(void *)id v58 = v82;
  swift_bridgeObjectRelease();
  v61(v5, v56);
  swift_endAccess();
  sub_1004D78E0();
}

id sub_1004D6930(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a1;
  uint64_t v4 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)UIButton) init];
  id v40 = v8;
  uint64_t v9 = a2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics;
  uint64_t v46 = a2;
  int v41 = *(unsigned __int8 *)(a2 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics);
  if (v41) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = 4;
  }
  [v8 setContentHorizontalAlignment:v10];
  v39[0] = sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v43 = v5 + 16;
  id v44 = v12;
  uint64_t v13 = v4;
  v12((char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v42 = v5;
  uint64_t v15 = (v14 + 24) & ~v14;
  v39[1] = v15 + v6;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v11;
  id v17 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v18 = v13;
  v17(v16 + v15, v7, v13);
  id v19 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v20 = v40;
  [v40 setDoc_primaryAction:v19];

  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v22 = v7;
  uint64_t v23 = v7;
  uint64_t v24 = v18;
  v44(v23, v45, v18);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v21;
  v17(v25 + v15, v22, v24);
  *((void *)&v50 + 1) = sub_1004D97BC;
  *(void *)&long long v51 = v25;
  long long aBlock = _NSConcreteStackBlock;
  *(void *)&long long v49 = 1107296256;
  *((void *)&v49 + 1) = sub_10041B2E4;
  *(void *)&long long v50 = &unk_1006B2080;
  id v26 = _Block_copy(&aBlock);
  swift_release();
  [v20 setConfigurationUpdateHandler:v26];
  _Block_release(v26);
  char v27 = *(unsigned char *)(v9 + 1);
  char v28 = *(unsigned char *)(v9 + 72);
  LOBYTE(aBlock) = v41;
  BYTE1(aBlock) = v27;
  long long v29 = *(_OWORD *)(v9 + 24);
  long long v49 = *(_OWORD *)(v9 + 8);
  long long v50 = v29;
  long long v30 = *(_OWORD *)(v9 + 56);
  long long v51 = *(_OWORD *)(v9 + 40);
  long long v52 = v30;
  char v53 = v28;
  id v31 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView());
  id v32 = v20;
  id v33 = (void *)sub_1004D3B94(v32, (char *)&aBlock);
  uint64_t v34 = (uint64_t)v22;
  v44(v22, v45, v24);
  uint64_t v35 = (uint64_t *)(v46 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess();
  id v36 = v33;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v47 = *v35;
  *uint64_t v35 = 0x8000000000000000;
  sub_1003E1C5C((uint64_t)v36, v34, isUniquelyReferenced_nonNull_native);
  *uint64_t v35 = v47;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v34, v24);
  swift_endAccess();

  return v36;
}

void sub_1004D6D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void (**)(void *, uint64_t))(Strong
                                                + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler);
    if (v6)
    {
      swift_retain();
      v6(v5, a3);
      sub_1000A7258((uint64_t)v6);
    }
  }
}

void sub_1004D6E20(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100706748);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = Strong;
    uint64_t v22 = *(void *)&Strong[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title + 8];
    if (v22)
    {
      uint64_t v34 = *(void *)&Strong[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
      uint64_t v35 = a1;
      uint64_t v23 = (uint64_t)&Strong[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
      swift_beginAccess();
      sub_1000CBC00(v23, (uint64_t)v15, (uint64_t *)&unk_1007086D0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
      {

        sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_1007086D0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
        uint64_t v24 = type metadata accessor for DOCItemSortMode.DisplayableMode();
        uint64_t v25 = *(void *)(v24 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v6, v36, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v24);
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
        id v26 = self;
        swift_bridgeObjectRetain();

        static UIButton.Configuration.borderless()();
        sub_1004DA67C((uint64_t)v9, (uint64_t)v6, v34, v22, (uint64_t)v12);

        id v27 = v21;
        id v28 = [v27 tintColor];
        UIButton.Configuration.baseForegroundColor.setter();

        UIButton.Configuration.contentInsets.setter();
        swift_bridgeObjectRelease();
        sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_1007086D0);
        sub_1000CBBA4((uint64_t)v6, (uint64_t *)&unk_10070ABB0);
        uint64_t v29 = type metadata accessor for UIButton.Configuration();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
        long long v30 = v35;
        UIButton.configuration.setter();
        sub_1004DB354();
        if (v31)
        {
          NSString v32 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v32 = 0;
        }
        [v30 setAccessibilityIdentifier:v32];

        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
    }
    else
    {
    }
  }
}

void sub_1004D73A0()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DOCItemCollectionViewSectionHeader();
  [super prepareForReuse];
  sub_1004D4BBC(0);
  double v1 = *(double *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension];
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
  if (v1 != 0.0) {
    [v0 setNeedsUpdateConfiguration];
  }
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  sub_1000A7258(v3);
  sub_1004D4CF0();
  sub_1004D749C();
  id v4 = [v0 traitCollection];
  sub_1004D876C();
}

void sub_1004D749C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics + 1) == 1)
  {
    uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style);
    if ((unint64_t)(v1 - 1) >= 2)
    {
      if (v1)
      {
        _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
        __break(1u);
        return;
      }
      id v8 = sub_1004D2BE8();
      uint64_t v9 = v8;
      uint64_t v10 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
      if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) & 1) != 0
        || (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators) & 1) != 0)
      {
        uint64_t v11 = 1;
      }
      else
      {
        uint64_t v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator);
      }
      [v8 setHidden:v11];

      id v12 = sub_1004D2BF4();
      if (*(unsigned char *)(v0 + v10) == 1) {
        uint64_t v13 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators);
      }
      else {
        uint64_t v13 = 1;
      }
    }
    else
    {
      id v2 = sub_1004D2BE8();
      uint64_t v3 = v2;
      uint64_t v4 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons;
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons) == 1
        && (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) & 1) == 0)
      {
        uint64_t v5 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator);
      }
      else
      {
        uint64_t v5 = 1;
      }
      [v2 setHidden:v5];

      id v12 = sub_1004D2BF4();
      if (*(unsigned char *)(v0 + v4))
      {
        uint64_t v13 = 0;
      }
      else if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) == 1)
      {
        uint64_t v13 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators);
      }
      else
      {
        uint64_t v13 = 1;
      }
    }
    [v12 setHidden:v13 v12];
  }
  else
  {
    id v6 = sub_1004D2BE8();
    [v6 setHidden:1];

    id v7 = sub_1004D2BF4();
    [v7 setHidden:1, v7];
  }
}

uint64_t sub_1004D7680()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned) == 1)
  {
    id v2 = [v0 leftAnchor];
  }
  else
  {
    id v3 = [v0 layoutMarginsGuide];
    id v2 = [v3 leftAnchor];
  }
  if (*((unsigned char *)v0 + v1) == 1)
  {
    id v4 = [v0 rightAnchor];
  }
  else
  {
    id v5 = [v0 layoutMarginsGuide];
    id v4 = [v5 rightAnchor];
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A1560;
  id v7 = sub_1004D2BE8();
  id v8 = [v7 leftAnchor];

  id v9 = [v8 constraintEqualToAnchor:v2];
  *(void *)(v6 + 32) = v9;
  id v10 = sub_1004D2BE8();
  id v11 = [v10 rightAnchor];

  id v12 = [v11 constraintEqualToAnchor:v4];
  *(void *)(v6 + 40) = v12;
  id v13 = sub_1004D2BF4();
  id v14 = [v13 leftAnchor];

  id v15 = [v14 constraintEqualToAnchor:v2];
  *(void *)(v6 + 48) = v15;
  id v16 = sub_1004D2BF4();
  id v17 = [v16 rightAnchor];

  id v18 = [v17 constraintEqualToAnchor:v4];
  *(void *)(v6 + 56) = v18;
  specialized Array._endMutation()();

  return v6;
}

uint64_t sub_1004D78E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v2 - 8);
  uint64_t v114 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
  uint64_t v106 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  objc_super v105 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v110 = *(void *)(v5 - 8);
  uint64_t v111 = v5;
  __chkstk_darwin(v5);
  uint64_t v109 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCItemSortMode();
  uint64_t v102 = *(void *)(v7 - 8);
  uint64_t v103 = v7;
  __chkstk_darwin(v7);
  Class v101 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DOCItemSortDescriptor();
  uint64_t v107 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  id v100 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v98 = (uint64_t)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v113 = (char *)&v94 - v14;
  __chkstk_darwin(v13);
  id v16 = (char *)&v94 - v15;
  uint64_t v17 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  unint64_t v99 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  id v97 = (char *)&v94 - v21;
  __chkstk_darwin(v20);
  id v96 = (char *)&v94 - v22;
  uint64_t v23 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v115 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v94 - v28;
  __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v94 - v30;
  uint64_t v32 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons;
  [*(id *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView) setHidden:(*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons) & 1) == 0];
  id v33 = sub_1004D1E80();
  uint64_t v108 = v32;
  [v33 setHidden:*(unsigned __int8 *)(v1 + v32)];

  uint64_t v118 = *(void (**)(char *, void, uint64_t))(v24 + 104);
  v118(v31, enum case for DOCItemSortMode.DisplayableMode.date(_:), v23);
  uint64_t v116 = v1;
  uint64_t v34 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons);
  swift_beginAccess();
  uint64_t v35 = *v34;
  if (!*(void *)(*v34 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_10017C05C((uint64_t)v31);
  if ((v37 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v117 = *(void (**)(char *, uint64_t))(v24 + 8);
    v117(v31, v23);
    uint64_t v44 = v116;
    uint64_t v45 = (uint64_t)v113;
    goto LABEL_13;
  }
  id v95 = *(id *)(*(void *)(v35 + 56) + 8 * v36);
  swift_bridgeObjectRelease();
  uint64_t v117 = *(void (**)(char *, uint64_t))(v24 + 8);
  v117(v31, v23);
  uint64_t v38 = v116;
  if (*(void *)(v116 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits))
  {
    swift_retain();
    sub_1000976F0((uint64_t)v119);
    swift_release();
    sub_10000A628((uint64_t)v119);
    uint64_t v39 = v38 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
    swift_beginAccess();
    sub_1000CBC00(v39, (uint64_t)v16, (uint64_t *)&unk_1007086D0);
    uint64_t v40 = v107;
    uint64_t v41 = v112;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48))(v16, 1, v112))
    {
      sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007086D0);
      uint64_t v42 = 1;
      uint64_t v43 = (uint64_t)v96;
    }
    else
    {
      uint64_t v47 = v100;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v100, v16, v41);
      sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_1007086D0);
      id v48 = v101;
      DOCItemSortDescriptor.sortType.getter();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v112);
      uint64_t v43 = (uint64_t)v96;
      DOCItemSortMode.displayableMode.getter();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v48, v103);
      uint64_t v42 = 0;
    }
    BOOL v46 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v43, v42, 1, v23);
    uint64_t v49 = sub_1001BC958(v43, v119[16]);
    sub_1000CBBA4(v43, (uint64_t *)&unk_10070ABB0);
    BOOL v50 = sub_1001090F8(2, v49);
    swift_bridgeObjectRelease();
    uint64_t v44 = v116;
    uint64_t v45 = (uint64_t)v113;
    if (v50) {
      BOOL v46 = *(double *)(v116 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics) == 0.0;
    }
  }
  else
  {
    BOOL v46 = 1;
    uint64_t v44 = v116;
    uint64_t v45 = (uint64_t)v113;
  }
  id v51 = v95;
  [v95 setHidden:v46];

LABEL_13:
  v118(v29, enum case for DOCItemSortMode.DisplayableMode.size(_:), v23);
  uint64_t v52 = *v34;
  if (!*(void *)(*v34 + 16))
  {
LABEL_19:
    id v60 = v29;
    id v61 = (void (*)(uint64_t, uint64_t))v117;
    v117(v60, v23);
    uint64_t v62 = (uint64_t)v115;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  unint64_t v53 = sub_10017C05C((uint64_t)v29);
  if ((v54 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v113 = (char *)*(id *)(*(void *)(v52 + 56) + 8 * v53);
  swift_bridgeObjectRelease();
  v117(v29, v23);
  if (*(void *)(v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits))
  {
    swift_retain();
    sub_1000976F0((uint64_t)v120);
    swift_release();
    sub_10000A628((uint64_t)v120);
    uint64_t v55 = v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
    swift_beginAccess();
    sub_1000CBC00(v55, v45, (uint64_t *)&unk_1007086D0);
    uint64_t v56 = v107;
    uint64_t v57 = v112;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v45, 1, v112))
    {
      sub_1000CBBA4(v45, (uint64_t *)&unk_1007086D0);
      uint64_t v58 = 1;
      uint64_t v59 = (uint64_t)v97;
    }
    else
    {
      char v65 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v100, v45, v57);
      sub_1000CBBA4(v45, (uint64_t *)&unk_1007086D0);
      uint64_t v66 = v101;
      DOCItemSortDescriptor.sortType.getter();
      uint64_t v44 = v116;
      (*(void (**)(char *, uint64_t))(v56 + 8))(v65, v57);
      uint64_t v59 = (uint64_t)v97;
      DOCItemSortMode.displayableMode.getter();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v66, v103);
      uint64_t v58 = 0;
    }
    BOOL v63 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v59, v58, 1, v23);
    uint64_t v67 = sub_1001BC958(v59, v120[16]);
    sub_1000CBBA4(v59, (uint64_t *)&unk_10070ABB0);
    BOOL v68 = sub_1001090F8(1, v67);
    swift_bridgeObjectRelease();
    id v64 = v113;
    if (v68) {
      BOOL v63 = *(double *)(v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 8) == 0.0;
    }
  }
  else
  {
    BOOL v63 = 1;
    id v64 = v113;
  }
  [v64 setHidden:v63];

  uint64_t v62 = (uint64_t)v115;
  id v61 = (void (*)(uint64_t, uint64_t))v117;
LABEL_25:
  v118((char *)v62, enum case for DOCItemSortMode.DisplayableMode.kind(_:), v23);
  uint64_t v69 = *v34;
  if (!*(void *)(*v34 + 16))
  {
LABEL_31:
    v61(v62, v23);
    id v79 = v114;
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  unint64_t v70 = sub_10017C05C(v62);
  if ((v71 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  id v72 = *(id *)(*(void *)(v69 + 56) + 8 * v70);
  swift_bridgeObjectRelease();
  v61(v62, v23);
  if (*(void *)(v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits))
  {
    swift_retain();
    sub_1000976F0((uint64_t)v121);
    swift_release();
    sub_10000A628((uint64_t)v121);
    uint64_t v73 = v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor;
    swift_beginAccess();
    uint64_t v74 = v98;
    sub_1000CBC00(v73, v98, (uint64_t *)&unk_1007086D0);
    uint64_t v75 = v107;
    uint64_t v76 = v112;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v74, 1, v112))
    {
      sub_1000CBBA4(v74, (uint64_t *)&unk_1007086D0);
      uint64_t v77 = 1;
      uint64_t v78 = (uint64_t)v99;
    }
    else
    {
      uint64_t v81 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v100, v74, v76);
      sub_1000CBBA4(v74, (uint64_t *)&unk_1007086D0);
      uint64_t v82 = v101;
      DOCItemSortDescriptor.sortType.getter();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v81, v76);
      uint64_t v78 = (uint64_t)v99;
      DOCItemSortMode.displayableMode.getter();
      (*(void (**)(char *, uint64_t))(v102 + 8))(v82, v103);
      uint64_t v77 = 0;
    }
    BOOL v80 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v78, v77, 1, v23);
    uint64_t v83 = sub_1001BC958(v78, v121[16]);
    sub_1000CBBA4(v78, (uint64_t *)&unk_10070ABB0);
    BOOL v84 = sub_1001090F8(3, v83);
    swift_bridgeObjectRelease();
    id v79 = v114;
    if (v84) {
      BOOL v80 = *(double *)(v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics + 16) == 0.0;
    }
  }
  else
  {
    BOOL v80 = 1;
    id v79 = v114;
  }
  [v72 setHidden:v80];

LABEL_37:
  uint64_t v85 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits;
  if (*(void *)(v44 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits))
  {
    swift_retain();
    sub_1000976F0((uint64_t)v122);
    swift_release();
    sub_10000A628((uint64_t)v122);
    if (*(unsigned char *)(v44 + v108) == 1 && (v122[80] & 1) != 0)
    {
      sub_1000CBE70(&qword_100708CF8);
      type metadata accessor for UICellAccessory();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A0030;
      (*(void (**)(char *, void, uint64_t))(v110 + 104))(v109, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v111);
      uint64_t v86 = *(void *)(v44 + v85);
      if (v86 && [*(id *)(v86 + 552) horizontalSizeClass] == (id)1) {
        unint64_t v87 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.standard(_:);
      }
      else {
        unint64_t v87 = (unsigned int *)&enum case for UICellAccessory.LayoutDimension.actual(_:);
      }
      uint64_t v88 = *v87;
      uint64_t v89 = type metadata accessor for UICellAccessory.LayoutDimension();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v89 - 8) + 104))(v79, v88, v89);
      uint64_t v90 = v104;
      type metadata accessor for UICellAccessory.LayoutDimension();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v79, 0, 1, v89);
      id v91 = v105;
      UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
      id v92 = v109;
      static UICellAccessory.disclosureIndicator(displayed:options:)();
      (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v90);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v92, v111);
    }
  }
  return UICollectionViewListCell.accessories.setter();
}

void sub_1004D876C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1000951EC(16))
  {
    id v28 = sub_1004D2C00();
    id v6 = sub_1004D1E80();
    uint64_t v29 = v2;
    uint64_t v8 = v7;
    uint64_t ObjectType = swift_getObjectType();
    id v30 = v6;
    uint64_t v10 = *(void (**)(id, uint64_t, uint64_t))(v8 + 16);
    id v11 = v6;
    v10(v28, ObjectType, v8);
    id v12 = v30;

    uint64_t v13 = v1;
    uint64_t v14 = (void *)(v1
                   + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
    uint64_t v15 = *(void **)(v1
                   + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl);
    *uint64_t v14 = v12;
    v14[1] = v8;

    UITraitCollection.doc_preferredLayoutSizeCategory.getter();
    LOBYTE(v12) = DOCContentLayoutSizeCategory.isLargerThanRegularLayout.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v29);
    if ((v12 & 1) != 0
      && !*(void *)(v1 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style))
    {
      uint64_t v20 = self;
      sub_10009E6C4(0, (unint64_t *)&unk_100706720);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 deactivateConstraints:isa];

      swift_bridgeObjectRetain();
      Class v22 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 activateConstraints:v22];

      id v19 = sub_1004D2AF8();
      [v19 setActive:0];
    }
    else
    {
      id v16 = self;
      sub_10009E6C4(0, (unint64_t *)&unk_100706720);
      swift_bridgeObjectRetain();
      Class v17 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v16 deactivateConstraints:v17];

      swift_bridgeObjectRetain();
      Class v18 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v16 activateConstraints:v18];

      id v19 = sub_1004D2AF8();
      sub_1004D20A4();
      LOBYTE(v18) = DOCViewDecorator.isHidden.getter();
      swift_release();
      [v19 setActive:(v18 & 1) == 0];
    }

    uint64_t v23 = self;
    uint64_t v24 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints;
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    swift_bridgeObjectRetain();
    Class v25 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 deactivateConstraints:v25];

    *(void *)(v13 + v24) = sub_1004D7680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    Class v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 activateConstraints:v26];
  }
}

void sub_1004D8B48(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v40 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)v37 - v11;
  uint64_t v13 = type metadata accessor for UICellConfigurationState();
  uint64_t v41 = *(void *)(v13 - 8);
  double v14 = __chkstk_darwin(v13);
  id v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [v1 contentView];
  type metadata accessor for DOCItemCollectionView();
  Class v18 = (void *)UIView.doc_nearestAncestor<A>(ofType:)();

  if (v18)
  {
    id v42 = [v18 doc_nearestAncestorViewController];

    if (v42)
    {
      type metadata accessor for DOCItemCollectionViewController(0);
      id v19 = (void *)swift_dynamicCastClass();
      if (v19)
      {
        id v20 = [v19 navigationController];

        if (v20)
        {
          id v42 = v20;
          uint64_t v21 = a1;
          Class v22 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
          v22(v16, v21, v13);
          UICellConfigurationState.isPinned.setter();
          id v23 = *(id *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
          if (v23)
          {
            uint64_t v24 = *(void **)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView];
            uint64_t v25 = v40;
            id v26 = v42;
          }
          else
          {
            uint64_t v39 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView;
            static UIBackgroundConfiguration.listHeader()();
            v43[3] = v13;
            v43[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
            id v28 = sub_100052C70(v43);
            v22((char *)v28, (uint64_t)v16, v13);
            UIBackgroundConfiguration.updated(for:)();
            uint64_t v25 = v40;
            uint64_t v29 = *(void (**)(char *, uint64_t))(v40 + 8);
            v37[1] = v40 + 8;
            uint64_t v38 = v29;
            v29(v9, v7);
            sub_10009B1B8((uint64_t)v43);
            id v30 = (void *)UIBackgroundConfiguration.visualEffect.getter();
            id v31 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v30];

            id v23 = v31;
            id v32 = [v42 navigationBar];
            id v33 = [v32 _backdropViewLayerGroupName];

            [v23 _setGroupName:v33];
            id v26 = v42;
            uint64_t v34 = *(void **)&v2[v39];
            *(void *)&v2[v39] = v23;

            v38(v12, v7);
            uint64_t v24 = 0;
          }
          id v35 = v24;
          static UIBackgroundConfiguration.clear()();
          id v36 = v23;
          UIBackgroundConfiguration.customView.setter();
          UIBackgroundConfiguration.backgroundInsets.setter();
          (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v6, v12, v7);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v6, 0, 1, v7);
          UICollectionViewCell.backgroundConfiguration.setter();
          [v36 setAlpha:*(double *)&v2[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha]];

          (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v7);
          (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v13);
        }
      }
      else
      {
        id v27 = v42;
      }
    }
  }
}

id sub_1004D910C()
{
  id v1 = sub_1004D1E80();
  uint64_t v3 = v2;
  self;
  id v4 = (id)swift_dynamicCastObjCClass();
  if (!v4)
  {
    uint64_t v5 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX;
    id v6 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX);
      id v8 = v7;
    }
    else
    {
      id v8 = [objc_allocWithZone((Class)UILabel) init];
      uint64_t v7 = 0;
      id v6 = *(void **)(v0 + v5);
    }
    *(void *)(v0 + v5) = v8;
    id v9 = v7;
    id v4 = v8;

    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    [v4 setAttributedText:v11];
  }
  return v4;
}

id sub_1004D9254()
{
  return sub_1004D94F4(0, type metadata accessor for DOCItemCollectionViewSectionHeader);
}

uint64_t sub_1004D9434()
{
  return type metadata accessor for DOCItemCollectionViewSectionHeader();
}

uint64_t type metadata accessor for DOCItemCollectionViewSectionHeader.SortButtonContainerView()
{
  return self;
}

void *sub_1004D9460()
{
  uint64_t result = (void *)sub_100493E34((uint64_t)_swiftEmptyArrayStorage);
  off_1007190D8 = result;
  return result;
}

UIFontTextStyle sub_1004D9488()
{
  qword_1007190E0 = (uint64_t)UIFontTextStyleSubheadline;
  qword_1007190E8 = *(void *)&UIFontWeightSemibold;
  qword_1007190F0 = 1;
  return UIFontTextStyleSubheadline;
}

void sub_1004D94CC()
{
}

id sub_1004D94DC(uint64_t a1)
{
  return sub_1004D94F4(a1, type metadata accessor for DOCPlatterizedLabel);
}

id sub_1004D94F4(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCPlatterizedLabel()
{
  return self;
}

__n128 initializeWithCopy for DOCItemCollectionViewSectionHeader.Metrics(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionViewSectionHeader.Metrics(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[73]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionViewSectionHeader.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionViewSectionHeader.Metrics()
{
  return &type metadata for DOCItemCollectionViewSectionHeader.Metrics;
}

void sub_1004D9640(void *a1)
{
  id v1 = [a1 traitCollection];
  sub_1004D876C();
}

uint64_t sub_1004D9698()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D96D4(uint64_t a1)
{
  return sub_1004D97D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004D6D88);
}

uint64_t sub_1004D96F0()
{
  uint64_t v1 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004D97BC(uint64_t a1)
{
  return sub_1004D97D4(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1004D6E20);
}

uint64_t sub_1004D97D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for DOCItemSortMode.DisplayableMode() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_1004D985C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004D9894()
{
  sub_1004D3F48(*(char **)(v0 + 16));
}

uint64_t sub_1004D989C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004D98AC(double a1)
{
  sub_1004D401C(*(char **)(v1 + 16), a1);
}

uint64_t sub_1004D98B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004D98C4(void *a1)
{
  if (qword_100705270 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1007190E8;
  uint64_t v3 = qword_100705268;
  id v4 = (id)qword_1007190E0;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = [a1 preferredContentSizeCategory];
  swift_beginAccess();
  uint64_t v6 = off_1007190D8;
  if (*((void *)off_1007190D8 + 2) && (uint64_t v7 = sub_1000A54AC(v5), (v8 & 1) != 0))
  {
    id v9 = *(void **)(v6[7] + 8 * v7);
    swift_endAccess();
    id v10 = v9;
  }
  else
  {

    swift_endAccess();
    uint64_t v11 = self;
    id v5 = [v11 _preferredFontDescriptorWithTextStyle:v4 design:UIFontDescriptorSystemDesignDefault weight:a1 compatibleWithTraitCollection:v2];
    if (!v5) {
      id v5 = [v11 preferredFontDescriptorWithTextStyle:v4 compatibleWithTraitCollection:a1];
    }
    id v12 = [self fontWithDescriptor:v5 size:0.0];
    id v13 = [a1 preferredContentSizeCategory];
    swift_beginAccess();
    id v10 = v12;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v16 = off_1007190D8;
    off_1007190D8 = (_UNKNOWN *)0x8000000000000000;
    sub_1003DFF98((uint64_t)v10, v13, isUniquelyReferenced_nonNull_native);
    off_1007190D8 = v16;

    swift_bridgeObjectRelease();
    swift_endAccess();
  }

  return v10;
}

id sub_1004D9B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a2;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v36 - v16;
  sub_1000CBC00(a1, (uint64_t)v10, (uint64_t *)&unk_10070ABB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    if (!a3)
    {
LABEL_14:
      DOCItemSortMode.DisplayableMode.localizedName.getter();
      Class v18 = *(void (**)(char *, uint64_t))(v12 + 8);
      goto LABEL_15;
    }
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v15, enum case for DOCItemSortMode.DisplayableMode.name(_:), v11);
    sub_1004DB71C(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
    swift_bridgeObjectRetain();
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v41 == v39 && v42 == v40)
    {
      swift_bridgeObjectRelease_n();
      Class v18 = *(void (**)(char *, uint64_t))(v12 + 8);
      v18(v15, v11);
    }
    else
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      Class v18 = *(void (**)(char *, uint64_t))(v12 + 8);
      v18(v15, v11);
      if ((v22 & 1) == 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    if (String.count.getter() > 0)
    {
LABEL_15:
      v18(v17, v11);
      goto LABEL_16;
    }
    goto LABEL_13;
  }
  sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_10070ABB0);
  if (a3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    static Logger.UI.getter();
    id v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "ERROR: sortHeaderTitle(...) must be provided a displayableSortMode or a sectionTitle", v21, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v37 + 8))(v7, v5);
  }
LABEL_16:
  sub_1000CBE70((uint64_t *)&unk_100706750);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v24 = qword_100705270;
  uint64_t v25 = NSFontAttributeName;
  if (v24 != -1) {
    swift_once();
  }
  id v26 = (void *)qword_1007190E0;
  double v27 = *(double *)&qword_1007190E8;
  id v28 = self;
  id v29 = v26;
  id result = [v28 _preferredFontForTextStyle:v29 weight:v27];
  if (result)
  {
    id v31 = result;

    *(void *)(inited + 64) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
    *(void *)(inited + 40) = v31;
    sub_10009CC48(inited);
    id v32 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1004DB71C((unint64_t *)&qword_100706230, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v35 = [v32 initWithString:v33 attributes:isa];

    return v35;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1004DA0F0(uint64_t a1, uint64_t a2)
{
  v33[1] = a1;
  uint64_t v3 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCItemSortMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DOCItemSortDescriptor();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_1000CBC00(v17, (uint64_t)v13, (uint64_t *)&unk_1007086D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v21) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_1007086D0);
    return;
  }
  v33[0] = v19;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v13, v21);
  DOCItemSortDescriptor.sortType.getter();
  DOCItemSortMode.displayableMode.getter();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1004DB71C(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v34 == v33[2] && v35 == v33[3])
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if ((v22 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v33[0] + 8))(v16, v21);
      return;
    }
  }
  if (qword_100705270 != -1) {
    swift_once();
  }
  id v23 = (void *)qword_1007190E0;
  UIFontWeight v24 = *(double *)&qword_1007190E8;
  uint64_t v25 = qword_1007190F0;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1005A00D0;
  id v27 = v23;
  UIImageSymbolWeight v28 = _UIImageSymbolWeightForFontWeight(v24);
  id v29 = self;
  *(void *)(v26 + 32) = [v29 configurationWithWeight:v28];
  *(void *)(v26 + 40) = [v29 configurationWithTextStyle:v27];
  *(void *)(v26 + 48) = [v29 configurationWithScale:v25];
  unint64_t v34 = v26;
  specialized Array._endMutation()();
  id v30 = (void *)sub_100296658(v34);
  swift_bridgeObjectRelease();
  DOCItemSortDescriptor.ascending.getter();
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v32 = [self systemImageNamed:v31];

  if (v32)
  {
    [v32 imageWithConfiguration:v30];

    (*(void (**)(char *, uint64_t))(v33[0] + 8))(v16, v21);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1004DA67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = sub_1004D9B14(a2, a3, a4);
  AttributedString.init(_:)();
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  UIButton.Configuration.attributedTitle.setter();
  sub_1000CBC00(a2, (uint64_t)v10, (uint64_t *)&unk_10070ABB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {

    return sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_10070ABB0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    sub_1004DA0F0((uint64_t)v14, v24);
    id v22 = v21;
    UIButton.Configuration.image.setter();
    UIButton.Configuration.imagePadding.setter();
    UIButton.Configuration.imagePlacement.setter();

    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_1004DA908(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIButton.Configuration();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  char v54 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v4 - 8);
  unint64_t v53 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070ADC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCItemSortMode();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  id v48 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v49 = (char *)&v48 - v13;
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10070ABB0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v18 = *(void *)(v17 - 8);
  BOOL v50 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v51 = v18 + 16;
  v50(v16, a1, v17);
  uint64_t v19 = 1;
  uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  v52(v16, 0, 1, v17);
  id v20 = sub_1004D9B14((uint64_t)v16, 0, 0);
  sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070ABB0);
  id v57 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v20];

  id v21 = (char *)a1;
  uint64_t v22 = DOCItemSortMode.DisplayableMode.compatibleSortModes.getter();
  if (*(void *)(v22 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, v22 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9);
    uint64_t v19 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10070ADC0);
    uint64_t v23 = (uint64_t)v53;
  }
  else
  {
    uint64_t v24 = v49;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v49, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v48, v24, v9);
    uint64_t v23 = (uint64_t)v53;
    DOCItemSortDescriptor.init(type:isReversed:)();
    uint64_t v25 = type metadata accessor for DOCItemSortDescriptor();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 0, 1, v25);
    sub_1004DA0F0(a1, v23);
    id v27 = v26;
    sub_1000CBBA4(v23, (uint64_t *)&unk_1007086D0);
    if (v27)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
      id v28 = [self textAttachmentWithImage:v27];
      id v29 = [(id)swift_getObjCClassFromMetadata() attributedStringWithAttachment:v28];
      id v48 = v21;
      id v30 = v29;

      type metadata accessor for DOCUnicode();
      NSString v31 = (void *)static DOCUnicode.nonBreakingSpace.getter();
      id v32 = v57;
      NSMutableAttributedString.append(_:)();

      [v32 appendAttributedString:v30];
      id v21 = v48;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v49, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v24, v9);
    }
  }
  v50(v16, (uint64_t)v21, v17);
  v52(v16, 0, 1, v17);
  id v33 = v57;
  id v34 = [v57 string];
  uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v37 = v36;

  uint64_t v38 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v23, 1, 1, v38);
  uint64_t v39 = self;

  uint64_t v40 = (uint64_t)v54;
  static UIButton.Configuration.borderless()();
  sub_1004DA67C(v40, (uint64_t)v16, v35, v37, v23);

  UIButton.Configuration.contentInsets.setter();
  swift_bridgeObjectRelease();
  sub_1000CBBA4(v23, (uint64_t *)&unk_1007086D0);
  sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_10070ABB0);
  UIButton.Configuration.contentInsets.getter();
  double v42 = v41;
  double v44 = v43;
  (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v40, v56);
  [v33 size];
  double v46 = v45;

  return v44 + v42 + v46;
}

void sub_1004DAFF8()
{
  id v1 = (id)_DocumentManagerBundle();
  if (!v1) {
    __break(1u);
  }
  uint64_t v2 = v1;
  uint64_t v3 = (Swift::String *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_seeLessString];
  v20._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v20._object = (void *)0x80000001005FB260;
  v4._uint64_t countAndFlagsBits = 0x73654C20776F6853;
  v4._object = (void *)0xE900000000000073;
  v5._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5._object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  Swift::String v7 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v2, v6, v20);

  *uint64_t v3 = v7;
  uint64_t v8 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___sectionTitleControl];
  *uint64_t v8 = 0;
  v8[1] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_expandToggleButtonTitle];
  void *v9 = 0;
  v9[1] = 0xE000000000000000;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___expandToggleButtonVisibleConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___topSeparator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader____lazy_storage___bottomSeparator] = 0;
  uint64_t v10 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_metrics];
  *(_OWORD *)(v10 + 8) = xmmword_1005AE790;
  *(_OWORD *)(v10 + 24) = xmmword_1005AE790;
  long long v11 = *(_OWORD *)&NSDirectionalEdgeInsetsZero.bottom;
  *(_OWORD *)(v10 + 40) = *(_OWORD *)&NSDirectionalEdgeInsetsZero.top;
  *(_WORD *)uint64_t v10 = 256;
  *(_OWORD *)(v10 + 56) = v11;
  v10[72] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_regularConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_largeTextConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_traitsSpecificSeparatorConstraints] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemTags] = _swiftEmptyArrayStorage;
  uint64_t v12 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_title];
  *uint64_t v12 = 0;
  v12[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_itemCount] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_layoutTraits] = 0;
  uint64_t v13 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_stackMetrics];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((void *)v13 + 4) = 0;
  uint64_t v14 = OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsStackView;
  *(void *)&v0[v14] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtons] = &_swiftEmptyDictionarySingleton;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonsConstraints] = &_swiftEmptyDictionarySingleton;
  uint64_t v15 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortingDescriptor];
  uint64_t v16 = type metadata accessor for DOCItemSortDescriptor();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_displaySortButtons] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_groupByMenu] = 0;
  v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_showToggleExpandedSectionButtonOverride] = 2;
  v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_isPinned] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundTopExtension] = 0;
  v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideTopSeparator] = 0;
  v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_hideSeparators] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_style] = 0;
  uint64_t v17 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_representedCollectionSection];
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  *((void *)v17 + 4) = 0;
  uint64_t v18 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_toggleExpandedHandler];
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = &v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_sortButtonTapHandler];
  *uint64_t v19 = 0;
  v19[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_backgroundAlpha] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader_customBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files34DOCItemCollectionViewSectionHeader__labelForAX] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1004DB354()
{
  uint64_t v0 = type metadata accessor for DOCItemSortMode.DisplayableMode();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCItemSortMode();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = DOCItemSortMode.DisplayableMode.accessibilityIdentifierComponent.getter();
  int v16 = DOCItemSortDescriptor.ascending.getter();
  DOCItemSortDescriptor.sortType.getter();
  DOCItemSortMode.displayableMode.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1004DB71C(&qword_100708890, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode.DisplayableMode);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v19 == v17 && v20 == v18) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  char v9 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = self;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [v10 sortByHeaderButtonForSortIdentifier:v11 ascending:v9 & 1 active:v8 & 1];

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v13;
}

uint64_t sub_1004DB610()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004DB648()
{
  sub_1004D3488(*(void *)(v0 + 16));
}

uint64_t sub_1004DB664()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DB674()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1004DB6AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004DB6BC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004DB6CC()
{
}

uint64_t sub_1004DB6D4(uint64_t a1)
{
  return sub_1004D26F0(a1);
}

uint64_t sub_1004DB6E8()
{
  return 8;
}

uint64_t sub_1004DB6F4()
{
  return swift_release();
}

uint64_t sub_1004DB6FC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1004DB710(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1004DB71C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004DB764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070AE80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1004DB7CC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1004DB844()
{
  if ([v0 isRoot])
  {
    id v1 = [v0 fileProviderItem];
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 providerID];
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;

      if (v4 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v6 == v7)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v9 & 1) == 0)
        {
          int v10 = 1;
LABEL_17:

          goto LABEL_18;
        }
      }
      id v11 = [v2 itemID];
      id v12 = [v11 domainIdentifier];

      id v13 = [v2 parentItemID];
      id v14 = [v13 domainIdentifier];

      uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v17 = v16;
      if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18) {
        int v10 = 1;
      }
      else {
        int v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_17;
    }
    int v10 = 1;
  }
  else
  {
    int v10 = 0;
  }
LABEL_18:
  sub_1000CBE70(&qword_10070CE50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A8670;
  uint64_t v20 = (void *)DOCDocumentSourceIdentifierRecentDocuments;
  *(void *)(inited + 32) = DOCDocumentSourceIdentifierRecentDocuments;
  id v21 = (void *)DOCDocumentSourceIdentifierSearch;
  uint64_t v22 = (void *)DOCDocumentSourceIdentifierSharedItems;
  *(void *)(inited + 40) = DOCDocumentSourceIdentifierSearch;
  *(void *)(inited + 48) = v22;
  uint64_t v23 = (void *)DOCDocumentSourceIdentifierTaggedItems;
  uint64_t v24 = (void *)DOCDocumentSourceIdentifierSpotlight;
  *(void *)(inited + 56) = DOCDocumentSourceIdentifierTaggedItems;
  *(void *)(inited + 64) = v24;
  uint64_t v25 = (void *)DOCDocumentSourceIdentifierTrashedItems;
  *(void *)(inited + 72) = DOCDocumentSourceIdentifierTrashedItems;
  id v26 = v20;
  id v27 = v21;
  id v28 = v22;
  id v29 = v23;
  id v30 = v24;
  id v31 = v25;
  id v32 = [v0 sourceIdentifier];
  LODWORD(v21) = sub_100082AC0();

  swift_setDeallocating();
  type metadata accessor for DOCDocumentSourceIdentifier(0);
  swift_arrayDestroy();
  return v10 & ~v21 & 1;
}

id sub_1004DBB24()
{
  id v1 = [v0 fileProviderItem];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 folderType];

    if (v3 == (id)4)
    {
      id v4 = sub_1004DC070();
      goto LABEL_16;
    }
  }
  id v5 = [v0 representedTag];
  if (!v5)
  {
    id v8 = [v0 sourceIdentifier];
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;
    if (v9 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v11 == v12)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        id v15 = [v0 sourceIdentifier];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;
        if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0)
          {
            id v23 = [v0 sourceIdentifier];
            uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v26 = v25;
            if (v24 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v26 == v27)
            {

              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v28 & 1) == 0)
              {
                id v29 = [v0 sourceIdentifier];
                uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                uint64_t v32 = v31;
                if (v30 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v32 == v33)
                {

                  swift_bridgeObjectRelease_n();
                  return 0;
                }
                char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v34) {
                  return 0;
                }
                id v4 = sub_1004DC928();
                goto LABEL_16;
              }
            }
            return [self searchConfiguration];
          }
        }
        id v4 = sub_1004DC720();
LABEL_16:
        id v7 = v4;
        id v20 = v4;
        return v7;
      }
    }
    id v4 = sub_1004DC518();
    goto LABEL_16;
  }
  uint64_t v6 = v5;
  id v7 = sub_1004DC26C(v5);

  return v7;
}

id sub_1004DBE7C(void *a1)
{
  id v3 = [a1 iconPreferingSymbolImages];
  [v1 setImage:v3];

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v5 = result;
    v16._object = (void *)0x80000001005FB380;
    v6._uint64_t countAndFlagsBits = 0x6D45207369204025;
    v6._object = (void *)0xEB00000000797470;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._object = (void *)0xEB00000000656C62;
    v8._uint64_t countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0xD000000000000048;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v16);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A0030;
    id v10 = [a1 providerName];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 64) = sub_100073F48();
    *(void *)(v9 + 32) = v11;
    *(void *)(v9 + 40) = v13;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setText:v14];

    id v15 = [a1 domainName];
    [v1 setSecondaryText:v15];

    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1004DC070()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  [v0 setImage:v2];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v4 = result;
    v5._uint64_t countAndFlagsBits = 0xD000000000000013;
    v14._uint64_t countAndFlagsBits = 0xD000000000000040;
    v14._object = (void *)0x80000001005FB3F0;
    v5._object = (void *)0x80000001005FB3D0;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v14);

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setText:v8];

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v9 = result;
      v10._uint64_t countAndFlagsBits = 0xD000000000000024;
      v15._uint64_t countAndFlagsBits = 0xD000000000000046;
      v15._object = (void *)0x80000001005FB470;
      v10._object = (void *)0x80000001005FB440;
      v11._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v11._object = (void *)0xEB00000000656C62;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v15);

      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v0 setSecondaryText:v13];

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004DC26C(void *a1)
{
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self systemImageNamed:v3];

  [v1 setImage:v4];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    Swift::String v6 = result;
    v21._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
    v21._object = (void *)0x80000001005FB4E0;
    v7._uint64_t countAndFlagsBits = 0x6567676154206F4ELL;
    v7._object = (void *)0xEF73656C69462064;
    v8._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v8._object = (void *)0xEB00000000656C62;
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v21);

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setText:v10];

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v11 = result;
      v22._uint64_t countAndFlagsBits = 0xD000000000000040;
      v22._object = (void *)0x80000001005FB550;
      v12._object = (void *)0x80000001005FB520;
      v12._uint64_t countAndFlagsBits = 0x100000000000002ALL;
      v13._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v13._object = (void *)0xEB00000000656C62;
      v14._uint64_t countAndFlagsBits = 0;
      v14._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v22);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1005A0030;
      id v16 = [a1 displayName];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      *(void *)(v15 + 56) = &type metadata for String;
      *(void *)(v15 + 64) = sub_100073F48();
      *(void *)(v15 + 32) = v17;
      *(void *)(v15 + 40) = v19;
      static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      NSString v20 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setSecondaryText:v20];

      return v1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004DC518()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  [v0 setImage:v2];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v4 = result;
    v14._uint64_t countAndFlagsBits = 0xD000000000000031;
    v5._object = (void *)0xEA00000000007374;
    v14._object = (void *)0x80000001005FB5A0;
    v5._uint64_t countAndFlagsBits = 0x6E65636552206F4ELL;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v14);

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setText:v8];

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v9 = result;
      v15._uint64_t countAndFlagsBits = 0xD000000000000037;
      v15._object = (void *)0x80000001005FB610;
      v10._object = (void *)0x80000001005FB5E0;
      v10._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
      v11._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v11._object = (void *)0xEB00000000656C62;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v15);

      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v0 setSecondaryText:v13];

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004DC720()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  [v0 setImage:v2];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v4 = result;
    v14._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
    v14._object = (void *)0x80000001005FB650;
    v5._uint64_t countAndFlagsBits = 0x6572616853206F4ELL;
    v5._object = (void *)0xEF73656C69462064;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v14);

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setText:v8];

    id result = (id)_DocumentManagerBundle();
    if (result)
    {
      Swift::String v9 = result;
      v10._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
      v15._uint64_t countAndFlagsBits = 0xD000000000000042;
      v15._object = (void *)0x80000001005FB6B0;
      v10._object = (void *)0x80000001005FB690;
      v11._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v11._object = (void *)0xEB00000000656C62;
      v12._uint64_t countAndFlagsBits = 0;
      v12._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v15);

      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v0 setSecondaryText:v13];

      return v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1004DC928()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [self systemImageNamed:v1];

  [v0 setImage:v2];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v4 = result;
    v9._object = (void *)0x80000001005FB700;
    v5._uint64_t countAndFlagsBits = 0x69207265646C6F46;
    v5._object = (void *)0xEF7974706D452073;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0xD000000000000034;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v9);

    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v0 setText:v8];

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004DCA7C()
{
  NSString v1 = v0;
  uint64_t v2 = type metadata accessor for DOCAuthenticationMechanism();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  Swift::String v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  NSString v8 = (char *)&v30 - v7;
  id v9 = [self currentDevice];
  UIDevice.doc_preferredAuthenticationMechanism.getter();

  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  int v10 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v10 == enum case for DOCAuthenticationMechanism.none(_:)) {
    goto LABEL_14;
  }
  if (v10 != enum case for DOCAuthenticationMechanism.passcode(_:))
  {
    if (v10 != enum case for DOCAuthenticationMechanism.touchID(_:)
      && v10 != enum case for DOCAuthenticationMechanism.faceID(_:)
      && v10 != enum case for DOCAuthenticationMechanism.oysterID(_:))
    {
      goto LABEL_18;
    }
    DOCAuthenticationMechanism.localizedDescription.getter();
    goto LABEL_14;
  }
  id v11 = (id)_DocumentManagerBundle();
  if (v11)
  {
    Swift::String v12 = v11;
    v31._object = (void *)0x80000001005FB350;
    v13._uint64_t countAndFlagsBits = 0x4025207265746E45;
    v13._object = (void *)0xE800000000000000;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._object = (void *)0xEB00000000656C62;
    v15._uint64_t countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v31._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v31);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    uint64_t v17 = DOCAuthenticationMechanism.localizedDescription.getter();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = sub_100073F48();
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v1 setText:v22];

    id v23 = (id)_DocumentManagerBundle();
    if (v23)
    {
      uint64_t v24 = v23;
      v32._uint64_t countAndFlagsBits = 0xD000000000000089;
      v32._object = (void *)0x80000001005FB2C0;
      v25._uint64_t countAndFlagsBits = 0x20776F6873206F74;
      v25._object = (void *)0xEE007265646C6F66;
      v26._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v26._object = (void *)0xEB00000000656C62;
      v27._uint64_t countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v25, v26, (NSBundle)v24, v27, v32);

      NSString v28 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setSecondaryText:v28];

      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return (uint64_t)v1;
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id sub_1004DCFA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCInterface();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCInterface()
{
  return self;
}

uint64_t sub_1004DD094()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC5Files21DOCItemCollectionCell19BackgroundStateView_configurationState;
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t sub_1004DD100()
{
  return _s19BackgroundStateViewCMa();
}

unsigned char *_s19BackgroundStateViewC5StyleOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DD1D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19BackgroundStateViewC5StyleOMa()
{
  return &_s19BackgroundStateViewC5StyleON;
}

unint64_t sub_1004DD210()
{
  unint64_t result = qword_1007192C8;
  if (!qword_1007192C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007192C8);
  }
  return result;
}

void sub_1004DD264(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  id v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)v31 - v10;
  if (*(unsigned char *)(v2 + 16))
  {
    self;
    uint64_t v12 = swift_dynamicCastObjCClass();
    if (v12)
    {
      Swift::String v13 = *(void **)(v2 + 32);
      if (v13)
      {
        uint64_t v35 = v12;
        swift_unknownObjectRetain();
        id v14 = v13;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
        swift_unknownObjectRelease();

        return;
      }
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v33 = a2;
      NSString v22 = (uint8_t *)v21;
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)NSString v22 = 136315138;
      uint64_t v32 = (uint64_t)(v22 + 4);
      swift_getObjectType();
      uint64_t v23 = DOCNode.nodeDescription.getter();
      uint64_t v34 = sub_10009B0E4(v23, v24, &v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Attempting to get index path for a non-FINode '%s' in FINode data source.", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v33;
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    swift_getObjectType();
    id v15 = [a1 fpfs_fpItem];
    if (v15)
    {
      uint64_t v16 = *(void **)(v2 + 24);
      if (v16)
      {
        uint64_t v17 = v15;
        uint64_t v35 = (uint64_t)v15;
        id v18 = v16;
        dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

        return;
      }
      goto LABEL_19;
    }
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    Swift::String v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      Swift::String v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      uint64_t v33 = a2;
      *(_DWORD *)Swift::String v27 = 136315138;
      v31[1] = v27 + 4;
      uint64_t v28 = DOCNode.nodeDescription.getter();
      uint64_t v34 = sub_10009B0E4(v28, v29, &v35);
      a2 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Attempting to get index path for a node '%s' without an FPItem in FPItem data source.", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  uint64_t v30 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a2, 1, 1, v30);
}

uint64_t sub_1004DD6E8()
{
  uint64_t v1 = sub_1000CBE70(&qword_10070ADA0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70(&qword_10070ADA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_100719440);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  id v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v0 + 16))
  {
    uint64_t v12 = *(void **)(v0 + 32);
    if (v12)
    {
      id v13 = v12;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
      id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      v15(v3, 0, 1, v14);
      type metadata accessor for DOCNodeDiffableDataSourceSnapshot();
      uint64_t v16 = swift_allocObject();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, 1, 1, v7);
      uint64_t v17 = v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
      v15((char *)(v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot), 1, 1, v14);
      *(unsigned char *)(v16 + 16) = 1;
      swift_beginAccess();
      id v18 = &qword_10070ADA0;
      uint64_t v19 = (uint64_t)v3;
      uint64_t v20 = v17;
LABEL_6:
      sub_10008C318(v19, v20, v18);
      swift_endAccess();
      return v16;
    }
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void **)(v0 + 24);
    if (v21)
    {
      id v22 = v21;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      type metadata accessor for DOCNodeDiffableDataSourceSnapshot();
      uint64_t v16 = swift_allocObject();
      uint64_t v23 = v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot;
      unint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v24(v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fpItemSnapshot, 1, 1, v7);
      uint64_t v25 = v16 + OBJC_IVAR____TtC5Files33DOCNodeDiffableDataSourceSnapshot_fiNodeSnapshot;
      uint64_t v26 = sub_1000CBE70((uint64_t *)&unk_10070ADB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
      *(unsigned char *)(v16 + 16) = 0;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v11, v7);
      v24((uint64_t)v6, 0, 1, v7);
      swift_beginAccess();
      id v18 = &qword_10070ADA8;
      uint64_t v19 = (uint64_t)v6;
      uint64_t v20 = v23;
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004DDA68()
{
  return type metadata accessor for DOCNodeDiffableDataSourceSnapshot();
}

ValueMetadata *type metadata accessor for DOCNodeDiffableDataSourceSnapshot.SnapshotType()
{
  return &type metadata for DOCNodeDiffableDataSourceSnapshot.SnapshotType;
}

unsigned char *_s5Files25DOCNodeDiffableDataSourceC14DataSourceTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DDB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNodeDiffableDataSource.DataSourceType()
{
  return &type metadata for DOCNodeDiffableDataSource.DataSourceType;
}

unint64_t sub_1004DDB8C()
{
  unint64_t result = qword_100719558;
  if (!qword_100719558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719558);
  }
  return result;
}

unint64_t sub_1004DDBE4()
{
  unint64_t result = qword_100719560;
  if (!qword_100719560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719560);
  }
  return result;
}

uint64_t sub_1004DDC38()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1004DE014()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPinchZoomTestParameters();
  [super dealloc];
}

uint64_t type metadata accessor for DOCPinchZoomTestParameters()
{
  return self;
}

uint64_t sub_1004DE0C0()
{
  return _swift_deallocObject(v0, 48, 7);
}

id sub_1004DE0D0(void *a1)
{
  double v3 = v1[2];
  double v4 = v1[3];
  double v5 = v1[4];
  double v6 = v1[5];
  [a1 pinchOpenWithStartPoint:v3 endPoint:v4 duration:v5];
  [a1 advanceTime:0.5];

  return [a1 pinchCloseWithStartPoint:v5 endPoint:v6 duration:v3 v4];
}

uint64_t sub_1004DE16C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void DOCFullDocumentManagerViewController.search(forQuery:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = sub_100066A5C();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a3;
  uint64_t v10[4] = a4;
  v10[5] = a1;
  v10[6] = a2;
  v12[4] = sub_1004DEDBC;
  v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1000666D8;
  v12[3] = &unk_1006B2688;
  id v11 = _Block_copy(v12);
  sub_1000C0640(a3);
  swift_bridgeObjectRetain();
  swift_release();
  [v8 performAfterSearchInitialization:v11];
  _Block_release(v11);
}

uint64_t sub_1004DE2E8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004DE320(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v75 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v74 = (char *)&v63 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v63 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v63 - v18;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = Strong;
    id v73 = [Strong effectiveSearchController];
    if (v73)
    {
      id v22 = [v21 presentedViewController];
      id v72 = a2;
      if (v22)
      {
        self;
        if (swift_dynamicCastObjCClass())
        {
          static Logger.Application.getter();
          uint64_t v23 = Logger.logObject.getter();
          os_log_type_t v24 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v23, v24))
          {
            uint64_t v70 = a5;
            uint64_t v25 = (uint8_t *)swift_slowAlloc();
            uint64_t v26 = swift_slowAlloc();
            id v69 = v22;
            aBlock[0] = v26;
            uint64_t v71 = a4;
            *(_DWORD *)uint64_t v25 = 136315138;
            uint64_t v77 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FBA80, aBlock);
            a5 = v70;
            a4 = v71;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Alert is presented, bailing out for safety", v25, 0xCu);
            char v27 = 1;
            swift_arrayDestroy();
            id v22 = v69;
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
            int v28 = 0;
            char v29 = 2;
LABEL_20:
            uint64_t v38 = v73;
            if ([v21 isEditing]) {
              [v21 setEditing:0];
            }
            if (v28)
            {
              uint64_t v39 = (void *)swift_allocObject();
              uint64_t v40 = a4;
              double v41 = v39;
              void v39[2] = v38;
              v39[3] = v40;
              uint64_t v71 = v40;
              uint64_t v42 = (uint64_t)v72;
              v39[4] = a5;
              uint64_t v39[5] = v42;
              if (v22) {
                char v43 = v27;
              }
              else {
                char v43 = 1;
              }
              v39[6] = v75;
              if ((v43 & 1) == 0)
              {
                uint64_t v55 = (void *)swift_allocObject();
                v55[2] = v38;
                v55[3] = sub_1004DF4DC;
                v55[4] = v41;
                aBlock[4] = (uint64_t)sub_1004DF534;
                void aBlock[5] = (uint64_t)v55;
                aBlock[0] = (uint64_t)_NSConcreteStackBlock;
                aBlock[1] = 1107296256;
                aBlock[2] = (uint64_t)sub_1000666D8;
                void aBlock[3] = (uint64_t)&unk_1006B2700;
                uint64_t v56 = _Block_copy(aBlock);
                id v57 = v38;
                uint64_t v58 = v42;
                id v59 = v57;
                sub_1000C0640(v58);
                swift_bridgeObjectRetain();
                id v60 = v22;
                swift_retain();
                swift_release();
                [v60 dismissViewControllerAnimated:0 completion:v56];
                swift_release();

                _Block_release(v56);
                return;
              }
              id v44 = v38;
              sub_1000C0640(v42);
              swift_bridgeObjectRetain();
              double v45 = v74;
              static Logger.Application.getter();
              id v68 = v44;
              double v46 = Logger.logObject.getter();
              os_log_type_t v47 = static os_log_type_t.debug.getter();
              uint64_t v67 = v46;
              int v66 = v47;
              if (os_log_type_enabled(v46, v47))
              {
                uint64_t v48 = swift_slowAlloc();
                id v64 = (void *)swift_slowAlloc();
                uint64_t v65 = swift_slowAlloc();
                aBlock[0] = v65;
                *(_DWORD *)uint64_t v48 = 136315394;
                uint64_t v49 = v68;
                uint64_t v77 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FBA80, aBlock);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *(_WORD *)(v48 + 12) = 2112;
                id v69 = v22;
                uint64_t v77 = (uint64_t)v49;
                id v50 = v49;
                uint64_t v70 = a5;
                id v51 = v50;
                uint64_t v42 = (uint64_t)v72;
                id v22 = v69;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *id v64 = v73;

                a5 = v70;
                uint64_t v52 = v67;
                _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v66, "%s: Activating continuation search on: %@", (uint8_t *)v48, 0x16u);
                sub_1000CBE70(&qword_100707CC0);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                (*(void (**)(char *, uint64_t))(v9 + 8))(v74, v8);
              }
              else
              {

                id v61 = v68;
                (*(void (**)(char *, uint64_t))(v9 + 8))(v45, v8);
              }
              uint64_t v62 = v68;
              sub_1004DEE28(v68, v71, a5, v42, v75);
              swift_release();

              goto LABEL_36;
            }
            unint64_t v53 = v72;
            if (!v72)
            {

LABEL_36:
              return;
            }
            sub_1004DEDD4();
            swift_allocError();
            char *v54 = v29;
            v53();

LABEL_31:
            swift_errorRelease();
            return;
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
          int v28 = 0;
          char v29 = 2;
        }
        else
        {
          self;
          if (!swift_dynamicCastObjCClass())
          {
            char v27 = 0;
            char v29 = 5;
            int v28 = 1;
            goto LABEL_20;
          }
          static Logger.Application.getter();
          uint64_t v34 = Logger.logObject.getter();
          os_log_type_t v35 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v34, v35))
          {
            uint64_t v70 = a5;
            uint64_t v36 = swift_slowAlloc();
            uint64_t v71 = a4;
            uint64_t v37 = (uint8_t *)v36;
            aBlock[0] = swift_slowAlloc();
            id v69 = v22;
            *(_DWORD *)uint64_t v37 = 136315138;
            uint64_t v77 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FBA80, aBlock);
            id v22 = v69;
            a5 = v70;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Picker is presented (probably chosing a directory for scanned document), bailing out for safety", v37, 0xCu);
            char v27 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            a4 = v71;
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
            int v28 = 0;
            char v29 = 3;
            goto LABEL_20;
          }

          (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
          int v28 = 0;
          char v29 = 3;
        }
        char v27 = 1;
        goto LABEL_20;
      }
      char v29 = 5;
      char v27 = 1;
      int v28 = 1;
      goto LABEL_20;
    }
  }
  static Logger.Application.getter();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v77 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FBA80, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "%s: Unable to continue activity since search controller is nil", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (a2)
  {
    sub_1004DEDD4();
    swift_allocError();
    *uint64_t v33 = 1;
    a2();
    goto LABEL_31;
  }
}

uint64_t sub_1004DED6C()
{
  swift_release();
  if (*(void *)(v0 + 24)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004DEDBC()
{
  return sub_1004DF5AC((uint64_t (*)(void, void, void, void, void))sub_1004DE320);
}

unint64_t sub_1004DEDD4()
{
  unint64_t result = qword_100719620;
  if (!qword_100719620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719620);
  }
  return result;
}

uint64_t sub_1004DEE28(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v30 = a2;
  uint64_t v31 = a4;
  uint64_t v34 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v36 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchTime();
  uint64_t v33 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v28 - v18;
  sub_10011029C();
  uint64_t v29 = static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v14 + 8);
  v32(v17, v13);
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v30;
  uint64_t v22 = v31;
  v20[2] = a1;
  v20[3] = v21;
  _DWORD v20[4] = a3;
  void v20[5] = v22;
  void v20[6] = a5;
  aBlock[4] = sub_1004DF594;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B2750;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = a1;
  swift_bridgeObjectRetain();
  sub_1000C0640(v22);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  uint64_t v25 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v26 = (void *)v29;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v36);
  return ((uint64_t (*)(char *, uint64_t))v32)(v19, v33);
}

void sub_1004DF1C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void, void))
{
  if (a4) {
    a4(0, 0);
  }
}

uint64_t sub_1004DF228(void *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Application.getter();
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v5;
    uint64_t v12 = v11;
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v23 = a2;
    uint64_t v24 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FBA80, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2112;
    uint64_t v20 = v4;
    uint64_t v24 = (uint64_t)v8;
    id v13 = v8;
    uint64_t v14 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v19 = v8;

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Activating continuation search on: %@", (uint8_t *)v12, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v20);
    return v14(v15);
  }
  else
  {

    uint64_t v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return a2(v17);
  }
}

uint64_t sub_1004DF4DC()
{
  return sub_1004DF5AC((uint64_t (*)(void, void, void, void, void))sub_1004DEE28);
}

uint64_t sub_1004DF4F4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004DF534()
{
  return sub_1004DF228(*(void **)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_1004DF544()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004DF594()
{
  return sub_1004DF5AC((uint64_t (*)(void, void, void, void, void))sub_1004DF1C0);
}

uint64_t sub_1004DF5AC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

unsigned char *_s11SearchErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DF690);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11SearchErrorOMa()
{
  return &_s11SearchErrorON;
}

unint64_t sub_1004DF6CC()
{
  unint64_t result = qword_100719628;
  if (!qword_100719628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719628);
  }
  return result;
}

void sub_1004DF730(char a1)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_enabled);
  if (v2 == (a1 & 1)) {
    return;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture);
  id v8 = Strong;
  if (!v2)
  {
    if (v4)
    {
      [Strong removeGestureRecognizer:];
      uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
      if (v5)
      {
        unsigned int v6 = &selRef_removeInteraction_;
        goto LABEL_11;
      }
LABEL_17:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  [Strong addGestureRecognizer:];
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
  if (!v5)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  unsigned int v6 = &selRef_addInteraction_;
LABEL_11:
  id v7 = v5;
  [v8 *v6 v7];
}

void sub_1004DF838(void *a1)
{
  if ([a1 state] == (id)1)
  {
    sub_1004DFA18();
    if (*(void *)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16))
    {
      sub_10009E6C4(0, &qword_1007196E8);
      uint64_t v2 = UIEditMenuConfiguration.init(identifier:sourcePoint:)();
      int v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
      if (v3)
      {
        id v4 = (id)v2;
        [v3 presentEditMenuWithConfiguration:];
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1004DFA18()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  int v3 = (void *)Strong;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_longPressGesture);
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v17 = v3;
  [v4 locationInView:];
  uint64_t v6 = v5;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v7 = (id)_DocumentManagerBundle();
    if (v7)
    {
      id v8 = v7;
      v20._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
      v20._object = (void *)0x80000001005FBB60;
      v9._object = (void *)0x80000001005FBB40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000012;
      v10._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11._uint64_t countAndFlagsBits = 2037411651;
      v11._object = (void *)0xE400000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v20);

      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [self systemImageNamed:v12];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1005A04F0;
      *(void *)(v15 + 32) = v14;
      uint64_t v18 = v15;
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
      uint64_t v16 = v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
      *(void *)uint64_t v16 = v6;
      *(void *)(v16 + 8) = 0;
      *(void *)(v16 + 16) = v18;
      *(unsigned char *)(v16 + 24) = 0;

      swift_bridgeObjectRelease();
      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
}

void sub_1004DFCE4()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  int v3 = (void *)Strong;
  id v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_editMenuInteraction);
  if (!v4)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v17 = v3;
  [v4 locationInView:];
  uint64_t v6 = v5;
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v7 = (id)_DocumentManagerBundle();
    if (v7)
    {
      id v8 = v7;
      v20._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
      v20._object = (void *)0x80000001005FBB60;
      v9._object = (void *)0x80000001005FBB40;
      v9._uint64_t countAndFlagsBits = 0xD000000000000012;
      v10._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v10._object = (void *)0xEB00000000656C62;
      v11._uint64_t countAndFlagsBits = 2037411651;
      v11._object = (void *)0xE400000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v20);

      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [self systemImageNamed:v12];

      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v14 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1005A04F0;
      *(void *)(v15 + 32) = v14;
      uint64_t v18 = v15;
      specialized Array._endMutation()();
      swift_unknownObjectRelease();
      uint64_t v16 = v1 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
      *(void *)uint64_t v16 = v6;
      *(void *)(v16 + 8) = 0;
      *(void *)(v16 + 16) = v18;
      *(unsigned char *)(v16 + 24) = 1;

      swift_bridgeObjectRelease();
      return;
    }
LABEL_13:
    __break(1u);
    return;
  }
}

id sub_1004DFFE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCViewEditMenuInteraction();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCViewEditMenuInteraction()
{
  return self;
}

uint64_t initializeWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationContext()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationContext;
}

uint64_t sub_1004E0240()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004E0278()
{
}

Class sub_1004E0280()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext;
  unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files26DOCViewEditMenuInteraction_activePresentationContext + 16);
  if (!v2)
  {
    sub_1004DFCE4();
    unint64_t v2 = *(void *)(v1 + 16);
    if (!v2) {
      return 0;
    }
  }
  char v3 = *(unsigned char *)(v1 + 24);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_5;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_20;
    }
LABEL_14:
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    preferredElementSize = _swiftEmptyArrayStorage;
LABEL_15:
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
    v10._uint64_t countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v13.value.super.Class isa = 0;
    v13.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v10, (Swift::String_optional)0, v13, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v11).super.super.isa;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_19;
  }
LABEL_5:
  Class result = (Class)specialized ContiguousArray.reserveCapacity(_:)();
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        if ((v3 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        id v7 = *(id *)(v2 + 8 * v6 + 32);
        if ((v3 & 1) == 0)
        {
LABEL_12:
          id v8 = v7;
          [v8 copy];
          _bridgeAnyObjectToAny(_:)();

          swift_unknownObjectRelease();
          sub_10009E6C4(0, (unint64_t *)&qword_100706740);
          swift_dynamicCast();
          [v12 setImage:0];
        }
      }
      ++v6;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v4 == v6)
      {
        swift_bridgeObjectRelease();
        if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
          goto LABEL_14;
        }
LABEL_20:
        sub_10009E6C4(0, (unint64_t *)&qword_100708610);
        swift_bridgeObjectRetain();
        preferredElementSize = (void *)_bridgeCocoaArray<A>(_:)();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
    }
  }
  __break(1u);
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCViewEditMenuInteraction.PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *Class result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E060CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *Class result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.PresentationStyle()
{
  return &type metadata for DOCViewEditMenuInteraction.PresentationStyle;
}

void *assignWithCopy for DOCViewEditMenuInteraction.Presentatable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DOCViewEditMenuInteraction.Presentatable()
{
  return &type metadata for DOCViewEditMenuInteraction.Presentatable;
}

unint64_t sub_1004E06A4()
{
  unint64_t result = qword_1007196F0;
  if (!qword_1007196F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007196F0);
  }
  return result;
}

uint64_t sub_1004E06FC(uint64_t a1, void *a2)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for URLComponents();
  uint64_t v34 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70(&qword_100719848);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DeepLinkComponents.Scheme();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  id v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v33 - v13;
  id v15 = objc_allocWithZone((Class)NSURLComponents);
  uint64_t v36 = a1;
  URL._bridgeToObjectiveC()(v16);
  uint64_t v18 = v17;
  id v19 = [v15 initWithURL:v17 resolvingAgainstBaseURL:0];

  if (!v19) {
    goto LABEL_6;
  }
  id v20 = [v19 scheme];
  if (!v20)
  {

LABEL_6:
    id v23 = [v37 options];
    if (swift_unknownObjectWeakLoadStrong())
    {
      char v24 = sub_10025412C(v36, v23, 1, 1, 1);
      swift_unknownObjectRelease();
    }
    else
    {

      char v24 = 0;
    }
    return v24 & 1;
  }
  uint64_t v21 = v20;
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  DeepLinkComponents.Scheme.init(rawValue:)();
  uint64_t v22 = v35;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v8, 1, v9) == 1)
  {

    sub_1000CBBA4((uint64_t)v8, &qword_100719848);
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v14, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v12, v14, v9);
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v22 + 88))(v12, v9);
  if (v25 == enum case for DeepLinkComponents.Scheme.file(_:))
  {
    id v26 = [v37 options];
    if (swift_unknownObjectWeakLoadStrong())
    {
      char v24 = sub_10025412C(v36, v26, 1, 1, 1);
      swift_unknownObjectRelease();
    }
    else
    {
      char v24 = 0;
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v9);
    return v24 & 1;
  }
  if (v25 == enum case for DeepLinkComponents.Scheme.shareddocuments(_:))
  {
    static URLComponents._unconditionallyBridgeFromObjectiveC(_:)();
    char v24 = sub_1004E275C((uint64_t)v5, v37);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v3);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v9);
    return v24 & 1;
  }
  if (v25 == enum case for DeepLinkComponents.Scheme.smb(_:))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v29 = (void *)Strong;
      URL._bridgeToObjectiveC()(v28);
      uint64_t v31 = v30;
      [v29 showConnectToServer:v30];
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v14, v9);
    char v24 = 1;
    return v24 & 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1004E0BBC(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_1004E0C5C, v5, v4);
}

uint64_t sub_1004E0C5C()
{
  uint64_t v1 = URLQueryItem.value.getter();
  if (!v2 || (uint64_t v3 = sub_100582BEC(v1, v2), v5 = v4, swift_bridgeObjectRelease(), (v5 & 1) != 0))
  {
    swift_release();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v6 = v0[4];
    uint64_t v7 = v0[3];
    uint64_t v8 = static MainActor.shared.getter();
    v0[9] = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    void v9[2] = v6;
    v9[3] = v3;
    v9[4] = v7;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[11] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1004E0DDC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v10, v8, &protocol witness table for MainActor, 0xD000000000000018, 0x80000001005FBC10, sub_1004E58FC, v9, (char *)&type metadata for () + 8);
  }
}

uint64_t sub_1004E0DDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    char v5 = sub_1004E0F64;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    char v5 = sub_1004E0F00;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1004E0F00()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004E0F64()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1004E0FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a1;
  uint64_t v24 = a4;
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_1000CBE70(&qword_100719840);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v22 = (void *)result;
    uint64_t v13 = swift_allocObject();
    uint64_t v21 = a3;
    uint64_t v14 = v13;
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24, v5);
    unint64_t v15 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v24 = v5;
    unint64_t v17 = (v10 + v16 + v15) & ~v16;
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v21;
    *(void *)(v18 + 16) = v14;
    *(void *)(v18 + 24) = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v15, v11, v8);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
    swift_retain();
    id v20 = v22;
    sub_100390AB8(1, (void (*)(uint64_t))sub_1004E5A9C, v18);

    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1004E1258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v24 = a2;
  uint64_t v25 = type metadata accessor for URLComponents();
  uint64_t v4 = *(void *)(v25 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v25);
  uint64_t v6 = sub_1000CBE70(&qword_100719840);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    uint64_t result = swift_release();
    id v21 = Strong;
    if (Strong)
    {
      uint64_t v20 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v6);
      uint64_t v12 = v25;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v23, v25);
      unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v14 = (v8 + *(unsigned __int8 *)(v4 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v15 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v13, v9, v6);
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v15 + v14, (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
      *(void *)(v15 + ((v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
      swift_retain();
      id v16 = v21;
      id v17 = [v21 namedLocationResolver];
      uint64_t v18 = (void *)swift_allocObject();
      void v18[2] = v16;
      void v18[3] = sub_1004E5CD8;
      v18[4] = v15;
      id v19 = v16;
      swift_retain();
      sub_1003FF82C(v24, (uint64_t)sub_10026ADF4, (uint64_t)v18);
      swift_release();

      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1004E15A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v55 = a4;
  uint64_t v57 = a3;
  uint64_t v59 = a2;
  uint64_t v61 = type metadata accessor for URLQueryItem();
  uint64_t v58 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Name = type metadata accessor for DeepLinkComponents.QueryName();
  uint64_t v8 = *(void *)(Name - 8);
  __chkstk_darwin(Name);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_100719820);
  __chkstk_darwin(v11 - 8);
  uint64_t v56 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
    uint64_t v20 = type metadata accessor for DeepLinkComponents.DeepLinkError();
    sub_1004E4F54();
    uint64_t v21 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, enum case for DeepLinkComponents.DeepLinkError.noURLForNamedLocation(_:), v20);
    uint64_t v62 = v21;
    sub_1000CBE70(&qword_100719840);
    return CheckedContinuation.resume(throwing:)();
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  id v60 = v10;
  v24(v10, enum case for DeepLinkComponents.QueryName.filenames(_:), Name);
  uint64_t v25 = URLComponents.queryItems.getter();
  if (v25)
  {
    uint64_t v57 = v8;
    uint64_t v26 = *(void *)(v25 + 16);
    uint64_t v27 = v61;
    if (v26)
    {
      uint64_t v50 = Name;
      id v51 = v19;
      uint64_t v52 = v17;
      uint64_t v53 = v16;
      uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v58 + 16);
      unint64_t v29 = v25 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
      uint64_t v30 = (void (**)(char *, uint64_t))(v58 + 8);
      uint64_t v31 = *(void *)(v58 + 72);
      uint64_t v54 = v25;
      swift_bridgeObjectRetain();
      while (1)
      {
        v28(v6, v29, v27);
        uint64_t v32 = URLQueryItem.name.getter();
        uint64_t v34 = v33;
        if (v32 == DeepLinkComponents.QueryName.rawValue.getter() && v34 == v35)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_15;
        }
        char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v36) {
          break;
        }
        uint64_t v27 = v61;
        (*v30)(v6, v61);
        v29 += v31;
        if (!--v26)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = v52;
          uint64_t v16 = v53;
          uint64_t Name = v50;
          id v19 = v51;
          goto LABEL_11;
        }
      }
      swift_bridgeObjectRelease();
LABEL_15:
      uint64_t v37 = v58;
      uint64_t v38 = (uint64_t)v56;
      uint64_t v27 = v61;
      (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v56, v6, v61);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v27);
      swift_bridgeObjectRelease();
      uint64_t v17 = v52;
      uint64_t v16 = v53;
      uint64_t Name = v50;
      id v19 = v51;
    }
    else
    {
LABEL_11:
      uint64_t v37 = v58;
      uint64_t v38 = (uint64_t)v56;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, 1, 1, v27);
      swift_bridgeObjectRelease();
    }
    uint64_t v8 = v57;
  }
  else
  {
    uint64_t v37 = v58;
    uint64_t v38 = (uint64_t)v56;
    uint64_t v27 = v61;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v56, 1, 1, v61);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v60, Name);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v27) != 1)
  {
    uint64_t v39 = v38;
    uint64_t v40 = URLQueryItem.value.getter();
    uint64_t v42 = v41;
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v39, v27);
    if (!v42) {
      goto LABEL_23;
    }
    uint64_t v62 = v40;
    uint64_t v63 = v42;
    sub_10009D28C();
    uint64_t v43 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
    uint64_t v44 = swift_bridgeObjectRelease();
    __chkstk_darwin(v44);
    *(&v49 - 2) = (uint64_t)v19;
    double v45 = sub_100568E84((void (*)(long long *))sub_1004E5E24, (uint64_t)(&v49 - 4), v43);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_100255768((uint64_t)v45);
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
LABEL_26:
        sub_1000CBE70(&qword_100719840);
        CheckedContinuation.resume(returning:)();
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
      swift_release();
    }
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  sub_1000CBBA4(v38, &qword_100719820);
LABEL_23:
  uint64_t v46 = type metadata accessor for DeepLinkComponents.DeepLinkError();
  sub_1004E4F54();
  uint64_t v47 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v46 - 8) + 104))(v48, enum case for DeepLinkComponents.DeepLinkError.noFilenamesForNamedLocation(_:), v46);
  uint64_t v62 = v47;
  sub_1000CBE70(&qword_100719840);
  CheckedContinuation.resume(throwing:)();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
}

uint64_t sub_1004E1D60()
{
  return swift_bridgeObjectRelease();
}

void sub_1004E1DB8(void *a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4)
{
  uint64_t v8 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    uint64_t v11 = self;
    id v12 = a1;
    id v13 = [v11 defaultManager];
    uint64_t v14 = (void *)swift_allocObject();
    _OWORD v14[2] = v12;
    v14[3] = a3;
    v14[4] = a4;
    aBlock[4] = sub_1004E53F4;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6B50;
    void aBlock[3] = &unk_1006B2B00;
    uint64_t v15 = _Block_copy(aBlock);
    id v16 = v12;
    swift_retain();
    swift_release();
    [v13 fetchURLForItem:v16 completionHandler:v15];
    _Block_release(v15);
  }
  else
  {
    if (a2)
    {
      uint64_t v17 = a2;
    }
    else
    {
      uint64_t v18 = type metadata accessor for DeepLinkComponents.DeepLinkError();
      sub_1004E4F54();
      uint64_t v17 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, enum case for DeepLinkComponents.DeepLinkError.generic(_:), v18);
    }
    *uint64_t v10 = v17;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    a3(v10);
    sub_1000CBBA4((uint64_t)v10, &qword_100714650);
  }
}

uint64_t sub_1004E1FFC(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v45 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v45);
  uint64_t v46 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v41 - v19;
  sub_1000CBC00(a1, (uint64_t)v13, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000CBBA4((uint64_t)v13, &qword_1007076B0);
    static Logger.Application.getter();
    id v21 = a3;
    swift_errorRetain();
    id v22 = v21;
    swift_errorRetain();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      aBlock[0] = v42;
      *(_DWORD *)uint64_t v25 = 136315650;
      uint64_t v51 = sub_10009B0E4(0xD00000000000002ALL, 0x80000001005FBBE0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2112;
      uint64_t v51 = (uint64_t)v22;
      id v27 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v26 = v22;

      *(_WORD *)(v25 + 22) = 2080;
      uint64_t v51 = a2;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v28 = String.init<A>(describing:)();
      uint64_t v51 = sub_10009B0E4(v28, v29, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Failed to fetch URL for: %@ error: %s", (uint8_t *)v25, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v47, v44);
    char v36 = v48;
    uint64_t v37 = v46;
    uint64_t v38 = a2;
    if (!a2)
    {
      uint64_t v39 = type metadata accessor for DeepLinkComponents.DeepLinkError();
      sub_1004E4F54();
      uint64_t v38 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v39 - 8) + 104))(v40, enum case for DeepLinkComponents.DeepLinkError.generic(_:), v39);
    }
    *uint64_t v37 = v38;
    swift_storeEnumTagMultiPayload();
    swift_errorRetain();
    v36(v37);
    return sub_1000CBBA4((uint64_t)v37, &qword_100714650);
  }
  else
  {
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v30(v20, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    unint64_t v31 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v49;
    *(void *)(v32 + 16) = v48;
    *(void *)(v32 + 24) = v33;
    v30((char *)(v32 + v31), v18, v14);
    aBlock[4] = (uint64_t)sub_1004E54CC;
    void aBlock[5] = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    void aBlock[3] = (uint64_t)&unk_1006B2B50;
    uint64_t v34 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v34);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
}

uint64_t sub_1004E2668(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v7, a3, v8);
  swift_storeEnumTagMultiPayload();
  a1(v7);
  return sub_1000CBBA4((uint64_t)v7, &qword_100714650);
}

uint64_t sub_1004E275C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URLQueryItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Name = type metadata accessor for DeepLinkComponents.QueryName();
  uint64_t v11 = *(void *)(Name - 8);
  __chkstk_darwin(Name);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000CBE70(&qword_100719820);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void (**)(char *, void, uint64_t))(v11 + 104);
  uint64_t v44 = v13;
  v17(v13, enum case for DeepLinkComponents.QueryName.scan(_:), Name);
  uint64_t v18 = URLComponents.queryItems.getter();
  if (v18)
  {
    uint64_t v42 = v16;
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v36 = v11;
      uint64_t v37 = Name;
      uint64_t v39 = a1;
      uint64_t v40 = a2;
      uint64_t v41 = v3;
      uint64_t v38 = v7;
      uint64_t v43 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      unint64_t v20 = v18 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      id v21 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v22 = *(void *)(v7 + 72);
      uint64_t v35 = v18;
      swift_bridgeObjectRetain();
      while (1)
      {
        v43(v9, v20, v6);
        uint64_t v23 = URLQueryItem.name.getter();
        uint64_t v25 = v24;
        if (v23 == DeepLinkComponents.QueryName.rawValue.getter() && v25 == v26) {
          break;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_12;
        }
        (*v21)(v9, v6);
        v20 += v22;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          a2 = v40;
          uint64_t v3 = v41;
          uint64_t v7 = v38;
          a1 = v39;
          uint64_t v11 = v36;
          uint64_t Name = v37;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v7 = v38;
      uint64_t v16 = v42;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v42, v9, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
      swift_bridgeObjectRelease();
      a2 = v40;
      uint64_t v3 = v41;
      a1 = v39;
      uint64_t v11 = v36;
      uint64_t Name = v37;
    }
    else
    {
LABEL_9:
      uint64_t v16 = v42;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v42, 1, 1, v6);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v16, 1, 1, v6);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v44, Name);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v16, 1, v6);
  sub_1000CBBA4((uint64_t)v16, &qword_100719820);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v30 = *(void **)(Strong + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    id v31 = v30;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v30 = 0;
  }
  id v32 = v30;
  char v33 = sub_1004E3764(a1, a2, v3, v28 != 1, v30);

  return v33 & 1;
}

void sub_1004E2BA8(uint64_t a1, char a2, void *a3)
{
  if (a2)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a3;
    v7[4] = sub_1004E5E64;
    v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    uint64_t v7[2] = sub_1000666D8;
    v7[3] = &unk_1006B2C18;
    uint64_t v5 = _Block_copy(v7);
    id v6 = a3;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v5);
  }
}

void sub_1004E2C7C(void *a1)
{
  if (a1)
  {
    uint64_t v1 = a1;
    sub_10039A90C(1, 0, 0, v1, v1);
  }
}

uint64_t sub_1004E2CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[2] = a7;
  v8[3] = a8;
  v8[4] = type metadata accessor for MainActor();
  v8[5] = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_task_alloc();
  void v8[6] = v11;
  *uint64_t v11 = v8;
  v11[1] = sub_1004E2D9C;
  return sub_1004E0BBC(a5, a6);
}

uint64_t sub_1004E2D9C()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_1004E2F68;
  }
  else {
    uint64_t v4 = sub_1004E2EF8;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_1004E2EF8()
{
  uint64_t v1 = *(void (**)(void))(v0 + 16);
  swift_release();
  v1(0);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1004E2F68()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  swift_release();
  swift_errorRetain();
  v2(v1);
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1004E2FFC(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t), void (*a8)(uint64_t))
{
  uint64_t v53 = a6;
  uint64_t v54 = a8;
  uint64_t v51 = a5;
  id v52 = a4;
  LODWORD(v49) = a3;
  uint64_t v50 = a2;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = sub_1000CBE70(&qword_100714650);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000CBC00(a1, (uint64_t)v18, &qword_100714650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = *v18;
    swift_errorRetain();
    a7(v19);
    swift_errorRelease();
    return swift_errorRelease();
  }
  char v21 = v49;
  uint64_t v47 = a7;
  uint64_t v48 = v15;
  uint64_t v22 = *(void (**)(char *, uint64_t *, uint64_t))(v11 + 32);
  v22(v15, v18, v10);
  uint64_t v23 = v50;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = Strong;
    if (v21)
    {
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      uint64_t v46 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      v26(v46, v48, v10);
      unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
      unint64_t v49 = (v12 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v45 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v44 = (v45 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v28 = (v44 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v23;
      v22((char *)(v29 + v27), (uint64_t *)v46, v10);
      uint64_t v31 = v51;
      id v30 = v52;
      *(void *)(v29 + v49) = v52;
      *(void *)(v29 + v45) = v31;
      id v32 = v54;
      *(void *)(v29 + v44) = v53;
      char v33 = (void (**)(uint64_t))(v29 + v28);
      *char v33 = v47;
      v33[1] = v32;
      swift_retain();
      id v34 = v30;
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v35 = (uint64_t)v48;
      static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();
      swift_release();

      return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v35, v10);
    }
  }
  uint64_t v36 = (unsigned __int8 *)(v51 + 16);
  uint64_t v37 = (unsigned __int8 *)(v53 + 16);
  id v38 = [v52 options];
  swift_beginAccess();
  int v39 = *v36;
  swift_beginAccess();
  int v40 = *v37;
  uint64_t v41 = swift_unknownObjectWeakLoadStrong();
  uint64_t v42 = (uint64_t)v48;
  if (v41)
  {
    sub_10025412C((uint64_t)v48, v38, 0, v39, v40);
    swift_unknownObjectRelease();
  }

  v47(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v42, v10);
}

void sub_1004E33D0(int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v31 = a7;
  uint64_t v32 = a8;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  unint64_t v28 = a4;
  v26[1] = a2;
  int v27 = a1;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v27;
  *(void *)(v18 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v18 + v14, v13, v10);
  unint64_t v20 = v28;
  uint64_t v19 = v29;
  *(void *)(v18 + v15) = v28;
  *(void *)(v18 + v16) = v19;
  uint64_t v21 = v31;
  *(void *)(v18 + v17) = v30;
  uint64_t v22 = (void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v23 = v32;
  *uint64_t v22 = v21;
  v22[1] = v23;
  aBlock[4] = sub_1004E5840;
  void aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B2BC8;
  uint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  id v25 = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v24);
}

uint64_t sub_1004E35FC(char a1, uint64_t a2, uint64_t a3, id a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void, uint64_t, uint64_t, id))
{
  if ((a1 & 1) == 0)
  {
    id v11 = [a4 options];
    swift_beginAccess();
    int v12 = *(unsigned __int8 *)(a5 + 16);
    swift_beginAccess();
    int v13 = *(unsigned __int8 *)(a6 + 16);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10025412C(a3, v11, 0, v12, v13);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return a7(0, a2, a3, a4);
}

uint64_t sub_1004E3700()
{
  swift_unknownObjectWeakDestroy();
  sub_10003A094(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DeepLinkNavigator()
{
  return self;
}

uint64_t sub_1004E3764(uint64_t a1, void *a2, uint64_t a3, int a4, void *a5)
{
  int v191 = a4;
  uint64_t v180 = a3;
  uint64_t v167 = a2;
  uint64_t v197 = a1;
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  v176 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for URL();
  uint64_t v178 = *(void *)(v179 - 8);
  __chkstk_darwin(v179);
  Swift::String v177 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for DeepLinkComponents.Scheme();
  uint64_t v173 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v172 = (char *)&v162 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URLComponents();
  uint64_t v195 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  int v13 = (char *)&v162 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = v12;
  __chkstk_darwin(v11);
  id v185 = (char *)&v162 - v14;
  uint64_t v15 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v184 = (uint64_t)&v162 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Name = type metadata accessor for DeepLinkComponents.QueryName();
  uint64_t v18 = *(void *)(Name - 8);
  uint64_t v19 = __chkstk_darwin(Name);
  uint64_t v196 = (char *)&v162 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v202 = (char *)&v162 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v201 = (char *)&v162 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v162 - v25);
  uint64_t v27 = sub_1000CBE70(&qword_100719820);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v166 = (char *)&v162 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v170 = (char *)&v162 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v169 = (char *)&v162 - v33;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v162 - v34;
  uint64_t v36 = type metadata accessor for URLQueryItem();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = __chkstk_darwin(v36);
  int v40 = (char *)&v162 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v198 = (char *)&v162 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  unint64_t v199 = (char *)&v162 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  unint64_t v186 = (char *)&v162 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  id v163 = (char *)&v162 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v182 = (char *)&v162 - v50;
  uint64_t v171 = v51;
  __chkstk_darwin(v49);
  NSString v183 = (char *)&v162 - v52;
  uint64_t v53 = swift_allocObject();
  *(unsigned char *)(v53 + 16) = v191;
  uint64_t v194 = v53;
  *(void *)(v53 + 24) = a5;
  uint64_t v200 = v18;
  uint64_t v54 = *(void (**)(char *, void, uint64_t))(v18 + 104);
  uint64_t v203 = v26;
  uint64_t v189 = v18 + 104;
  uint64_t v188 = v54;
  v54((char *)v26, enum case for DeepLinkComponents.QueryName.location(_:), Name);
  uint64_t v165 = a5;
  id v164 = a5;
  uint64_t v55 = URLComponents.queryItems.getter();
  uint64_t v204 = (void (*)(char *, uint64_t, uint64_t))v36;
  uint64_t v192 = Name;
  uint64_t v193 = v10;
  if (v55)
  {
    uint64_t v168 = v35;
    uint64_t v56 = *(void *)(v55 + 16);
    if (v56)
    {
      v181 = v13;
      uint64_t v190 = v37;
      uint64_t v59 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      uint64_t v58 = v37 + 16;
      uint64_t v57 = v59;
      unint64_t v60 = v55 + ((*(unsigned __int8 *)(v58 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 64));
      uint64_t v61 = *(void *)(v58 + 56);
      uint64_t v162 = v55;
      swift_bridgeObjectRetain();
      while (1)
      {
        v57(v40, v60, v36);
        uint64_t v62 = URLQueryItem.name.getter();
        uint64_t v64 = v63;
        if (v62 == DeepLinkComponents.QueryName.rawValue.getter() && v64 == v65) {
          break;
        }
        char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v66) {
          goto LABEL_12;
        }
        uint64_t v36 = (uint64_t)v204;
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v58 - 8))(v40, v204);
        v60 += v61;
        if (!--v56)
        {
          swift_bridgeObjectRelease();
          uint64_t v10 = v193;
          int v13 = v181;
          uint64_t v37 = v190;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_12:
      swift_bridgeObjectRelease();
      uint64_t v37 = v190;
      uint64_t v67 = (uint64_t)v168;
      uint64_t v36 = (uint64_t)v204;
      (*(void (**)(char *, char *, void))(v190 + 32))(v168, v40, v204);
      uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v187(v67, 0, 1, v36);
      swift_bridgeObjectRelease();
      uint64_t v10 = v193;
      int v13 = v181;
    }
    else
    {
LABEL_9:
      uint64_t v67 = (uint64_t)v168;
      uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
      v187((uint64_t)v168, 1, 1, v36);
      swift_bridgeObjectRelease();
    }
    uint64_t Name = v192;
  }
  else
  {
    uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 56);
    v187((uint64_t)v35, 1, 1, v36);
    uint64_t v67 = (uint64_t)v35;
  }
  uint64_t v68 = v200 + 8;
  id v69 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t))(v200 + 8);
  v69(v203, Name);
  uint64_t v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v70(v67, 1, v36) != 1)
  {
    uint64_t v204 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
    uint64_t v89 = v183;
    v204(v183, v67, v36);
    uint64_t v90 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v184, 1, 1, v90);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v182, v89, v36);
    uint64_t v91 = v195;
    (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v185, v197, v10);
    type metadata accessor for MainActor();
    uint64_t v92 = v180;
    swift_retain();
    swift_retain();
    uint64_t v93 = static MainActor.shared.getter();
    unint64_t v94 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v95 = v36;
    unint64_t v96 = (v171 + *(unsigned __int8 *)(v91 + 80) + v94) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
    unint64_t v97 = (v175 + v96 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v98 = (char *)swift_allocObject();
    *((void *)v98 + 2) = v93;
    *((void *)v98 + 3) = &protocol witness table for MainActor;
    *((void *)v98 + 4) = v92;
    v204(&v98[v94], (uint64_t)v182, v95);
    (*(void (**)(char *, char *, uint64_t))(v91 + 32))(&v98[v96], v185, v193);
    unint64_t v99 = (void (**)(uint64_t))&v98[v97];
    id v100 = (void (*)(uint64_t))v194;
    *unint64_t v99 = sub_1004E4F38;
    v99[1] = v100;
    uint64_t v101 = (uint64_t)v98;
    uint64_t v102 = 1;
    sub_10003D154(v184, (uint64_t)&unk_100719838, v101);
    swift_release();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v183, v95);
    goto LABEL_70;
  }
  uint64_t v190 = v37;
  uint64_t v203 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v70;
  id v185 = (char *)v69;
  uint64_t v200 = v68;
  sub_1000CBBA4(v67, &qword_100719820);
  (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v13, v197, v10);
  uint64_t v71 = v173;
  id v72 = v172;
  uint64_t v73 = v174;
  (*(void (**)(char *, void, uint64_t))(v173 + 104))(v172, enum case for DeepLinkComponents.Scheme.file(_:), v174);
  DeepLinkComponents.Scheme.rawValue.getter();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  URLComponents.scheme.setter();
  v188(v201, enum case for DeepLinkComponents.QueryName.open(_:), Name);
  uint64_t v74 = URLComponents.queryItems.getter();
  v181 = v13;
  uint64_t v168 = (char *)(v37 + 48);
  if (v74)
  {
    uint64_t v75 = *(void *)(v74 + 16);
    if (v75)
    {
      uint64_t v76 = *(void (**)(char *, unint64_t, void))(v190 + 16);
      unint64_t v77 = v74 + ((*(unsigned __int8 *)(v190 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v190 + 80));
      uint64_t v78 = (void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v190 + 8);
      uint64_t v79 = *(void *)(v190 + 72);
      swift_bridgeObjectRetain();
      BOOL v80 = v204;
      uint64_t v81 = v198;
      while (1)
      {
        v76(v81, v77, v80);
        uint64_t v82 = URLQueryItem.name.getter();
        uint64_t v84 = v83;
        if (v82 == DeepLinkComponents.QueryName.rawValue.getter() && v84 == v85) {
          break;
        }
        char v86 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v86) {
          goto LABEL_27;
        }
        uint64_t v81 = v198;
        BOOL v80 = v204;
        (*v78)(v198, v204);
        v77 += v79;
        if (!--v75)
        {
          swift_bridgeObjectRelease();
          int v13 = v181;
          uint64_t Name = v192;
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_27:
      swift_bridgeObjectRelease();
      uint64_t v87 = v190;
      uint64_t v103 = v169;
      uint64_t v36 = (uint64_t)v204;
      (*(void (**)(char *, char *, void))(v190 + 32))(v169, v198, v204);
      uint64_t v88 = (uint64_t)v103;
      v187((uint64_t)v103, 0, 1, v36);
      swift_bridgeObjectRelease();
      int v13 = v181;
      uint64_t Name = v192;
    }
    else
    {
LABEL_23:
      uint64_t v87 = v190;
      uint64_t v88 = (uint64_t)v169;
      uint64_t v36 = (uint64_t)v204;
      v187((uint64_t)v169, 1, 1, (uint64_t)v204);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v87 = v190;
    uint64_t v88 = (uint64_t)v169;
    v187((uint64_t)v169, 1, 1, v36);
  }
  ((void (*)(char *, uint64_t))v185)(v201, Name);
  int v104 = v203(v88, 1, v36);
  sub_1000CBBA4(v88, &qword_100719820);
  LODWORD(v198) = v104;
  if (v104 != 1) {
    URLComponents.queryItems.setter();
  }
  uint64_t v105 = swift_allocObject();
  *(unsigned char *)(v105 + 16) = 1;
  uint64_t v201 = (char *)swift_allocObject();
  v201[16] = 1;
  v188(v202, enum case for DeepLinkComponents.QueryName.reveal(_:), Name);
  uint64_t v106 = URLComponents.queryItems.getter();
  if (v106)
  {
    uint64_t v107 = *(void *)(v106 + 16);
    if (v107)
    {
      uint64_t v197 = v105;
      uint64_t v110 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
      uint64_t v109 = v87 + 16;
      uint64_t v108 = v110;
      unint64_t v111 = v106 + ((*(unsigned __int8 *)(v109 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 64));
      uint64_t v112 = *(void *)(v109 + 56);
      swift_bridgeObjectRetain();
      uint64_t v113 = v199;
      while (1)
      {
        v108(v113, v111, v36);
        uint64_t v114 = URLQueryItem.name.getter();
        uint64_t v116 = v115;
        if (v114 == DeepLinkComponents.QueryName.rawValue.getter() && v116 == v117) {
          break;
        }
        char v118 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v118) {
          goto LABEL_41;
        }
        uint64_t v113 = v199;
        uint64_t v36 = (uint64_t)v204;
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v109 - 8))(v199, v204);
        v111 += v112;
        if (!--v107)
        {
          swift_bridgeObjectRelease();
          int v13 = v181;
          uint64_t v87 = v190;
          uint64_t v105 = v197;
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_41:
      swift_bridgeObjectRelease();
      uint64_t v87 = v190;
      uint64_t v120 = v170;
      uint64_t v36 = (uint64_t)v204;
      (*(void (**)(char *, char *, void))(v190 + 32))(v170, v199, v204);
      uint64_t v119 = (uint64_t)v120;
      v187((uint64_t)v120, 0, 1, v36);
      swift_bridgeObjectRelease();
      int v13 = v181;
      uint64_t Name = v192;
      uint64_t v105 = v197;
    }
    else
    {
LABEL_38:
      uint64_t v119 = (uint64_t)v170;
      v187((uint64_t)v170, 1, 1, v36);
      swift_bridgeObjectRelease();
      uint64_t Name = v192;
    }
  }
  else
  {
    uint64_t v119 = (uint64_t)v170;
    v187((uint64_t)v170, 1, 1, v36);
  }
  ((void (*)(char *, uint64_t))v185)(v202, Name);
  int v121 = v203(v119, 1, v36);
  sub_1000CBBA4(v119, &qword_100719820);
  if (v121 != 1)
  {
    *(unsigned char *)(v105 + 16) = 0;
    v188(v196, enum case for DeepLinkComponents.QueryName.showcontents(_:), Name);
    uint64_t v122 = URLComponents.queryItems.getter();
    if (v122)
    {
      uint64_t v123 = *(void *)(v122 + 16);
      if (v123)
      {
        uint64_t v197 = v105;
        uint64_t v126 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
        uint64_t v125 = v87 + 16;
        uint64_t v124 = v126;
        unint64_t v127 = v122 + ((*(unsigned __int8 *)(v125 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 64));
        uint64_t v128 = *(void *)(v125 + 56);
        swift_bridgeObjectRetain();
        id v129 = v186;
        while (1)
        {
          v124(v129, v127, v36);
          uint64_t v130 = URLQueryItem.name.getter();
          uint64_t v132 = v131;
          if (v130 == DeepLinkComponents.QueryName.rawValue.getter() && v132 == v133) {
            break;
          }
          char v134 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v134) {
            goto LABEL_54;
          }
          id v129 = v186;
          uint64_t v36 = (uint64_t)v204;
          (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v125 - 8))(v186, v204);
          v127 += v128;
          if (!--v123)
          {
            swift_bridgeObjectRelease();
            int v13 = v181;
            uint64_t v87 = v190;
            uint64_t v105 = v197;
            goto LABEL_51;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_54:
        swift_bridgeObjectRelease();
        uint64_t v87 = v190;
        uint64_t v136 = v166;
        uint64_t v36 = (uint64_t)v204;
        (*(void (**)(char *, char *, void))(v190 + 32))(v166, v186, v204);
        uint64_t v135 = (uint64_t)v136;
        v187((uint64_t)v136, 0, 1, v36);
        swift_bridgeObjectRelease();
        int v13 = v181;
        uint64_t Name = v192;
        uint64_t v105 = v197;
      }
      else
      {
LABEL_51:
        uint64_t v135 = (uint64_t)v166;
        v187((uint64_t)v166, 1, 1, v36);
        swift_bridgeObjectRelease();
        uint64_t Name = v192;
      }
    }
    else
    {
      uint64_t v135 = (uint64_t)v166;
      v187((uint64_t)v166, 1, 1, v36);
    }
    ((void (*)(char *, uint64_t))v185)(v196, Name);
    if (v203(v135, 1, v36) == 1)
    {
      sub_1000CBBA4(v135, &qword_100719820);
    }
    else
    {
      uint64_t v137 = v163;
      (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v163, v135, v36);
      uint64_t v138 = URLQueryItem.value.getter();
      if (v139)
      {
        if (v138 == 0x65736C6166 && v139 == 0xE500000000000000)
        {
          (*(void (**)(char *, uint64_t))(v87 + 8))(v137, v36);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v140 = _stringCompareWithSmolCheck(_:_:expecting:)();
          (*(void (**)(char *, uint64_t))(v87 + 8))(v137, v36);
          swift_bridgeObjectRelease();
          if ((v140 & 1) == 0) {
            goto LABEL_64;
          }
        }
        v201[16] = 0;
        goto LABEL_64;
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v137, v36);
    }
LABEL_64:
    URLComponents.queryItems.setter();
  }
  uint64_t v141 = (uint64_t)v176;
  URLComponents.url.getter();
  uint64_t v142 = v178;
  uint64_t v143 = v179;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48))(v141, 1, v179) == 1)
  {
    sub_1000CBBA4(v141, &qword_1007076B0);
    uint64_t v144 = type metadata accessor for DeepLinkComponents.DeepLinkError();
    sub_1004E4F54();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v144 - 8) + 104))(v145, enum case for DeepLinkComponents.DeepLinkError.noURLToReveal(_:), v144);
    if (v191)
    {
      uint64_t v146 = swift_allocObject();
      *(void *)(v146 + 16) = v165;
      aBlock[4] = sub_1004E4FE4;
      void aBlock[5] = v146;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B2A38;
      uint64_t v147 = _Block_copy(aBlock);
      id v148 = v164;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v147);
    }
    swift_errorRelease();
    (*(void (**)(char *, uint64_t))(v195 + 8))(v13, v193);
    swift_release();
    swift_release();
    uint64_t v102 = 0;
  }
  else
  {
    uint64_t v149 = v143;
    BOOL v150 = v198 != 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v142 + 32))(v177, v141, v149);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v180;
    *(unsigned char *)(v151 + 24) = v150;
    uint64_t v152 = v194;
    uint64_t v153 = v195;
    uint64_t v154 = v105;
    uint64_t v155 = v167;
    *(void *)(v151 + 32) = v167;
    *(void *)(v151 + 40) = v154;
    *(void *)(v151 + 48) = v201;
    *(void *)(v151 + 56) = sub_1004E4F38;
    *(void *)(v151 + 64) = v152;
    int v156 = self;
    swift_retain();
    swift_retain();
    id v157 = v155;
    swift_retain();
    swift_retain();
    id v158 = [v156 defaultManager];
    uint64_t v159 = swift_allocObject();
    *(void *)(v159 + 16) = sub_1004E5044;
    *(void *)(v159 + 24) = v151;
    swift_retain();
    uint64_t v160 = v177;
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_release();

    swift_release();
    (*(void (**)(char *, uint64_t))(v142 + 8))(v160, v179);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v13, v193);
    swift_release();
    swift_release();
    uint64_t v102 = 1;
  }
LABEL_70:
  swift_release();
  return v102;
}

uint64_t sub_1004E4F00()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004E4F38(uint64_t a1)
{
  sub_1004E2BA8(a1, *(unsigned char *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1004E4F44()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_1004E4F54()
{
  unint64_t result = qword_100719828;
  if (!qword_100719828)
  {
    type metadata accessor for DeepLinkComponents.DeepLinkError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100719828);
  }
  return result;
}

uint64_t sub_1004E4FAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004E4FE4()
{
  sub_1004E2C7C(*(void **)(v0 + 16));
}

uint64_t sub_1004E4FEC()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004E5044(uint64_t a1)
{
  return sub_1004E2FFC(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void (**)(uint64_t))(v1 + 56), *(void (**)(uint64_t))(v1 + 64));
}

uint64_t sub_1004E505C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004E5094(void *a1, uint64_t a2)
{
  sub_1004E1DB8(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1004E509C()
{
  uint64_t v1 = type metadata accessor for URLQueryItem();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_1004E5214(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for URLQueryItem() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for URLComponents() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = (void *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  *uint64_t v18 = v3;
  v18[1] = sub_10000CB70;
  return sub_1004E2CD4(a1, v10, v11, v12, v13, v14, v16, v17);
}

uint64_t sub_1004E53B4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004E53F4(uint64_t a1, uint64_t a2)
{
  return sub_1004E1FFC(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t *))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1004E5400()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1004E54CC()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void (**)(char *))(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1004E2668(v2, v3, v4);
}

uint64_t sub_1004E5530()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

void sub_1004E5654(int a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + 16);
  unint64_t v9 = *(void **)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v6);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + v4;
  uint64_t v13 = (uint64_t *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];

  sub_1004E33D0(a1, v8, v12, v9, v10, v11, v14, v15);
}

uint64_t sub_1004E571C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_1004E5840()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  char v6 = *(unsigned char *)(v0 + 16);
  uint64_t v7 = *(void *)(v0 + 24);
  uint64_t v8 = *(void **)(v0 + v3);
  uint64_t v9 = *(void *)(v0 + v4);
  uint64_t v10 = *(void *)(v0 + v5);
  uint64_t v11 = *(uint64_t (**)(void, uint64_t, uint64_t, id))(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004E35FC(v6, v7, v0 + v2, v8, v9, v10, v11);
}

uint64_t sub_1004E58FC(uint64_t a1)
{
  return sub_1004E0FDC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1004E5908()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004E5940()
{
  uint64_t v1 = sub_1000CBE70(&qword_100719840);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_1004E5A9C()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_100719840) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for URLComponents() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1004E1258(v5, v6, v0 + v2, v7);
}

uint64_t sub_1004E5B70()
{
  uint64_t v1 = sub_1000CBE70(&qword_100719840);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_1004E5CD8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000CBE70(&qword_100719840) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for URLComponents() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004E15A0(a1, v1 + v4, v1 + v7, v8);
}

uint64_t sub_1004E5DDC()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004E5E24()
{
  return sub_1004E1D60();
}

void sub_1004E5E6C(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1004E5F1C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1005A04F0;
  *(void *)(v9 + 32) = a1;
  aBlock[0] = v9;
  specialized Array._endMutation()();
  id v10 = objc_allocWithZone((Class)FPDownloadOperation);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v11 = a1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithItems:isa];

  [v13 setQualityOfService:25];
  uint64_t v14 = (void **)(v4 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
  swift_beginAccess();
  uint64_t v15 = *v14;
  *uint64_t v14 = v11;
  id v16 = v11;
  sub_10013FFF4(v15);

  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a2;
  v17[3] = a3;
  v17[4] = a4;
  aBlock[4] = sub_1004E87C4;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004E5E6C;
  void aBlock[3] = &unk_1006B2DF8;
  uint64_t v18 = _Block_copy(aBlock);
  id v19 = a2;
  swift_retain();
  swift_release();
  [v13 setDownloadCompletionBlock:v18];
  _Block_release(v18);
  id v20 = [self defaultManager];
  [v20 scheduleAction:v13];
}

void sub_1004E6164(unint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  if (!a2)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter())
      {
LABEL_7:
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v19 = *(id *)(a1 + 32);
        }
        id v20 = v19;
        swift_bridgeObjectRelease();
        uint64_t v21 = (void *)swift_allocObject();
        void v21[2] = a4;
        uint64_t v21[3] = a5;
        v21[4] = v20;
        uint64_t v38 = sub_1000D4A60;
        uint64_t v39 = v21;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v35 = 1107296256;
        uint64_t v36 = sub_1000666D8;
        uint64_t v37 = &unk_1006B2E48;
        uint64_t v22 = _Block_copy(&aBlock);
        swift_retain();
        id v23 = v20;
        swift_release();
        DOCRunInMainThread();
        _Block_release(v22);

        return;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = sub_100073F48();
    *(void *)(v32 + 32) = 0xD000000000000035;
    *(void *)(v32 + 40) = 0x80000001005FBC70;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    a4(0);
    return;
  }
  uint64_t v8 = (void *)_convertErrorToNSError(_:)();
  uint64_t v9 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  *(void *)(v10 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v10 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
  *(void *)(v10 + 32) = v8;
  id v11 = v8;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v12 = [v11 domain];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
LABEL_14:
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v11;
      *(void *)(v27 + 24) = a3;
      uint64_t v38 = sub_1003CBB40;
      uint64_t v39 = (void *)v27;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v35 = 1107296256;
      uint64_t v36 = sub_1000666D8;
      uint64_t v37 = &unk_1006B2E98;
      uint64_t v28 = _Block_copy(&aBlock);
      id v29 = v11;
      id v30 = a3;
      swift_release();
      DOCRunInMainThread();
      _Block_release(v28);
      goto LABEL_15;
    }
  }
  if (objc_msgSend(v11, "code", 1, 2) != (id)3072) {
    goto LABEL_14;
  }
  uint64_t v25 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = v33;
  *(void *)(v26 + 56) = &type metadata for String;
  *(void *)(v26 + 64) = sub_100073F48();
  *(void *)(v26 + 32) = 0xD000000000000035;
  *(void *)(v26 + 40) = 0x80000001005FBC70;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
LABEL_15:
  a4(0);
}

void sub_1004E6650(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (char *)Strong;
    unint64_t v7 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
    id v9 = [a1 displayName];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v13 = sub_100073F48();
    *(void *)(v8 + 64) = v13;
    *(void *)(v8 + 32) = v10;
    *(void *)(v8 + 40) = v12;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    if ((*(unsigned char *)(a3 + 40) & 1) == 0)
    {
      uint64_t v14 = (void **)&v6[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
      swift_beginAccess();
      uint64_t v15 = *v14;
      *uint64_t v14 = a1;
      id v16 = a1;
      sub_1000D7C50(v15);

      uint64_t v17 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.default.getter();
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1005A0030;
      *(void *)(v18 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      *(void *)(v18 + 64) = sub_1000C5A24((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
      *(void *)(v18 + 32) = v16;
      id v19 = v16;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
    }
    id v20 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
    id v22 = [a1 displayName];
    uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v25 = v24;

    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = v13;
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v25;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v26 = [self defaultManager];
    uint64_t v27 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = a1;
    long long v29 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v28 + 80) = v29;
    *(void *)(v28 + 96) = *(void *)(a3 + 64);
    long long v30 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)a3;
    *(_OWORD *)(v28 + 48) = v30;
    aBlock[4] = sub_1004E88C8;
    void aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001B6B50;
    void aBlock[3] = &unk_1006B2EE8;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = a1;
    sub_10021E3C0((void *)a3);
    swift_release();
    [v26 fetchURLForItem:v32 completionHandler:v31];
    _Block_release(v31);
  }
}

void sub_1004E6A30(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  sub_1002827DC(a1, (uint64_t)v11);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  sub_1000CBE0C((uint64_t)v11, v17 + v14, &qword_1007076B0);
  *(void *)(v17 + v15) = a4;
  *(void *)(v17 + v16) = v12;
  unint64_t v18 = v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v19 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(v18 + 48) = v19;
  *(void *)(v18 + 64) = *(void *)(a5 + 64);
  long long v20 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)a5;
  *(_OWORD *)(v18 + 16) = v20;
  aBlock[4] = sub_1004E8A64;
  void aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B2F38;
  uint64_t v21 = _Block_copy(aBlock);
  id v22 = a4;
  sub_10021E3C0((void *)a5);
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
}

void sub_1004E6C58(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for URL();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(a1, 1, v7) == 1
    && (objc_msgSend(a2, "doc_isCollaborationInvitation") & 1) == 0)
  {
    unint64_t v16 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1005A0030;
    id v18 = [a2 displayName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *(void *)(v17 + 56) = &type metadata for String;
    *(void *)(v17 + 64) = sub_100073F48();
    *(void *)(v17 + 32) = v19;
    *(void *)(v17 + 40) = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v23 = (void *)Strong;
      uint64_t v24 = (void **)(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem);
      swift_beginAccess();
      uint64_t v25 = *v24;
      *uint64_t v24 = 0;
      sub_1000D7C50(v25);
    }
  }
  else
  {
    uint64_t v8 = *(void (**)(void *, uint64_t))(a4 + 24);
    if (v8) {
      v8(a2, a1);
    }
    char v9 = *(unsigned char *)(a4 + 40);
    uint64_t v10 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
    id v12 = [a2 displayName];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 64) = sub_100073F48();
    *(void *)(v11 + 32) = v13;
    *(void *)(v11 + 40) = v15;
    if (v9)
    {
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      sub_1000CBE0C(a4, (uint64_t)v26, (uint64_t *)&unk_10070C610);
      sub_1000CBE0C((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_10070C610);
      if (v27[0]) {
        [v27[0] didCommitPreviewOf:a2];
      }
    }
    else
    {
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      sub_1000CBE0C(a4, (uint64_t)v26, (uint64_t *)&unk_10070C610);
      sub_1000CBE0C((uint64_t)v26, (uint64_t)v27, (uint64_t *)&unk_10070C610);
      if (v27[0]) {
        [v27[0] didSelectItem:a2 atParentLocation:*(void *)(a4 + 48) wasAlreadySelected:*(unsigned __int8 *)(a4 + 56) onlyRevealIfColumn:0];
      }
    }
  }
}

void sub_1004E6FB8(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    if (a1)
    {
      id v4 = a1;
      sub_1004E85A8(v4);

      uint64_t v3 = v4;
    }
  }
}

void sub_1004E7024(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v12 = Strong;
    if (a1)
    {
      uint64_t v13 = *(void **)(a3 + 64);
      uint64_t v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = a4;
      *(void *)(v15 + 24) = v14;
      long long v16 = *(_OWORD *)(a3 + 48);
      *(_OWORD *)(v15 + 64) = *(_OWORD *)(a3 + 32);
      *(_OWORD *)(v15 + 80) = v16;
      uint64_t v17 = *(void *)(a3 + 64);
      long long v18 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)(v15 + 32) = *(_OWORD *)a3;
      *(_OWORD *)(v15 + 48) = v18;
      *(void *)(v15 + 96) = v17;
      *(void *)(v15 + 104) = a5;
      *(void *)(v15 + 112) = a6;
      id v19 = a1;
      swift_unknownObjectRetain();
      swift_retain();
      sub_10021E3C0((void *)a3);
      swift_retain();
      sub_1004E5F1C(v19, v13, (uint64_t)sub_1004E8774, v15);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

void sub_1004E7174(void *a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(id), uint64_t a6)
{
  uint64_t v68 = a6;
  id v69 = a5;
  uint64_t v67 = a4;
  uint64_t v75 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v71 = *(void *)(v8 - 8);
  uint64_t v72 = v8;
  __chkstk_darwin(v8);
  uint64_t v74 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v11 = swift_allocObject();
  long long v70 = xmmword_1005A0030;
  *(_OWORD *)(v11 + 16) = xmmword_1005A0030;
  id v12 = [a2 displayName];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v16 = sub_100073F48();
  *(void *)(v11 + 64) = v16;
  *(void *)(v11 + 32) = v13;
  *(void *)(v11 + 40) = v15;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v73 = a1;
  if (a1)
  {
    unint64_t v66 = v16;
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      long long v18 = (void *)Strong;
      id v19 = (void **)(Strong + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
      swift_beginAccess();
      uint64_t v20 = *v19;
      if (*v19)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v21 = v73;
        id v22 = v73;
        id v23 = v20;
        char v24 = static NSObject.== infix(_:_:)();

        if (v24)
        {
          uint64_t v25 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.default.getter();
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = v70;
          id v27 = [a2 displayName];
          uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v30 = v29;

          unint64_t v31 = v66;
          *(void *)(v26 + 56) = &type metadata for String;
          *(void *)(v26 + 64) = v31;
          *(void *)(v26 + 32) = v28;
          *(void *)(v26 + 40) = v30;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          id v32 = *(void (**)(id))(v67 + 8);
          if (v32)
          {
            id v33 = v22;
            v32(v73);
          }
          v69(v22);

          return;
        }
      }
      else
      {
        id v21 = v73;
        id v41 = v73;
      }
    }
    else
    {
      id v21 = v73;
      id v40 = v73;
    }
    uint64_t v42 = v74;
    static Logger.UI.getter();
    id v43 = v21;
    swift_retain_n();
    id v44 = v43;
    uint64_t v45 = Logger.logObject.getter();
    int v46 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v45, (os_log_type_t)v46))
    {
      LODWORD(v73) = v46;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315650;
      id v48 = [v44 displayName];
      uint64_t v49 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v51 = v50;

      uint64_t v77 = sub_10009B0E4(v49, v51, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      id v52 = v44;
      id v53 = [v52 description];
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v56 = v55;

      uint64_t v77 = sub_10009B0E4(v54, v56, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 22) = 2080;
      swift_beginAccess();
      uint64_t v57 = swift_unknownObjectWeakLoadStrong();
      if (v57)
      {
        uint64_t v58 = (void *)v57;
        uint64_t v59 = (void **)(v57 + OBJC_IVAR____TtC5Files21DOCInteractionManager_lastSelectedItem);
        swift_beginAccess();
        unint64_t v60 = *v59;
        id v61 = v60;
      }
      else
      {
        unint64_t v60 = 0;
      }
      uint64_t v62 = v74;
      os_log_type_t v63 = v73;
      uint64_t v76 = (uint64_t)v60;
      sub_1000CBE70(&qword_10070B670);
      uint64_t v64 = String.init<A>(describing:)();
      uint64_t v76 = sub_10009B0E4(v64, v65, &v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v71 + 8))(v62, v72);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v72);
    }
  }
  else
  {
    uint64_t v34 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = v70;
    id v36 = [a2 displayName];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v38;

    *(void *)(v35 + 56) = &type metadata for String;
    *(void *)(v35 + 64) = v16;
    *(void *)(v35 + 32) = v37;
    *(void *)(v35 + 40) = v39;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_1004E7888(void *a1, void (*a2)(void))
{
  if (a1)
  {
    id v3 = a1;
    a2();
  }
}

void sub_1004E78E0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a4;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v72 = *(void *)(v6 - 8);
  uint64_t v73 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v67 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v68 = (char *)&v66 - v10;
  __chkstk_darwin(v9);
  uint64_t v71 = (char *)&v66 - v11;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v12 - 8);
  id v69 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.default.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  long long v70 = xmmword_1005A0030;
  *(_OWORD *)(v15 + 16) = xmmword_1005A0030;
  id v16 = [a1 displayName];
  uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v19 = v18;

  *(void *)(v15 + 56) = &type metadata for String;
  unint64_t v20 = sub_100073F48();
  *(void *)(v15 + 64) = v20;
  *(void *)(v15 + 32) = v17;
  *(void *)(v15 + 40) = v19;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  long long v23 = *(_OWORD *)a2;
  *(_OWORD *)(v22 + 40) = *(_OWORD *)(a2 + 16);
  long long v24 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v22 + 72) = v24;
  *(void *)(v22 + 88) = *(void *)(a2 + 64);
  *(_OWORD *)(v22 + 24) = v23;
  sub_10021E3C0((void *)a2);
  if ([a1 isDownloading] && !objc_msgSend(a1, "isDownloaded")) {
    unsigned __int8 v25 = 1;
  }
  else {
    unsigned __int8 v25 = [a1 isExternalDownloadPlaceholder];
  }
  if ([a1 isCloudItem]) {
    char v26 = [a1 isDownloaded] ^ 1;
  }
  else {
    char v26 = 0;
  }
  if ([a1 isFolder])
  {
    id v27 = [a1 fpfs_fpItem];
    uint64_t v28 = v71;
    if (v27)
    {
      uint64_t v29 = v27;
      uint64_t v30 = qword_100704F60;
      id v31 = v27;
      if (v30 != -1) {
        swift_once();
      }
      uint64_t v32 = type metadata accessor for RestorableSettings(0);
      uint64_t v33 = (uint64_t)v69;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v69, 1, 1, v32);
      swift_beginAccess();
      id v34 = v31;
      sub_1004F1DFC(v33, v29, 0);
      swift_endAccess();
    }
    static Logger.UI.getter();
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[TAP] [Interaction] Node is a folder, navigating to the next location.", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
    uint64_t v38 = (void *)DOCNode.sourceIdentifier.getter();
    id v39 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v38 node:a1];

    sub_1000CBE0C(a2, (uint64_t)v76, (uint64_t *)&unk_10070C610);
    sub_1000CBE0C((uint64_t)v76, (uint64_t)v75, (uint64_t *)&unk_10070C610);
    if (v75[0]) {
      [v75[0] didSelectLocation:v39 atParentLocation:*(void *)(a2 + 48)];
    }
    swift_release();

    return;
  }
  if (*(unsigned char *)(a2 + 42) & 1) != 0 && (*(unsigned char *)(a2 + 56) & 1) == 0 || (*(unsigned char *)(a2 + 57)) {
    goto LABEL_27;
  }
  if ((v25 & 1) == 0)
  {
    if (v26)
    {
      id v44 = (void *)static DOCLog.UI.getter();
      LODWORD(v73) = static os_log_type_t.default.getter();
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v70;
      id v46 = [a1 displayName];
      uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v49 = v48;

      *(void *)(v45 + 56) = &type metadata for String;
      *(void *)(v45 + 64) = v20;
      *(void *)(v45 + 32) = v47;
      *(void *)(v45 + 40) = v49;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v50 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v51 = swift_allocObject();
      long long v52 = *(_OWORD *)a2;
      *(_OWORD *)(v51 + 40) = *(_OWORD *)(a2 + 16);
      long long v53 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(v51 + 56) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(v51 + 72) = v53;
      *(void *)(v51 + 16) = v50;
      uint64_t v54 = *(void *)(a2 + 64);
      *(_OWORD *)(v51 + 24) = v52;
      *(void *)(v51 + 88) = v54;
      *(void *)(v51 + 96) = a1;
      *(void *)(v51 + 104) = sub_100282CD4;
      *(void *)(v51 + 112) = v22;
      sub_10021E3C0((void *)a2);
      swift_retain();
      swift_retain();
      swift_unknownObjectRetain();
      DOCNode.fpfs_fetchFPItem(completion:)();
      swift_release();
LABEL_28:
      swift_release();
      goto LABEL_29;
    }
LABEL_27:
    unint64_t v55 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v70;
    id v57 = [a1 displayName];
    uint64_t v58 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v60 = v59;

    *(void *)(v56 + 56) = &type metadata for String;
    *(void *)(v56 + 64) = v20;
    *(void *)(v56 + 32) = v58;
    *(void *)(v56 + 40) = v60;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_100282CD4;
    *(void *)(v61 + 24) = v22;
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)();
    goto LABEL_28;
  }
  if ([a1 isExternalDownloadPlaceholder])
  {
    id v40 = v68;
    static Logger.UI.getter();
    id v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v41, v42))
    {
      id v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "[TAP] [Interaction] Item is a Safari download in progress, don't cancel the D/L, but don't open either", v43, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v73);
    return;
  }
  if ((*(unsigned char *)(a2 + 40) & 1) == 0)
  {
    uint64_t v62 = v67;
    static Logger.UI.getter();
    os_log_type_t v63 = Logger.logObject.getter();
    os_log_type_t v64 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v63, v64))
    {
      unint64_t v65 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v65 = 0;
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "[TAP] [Interaction] Item is a Download in progress, Cancelling D/L", v65, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v72 + 8))(v62, v73);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    DOCNode.fpfs_fetchFPItem(completion:)();
    swift_release_n();
    swift_release();
    return;
  }
LABEL_29:

  swift_release();
}

uint64_t sub_1004E8350()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004E8388()
{
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_1004E83F8()
{
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_1004E8478()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1004E84B0(void *a1)
{
  sub_1004E7888(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1004E84CC(void *a1, void *a2)
{
  if ([a1 isCloudItem]) {
    unsigned __int8 v4 = [a1 isDownloaded];
  }
  else {
    unsigned __int8 v4 = 1;
  }
  id v5 = [a1 cachedDomain];
  if (v5)
  {
    uint64_t v6 = v5;
    char v7 = FPProviderDomain.shouldUseDSEnumeration.getter();
  }
  else
  {
    char v7 = 0;
  }
  if ([a2 browserViewContext] == (id)1) {
    char v8 = 1;
  }
  else {
    char v8 = v4;
  }
  uint64_t result = 1;
  if ((v8 & 1) == 0 && (v7 & 1) == 0)
  {
    if (DOCIsNetworkReachable())
    {
      return 1;
    }
    else
    {
      DOCAlertUserTheNetworkIsNotReachable();
      return 0;
    }
  }
  return result;
}

void sub_1004E85A8(void *a1)
{
  id v2 = [a1 downloadingProgress];
  [v2 cancel];

  id v3 = [self defaultManager];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A04F0;
  *(void *)(v4 + 32) = a1;
  specialized Array._endMutation()();
  id v5 = objc_allocWithZone((Class)FPEvictOperation);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v6 = a1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithItems:isa];

  [v3 scheduleAction:v8];
}

uint64_t sub_1004E86F4()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

void sub_1004E8774(void *a1)
{
  sub_1004E7174(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void (**)(id))(v1 + 104), *(void *)(v1 + 112));
}

uint64_t sub_1004E8784()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004E87C4(unint64_t a1, uint64_t a2)
{
  sub_1004E6164(a1, a2, *(void **)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1004E87D0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004E8810()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004E8850()
{
  swift_release();

  swift_unknownObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 104, 7);
}

void sub_1004E88C8(uint64_t a1, uint64_t a2)
{
  sub_1004E6A30(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), v2 + 32);
}

uint64_t sub_1004E88D4()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  swift_release();
  uint64_t v9 = v0 + v5;
  swift_unknownObjectRelease();
  if (*(void *)(v0 + v5 + 8)) {
    swift_release();
  }
  if (*(void *)(v9 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, v5 + 72, v2 | 7);
}

void sub_1004E8A64()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_1007076B0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = *(void **)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v4);

  sub_1004E6C58(v0 + v2, v5, v6, v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
}

uint64_t sub_1004E8B24(unint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (__CocoaDictionary.count.getter()) {
      goto LABEL_3;
    }
LABEL_6:
    unint64_t v3 = &_swiftEmptyDictionarySingleton;
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v5 = ~v8;
    unint64_t v34 = a1 + 64;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v6 = v10 & *(void *)(a1 + 64);
    unint64_t v7 = a1;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1000CBE70((uint64_t *)&unk_100719930);
  unint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  uint64_t v4 = __CocoaDictionary.makeIterator()();
  unint64_t v34 = 0;
  uint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = v4 | 0x8000000000000000;
LABEL_11:
  int64_t v33 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = (char *)(v3 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while ((v7 & 0x8000000000000000) != 0)
  {
    if (!__CocoaDictionary.Iterator.next()()) {
      goto LABEL_45;
    }
    sub_10009E6C4(0, (unint64_t *)&unk_100706B70);
    swift_dynamicCast();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_dynamicCast();
    uint64_t v18 = v35;
    uint64_t v19 = v36;
LABEL_36:
    uint64_t result = NSObject._rawHashValue(seed:)(v3[5]);
    uint64_t v26 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)&v11[8 * (v27 >> 6)]) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)&v11[8 * (v27 >> 6)])) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)&v11[8 * v28];
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)&v11[(v14 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(v3[6] + v15) = v18;
    *(void *)(v3[7] + v15) = v19;
    ++v3[2];
  }
  if (v6)
  {
    unint64_t v16 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v17 = v16 | (v13 << 6);
LABEL_35:
    uint64_t v18 = *(void **)(*(void *)(v7 + 48) + 8 * v17);
    uint64_t v35 = v18;
    os_log_type_t v36 = *(void **)(*(void *)(v7 + 56) + 8 * v17);
    uint64_t v19 = v36;
    id v24 = v18;
    id v25 = v36;
    goto LABEL_36;
  }
  int64_t v20 = v13 + 1;
  if (__OFADD__(v13, 1))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  if (v20 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v20);
  int64_t v22 = v13 + 1;
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 2;
  if (v13 + 2 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 3;
  if (v13 + 3 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_34;
  }
  int64_t v22 = v13 + 4;
  if (v13 + 4 >= v33) {
    goto LABEL_45;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_34:
    unint64_t v6 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v13 = v22;
    goto LABEL_35;
  }
  int64_t v23 = v13 + 5;
  if (v13 + 5 >= v33)
  {
LABEL_45:
    swift_release();
    sub_10026AD14();
    return (uint64_t)v3;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v13 + 5;
    goto LABEL_34;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v33) {
      goto LABEL_45;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_34;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

unint64_t sub_1004E8F00(uint64_t a1)
{
  uint64_t v1 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1000CBE70((uint64_t *)&unk_1007179C0);
    unint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v32 = v1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v31 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = &v37;
  unint64_t v7 = &v39;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  uint64_t v10 = (char *)&type metadata for Any + 8;
  uint64_t v11 = &type metadata for String;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v20 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v20 >= v31) {
    goto LABEL_32;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v20);
  int64_t v22 = i + 1;
  if (!v21)
  {
    int64_t v22 = i + 2;
    if (i + 2 >= v31) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v22);
    if (!v21)
    {
      int64_t v22 = i + 3;
      if (i + 3 >= v31) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v32 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = i + 4;
        if (i + 4 >= v31) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v32 + 8 * v22);
        if (!v21)
        {
          int64_t v23 = i + 5;
          if (i + 5 < v31)
          {
            unint64_t v21 = *(void *)(v32 + 8 * v23);
            if (v21)
            {
              int64_t v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v22 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v22 >= v31) {
                break;
              }
              unint64_t v21 = *(void *)(v32 + 8 * v22);
              ++v23;
              if (v21) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_10026AD14();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  uint64_t v34 = (v21 - 1) & v21;
  unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; unint64_t v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    id v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v19);
    uint64_t v35 = *v24;
    uint64_t v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1000A54B0(v6, v7);
    sub_1000A54B0(v7, v40);
    sub_1000A54B0(v40, &v38);
    unint64_t result = sub_100042F50(v35, v36);
    unint64_t v25 = result;
    if (v26)
    {
      int64_t v33 = i;
      uint64_t v12 = v7;
      int64_t v13 = v6;
      uint64_t v14 = v1;
      uint64_t v15 = v11;
      unint64_t v16 = v10;
      unint64_t v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v17 = v35;
      v17[1] = v36;
      uint64_t v10 = v16;
      uint64_t v11 = v15;
      uint64_t v1 = v14;
      unint64_t v6 = v13;
      unint64_t v7 = v12;
      int64_t i = v33;
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v25);
      sub_10009B1B8((uint64_t)v18);
      unint64_t result = (unint64_t)sub_1000A54B0(&v38, v18);
      unint64_t v5 = v34;
      if (!v34) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v27 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v27 = v35;
    v27[1] = v36;
    unint64_t result = (unint64_t)sub_1000A54B0(&v38, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v28 = v2[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_34;
    }
    v2[2] = v30;
    unint64_t v5 = v34;
    if (!v34) {
      goto LABEL_11;
    }
LABEL_10:
    uint64_t v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1004E926C(uint64_t a1)
{
  uint64_t v70 = sub_1000CBE70(&qword_100719910);
  __chkstk_darwin(v70);
  id v69 = (char *)v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_1000CBE70(&qword_100719918);
  __chkstk_darwin(v68);
  uint64_t v67 = (_OWORD *)((char *)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v71 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v65 = (char *)v56 - v8;
  __chkstk_darwin(v9);
  os_log_type_t v64 = (char *)v56 - v10;
  uint64_t v63 = sub_1000CBE70(&qword_100719920);
  __chkstk_darwin(v63);
  uint64_t v62 = (uint64_t)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v61 = (char *)v56 - v13;
  uint64_t v72 = a1;
  if (*(void *)(a1 + 16))
  {
    sub_1000CBE70(&qword_100719928);
    uint64_t v14 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v14 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v15 = *(void *)(v72 + 64);
  uint64_t v58 = v72 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(v72 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  v56[1] = -1 << *(unsigned char *)(v72 + 32);
  int64_t v57 = (unint64_t)(63 - v16) >> 6;
  uint64_t v59 = v71 + 16;
  unint64_t v19 = v14 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v73 = 0;
  uint64_t v66 = v6;
  uint64_t v60 = (Swift::Int *)v14;
  while (1)
  {
    if (v18)
    {
      uint64_t v74 = (v18 - 1) & v18;
      unint64_t v24 = __clz(__rbit64(v18)) | (v73 << 6);
      goto LABEL_28;
    }
    int64_t v25 = v73 + 1;
    if (__OFADD__(v73, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v57) {
      goto LABEL_37;
    }
    unint64_t v26 = *(void *)(v58 + 8 * v25);
    int64_t v27 = v73 + 1;
    if (!v26)
    {
      int64_t v27 = v73 + 2;
      if (v73 + 2 >= v57) {
        goto LABEL_37;
      }
      unint64_t v26 = *(void *)(v58 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v73 + 3;
        if (v73 + 3 >= v57) {
          goto LABEL_37;
        }
        unint64_t v26 = *(void *)(v58 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v73 + 4;
          if (v73 + 4 >= v57) {
            goto LABEL_37;
          }
          unint64_t v26 = *(void *)(v58 + 8 * v27);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_27:
    int64_t v73 = v27;
    uint64_t v74 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_28:
    uint64_t v29 = v71;
    uint64_t v30 = v72;
    uint64_t v31 = *(void *)(v71 + 72);
    unint64_t v32 = v31 * v24;
    int64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v71 + 16);
    uint64_t v34 = v61;
    v33(v61, *(void *)(v72 + 48) + v31 * v24, v4);
    unint64_t v35 = *(void *)(v30 + 56) + v32;
    uint64_t v36 = v63;
    v33(&v34[*(int *)(v63 + 48)], v35, v4);
    uint64_t v37 = (uint64_t)v34;
    uint64_t v38 = v62;
    sub_1004EBBC4(v37, v62);
    uint64_t v39 = v38 + *(int *)(v36 + 48);
    id v40 = v69;
    id v41 = &v69[*(int *)(v70 + 48)];
    os_log_type_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
    v42(v65, v38, v4);
    swift_dynamicCast();
    v42(v41, v39, v4);
    id v43 = v67;
    id v44 = (char *)v67 + *(int *)(v68 + 48);
    long long v45 = *((_OWORD *)v40 + 1);
    *uint64_t v67 = *(_OWORD *)v40;
    v43[1] = v45;
    *((void *)v43 + 4) = *((void *)v40 + 4);
    v42(v44, (uint64_t)v41, v4);
    long long v46 = v43[1];
    long long v78 = *v43;
    long long v79 = v46;
    uint64_t v80 = *((void *)v43 + 4);
    uint64_t v47 = v64;
    v42(v64, (uint64_t)v44, v4);
    long long v75 = v78;
    long long v76 = v79;
    uint64_t v77 = v80;
    uint64_t v48 = v66;
    v42(v66, (uint64_t)v47, v4);
    uint64_t v14 = v60;
    uint64_t result = AnyHashable._rawHashValue(seed:)(v60[5]);
    uint64_t v49 = -1 << v14[32];
    unint64_t v50 = result & ~v49;
    unint64_t v51 = v50 >> 6;
    if (((-1 << v50) & ~*(void *)&v19[8 * (v50 >> 6)]) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v50) & ~*(void *)&v19[8 * (v50 >> 6)])) | v50 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v52 = 0;
      unint64_t v53 = (unint64_t)(63 - v49) >> 6;
      do
      {
        if (++v51 == v53 && (v52 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v54 = v51 == v53;
        if (v51 == v53) {
          unint64_t v51 = 0;
        }
        v52 |= v54;
        uint64_t v55 = *(void *)&v19[8 * v51];
      }
      while (v55 == -1);
      unint64_t v21 = __clz(__rbit64(~v55)) + (v51 << 6);
    }
    *(void *)&v19[(v21 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v21;
    uint64_t v22 = *((void *)v14 + 6) + 40 * v21;
    long long v23 = v76;
    *(_OWORD *)uint64_t v22 = v75;
    *(_OWORD *)(v22 + 16) = v23;
    *(void *)(v22 + 32) = v77;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v42)(*((void *)v14 + 7) + v21 * v31, v48, v4);
    ++*((void *)v14 + 2);
    unint64_t v18 = v74;
  }
  int64_t v28 = v73 + 5;
  if (v73 + 5 >= v57)
  {
LABEL_37:
    swift_release();
    sub_10026AD14();
    return (uint64_t)v14;
  }
  unint64_t v26 = *(void *)(v58 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v73 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v57) {
      goto LABEL_37;
    }
    unint64_t v26 = *(void *)(v58 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1004E9944(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_1000CBE70(&qword_100717A00);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v28 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v28 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v28 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    sub_10009B208(*(void *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(void *)&long long v39 = v19;
    *((void *)&v39 + 1) = v18;
    void v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(void *)&v37[0] = v19;
    *((void *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1000A54B0(v38, v32);
    long long v33 = v29;
    long long v34 = v30;
    uint64_t v35 = v31;
    sub_1000A54B0(v32, v36);
    long long v29 = v33;
    long long v30 = v34;
    uint64_t v31 = v35;
    sub_1000A54B0(v36, v37);
    sub_1000A54B0(v37, &v33);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v20 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(void *)(v10 + 32) = v31;
    uint64_t result = (uint64_t)sub_1000A54B0(&v33, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_10026AD14();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v28 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v28 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1004E9DA0()
{
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v2 = v1;
  id v3 = [self linkColor];
  [v2 setTintColor:v3];

  uint64_t v4 = self;
  id v5 = [*(id *)&v0[OBJC_IVAR____TtC5Files23DOCPickerViewController_source] pickerExtension];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  v35[4] = sub_1004EBBBC;
  v35[5] = v6;
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 1107296256;
  _OWORD v35[2] = sub_1004EA2A8;
  v35[3] = &unk_1006B3078;
  uint64_t v7 = _Block_copy(v35);
  int64_t v8 = v0;
  swift_release();
  id v9 = [v4 instantiateWithExtension:v5 completion:v7];
  _Block_release(v7);

  uint64_t v10 = OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController;
  unint64_t v11 = *(void **)&v8[OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController];
  *(void *)&v8[OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController] = v9;

  unint64_t v12 = *(void **)&v8[v10];
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [v12 delayDisplayOfRemoteController];
  int64_t v13 = *(void **)&v8[v10];
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v14 = [v13 view];
  if (!v14)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  int64_t v15 = v14;
  [v14 setAutoresizingMask:18];

  int64_t v16 = *(void **)&v8[v10];
  if (!v16)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v17 = [v16 view];
  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v17;
  id v19 = [v8 view];
  if (!v19)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v20 = v19;
  [v19 bounds];
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;

  [v18 setFrame:v22, v24, v26, v28];
  if (!*(void *)&v8[v10])
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  [v8 addChildViewController:];
  id v29 = [v8 view];
  if (!v29)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  long long v30 = v29;
  uint64_t v31 = *(void **)&v8[v10];
  if (!v31)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  id v32 = [v31 view];
  if (!v32)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  long long v33 = v32;
  [v30 addSubview:v32];

  long long v34 = *(void **)&v8[v10];
  if (v34)
  {
    [v34 didMoveToParentViewController:v8];
    return;
  }
LABEL_25:
  __break(1u);
}

void sub_1004EA0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    id v5 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10059B760;
    id v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a4
                                                               + OBJC_IVAR____TtC5Files23DOCPickerViewController_source), "pickerExtension"));
    id v8 = [v7 identifier];

    if (v8)
    {
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v11 = v10;

      *(void *)(v6 + 56) = &type metadata for String;
      *(void *)(v6 + 64) = sub_100073F48();
      *(void *)(v6 + 32) = v9;
      *(void *)(v6 + 40) = v11;
      uint64_t v12 = _convertErrorToNSError(_:)();
      *(void *)(v6 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v6 + 104) = sub_10018DCDC();
      *(void *)(v6 + 72) = v12;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
    goto LABEL_12;
  }
  int64_t v13 = *(void **)(a4 + OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController);
  if (!v13)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v14 = [v13 remoteViewController];
  if (!v14)
  {
LABEL_13:
    __break(1u);
    return;
  }
  id v15 = v14;
  sub_1004EA390(v14);
}

uint64_t sub_1004EA2A8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = *(void (**)(uint64_t, void *, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v8 = a3;
  id v9 = a4;
  v7(a2, a3, a4);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1004EA390(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  id v100 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v97 = (char *)&v93 - v7;
  __chkstk_darwin(v8);
  uint64_t v101 = (char *)&v93 - v9;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v98 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v93 - v14;
  double v17 = __chkstk_darwin(v16);
  id v19 = (char *)&v93 - v18;
  [a1 setPublicController:v2 v17];
  id v103 = *(id *)&v2[OBJC_IVAR____TtC5Files23DOCPickerViewController_source];
  id v20 = [v103 providerDomain];
  NSString v21 = v20;
  if (v20)
  {
    id v22 = [v20 identifier];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [a1 setIdentifier:v21];

  [a1 setEdgesForExtendedLayout:0];
  uint64_t v110 = sub_1004EAFD0;
  uint64_t v111 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v108 = sub_10044D134;
  uint64_t v109 = &unk_1006B2FD8;
  double v23 = _Block_copy(&aBlock);
  id v24 = sub_1000E94D4(a1, v23);
  _Block_release(v23);
  double v25 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration];
  DOCDocumentPickerExtensionUpdateWithConfiguration();
  id v26 = [v25 urls];
  id v102 = v25;
  if (!v26) {
    goto LABEL_17;
  }
  double v27 = v26;
  sub_10009E6C4(0, &qword_100708ED0);
  unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v28 >> 62))
  {
    if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v50)
  {
LABEL_16:
    swift_bridgeObjectRelease();
LABEL_17:
    uint64_t v33 = (uint64_t)v101;
    unint64_t v99 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v99(v101, 1, 1, v10);
    goto LABEL_18;
  }
LABEL_6:
  unint64_t v96 = v2;
  id v95 = v24;
  unint64_t v94 = v19;
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_41;
    }
    id v29 = *(id *)(v28 + 32);
  }
  long long v30 = v29;
  swift_bridgeObjectRelease();
  id v31 = [v30 url];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v32 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v33 = (uint64_t)v101;
  v32(v101, v15, v10);
  uint64_t v34 = v11;
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v35((char *)v33, 0, 1, v10);
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  int v37 = v36(v33, 1, v10);
  unint64_t v99 = v35;
  if (v37 == 1)
  {
    uint64_t v2 = v96;
    uint64_t v11 = v34;
    id v24 = v95;
LABEL_18:
    sub_1000CBBA4(v33, &qword_1007076B0);
    [v24 _setUploadURLWrapper:0];
    id v41 = v102;
    id v47 = v103;
    uint64_t v49 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
    goto LABEL_19;
  }
  uint64_t v38 = v94;
  v32(v94, (char *)v33, v10);
  long long v39 = v97;
  id v40 = v38;
  (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v97, v38, v10);
  v35(v39, 0, 1, v10);
  id v41 = v102;
  id v42 = [v102 interactionMode];
  if (v36((uint64_t)v39, 1, v10) == 1)
  {
    id v44 = 0;
  }
  else
  {
    URL._bridgeToObjectiveC()(v43);
    id v44 = v45;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v10);
  }
  long long v46 = v95;
  id v47 = v103;
  uint64_t v11 = v34;
  id v48 = [self wrapperWithURL:v44 readonly:v42 == (id)2];

  [v46 _setUploadURLWrapper:v48];
  (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v10);
  uint64_t v2 = v96;
  uint64_t v49 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  id v24 = v46;
LABEL_19:
  unint64_t v106 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
  if ([v41 interactionMode] != (id)3 && objc_msgSend(v41, "interactionMode") != (id)1) {
    goto LABEL_25;
  }
  id v51 = [v47 v49[59]];
  if (!v51) {
    goto LABEL_24;
  }
  char v52 = v51;

  id v53 = [v47 v49[59]];
  if (!v53)
  {
LABEL_41:
    __break(1u);
    return;
  }
  BOOL v54 = v53;
  id v55 = [v53 storageURLs];

  uint64_t v56 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v57 = *(void *)(v56 + 16);
  swift_bridgeObjectRelease();
  if (!v57)
  {
LABEL_24:
    uint64_t v58 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.error.getter();
    os_log(_:dso:log:type:_:)();
  }
LABEL_25:
  id v59 = [v47 v49[59]];
  if (v59)
  {
    uint64_t v60 = v59;
    id v61 = [v59 storageURLs];

    uint64_t v62 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v62 + 16))
    {
      uint64_t v63 = (uint64_t)v100;
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v100, v62 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
      uint64_t v64 = 0;
    }
    else
    {
      uint64_t v64 = 1;
      uint64_t v63 = (uint64_t)v100;
    }
    v99((char *)v63, v64, 1, v10);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v63, 1, v10) == 1)
    {
      sub_1000CBBA4(v63, &qword_1007076B0);
    }
    else
    {
      unint64_t v65 = v98;
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v98, v63, v10);
      uint64_t v109 = (void *)v10;
      uint64_t v66 = sub_100052C70((uint64_t *)&aBlock);
      (*(void (**)(uint64_t *, char *, uint64_t))(v11 + 16))(v66, v65, v10);
      sub_1000A54B0(&aBlock, v105);
      unint64_t v67 = v106;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v104 = v67;
      sub_1003E0814(v105, 0xD000000000000012, 0x80000001005FBF70, isUniquelyReferenced_nonNull_native);
      unint64_t v106 = v104;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v65, v10);
    }
  }
  id v69 = [v47 v49[59]];
  if (v69)
  {
    uint64_t v70 = v69;
    id v71 = [v69 identifier];

    type metadata accessor for FPProviderDomainID(0);
    uint64_t v109 = v72;
    *(void *)&long long aBlock = v71;
    sub_1000A54B0(&aBlock, v105);
    unint64_t v73 = v106;
    char v74 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v73;
    sub_1003E0814(v105, 0xD000000000000012, 0x80000001005FBF50, v74);
    unint64_t v106 = v104;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004FD144(0xD000000000000012, 0x80000001005FBF50, &aBlock);
    sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
  }
  id v75 = [v47 fileProviderDocumentGroup];
  if (v75)
  {
    long long v76 = v75;
    uint64_t v77 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v79 = v78;

    uint64_t v109 = &type metadata for String;
    *(void *)&long long aBlock = v77;
    *((void *)&aBlock + 1) = v79;
    sub_1000A54B0(&aBlock, v105);
    unint64_t v80 = v106;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v104 = v80;
    sub_1003E0814(v105, 0x746E656D75636F64, 0xED000070756F7247, v81);
    unint64_t v82 = v104;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1004FD144(0x746E656D75636F64, 0xED000070756F7247, &aBlock);
    sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
    unint64_t v82 = v106;
  }
  id v83 = [v47 displayName];
  uint64_t v84 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v86 = v85;

  uint64_t v109 = &type metadata for String;
  *(void *)&long long aBlock = v84;
  *((void *)&aBlock + 1) = v86;
  sub_1000A54B0(&aBlock, v105);
  char v87 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v104 = v82;
  sub_1003E0814(v105, 0x657A696C61636F6CLL, 0xED0000656D614E64, v87);
  uint64_t v88 = v104;
  swift_bridgeObjectRelease();
  sub_1004E9944(v88);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v90 = swift_allocObject();
  *(void *)(v90 + 16) = v2;
  uint64_t v110 = sub_1004EBBA0;
  uint64_t v111 = v90;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v108 = sub_1004EB0A4;
  uint64_t v109 = &unk_1006B3028;
  uint64_t v91 = _Block_copy(&aBlock);
  uint64_t v92 = v2;
  swift_release();
  [v24 _prepareWithExtensionInfo:isa completionHandler:v91];
  _Block_release(v91);
  swift_unknownObjectRelease();
}

uint64_t sub_1004EAFD0()
{
  uint64_t v0 = (void *)static DOCLog.Source.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1005A0030;
  uint64_t v2 = _convertErrorToNSError(_:)();
  *(void *)(v1 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  *(void *)(v1 + 64) = sub_10018DCDC();
  *(void *)(v1 + 32) = v2;
  os_log(_:dso:log:type:_:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EB0A4(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1004EB0F8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  aBlock[4] = sub_1004EBB04;
  void aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B2FB0;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  [v1 dismissViewControllerAnimated:1 completion:v9];
  _Block_release(v9);
}

void sub_1004EB2C4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    uint64_t v5 = OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration;
    uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC5Files23DOCPickerViewController_configuration);
    if ([v6 useSharedQuickLook])
    {
      id v7 = [v6 sceneIdentifier];
      if (v7)
      {
        uint64_t v8 = qword_1007052D8;
        id v9 = v7;
        if (v8 != -1) {
          swift_once();
        }
        uint64_t v10 = (void *)qword_10071B4C0;
        uint64_t v11 = (char *)[(id)qword_10071B4C0 objectForKey:v9];
        if (!v11)
        {
          id v12 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
          uint64_t v11 = (char *)DOCPreviewController.init()();
          [v10 setObject:v11 forKey:v9];
        }

        *(void *)&v11[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = 0;
        swift_unknownObjectWeakAssign();
        sub_1000CBE70((uint64_t *)&unk_1007087F0);
        uint64_t v13 = type metadata accessor for URL();
        uint64_t v14 = *(void *)(v13 - 8);
        unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        unint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v16 + v15, a2, v13);
        double v17 = *(void **)&v4[OBJC_IVAR____TtC5Files23DOCPickerViewController_source];
        id v18 = v17;
        DOCPreviewController.set(_:defaultIndex:)(v16, v17, 1, 0, 1);

        swift_bridgeObjectRelease();
      }
      else
      {
        id v19 = (void *)static DOCLog.Source.getter();
        static os_log_type_t.debug.getter();
        os_log(_:dso:log:type:_:)();
      }
    }
    if ([*(id *)&v4[v5] interactionMode] == (id)1) {
      uint64_t v20 = [*(id *)&v4[OBJC_IVAR____TtC5Files23DOCPickerViewController_source] supportsInteractionMode:1] ^ 1;
    }
    else {
      uint64_t v20 = 0;
    }
    NSString v21 = &v4[OBJC_IVAR____TtC5Files23DOCPickerViewController_delegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v22 = *((void *)v21 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 24))(a2, v20, ObjectType, v22);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1004EB93C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCPickerViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCPickerViewController()
{
  return self;
}

uint64_t sub_1004EBA00()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004EBA38()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_1004EBB04()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1004EB2C4(v2, v3);
}

uint64_t sub_1004EBB68()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004EBBA0()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files23DOCPickerViewController_placeholderViewController) endDelayingDisplayOfRemoteController];
}

void sub_1004EBBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1004EA0D4(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_1004EBBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100719920);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1004EBC48(void *a1)
{
  id result = [a1 displayName];
  if (result)
  {

    id result = [a1 node];
    if (result)
    {
      uint64_t v4 = result;
      uint64_t v5 = (void *)swift_allocObject();
      uint64_t v5[2] = v4;
      void v5[3] = a1;
      void v5[4] = v1;
      v8[4] = sub_1004F1820;
      v8[5] = v5;
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 1107296256;
      v8[2] = sub_1004EEC24;
      v8[3] = &unk_1006B31A8;
      uint64_t v6 = _Block_copy(v8);
      swift_unknownObjectRetain();
      id v7 = a1;
      swift_release();
      [v4 fetchParents:v6];
      _Block_release(v6);
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

id sub_1004EBD70()
{
  id v1 = [v0 displayName];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_5:
    uint64_t v8 = countAndFlagsBits;

    return (id)v8;
  }
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v2 = result;
    v9._object = (void *)0x80000001005FC450;
    v5._uint64_t countAndFlagsBits = 2960685;
    v5._object = (void *)0xE300000000000000;
    v6._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v6._object = (void *)0xEB00000000656C62;
    v7._uint64_t countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    v9._uint64_t countAndFlagsBits = 0xD000000000000053;
    uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v2, v7, v9)._countAndFlagsBits;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004EBE44(uint64_t a1)
{
  sub_1000D4774(a1, (uint64_t)v4);
  sub_1000CBE70((uint64_t *)&unk_1007174F0);
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  if (swift_dynamicCast())
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    char v1 = static NSObject.== infix(_:_:)();

    return v1 & 1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_1004EBF3C()
{
  return sub_1004EBD70();
}

uint64_t sub_1004EBF60(uint64_t a1)
{
  return sub_1004EBE44(a1) & 1;
}

id sub_1004EBF90(void *a1)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v7 - 8);
  Swift::String v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)v44 - v11;
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  uint64_t v13 = v1;
  uint64_t v14 = NSCoder.decodeObject<A>(of:forKey:)();
  if (v14)
  {
    unint64_t v15 = (void *)v14;
    uint64_t v58 = v4;
    NSString v16 = String._bridgeToObjectiveC()();
    unsigned int v17 = [a1 decodeBoolForKey:v16];

    sub_1004EFC60();
    p_info = &OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession.info;
    if (v17)
    {
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10059B760;
      *(void *)(inited + 32) = sub_10009E6C4(0, &qword_100719C38);
      *(void *)(inited + 40) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
      *(void *)&v13[OBJC_IVAR___DOCGoToRecentLocation_location] = v15;
      id v20 = v15;
      sub_1004F3274(inited);
      swift_bridgeObjectRelease();
      NSCoder.decodeTopLevelObject(of:forKey:)();
      swift_bridgeObjectRelease();
      if (v62)
      {
        sub_1000CBE70((uint64_t *)&unk_100719C50);
        p_info = &OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession.info;
        if (swift_dynamicCast())
        {
          id v45 = v20;
          id v47 = a1;
          long long v46 = v13;
          uint64_t v23 = v60;
          sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
          static FINode.startIfNeeded()();
          v61[0] = _swiftEmptyArrayStorage;
          uint64_t v24 = *(void *)(v23 + 16);
          v44[2] = v23;
          if (v24)
          {
            uint64_t v25 = v58 + 16;
            id v55 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
            id v26 = (char *)(v23
                         + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80)));
            uint64_t v53 = *(void *)(v58 + 72);
            unint64_t v27 = v58 + 56;
            BOOL v54 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
            uint64_t v50 = (void (**)(char *, char *, uint64_t))(v58 + 32);
            swift_bridgeObjectRetain();
            v44[1] = v27 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
            id v48 = v6;
            char v52 = (void (**)(char *, void, uint64_t, uint64_t))(v25 + 40);
            id v51 = v12;
            uint64_t v58 = v25;
            uint64_t v49 = (void (**)(char *, uint64_t))(v25 - 8);
            while (1)
            {
              uint64_t v56 = v24;
              uint64_t v57 = v26;
              unint64_t v28 = v26;
              id v29 = v55;
              v55(v12, v28, v3);
              long long v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v27;
              (*(void (**)(char *, void, uint64_t, uint64_t))v27)(v12, 0, 1, v3);
              id v31 = *v54;
              if ((*v54)(v12, 1, v3) == 1) {
                break;
              }
              (*v50)(v6, v12, v3);
              v29(v9, v6, v3);
              v30(v9, 0, 1, v3);
              if (v31(v9, 1, v3) == 1)
              {
                uint64_t v33 = 0;
                uint64_t v34 = v56;
                uint64_t v35 = v49;
              }
              else
              {
                URL._bridgeToObjectiveC()(v32);
                uint64_t v33 = v36;
                uint64_t v35 = v49;
                (*v49)(v9, v3);
                uint64_t v34 = v56;
              }
              id v37 = [self fiNodeFromURL:v33];

              (*v35)(v6, v3);
              id v12 = v51;
              if (v37)
              {
                specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
                if (*(void *)((v61[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v61[0] & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
                specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized Array._endMutation()();
                Swift::String v6 = v48;
              }
              id v26 = &v57[v53];
              uint64_t v24 = v34 - 1;
              unint64_t v27 = (unint64_t)v52;
              if (!v24)
              {
                v30(v12, 1, 1, v3);
                break;
              }
            }
          }
          else
          {
            id v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56);
            swift_bridgeObjectRetain();
            v42(v12, 1, 1, v3);
          }
          swift_bridgeObjectRelease();
          uint64_t v38 = v61[0];
          swift_bridgeObjectRelease();

          uint64_t v13 = v46;
          goto LABEL_32;
        }

LABEL_25:
        goto LABEL_26;
      }

      sub_1000CBBA4((uint64_t)v61, (uint64_t *)&unk_100705D60);
      p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession + 32);
    }
    else
    {
      uint64_t v21 = swift_initStackObject();
      *(_OWORD *)(v21 + 16) = xmmword_10059B760;
      *(void *)(v21 + 32) = sub_10009E6C4(0, &qword_100719C38);
      *(void *)(v21 + 40) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      *(void *)&v13[OBJC_IVAR___DOCGoToRecentLocation_location] = v15;
      id v22 = v15;
      sub_1004F3274(v21);
      swift_bridgeObjectRelease();
      NSCoder.decodeTopLevelObject(of:forKey:)();
      swift_bridgeObjectRelease();

      if (v62)
      {
        sub_1000CBE70((uint64_t *)&unk_100707B20);
        if (swift_dynamicCast())
        {
          id v47 = a1;
          uint64_t v38 = v60;
LABEL_32:
          *(void *)&v13[OBJC_IVAR___DOCGoToRecentLocation_parents] = v38;

          id v43 = (objc_class *)type metadata accessor for DOCGoToRecentLocation();
          v59.receiver = v13;
          v59.super_class = v43;
          [super init];

          return v40;
        }
        goto LABEL_25;
      }

      sub_1000CBBA4((uint64_t)v61, (uint64_t *)&unk_100705D60);
    }
LABEL_26:
    long long v39 = *(void **)((char *)&p_info[296]->flags + (void)v13);

    goto LABEL_27;
  }

LABEL_27:
  type metadata accessor for DOCGoToRecentLocation();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1004EC7A4(void *a1)
{
  uint64_t v41 = sub_1000CBE70(&qword_1007076B0);
  id v44 = *(unsigned __int8 **)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v40 - v6;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR___DOCGoToRecentLocation_location);
  NSString v9 = String._bridgeToObjectiveC()();
  id v42 = a1;
  [a1 encodeObject:v8 forKey:v9];

  unint64_t v10 = *(void *)(v1 + OBJC_IVAR___DOCGoToRecentLocation_parents);
  unint64_t v43 = v10 >> 62;
  if (v10 >> 62) {
    goto LABEL_48;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v11)
  {
    while ((v10 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = 0;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v13 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        swift_getObjectType();
        char v14 = DOCNode.isFINode.getter();
        swift_unknownObjectRelease();
        if ((v14 & 1) == 0) {
          goto LABEL_29;
        }
        ++v12;
        if (v13 == v11) {
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      swift_bridgeObjectRetain_n();
      uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
      if (!v11) {
        goto LABEL_13;
      }
    }
    uint64_t v15 = 0;
    while (1)
    {
      uint64_t v16 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_47;
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      char v17 = DOCNode.isFINode.getter();
      swift_unknownObjectRelease();
      if ((v17 & 1) == 0) {
        break;
      }
      ++v15;
      if (v16 == v11) {
        goto LABEL_13;
      }
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
    if (v43)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      if (v32) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (v32)
      {
LABEL_31:
        if (v32 < 1) {
          goto LABEL_51;
        }
        for (uint64_t i = 0; i != v32; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            uint64_t v34 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v34 = *(void **)(v10 + 8 * i + 32);
            swift_unknownObjectRetain();
          }
          id v35 = [v34 fpfs_fpItem];
          swift_unknownObjectRelease();
          if (v35)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v36 = String._bridgeToObjectiveC()();
    id v37 = v42;
    [v42 encodeBool:0 forKey:v36];

    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v44 = (unsigned __int8 *)String._bridgeToObjectiveC()();
    [v37 encodeObject:isa forKey:v44];

    long long v39 = v44;

    return;
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  if (!v43)
  {
    uint64_t v18 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_15;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    NSString v28 = String._bridgeToObjectiveC()();
    id v29 = v42;
    [v42 encodeBool:1 forKey:v28];

    Class v30 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    NSString v31 = String._bridgeToObjectiveC()();
    [v29 encodeObject:v30 forKey:v31];

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  if (!v18) {
    goto LABEL_28;
  }
LABEL_15:
  unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
  sub_100191294(0, v18 & ~(v18 >> 63), 0);
  if ((v18 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = 0;
    id v20 = (void *)v45;
    do
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        uint64_t v21 = *(void **)(v10 + 8 * v19 + 32);
        swift_unknownObjectRetain();
      }
      id v22 = [v21 nodeURL];
      if (v22)
      {
        uint64_t v23 = v22;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v24 = type metadata accessor for URL();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v4, 0, 1, v24);
      }
      else
      {
        uint64_t v25 = type metadata accessor for URL();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
      }
      sub_1000CBE0C((uint64_t)v4, (uint64_t)v7, &qword_1007076B0);
      swift_unknownObjectRelease();
      unint64_t v45 = (unint64_t)v20;
      unint64_t v27 = v20[2];
      unint64_t v26 = v20[3];
      if (v27 >= v26 >> 1)
      {
        sub_100191294(v26 > 1, v27 + 1, 1);
        id v20 = (void *)v45;
      }
      ++v19;
      v20[2] = v27 + 1;
      sub_1000CBE0C((uint64_t)v7, (uint64_t)v20 + ((v44[80] + 32) & ~(unint64_t)v44[80]) + *((void *)v44 + 9) * v27, &qword_1007076B0);
    }
    while (v18 != v19);
    goto LABEL_28;
  }
  __break(1u);
LABEL_51:
  __break(1u);
}

id sub_1004ECEF0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCGoToRecentLocation();
  [super dealloc];
}

uint64_t type metadata accessor for DOCGoToRecentLocation()
{
  return self;
}

uint64_t sub_1004ECF94()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  sub_1000A6B78(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

id sub_1004ECFE8()
{
  uint64_t v1 = (void *)v0[5];
  if (v1)
  {
    id v2 = (id)v0[5];
  }
  else
  {
    uint64_t v3 = v0[3];
    uint64_t v4 = v0[4];
    sub_1000A6B78(v0, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
    id v5 = objc_allocWithZone((Class)NSAttributedString);
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v2 = [v5 initWithString:v6];

    uint64_t v1 = 0;
  }
  id v7 = v1;
  return v2;
}

uint64_t sub_1004ED0A4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000D4774(v1, a1);
}

uint64_t sub_1004ED0C4()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1004ED0D4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_getObjectType();
  uint64_t v4 = (void *)DOCNode.sourceIdentifier.getter();
  id v5 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v4 node:v3];

  uint64_t result = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  a1[3] = result;
  a1[4] = &off_1006B30A0;
  *a1 = v5;
  return result;
}

uint64_t sub_1004ED160()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1004ED168()
{
  id v1 = [*v0 displayName];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_1004ED1C0()
{
  id v1 = [*v0 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v2 = objc_allocWithZone((Class)NSAttributedString);
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithString:v3];

  return v4;
}

uint64_t sub_1004ED258@<X0>(void *a1@<X8>)
{
  id v3 = [*v1 identifier];
  id v4 = [objc_allocWithZone((Class)DOCConcreteLocation) initWithSourceIdentifier:v3 node:0];

  uint64_t result = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  a1[3] = result;
  a1[4] = &off_1006B30A0;
  *a1 = v4;
  return result;
}

id sub_1004ED2EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DOCItemSortMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection] = 0;
  uint64_t v7 = OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_semaphore;
  uint64_t v8 = v1;
  *(void *)&v1[v7] = dispatch_semaphore_create(0);
  NSString v9 = &v8[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler];
  *(void *)NSString v9 = 0;
  *((void *)v9 + 1) = 0;
  unint64_t v10 = &v8[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix];
  *(void *)unint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  UUID.init()();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for DOCItemSortMode.name(_:), v3);
  DOCItemSortDescriptor.init(type:isReversed:)();
  sub_1000B230C(a1, (uint64_t)&v8[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_itemCollectionConfiguration]);

  uint64_t v11 = (objc_class *)type metadata accessor for DOCItemCollectionCandidateSource();
  v14.receiver = v8;
  v14.super_class = v11;
  [super init];
  sub_1000A4D20(a1);
  return v12;
}

id sub_1004ED484()
{
  id v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection];
  if (v2)
  {
    id v3 = v2;
    sub_10019E3AC();
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCItemCollectionCandidateSource();
  return [super dealloc];
}

uint64_t sub_1004ED664()
{
  return type metadata accessor for DOCItemCollectionCandidateSource();
}

uint64_t type metadata accessor for DOCItemCollectionCandidateSource()
{
  uint64_t result = qword_1007199D8;
  if (!qword_1007199D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004ED6B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  objc_super v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (void *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix);
  void *v15 = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  uint64_t v16 = v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 40))(v16, v14, v11);
  swift_endAccess();
  char v17 = (void *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler);
  uint64_t v18 = *(void *)(v5 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler);
  void *v17 = a4;
  v17[1] = a5;
  swift_retain();
  sub_1000A7258(v18);
  sub_1004ED840();
  sub_1004EDB6C();
}

void sub_1004ED840()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_1007086D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection;
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection))
  {
    NSString v6 = (void **)(v0 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_itemCollectionConfiguration);
    uint64_t v7 = type metadata accessor for DOCItemCollectionConfiguration();
    uint64_t v8 = *(void **)((char *)v6 + *(int *)(v7 + 52));
    if (v8)
    {
      *(void *)(v0 + v5) = v8;
      id v9 = v8;
    }
    else
    {
      unint64_t v10 = *(void **)((char *)v6 + *(int *)(v7 + 48));
      if (v10)
      {
        uint64_t v11 = type metadata accessor for DOCNodeCollection();
        uint64_t v13 = *v6;
        uint64_t v12 = v6[1];
        uint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain_n();
        id v15 = v12;
        id v16 = v13;
        v33[12] = 1;
        uint64_t v17 = sub_10001A2F0(v10, v12, v13, 0x100000000uLL, v11, ObjectType);
        id v18 = [v16 identifier];
        id v19 = [self defaultPermission];
        id v20 = _s5Files21DOCFileProviderSourceC22itemFilteringPredicate3for21enumerationProperties17managedPermission0E23CollectionConfiguration08existingG0So11NSPredicateCSo011DOCDocumentD10Identifiera_So014DOCEnumerationJ0CSgSo010DOCManagedL0CAA07DOCItemmN0VAKSgtFZ_0((uint64_t)v18, 0, v19, (uint64_t)v6, 0);

        uint64_t v21 = *(char **)(v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type);
        if (*(unsigned char *)(v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16))
        {
          id v22 = *(id *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate];
          *(void *)&v21[OBJC_IVAR____TtC5Files23DOCFileSystemCollection_itemFilteringPredicate] = v20;
          id v23 = v20;
        }
        else
        {
          uint64_t v24 = *(void *)(v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 8);
          id v22 = v20;
          sub_10007896C(v21, v24, 0);
          swift_unknownObjectRelease();
          [v21 setItemFilteringPredicate:v22];
        }
        uint64_t v25 = *(void **)(v1 + v5);
        *(void *)(v1 + v5) = v17;
        swift_unknownObjectRelease();
      }
    }
    unint64_t v26 = *(char **)(v1 + v5);
    if (v26)
    {
      *(void *)&v26[OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate + 8] = &off_1006B30E8;
      swift_unknownObjectWeakAssign();
      unint64_t v27 = v26;
      sub_10006415C();

      NSString v28 = *(void **)(v1 + v5);
      if (v28)
      {
        uint64_t v29 = v1 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_sortingDescriptor;
        uint64_t v30 = type metadata accessor for DOCItemSortDescriptor();
        uint64_t v31 = *(void *)(v30 - 8);
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v31 + 16))(v4, v29, v30);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v4, 0, 1, v30);
        id v32 = v28;
        DOCNodeCollection.reorderItems(with:)((uint64_t)v4);

        sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_1007086D0);
      }
    }
  }
}

void sub_1004EDB6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_nodeCollection];
  if (!v6) {
    return;
  }
  id v27 = v6;
  if (([v27 isGathering] & 1) == 0)
  {
    uint64_t v8 = *(void (**)(void, void))&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler];
    if (!v8) {
      goto LABEL_23;
    }
    uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_updateHandler + 8];
    uint64_t v10 = swift_retain();
    unint64_t v11 = sub_10007CC5C(v10);
    uint64_t v12 = v1;
    unint64_t v13 = (unint64_t)sub_1004F0020(v11, v12);

    if (v13 >> 62)
    {
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_9:
        v23[0] = v12;
        v23[1] = v9;
        uint64_t v24 = v8;
        uint64_t v25 = v3;
        uint64_t v26 = v2;
        NSString v28 = _swiftEmptyArrayStorage;
        sub_100190FB4(0, v14 & ~(v14 >> 63), 0);
        if ((v14 & 0x8000000000000000) == 0)
        {
          uint64_t v15 = 0;
          id v16 = v28;
          do
          {
            if ((v13 & 0xC000000000000001) != 0)
            {
              uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              uint64_t v17 = *(void *)(v13 + 8 * v15 + 32);
              swift_unknownObjectRetain();
            }
            NSString v28 = v16;
            unint64_t v19 = v16[2];
            unint64_t v18 = v16[3];
            if (v19 >= v18 >> 1)
            {
              sub_100190FB4(v18 > 1, v19 + 1, 1);
              id v16 = v28;
            }
            ++v15;
            _OWORD v16[2] = v19 + 1;
            id v20 = &v16[2 * v19];
            _DWORD v20[4] = v17;
            *((unsigned char *)v20 + 40) = 2;
          }
          while (v14 != v15);
          swift_bridgeObjectRelease();
          uint64_t v3 = v25;
          uint64_t v2 = v26;
          uint64_t v8 = v24;
          uint64_t v12 = (void *)v23[0];
          goto LABEL_20;
        }
        __break(1u);
LABEL_23:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease();
    id v16 = _swiftEmptyArrayStorage;
LABEL_20:
    uint64_t v21 = (char *)v12 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_requestID;
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v21, v2);
    id v22 = sub_1004F2AE0((uint64_t)v16);
    swift_bridgeObjectRelease();
    v8(v5, v22);
    sub_1000A7258((uint64_t)v8);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return;
  }
  id v7 = v27;
}

uint64_t sub_1004EDED8(void **a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  swift_getObjectType();
  id v9 = [v8 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v10 = String.doc_sanitizedForComparison.getter();
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (![v8 isFolder])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v32[0] = v10;
  v32[1] = v12;
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix);
  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC5Files32DOCItemCollectionCandidateSource_prefix + 8);
  uint64_t v29 = v5;
  uint64_t v30 = v14;
  uint64_t v31 = v13;
  sub_10013BF8C();
  sub_10013BFE0();
  char v15 = BidirectionalCollection<>.starts<A>(with:)();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0) {
    return 0;
  }
  id v16 = [self sharedManager];
  char v17 = sub_1004EFCC0(v8);

  if (v17) {
    return 1;
  }
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.debug.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    int v27 = v21;
    uint64_t v23 = v22;
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v28 = v4;
    uint64_t v30 = sub_10009B0E4(0xD000000000000013, 0x80000001005FC3C0, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v26 = v7;
    uint64_t v24 = DOCNode.nodeDescription.getter();
    uint64_t v30 = sub_10009B0E4(v24, v25, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v27, "%s [PROTECTED APPS] filtering out suggested node: %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v4);
  }
  return 0;
}

uint64_t sub_1004EE2A8()
{
  uint64_t result = type metadata accessor for DOCItemCollectionConfiguration();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for DOCItemSortDescriptor();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

void sub_1004EE3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1004EE400(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v63 - v12;
  if (a2)
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain();
    swift_errorRetain();
    swift_unknownObjectRetain();
    swift_errorRetain();
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v64 = v7;
      uint64_t v67 = v17;
      *(_DWORD *)uint64_t v16 = 136315394;
      swift_getObjectType();
      uint64_t v18 = DOCNode.nodeDescription.getter();
      uint64_t v66 = sub_10009B0E4(v18, v19, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v66 = a2;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076E0);
      uint64_t v20 = String.init<A>(describing:)();
      uint64_t v66 = sub_10009B0E4(v20, v21, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to fetch all parents for node: %s. Error: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v64);
      return;
    }
    swift_unknownObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    id v37 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v38 = v10;
LABEL_17:
    v37(v38, v7);
    return;
  }
  if (!a1)
  {
    static Logger.UI.getter();
    swift_unknownObjectRetain_n();
    long long v39 = Logger.logObject.getter();
    uint64_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, (os_log_type_t)v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t v64 = v7;
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_getObjectType();
      uint64_t v42 = DOCNode.nodeDescription.getter();
      uint64_t v66 = sub_10009B0E4(v42, v43, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v40, "Received nil for parents of %s.", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v64);
      return;
    }

    swift_unknownObjectRelease_n();
    id v37 = *(void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v38 = v13;
    goto LABEL_17;
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005A04F0;
  uint64_t v23 = (objc_class *)type metadata accessor for DOCGoToRecentLocation();
  uint64_t v24 = (char *)objc_allocWithZone(v23);
  *(void *)&v24[OBJC_IVAR___DOCGoToRecentLocation_location] = a4;
  *(void *)&v24[OBJC_IVAR___DOCGoToRecentLocation_parents] = a1;
  v65.receiver = v24;
  v65.super_class = v23;
  swift_bridgeObjectRetain();
  id v25 = a4;
  *(void *)(v22 + 32) = [super init];
  uint64_t v67 = v22;
  specialized Array._endMutation()();
  unint64_t v26 = v67;
  int v27 = sub_1004F1180();
  id v28 = v25;
  uint64_t v29 = sub_1004F1004((unint64_t)v27);
  swift_bridgeObjectRelease();

  uint64_t v67 = v26;
  sub_100169F6C((unint64_t)v29);
  unint64_t v30 = v67;
  if ((unint64_t)v67 >> 62)
  {
    if (v67 < 0) {
      uint64_t v35 = v67;
    }
    else {
      uint64_t v35 = v67 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v36 < 0)
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v34 >= 4) {
      uint64_t v61 = 4;
    }
    else {
      uint64_t v61 = v34;
    }
    if (v34 >= 0) {
      uint64_t v31 = v61;
    }
    else {
      uint64_t v31 = 4;
    }
    swift_bridgeObjectRetain();
    uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v62 < v31)
    {
      __break(1u);
      return;
    }
  }
  else if (*(uint64_t *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4)
  {
    uint64_t v31 = 4;
  }
  else
  {
    uint64_t v31 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((v30 & 0xC000000000000001) != 0 && v31)
  {
    Swift::Int v32 = 0;
    do
    {
      Swift::Int v33 = v32 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v32);
      Swift::Int v32 = v33;
    }
    while (v31 != v33);
  }
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = _CocoaArrayWrapper.subscript.getter();
    uint64_t v36 = v44;
    uint64_t v34 = v45;
    unint64_t v26 = v46;
    swift_bridgeObjectRelease_n();
    if (v26) {
      goto LABEL_23;
    }
  }
  else
  {
    uint64_t v34 = 0;
    uint64_t v35 = v30 & 0xFFFFFFFFFFFFFF8;
    uint64_t v36 = (v30 & 0xFFFFFFFFFFFFFF8) + 32;
    unint64_t v26 = (2 * v31) | 1;
    if (v26)
    {
LABEL_23:
      type metadata accessor for __ContiguousArrayStorageBase();
      swift_unknownObjectRetain_n();
      id v47 = (void *)swift_dynamicCastClass();
      if (!v47)
      {
        swift_unknownObjectRelease();
        id v47 = _swiftEmptyArrayStorage;
      }
      uint64_t v48 = v47[2];
      swift_release();
      if (!__OFSUB__(v26 >> 1, v34))
      {
        if (v48 == (v26 >> 1) - v34)
        {
          if (!swift_dynamicCastClass()) {
            swift_unknownObjectRelease();
          }
          goto LABEL_29;
        }
        goto LABEL_41;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      swift_unknownObjectRelease();
    }
  }
  sub_1002F5650(v35, v36, v34, v26);
LABEL_29:
  swift_unknownObjectRelease();
  uint64_t v49 = self;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  uint64_t v67 = 0;
  id v51 = [v49 archivedDataWithRootObject:isa requiringSecureCoding:1 error:&v67];

  id v52 = (id)v67;
  if (v51)
  {
    uint64_t v53 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v55 = v54;

    sub_10009E6C4(0, (unint64_t *)&qword_100707730);
    uint64_t v56 = static NSUserDefaults.docUserDefaults.getter();
    if (v56)
    {
      uint64_t v57 = (void *)v56;
      Class v58 = Data._bridgeToObjectiveC()().super.isa;
      id v59 = DOCUserDefaultsKeyMostRecentGoToLocations;
      [v57 setObject:v58 forKey:v59];
      sub_100021020(v53, v55);
    }
    else
    {
      sub_100021020(v53, v55);
    }
  }
  else
  {
    uint64_t v60 = v52;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
}

uint64_t sub_1004EEC24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EECBC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  uint64_t v43 = a3;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v47 = *(void *)(v42 - 8);
  uint64_t v9 = *(char **)(v47 + 64);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v36 - ((unint64_t)(v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  *(void *)(v6 + 24) = &_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1004F1180();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v48 = v10;
  unint64_t v11 = (unint64_t)sub_1004F0D70((unint64_t)v10, v6, a1, a2);
  uint64_t v46 = v6;
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v54 = v11;
  if (v11 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      unint64_t v13 = v54 & 0xC000000000000001;
      uint64_t v38 = v47 + 16;
      id v37 = v9 + 7;
      uint64_t v36 = v47 + 32;
      uint64_t v14 = 4;
      p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession + 32);
      uint64_t v16 = (SEL *)&unk_1006E3000;
      unint64_t v39 = v54 & 0xC000000000000001;
      uint64_t v40 = v12;
      while (1)
      {
        if (v13) {
          uint64_t v31 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v31 = (char *)*(id *)(v54 + 8 * v14);
        }
        uint64_t v9 = v31;
        if (__OFADD__(v14 - 4, 1))
        {
          __break(1u);
          goto LABEL_17;
        }
        Swift::Int v32 = (char *)objc_msgSend(*(id *)((char *)&p_info[296]->flags + (void)v31), v16[331], v36);
        if (v32)
        {
          Swift::Int v33 = v32;
          sub_1000CBE70((uint64_t *)&unk_100706730);
          uint64_t All = Array<A>.fpfs_syncFetchAllFPItems()();
          if (All)
          {
            uint64_t v17 = *(void *)(v46 + 16);
            uint64_t v49 = v14 - 3;
            uint64_t v18 = v46;
            uint64_t v51 = All;
            uint64_t v52 = v17;
            id v50 = [self systemGrayColor];
            uint64_t v19 = v47;
            unint64_t v21 = v41;
            uint64_t v20 = v42;
            (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v41, v43, v42);
            uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
            uint64_t v53 = v14;
            uint64_t v23 = (v22 + 48) & ~v22;
            unint64_t v24 = (unint64_t)&v37[v23] & 0xFFFFFFFFFFFFFFF8;
            id v25 = (char *)swift_allocObject();
            *((void *)v25 + 2) = v18;
            *((void *)v25 + 3) = v9;
            uint64_t v26 = v45;
            *((void *)v25 + 4) = v44;
            *((void *)v25 + 5) = v26;
            int v27 = v21;
            p_info = &OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession.info;
            uint64_t v28 = v20;
            uint64_t v12 = v40;
            (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&v25[v23], v27, v28);
            *(void *)&v25[v24] = v48;
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v29 = v9;
            unint64_t v13 = v39;
            swift_retain();
            unint64_t v30 = v50;
            FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)();

            uint64_t v14 = v53;
            uint64_t v16 = (SEL *)&unk_1006E3000;
            swift_release();
            swift_bridgeObjectRelease();

            if (v49 == v12) {
              break;
            }
            goto LABEL_5;
          }
        }
        else
        {
          Swift::Int v33 = v9;
        }

        if (v14 - 3 == v12) {
          break;
        }
LABEL_5:
        ++v14;
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1004EF0A0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, void (*a6)(uint64_t, void *), uint64_t a7, uint64_t a8, unint64_t a9)
{
  unint64_t v13 = *(void **)&a5[OBJC_IVAR___DOCGoToRecentLocation_location];
  v35[3] = &type metadata for DOCLocationGoToCandidate;
  v35[4] = &off_1006B3358;
  uint64_t v14 = swift_allocObject();
  v35[0] = v14;
  *(void *)(v14 + 40) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  *(void *)(v14 + 48) = &off_1006B30A0;
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 56) = a1;
  *(unsigned char *)(v14 + 64) = 0;
  os_log_type_t v15 = (uint64_t *)(a4 + 24);
  swift_beginAccess();
  id v16 = a1;
  uint64_t v17 = a5;
  id v18 = v13;
  sub_1004F2594((uint64_t)v35, v17);
  swift_endAccess();
  if (a9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v19 = result;
    uint64_t v31 = a6;
    if (result) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_23:
    swift_bridgeObjectRelease();
    v31(a8, v22);
    return swift_bridgeObjectRelease();
  }
  uint64_t v19 = *(void *)((a9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v31 = a6;
  if (!v19) {
    goto LABEL_22;
  }
LABEL_3:
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    uint64_t v22 = _swiftEmptyArrayStorage;
    while (1)
    {
      if ((a9 & 0xC000000000000001) != 0) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(a9 + 8 * v21 + 32);
      }
      unint64_t v24 = v23;
      uint64_t v25 = *v15;
      if (*(void *)(*v15 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v26 = sub_10017C6D4((uint64_t)v24);
        if (v27)
        {
          sub_1000D4774(*(void *)(v25 + 56) + 40 * v26, (uint64_t)&v32);
        }
        else
        {
          uint64_t v34 = 0;
          long long v32 = 0u;
          long long v33 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v33 + 1))
        {
          sub_1001146DC(&v32, (uint64_t)v35);
          sub_1000D4774((uint64_t)v35, (uint64_t)&v32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1001900DC(0, v22[2] + 1, 1, v22);
          }
          unint64_t v29 = v22[2];
          unint64_t v28 = v22[3];
          if (v29 >= v28 >> 1) {
            uint64_t v22 = sub_1001900DC((void *)(v28 > 1), v29 + 1, 1, v22);
          }
          void v22[2] = v29 + 1;
          sub_1001146DC(&v32, (uint64_t)&v22[5 * v29 + 4]);

          sub_10009B1B8((uint64_t)v35);
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v34 = 0;
        long long v32 = 0u;
        long long v33 = 0u;
      }

      sub_1000CBBA4((uint64_t)&v32, &qword_10070D7D0);
LABEL_7:
      if (v19 == ++v21) {
        goto LABEL_23;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004EF37C()
{
  swift_bridgeObjectRelease();
  sub_1004F17B8(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCRecentLocationsCandidateSource()
{
  return self;
}

uint64_t sub_1004EF3E0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1004EECBC(a1, a2, a3, a4, a5);
}

uint64_t sub_1004EF404(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *))
{
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_1004F06E0(v7, v4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (!v9) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v9) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_1001910FC(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v11 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v8 + 8 * v11 + 32);
    }
    id v13 = v12;
    unint64_t v15 = _swiftEmptyArrayStorage[2];
    unint64_t v14 = _swiftEmptyArrayStorage[3];
    if (v15 >= v14 >> 1) {
      sub_1001910FC(v14 > 1, v15 + 1, 1);
    }
    ++v11;
    _swiftEmptyArrayStorage[2] = v15 + 1;
    id v16 = &_swiftEmptyArrayStorage[2 * v15];
    v16[4] = v13;
    *((unsigned char *)v16 + 40) = 1;
  }
  while (v9 != v11);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1004F2BE4((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  a4(a3, v17);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EF5EC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCFileProviderSourcesCandidateSource()
{
  return self;
}

uint64_t sub_1004EF650(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *))
{
  return sub_1004EF404(a1, a2, a3, a4);
}

uint64_t sub_1004EF674(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, void *))
{
  uint64_t v5 = v4;
  id v10 = [*(id *)(v5 + 24) favoritedLocations];
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v12 = (unint64_t)sub_1004F052C(v11, v5, a1, a2);
  swift_release();
  swift_bridgeObjectRelease();
  if (v12 >> 62)
  {
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (!v13) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_13;
    }
  }
  uint64_t result = sub_100190FB4(0, v13 & ~(v13 >> 63), 0);
  if (v13 < 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  do
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v16 = *(id *)(v12 + 8 * v15 + 32);
    }
    id v17 = v16;
    unint64_t v19 = _swiftEmptyArrayStorage[2];
    unint64_t v18 = _swiftEmptyArrayStorage[3];
    if (v19 >= v18 >> 1) {
      sub_100190FB4(v18 > 1, v19 + 1, 1);
    }
    ++v15;
    _swiftEmptyArrayStorage[2] = v19 + 1;
    uint64_t v20 = &_swiftEmptyArrayStorage[2 * v19];
    _DWORD v20[4] = v17;
    *((unsigned char *)v20 + 40) = 2;
  }
  while (v13 != v15);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1004F2AE0((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  a4(a3, v21);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EF898(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *a1;
  if (sub_100236694(v11, 0))
  {
    uint64_t v32 = v8;
    id v12 = [v11 displayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = String.doc_sanitizedForComparison.getter();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();
    if (String.count.getter() < 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v31[0] = v13;
      v31[1] = v15;
      uint64_t v29 = a3;
      uint64_t v30 = a4;
      sub_10013BF8C();
      sub_10013BFE0();
      char v16 = BidirectionalCollection<>.starts<A>(with:)();
      swift_bridgeObjectRelease();
      if (v16)
      {
        id v17 = [self sharedManager];
        char v18 = sub_1004F01C8(v11);

        if (v18) {
          return 1;
        }
        static Logger.UI.getter();
        id v20 = v11;
        uint64_t v21 = Logger.logObject.getter();
        os_log_type_t v22 = static os_log_type_t.debug.getter();
        int v23 = v22;
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v28 = swift_slowAlloc();
          v31[0] = v28;
          *(_DWORD *)uint64_t v24 = 136315394;
          HIDWORD(v27) = v23;
          uint64_t v29 = sub_10009B0E4(0xD000000000000030, 0x80000001005FC2F0, v31);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v24 + 12) = 2080;
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          uint64_t v25 = DOCNode.nodeDescription.getter();
          uint64_t v29 = sub_10009B0E4(v25, v26, v31);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v21, BYTE4(v27), "%s [PROTECTED APPS] filtering out suggested node: %s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v7);
      }
    }
  }
  return 0;
}

uint64_t type metadata accessor for DOCFavoritesCandidateSource()
{
  return self;
}

uint64_t sub_1004EFC3C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t, void *))
{
  return sub_1004EF674(a1, a2, a3, a4);
}

uint64_t sub_1004EFC60()
{
  uint64_t v0 = sub_1000CBE70(&qword_100719C60);
  if (swift_isClassType()) {
    uint64_t v1 = v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (v1) {
    unint64_t v2 = (uint64_t *)&unk_1007084E0;
  }
  else {
    unint64_t v2 = (uint64_t *)&unk_100719C68;
  }

  return sub_1000CBE70(v2);
}

uint64_t sub_1004EFCC0(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self protectedAppsEnabled]) {
    return 1;
  }
  static Logger.UI.getter();
  swift_unknownObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  int v8 = v7;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    os_log_t v24 = v6;
    uint64_t v10 = v9;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    *(_DWORD *)uint64_t v10 = 136315650;
    uint64_t v25 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005FC330, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 12) = 2080;
    id v11 = [a1 displayName];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    HIDWORD(v22) = v8;
    unint64_t v14 = v13;

    uint64_t v25 = sub_10009B0E4(v12, v14, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    id v15 = [a1 identifier];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v25 = sub_10009B0E4(v16, v17, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v18 = v24;
    _os_log_impl((void *)&_mh_execute_header, v24, BYTE4(v22), "%s [PROTECTED APPS] item: %s identifier: %s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v20 = [self sharedManager];
  unsigned int v21 = [v20 nodeRequiresAuthentication_Sync:a1];

  return v21 ^ 1;
}

void *sub_1004F0020(unint64_t a1, void *a2)
{
  unint64_t v4 = a1;
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (a1 >> 62)
  {
LABEL_18:
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      unint64_t v6 = 0;
      unint64_t v7 = v4 & 0xC000000000000001;
      uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v5;
      unint64_t v14 = v4;
      while (1)
      {
        if (v7)
        {
          uint64_t v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(void *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          uint64_t v9 = *(void **)(v4 + 8 * v6 + 32);
          swift_unknownObjectRetain();
          unint64_t v10 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            goto LABEL_14;
          }
        }
        id v15 = v9;
        char v11 = sub_1004EDED8(&v15, (uint64_t)a2);
        if (v2) {
          goto LABEL_15;
        }
        if (v11)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          uint64_t v5 = v13;
          unint64_t v4 = v14;
        }
        else
        {
          swift_unknownObjectRelease();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_1004F01C8(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self protectedAppsEnabled]) {
    return 1;
  }
  static Logger.UI.getter();
  id v6 = a1;
  swift_unknownObjectRetain_n();
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  int v9 = v8;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v10 = swift_slowAlloc();
    os_log_t v25 = v7;
    uint64_t v11 = v10;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v24;
    *(_DWORD *)uint64_t v11 = 136315650;
    uint64_t v26 = sub_10009B0E4(0xD00000000000001BLL, 0x80000001005FC330, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2080;
    id v12 = [v6 displayName];
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    HIDWORD(v23) = v9;
    unint64_t v15 = v14;

    uint64_t v26 = sub_10009B0E4(v13, v15, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2080;
    id v16 = [v6 identifier];
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v26 = sub_10009B0E4(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v19 = v25;
    _os_log_impl((void *)&_mh_execute_header, v25, BYTE4(v23), "%s [PROTECTED APPS] item: %s identifier: %s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v21 = [self sharedManager];
  unsigned int v22 = [v21 nodeRequiresAuthentication_Sync:v6];

  return v22 ^ 1;
}

void *sub_1004F052C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v8 = a1;
  id v21 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v8 & 0xC000000000000001;
      uint64_t v16 = a2;
      unint64_t v17 = v8;
      while (v19)
      {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        id v12 = v11;
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_17;
        }
        id v20 = v11;
        char v14 = sub_1004EF898(&v20, a2, a3, (uint64_t)a4);
        if (v4)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a4;
        }
        if (v14)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          a2 = v16;
          unint64_t v8 = v17;
        }
        else
        {
        }
        ++v10;
        if (v13 == v9)
        {
          a4 = v21;
          goto LABEL_20;
        }
      }
      if (v10 < *(void *)(v18 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        goto LABEL_19;
      }
    }
    id v11 = *(id *)(v8 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a4 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return a4;
}

void *sub_1004F06E0(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_32;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t result = _swiftEmptyArrayStorage;
  if (v4)
  {
    unint64_t v23 = v3;
    unint64_t v6 = 0;
    uint64_t v25 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v26 = v3 & 0xC000000000000001;
    uint64_t v24 = v4;
    while (1)
    {
      if (v26)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v6 >= *(void *)(v25 + 16))
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
          goto LABEL_3;
        }
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      unint64_t v8 = v7;
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_31;
      }
      unint64_t v10 = *(void **)(a2 + 16);
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (!v11 || (id v12 = *(void **)(v11 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
      {
LABEL_20:
        id v20 = [v8 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        String.doc_sanitizedForComparison.getter();
        swift_bridgeObjectRelease();
        if (String.count.getter() < 1)
        {

          swift_bridgeObjectRelease();
        }
        else
        {
          sub_10013BF8C();
          sub_10013BFE0();
          char v21 = BidirectionalCollection<>.starts<A>(with:)();
          swift_bridgeObjectRelease();
          if (v21)
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
          }
          else
          {
          }
        }
        goto LABEL_6;
      }
      uint64_t v13 = a2;
      char v14 = self;
      id v15 = v8;
      id v16 = v12;
      id v17 = [v14 defaultPermission];
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
        && _CocoaArrayWrapper.endIndex.getter() >= 1)
      {
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        unsigned __int8 v18 = [v17 canItems:isa userActionForConfiguration:v10 fileProviderDomain:v16];
      }
      else
      {
        unsigned __int8 v18 = 1;
      }
      if ([v10 forPickingFoldersOnly])
      {
        unsigned __int8 v19 = [v16 supportsPickingFolders];

        if ((v18 & 1) == 0)
        {

          a2 = v13;
          unint64_t v3 = v23;
          goto LABEL_6;
        }
        a2 = v13;
        unint64_t v3 = v23;
        if (v19) {
          goto LABEL_20;
        }
      }
      else
      {

        a2 = v13;
        unint64_t v3 = v23;
        if (v18) {
          goto LABEL_20;
        }
      }

LABEL_6:
      ++v6;
      if (v9 == v24) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  return result;
}

uint64_t sub_1004F0A58(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (![self protectedAppsEnabled]) {
    return 1;
  }
  static Logger.UI.getter();
  unint64_t v6 = a1;
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v15 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v19 = v17;
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v18 = sub_10009B0E4(0xD00000000000001CLL, 0x80000001005FC350, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2112;
    uint64_t v16 = v2;
    uint64_t v18 = (uint64_t)v6;
    unint64_t v10 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v15 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s [PROTECTED APPS] location: %@", (uint8_t *)v9, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v12 = [self sharedManager];
  unsigned int v13 = [v12 nodeRequiresAuthentication_Sync:[v6[OBJC_IVAR___DOCGoToRecentLocation_location] node]];

  swift_unknownObjectRelease();
  return v13 ^ 1;
}

void *sub_1004F0D70(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v19._uint64_t countAndFlagsBits = a3;
  v19._object = a4;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  unint64_t v6 = 0;
  unint64_t v21 = v4;
  uint64_t v23 = v4 & 0xFFFFFFFFFFFFFF8;
  unint64_t v24 = v4 & 0xC000000000000001;
  uint64_t v20 = v5;
  while (1)
  {
    if (v24)
    {
      id v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v6 >= *(void *)(v23 + 16))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      id v7 = (char *)*(id *)(v4 + 8 * v6 + 32);
    }
    os_log_type_t v8 = v7;
    unint64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_21;
    }
    uint64_t v10 = OBJC_IVAR___DOCGoToRecentLocation_location;
    id v11 = [*(id *)&v7[OBJC_IVAR___DOCGoToRecentLocation_location] displayName];
    if (v11) {
      break;
    }

LABEL_5:
    ++v6;
    if (v9 == v5) {
      return _swiftEmptyArrayStorage;
    }
  }

  id v12 = [*(id *)&v8[v10] sourceIdentifier];
  swift_unknownObjectUnownedLoadStrong();
  uint64_t v13 = *(void *)(a2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  LOBYTE(v13) = (*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v13 + 8))(a2, v12, ObjectType, v13);

  swift_unknownObjectRelease();
  if ((v13 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t result = [*(id *)&v8[v10] displayName];
  if (result)
  {
    uint64_t v16 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.doc_sanitizedForComparison.getter();
    swift_bridgeObjectRelease();
    LOBYTE(v16) = String.hasPrefix(_:)(v19);
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v17 = [self sharedManager];
      char v18 = sub_1004F0A58(v8);

      if (v18)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_17:
        uint64_t v5 = v20;
        unint64_t v4 = v21;
        goto LABEL_5;
      }
    }
LABEL_16:

    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void *sub_1004F1004(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        unint64_t v4 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v5 = v4;
        unint64_t v6 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_15;
        }
        id v7 = *(void **)&v4[OBJC_IVAR___DOCGoToRecentLocation_location];
        sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        id v8 = v7;
        char v9 = static NSObject.== infix(_:_:)();

        if (v9)
        {
        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        ++v3;
        if (v6 == v2) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v3 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    unint64_t v4 = (char *)*(id *)(a1 + 8 * v3 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1004F1180()
{
  sub_10009E6C4(0, (unint64_t *)&qword_100707730);
  uint64_t v0 = (void *)static NSUserDefaults.docUserDefaults.getter();
  uint64_t v1 = v0;
  if (!v0)
  {
    long long v24 = 0u;
    long long v25 = 0u;
LABEL_11:
    sub_1000CBBA4((uint64_t)&v24, (uint64_t *)&unk_100705D60);
    goto LABEL_12;
  }
  if ([v0 objectForKey:DOCUserDefaultsKeyMostRecentGoToLocations])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v23, 0, sizeof(v23));
  }
  sub_1000CBE0C((uint64_t)v23, (uint64_t)&v24, (uint64_t *)&unk_100705D60);
  if (!*((void *)&v25 + 1)) {
    goto LABEL_11;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:

    return _swiftEmptyArrayStorage;
  }
  long long v2 = v23[0];
  sub_10009E6C4(0, &qword_10070B710);
  sub_1000CBE70(&qword_100719C30);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0230;
  *(void *)(v3 + 32) = sub_10009E6C4(0, &qword_100719C38);
  *(void *)(v3 + 40) = sub_10009E6C4(0, (unint64_t *)&unk_100719C40);
  uint64_t v4 = type metadata accessor for DOCGoToRecentLocation();
  *(void *)(v3 + 48) = v4;
  static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
  swift_bridgeObjectRelease();
  if (*((void *)&v25 + 1))
  {
    sub_1000CBE70(&qword_100708820);
    if (swift_dynamicCast())
    {
      uint64_t v7 = *(void *)&v23[0];
      uint64_t v8 = *(void *)&v23[0] >> 62;
      if (*(void *)&v23[0] >> 62)
      {
        uint64_t v22 = *(void *)&v23[0] >> 62;
        if (*(uint64_t *)&v23[0] < 0) {
          uint64_t v12 = *(void *)&v23[0];
        }
        else {
          uint64_t v12 = *(void *)&v23[0] & 0xFFFFFFFFFFFFFF8;
        }
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        unint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if ((v14 & 0x8000000000000000) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        if (v13 >= 4) {
          uint64_t v20 = 4;
        }
        else {
          uint64_t v20 = v13;
        }
        if (v13 >= 0) {
          uint64_t v9 = v20;
        }
        else {
          uint64_t v9 = 4;
        }
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v21 < v9) {
          __break(1u);
        }
        uint64_t v8 = v22;
        if ((v7 & 0xC000000000000001) == 0)
        {
LABEL_25:
          if (v8)
          {
            swift_bridgeObjectRetain();
            uint64_t v12 = _CocoaArrayWrapper.subscript.getter();
            uint64_t v13 = v15;
            uint64_t v4 = v16;
            unint64_t v14 = v17;
            swift_bridgeObjectRelease_n();
          }
          else
          {
            uint64_t v4 = 0;
            uint64_t v12 = v7 & 0xFFFFFFFFFFFFFF8;
            uint64_t v13 = (v7 & 0xFFFFFFFFFFFFFF8) + 32;
            unint64_t v14 = (2 * v9) | 1;
          }
          if ((v14 & 1) == 0) {
            goto LABEL_30;
          }
          type metadata accessor for __ContiguousArrayStorageBase();
          swift_unknownObjectRetain_n();
          char v18 = (void *)swift_dynamicCastClass();
          if (!v18)
          {
            swift_unknownObjectRelease();
            char v18 = _swiftEmptyArrayStorage;
          }
          uint64_t v19 = v18[2];
          swift_release();
          if (!__OFSUB__(v14 >> 1, v4))
          {
            if (v19 == (v14 >> 1) - v4)
            {
              uint64_t v5 = swift_dynamicCastClass();

              swift_unknownObjectRelease();
              if (v5) {
                goto LABEL_36;
              }
              swift_unknownObjectRelease();
              goto LABEL_10;
            }
LABEL_44:
            swift_unknownObjectRelease();
LABEL_30:
            uint64_t v5 = (uint64_t)sub_1002F5650(v12, v13, v4, v14);

            swift_unknownObjectRelease();
LABEL_36:
            sub_100021020(v2, *((unint64_t *)&v2 + 1));
            return (void *)v5;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
      }
      else
      {
        if (*(uint64_t *)((*(void *)&v23[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4) {
          uint64_t v9 = 4;
        }
        else {
          uint64_t v9 = *(void *)((*(void *)&v23[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if ((*(void *)&v23[0] & 0xC000000000000001) == 0) {
          goto LABEL_25;
        }
      }
      if (v9)
      {
        Swift::Int v10 = 0;
        do
        {
          Swift::Int v11 = v10 + 1;
          _ArrayBuffer._typeCheckSlowPath(_:)(v10);
          Swift::Int v10 = v11;
        }
        while (v9 != v11);
      }
      goto LABEL_25;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v24, (uint64_t *)&unk_100705D60);
  }

LABEL_10:
  sub_100021020(v2, *((unint64_t *)&v2 + 1));
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004F15C4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1004F16BC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_1004EF0A0(a1, a2, a3, *(void *)(v3 + 16), *(char **)(v3 + 24), *(void (**)(uint64_t, void *))(v3 + 32), *(void *)(v3 + 40), v3 + v8, *(void *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004F1778()
{
  sub_10009B1B8(v0 + 16);

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_1004F17B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004F17E0()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004F1820(uint64_t a1, uint64_t a2)
{
  sub_1004EE400(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void destroy for DOCLocationGoToCandidate(uint64_t a1)
{
  sub_10009B1B8(a1);
  uint64_t v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  sub_1002B25D4((uint64_t *)a1, (uint64_t *)a2);
  long long v4 = *(void **)(a1 + 40);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v5;
  id v6 = v5;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for DOCLocationGoToCandidate(uint64_t a1, uint64_t a2)
{
  sub_10009B1B8(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void **)(a1 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCLocationGoToCandidate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCLocationGoToCandidate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCLocationGoToCandidate()
{
  return &type metadata for DOCLocationGoToCandidate;
}

ValueMetadata *type metadata accessor for DOCFileProviderSourceGoToCandidate()
{
  return &type metadata for DOCFileProviderSourceGoToCandidate;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCNodeGoToCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCNodeGoToCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for DOCNodeGoToCandidate(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for DOCNodeGoToCandidate()
{
  return &type metadata for DOCNodeGoToCandidate;
}

uint64_t sub_1004F1B78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCInterfaceSystemAppearance_xrOS()
{
  return self;
}

uint64_t sub_1004F1BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10071A190);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
  __chkstk_darwin(v9);
  Swift::Int v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1000CBBA4(a1, (uint64_t *)&unk_10071A190);
    sub_1004FCC08(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10071A190);
  }
  else
  {
    sub_1000BC744(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1003DED18((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

void sub_1004F1DFC(uint64_t a1, void *a2, char a3)
{
  long long v4 = v3;
  char v7 = a3 & 1;
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_100719850);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for RestorableSettings(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1000CBBA4(a1, (uint64_t *)&unk_100719850);
    sub_1004FCDD4(a2, v7, (uint64_t)v10);

    sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_100719850);
  }
  else
  {
    sub_1000BC744(a1, (uint64_t)v13, type metadata accessor for RestorableSettings);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v4;
    *long long v4 = 0x8000000000000000;
    sub_1003DEF28((uint64_t)v13, a2, v7, isUniquelyReferenced_nonNull_native);
    *long long v4 = v17;
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004F1FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70(&qword_1007147D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
  __chkstk_darwin(updated);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1000CBBA4(a1, &qword_1007147D8);
    sub_1004FCF78(a2, (uint64_t)v8);
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_1000CBBA4((uint64_t)v8, &qword_1007147D8);
  }
  else
  {
    sub_1000BC744(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1003DF0A0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = type metadata accessor for UUID();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1004F21E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70(&qword_10070AED8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = *(_OWORD *)a2;
  long long v18 = *((_OWORD *)a2 + 1);
  long long v19 = v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 48))(a1, 1) == 1)
  {
    sub_1000CBBA4(a1, &qword_10070AED8);
    sub_1004FD248(a2, (uint64_t)v8);
    sub_100220180((uint64_t)&v19);
    sub_100220180((uint64_t)&v18);
    swift_release();
    return sub_1000CBBA4((uint64_t)v8, &qword_10070AED8);
  }
  else
  {
    sub_1000BC744(a1, (uint64_t)v11, type metadata accessor for ScrollPositionInfo.ItemOffset);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1003E0C7C((uint64_t)v11, (long long *)a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    sub_100220180((uint64_t)&v19);
    sub_100220180((uint64_t)&v18);
    return swift_release();
  }
}

uint64_t sub_1004F23CC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, double))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_1000CBBA4(a1, &qword_1007076B0);
    sub_1004FD3FC((uint64_t)a2, (uint64_t)v8);

    return sub_1000CBBA4((uint64_t)v8, &qword_1007076B0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1003E159C((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004F2594(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_1001146DC((long long *)a1, (uint64_t)v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_1003E1FD4(v7, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1000CBBA4(a1, &qword_10070D7D0);
    sub_1004FD598((uint64_t)a2, (uint64_t)v7);

    return sub_1000CBBA4((uint64_t)v7, &qword_10070D7D0);
  }
}

uint64_t sub_1004F2650(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1)
  {
    long long v4 = *(_OWORD *)(a1 + 16);
    v8[0] = *(_OWORD *)a1;
    v8[1] = v4;
    v8[2] = *(_OWORD *)(a1 + 32);
    uint64_t v9 = *(void *)(a1 + 48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v7 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_1003E211C((uint64_t)v8, a2, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v7;
    swift_bridgeObjectRelease();
    return sub_1000CE1FC(a2);
  }
  else
  {
    sub_1000CBBA4(a1, &qword_10071A160);
    sub_1004FD698(a2, (uint64_t)v8);
    sub_1000CE1FC(a2);
    return sub_1000CBBA4((uint64_t)v8, &qword_10071A160);
  }
}

void *sub_1004F2720(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCFileOperation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100190CF8(0, v6, 0);
    uint64_t v7 = v17;
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    do
    {
      sub_1000A5858(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      uint64_t v17 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_100190CF8(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v17;
      }
      uint64_t v15 = v2;
      uint64_t v16 = &protocol witness table for DOCFileOperation;
      uint64_t v12 = sub_100052C70((uint64_t *)&v14);
      sub_1000A5858((uint64_t)v5, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      long long v7[2] = v11 + 1;
      sub_1001146DC(&v14, (uint64_t)&v7[5 * v11 + 4]);
      sub_1000A5770((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1004F28E8(uint64_t a1)
{
  return sub_1004F2E94(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100190EDC, &qword_100708E18, (uint64_t *)&unk_10071A200);
}

void *sub_1004F2910(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    sub_100190C20(0, v6, 0);
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v8 = v3 + 16;
    uint64_t v15 = v9;
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
    uint64_t v11 = *(void *)(v8 + 56);
    do
    {
      v15(v5, v10, v2);
      swift_dynamicCast();
      uint64_t v7 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190C20(0, v7[2] + 1, 1);
        uint64_t v7 = v17;
      }
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_100190C20(v12 > 1, v13 + 1, 1);
        uint64_t v7 = v17;
      }
      long long v7[2] = v13 + 1;
      sub_1000A54B0(&v16, &v7[4 * v13 + 4]);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void *sub_1004F2AE0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    sub_100190F84(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v5 = *((void *)v4 - 1);
      char v6 = *v4;
      unint64_t v13 = v2;
      unint64_t v8 = v2[2];
      unint64_t v7 = v2[3];
      swift_unknownObjectRetain();
      if (v8 >= v7 >> 1)
      {
        sub_100190F84(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      uint64_t v11 = &type metadata for DOCNodeGoToCandidate;
      unint64_t v12 = &off_1006B33B8;
      *(void *)&long long v10 = v5;
      BYTE8(v10) = v6;
      v2[2] = v8 + 1;
      sub_1001146DC(&v10, (uint64_t)&v2[5 * v8 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1004F2BE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    long long v14 = _swiftEmptyArrayStorage;
    sub_100190F84(0, v1, 0);
    uint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (unsigned char *)(a1 + 40);
    do
    {
      uint64_t v5 = (void *)*((void *)v4 - 1);
      char v6 = *v4;
      long long v14 = v2;
      unint64_t v8 = v2[2];
      unint64_t v7 = v2[3];
      id v9 = v5;
      if (v8 >= v7 >> 1)
      {
        sub_100190F84(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v14;
      }
      unint64_t v12 = &type metadata for DOCFileProviderSourceGoToCandidate;
      unint64_t v13 = &off_1006B3388;
      *(void *)&long long v11 = v9;
      BYTE8(v11) = v6;
      v2[2] = v8 + 1;
      sub_1001146DC(&v11, (uint64_t)&v2[5 * v8 + 4]);
      v4 += 16;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void *sub_1004F2CE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      v4 += 8;
      CGFloat._bridgeToObjectiveC()();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1004F2D90(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    char v6 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_10009B208(v4, (uint64_t)&v5);
      type metadata accessor for DOCFileSystemCollection();
      swift_dynamicCast();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

void *sub_1004F2E6C(uint64_t a1)
{
  return sub_1004F2E94(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_100191208, (uint64_t *)&unk_10071A220, &qword_100708F28);
}

void *sub_1004F2E94(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    a2(0, v4, 0);
    id v9 = (id *)(a1 + 32);
    do
    {
      long long v17 = *(_OWORD *)v9;
      id v10 = *v9;
      id v11 = *((id *)&v17 + 1);
      id v12 = v10;
      id v13 = v11;
      sub_1000CBE70(a3);
      sub_1000CBE70(a4);
      swift_dynamicCast();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a2(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1) {
        a2(v14 > 1, v15 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v15 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v15 + 4] = v18;
      v9 += 2;
      --v4;
    }
    while (v4);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004F3010(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  id v13 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C20(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10009E6C4(0, (unint64_t *)&qword_100707710);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190C20(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_100190C20(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_1000A54B0(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      unint64_t v8 = (id *)(a1 + 32);
      sub_10009E6C4(0, (unint64_t *)&qword_100707710);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190C20(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_100190C20(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_1000A54B0(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_1004F3274(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100191274(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      sub_1000CBE70(&qword_100719C60);
      sub_1000CBE70((uint64_t *)&unk_10071A1D0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100191274(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      unint64_t v4 = _swiftEmptyArrayStorage[3];
      if (v5 >= v4 >> 1) {
        sub_100191274(v4 > 1, v5 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v5 + 1;
      _swiftEmptyArrayStorage[v5 + 4] = v7;
      v3 += 8;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1004F33A4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
    sub_100191320(0, v1, 0);
    uint64_t v4 = a1 + 32;
    uint64_t v2 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000CBC00(v4, (uint64_t)v8, (uint64_t *)&unk_10071A1A0);
      sub_1000CBE70((uint64_t *)&unk_10071A1A0);
      sub_1000CBE70(&qword_10071A530);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100191320(0, v2[2] + 1, 1);
        uint64_t v2 = v10;
      }
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_100191320(v5 > 1, v6 + 1, 1);
        uint64_t v2 = v10;
      }
      v2[2] = v6 + 1;
      sub_1000CBE0C((uint64_t)v9, (uint64_t)&v2[10 * v6 + 4], &qword_10071A530);
      v4 += 80;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DOCBrowserHistoryShiftDirection.description.getter(char a1)
{
  if (a1) {
    return 0x64726177726F66;
  }
  else {
    return 0x647261776B636162;
  }
}

unint64_t sub_1004F3530()
{
  unint64_t result = qword_100719DC0;
  if (!qword_100719DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100719DC0);
  }
  return result;
}

uint64_t sub_1004F3584()
{
  if (*v0) {
    return 0x64726177726F66;
  }
  else {
    return 0x647261776B636162;
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryItem(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    unint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v11 = a3[7];
    uint64_t v12 = a3[8];
    id v13 = *(void **)((char *)a2 + v11);
    *(uint64_t *)((char *)a1 + v11) = (uint64_t)v13;
    unint64_t v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    uint64_t v15 = a3[9];
    long long v16 = (char *)a1 + v15;
    long long v17 = (char *)a2 + v15;
    uint64_t v18 = *((void *)v17 + 3);
    id v19 = v10;
    swift_bridgeObjectRetain();
    id v20 = v13;
    id v21 = v14;
    if (v18)
    {
      *((void *)v16 + 3) = v18;
      (**(void (***)(char *, char *, uint64_t))(v18 - 8))(v16, v17, v18);
    }
    else
    {
      long long v23 = *((_OWORD *)v17 + 1);
      *(_OWORD *)long long v16 = *(_OWORD *)v17;
      *((_OWORD *)v16 + 1) = v23;
    }
  }
  return a1;
}

uint64_t assignWithCopy for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a1 + v11);
  id v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  uint64_t v15 = a3[8];
  long long v16 = *(void **)(a2 + v15);
  long long v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 24);
  if (!*(void *)(a1 + v19 + 24))
  {
    if (v22)
    {
      *(void *)(v20 + 24) = v22;
      (**(void (***)(uint64_t, uint64_t))(v22 - 8))(v20, v21);
      return a1;
    }
LABEL_7:
    long long v23 = *(_OWORD *)(v21 + 16);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 16) = v23;
    return a1;
  }
  if (!v22)
  {
    sub_10009B1B8(v20);
    goto LABEL_7;
  }
  sub_1002CEEC4((uint64_t *)v20, (uint64_t *)v21);
  return a1;
}

uint64_t initializeWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[9];
  id v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  long long v12 = v11[1];
  *id v10 = *v11;
  v10[1] = v12;
  return a1;
}

uint64_t assignWithTake for DOCBrowserHistoryItem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[8];
  long long v12 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);

  uint64_t v13 = a3[9];
  id v14 = (_OWORD *)(a1 + v13);
  if (*(void *)(a1 + v13 + 24)) {
    sub_10009B1B8(a1 + v13);
  }
  long long v15 = *(_OWORD *)(a2 + v13 + 16);
  *id v14 = *(_OWORD *)(a2 + v13);
  v14[1] = v15;
  return a1;
}

uint64_t sub_1004F3A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004F3AC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCBrowserHistoryShiftDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004F3C48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryShiftDirection()
{
  return &type metadata for DOCBrowserHistoryShiftDirection;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCBrowserHistoryShiftAmount(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1000CBE70(&qword_10070E840);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v11[6]) = *(uint64_t *)((char *)a2 + v11[6]);
      uint64_t v14 = v11[7];
      long long v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v11[8];
      long long v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v11[9];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = *((void *)v20 + 3);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070E840);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    int v5 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);

    swift_bridgeObjectRelease();
    uint64_t result = a1 + v5[9];
    if (*(void *)(result + 24)) {
      return sub_10009B1B8(result);
    }
  }
  return result;
}

char *initializeWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_10070E840);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = *(void **)&a2[v10];
    *(void *)&a1[v10] = v11;
    *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
    uint64_t v12 = v9[7];
    uint64_t v13 = *(void **)&a2[v12];
    *(void *)&a1[v12] = v13;
    uint64_t v14 = v9[8];
    long long v15 = *(void **)&a2[v14];
    *(void *)&a1[v14] = v15;
    uint64_t v16 = v9[9];
    long long v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = *((void *)v18 + 3);
    id v20 = v11;
    swift_bridgeObjectRetain();
    id v21 = v13;
    id v22 = v15;
    if (v19)
    {
      *((void *)v17 + 3) = v19;
      (**(void (***)(char *, char *, uint64_t))(v19 - 8))(v17, v18, v19);
    }
    else
    {
      long long v23 = *((_OWORD *)v18 + 1);
      *(_OWORD *)long long v17 = *(_OWORD *)v18;
      *((_OWORD *)v17 + 1) = v23;
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_10070E840);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v26 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
      uint64_t v27 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      uint64_t v28 = v27[5];
      uint64_t v29 = *(void **)&a2[v28];
      uint64_t v30 = *(void **)&a1[v28];
      *(void *)&a1[v28] = v29;
      id v31 = v29;

      *(void *)&a1[v27[6]] = *(void *)&a2[v27[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v32 = v27[7];
      long long v33 = *(void **)&a1[v32];
      uint64_t v34 = *(void **)&a2[v32];
      *(void *)&a1[v32] = v34;
      id v35 = v34;

      uint64_t v36 = v27[8];
      id v37 = *(void **)&a2[v36];
      uint64_t v38 = *(void **)&a1[v36];
      *(void *)&a1[v36] = v37;
      id v39 = v37;

      uint64_t v40 = v27[9];
      uint64_t v41 = (uint64_t)&a1[v40];
      uint64_t v42 = &a2[v40];
      uint64_t v43 = *((void *)v42 + 3);
      if (*(void *)&a1[v40 + 24])
      {
        if (v43)
        {
          sub_1002CEEC4((uint64_t *)v41, (uint64_t *)v42);
          return a1;
        }
        sub_10009B1B8(v41);
      }
      else if (v43)
      {
        *(void *)(v41 + 24) = v43;
        (**(void (***)(uint64_t, char *))(v43 - 8))(v41, v42);
        return a1;
      }
      long long v46 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *(_OWORD *)(v41 + 16) = v46;
      return a1;
    }
    sub_1000CBBA4((uint64_t)a1, &qword_10070E840);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = *(void **)&a2[v13];
  *(void *)&a1[v13] = v14;
  *(void *)&a1[v12[6]] = *(void *)&a2[v12[6]];
  uint64_t v15 = v12[7];
  uint64_t v16 = *(void **)&a2[v15];
  *(void *)&a1[v15] = v16;
  uint64_t v17 = v12[8];
  uint64_t v18 = *(void **)&a2[v17];
  *(void *)&a1[v17] = v18;
  uint64_t v19 = v12[9];
  id v20 = &a1[v19];
  id v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 3);
  id v23 = v14;
  swift_bridgeObjectRetain();
  id v24 = v16;
  id v25 = v18;
  if (v22)
  {
    *((void *)v20 + 3) = v22;
    (**(void (***)(char *, char *, uint64_t))(v22 - 8))(v20, v21, v22);
  }
  else
  {
    long long v44 = *((_OWORD *)v21 + 1);
    *(_OWORD *)id v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v44;
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_10070E840);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    int v9 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    *(void *)&a1[v9[5]] = *(void *)&a2[v9[5]];
    *(void *)&a1[v9[6]] = *(void *)&a2[v9[6]];
    *(void *)&a1[v9[7]] = *(void *)&a2[v9[7]];
    *(void *)&a1[v9[8]] = *(void *)&a2[v9[8]];
    uint64_t v10 = v9[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for DOCBrowserHistoryShiftAmount(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_10070E840);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
      *(void *)&a1[v12[5]] = *(void *)&a2[v12[5]];
      *(void *)&a1[v12[6]] = *(void *)&a2[v12[6]];
      *(void *)&a1[v12[7]] = *(void *)&a2[v12[7]];
      *(void *)&a1[v12[8]] = *(void *)&a2[v12[8]];
      uint64_t v13 = v12[9];
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      long long v16 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v16;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_1000CBBA4((uint64_t)a1, &qword_10070E840);
    goto LABEL_6;
  }
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
  uint64_t v19 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v20 = v19[5];
  id v21 = *(void **)&a1[v20];
  *(void *)&a1[v20] = *(void *)&a2[v20];

  *(void *)&a1[v19[6]] = *(void *)&a2[v19[6]];
  swift_bridgeObjectRelease();
  uint64_t v22 = v19[7];
  id v23 = *(void **)&a1[v22];
  *(void *)&a1[v22] = *(void *)&a2[v22];

  uint64_t v24 = v19[8];
  id v25 = *(void **)&a1[v24];
  *(void *)&a1[v24] = *(void *)&a2[v24];

  uint64_t v26 = v19[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (*(void *)&a1[v26 + 24]) {
    sub_10009B1B8((uint64_t)v27);
  }
  long long v29 = *((_OWORD *)v28 + 1);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  *((_OWORD *)v27 + 1) = v29;
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F48B8);
}

uint64_t sub_1004F48B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070E840);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DOCBrowserHistoryShiftAmount(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F493C);
}

uint64_t sub_1004F493C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1000CBE70(&qword_10070E840);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1004F49C0(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070E840);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1004F4A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10070E840);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for DOCBrowserHistoryShiftAmount(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_100719EE0);
}

uint64_t sub_1004F4AC0()
{
  uint64_t result = type metadata accessor for DOCBrowserHistoryItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

id sub_1004F4B3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _DOCBrowserHistoryDataSourceBase();
  [super dealloc];
}

uint64_t sub_1004F4BD0()
{
  return swift_release();
}

id sub_1004F4C34()
{
  sub_1004F4C6C();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowserHistoryDataSource();
  return [super dealloc];
}

void sub_1004F4C6C()
{
  uint64_t v1 = v0;
  id v2 = [self shared];
  [v2 removeChangeObserver:v1];

  int v3 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_observableTrashCollection);
  if (v3)
  {
    id v4 = v3;
    sub_10019E3AC();
  }
  uint64_t v5 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken;
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourcesObserverToken);
  if (v6)
  {
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_sourceObserver);
    id v8 = v6;
    [v7 removeSubscriberForToken:v8];
    id v9 = *(id *)(v1 + v5);
    *(void *)(v1 + v5) = 0;
  }
}

uint64_t sub_1004F4E1C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070E838);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1000CBC00(a1, (uint64_t)&v9 - v6, &qword_10070E838);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v5, &qword_10070E838);
  sub_1000A5770(a1, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1000CBE0C((uint64_t)v5, a1, &qword_10070E838);
  uint64_t result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)(a1 + *(int *)(result + 20)) = _swiftEmptyArrayStorage;
  *(void *)(a1 + *(int *)(result + 24)) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1004F4F20(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v8 - 8);
  int v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v14);
  long long v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
  sub_1000A5858((uint64_t)v16, (uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1000A5770((uint64_t)v16, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  if (a1)
  {
    uint64_t v18 = *(void *)&v13[*(int *)(v11 + 24)];
    swift_bridgeObjectRetain();
    sub_1000A5770((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  }
  else
  {
    unint64_t v17 = *(void *)&v13[*(int *)(v11 + 20)];
    swift_bridgeObjectRetain();
    sub_1000A5770((uint64_t)v13, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t v18 = sub_100177EAC(v17);
  }
  sub_1000A5858(a2, (uint64_t)v10, type metadata accessor for DOCBrowserHistoryShiftAmount);
  uint64_t v19 = sub_1000CBE70(&qword_10070E840);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v10, 1, v19) == 1)
  {
    uint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    char v21 = v20 != 0;
  }
  else
  {
    sub_1000BC744((uint64_t)v10, (uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v22 = *(void *)(v18 + 16);
    if (v22)
    {
      unint64_t v23 = v18 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v24 = *(void *)(v5 + 72);
      swift_bridgeObjectRetain();
      uint64_t v25 = v22 - 1;
      do
      {
        uint64_t v26 = v25;
        char v21 = static UUID.== infix(_:_:)();
        if (v21) {
          break;
        }
        uint64_t v25 = v26 - 1;
        v23 += v24;
      }
      while (v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      char v21 = 0;
    }
    sub_1000A5770((uint64_t)v7, type metadata accessor for DOCBrowserHistoryItem);
    swift_bridgeObjectRelease();
  }
  return v21 & 1;
}

uint64_t sub_1004F52AC(char a1, uint64_t a2)
{
  int v3 = a1 & 1;
  uint64_t v175 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v4 = __chkstk_darwin(v175);
  uint64_t v156 = (uint64_t)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v158 = (uint64_t)&v149 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v149 - v8;
  uint64_t v178 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  uint64_t v10 = __chkstk_darwin(v178);
  uint64_t v161 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v157 = (char *)&v149 - v13;
  __chkstk_darwin(v12);
  uint64_t v179 = (char *)&v149 - v14;
  uint64_t v15 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v15 - 8);
  uint64_t v168 = (uint64_t)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v155 = (uint64_t)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v154 = (char *)&v149 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v153 = (uint64_t)&v149 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v160 = (uint64_t)&v149 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v166 = (uint64_t)&v149 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v177 = (uint64_t)&v149 - v29;
  __chkstk_darwin(v28);
  uint64_t v182 = (uint64_t)&v149 - v30;
  uint64_t v167 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v187 = *(void *)(v167 - 8);
  uint64_t v31 = __chkstk_darwin(v167);
  uint64_t v152 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v174 = (uint64_t)&v149 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v151 = (char *)&v149 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v173 = (uint64_t)&v149 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v180 = (uint64_t)&v149 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v181 = (uint64_t)&v149 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v149 - v44;
  uint64_t v46 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)&v149 - v47;
  uint64_t v49 = __chkstk_darwin(v46);
  uint64_t v51 = (char *)&v149 - v50;
  uint64_t v52 = __chkstk_darwin(v49);
  unint64_t v54 = (char *)&v149 - v53;
  uint64_t v55 = __chkstk_darwin(v52);
  uint64_t v57 = (char *)&v149 - v56;
  uint64_t v58 = __chkstk_darwin(v55);
  uint64_t v60 = (char *)&v149 - v59;
  __chkstk_darwin(v58);
  uint64_t v62 = (char *)&v149 - v61;
  int v176 = v3;
  uint64_t i = a2;
  uint64_t v63 = a2;
  uint64_t v64 = v159;
  uint64_t result = sub_1004F4F20(v3, v63);
  if ((result & 1) == 0) {
    return result;
  }
  uint64_t v172 = v60;
  id v163 = v62;
  id v164 = v57;
  uint64_t v184 = v51;
  id v185 = v54;
  unint64_t v186 = v48;
  int v66 = v176;
  uint64_t v67 = v64;
  sub_1004F6638(v176);
  uint64_t v68 = v182;
  sub_1000A5858(i, v182, type metadata accessor for DOCBrowserHistoryShiftAmount);
  uint64_t v69 = sub_1000CBE70(&qword_10070E840);
  uint64_t v70 = *(void *)(v69 - 8);
  id v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v71(v68, 1, v69) == 1)
  {
    uint64_t v72 = type metadata accessor for DOCBrowserHistoryShiftAmount;
    uint64_t v73 = v68;
    return sub_1000A5770(v73, v72);
  }
  uint64_t v170 = v71;
  uint64_t v171 = v70 + 48;
  char v74 = v172;
  sub_1000BC744(v68, (uint64_t)v172, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v75 = (uint64_t)v163;
  sub_1000BC744((uint64_t)v74, (uint64_t)v163, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v182 = *(void *)(v67 + OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_state);
  uint64_t v162 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v187 + 48);
  uint64_t v172 = (void *)(v70 + 56);
  unint64_t v150 = (unint64_t)" completion to that job!";
  unint64_t v149 = 0x80000001005FC890;
  uint64_t v165 = v9;
  uint64_t v76 = v177;
  uint64_t v77 = (uint64_t)v164;
  for (i = v69; ; uint64_t v69 = i)
  {
    uint64_t v78 = (uint64_t)v179;
    dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
    sub_1000A5858(v78, (uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1000A5770(v78, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    uint64_t v79 = v168;
    sub_1000CBC00((uint64_t)v9, v168, &qword_10070E838);
    sub_1000A5770((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    if ((*v162)(v79, 1, v167) == 1)
    {
      sub_1000A5770(v75, type metadata accessor for DOCBrowserHistoryItem);
      return sub_1000CBBA4(v79, &qword_10070E838);
    }
    sub_1000BC744(v79, v77, type metadata accessor for DOCBrowserHistoryItem);
    type metadata accessor for UUID();
    sub_1000BAE4C(&qword_10071A1C0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (dispatch thunk of static Equatable.== infix(_:_:)())
    {
      sub_1000A5770(v77, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v73 = v75;
      uint64_t v72 = type metadata accessor for DOCBrowserHistoryItem;
      return sub_1000A5770(v73, v72);
    }
    unint64_t v80 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v172;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v172)(v76, 1, 1, v69);
    uint64_t v169 = v80;
    if (v66)
    {
      uint64_t v99 = (uint64_t)v179;
      dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
      sub_1000A5858(v99, (uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      sub_1000A5770(v99, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
      unint64_t v83 = *(void *)&v9[*(int *)(v175 + 24)];
      swift_bridgeObjectRetain();
      sub_1000A5770((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
      goto LABEL_25;
    }
    uint64_t v81 = (uint64_t)v157;
    dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
    uint64_t v82 = v158;
    sub_1000A5858(v81, v158, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1000A5770(v81, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    unint64_t v83 = *(void *)(v82 + *(int *)(v175 + 20));
    swift_bridgeObjectRetain();
    uint64_t result = sub_1000A5770(v82, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    unint64_t v84 = *(void *)(v83 + 16);
    if (v84 >= 2) {
      break;
    }
LABEL_25:
    uint64_t v89 = (uint64_t)v186;
LABEL_26:
    uint64_t v76 = v177;
    uint64_t v100 = v166;
    sub_1000A5858(v177, v166, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v170(v100, 1, i) == 1)
    {
      uint64_t v101 = *(void *)(v83 + 16);
      swift_bridgeObjectRelease();
      sub_1000A5770(v76, type metadata accessor for DOCBrowserHistoryShiftAmount);
      int v66 = v176;
      uint64_t v102 = (uint64_t)v161;
      uint64_t v103 = v187;
      if (!v101) {
        goto LABEL_8;
      }
      if (!v176) {
        goto LABEL_29;
      }
    }
    else
    {
      sub_1000BC744(v100, v89, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v110 = *(void *)(v83 + 16);
      uint64_t v111 = v187;
      if (!v110)
      {
LABEL_38:
        sub_1000A5770(v89, type metadata accessor for DOCBrowserHistoryItem);
        swift_bridgeObjectRelease();
        uint64_t v115 = v76;
LABEL_39:
        sub_1000A5770(v115, type metadata accessor for DOCBrowserHistoryShiftAmount);
        int v66 = v176;
        goto LABEL_8;
      }
      uint64_t v112 = v83 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
      swift_bridgeObjectRetain();
      uint64_t v113 = *(void *)(v111 + 72);
      while (1)
      {
        sub_1000A5858(v112, (uint64_t)v45, type metadata accessor for DOCBrowserHistoryItem);
        char v114 = static UUID.== infix(_:_:)();
        sub_1000A5770((uint64_t)v45, type metadata accessor for DOCBrowserHistoryItem);
        if (v114) {
          break;
        }
        v112 += v113;
        if (!--v110)
        {
          swift_bridgeObjectRelease();
          uint64_t v76 = v177;
          goto LABEL_38;
        }
      }
      swift_bridgeObjectRelease();
      sub_1000A5770(v89, type metadata accessor for DOCBrowserHistoryItem);
      swift_bridgeObjectRelease();
      uint64_t v76 = v177;
      sub_1000A5770(v177, type metadata accessor for DOCBrowserHistoryShiftAmount);
      uint64_t v102 = (uint64_t)v161;
      uint64_t v103 = v187;
      if (!v176)
      {
LABEL_29:
        v169(v160, 1, 1, i);
        dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
        uint64_t v104 = v156;
        sub_1000A5858(v102, v156, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        sub_1000A5770(v102, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
        unint64_t v105 = *(void *)(v104 + *(int *)(v175 + 20));
        swift_bridgeObjectRetain();
        uint64_t result = sub_1000A5770(v104, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
        unint64_t v106 = *(void *)(v105 + 16);
        if (v106 >= 2)
        {
          unint64_t v123 = 0;
          unint64_t v124 = v106 >> 1;
          unint64_t v125 = v106 - 1;
          uint64_t v126 = v181;
          do
          {
            if (v123 != v125)
            {
              unint64_t v127 = *(void *)(v105 + 16);
              if (v123 >= v127) {
                goto LABEL_76;
              }
              unint64_t v128 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
              uint64_t v129 = *(void *)(v103 + 72);
              uint64_t v130 = v129 * v123;
              uint64_t result = sub_1000A5858(v105 + v128 + v129 * v123, v126, type metadata accessor for DOCBrowserHistoryItem);
              if (v125 >= v127) {
                goto LABEL_77;
              }
              unint64_t v131 = v129 * v125;
              uint64_t v132 = v105 + v128 + v129 * v125;
              uint64_t v133 = v180;
              sub_1000A5858(v132, v180, type metadata accessor for DOCBrowserHistoryItem);
              uint64_t result = swift_isUniquelyReferenced_nonNull_native();
              if ((result & 1) == 0)
              {
                uint64_t result = sub_10050DF68(v105);
                unint64_t v105 = result;
              }
              if (v123 >= *(void *)(v105 + 16)) {
                goto LABEL_78;
              }
              unint64_t v134 = v105 + v128;
              uint64_t result = sub_10017FC5C(v133, v134 + v130);
              if (v125 >= *(void *)(v105 + 16)) {
                goto LABEL_79;
              }
              uint64_t v135 = v134 + v131;
              uint64_t v136 = v181;
              uint64_t result = sub_10017FC5C(v181, v135);
              uint64_t v126 = v136;
              uint64_t v103 = v187;
            }
            ++v123;
            --v125;
          }
          while (v124 != v123);
        }
        uint64_t v107 = v160;
        uint64_t v108 = v153;
        sub_1000A5858(v160, v153, type metadata accessor for DOCBrowserHistoryShiftAmount);
        if (v170(v108, 1, i) == 1)
        {
          uint64_t v109 = *(void *)(v105 + 16);
          swift_bridgeObjectRelease();
          sub_1000A5770(v107, type metadata accessor for DOCBrowserHistoryShiftAmount);
          int v66 = v176;
          uint64_t v76 = v177;
          if (v109) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v143 = v173;
          sub_1000BC744(v108, v173, type metadata accessor for DOCBrowserHistoryItem);
          uint64_t v144 = *(void *)(v105 + 16);
          if (v144)
          {
            uint64_t v145 = v105
                 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
            swift_bridgeObjectRetain();
            uint64_t v146 = *(void *)(v103 + 72);
            uint64_t v147 = (uint64_t)v151;
            while (1)
            {
              sub_1000A5858(v145, v147, type metadata accessor for DOCBrowserHistoryItem);
              char v148 = static UUID.== infix(_:_:)();
              sub_1000A5770(v147, type metadata accessor for DOCBrowserHistoryItem);
              if (v148) {
                break;
              }
              v145 += v146;
              if (!--v144)
              {
                swift_bridgeObjectRelease();
                uint64_t v107 = v160;
                uint64_t v143 = v173;
                goto LABEL_65;
              }
            }
            swift_bridgeObjectRelease();
            sub_1000A5770(v173, type metadata accessor for DOCBrowserHistoryItem);
            swift_bridgeObjectRelease();
            sub_1000A5770(v160, type metadata accessor for DOCBrowserHistoryShiftAmount);
            int v66 = v176;
            uint64_t v76 = v177;
LABEL_67:
            sub_1000CDE40(0xD000000000000018, v149);
LABEL_7:
            sub_1000877C0();
            goto LABEL_8;
          }
LABEL_65:
          sub_1000A5770(v143, type metadata accessor for DOCBrowserHistoryItem);
          swift_bridgeObjectRelease();
          sub_1000A5770(v107, type metadata accessor for DOCBrowserHistoryShiftAmount);
          int v66 = v176;
          uint64_t v76 = v177;
        }
        goto LABEL_8;
      }
    }
    uint64_t v116 = (uint64_t)v154;
    uint64_t v117 = i;
    v169((uint64_t)v154, 1, 1, i);
    uint64_t v118 = (uint64_t)v179;
    dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
    uint64_t v119 = (uint64_t)v165;
    sub_1000A5858(v118, (uint64_t)v165, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    sub_1000A5770(v118, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
    uint64_t v120 = *(void *)(v119 + *(int *)(v175 + 24));
    swift_bridgeObjectRetain();
    sub_1000A5770(v119, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
    uint64_t v121 = v155;
    sub_1000A5858(v116, v155, type metadata accessor for DOCBrowserHistoryShiftAmount);
    if (v170(v121, 1, v117) != 1)
    {
      uint64_t v137 = v174;
      sub_1000BC744(v121, v174, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v138 = *(void *)(v120 + 16);
      if (v138)
      {
        uint64_t v139 = v120 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
        swift_bridgeObjectRetain();
        uint64_t v140 = *(void *)(v103 + 72);
        uint64_t v141 = (uint64_t)v152;
        do
        {
          sub_1000A5858(v139, v141, type metadata accessor for DOCBrowserHistoryItem);
          char v142 = static UUID.== infix(_:_:)();
          sub_1000A5770(v141, type metadata accessor for DOCBrowserHistoryItem);
          if (v142)
          {
            swift_bridgeObjectRelease();
            sub_1000A5770(v174, type metadata accessor for DOCBrowserHistoryItem);
            swift_bridgeObjectRelease();
            sub_1000A5770(v116, type metadata accessor for DOCBrowserHistoryShiftAmount);
            int v66 = v176;
            uint64_t v76 = v177;
            goto LABEL_6;
          }
          v139 += v140;
          --v138;
        }
        while (v138);
        swift_bridgeObjectRelease();
        uint64_t v76 = v177;
        uint64_t v137 = v174;
      }
      sub_1000A5770(v137, type metadata accessor for DOCBrowserHistoryItem);
      swift_bridgeObjectRelease();
      uint64_t v115 = v116;
      goto LABEL_39;
    }
    uint64_t v122 = *(void *)(v120 + 16);
    swift_bridgeObjectRelease();
    sub_1000A5770(v116, type metadata accessor for DOCBrowserHistoryShiftAmount);
    int v66 = v176;
    if (v122)
    {
LABEL_6:
      sub_1000CDE40(0xD000000000000018, v150 | 0x8000000000000000);
      goto LABEL_7;
    }
LABEL_8:
    uint64_t v77 = (uint64_t)v164;
    sub_1000A5770((uint64_t)v164, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v9 = v165;
    uint64_t v75 = (uint64_t)v163;
  }
  unint64_t v85 = 0;
  unint64_t v86 = v84 >> 1;
  unint64_t v87 = v84 - 1;
  uint64_t v88 = (uint64_t)v185;
  uint64_t v89 = (uint64_t)v186;
  while (1)
  {
    if (v85 == v87) {
      goto LABEL_15;
    }
    unint64_t v91 = *(void *)(v83 + 16);
    if (v85 >= v91) {
      break;
    }
    unint64_t v92 = (*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80);
    uint64_t v93 = *(void *)(v187 + 72);
    uint64_t v94 = v93 * v85;
    uint64_t result = sub_1000A5858(v83 + v92 + v93 * v85, v88, type metadata accessor for DOCBrowserHistoryItem);
    if (v87 >= v91) {
      goto LABEL_73;
    }
    unint64_t v95 = v93 * v87;
    uint64_t v96 = v83 + v92 + v93 * v87;
    uint64_t v97 = (uint64_t)v184;
    sub_1000A5858(v96, (uint64_t)v184, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_10050DF68(v83);
      unint64_t v83 = result;
    }
    if (v85 >= *(void *)(v83 + 16)) {
      goto LABEL_74;
    }
    unint64_t v98 = v83 + v92;
    uint64_t result = sub_10017FC5C(v97, v98 + v94);
    if (v87 >= *(void *)(v83 + 16)) {
      goto LABEL_75;
    }
    uint64_t v90 = (uint64_t)v185;
    uint64_t result = sub_10017FC5C((uint64_t)v185, v98 + v95);
    uint64_t v88 = v90;
    uint64_t v89 = (uint64_t)v186;
LABEL_15:
    ++v85;
    --v87;
    if (v86 == v85) {
      goto LABEL_26;
    }
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t sub_1004F6638(char a1)
{
  int v1 = a1 & 1;
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_10070E840);
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  char v7 = sub_1004F4F20(v1, (uint64_t)v4);
  uint64_t result = sub_1000A5770((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
  if (v7)
  {
    v6(v4, 1, 1, v5);
    if (v1)
    {
      char v10 = sub_1004F4F20(1, (uint64_t)v4);
      uint64_t result = sub_1000A5770((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    else
    {
      int v9 = sub_1004F4F20(0, (uint64_t)v4);
      uint64_t result = sub_1000A5770((uint64_t)v4, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if ((v9 & 1) == 0) {
        return result;
      }
    }
    sub_1000CDE40(0xD000000000000018, 0x80000001005FC890);
    return sub_1000877C0();
  }
  return result;
}

uint64_t sub_1004F6804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v47[1] = a3;
  uint64_t v4 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  v47[0] = (uint64_t)v47 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v16 = swift_projectBox();
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v18 = *(int *)(v17 + 24);
  uint64_t v19 = *(void *)(a1 + v18);
  v52[3] = &type metadata for DOCBrowserHistoryItem.SearchContext;
  v52[0] = v19;
  swift_beginAccess();
  uint64_t v20 = *(int *)(v7 + 36);
  uint64_t v49 = v16;
  uint64_t v21 = v16 + v20;
  swift_bridgeObjectRetain();
  sub_10008C318((uint64_t)v52, v21, (uint64_t *)&unk_100705D60);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v18) = _swiftEmptyArrayStorage;
  sub_1000CBC00(a1, (uint64_t)v6, &qword_10070E838);
  uint64_t v48 = v8;
  uint64_t v22 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000CBBA4((uint64_t)v6, &qword_10070E838);
  }
  else
  {
    sub_1000BC744((uint64_t)v6, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v23 = v47[0];
    sub_1000A5858((uint64_t)v15, v47[0], type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v24 = *(int *)(v17 + 20);
    unint64_t v25 = *(void *)(a1 + v24);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v25 = sub_1000B7F44(0, *(void *)(v25 + 16) + 1, 1, v25);
    }
    unint64_t v27 = *(void *)(v25 + 16);
    unint64_t v26 = *(void *)(v25 + 24);
    if (v27 >= v26 >> 1) {
      unint64_t v25 = sub_1000B7F44(v26 > 1, v27 + 1, 1, v25);
    }
    *(void *)(v25 + 16) = v27 + 1;
    sub_1000BC744(v23, v25+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v27, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(a1 + v24) = v25;
    sub_1000A5770((uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  }
  uint64_t v50 = 0x203A676E69646461;
  unint64_t v51 = 0xE800000000000000;
  uint64_t v28 = v49;
  swift_beginAccess();
  sub_1000A5858(v28, (uint64_t)v11, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v29 = v22;
  uint64_t v30 = *(void **)&v11[*(int *)(v22 + 20)];
  uint64_t v31 = *(void **)&v11[*(int *)(v22 + 32)];
  id v32 = v30;
  id v33 = v31;
  sub_1000A5770((uint64_t)v11, type metadata accessor for DOCBrowserHistoryItem);
  id v34 = sub_1000B7238();
  if (v35 != 255)
  {
    uint64_t v36 = v34;
    if (v35 == 2)
    {
      id v37 = [v33 displayName];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;

      sub_1000B72E4(v36, 2u);
      goto LABEL_15;
    }
    sub_1000B72E4(v34, v35);
  }
  id v41 = [v32 displayName];
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = v43;
  }
  else
  {

    uint64_t v38 = 0;
    uint64_t v40 = (void *)0xE000000000000000;
  }
LABEL_15:
  v44._uint64_t countAndFlagsBits = v38;
  v44._object = v40;
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  sub_1000CDE40(v50, v51);
  swift_bridgeObjectRelease();
  sub_1000CBBA4(a1, &qword_10070E838);
  uint64_t v45 = v49;
  swift_beginAccess();
  sub_1000A5858(v45, a1, type metadata accessor for DOCBrowserHistoryItem);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(a1, 0, 1, v29);
}

uint64_t sub_1004F6D10()
{
  uint64_t v1 = type metadata accessor for DOCBrowserHistoryShiftAmount(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState(0);
  __chkstk_darwin(v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v21[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = v0;
  dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
  sub_1000A5858((uint64_t)v9, (uint64_t)v6, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  sub_1000A5770((uint64_t)v9, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ThreadSafeState);
  sub_1000CBC00((uint64_t)v6, (uint64_t)v12, &qword_10070E838);
  sub_1000A5770((uint64_t)v6, type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_1000CBBA4((uint64_t)v12, &qword_10070E838);
  }
  sub_1000BC744((uint64_t)v12, (uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000CBC00((uint64_t)&v16[*(int *)(v13 + 36)], (uint64_t)v21, (uint64_t *)&unk_100705D60);
  if (v22)
  {
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = sub_1000CBE70(&qword_10070E840);
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v3, 1, 1, v18);
      char v19 = sub_1004F4F20(0, (uint64_t)v3);
      sub_1000A5770((uint64_t)v3, type metadata accessor for DOCBrowserHistoryShiftAmount);
      if (v19)
      {
        sub_1000CDE40(0xD000000000000018, 0x80000001005FC890);
        sub_1000877C0();
      }
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v21, (uint64_t *)&unk_100705D60);
  }
  return sub_1000A5770((uint64_t)v16, type metadata accessor for DOCBrowserHistoryItem);
}

BOOL sub_1004F7108()
{
  uint64_t v23 = type metadata accessor for DispatchTime();
  uint64_t v0 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v22 - v4;
  uint64_t v6 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v13 = dispatch_semaphore_create(0);
  uint64_t v14 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.userInitiated(_:), v6);
  uint64_t v15 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  int64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  uint64_t v17 = v13;
  sub_1000CC768((uint64_t)v12, 0, v15, (uint64_t)sub_1005013BC, v16);

  swift_release();
  sub_1000CBBA4((uint64_t)v12, &qword_10070E838);
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v0 + 8);
  char v19 = v2;
  uint64_t v20 = v23;
  v18(v19, v23);
  OS_dispatch_semaphore.wait(timeout:)();
  v18(v5, v20);
  LOBYTE(v7) = static DispatchTimeoutResult.== infix(_:_:)();

  return (v7 & 1) == 0;
}

BOOL sub_1004F7448(uint64_t a1)
{
  uint64_t v25 = type metadata accessor for DispatchTime();
  uint64_t v2 = *(void *)(v25 - 8);
  uint64_t v3 = __chkstk_darwin(v25);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v24 - v6;
  uint64_t v8 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000CBE70(&qword_10070E838);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_semaphore_t v15 = dispatch_semaphore_create(0);
  sub_1000A5858(a1, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v16 = type metadata accessor for DOCBrowserHistoryItem(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 0, 1, v16);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.userInitiated(_:), v8);
  uint64_t v17 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  int64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  char v19 = v15;
  sub_1000CC768((uint64_t)v14, 0, v17, (uint64_t)sub_100167BBC, v18);

  swift_release();
  sub_1000CBBA4((uint64_t)v14, &qword_10070E838);
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v21 = v5;
  uint64_t v22 = v25;
  v20(v21, v25);
  OS_dispatch_semaphore.wait(timeout:)();
  v20(v7, v22);
  LOBYTE(v9) = static DispatchTimeoutResult.== infix(_:_:)();

  return (v9 & 1) == 0;
}

void sub_1004F77AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + *(int *)(__chkstk_darwin(v7 - 8) + 28));
  id v12 = [v11 fileProviderItem];
  if (!v12) {
    goto LABEL_4;
  }
  uint64_t v13 = v12;
  if ([v11 isRoot])
  {

LABEL_4:
    sub_1000A5858(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    unint64_t v14 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    sub_1000BC744((uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v30 = sub_100500784;
    uint64_t v31 = v15;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v27 = 1107296256;
    uint64_t v28 = sub_1000666D8;
    uint64_t v29 = &unk_1006B3A28;
    uint64_t v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    _Block_release(v16);
    return;
  }
  id v25 = *(id *)&v3[OBJC_IVAR____TtC5Files32_DOCBrowserHistoryDataSourceBase_itemManager];
  id v17 = [v13 itemID];
  sub_1000A5858(a1, (uint64_t)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  sub_1000BC744((uint64_t)v10, v20 + v18, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(v20 + v19) = v3;
  uint64_t v21 = (void *)(v20 + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v21 = a2;
  v21[1] = a3;
  uint64_t v30 = sub_10050093C;
  uint64_t v31 = v20;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_10016A350;
  uint64_t v29 = &unk_1006B3A78;
  uint64_t v22 = _Block_copy(&aBlock);
  uint64_t v23 = v3;
  swift_retain();
  swift_release();
  [v25 fetchParentsForItemID:v17 recursively:1 completionHandler:v22];
  _Block_release(v22);
}

uint64_t sub_1004F7AF8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v33 = a1;
  id v34 = a4;
  uint64_t v31 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchQoS.QoSClass.userInitiated(_:), v16);
  uint64_t v32 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  sub_1000A5858(v31, (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v21 = (v14 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1000BC744((uint64_t)v15, v23 + v20, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v24 = v34;
  *(void *)(v23 + v21) = v33;
  *(void *)(v23 + v22) = v24;
  id v25 = (void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v36;
  *id v25 = v35;
  v25[1] = v26;
  aBlock[4] = sub_100500B58;
  void aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B3AC8;
  uint64_t v27 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v28 = v24;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_1000BAE4C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v29 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v11, v38);
  return swift_release();
}

uint64_t sub_1004F7F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a3;
  uint64_t v9 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocBox();
  uint64_t v15 = v14;
  sub_1000A5858(a1, v14, type metadata accessor for DOCBrowserHistoryItem);
  if (a2)
  {
    sub_1000A5858(a1, (uint64_t)&aBlock[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for DOCBrowserHistoryItem);
    unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v18 = swift_allocObject();
    sub_1000BC744((uint64_t)v12, v18 + v16, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(v18 + v17) = a2;
    *(void *)(v18 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8)) = v13;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100500D98;
    *(void *)(v19 + 24) = v18;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1000877C0();
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  sub_1000A5858(v15, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  sub_1004F7448((uint64_t)v12);
  sub_1000A5770((uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v20 = (void *)swift_allocObject();
  v20[2] = a4;
  v20[3] = a5;
  _DWORD v20[4] = v13;
  aBlock[4] = sub_100500C40;
  void aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B3B18;
  unint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v21);
  return swift_release();
}

uint64_t sub_1004F828C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  unint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = swift_projectBox();
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
LABEL_19:
    sub_1000A5858(a1, a3, type metadata accessor for DOCBrowserHistoryItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  if (a2 >> 62) {
    goto LABEL_16;
  }
  uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v11)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v16 = _swiftEmptyArrayStorage;
LABEL_18:
    sub_1004F85C8(0, 0, (unint64_t)v16, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    sub_10017FC5C((uint64_t)v9, v10);
    swift_beginAccess();
    a1 = v10;
    goto LABEL_19;
  }
  while (1)
  {
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
    if (v11 < 0) {
      break;
    }
    unint64_t v17 = v9;
    unint64_t v18 = v10;
    unint64_t v19 = a1;
    unint64_t v20 = v7;
    uint64_t v21 = v6;
    uint64_t v22 = a3;
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = v11 - 1;
      unint64_t v10 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v9 = &qword_1007069C0;
      while (v13 != 0x7FFFFFFFFFFFFFFFLL)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        a3 = DOCNode.representedLocation.getter();
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v6 = v23[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (--v13 == -1) {
          goto LABEL_13;
        }
      }
      __break(1u);
    }
    else
    {
      unint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      a1 = v11 - 1;
      unint64_t v7 = a2 + 24;
      uint64_t v9 = (uint64_t *)FPItem_ptr;
      while (a1 < v10)
      {
        uint64_t v14 = *(void **)(v7 + 8 * v11);
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v15 = v14;
        a3 = DOCNode.representedLocation.getter();

        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        uint64_t v6 = v23[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        if (!--v11)
        {
LABEL_13:
          unint64_t v16 = v23;
          swift_bridgeObjectRelease();
          uint64_t v6 = v21;
          a3 = v22;
          unint64_t v7 = v20;
          uint64_t v9 = v17;
          unint64_t v10 = v18;
          goto LABEL_18;
        }
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

void sub_1004F85C8(void *a1@<X0>, void *a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1000A5858(v4, a4, type metadata accessor for DOCBrowserHistoryItem);
  unint64_t v10 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = *(void **)(a4 + v11);
  id v13 = v12;
  uint64_t v14 = sub_1000CC4E4(v12, a1, (uint64_t)a2);
  if (!v14)
  {
    __break(1u);
    goto LABEL_56;
  }
  id v15 = v14;

  *(void *)(a4 + v11) = v15;
  uint64_t v16 = v10[7];
  unint64_t v17 = *(void **)(a4 + v16);
  id v18 = v17;
  unint64_t v19 = sub_1000CC4E4(v17, a1, (uint64_t)a2);

  *(void *)(a4 + v16) = v19;
  id v20 = v19;

  uint64_t v21 = v10[6];
  unint64_t v22 = *(void *)(a4 + v21);
  if (!a3)
  {
    swift_bridgeObjectRetain();

    a3 = v22;
    goto LABEL_42;
  }
  if (!v19)
  {
    swift_bridgeObjectRetain();
    goto LABEL_42;
  }
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter() < 2) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 < 2)
    {
LABEL_6:

      swift_bridgeObjectRelease();
LABEL_42:
      id v43 = a2;
      swift_bridgeObjectRetain();
      Swift::String v44 = sub_1000053B0(a3, a1, (uint64_t)a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      *(void *)(a4 + v21) = v44;
      return;
    }
  }
  if ((v22 & 0xC000000000000001) != 0)
  {
    id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_13:
    id v25 = v24;
    swift_bridgeObjectRelease();
    sub_1001B5F94((uint64_t)v25, a3);
    Swift::Int v48 = v26;
    char v28 = v27;

    if (v28)
    {

      goto LABEL_42;
    }
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1005A04F0;
    *(void *)(v29 + 32) = v20;
    uint64_t v49 = v29;
    unint64_t v30 = (unint64_t)&v49;
    specialized Array._endMutation()();
    uint64_t v5 = v49;
    uint64_t v47 = a3 >> 62;
    if (!(a3 >> 62))
    {
      uint64_t v31 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v31 < v48)
      {
        __break(1u);
        goto LABEL_48;
      }
      id v32 = v20;
      unint64_t v30 = v31;
LABEL_17:
      if (v31 >= v48)
      {
        if ((v48 & 0x8000000000000000) == 0)
        {
          if (v47)
          {
            swift_bridgeObjectRetain();
            uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v33 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          if (v33 >= (uint64_t)v30)
          {
            uint64_t v46 = v5;
            if ((v30 & 0x8000000000000000) == 0)
            {
              if ((a3 & 0xC000000000000001) == 0 || v48 == v30)
              {
LABEL_30:
                if (v47)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v5 = _CocoaArrayWrapper.subscript.getter();
                  uint64_t v36 = v37;
                  Swift::Int v48 = v38;
                  unint64_t v30 = v39;
                  swift_bridgeObjectRelease_n();
                  if (v30) {
                    goto LABEL_35;
                  }
                }
                else
                {
                  uint64_t v5 = a3 & 0xFFFFFFFFFFFFFF8;
                  uint64_t v36 = (a3 & 0xFFFFFFFFFFFFFF8) + 32;
                  unint64_t v30 = (2 * v30) | 1;
                  if (v30)
                  {
LABEL_35:
                    uint64_t v47 = v36;
                    type metadata accessor for __ContiguousArrayStorageBase();
                    swift_unknownObjectRetain_n();
                    uint64_t v40 = (void *)swift_dynamicCastClass();
                    if (!v40)
                    {
                      swift_unknownObjectRelease();
                      uint64_t v40 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v41 = v40[2];
                    swift_release();
                    if (!__OFSUB__(v30 >> 1, v48))
                    {
                      if (v41 == (v30 >> 1) - v48)
                      {
                        if (!swift_dynamicCastClass()) {
                          swift_unknownObjectRelease();
                        }
                        goto LABEL_41;
                      }
                      goto LABEL_54;
                    }
LABEL_53:
                    __break(1u);
LABEL_54:
                    swift_unknownObjectRelease();
                    uint64_t v36 = v47;
                  }
                }
                sub_1002F507C(v5, v36, v48, v30);
LABEL_41:
                swift_unknownObjectRelease();
                uint64_t v49 = v46;
                swift_bridgeObjectRetain();
                unint64_t v42 = swift_retain();
                sub_1000AEF70(v42);
                swift_bridgeObjectRelease();
                swift_release();

                a3 = v49;
                goto LABEL_42;
              }
              if (v48 < v30)
              {
                sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
                Swift::Int v34 = v48;
                do
                {
                  Swift::Int v35 = v34 + 1;
                  _ArrayBuffer._typeCheckSlowPath(_:)(v34);
                  Swift::Int v34 = v35;
                }
                while (v30 != v35);
                goto LABEL_30;
              }
LABEL_52:
              __break(1u);
              goto LABEL_53;
            }
LABEL_51:
            __break(1u);
            goto LABEL_52;
          }
LABEL_50:
          __break(1u);
          goto LABEL_51;
        }
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    goto LABEL_45;
  }
  if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v24 = *(id *)(v22 + 40);
    goto LABEL_13;
  }
  __break(1u);
LABEL_45:
  id v45 = v20;
  swift_bridgeObjectRetain();
  unint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if ((uint64_t)v30 >= v48)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_1004F8ACC(void (*a1)(char *))
{
  uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = swift_projectBox();
  swift_beginAccess();
  sub_1000A5858(v5, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
  a1(v4);
  return sub_1000A5770((uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_1004F8BD8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10071AB90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70(&qword_10070E838);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v29[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v29[-1] - v9;
  uint64_t v11 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v29[-1] - v16;
  sub_1000CBC00(a1, (uint64_t)v10, &qword_10070E838);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    id v18 = &qword_10070E838;
    unint64_t v19 = v10;
    return sub_1000CBBA4((uint64_t)v19, v18);
  }
  sub_1000BC744((uint64_t)v10, (uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000CBC00((uint64_t)&v17[*(int *)(v11 + 36)], (uint64_t)v29, (uint64_t *)&unk_100705D60);
  if (v30)
  {
    sub_1000CBE70(&qword_10071A1B8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v29, (uint64_t *)&unk_100705D60);
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v33 = 0;
  }
  sub_1000CBC00((uint64_t)&v31, (uint64_t)v29, &qword_10071A1B0);
  if (v30)
  {
    id v20 = sub_1000A6B78(v29, v30);
    uint64_t v21 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 24);
    if (!*(void *)(*(void *)(a1 + v21) + 16))
    {
      uint64_t v22 = *v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + v21) = v22;
    }
    sub_10009B1B8((uint64_t)v29);
  }
  else
  {
    sub_1000CBBA4((uint64_t)v29, &qword_10071A1B0);
  }
  if ((sub_1004F9010(1) & 1) == 0)
  {
    type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    sub_1000A5858((uint64_t)v17, (uint64_t)v4, type metadata accessor for DOCBrowserHistoryItem);
    sub_100515BA0(0, 0, (uint64_t)v4);
  }
  uint64_t v23 = *(int *)(type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0) + 20);
  unint64_t v24 = *(void *)(a1 + v23);
  if (!*(void *)(v24 + 16))
  {
    __break(1u);
LABEL_20:
    uint64_t result = sub_10050DF68(v24);
    unint64_t v24 = result;
    uint64_t v26 = *(void *)(result + 16);
    if (v26) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t v26 = *(void *)(v24 + 16);
  if (v26)
  {
LABEL_17:
    uint64_t v27 = v26 - 1;
    sub_1000BC744(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * (v26 - 1), (uint64_t)v15, type metadata accessor for DOCBrowserHistoryItem);
    *(void *)(v24 + 16) = v27;
    *(void *)(a1 + v23) = v24;
    sub_1000BC744((uint64_t)v15, (uint64_t)v8, type metadata accessor for DOCBrowserHistoryItem);
    sub_1000A5770((uint64_t)v17, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    sub_10008C318((uint64_t)v8, a1, &qword_10070E838);
    id v18 = &qword_10071A1B0;
    unint64_t v19 = (char *)&v31;
    return sub_1000CBBA4((uint64_t)v19, v18);
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1004F9010(char a1)
{
  if (a1)
  {
    uint64_t v2 = type metadata accessor for DOCBrowserHistoryItem(0);
    sub_1000CBC00(v1 + *(int *)(v2 + 36), (uint64_t)v4, (uint64_t *)&unk_100705D60);
    if (v5)
    {
      if (swift_dynamicCast())
      {
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_100705D60);
    }
  }
  return 0;
}

uint64_t sub_1004F90A4(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10070E838);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v8 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - v13;
  sub_1000CBC00(a1, (uint64_t)v7, &qword_10070E838);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1000CBBA4((uint64_t)v7, &qword_10070E838);
  }
  sub_1000BC744((uint64_t)v7, (uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000A5858((uint64_t)v14, (uint64_t)v12, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v23 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v16 = *(int *)(v23 + 20);
  unint64_t v17 = *(void *)(a1 + v16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v17 = sub_1000B7F44(0, *(void *)(v17 + 16) + 1, 1, v17);
  }
  unint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  if (v19 >= v18 >> 1) {
    unint64_t v17 = sub_1000B7F44(v18 > 1, v19 + 1, 1, v17);
  }
  *(void *)(v17 + 16) = v19 + 1;
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t result = sub_1000BC744((uint64_t)v12, v17 + v20 + *(void *)(v9 + 72) * v19, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(a1 + v16) = v17;
  uint64_t v21 = a1 + *(int *)(v23 + 24);
  if (*(void *)(*(void *)v21 + 16))
  {
    sub_1000A5858(*(void *)v21 + v20, (uint64_t)v5, type metadata accessor for DOCBrowserHistoryItem);
    sub_1005169B4(0, 1);
    sub_1000A5770((uint64_t)v14, type metadata accessor for DOCBrowserHistoryItem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
    return sub_10008C318((uint64_t)v5, a1, &qword_10070E838);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F93B4(uint64_t a1, __objc2_class_ro *a2)
{
  uint64_t v120 = a2;
  uint64_t v3 = sub_1000CBE70(&qword_10070E838);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v117 = (char *)v102 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v102 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v116 = (char *)v102 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v111 = (uint64_t)v102 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v113 = (uint64_t)v102 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v115 = (uint64_t)v102 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)v102 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v102 - v20;
  uint64_t v22 = type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v110 = (uint64_t)v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v122 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v102 - v27);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)v102 - v29;
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v121 = (void *)((char *)v102 - v32);
  uint64_t v33 = __chkstk_darwin(v31);
  Swift::Int v35 = (char *)v102 - v34;
  __chkstk_darwin(v33);
  uint64_t v37 = (char *)v102 - v36;
  sub_1000CBC00(a1, (uint64_t)v21, &qword_10070E838);
  uint64_t v118 = v23;
  unint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v38 = v23 + 48;
  uint64_t v119 = v39;
  if (v39((uint64_t)v21, 1, v22) == 1) {
    return sub_1000CBBA4((uint64_t)v21, &qword_10070E838);
  }
  uint64_t v112 = v38;
  uint64_t v108 = v22;
  uint64_t v109 = v19;
  uint64_t v104 = v8;
  uint64_t v107 = v37;
  sub_1000BC744((uint64_t)v21, (uint64_t)v37, type metadata accessor for DOCBrowserHistoryItem);
  uint64_t v41 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v105 = *(int *)(v41 + 20);
  uint64_t v42 = a1;
  uint64_t v43 = *(void *)(a1 + v105);
  Swift::String v44 = _swiftEmptyArrayStorage;
  unint64_t v123 = _swiftEmptyArrayStorage;
  uint64_t v45 = *(void *)(v43 + 16);
  p_info = &OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession.info;
  uint64_t v47 = OBJC_IVAR____TtC5Files27DOCBrowserHistoryDataSource_allowedItemsFilter;
  Swift::Int v48 = v120;
  unint64_t v106 = v120;
  swift_bridgeObjectRetain();
  uint64_t v114 = v42;
  if (v45)
  {
    uint64_t v103 = (char *)v41;
    uint64_t v49 = (char *)v48 + v47;
    uint64_t v50 = (__objc2_class_ro *)((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80));
    uint64_t v51 = *(void *)(v118 + 72);
    v102[1] = v43;
    uint64_t v120 = v50;
    uint64_t v52 = (uint64_t)v50 + v43;
    uint64_t v53 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000A5858(v52, (uint64_t)v35, type metadata accessor for DOCBrowserHistoryItem);
      unint64_t v54 = *(uint64_t (**)(char *))v49;
      swift_retain();
      LOBYTE(v54) = v54(v35);
      swift_release();
      if (v54)
      {
        sub_1000BC744((uint64_t)v35, (uint64_t)v121, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001912C4(0, v53[2] + 1, 1);
        }
        uint64_t v53 = v123;
        unint64_t v56 = v123[2];
        unint64_t v55 = v123[3];
        if (v56 >= v55 >> 1)
        {
          sub_1001912C4(v55 > 1, v56 + 1, 1);
          uint64_t v53 = v123;
        }
        v53[2] = v56 + 1;
        sub_1000BC744((uint64_t)v121, (uint64_t)v120 + (void)v53 + v56 * v51, type metadata accessor for DOCBrowserHistoryItem);
      }
      else
      {
        sub_1000A5770((uint64_t)v35, type metadata accessor for DOCBrowserHistoryItem);
      }
      v52 += v51;
      --v45;
    }
    while (v45);
    uint64_t v57 = v123;
    uint64_t v42 = v114;
    Swift::String v44 = _swiftEmptyArrayStorage;
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession + 32);
    uint64_t v58 = v106;
    uint64_t v41 = (uint64_t)v103;
  }
  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
    uint64_t v58 = v106;
  }
  swift_bridgeObjectRelease();

  uint64_t v59 = (char *)*(int *)(v41 + 24);
  uint64_t v60 = *(__objc2_class_ro **)&v59[v42];
  unint64_t v123 = _swiftEmptyArrayStorage;
  ivar_lyt = (char *)v60->ivar_lyt;
  uint64_t v120 = p_info[490];
  uint64_t v62 = v58;
  uint64_t v121 = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v63 = v58;
  uint64_t v64 = v118;
  if (ivar_lyt)
  {
    uint64_t v103 = v62;
    unint64_t v106 = v59;
    objc_super v65 = (char *)v120 + (void)v63;
    unint64_t v66 = (*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
    uint64_t v67 = *(void *)(v118 + 72);
    uint64_t v120 = v60;
    uint64_t v68 = (uint64_t)v60 + v66;
    uint64_t v69 = _swiftEmptyArrayStorage;
    do
    {
      sub_1000A5858(v68, (uint64_t)v30, type metadata accessor for DOCBrowserHistoryItem);
      uint64_t v70 = *(uint64_t (**)(char *))v65;
      swift_retain();
      char v71 = v70(v30);
      swift_release();
      if (v71)
      {
        sub_1000BC744((uint64_t)v30, (uint64_t)v122, type metadata accessor for DOCBrowserHistoryItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1001912C4(0, v69[2] + 1, 1);
        }
        uint64_t v69 = v123;
        unint64_t v73 = v123[2];
        unint64_t v72 = v123[3];
        if (v73 >= v72 >> 1)
        {
          sub_1001912C4(v72 > 1, v73 + 1, 1);
          uint64_t v69 = v123;
        }
        void v69[2] = v73 + 1;
        sub_1000BC744((uint64_t)v122, (uint64_t)v69 + v66 + v73 * v67, type metadata accessor for DOCBrowserHistoryItem);
      }
      else
      {
        sub_1000A5770((uint64_t)v30, type metadata accessor for DOCBrowserHistoryItem);
      }
      v68 += v67;
      --ivar_lyt;
    }
    while (ivar_lyt);
    Swift::String v44 = v123;
    uint64_t v64 = v118;
    char v74 = v106;
    p_info = (__objc2_class_ro **)(&OBJC_METACLASS____TtCC5Files18DOCDocumentManager23DocumentCreationSession + 32);
    uint64_t v62 = v103;
  }
  else
  {
    char v74 = v59;
  }
  swift_bridgeObjectRelease();

  unint64_t v123 = v44;
  uint64_t v75 = *(uint64_t (**)(char *))((char *)&p_info[490]->flags + (void)v62);
  uint64_t v120 = (__objc2_class_ro *)v44;
  swift_retain();
  swift_retain();
  uint64_t v76 = (uint64_t)v107;
  LOBYTE(v75) = v75(v107);
  swift_release();
  uint64_t v78 = v108;
  uint64_t v77 = (uint64_t)v109;
  uint64_t v80 = (uint64_t)v116;
  uint64_t v79 = (uint64_t)v117;
  unint64_t v81 = (unint64_t)v121;
  if (v75)
  {
    sub_1000A5858(v76, (uint64_t)v109, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    uint64_t v83 = v77;
    uint64_t v84 = 0;
  }
  else
  {
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v64 + 56);
    uint64_t v83 = (uint64_t)v109;
    uint64_t v84 = 1;
  }
  uint64_t v122 = v82;
  v82(v83, v84, 1, v78);
  uint64_t v85 = v115;
  sub_1000CBC00(v77, v115, &qword_10070E838);
  if (v119(v85, 1, v78) != 1)
  {
    swift_release();
    sub_1000CBBA4(v85, &qword_10070E838);
    goto LABEL_41;
  }
  sub_1000CBBA4(v85, &qword_10070E838);
  uint64_t v86 = *(void *)(v81 + 16);
  uint64_t v79 = v76;
  if (v86)
  {
    uint64_t v76 = v113;
    sub_1000A5858(v81+ ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80))+ *(void *)(v64 + 72) * (v86 - 1), v113, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v87 = 0;
  }
  else
  {
    uint64_t v87 = 1;
    uint64_t v76 = v113;
  }
  v122(v76, v87, 1, v78);
  swift_release();
  unsigned int v88 = v119(v76, 1, v78);
  sub_1000CBBA4(v76, &qword_10070E838);
  if (v88 == 1)
  {
    uint64_t v76 = v79;
    uint64_t v79 = (uint64_t)v117;
    goto LABEL_41;
  }
  if (!*(void *)(v81 + 16))
  {
    __break(1u);
    goto LABEL_52;
  }
  uint64_t v76 = v79;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v79 = (uint64_t)v117;
  if ((result & 1) == 0)
  {
LABEL_52:
    uint64_t result = sub_10050DF68(v81);
    unint64_t v81 = result;
  }
  unint64_t v106 = v74;
  uint64_t v89 = *(void *)(v81 + 16);
  if (!v89)
  {
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v90 = v89 - 1;
  uint64_t v91 = v118;
  uint64_t v92 = v81
      + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80))
      + *(void *)(v118 + 72) * (v89 - 1);
  unint64_t v93 = v81;
  uint64_t v94 = v110;
  sub_1000BC744(v92, v110, type metadata accessor for DOCBrowserHistoryItem);
  *(void *)(v93 + 16) = v90;
  uint64_t v64 = v91;
  uint64_t v95 = v94;
  unint64_t v81 = v93;
  uint64_t v96 = v111;
  sub_1000BC744(v95, v111, type metadata accessor for DOCBrowserHistoryItem);
  sub_1000CBBA4(v77, &qword_10070E838);
  v122(v96, 0, 1, v78);
  sub_1000CBE0C(v96, v77, &qword_10070E838);
  uint64_t v80 = (uint64_t)v116;
  char v74 = v106;
LABEL_41:
  sub_1000CBC00(v77, v80, &qword_10070E838);
  if (v119(v80, 1, v78) != 1)
  {
    swift_release();
    sub_1000CBBA4(v80, &qword_10070E838);
    sub_1000A5770(v76, type metadata accessor for DOCBrowserHistoryItem);
LABEL_50:
    uint64_t v99 = v114;
    sub_10008C318(v77, v114, &qword_10070E838);
    uint64_t v100 = v105;
    swift_bridgeObjectRelease();
    *(void *)(v99 + v100) = v81;
    uint64_t v101 = v123;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)&v74[v99] = v101;
    return result;
  }
  sub_1000CBBA4(v80, &qword_10070E838);
  if (v120->ivar_lyt)
  {
    uint64_t v97 = (uint64_t)v104;
    sub_1000A5858((uint64_t)v120 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80)), (uint64_t)v104, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v98 = 0;
  }
  else
  {
    uint64_t v98 = 1;
    uint64_t v97 = (uint64_t)v104;
  }
  v122(v97, v98, 1, v78);
  swift_release();
  if (v119(v97, 1, v78) == 1)
  {
    sub_1000A5770(v76, type metadata accessor for DOCBrowserHistoryItem);
    sub_1000CBBA4(v97, &qword_10070E838);
    goto LABEL_50;
  }
  uint64_t result = sub_1000CBBA4(v97, &qword_10070E838);
  if (v123[2])
  {
    sub_1000A5858((uint64_t)v123 + ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80)), v79, type metadata accessor for DOCBrowserHistoryItem);
    sub_1005169B4(0, 1);
    sub_1000CBBA4(v77, &qword_10070E838);
    sub_1000A5770(v76, type metadata accessor for DOCBrowserHistoryItem);
    v122(v79, 0, 1, v78);
    sub_1000CBE0C(v79, v77, &qword_10070E838);
    goto LABEL_50;
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_1004F9F84@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DOCBrowserHistoryItem(0);
  id v7 = [*(id *)(a1 + *(int *)(v6 + 20)) representedTag];
  if (!v7) {
    goto LABEL_4;
  }
  uint64_t v8 = v7;
  sub_10009E6C4(0, &qword_10070E2D0);
  id v9 = a2;
  id v10 = v8;
  char v11 = static NSObject.== infix(_:_:)();

  if (v11)
  {
    uint64_t v12 = 1;
  }
  else
  {
LABEL_4:
    sub_1000A5858(a1, a3, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v12 = 0;
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v13(a3, v12, 1, v6);
}

void *sub_1004FA198@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  id v9 = [*(id *)(a1 + v8[5]) representedTag];
  if (!v9) {
    goto LABEL_5;
  }
  id v10 = v9;
  sub_10009E6C4(0, &qword_10070E2D0);
  id v11 = a2;
  id v12 = v10;
  char v13 = static NSObject.== infix(_:_:)();

  if (v13)
  {
    sub_1000A5858(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
    uint64_t v14 = v8[5];
    uint64_t v15 = *(void **)(a4 + v14);
    id v16 = v15;
    uint64_t result = sub_1000CC4E4(v15, 0, (uint64_t)a3);
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v18 = result;

    *(void *)(a4 + v14) = v18;
    uint64_t v19 = v8[7];
    uint64_t v20 = *(void **)(a4 + v19);
    id v21 = v20;
    uint64_t v22 = sub_1000CC4E4(v20, 0, (uint64_t)a3);

    *(void *)(a4 + v19) = v22;
    id v23 = v22;

    uint64_t v24 = v8[6];
    unint64_t v25 = *(void *)(a4 + v24);
    swift_bridgeObjectRetain();

    id v26 = a3;
    uint64_t v27 = sub_1000053B0(v25, 0, (uint64_t)a3);
    swift_bridgeObjectRelease_n();

    *(void *)(a4 + v24) = v27;
  }
  else
  {
LABEL_5:
    sub_1000A5858(a1, a4, type metadata accessor for DOCBrowserHistoryItem);
  }
  uint64_t v28 = *(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v8 - 1) + 56);

  return (void *)v28(a4, 0, 1, v8);
}

uint64_t *sub_1004FA4A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    id v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000CBE70(&qword_10070E838);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v33 = v8;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v7[5];
      char v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v14 = v7[7];
      uint64_t v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v7[8];
      uint64_t v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v7[9];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 24);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, _OWORD *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = v20[1];
        *(_OWORD *)uint64_t v19 = *v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v33 + 56))(a1, 0, 1, v7);
    }
    uint64_t v26 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
    *(uint64_t *)((char *)a1 + *(int *)(v26 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v26 + 20));
    *(uint64_t *)((char *)a1 + *(int *)(v26 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v26 + 24));
    uint64_t v27 = *(int *)(a3 + 20);
    uint64_t v28 = (uint64_t *)((char *)a1 + v27);
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = *(uint64_t *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30)
    {
      uint64_t v31 = *((void *)v29 + 1);
      *uint64_t v28 = v30;
      v28[1] = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    }
  }
  return a1;
}

char *sub_1004FA754(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v51 = a3;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v6[5];
      char v13 = *(void **)&a2[v12];
      *(void *)&a1[v12] = v13;
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v14 = v6[7];
      uint64_t v15 = *(void **)&a2[v14];
      *(void *)&a1[v14] = v15;
      uint64_t v16 = v6[8];
      uint64_t v17 = *(void **)&a2[v16];
      *(void *)&a1[v16] = v17;
      uint64_t v18 = v6[9];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = *(void *)&a2[v18 + 24];
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v43 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v43;
      }
      a3 = v51;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_13;
    }
LABEL_7:
    uint64_t v25 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  if (v10)
  {
    sub_1000A5770((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  uint64_t v26 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
  uint64_t v27 = v6[5];
  uint64_t v28 = *(void **)&a2[v27];
  uint64_t v29 = *(void **)&a1[v27];
  *(void *)&a1[v27] = v28;
  id v30 = v28;

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v6[7];
  uint64_t v32 = *(void **)&a1[v31];
  uint64_t v33 = *(void **)&a2[v31];
  *(void *)&a1[v31] = v33;
  id v34 = v33;

  uint64_t v35 = v6[8];
  uint64_t v36 = *(void **)&a2[v35];
  uint64_t v37 = *(void **)&a1[v35];
  *(void *)&a1[v35] = v36;
  id v38 = v36;

  uint64_t v39 = v6[9];
  uint64_t v40 = (uint64_t)&a1[v39];
  uint64_t v41 = (uint64_t *)&a2[v39];
  uint64_t v42 = *(void *)&a2[v39 + 24];
  if (*(void *)&a1[v39 + 24])
  {
    if (v42)
    {
      sub_1002CEEC4((uint64_t *)v40, v41);
      goto LABEL_13;
    }
    sub_10009B1B8(v40);
  }
  else if (v42)
  {
    *(void *)(v40 + 24) = v42;
    (**(void (***)(uint64_t, char *))(v42 - 8))(v40, (char *)v41);
    goto LABEL_13;
  }
  long long v50 = *((_OWORD *)v41 + 1);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v50;
LABEL_13:
  uint64_t v44 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v44 + 20)] = *(void *)&a2[*(int *)(v44 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v44 + 24)] = *(void *)&a2[*(int *)(v44 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(int *)(a3 + 20);
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = *(void *)&a2[v45];
  if (!*(void *)&a1[v45])
  {
    if (v48)
    {
      *(void *)uint64_t v46 = v48;
      *((void *)v46 + 1) = *((void *)v47 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_19:
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    return a1;
  }
  if (!v48)
  {
    sub_1004FAB60((uint64_t)&a1[v45]);
    goto LABEL_19;
  }
  *(void *)uint64_t v46 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v46 + 1) = *((void *)v47 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004FAB60(uint64_t a1)
{
  return a1;
}

char *sub_1004FAB94(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v10 = v6[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v14 + 20)] = *(void *)&a2[*(int *)(v14 + 20)];
  *(void *)&a1[*(int *)(v14 + 24)] = *(void *)&a2[*(int *)(v14 + 24)];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_1004FAD3C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      uint64_t v12 = v6[9];
      long long v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)long long v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_1000A5770((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
LABEL_6:
    uint64_t v16 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v22 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
  uint64_t v23 = v6[5];
  id v24 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v6[7];
  uint64_t v26 = *(void **)&a1[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];

  uint64_t v27 = v6[8];
  uint64_t v28 = *(void **)&a1[v27];
  *(void *)&a1[v27] = *(void *)&a2[v27];

  uint64_t v29 = v6[9];
  id v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (*(void *)&a1[v29 + 24]) {
    sub_10009B1B8((uint64_t)v30);
  }
  long long v32 = *((_OWORD *)v31 + 1);
  *(_OWORD *)id v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v32;
LABEL_7:
  uint64_t v17 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  *(void *)&a1[*(int *)(v17 + 20)] = *(void *)&a2[*(int *)(v17 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&a2[*(int *)(v17 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (uint64_t)&a1[v18];
  uint64_t v20 = &a2[v18];
  if (!*(void *)&a1[v18])
  {
LABEL_11:
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    return a1;
  }
  if (!*(void *)v20)
  {
    sub_1004FAB60(v19);
    goto LABEL_11;
  }
  *(void *)uint64_t v19 = *(void *)v20;
  swift_bridgeObjectRelease();
  *(void *)(v19 + 8) = *((void *)v20 + 1);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004FB030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1004FB0FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for _DOCBrowserHistoryDataSourceBase.ItemSet(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for _DOCBrowserHistoryDataSourceBase.RefreshContext()
{
  return &type metadata for _DOCBrowserHistoryDataSourceBase.RefreshContext;
}

uint64_t *sub_1004FB1D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_1000CBE70(&qword_10070E838);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v28 = v8;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v7[5];
      long long v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v14 = v7[7];
      long long v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v7[8];
      uint64_t v17 = *(void **)((char *)a2 + v16);
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v7[9];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (_OWORD *)((char *)a2 + v18);
      uint64_t v21 = *(uint64_t *)((char *)a2 + v18 + 24);
      id v22 = v13;
      swift_bridgeObjectRetain();
      id v23 = v15;
      id v24 = v17;
      if (v21)
      {
        *((void *)v19 + 3) = v21;
        (**(void (***)(char *, _OWORD *, uint64_t))(v21 - 8))(v19, v20, v21);
      }
      else
      {
        long long v25 = v20[1];
        *(_OWORD *)uint64_t v19 = *v20;
        *((_OWORD *)v19 + 1) = v25;
      }
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v28 + 56))(a1, 0, 1, v7);
    }
    uint64_t v26 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v26) = *(uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1004FB434(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v26 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(a1, a2, v26);
      uint64_t v27 = v6[5];
      uint64_t v28 = *(void **)&a2[v27];
      uint64_t v29 = *(void **)&a1[v27];
      *(void *)&a1[v27] = v28;
      id v30 = v28;

      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = v6[7];
      long long v32 = *(void **)&a1[v31];
      uint64_t v33 = *(void **)&a2[v31];
      *(void *)&a1[v31] = v33;
      id v34 = v33;

      uint64_t v35 = v6[8];
      uint64_t v36 = *(void **)&a2[v35];
      uint64_t v37 = *(void **)&a1[v35];
      *(void *)&a1[v35] = v36;
      id v38 = v36;

      uint64_t v39 = v6[9];
      uint64_t v40 = (uint64_t)&a1[v39];
      uint64_t v41 = (uint64_t *)&a2[v39];
      uint64_t v42 = *(void *)&a2[v39 + 24];
      if (*(void *)&a1[v39 + 24])
      {
        if (v42)
        {
          sub_1002CEEC4((uint64_t *)v40, v41);
          goto LABEL_13;
        }
        sub_10009B1B8(v40);
      }
      else if (v42)
      {
        *(void *)(v40 + 24) = v42;
        (**(void (***)(uint64_t, char *))(v42 - 8))(v40, (char *)v41);
        goto LABEL_13;
      }
      long long v45 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *(_OWORD *)(v40 + 16) = v45;
      goto LABEL_13;
    }
    sub_1000A5770((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_7;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v25 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v46 = a3;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = v6[5];
  long long v13 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v13;
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v14 = v6[7];
  long long v15 = *(void **)&a2[v14];
  *(void *)&a1[v14] = v15;
  uint64_t v16 = v6[8];
  uint64_t v17 = *(void **)&a2[v16];
  *(void *)&a1[v16] = v17;
  uint64_t v18 = v6[9];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void *)&a2[v18 + 24];
  id v22 = v13;
  swift_bridgeObjectRetain();
  id v23 = v15;
  id v24 = v17;
  if (v21)
  {
    *((void *)v19 + 3) = v21;
    (**(void (***)(char *, char *, uint64_t))(v21 - 8))(v19, v20, v21);
  }
  else
  {
    long long v43 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v43;
  }
  a3 = v46;
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_13:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1004FB7BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
    uint64_t v10 = v6[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    long long v13 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v13;
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  return a1;
}

char *sub_1004FB94C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
      uint64_t v12 = v6[9];
      long long v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      long long v15 = *((_OWORD *)v14 + 1);
      *(_OWORD *)long long v13 = *(_OWORD *)v14;
      *((_OWORD *)v13 + 1) = v15;
      (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
LABEL_6:
    uint64_t v16 = sub_1000CBE70(&qword_10070E838);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  if (v10)
  {
    sub_1000A5770((uint64_t)a1, type metadata accessor for DOCBrowserHistoryItem);
    goto LABEL_6;
  }
  uint64_t v18 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(a1, a2, v18);
  uint64_t v19 = v6[5];
  uint64_t v20 = *(void **)&a1[v19];
  *(void *)&a1[v19] = *(void *)&a2[v19];

  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRelease();
  uint64_t v21 = v6[7];
  id v22 = *(void **)&a1[v21];
  *(void *)&a1[v21] = *(void *)&a2[v21];

  uint64_t v23 = v6[8];
  id v24 = *(void **)&a1[v23];
  *(void *)&a1[v23] = *(void *)&a2[v23];

  uint64_t v25 = v6[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  if (*(void *)&a1[v25 + 24]) {
    sub_10009B1B8((uint64_t)v26);
  }
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004FBBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_10070E838);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1004FBCB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1000CBE70(&qword_10070E838);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1004FBD70(uint64_t a1, uint64_t a2)
{
  sub_1004FE250(a1, (uint64_t)v6);
  uint64_t v3 = v6[0];
  uint64_t result = sub_1000CBBA4((uint64_t)v6, &qword_10071A160);
  if (v3)
  {
    sub_1000CE280(a2, (uint64_t)v5);
    sub_1000CE36C((uint64_t)v6, (uint64_t)v5);
    return sub_1000CE1FC((uint64_t)v6);
  }
  return result;
}

uint64_t sub_1004FBDE4(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, NSObject *a7)
{
  uint64_t v10 = a4 + 16;
  uint64_t v11 = a6 + 16;
  sub_1000CE280(a5, (uint64_t)v19);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = v10;
  long long v13 = v19[1];
  *(_OWORD *)(v12 + 32) = v19[0];
  *(_OWORD *)(v12 + 48) = v13;
  *(_OWORD *)(v12 + 64) = v19[2];
  *(void *)(v12 + 80) = v20;
  *(void *)(v12 + 88) = v11;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10050051C;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1000879B8;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100087990;
  void aBlock[3] = &unk_1006B3870;
  long long v15 = _Block_copy(aBlock);
  id v16 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(a3, v15);
  _Block_release(v15);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (a3)
  {
    __break(1u);
  }
  else
  {
    dispatch_group_leave(a7);
    return swift_release();
  }
  return result;
}

void sub_1004FBF78(void *a1, uint64_t a2, uint64_t a3, void **a4)
{
  if (a1)
  {
    sub_1000CE280(a3, (uint64_t)v17);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v5 = a1;
    uint64_t v6 = (void *)DOCNode.representedLocation.getter();
    sub_1004FC2BC(v6, v16);
    swift_beginAccess();
    sub_1004F2650((uint64_t)v16, (uint64_t)v17);
    swift_endAccess();
  }
  else
  {
    sub_1000CE280(a3, (uint64_t)v17);
    swift_beginAccess();
    uint64_t v8 = *a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = v8;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v8 = sub_100190734(0, v8[2] + 1, 1, v8);
      *a4 = v8;
    }
    unint64_t v11 = v8[2];
    unint64_t v10 = v8[3];
    if (v11 >= v10 >> 1)
    {
      uint64_t v8 = sub_100190734((void *)(v10 > 1), v11 + 1, 1, v8);
      *a4 = v8;
    }
    v8[2] = v11 + 1;
    uint64_t v12 = &v8[7 * v11];
    long long v13 = v17[0];
    long long v14 = v17[1];
    long long v15 = v17[2];
    v12[10] = v18;
    *((_OWORD *)v12 + 3) = v14;
    *((_OWORD *)v12 + 4) = v15;
    *((_OWORD *)v12 + 2) = v13;
    swift_endAccess();
  }
}

uint64_t sub_1004FC0E8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  sub_1000CE280(a1, (uint64_t)v24);
  swift_beginAccess();
  uint64_t v8 = *a3;
  if (*(void *)(*a3 + 16) && (unint64_t v9 = sub_10017C394(a2), (v10 & 1) != 0))
  {
    sub_1000CE280(*(void *)(v8 + 56) + 56 * v9, (uint64_t)v22);
  }
  else
  {
    uint64_t v23 = 0;
    memset(v22, 0, sizeof(v22));
  }
  swift_endAccess();
  swift_beginAccess();
  sub_1004F2650((uint64_t)v22, (uint64_t)v24);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v11 = *a4;
  swift_bridgeObjectRetain();
  char v12 = sub_1000D334C(a1, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
    sub_1000CE280(a2, (uint64_t)v24);
    swift_beginAccess();
    long long v14 = (void *)*a4;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a4 = (uint64_t)v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      long long v14 = sub_100190734(0, v14[2] + 1, 1, v14);
      *a4 = (uint64_t)v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      long long v14 = sub_100190734((void *)(v16 > 1), v17 + 1, 1, v14);
      *a4 = (uint64_t)v14;
    }
    _OWORD v14[2] = v17 + 1;
    uint64_t v18 = &v14[7 * v17];
    long long v19 = v24[0];
    long long v20 = v24[1];
    long long v21 = v24[2];
    v18[10] = v25;
    *((_OWORD *)v18 + 3) = v20;
    *((_OWORD *)v18 + 4) = v21;
    *((_OWORD *)v18 + 2) = v19;
    return swift_endAccess();
  }
  return result;
}

void sub_1004FC2B4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
}

void sub_1004FC2BC(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  id v3 = a1;
  id v4 = [v3 fileProviderItem];
  if (v4)
  {
    id v5 = v4;
    a2[4] = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    a2[5] = sub_10050039C();
    a2[6] = sub_1005003F0();
    a2[1] = v3;
    a2[2] = v5;
  }
  else
  {
    id v6 = [v3 representedTag];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = v3;
      id v9 = (id)FPTagFromDOCTag();
      a2[4] = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      a2[5] = sub_1005002F4();
      a2[6] = sub_100500348();

      a2[1] = v8;
      a2[2] = v9;
    }
    else
    {
      a2[4] = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      a2[5] = sub_1000CE0C8();
      a2[6] = sub_1000CE11C();
      a2[1] = v3;
    }
  }
}

uint64_t sub_1004FC3B8(void *a1, void *a2)
{
  char v12 = a1;
  id v3 = a1;
  id v4 = [v3 fileProviderItem];
  if (v4)
  {
    id v5 = v4;
    long long v15 = &type metadata for DOCIdentityHashableLocation.FPItemImpl;
    unint64_t v16 = sub_10050039C();
    unint64_t v17 = sub_1005003F0();
    id v13 = v3;
    id v14 = v5;
  }
  else
  {
    id v6 = [v3 representedTag];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = v3;
      id v9 = (id)FPTagFromDOCTag();
      long long v15 = &type metadata for DOCIdentityHashableLocation.FPTagImpl;
      unint64_t v16 = sub_1005002F4();
      unint64_t v17 = sub_100500348();

      id v13 = v8;
      id v14 = v9;
    }
    else
    {
      long long v15 = &type metadata for DOCIdentityHashableLocation.OtherImpl;
      unint64_t v16 = sub_1000CE0C8();
      unint64_t v17 = sub_1000CE11C();
      id v13 = v3;
    }
  }
  sub_1004FC2BC(a2, v11);
  return sub_1004F2650((uint64_t)v11, (uint64_t)&v12);
}

void sub_1004FC4E8()
{
  id v1 = *(id *)(v0 + 8);
  NSObject.hash(into:)();
}

uint64_t sub_1004FC544()
{
  return sub_1004FFA64(*(void **)(v0 + 8));
}

Swift::Int sub_1004FC550()
{
  id v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

Swift::Int sub_1004FC5A0()
{
  id v1 = *(void **)(v0 + 8);
  Hasher.init(_seed:)();
  id v2 = v1;
  NSObject.hash(into:)();

  return Hasher._finalize()();
}

uint64_t sub_1004FC5EC()
{
  id v1 = [*(id *)(v0 + 8) label];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 979853652;
}

uint64_t sub_1004FC670()
{
  if (static NSObject.== infix(_:_:)()) {
    return static NSObject.== infix(_:_:)() & 1;
  }
  else {
    return 0;
  }
}

unint64_t sub_1004FC6E8(void *a1)
{
  _StringGuts.grow(_:)(30);
  swift_bridgeObjectRelease();
  id v2 = [a1 displayName];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v6 = v5;
  }
  else
  {
    id v6 = (void *)0xE200000000000000;
    uint64_t v4 = 16191;
  }
  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return 0xD00000000000001CLL;
}

Swift::Int sub_1004FC7A8(void *a1)
{
  Hasher.init(_seed:)();
  id v2 = [a1 sourceIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  swift_bridgeObjectRelease();
  id v3 = [a1 displayName];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1004FC89C()
{
  return sub_1004FC7A8(*v0);
}

Swift::Int sub_1004FC8A4()
{
  id v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = [v1 sourceIdentifier];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  swift_bridgeObjectRelease();
  id v3 = [v1 displayName];
  if (v3)
  {
    uint64_t v4 = v3;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  return Hasher._finalize()();
}

unint64_t sub_1004FC994()
{
  return sub_1004FC6E8(*v0);
}

uint64_t sub_1004FC99C()
{
  return static NSObject.== infix(_:_:)() & 1;
}

Swift::Int sub_1004FC9F0()
{
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(v0 + 8), *(void *)(v0 + 32));
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

uint64_t sub_1004FCA58()
{
  sub_1000A6B78((void *)(v0 + 8), *(void *)(v0 + 32));
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1004FCAA8()
{
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(v0 + 8), *(void *)(v0 + 32));
  dispatch thunk of Hashable.hash(into:)();
  return Hasher._finalize()();
}

BOOL sub_1004FCB0C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(a1 + 8), *(void *)(a1 + 32));
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(a2 + 8), *(void *)(a2 + 32));
  dispatch thunk of Hashable.hash(into:)();
  return v4 == Hasher._finalize()();
}

uint64_t sub_1004FCBC4()
{
  sub_1000A6B78((void *)(v0 + 8), *(void *)(v0 + 32));
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1004FCC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10017BB10(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100355A8C();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for URL();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1000BC744(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario);
    sub_1003538DC(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for DOCDebugUIScenarioManager.LoadedScenario();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1004FCDD4@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  Swift::Int v4 = v3;
  char v7 = a2 & 1;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10017BBE4(a1, v7);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v21 = *v4;
    *Swift::Int v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100355CC4();
      uint64_t v11 = v21;
    }

    uint64_t v12 = *(void *)(v11 + 56);
    uint64_t v13 = type metadata accessor for RestorableSettings(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1000BC744(v12 + *(void *)(v20 + 72) * v8, a3, type metadata accessor for RestorableSettings);
    sub_100353C24(v8, v11);
    *Swift::Int v4 = v11;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a3;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for RestorableSettings(0);
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a3;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1004FCF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10017BCC0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100355F48();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t updated = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
    uint64_t v20 = *(void *)(updated - 8);
    sub_1000BC744(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo);
    sub_100353EB4(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = updated;
  }
  else
  {
    uint64_t v18 = type metadata accessor for DOCSharedTestableProgressOperationProvider.UpdateHandlerInfo();
    id v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

double sub_1004FD144@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  Swift::Int v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100042F50(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *Swift::Int v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10035860C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1000A54B0((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1003544F0(v8, v11);
    *Swift::Int v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1004FD248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_10017F0CC(v5, v6);
  LOBYTE(v6) = v8;
  swift_bridgeObjectRelease();
  if (v6)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v2;
    uint64_t v20 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100358FC4();
      uint64_t v10 = v20;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)(v10 + 56);
    uint64_t v12 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v19 = *(void *)(v12 - 8);
    sub_1000BC744(v11 + *(void *)(v19 + 72) * v7, a2, type metadata accessor for ScrollPositionInfo.ItemOffset);
    sub_1003546C8(v7, v10);
    *id v3 = v10;
    swift_bridgeObjectRelease();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    uint64_t v14 = a2;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = type metadata accessor for ScrollPositionInfo.ItemOffset(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a2;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_1004FD3FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10017C424(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100359BC8();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v18 = *(void *)(v11 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a2, v10 + *(void *)(v18 + 72) * v6, v11);
    sub_100354C98(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

double sub_1004FD598@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10017C6D4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v11 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10035B2DC();
      uint64_t v9 = v11;
    }

    sub_1001146DC((long long *)(*(void *)(v9 + 56) + 40 * v6), a2);
    sub_10035521C(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_1004FD698@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10017C394(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v13 = *v3;
    *id v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10035B4A8();
      uint64_t v9 = v13;
    }
    sub_1000CE1FC(*(void *)(v9 + 48) + 56 * v6);
    uint64_t v10 = *(void *)(v9 + 56) + 56 * v6;
    long long v11 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v10;
    *(_OWORD *)(a2 + 16) = v11;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v10 + 32);
    *(void *)(a2 + 48) = *(void *)(v10 + 48);
    sub_1003553E4(v6, v9);
    *id v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a2 + 48) = 0;
    double result = 0.0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

Swift::Int sub_1004FD7B0(uint64_t a1, uint64_t a2)
{
  return sub_1004FD810(a1, a2, (uint64_t *)&unk_10071A210, (unint64_t *)&unk_100705CD0, (uint64_t)UICollectionViewCell_ptr, (void (*)(unint64_t))sub_1000F0190);
}

Swift::Int sub_1004FD7E0(uint64_t a1, uint64_t a2)
{
  return sub_1004FD810(a1, a2, &qword_1007177C0, (unint64_t *)&unk_100705C20, (uint64_t)FINode_ptr, (void (*)(unint64_t))sub_1000F04AC);
}

Swift::Int sub_1004FD810(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  if (a2)
  {
    sub_1000CBE70(a3);
    uint64_t v8 = static _SetStorage.convert(_:capacity:)();
    uint64_t v21 = v8;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_10009E6C4(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v8 = v21;
        unint64_t v15 = *(void *)(v21 + 16);
        if (*(void *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          uint64_t v8 = v21;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
        uint64_t v10 = v8 + 56;
        uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v13 == v17;
            if (v13 == v17) {
              unint64_t v13 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          unint64_t v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(void *)(*(void *)(v8 + 48) + 8 * v14) = v20;
        ++*(void *)(v8 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v8;
}

Swift::Int sub_1004FDA14(uint64_t a1, uint64_t a2)
{
  return sub_1004FD810(a1, a2, &qword_10071A230, (unint64_t *)&qword_1007069C0, (uint64_t)FPItem_ptr, (void (*)(unint64_t))sub_1000F04B8);
}

Swift::Int sub_1004FDA44(uint64_t a1, uint64_t a2)
{
  return sub_1004FD810(a1, a2, (uint64_t *)&unk_100705CC0, &qword_10070BDA0, (uint64_t)UIOpenURLContext_ptr, (void (*)(unint64_t))sub_1000F0770);
}

unint64_t sub_1004FDA78(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

uint64_t sub_1004FDAFC(void *a1)
{
  id v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_1004FE870(v5, (uint64_t)v6, (uint64_t *)&unk_100705CC0, &qword_10070BDA0, (uint64_t)UIOpenURLContext_ptr, (void (*)(unint64_t))sub_1000F0770);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  sub_10009E6C4(0, &qword_10070BDA0);
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *id v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000F3ADC();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_1004FF0C4(v12);
  *id v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1004FDD00()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v3 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = v3 & ~v4;
  if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      do
      {
        unint64_t v5 = (v5 + 1) & v12;
        if (((*(void *)(v2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v15 = v14;
        if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
          goto LABEL_16;
        }
        char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v18 & 1) == 0);
    }
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v1;
  uint64_t v23 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000F3278();
    uint64_t v21 = v23;
  }
  uint64_t v19 = *(void *)(*(void *)(v21 + 48) + 8 * v5);
  sub_1004FEEE0(v5);
  *id v1 = v23;
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1004FDF14(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v4 < 0) {
      uint64_t v5 = *v1;
    }
    else {
      uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v6 = a1;
    char v7 = __CocoaSet.contains(_:)();

    if (v7)
    {
      uint64_t v8 = sub_1004FE870(v5, (uint64_t)v6, &qword_1007177C0, (unint64_t *)&unk_100705C20, (uint64_t)FINode_ptr, (void (*)(unint64_t))sub_1000F04AC);
      swift_bridgeObjectRelease();
      return v8;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v9 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v10 = NSObject._rawHashValue(seed:)(v9);
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    goto LABEL_15;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_100705C20);
  id v13 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    uint64_t v15 = ~v11;
    do
    {
      unint64_t v12 = (v12 + 1) & v15;
      if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_15;
      }
      id v16 = *(id *)(*(void *)(v4 + 48) + 8 * v12);
      char v17 = static NSObject.== infix(_:_:)();
    }
    while ((v17 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v2;
  uint64_t v21 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000F3790();
    uint64_t v19 = v21;
  }
  uint64_t v8 = *(void *)(*(void *)(v19 + 48) + 8 * v12);
  sub_1004FF0C4(v12);
  *uint64_t v2 = v21;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1004FE118(char a1)
{
  Swift::UInt v2 = a1 & 1;
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v2);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 2;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if ((((v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 2;
      }
    }
    while ((((v2 == 0) ^ *(unsigned __int8 *)(v7 + v6)) & 1) == 0);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  *id v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000F379C();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1004FF268(v6);
  *id v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1004FE250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  sub_1000A6B78((void *)(a1 + 8), *(void *)(a1 + 32));
  swift_bridgeObjectRetain();
  dispatch thunk of Hashable.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    char v17 = v2;
    uint64_t v9 = ~v7;
    while (1)
    {
      sub_1000CE280(*(void *)(v5 + 48) + 56 * v8, (uint64_t)v18);
      Hasher.init(_seed:)();
      sub_1000A6B78(v19, v19[3]);
      dispatch thunk of Hashable.hash(into:)();
      Swift::Int v10 = Hasher._finalize()();
      Hasher.init(_seed:)();
      sub_1000A6B78((void *)(a1 + 8), *(void *)(a1 + 32));
      dispatch thunk of Hashable.hash(into:)();
      Swift::Int v11 = Hasher._finalize()();
      sub_1000CE1FC((uint64_t)v18);
      if (v10 == v11) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v17;
    uint64_t v20 = *v17;
    uint64_t *v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1000F3F2C();
      uint64_t v14 = v20;
    }
    uint64_t v15 = *(void *)(v14 + 48) + 56 * v8;
    long long v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)a2 = *(_OWORD *)v15;
    *(_OWORD *)(a2 + 16) = v16;
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(v15 + 32);
    *(void *)(a2 + 48) = *(void *)(v15 + 48);
    sub_1004FF414(v8);
    uint64_t *v17 = v20;
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *(void *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_1004FE48C(unsigned __int8 a1)
{
  Swift::UInt v2 = v1;
  uint64_t v4 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 6;
  }
  uint64_t v8 = ~v6;
  uint64_t v9 = a1;
  while (2)
  {
    unint64_t v10 = 0xE300000000000000;
    uint64_t v11 = 7368564;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        uint64_t v11 = 0x796C746E65636572;
        unint64_t v10 = 0xEC00000064657355;
        break;
      case 2:
        uint64_t v11 = 0x6E6F697461636F6CLL;
        goto LABEL_7;
      case 3:
        uint64_t v11 = 0x657469726F766166;
LABEL_7:
        unint64_t v10 = 0xE900000000000073;
        break;
      case 4:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x73726576726573;
        break;
      case 5:
        unint64_t v10 = 0xE400000000000000;
        uint64_t v11 = 1936154996;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE300000000000000;
    uint64_t v13 = 7368564;
    switch(v9)
    {
      case 1:
        unint64_t v12 = 0xEC00000064657355;
        if (v11 == 0x796C746E65636572) {
          goto LABEL_19;
        }
        goto LABEL_20;
      case 2:
        uint64_t v14 = 0x6E6F697461636F6CLL;
        goto LABEL_15;
      case 3:
        uint64_t v14 = 0x657469726F766166;
LABEL_15:
        unint64_t v12 = 0xE900000000000073;
        if (v11 != v14) {
          goto LABEL_20;
        }
        goto LABEL_19;
      case 4:
        unint64_t v12 = 0xE700000000000000;
        uint64_t v13 = 0x73726576726573;
        goto LABEL_18;
      case 5:
        unint64_t v12 = 0xE400000000000000;
        if (v11 != 1936154996) {
          goto LABEL_20;
        }
        goto LABEL_19;
      default:
LABEL_18:
        if (v11 != v13) {
          goto LABEL_20;
        }
LABEL_19:
        if (v10 != v12)
        {
LABEL_20:
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            goto LABEL_27;
          }
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_25;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v18 = *v2;
        uint64_t v20 = *v2;
        *Swift::UInt v2 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000F3D98();
          uint64_t v18 = v20;
        }
        uint64_t v16 = *(unsigned __int8 *)(*(void *)(v18 + 48) + v7);
        sub_1004FF7F4(v7);
        *Swift::UInt v2 = v20;
        swift_bridgeObjectRelease();
        return v16;
    }
  }
}

uint64_t sub_1004FE870(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v11 = v6;
  swift_bridgeObjectRelease();
  uint64_t v12 = __CocoaSet.count.getter();
  uint64_t v13 = swift_unknownObjectRetain();
  Swift::Int v14 = sub_1004FD810(v13, v12, a3, a4, a5, a6);
  Swift::Int v26 = v14;
  Swift::Int v15 = *(void *)(v14 + 40);
  swift_retain();
  Swift::Int v16 = NSObject._rawHashValue(seed:)(v15);
  uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
  unint64_t v18 = v16 & ~v17;
  if ((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
  {
    sub_10009E6C4(0, a4);
    id v19 = *(id *)(*(void *)(v14 + 48) + 8 * v18);
    char v20 = static NSObject.== infix(_:_:)();

    if (v20)
    {
LABEL_6:
      swift_release();
      uint64_t v24 = *(void *)(*(void *)(v14 + 48) + 8 * v18);
      sub_1004FF0C4(v18);
      if (static NSObject.== infix(_:_:)())
      {
        *uint64_t v11 = v26;
        return v24;
      }
      __break(1u);
    }
    else
    {
      uint64_t v21 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v21;
        if (((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v18);
        char v23 = static NSObject.== infix(_:_:)();

        if (v23) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1004FEA24(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        uint64_t v12 = *v10;
        unint64_t v11 = v10[1];
        Hasher.init(_seed:)();
        switch(v11)
        {
          case 0uLL:
            Swift::UInt v13 = 0;
            goto LABEL_19;
          case 1uLL:
            Swift::UInt v13 = 1;
            goto LABEL_19;
          case 2uLL:
            Swift::UInt v13 = 2;
            goto LABEL_19;
          case 3uLL:
            Swift::UInt v13 = 3;
            goto LABEL_19;
          case 4uLL:
            Swift::UInt v13 = 4;
            goto LABEL_19;
          case 5uLL:
            Swift::UInt v13 = 5;
            goto LABEL_19;
          case 6uLL:
            Swift::UInt v13 = 6;
            goto LABEL_19;
          case 7uLL:
            Swift::UInt v13 = 7;
            goto LABEL_19;
          case 8uLL:
            Swift::UInt v13 = 8;
            goto LABEL_19;
          case 9uLL:
            Swift::UInt v13 = 9;
            goto LABEL_19;
          case 0xAuLL:
            Swift::UInt v13 = 11;
LABEL_19:
            Hasher._combine(_:)(v13);
            break;
          default:
            Hasher._combine(_:)(0xAuLL);
            swift_bridgeObjectRetain();
            String.hash(into:)();
            break;
        }
        Swift::Int v14 = Hasher._finalize()();
        sub_1000F7EE0(v12, v11);
        unint64_t v15 = v14 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9) {
            goto LABEL_5;
          }
        }
        else if (v15 >= v9)
        {
          goto LABEL_25;
        }
        if (v2 >= (uint64_t)v15)
        {
LABEL_25:
          uint64_t v16 = *(void *)(v3 + 48);
          uint64_t v17 = (_OWORD *)(v16 + 16 * v2);
          unint64_t v18 = (_OWORD *)(v16 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
          {
            _OWORD *v17 = *v18;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
    JUMPOUT(0x1004FECB8);
  }
  *(void *)(v3 + 16) = v21;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

unint64_t sub_1004FECE4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      while (1)
      {
        int v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        if (v10 == 2) {
          break;
        }
        if (v10 == 3)
        {
          Swift::UInt v11 = 2;
          goto LABEL_12;
        }
        if (v10 == 4)
        {
          Swift::UInt v11 = 3;
LABEL_12:
          Hasher._combine(_:)(v11);
          goto LABEL_14;
        }
        Hasher._combine(_:)(0);
        Hasher._combine(_:)(v10 & 1);
LABEL_14:
        unint64_t v12 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_19;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_19:
          uint64_t v13 = *(void *)(v3 + 48);
          Swift::Int v14 = (unsigned char *)(v13 + v2);
          unint64_t v15 = (unsigned char *)(v13 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *Swift::Int v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_22;
        }
      }
      Swift::UInt v11 = 1;
      goto LABEL_12;
    }
LABEL_22:
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1004FEEE0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        int v10 = *(void **)(*(void *)(v3 + 48) + 8 * v6);
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        Hasher.init(_seed:)();
        id v11 = v10;
        String.hash(into:)();
        Swift::Int v12 = Hasher._finalize()();

        swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          unint64_t v15 = (void *)(v14 + 8 * v2);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1004FF0C4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            BOOL v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              void *v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1004FF268(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *Swift::Int v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1004FF414(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    id v22 = v1;
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1000CE280(*(void *)(v3 + 48) + 56 * v6, (uint64_t)v23);
        Hasher.init(_seed:)();
        sub_1000A6B78(v24, v24[3]);
        dispatch thunk of Hashable.hash(into:)();
        Swift::Int v13 = Hasher._finalize()();
        sub_1000CE1FC((uint64_t)v23);
        Swift::Int v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v2 >= v14)
          {
LABEL_12:
            uint64_t v15 = *(void *)(v3 + 48);
            unint64_t v16 = v15 + 56 * v2;
            uint64_t v17 = (long long *)(v15 + 56 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= (unint64_t)v17 + 56))
            {
              long long v10 = *v17;
              long long v11 = v17[1];
              long long v12 = v17[2];
              *(void *)(v16 + 48) = *((void *)v17 + 6);
              *(_OWORD *)(v16 + 16) = v11;
              *(_OWORD *)(v16 + 32) = v12;
              *(_OWORD *)unint64_t v16 = v10;
              int64_t v2 = v6;
            }
          }
        }
        else if (v14 >= v9 || v2 >= v14)
        {
          goto LABEL_12;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
    id v1 = v22;
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *v1;
  uint64_t v19 = *(void *)(*v1 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v18 + 16) = v21;
    ++*(_DWORD *)(v18 + 36);
  }
  return result;
}

unint64_t sub_1004FF64C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        Hasher._combine(_:)(0);
        unint64_t v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          long long v12 = (unsigned char *)(v11 + v2);
          Swift::Int v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *long long v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1004FF7F4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        String.hash(into:)();
        swift_bridgeObjectRelease();
        unint64_t v10 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          long long v12 = (unsigned char *)(v11 + v2);
          Swift::Int v13 = (unsigned char *)(v11 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *long long v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
    JUMPOUT(0x1004FFA4CLL);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_1004FFA64(void *a1)
{
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  id v2 = [a1 itemID];
  id v3 = [v2 description];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v6 = v5;

  v7._uint64_t countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);

  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 0x3A656D616E202CLL;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  id v9 = [a1 displayName];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v12 = v11;

  v13._uint64_t countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  return 0x3A44497066;
}

void sub_1004FFB90(unint64_t a1, void (*a2)(id, id))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v21 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = __CocoaDictionary.makeIterator()() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v21 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
      uint64_t v12 = v9;
      goto LABEL_29;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v21 + 8 * v15);
    uint64_t v12 = v9 + 1;
    if (!v16)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v20) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (!v16)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v20) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v21 + 8 * v12);
        if (!v16)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v20) {
            goto LABEL_32;
          }
          unint64_t v16 = *(void *)(v21 + 8 * v12);
          if (!v16)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v20) {
              goto LABEL_32;
            }
            unint64_t v16 = *(void *)(v21 + 8 * v12);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v20 != v17)
              {
                unint64_t v16 = *(void *)(v21 + 8 * v17++);
                if (v16)
                {
                  uint64_t v12 = v17 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_10026AD14();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
    uint64_t v18 = 8 * v11;
    uint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
    id v13 = *(id *)(*(void *)(v5 + 48) + v18);
    id v14 = v19;
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      a2(v13, v14);

      uint64_t v9 = v12;
      unint64_t v4 = v10;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaDictionary.Iterator.next()())
      {
        sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v22;
        swift_unknownObjectRelease();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v14 = v22;
        swift_unknownObjectRelease();
        uint64_t v12 = v9;
        uint64_t v10 = v4;
        if (v22) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_1004FFE7C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5 < 1) {
      return;
    }
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    return;
  }
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  v6[4] = sub_10006A6D4;
  _OWORD v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_1000666D8;
  v6[3] = &unk_1006B3578;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v1;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v3);
}

uint64_t sub_1004FFF94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004FFFCC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100500004()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100500044()
{
  uint64_t v1 = *(void *)(sub_1000CBE70(&qword_10070E838) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 72) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);

  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (int *)type metadata accessor for DOCBrowserHistoryItem(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);

    swift_bridgeObjectRelease();
    uint64_t v8 = v5 + v6[9];
    if (*(void *)(v8 + 24)) {
      sub_10009B1B8(v8);
    }
  }
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1005001DC(uint64_t a1, uint64_t a2)
{
  return sub_1004FBD70(a1, a2);
}

uint64_t sub_1005001E4()
{
  swift_release();
  sub_10009B1B8((uint64_t)(v0 + 5));
  swift_release();

  return _swift_deallocObject(v0, 104, 7);
}

uint64_t sub_100500244(void *a1, uint64_t a2)
{
  return sub_1004FBDE4(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), v2 + 32, *(void *)(v2 + 88), *(NSObject **)(v2 + 96));
}

uint64_t sub_100500254()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050028C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_1005002EC(void *a1, void *a2)
{
  return sub_1004FC3B8(a1, a2);
}

unint64_t sub_1005002F4()
{
  unint64_t result = qword_10071A138;
  if (!qword_10071A138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A138);
  }
  return result;
}

unint64_t sub_100500348()
{
  unint64_t result = qword_10071A140;
  if (!qword_10071A140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A140);
  }
  return result;
}

unint64_t sub_10050039C()
{
  unint64_t result = qword_10071A148;
  if (!qword_10071A148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A148);
  }
  return result;
}

unint64_t sub_1005003F0()
{
  unint64_t result = qword_10071A150;
  if (!qword_10071A150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A150);
  }
  return result;
}

uint64_t sub_100500444(uint64_t a1, uint64_t a2)
{
  return sub_1004FC0E8(a1, a2, *(uint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24));
}

uint64_t sub_10050044C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10050049C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005004D4()
{
  sub_10009B1B8(v0 + 40);

  return _swift_deallocObject(v0, 96, 7);
}

void sub_10050051C()
{
  sub_1004FBF78(*(void **)(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void ***)(v0 + 88));
}

uint64_t sub_10050052C()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_10050053C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(0);
  unint64_t v2 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  if (v3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    uint64_t *v0 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native) {
      sub_1000F4104();
    }
    sub_1004FF64C(v2);
    uint64_t *v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_10050060C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10050064C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004FA198(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_100500654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004F9F84(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_10050065C()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_10009B1B8(v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100500784()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  return (*(uint64_t (**)(unint64_t))(v0 + 16))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_1005007EC()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_10009B1B8(v6);
  }
  unint64_t v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();

  return _swift_deallocObject(v0, v8 + 16, v2 | 7);
}

uint64_t sub_10050093C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v2 + v6;
  uint64_t v9 = *(void **)(v2 + v7);
  uint64_t v10 = (uint64_t *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_1004F7AF8(a1, a2, v8, v9, v11, v12);
}

uint64_t sub_1005009F8()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_10009B1B8(v6);
  }
  unint64_t v7 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_100500B58()
{
  uint64_t v1 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = (uint64_t *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_1004F7F84(v5, v6, v7, v9, v10);
}

uint64_t sub_100500C00()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100500C40()
{
  return sub_1004F8ACC(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_100500C4C()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_10009B1B8(v6);
  }
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, ((((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_100500D98@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  unint64_t v6 = *(void *)(v2
                 + ((*(void *)(v5 + 64)
                   + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004F828C(a1, v6, a2);
}

uint64_t sub_100500E50()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);

  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);

  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[11];
  if (*(void *)(v6 + 24)) {
    sub_10009B1B8(v6);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100500F7C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

ValueMetadata *type metadata accessor for DOCBrowserHistoryItem.SearchContext()
{
  return &type metadata for DOCBrowserHistoryItem.SearchContext;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.FPItemImpl()
{
  return &type metadata for DOCIdentityHashableLocation.FPItemImpl;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.FPTagImpl()
{
  return &type metadata for DOCIdentityHashableLocation.FPTagImpl;
}

void **assignWithCopy for DOCIdentityHashableLocation(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  uint64_t v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  sub_10050102C(v6, v4);
  return a1;
}

uint64_t *sub_10050102C(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      result[5] = a2[5];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for DOCIdentityHashableLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  sub_10009B1B8(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for DOCIdentityHashableLocation.OtherImpl()
{
  return &type metadata for DOCIdentityHashableLocation.OtherImpl;
}

unint64_t sub_1005012D0()
{
  unint64_t result = qword_10071A240;
  if (!qword_10071A240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A240);
  }
  return result;
}

unint64_t sub_100501328()
{
  unint64_t result = qword_10071A248;
  if (!qword_10071A248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A248);
  }
  return result;
}

id sub_10050142C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = 0;
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation];
  sub_1000951C8((uint64_t)v9);
  sub_1000CBE0C((uint64_t)v9, v3, &qword_100705560);
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCFastLabel.FastLabelLayer();
  [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    [v6 setOpaque:0];
    [v6 setContentsFormat:kCAContentsFormatAutomatic];
  }
  return v5;
}

id sub_100501520(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_traitCollection] = 0;
  uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation];
  sub_1000951C8((uint64_t)v15);
  sub_1000CBE0C((uint64_t)v15, v3, &qword_100705560);
  sub_1000A6B78(a1, a1[3]);
  uint64_t v4 = _bridgeAnythingToObjectiveC<A>(_:)();
  v14.receiver = v1;
  v14.super_class = (Class)type metadata accessor for DOCFastLabel.FastLabelLayer();
  [super initWithLayer:v4];
  swift_unknownObjectRelease();
  id v6 = v5;
  [v6 setOpaque:0];
  [v6 setContentsFormat:kCAContentsFormatAutomatic];

  sub_10009B208((uint64_t)a1, (uint64_t)v13);
  if (swift_dynamicCast())
  {
    uint64_t v7 = v12;
    sub_1000CBE0C((uint64_t)v12+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v10, &qword_100705560);
    sub_100055128(v10, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009AA50);

    sub_10009B1B8((uint64_t)a1);
    uint64_t v8 = (uint64_t)v6
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v6+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v11, &qword_100705560);
    sub_1000CBE0C((uint64_t)v10, v8, &qword_100705560);
    sub_100055128(v11, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
  }
  else
  {
    sub_10009B1B8((uint64_t)a1);
  }
  return v6;
}

id sub_10050172C()
{
  return sub_1005019E0(0, type metadata accessor for DOCFastLabel.FastLabelLayer);
}

id sub_100501888()
{
  sub_1000CBE0C(*(void *)(v0 + OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer)+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v7, &qword_100705560);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v5, &qword_100705560);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, &qword_100705560);
  if (sub_1000CBEB4(v8) == 1) {
    return 0;
  }
  uint64_t v2 = v6;
  sub_1000CBE0C((uint64_t)v5, (uint64_t)v4, &qword_100705560);
  sub_100055128(v7, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009AA50);
  id v1 = v2;
  sub_100055128(v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
  return v1;
}

id sub_1005019C8(uint64_t a1)
{
  return sub_1005019E0(a1, type metadata accessor for DOCFastLabel);
}

id sub_1005019E0(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t destroy for DOCFastLabel.LabelInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 176))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  objc_super v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  id v6 = *(void **)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = (_OWORD *)(a1 + 96);
  uint64_t v8 = (_OWORD *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 128);
  id v10 = v4;
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    uint64_t v12 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v9;
    *(void *)(a1 + 136) = v12;
    swift_retain();
  }
  else
  {
    long long v13 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v13;
    long long v7[2] = v8[2];
  }
  objc_super v14 = (_OWORD *)(a1 + 144);
  int64_t v15 = (_OWORD *)(a2 + 144);
  uint64_t v16 = *(void *)(a2 + 176);
  if (v16)
  {
    *objc_super v14 = *v15;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    uint64_t v17 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = v16;
    *(void *)(a1 + 184) = v17;
    swift_retain();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 160);
    *objc_super v14 = *v15;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t assignWithCopy for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  objc_super v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = *(void **)(a2 + 72);
  uint64_t v8 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = v7;
  id v9 = v7;

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v10 = (_OWORD *)(a1 + 96);
  id v11 = (_OWORD *)(a2 + 96);
  uint64_t v12 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v12)
    {
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      uint64_t v13 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v13;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100501DF4(a1 + 96);
      long long v16 = *(_OWORD *)(a2 + 112);
      long long v15 = *(_OWORD *)(a2 + 128);
      *id v10 = *v11;
      *(_OWORD *)(a1 + 112) = v16;
      *(_OWORD *)(a1 + 128) = v15;
    }
  }
  else if (v12)
  {
    *id v10 = *v11;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    uint64_t v14 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v14;
    swift_retain();
  }
  else
  {
    long long v17 = *v11;
    long long v18 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v18;
    *id v10 = v17;
  }
  uint64_t v19 = (_OWORD *)(a1 + 144);
  int64_t v20 = (_OWORD *)(a2 + 144);
  uint64_t v21 = *(void *)(a2 + 176);
  if (*(void *)(a1 + 176))
  {
    if (v21)
    {
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      uint64_t v22 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v22;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100501DF4(a1 + 144);
      long long v25 = *(_OWORD *)(a2 + 160);
      long long v24 = *(_OWORD *)(a2 + 176);
      *uint64_t v19 = *v20;
      *(_OWORD *)(a1 + 160) = v25;
      *(_OWORD *)(a1 + 176) = v24;
    }
  }
  else if (v21)
  {
    *uint64_t v19 = *v20;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    uint64_t v23 = *(void *)(a2 + 184);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = v23;
    swift_retain();
  }
  else
  {
    long long v26 = *v20;
    long long v27 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v27;
    *uint64_t v19 = v26;
  }
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t sub_100501DF4(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DOCFastLabel.LabelInformation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v5 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 128))
  {
    uint64_t v6 = *(void *)(a2 + 128);
    if (v6)
    {
      long long v7 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v7;
      uint64_t v8 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = v6;
      *(void *)(a1 + 136) = v8;
      swift_release();
      goto LABEL_6;
    }
    sub_100501DF4(a1 + 96);
  }
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_6:
  if (!*(void *)(a1 + 176))
  {
LABEL_10:
    long long v13 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v13;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(a2 + 176);
  if (!v10)
  {
    sub_100501DF4(a1 + 144);
    goto LABEL_10;
  }
  long long v11 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v11;
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = v10;
  *(void *)(a1 + 184) = v12;
  swift_release();
LABEL_11:
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.LabelInformation(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.LabelInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for DOCFastLabel.AttachmentRenderer()
{
  return swift_release();
}

uint64_t initializeWithCopy for DOCFastLabel.AttachmentRenderer(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  return a1;
}

void *assignWithCopy for DOCFastLabel.AttachmentRenderer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v3 = a2[5];
  a1[4] = a2[4];
  a1[5] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DOCFastLabel.AttachmentRenderer(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.AttachmentRenderer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.AttachmentRenderer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1005021B8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10071A340);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_100502218()
{
  uint64_t v0 = (void *)docUILogHandle;
  if (!docUILogHandle)
  {
    DOCInitLogging();
    uint64_t v0 = (void *)docUILogHandle;
  }

  return v0;
}

unint64_t sub_100502260()
{
  unint64_t result = qword_10071A348;
  if (!qword_10071A348)
  {
    sub_10009E6C4(255, &qword_10070E2E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A348);
  }
  return result;
}

uint64_t destroy for DOCFastLabel.TextDrawInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 168))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for DOCFastLabel.TextDrawInformation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = *(void **)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v8 = (_OWORD *)(a1 + 88);
  long long v9 = (_OWORD *)(a2 + 88);
  uint64_t v10 = *(void *)(a2 + 120);
  id v11 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10)
  {
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    uint64_t v12 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = v10;
    *(void *)(a1 + 128) = v12;
    swift_retain();
  }
  else
  {
    long long v13 = v9[1];
    *uint64_t v8 = *v9;
    v8[1] = v13;
    v8[2] = v9[2];
  }
  uint64_t v14 = (_OWORD *)(a1 + 136);
  long long v15 = (_OWORD *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 168);
  if (v16)
  {
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    uint64_t v17 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v16;
    *(void *)(a1 + 176) = v17;
    swift_retain();
  }
  else
  {
    long long v18 = *(_OWORD *)(a2 + 152);
    *uint64_t v14 = *v15;
    *(_OWORD *)(a1 + 152) = v18;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  }
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

void *assignWithCopy for DOCFastLabel.TextDrawInformation(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  long long v4 = (void *)a2[8];
  long long v5 = (void *)a1[8];
  a1[8] = v4;
  id v6 = v4;

  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + 11;
  uint64_t v8 = a2 + 11;
  uint64_t v9 = a2[15];
  if (a1[15])
  {
    if (v9)
    {
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      uint64_t v10 = a2[16];
      a1[15] = a2[15];
      a1[16] = v10;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100501DF4((uint64_t)(a1 + 11));
      long long v13 = *(_OWORD *)(a2 + 13);
      long long v12 = *(_OWORD *)(a2 + 15);
      *uint64_t v7 = *v8;
      *(_OWORD *)(a1 + 13) = v13;
      *(_OWORD *)(a1 + 15) = v12;
    }
  }
  else if (v9)
  {
    *uint64_t v7 = *v8;
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    uint64_t v11 = a2[16];
    a1[15] = a2[15];
    a1[16] = v11;
    swift_retain();
  }
  else
  {
    long long v14 = *v8;
    long long v15 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(a1 + 15) = v15;
    *uint64_t v7 = v14;
  }
  uint64_t v16 = a1 + 17;
  uint64_t v17 = a2 + 17;
  uint64_t v18 = a2[21];
  if (a1[21])
  {
    if (v18)
    {
      a1[17] = a2[17];
      a1[18] = a2[18];
      a1[19] = a2[19];
      a1[20] = a2[20];
      uint64_t v19 = a2[22];
      a1[21] = a2[21];
      a1[22] = v19;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_100501DF4((uint64_t)(a1 + 17));
      long long v22 = *(_OWORD *)(a2 + 19);
      long long v21 = *(_OWORD *)(a2 + 21);
      *uint64_t v16 = *v17;
      *(_OWORD *)(a1 + 19) = v22;
      *(_OWORD *)(a1 + 21) = v21;
    }
  }
  else if (v18)
  {
    *uint64_t v16 = *v17;
    *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
    uint64_t v20 = a2[22];
    a1[21] = a2[21];
    a1[22] = v20;
    swift_retain();
  }
  else
  {
    long long v23 = *v17;
    long long v24 = *(_OWORD *)(a2 + 21);
    *(_OWORD *)(a1 + 19) = *(_OWORD *)(a2 + 19);
    *(_OWORD *)(a1 + 21) = v24;
    *uint64_t v16 = v23;
  }
  a1[23] = a2[23];
  return a1;
}