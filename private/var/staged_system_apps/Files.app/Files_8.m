__n128 initializeWithTake for DOCFastLabel.TextDrawInformation(uint64_t a1, long long *a2)
{
  long long v2;
  long long v3;
  long long v4;
  long long v5;
  long long v6;
  long long v7;
  __n128 result;
  long long v9;
  long long v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t assignWithTake for DOCFastLabel.TextDrawInformation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 120))
  {
    uint64_t v7 = *(void *)(a2 + 120);
    if (v7)
    {
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      uint64_t v8 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = v7;
      *(void *)(a1 + 128) = v8;
      swift_release();
      goto LABEL_6;
    }
    sub_100501DF4(a1 + 88);
  }
  long long v9 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v9;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
LABEL_6:
  if (!*(void *)(a1 + 168))
  {
LABEL_10:
    long long v12 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v12;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    goto LABEL_11;
  }
  uint64_t v10 = *(void *)(a2 + 168);
  if (!v10)
  {
    sub_100501DF4(a1 + 136);
    goto LABEL_10;
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  uint64_t v11 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 176) = v11;
  swift_release();
LABEL_11:
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCFastLabel.TextDrawInformation(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 192)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCFastLabel.TextDrawInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 192) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 192) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCFastLabel.TextDrawInformation()
{
  return &type metadata for DOCFastLabel.TextDrawInformation;
}

void sub_100502854(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_10041D958, v8);
  swift_release();
  swift_release();
}

Swift::Int sub_100502928(void **a1)
{
  unint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v2 = (void *)sub_1005202F8(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  Swift::Int result = sub_1005071B4(v5);
  *a1 = v2;
  return result;
}

id sub_100502994(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = a3 & 1;
  uint64_t v7 = &v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState];
  uint64_t v8 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v7, v8, v9);
  *(void *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_additionalTopInset] = 0;
  *(void *)&v3[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  id v11 = objc_allocWithZone((Class)NSLayoutConstraint);
  long long v12 = v3;
  *(void *)&v3[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian;
  type metadata accessor for DOCUpdateGuardian();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v14 + 24) = 0;
  *(void *)&v12[v13] = v14;
  *(void *)&v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable] = 0;
  v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress] = 0;
  v15 = &v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source];
  *(void *)v15 = a1;
  *((void *)v15 + 1) = a2;
  v12[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style] = v6;
  swift_unknownObjectRetain();

  v23.receiver = v12;
  v23.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  id v16 = [super init];
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    v18 = result;
    v24._countAndFlagsBits = 0xD000000000000040;
    v24._object = (void *)0x80000001005EE050;
    v19._object = (void *)0x80000001005EE030;
    v19._countAndFlagsBits = 0xD00000000000001CLL;
    v20._countAndFlagsBits = 0x617A696C61636F4CLL;
    v20._object = (void *)0xEB00000000656C62;
    v21._countAndFlagsBits = 0x73736572676F7250;
    v21._object = (void *)0xE800000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v24);

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v16 setTitle:v22];

    swift_unknownObjectRelease();
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100502BF4()
{
  qword_1007376B8 = 0x4046000000000000;
}

void sub_100502C74()
{
  uint64_t v1 = OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount];
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v0[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = v4;
    v8.receiver = v0;
    v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
    [super layoutSubviews];
    uint64_t v5 = *(void *)&v0[v1];
    if (v5 == 1)
    {
      [v0 contentSize];
      [v0 setFittingHeight:v6];
      uint64_t v5 = *(void *)&v0[v1];
    }
    BOOL v3 = __OFSUB__(v5, 1);
    uint64_t v7 = v5 - 1;
    if (!v3)
    {
      *(void *)&v0[v1] = v7;
      return;
    }
  }
  __break(1u);
}

id sub_100502E44(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeight;
  uint64_t v4 = qword_100705290;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  *(void *)&v5[v3] = qword_1007376B8;
  *(void *)&v5[OBJC_IVAR____TtCC5Files39DOCProgressCollectionListViewController19ProgressListingView_fittingHeightUpdateDisabledCount] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView();
  id v6 = [super initWithCoder:a1];

  return v6;
}

id sub_100502F20(uint64_t a1)
{
  return sub_100506C80(a1, type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView);
}

id sub_100502F38()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView];
LABEL_5:
    id v17 = v2;
    return v3;
  }
  id result = [v0 view];
  if (result)
  {
    uint64_t v5 = result;
    [result bounds];
    double v7 = v6;
    double v9 = v8;
    double v11 = v10;
    double v13 = v12;

    id v14 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
    id v15 = [objc_allocWithZone((Class)type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()) initWithFrame:v14 collectionViewLayout:v7];

    id v16 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v15;
    id v3 = v15;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void sub_10050303C()
{
  uint64_t v1 = v0;
  v39.receiver = v0;
  v39.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  [super viewDidLoad];
  id v2 = sub_100502F38();
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityIdentifier:v3];

  id v4 = [v1 view];
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  id v6 = sub_100502F38();
  [v5 addSubview:v6];

  id v7 = sub_100502F38();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v8 = sub_100502F38();
  id v9 = [v8 topAnchor];

  id v10 = [v1 view];
  if (!v10)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  double v11 = v10;
  id v12 = [v10 topAnchor];

  id v13 = [v9 constraintEqualToAnchor:v12 constant:*(double *)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_additionalTopInset]];
  uint64_t v14 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint;
  id v15 = *(void **)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint];
  *(void *)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_collectionViewTopConstraint] = v13;

  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1005A1560;
  id v17 = sub_100502F38();
  id v18 = [v17 leadingAnchor];

  id v19 = [v1 view];
  if (!v19)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Swift::String v20 = v19;
  id v21 = [v19 leadingAnchor];

  id v22 = [v18 constraintEqualToAnchor:v21];
  *(void *)(v16 + 32) = v22;
  id v23 = sub_100502F38();
  id v24 = [v23 trailingAnchor];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v26 = v25;
  id v27 = [v25 trailingAnchor];

  id v28 = [v24 constraintEqualToAnchor:v27];
  v29 = *(void **)&v1[v14];
  *(void *)(v16 + 40) = v28;
  *(void *)(v16 + 48) = v29;
  id v30 = v29;
  id v31 = sub_100502F38();
  id v32 = [v31 bottomAnchor];

  id v33 = [v1 view];
  if (v33)
  {
    v34 = v33;
    v35 = self;
    id v36 = [v34 bottomAnchor];

    id v37 = [v32 constraintEqualToAnchor:v36];
    *(void *)(v16 + 56) = v37;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v35 activateConstraints:isa];

    sub_100504004();
    sub_100504B80();
    sub_100503BEC();
    return;
  }
LABEL_11:
  __break(1u);
}

uint64_t sub_100503480()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100509FE8;
  *(void *)(v3 + 24) = v2;
  v6[4] = sub_1000879B8;
  v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_100087990;
  v6[3] = &unk_1006B4440;
  id v4 = _Block_copy(v6);
  v0;
  swift_retain();
  swift_release();
  [(id)v1 performWithoutAnimation:v4];
  _Block_release(v4);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    swift_retain();
    sub_1000EF16C();
    swift_endAccess();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_100503624(void *a1)
{
  sub_1005052FC((uint64_t)_swiftEmptyArrayStorage, 0);
  id v2 = [a1 view];
  if (v2)
  {
    id v3 = v2;
    [v2 layoutIfNeeded];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005036A0(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  [super viewWillAppear:a1 & 1];
  sub_1005052FC((uint64_t)_swiftEmptyArrayStorage, 0);
  swift_beginAccess();
  swift_retain();
  sub_1000EF16C();
  swift_endAccess();
  swift_release();
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = *(void (**)(char *, void (*)(), uint64_t, uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v7(v2, sub_10050A000, v6, ObjectType, v4);
  return swift_release_n();
}

void sub_1005037E4()
{
  if (qword_100704EC8 != -1) {
    swift_once();
  }
  v0 = qword_100736E98;
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v0, v1))
  {
    id v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "Progress listing received 'didUpdate' from source", v2, 2u);
    swift_slowDealloc();
  }
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1005052FC((uint64_t)_swiftEmptyArrayStorage, 1);
  }
}

uint64_t sub_100503938(char a1)
{
  id v2 = v1;
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCProgressCollectionListViewController(0);
  [super viewDidAppear:a1 & 1];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
  swift_beginAccess();
  swift_retain();
  sub_10050053C();
  swift_endAccess();
  if (!*(void *)(*(void *)(v4 + 16) + 16) && *(unsigned char *)(v4 + 24) == 1)
  {
    if (qword_100704EC8 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_100736E98;
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Progress listing received 'didUpdate' while appearing.  Performing now!", v7, 2u);
      swift_slowDealloc();
    }
    sub_1005052FC((uint64_t)_swiftEmptyArrayStorage, 1);
  }
  return swift_release();
}

void sub_100503BEC()
{
  os_log_type_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton;
  id v3 = *(void **)&v1[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_dismissButton];
  if (v3)
  {
    if ([v3 systemItem] == (id)24)
    {
      id v4 = [v1 editButtonItem];
      uint64_t v5 = *(void **)&v1[v2];
      id v6 = v5;
      goto LABEL_7;
    }
    id v4 = *(id *)&v1[v2];
  }
  else
  {
    id v4 = 0;
  }
  id v7 = v4;
  id v6 = [v1 editButtonItem];
  uint64_t v5 = v6;
LABEL_7:
  id v22 = v6;
  id v8 = [v1 navigationItem];
  id v9 = [v8 leftBarButtonItem];

  if (!v5)
  {
    id v10 = v9;
    if (!v9) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  id v10 = v22;
  if (!v9)
  {
LABEL_12:

    goto LABEL_13;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
  id v11 = v22;
  char v12 = static NSObject.== infix(_:_:)();

  if ((v12 & 1) == 0)
  {
LABEL_13:
    id v13 = [v1 navigationItem];
    [v13 setLeftBarButtonItem:v22];
  }
LABEL_14:
  id v14 = v4;
  id v15 = [v1 navigationItem];
  id v16 = [v15 rightBarButtonItem];

  if (v4)
  {
    id v17 = v14;
    if (v16)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      id v18 = v14;
      char v19 = static NSObject.== infix(_:_:)();

      if (v19) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_19:

LABEL_20:
    id v20 = [v1 navigationItem];
    [v20 setRightBarButtonItem:v14];

    id v18 = v14;
LABEL_21:

    id v21 = v18;
    goto LABEL_22;
  }
  id v17 = v16;
  if (v16) {
    goto LABEL_19;
  }
  id v21 = v22;
LABEL_22:
}

uint64_t sub_100504004()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  v8.n128_f64[0] = __chkstk_darwin(v6);
  id v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style);
  char v12 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:);
  if (!*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_style)) {
    char v12 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))(v5, *v12, v2, v8);
  UICollectionLayoutListConfiguration.init(appearance:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  if (v11 == 1)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  }
  id v13 = self;
  id v14 = [v13 clearColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  id v15 = sub_100502F38();
  id v16 = [v13 clearColor];
  [v15 setBackgroundColor:v16];

  id v17 = sub_100502F38();
  id v18 = [self effectWithStyle:9];
  id v19 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v18];

  [v17 setBackgroundView:v19];
  sub_10009E6C4(0, &qword_10071A598);
  id v20 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id v21 = sub_100502F38();
  [v21 setCollectionViewLayout:v20];

  id v22 = sub_100502F38();
  [v22 setDelegate:v1];

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
}

void sub_100504370()
{
  sub_10009E6C4(0, (unint64_t *)&unk_10071A5A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  uint64_t v1 = self;
  id v2 = [v1 configurationWithActions:isa];

  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = *(void **)(Strong + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
    id v6 = v5;

    if (!v5)
    {
      __break(1u);
LABEL_14:
      __break(1u);
      return;
    }
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
    if (v30)
    {
      sub_1000D4774((uint64_t)v32, (uint64_t)v33);
      sub_1000CBBA4((uint64_t)aBlock, (uint64_t *)&unk_10071A1A0);
      sub_1001146DC(v33, (uint64_t)v34);
      uint64_t v7 = v35;
      uint64_t v8 = v36;
      sub_1000A6B78(v34, v35);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 8))(aBlock, v7, v8);
      if (qword_100705298 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
      sub_10009D098(v9, (uint64_t)qword_10071A350);
      char v10 = static AnyHashable.== infix(_:_:)();
      sub_10008E17C((uint64_t)aBlock);
      if ((v10 & 1) != 0
        || (uint64_t v11 = v35,
            uint64_t v12 = v36,
            sub_1000A6B78(v34, v35),
            id v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(v11, v12),
            LODWORD(v11) = [v13 isCancellable],
            v13,
            !v11))
      {

        sub_10009B1B8((uint64_t)v34);
        return;
      }
      id v14 = (id)_DocumentManagerBundle();
      if (v14)
      {
        id v15 = v14;
        v37._object = (void *)0x80000001005DFDC0;
        v16._countAndFlagsBits = 0x6C65636E6143;
        v16._object = (void *)0xE600000000000000;
        v17._countAndFlagsBits = 0x617A696C61636F4CLL;
        v17._object = (void *)0xEB00000000656C62;
        v18._countAndFlagsBits = 0;
        v18._object = (void *)0xE000000000000000;
        v37._countAndFlagsBits = 0xD00000000000001BLL;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v37);

        uint64_t v19 = swift_allocObject();
        swift_beginAccess();
        id v20 = (void *)swift_unknownObjectWeakLoadStrong();
        swift_unknownObjectWeakInit();

        sub_1000D4774((uint64_t)v34, (uint64_t)v33);
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = v19;
        sub_1001146DC(v33, v21 + 24);
        swift_retain();
        NSString v22 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v31 = sub_100509A50;
        v32[0] = v21;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100502854;
        id v30 = &unk_1006B43A0;
        id v23 = _Block_copy(aBlock);
        id v24 = [self contextualActionWithStyle:1 title:v22 handler:v23];

        _Block_release(v23);
        swift_release();
        swift_release();
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_1005A04F0;
        *(void *)(v25 + 32) = v24;
        aBlock[0] = v25;
        specialized Array._endMutation()();
        id v26 = v24;
        Class v27 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v28 = [v1 configurationWithActions:v27];

        [v28 setPerformsFirstActionWithFullSwipe:0];
        sub_10009B1B8((uint64_t)v34);
        return;
      }
      goto LABEL_14;
    }
    sub_1000CBBA4((uint64_t)aBlock, &qword_10071A530);
  }
}

uint64_t sub_100504824(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return a3();
  }
  char v10 = (void *)Strong;
  swift_retain();
  sub_100509A94(a6, (uint64_t)v10, (void (*)(uint64_t))a3, a4);

  return swift_release();
}

void sub_1005048B8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v3 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  Class v27 = (char *)&v24 - v8;
  uint64_t v9 = type metadata accessor for UIListSeparatorConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v14 = (void *)Strong;
    id v26 = v6;
    id v15 = sub_100502F38();
    Swift::String v16 = (char *)[v15 numberOfItemsInSection:IndexPath.section.getter()];

    if (__OFSUB__(v16, 1))
    {
      __break(1u);
    }
    else
    {
      id v24 = v16 - 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
      uint64_t v17 = IndexPath.row.getter();
      Swift::String v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
      unsigned int v19 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      uint64_t v25 = v9;
      uint64_t v20 = v3;
      unsigned int v21 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      if (v17) {
        uint64_t v22 = enum case for UIListSeparatorConfiguration.Visibility.visible(_:);
      }
      else {
        uint64_t v22 = enum case for UIListSeparatorConfiguration.Visibility.hidden(_:);
      }
      v18(v27, v22, v20);
      UIListSeparatorConfiguration.topSeparatorVisibility.setter();
      if ((char *)IndexPath.row.getter() == v24) {
        uint64_t v23 = v19;
      }
      else {
        uint64_t v23 = v21;
      }
      v18(v26, v23, v20);
      UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();

      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v28, v12, v25);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v28, a1, v9);
  }
}

id sub_100504B80()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_10071A580);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  id v31 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v30 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v30 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)v30 - v12;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCProgressCollectionListCell(0);
  sub_1000CBE70((uint64_t *)&unk_100708640);
  UICollectionView.CellRegistration.init(handler:)();
  if (qword_100705298 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  uint64_t v15 = sub_10009D098(v14, (uint64_t)qword_10071A350);
  sub_1000CBC00(v15, (uint64_t)v33, &qword_10071A530);
  UICollectionView.CellRegistration.init(handler:)();
  v30[1] = sub_100502F38();
  sub_1000CBC00((uint64_t)v33, (uint64_t)v32, &qword_10071A530);
  Swift::String v16 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v16(v7, v10, v2);
  uint64_t v17 = v31;
  v16(v31, v13, v2);
  uint64_t v18 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v19 = (v18 + 96) & ~v18;
  uint64_t v20 = (v4 + v18 + v19) & ~v18;
  uint64_t v21 = swift_allocObject();
  sub_1005098DC((uint64_t)v32, v21 + 16);
  v30[0] = v13;
  uint64_t v22 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v22(v21 + v19, v7, v2);
  v22(v21 + v20, v17, v2);
  id v23 = objc_allocWithZone((Class)sub_1000CBE70(&qword_10071A588));
  uint64_t v24 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  uint64_t v25 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  id v26 = *(void **)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
  *(void *)(v1 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable) = v24;

  id result = sub_100502F38();
  if (*(void *)(v1 + v25))
  {
    uint64_t v28 = result;
    [result setDataSource:];

    v29 = *(void (**)(char *, uint64_t))(v3 + 8);
    v29(v10, v2);
    sub_1000CBBA4((uint64_t)v33, &qword_10071A530);
    return (id)((uint64_t (*)(void, uint64_t))v29)(v30[0], v2);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100504F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    sub_1000D4774(a3, (uint64_t)v14);
    uint64_t v11 = a1 + qword_100737588;
    swift_beginAccess();
    sub_1000CBC00(v11, (uint64_t)v13, &qword_10071A590);
    swift_beginAccess();
    sub_10045A518((uint64_t)v14, v11);
    swift_endAccess();
    sub_100454D34((uint64_t)v13);
    sub_1000CBBA4((uint64_t)v14, &qword_10071A590);
    sub_1000CBBA4((uint64_t)v13, &qword_10071A590);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v8, (uint64_t)v10 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState, v5);
    sub_100454B1C(v8);
  }
}

id sub_1005050C8(unsigned char *a1)
{
  a1[qword_100737590] = 1;
  return [a1 setNeedsUpdateConfiguration];
}

uint64_t sub_1005050E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CBC00(a3, (uint64_t)v17, (uint64_t *)&unk_10071A1A0);
  sub_1000CBC00((uint64_t)v17, (uint64_t)v10, &qword_10071A530);
  sub_1000CBC00(a4, (uint64_t)&v12, &qword_10071A530);
  if (!v11)
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
    if (!*((void *)&v13 + 1))
    {
      sub_1000CBBA4((uint64_t)v10, &qword_10071A530);
      goto LABEL_8;
    }
LABEL_7:
    sub_1000CBBA4((uint64_t)v10, &qword_10071A578);
    goto LABEL_8;
  }
  sub_1000CBC00((uint64_t)v10, (uint64_t)v9, &qword_10071A530);
  if (!*((void *)&v13 + 1))
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10071A1A0);
    goto LABEL_7;
  }
  v8[2] = v14;
  v8[3] = v15;
  v8[4] = v16;
  v8[0] = v12;
  v8[1] = v13;
  static AnyHashable.== infix(_:_:)();
  sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10071A1A0);
  sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
  sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10071A1A0);
  sub_1000CBBA4((uint64_t)v10, &qword_10071A530);
LABEL_8:
  sub_1000D4774(a3 + 40, (uint64_t)v10);
  type metadata accessor for DOCProgressCollectionListCell(0);
  sub_1000CBE70((uint64_t *)&unk_100708640);
  uint64_t v6 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_1000CBBA4((uint64_t)v10, &qword_10071A590);
  return v6;
}

uint64_t sub_1005052FC(uint64_t a1, int a2)
{
  int v120 = a2;
  *(void *)&long long v124 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v115 = *(void *)(v3 - 8);
  uint64_t v116 = v3;
  __chkstk_darwin(v3);
  v113 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for DispatchQoS();
  uint64_t v112 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  v117 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTime();
  uint64_t v121 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v100 - v10;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10071A520);
  uint64_t v122 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  long long v15 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v100 - v16;
  uint64_t v18 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian;
  uint64_t v19 = v2;
  uint64_t v20 = *(void *)&v2[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_reloadGuardian];
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(v20 + 16) + 16))
  {
    LOBYTE(v22) = 1;
LABEL_3:
    *(unsigned char *)(v20 + 24) = v22;
    return result;
  }
  v110 = v17;
  v111 = v11;
  uint64_t v123 = (uint64_t)v9;
  uint64_t v107 = v18;
  uint64_t v118 = v12;
  v119 = v15;
  uint64_t v109 = v6;
  uint64_t v23 = *(void *)&v19[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_source + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23);
  int64_t v26 = *(void *)(v25 + 16);
  Class v27 = _swiftEmptyArrayStorage;
  uint64_t v28 = v19;
  if (v26)
  {
    v125 = _swiftEmptyArrayStorage;
    sub_100190CD8(0, v26, 0);
    uint64_t v29 = v25 + 32;
    Class v27 = v125;
    do
    {
      sub_1000D4774(v29, (uint64_t)v131);
      uint64_t v30 = v132;
      uint64_t v31 = v133;
      sub_1000A6B78(v131, v132);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v31 + 8))(&v126, v30, v31);
      sub_10009B1B8((uint64_t)v131);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190CD8(0, v27[2] + 1, 1);
        Class v27 = v125;
      }
      unint64_t v33 = v27[2];
      unint64_t v32 = v27[3];
      if (v33 >= v32 >> 1)
      {
        sub_100190CD8(v32 > 1, v33 + 1, 1);
        Class v27 = v125;
      }
      v27[2] = v33 + 1;
      v34 = &v27[5 * v33];
      long long v35 = v126;
      long long v36 = v127;
      v34[8] = v128;
      *((_OWORD *)v34 + 2) = v35;
      *((_OWORD *)v34 + 3) = v36;
      v29 += 40;
      --v26;
    }
    while (v26);
    uint64_t v28 = v19;
  }
  Swift::String v37 = sub_1004F33A4(v124);
  sub_1000CBE70((uint64_t *)&unk_100708C70);
  uint64_t inited = swift_initStackObject();
  long long v124 = xmmword_1005A0030;
  *(_OWORD *)(inited + 16) = xmmword_1005A0030;
  uint64_t v39 = v118;
  uint64_t v40 = v122;
  v41 = v110;
  if (qword_100705298 != -1) {
    swift_once();
  }
  uint64_t v108 = v25;
  uint64_t v42 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  uint64_t v43 = sub_10009D098(v42, (uint64_t)qword_10071A350);
  sub_1000CBC00(v43, inited + 32, &qword_10071A530);
  *(void *)&long long v126 = v37;
  sub_10016A144(inited);
  uint64_t v44 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  v45 = *(void **)&v28[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable];
  if (!v45)
  {
    __break(1u);
    goto LABEL_43;
  }
  uint64_t v101 = v43;
  uint64_t v46 = v126;
  id v47 = v45;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v48 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
  v50 = *(void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v49 = v40 + 8;
  v104 = v50;
  v50(v41, v39);
  v51 = sub_100509250(v48, (uint64_t)v27, v46);
  v110 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v106 = v44;
  if (!*(void *)&v28[v44])
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v122 = v49;
  v105 = v28;
  sub_1000CBE70((uint64_t *)&unk_10071A538);
  sub_1000CBE70((uint64_t *)&unk_10071A1A0);
  sub_100073DF0(&qword_10071A548, (uint64_t *)&unk_10071A538);
  sub_100073DF0(&qword_10071A550, (uint64_t *)&unk_10071A1A0);
  NSDiffableDataSourceSnapshot.init()();
  sub_1000CBE70((uint64_t *)&unk_10071A558);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = v124;
  *(void *)&long long v126 = 0x746365536E69616DLL;
  *((void *)&v126 + 1) = 0xEB000000006E6F69;
  AnyHashable.init<A>(_:)();
  *(void *)(v52 + 72) = 0x746365536E69616DLL;
  *(void *)(v52 + 80) = 0xEB000000006E6F69;
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)v52);
  swift_bridgeObjectRelease();
  int64_t v53 = v51[2];
  v54 = _swiftEmptyArrayStorage;
  int64_t v102 = v53;
  v103 = v51;
  if (v53)
  {
    v125 = _swiftEmptyArrayStorage;
    sub_100190CF8(0, v53, 0);
    uint64_t v55 = (uint64_t)(v51 + 4);
    v54 = v125;
    do
    {
      sub_1000CBC00(v55, (uint64_t)&v126, (uint64_t *)&unk_10071A1A0);
      sub_1000D4774((uint64_t)&v128 + 8, (uint64_t)v131);
      sub_1000CBBA4((uint64_t)&v126, (uint64_t *)&unk_10071A1A0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190CF8(0, v54[2] + 1, 1);
        v54 = v125;
      }
      unint64_t v57 = v54[2];
      unint64_t v56 = v54[3];
      if (v57 >= v56 >> 1) {
        sub_100190CF8(v56 > 1, v57 + 1, 1);
      }
      uint64_t v58 = v132;
      uint64_t v59 = v133;
      uint64_t v60 = sub_10003CCE8((uint64_t)v131, v132);
      __chkstk_darwin(v60);
      v62 = (char *)&v100 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v63 + 16))(v62);
      sub_100508F9C(v57, (uint64_t)v62, (uint64_t *)&v125, v58, v59);
      sub_10009B1B8((uint64_t)v131);
      v54 = v125;
      v55 += 80;
      --v53;
      uint64_t v64 = v123;
    }
    while (v53);
  }
  else
  {
    uint64_t v64 = v123;
  }
  *(void *)&long long v126 = v108;
  sub_100169FA8((uint64_t)v54);
  v65 = (char *)v126;
  swift_bridgeObjectRetain();
  v66 = v110;
  sub_100502928((void **)&v126);
  uint64_t v67 = v121;
  v68 = v111;
  if (v66) {
    goto LABEL_47;
  }
  uint64_t v69 = *(void *)(v126 + 16);
  if (v69)
  {
    v110 = v65;
    v70 = (void *)(v126 + 32);
    uint64_t v108 = v126;
    swift_retain();
    do
    {
      sub_1000CBE70((uint64_t *)&unk_100708C60);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = v124;
      uint64_t v72 = v70[3];
      uint64_t v73 = v70[4];
      sub_1000A6B78(v70, v72);
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v72, v73);
      sub_1000D4774((uint64_t)v70, v71 + 72);
      *(void *)&long long v129 = 0;
      long long v127 = 0u;
      long long v128 = 0u;
      long long v126 = 0u;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
      swift_bridgeObjectRelease();
      sub_1000CBBA4((uint64_t)&v126, (uint64_t *)&unk_10071A568);
      v70 += 5;
      --v69;
    }
    while (v69);
    swift_release();
    uint64_t v67 = v121;
    v65 = v110;
    v68 = v111;
    uint64_t v64 = v123;
  }
  swift_release();
  uint64_t v74 = *((void *)v65 + 2);
  v75 = v105;
  uint64_t v76 = v109;
  if (!v74)
  {
    sub_1000CBE70((uint64_t *)&unk_100708C60);
    v77 = (_OWORD *)swift_allocObject();
    v77[1] = v124;
    sub_1000CBC00(v101, (uint64_t)&v126, &qword_10071A530);
    if (!*((void *)&v127 + 1))
    {
LABEL_46:
      __break(1u);
LABEL_47:
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    long long v78 = v129;
    v77[4] = v128;
    v77[5] = v78;
    v77[6] = v130;
    long long v79 = v127;
    v77[2] = v126;
    v77[3] = v79;
    *(void *)&long long v129 = 0;
    long long v127 = 0u;
    long long v128 = 0u;
    long long v126 = 0u;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    sub_1000CBBA4((uint64_t)&v126, (uint64_t *)&unk_10071A568);
  }
  uint64_t v80 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress;
  int v81 = v75[OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_isDisplayingProgress];
  swift_bridgeObjectRelease();
  int v82 = v74 != 0;
  v75[v80] = v82;
  v83 = v117;
  if (v82 != v81)
  {
    id v84 = [v75 view];
    if (!v84)
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    v85 = v84;
    id v86 = [v84 window];

    int v120 = (v86 != 0) & v120;
  }
  v87 = *(void **)&v75[v106];
  if (!v87)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  id v88 = v87;
  v89 = v119;
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  if (v102)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v123 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    v90 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    uint64_t v121 = v67 + 8;
    *(void *)&long long v124 = v90;
    v90(v64, v76);
    uint64_t v91 = swift_allocObject();
    v92 = v103;
    *(void *)(v91 + 16) = v75;
    *(void *)(v91 + 24) = v92;
    *(void *)&long long v128 = sub_100509700;
    *((void *)&v128 + 1) = v91;
    *(void *)&long long v126 = _NSConcreteStackBlock;
    *((void *)&v126 + 1) = 1107296256;
    *(void *)&long long v127 = sub_1000666D8;
    *((void *)&v127 + 1) = &unk_1006B4300;
    v93 = _Block_copy(&v126);
    v94 = v75;
    swift_release();
    static DispatchQoS.unspecified.getter();
    *(void *)&long long v126 = _swiftEmptyArrayStorage;
    sub_1000BAE94((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v95 = v76;
    v96 = v113;
    uint64_t v97 = v116;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    v98 = (void *)v123;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v93);

    (*(void (**)(char *, uint64_t))(v115 + 8))(v96, v97);
    (*(void (**)(char *, uint64_t))(v112 + 8))(v83, v114);
    uint64_t v99 = v95;
    v89 = v119;
    ((void (*)(char *, uint64_t))v124)(v68, v99);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v104(v89, v118);
  uint64_t v20 = *(void *)&v75[v107];
  uint64_t result = swift_beginAccess();
  uint64_t v22 = *(void *)(*(void *)(v20 + 16) + 16);
  if (!v22) {
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_100506038()
{
  uint64_t v0 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  sub_10001AF94(v0, qword_10071A350);
  uint64_t v1 = (_OWORD *)sub_10009D098(v0, (uint64_t)qword_10071A350);
  return sub_100506084(v1);
}

uint64_t sub_100506084@<X0>(_OWORD *a1@<X8>)
{
  a1[4] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  strcpy((char *)v6, "NullProgress");
  BYTE5(v6[1]) = 0;
  HIWORD(v6[1]) = -5120;
  AnyHashable.init<A>(_:)();
  uint64_t v2 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  static Date.distantPast.getter();
  uint64_t v3 = *(int *)(v2 + 28);
  *(void *)((char *)a1 + v3) = [objc_allocWithZone((Class)NSProgress) init:v6[0] v6[1]];
  static UTType.data.getter();
  type metadata accessor for DOCProgressProvidingOperationIconType();
  swift_storeEnumTagMultiPayload();
  v7[3] = v2;
  v7[4] = (uint64_t)&off_1006B4468;
  uint64_t v4 = sub_100052C70(v7);
  sub_10050AF50((uint64_t)a1, (uint64_t)v4, type metadata accessor for DOCProgressCollectionListViewController.NullProgress);
  sub_10008E1D0((uint64_t)(v4 + 10), (uint64_t)v6);
  return sub_10050972C((uint64_t)v6, (uint64_t)a1);
}

Swift::Int sub_1005061B4()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1000CBC00(v0, (uint64_t)&v12, &qword_10071A530);
  if (*((void *)&v13 + 1))
  {
    v11[2] = v14;
    v11[3] = v15;
    v11[4] = v16;
    v11[1] = v13;
    v11[0] = v12;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)();
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_10071A1A0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)();
  uint64_t v8 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  type metadata accessor for Date();
  sub_1000BAE94(&qword_10071A658, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  NSObject.hash(into:)();
  sub_10050AF50(v0 + *(int *)(v8 + 32), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1uLL);
    sub_1000BAE94(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return Hasher._finalize()();
}

uint64_t sub_1005064E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10008E1D0(v1 + 80, a1);
}

id sub_1005064F0(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1005064FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10050AF50(v2 + *(int *)(a1 + 32), a2, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
}

void sub_100506538(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBC00(v2, (uint64_t)&v13, &qword_10071A530);
  if (*((void *)&v14 + 1))
  {
    v12[2] = v15;
    v12[3] = v16;
    v12[4] = v17;
    v12[0] = v13;
    v12[1] = v14;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)();
    sub_1000CBBA4((uint64_t)v12, (uint64_t *)&unk_10071A1A0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)();
  type metadata accessor for Date();
  sub_1000BAE94(&qword_10071A658, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  NSObject.hash(into:)();
  sub_10050AF50(v2 + *(int *)(a2 + 32), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    sub_1000BAE94(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_100506838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  sub_1000CBC00(v2, (uint64_t)&v14, &qword_10071A530);
  if (*((void *)&v15 + 1))
  {
    v13[2] = v16;
    v13[3] = v17;
    v13[4] = v18;
    v13[1] = v15;
    v13[0] = v14;
    Hasher._combine(_:)(1u);
    AnyHashable.hash(into:)();
    sub_1000CBBA4((uint64_t)v13, (uint64_t *)&unk_10071A1A0);
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  AnyHashable.hash(into:)();
  type metadata accessor for Date();
  sub_1000BAE94(&qword_10071A658, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  NSObject.hash(into:)();
  sub_10050AF50(v2 + *(int *)(a2 + 32), (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1uLL);
    sub_1000BAE94(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return Hasher._finalize()();
}

void sub_100506B98()
{
  swift_unknownObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_cancelAccessoryDisplayedState;
  uint64_t v2 = type metadata accessor for UICellAccessory.DisplayedState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController____lazy_storage___collectionView));

  swift_release();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
}

id sub_100506C64()
{
  return sub_100506C80(0, (uint64_t (*)(void))type metadata accessor for DOCProgressCollectionListViewController);
}

id sub_100506C80(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t sub_100506D88()
{
  return type metadata accessor for DOCProgressCollectionListViewController(0);
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_10071A3C8);
}

uint64_t sub_100506DB0()
{
  uint64_t result = type metadata accessor for UICellAccessory.DisplayedState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.ProgressListingView()
{
  return self;
}

uint64_t sub_100506EB0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCUpdateGuardian()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCUpdateGuardian.UpdatesDisabledReason(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100506FA8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCUpdateGuardian.UpdatesDisabledReason()
{
  return &type metadata for DOCUpdateGuardian.UpdatesDisabledReason;
}

unsigned char *storeEnumTagSinglePayload for DOCProgressCollectionListViewController.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005070ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCProgressCollectionListViewController.Style()
{
  return &type metadata for DOCProgressCollectionListViewController.Style;
}

unint64_t sub_1005070E8()
{
  unint64_t result = qword_10071A510;
  if (!qword_10071A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A510);
  }
  return result;
}

unint64_t sub_100507140()
{
  unint64_t result = qword_10071A518;
  if (!qword_10071A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071A518);
  }
  return result;
}

uint64_t type metadata accessor for DOCProgressCollectionListViewController.NullProgress(uint64_t a1)
{
  return sub_10009E984(a1, qword_10071A608);
}

Swift::Int sub_1005071B4(uint64_t *a1)
{
  uint64_t v171 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v171 - 8);
  uint64_t v3 = __chkstk_darwin(v171);
  v170 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v173 = (char *)&v160 - v5;
  v191 = a1;
  Swift::Int v6 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v6);
  if (result >= v6)
  {
    if (v6 < 0) {
      goto LABEL_149;
    }
    if (v6) {
      return sub_1005081F0(0, v6, 1, v191);
    }
    return result;
  }
  if (v6 >= 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = v6 + 1;
  }
  if (v6 < -1) {
    goto LABEL_157;
  }
  Swift::Int v160 = result;
  if (v6 < 2)
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
    v166 = (char *)&_swiftEmptyArrayStorage[4];
    if (v6 != 1)
    {
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      long long v13 = (char *)_swiftEmptyArrayStorage;
LABEL_113:
      v167 = v10;
      if (v15 >= 2)
      {
        uint64_t v152 = *v191;
        do
        {
          unint64_t v153 = v15 - 2;
          if (v15 < 2) {
            goto LABEL_144;
          }
          if (!v152) {
            goto LABEL_156;
          }
          v154 = v13;
          uint64_t v155 = *(void *)&v13[16 * v153 + 32];
          uint64_t v156 = *(void *)&v13[16 * v15 + 24];
          uint64_t v157 = v168;
          sub_100508680((char *)(v152 + 40 * v155), (char *)(v152 + 40 * *(void *)&v13[16 * v15 + 16]), (char *)(v152 + 40 * v156), v166);
          if (v157) {
            goto LABEL_125;
          }
          if (v156 < v155) {
            goto LABEL_145;
          }
          uint64_t v168 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v154 = sub_100520230((uint64_t)v154);
          }
          if (v153 >= *((void *)v154 + 2)) {
            goto LABEL_146;
          }
          v158 = &v154[16 * v153 + 32];
          *(void *)v158 = v155;
          *((void *)v158 + 1) = v156;
          unint64_t v159 = *((void *)v154 + 2);
          if (v15 > v159) {
            goto LABEL_147;
          }
          memmove(&v154[16 * v15 + 16], &v154[16 * v15 + 32], 16 * (v159 - v15));
          long long v13 = v154;
          *((void *)v154 + 2) = v159 - 1;
          unint64_t v15 = v159 - 1;
        }
        while (v159 > 2);
      }
      swift_bridgeObjectRelease();
      v167[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v9 = v8 >> 1;
    sub_1000CBE70((uint64_t *)&unk_100708640);
    uint64_t v10 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
    v10[2] = v9;
    v166 = (char *)(v10 + 4);
  }
  v167 = v10;
  Swift::Int v11 = 0;
  long long v12 = (void (**)(char *, uint64_t))(v2 + 8);
  long long v13 = (char *)_swiftEmptyArrayStorage;
  long long v14 = v173;
  v169 = (void (**)(char *, uint64_t))(v2 + 8);
  while (1)
  {
    uint64_t v16 = v11++;
    v163 = v13;
    uint64_t v165 = v16;
    if (v11 >= v6) {
      goto LABEL_42;
    }
    v174 = (void *)v6;
    uint64_t v17 = *v191;
    uint64_t v18 = v16;
    sub_1000D4774(*v191 + 40 * v11, (uint64_t)&v188);
    uint64_t v161 = v17;
    sub_1000D4774(v17 + 40 * v18, (uint64_t)&v185);
    uint64_t v19 = v189;
    uint64_t v20 = v190;
    uint64_t v21 = sub_1000A6B78(&v188, v189);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
    v179 = (void (*)(uint64_t, void))v21;
    uint64_t v182 = v19;
    uint64_t v181 = v20;
    v180 = v22;
    v22(v19, v20);
    uint64_t v23 = v186;
    uint64_t v24 = v187;
    uint64_t v25 = sub_1000A6B78(&v185, v186);
    int64_t v26 = *(void (**)(uint64_t, void))(v24 + 16);
    Class v27 = v170;
    v176 = (void (*)(void, uint64_t))v25;
    v178 = (void (*)(void, void))v24;
    v177 = v26;
    v26(v23, v24);
    char v28 = static Date.< infix(_:_:)();
    uint64_t v29 = *v12;
    uint64_t v30 = v171;
    (*v12)(v27, v171);
    v29(v14, v30);
    if (v28)
    {
      BOOL v31 = 1;
LABEL_21:
      LODWORD(v164) = v31;
      goto LABEL_22;
    }
    v180(v182, v181);
    v177(v23, v178);
    char v32 = static Date.> infix(_:_:)();
    v29(v27, v30);
    v29(v14, v30);
    if ((v32 & 1) == 0)
    {
      uint64_t v33 = v189;
      uint64_t v34 = v190;
      sub_1000A6B78(&v188, v189);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v34 + 8))(v184, v33, v34);
      uint64_t v35 = AnyHashable.hashValue.getter();
      sub_10008E17C((uint64_t)v184);
      uint64_t v36 = v186;
      uint64_t v37 = v187;
      sub_1000A6B78(&v185, v186);
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v37 + 8))(v183, v36, v37);
      uint64_t v38 = AnyHashable.hashValue.getter();
      sub_10008E17C((uint64_t)v183);
      BOOL v31 = v35 < v38;
      goto LABEL_21;
    }
    LODWORD(v164) = 0;
LABEL_22:
    Swift::Int v6 = (Swift::Int)v174;
    sub_10009B1B8((uint64_t)&v185);
    sub_10009B1B8((uint64_t)&v188);
    uint64_t v16 = v165;
    Swift::Int v11 = v165 + 2;
    if (v165 + 2 < v6)
    {
      v162 = v29;
      uint64_t v39 = v161 + 40 * v165 + 40;
      while (1)
      {
        Swift::Int v172 = v11;
        sub_1000D4774(v39 + 40, (uint64_t)&v188);
        uint64_t v182 = v39;
        sub_1000D4774(v39, (uint64_t)&v185);
        uint64_t v40 = v189;
        uint64_t v41 = v190;
        uint64_t v42 = sub_1000A6B78(&v188, v189);
        uint64_t v43 = *(void (**)(uint64_t, void))(v41 + 16);
        uint64_t v44 = v173;
        v178 = (void (*)(void, void))v42;
        uint64_t v181 = v40;
        v180 = (void (*)(uint64_t, uint64_t))v41;
        v179 = v43;
        v43(v40, v41);
        uint64_t v45 = v186;
        uint64_t v46 = v187;
        id v47 = sub_1000A6B78(&v185, v186);
        uint64_t v48 = *(void (**)(void, uint64_t))(v46 + 16);
        uint64_t v49 = v170;
        v175 = (void (*)(void, uint64_t))v47;
        v177 = (void (*)(uint64_t, void))v45;
        v176 = v48;
        v48(v45, v46);
        char v50 = static Date.< infix(_:_:)();
        uint64_t v51 = v171;
        uint64_t v52 = v162;
        v162(v49, v171);
        v52(v44, v51);
        if (v50)
        {
          int v53 = 1;
        }
        else
        {
          v179(v181, v180);
          v176(v177, v46);
          char v54 = static Date.> infix(_:_:)();
          v52(v49, v51);
          v52(v44, v51);
          if (v54)
          {
            int v53 = 0;
          }
          else
          {
            uint64_t v55 = v189;
            uint64_t v56 = v190;
            sub_1000A6B78(&v188, v189);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v56 + 8))(v184, v55, v56);
            uint64_t v57 = AnyHashable.hashValue.getter();
            sub_10008E17C((uint64_t)v184);
            uint64_t v58 = v186;
            uint64_t v59 = v187;
            sub_1000A6B78(&v185, v186);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v59 + 8))(v183, v58, v59);
            uint64_t v60 = AnyHashable.hashValue.getter();
            sub_10008E17C((uint64_t)v183);
            int v53 = v57 < v60;
          }
        }
        Swift::Int v11 = v172;
        Swift::Int v6 = (Swift::Int)v174;
        sub_10009B1B8((uint64_t)&v185);
        sub_10009B1B8((uint64_t)&v188);
        if (v164 != v53) {
          break;
        }
        ++v11;
        uint64_t v39 = v182 + 40;
        if (v6 == v11)
        {
          Swift::Int v11 = v6;
          break;
        }
      }
      uint64_t v16 = v165;
    }
    if (v164)
    {
      if (v11 < v16) {
        goto LABEL_150;
      }
      if (v16 < v11)
      {
        uint64_t v61 = 40 * v11 - 40;
        uint64_t v62 = 40 * v16;
        Swift::Int v63 = v11;
        Swift::Int v64 = v16;
        do
        {
          if (v64 != --v63)
          {
            if (!v161) {
              goto LABEL_155;
            }
            uint64_t v65 = v161 + v62;
            uint64_t v66 = v161 + v61;
            sub_1001146DC((long long *)(v161 + v62), (uint64_t)&v188);
            uint64_t v67 = *(void *)(v66 + 32);
            long long v68 = *(_OWORD *)(v66 + 16);
            *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
            *(_OWORD *)(v65 + 16) = v68;
            *(void *)(v65 + 32) = v67;
            sub_1001146DC(&v188, v66);
            uint64_t v16 = v165;
          }
          ++v64;
          v61 -= 40;
          v62 += 40;
        }
        while (v64 < v63);
      }
    }
LABEL_42:
    if (v11 >= v6) {
      goto LABEL_63;
    }
    if (__OFSUB__(v11, v16)) {
      goto LABEL_148;
    }
    if (v11 - v16 >= v160) {
      goto LABEL_63;
    }
    if (__OFADD__(v16, v160)) {
      goto LABEL_151;
    }
    uint64_t v69 = (void (*)(char *, uint64_t))(v16 + v160 >= v6 ? v6 : v16 + v160);
    if ((uint64_t)v69 < v16) {
      break;
    }
    if ((void (*)(char *, uint64_t))v11 == v69) {
      goto LABEL_63;
    }
    uint64_t v70 = 40 * v11 - 40;
    v162 = v69;
    while (2)
    {
      uint64_t v164 = v70;
      uint64_t v72 = v70;
      Swift::Int v172 = v11;
      while (1)
      {
        uint64_t v182 = v16;
        uint64_t v73 = *v191;
        uint64_t v181 = v72;
        uint64_t v74 = v73 + v72;
        sub_1000D4774(v73 + v72 + 40, (uint64_t)&v188);
        sub_1000D4774(v74, (uint64_t)&v185);
        uint64_t v75 = v189;
        uint64_t v76 = v190;
        v77 = sub_1000A6B78(&v188, v189);
        long long v78 = *(void (**)(void, void))(v76 + 16);
        long long v79 = v173;
        v177 = (void (*)(uint64_t, void))v77;
        v180 = (void (*)(uint64_t, uint64_t))v75;
        v179 = (void (*)(uint64_t, void))v76;
        v178 = v78;
        v78(v75, v76);
        uint64_t v80 = v186;
        uint64_t v81 = v187;
        int v82 = sub_1000A6B78(&v185, v186);
        v83 = *(void (**)(void, uint64_t))(v81 + 16);
        id v84 = v170;
        v174 = v82;
        v176 = (void (*)(void, uint64_t))v80;
        v175 = v83;
        v83(v80, v81);
        char v85 = static Date.< infix(_:_:)();
        id v86 = *v169;
        uint64_t v87 = v171;
        (*v169)(v84, v171);
        v86(v79, v87);
        if ((v85 & 1) == 0) {
          break;
        }
        sub_10009B1B8((uint64_t)&v185);
        sub_10009B1B8((uint64_t)&v188);
        Swift::Int v71 = v172;
LABEL_59:
        uint64_t v95 = *v191;
        if (!*v191) {
          goto LABEL_153;
        }
        uint64_t v96 = v181;
        uint64_t v97 = v95 + v181;
        sub_1001146DC((long long *)(v95 + v181 + 40), (uint64_t)&v188);
        long long v98 = *(_OWORD *)(v97 + 16);
        *(_OWORD *)(v97 + 40) = *(_OWORD *)v97;
        *(_OWORD *)(v97 + 56) = v98;
        *(void *)(v97 + 72) = *(void *)(v97 + 32);
        sub_1001146DC(&v188, v97);
        uint64_t v72 = v96 - 40;
        uint64_t v16 = v182 + 1;
        if (v71 == v182 + 1) {
          goto LABEL_53;
        }
      }
      v178(v180, v179);
      v175(v176, v81);
      char v88 = static Date.> infix(_:_:)();
      v86(v84, v87);
      v86(v79, v87);
      if ((v88 & 1) == 0)
      {
        uint64_t v89 = v189;
        uint64_t v90 = v190;
        sub_1000A6B78(&v188, v189);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v90 + 8))(v184, v89, v90);
        uint64_t v91 = AnyHashable.hashValue.getter();
        sub_10008E17C((uint64_t)v184);
        uint64_t v92 = v186;
        uint64_t v93 = v187;
        sub_1000A6B78(&v185, v186);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v93 + 8))(v183, v92, v93);
        uint64_t v94 = AnyHashable.hashValue.getter();
        sub_10008E17C((uint64_t)v183);
        sub_10009B1B8((uint64_t)&v185);
        sub_10009B1B8((uint64_t)&v188);
        Swift::Int v71 = v172;
        if (v91 >= v94) {
          goto LABEL_53;
        }
        goto LABEL_59;
      }
      sub_10009B1B8((uint64_t)&v185);
      sub_10009B1B8((uint64_t)&v188);
      Swift::Int v71 = v172;
LABEL_53:
      Swift::Int v11 = v71 + 1;
      uint64_t v70 = v164 + 40;
      uint64_t v16 = v165;
      if ((void (*)(char *, uint64_t))v11 != v162) {
        continue;
      }
      break;
    }
    Swift::Int v11 = (Swift::Int)v162;
LABEL_63:
    if (v11 < v16) {
      goto LABEL_143;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      long long v13 = v163;
    }
    else {
      long long v13 = sub_10051F91C(0, *((void *)v163 + 2) + 1, 1, v163);
    }
    unint64_t v100 = *((void *)v13 + 2);
    unint64_t v99 = *((void *)v13 + 3);
    unint64_t v15 = v100 + 1;
    uint64_t v101 = v165;
    if (v100 >= v99 >> 1)
    {
      v151 = sub_10051F91C((char *)(v99 > 1), v100 + 1, 1, v13);
      uint64_t v101 = v165;
      long long v13 = v151;
    }
    *((void *)v13 + 2) = v15;
    int64_t v102 = v13 + 32;
    v103 = &v13[16 * v100 + 32];
    *(void *)v103 = v101;
    *((void *)v103 + 1) = v11;
    if (v100)
    {
      uint64_t v10 = v167;
      long long v14 = v173;
      while (1)
      {
        unint64_t v104 = v15 - 1;
        if (v15 >= 4)
        {
          uint64_t v109 = &v102[16 * v15];
          uint64_t v110 = *((void *)v109 - 8);
          uint64_t v111 = *((void *)v109 - 7);
          BOOL v115 = __OFSUB__(v111, v110);
          uint64_t v112 = v111 - v110;
          if (v115) {
            goto LABEL_132;
          }
          uint64_t v114 = *((void *)v109 - 6);
          uint64_t v113 = *((void *)v109 - 5);
          BOOL v115 = __OFSUB__(v113, v114);
          uint64_t v107 = v113 - v114;
          char v108 = v115;
          if (v115) {
            goto LABEL_133;
          }
          unint64_t v116 = v15 - 2;
          v117 = &v102[16 * v15 - 32];
          uint64_t v119 = *(void *)v117;
          uint64_t v118 = *((void *)v117 + 1);
          BOOL v115 = __OFSUB__(v118, v119);
          uint64_t v120 = v118 - v119;
          if (v115) {
            goto LABEL_135;
          }
          BOOL v115 = __OFADD__(v107, v120);
          uint64_t v121 = v107 + v120;
          if (v115) {
            goto LABEL_138;
          }
          if (v121 >= v112)
          {
            v139 = &v102[16 * v104];
            uint64_t v141 = *(void *)v139;
            uint64_t v140 = *((void *)v139 + 1);
            BOOL v115 = __OFSUB__(v140, v141);
            uint64_t v142 = v140 - v141;
            if (v115) {
              goto LABEL_142;
            }
            BOOL v132 = v107 < v142;
            goto LABEL_101;
          }
        }
        else
        {
          if (v15 != 3)
          {
            uint64_t v133 = *((void *)v13 + 4);
            uint64_t v134 = *((void *)v13 + 5);
            BOOL v115 = __OFSUB__(v134, v133);
            uint64_t v126 = v134 - v133;
            char v127 = v115;
            goto LABEL_95;
          }
          uint64_t v106 = *((void *)v13 + 4);
          uint64_t v105 = *((void *)v13 + 5);
          BOOL v115 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          char v108 = v115;
        }
        if (v108) {
          goto LABEL_134;
        }
        unint64_t v116 = v15 - 2;
        uint64_t v122 = &v102[16 * v15 - 32];
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *((void *)v122 + 1);
        BOOL v125 = __OFSUB__(v123, v124);
        uint64_t v126 = v123 - v124;
        char v127 = v125;
        if (v125) {
          goto LABEL_137;
        }
        long long v128 = &v102[16 * v104];
        uint64_t v130 = *(void *)v128;
        uint64_t v129 = *((void *)v128 + 1);
        BOOL v115 = __OFSUB__(v129, v130);
        uint64_t v131 = v129 - v130;
        if (v115) {
          goto LABEL_140;
        }
        if (__OFADD__(v126, v131)) {
          goto LABEL_141;
        }
        if (v126 + v131 >= v107)
        {
          BOOL v132 = v107 < v131;
LABEL_101:
          if (v132) {
            unint64_t v104 = v116;
          }
          goto LABEL_103;
        }
LABEL_95:
        if (v127) {
          goto LABEL_136;
        }
        v135 = &v102[16 * v104];
        uint64_t v137 = *(void *)v135;
        uint64_t v136 = *((void *)v135 + 1);
        BOOL v115 = __OFSUB__(v136, v137);
        uint64_t v138 = v136 - v137;
        if (v115) {
          goto LABEL_139;
        }
        if (v138 < v126) {
          goto LABEL_14;
        }
LABEL_103:
        unint64_t v143 = v104 - 1;
        if (v104 - 1 >= v15)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*v191) {
          goto LABEL_154;
        }
        v144 = v13;
        v145 = &v102[16 * v143];
        uint64_t v146 = *(void *)v145;
        v147 = &v102[16 * v104];
        uint64_t v148 = *((void *)v147 + 1);
        uint64_t v149 = v168;
        sub_100508680((char *)(*v191 + 40 * *(void *)v145), (char *)(*v191 + 40 * *(void *)v147), (char *)(*v191 + 40 * v148), v166);
        if (v149)
        {
LABEL_125:
          swift_bridgeObjectRelease();
          v167[2] = 0;
          return swift_bridgeObjectRelease();
        }
        if (v148 < v146) {
          goto LABEL_129;
        }
        if (v104 > *((void *)v144 + 2)) {
          goto LABEL_130;
        }
        *(void *)v145 = v146;
        *(void *)&v102[16 * v143 + 8] = v148;
        unint64_t v150 = *((void *)v144 + 2);
        if (v104 >= v150) {
          goto LABEL_131;
        }
        uint64_t v168 = 0;
        unint64_t v15 = v150 - 1;
        memmove(&v102[16 * v104], v147 + 16, 16 * (v150 - 1 - v104));
        long long v13 = v144;
        *((void *)v144 + 2) = v150 - 1;
        uint64_t v10 = v167;
        long long v14 = v173;
        if (v150 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v15 = 1;
    uint64_t v10 = v167;
    long long v14 = v173;
LABEL_14:
    Swift::Int v6 = v191[1];
    long long v12 = v169;
    if (v11 >= v6) {
      goto LABEL_113;
    }
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005081F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v59 = a4;
  uint64_t v47 = a1;
  uint64_t v50 = type metadata accessor for Date();
  uint64_t v6 = __chkstk_darwin(v50);
  uint64_t v8 = &v45[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = __chkstk_darwin(v6);
  long long v12 = &v45[-v11];
  uint64_t v51 = a3;
  uint64_t v46 = a2;
  if (a3 != a2)
  {
    uint64_t v49 = (void (**)(unsigned char *, uint64_t))(v10 + 8);
    uint64_t v13 = 40 * v51 - 40;
LABEL_6:
    uint64_t v14 = v47;
    uint64_t v48 = v13;
    uint64_t v15 = v13;
    while (1)
    {
      uint64_t v69 = v14;
      uint64_t v16 = *v59;
      uint64_t v60 = v15;
      uint64_t v17 = v16 + v15;
      sub_1000D4774(v16 + v15 + 40, (uint64_t)&v66);
      sub_1000D4774(v17, (uint64_t)v63);
      uint64_t v18 = v67;
      uint64_t v19 = v68;
      uint64_t v20 = sub_1000A6B78(&v66, v67);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 16);
      uint64_t v55 = v20;
      uint64_t v58 = v18;
      uint64_t v57 = v19;
      uint64_t v56 = v21;
      v21(v18, v19);
      uint64_t v22 = v64;
      uint64_t v23 = v65;
      uint64_t v24 = sub_1000A6B78(v63, v64);
      uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v23 + 16);
      uint64_t v52 = v24;
      uint64_t v54 = v22;
      int v53 = v25;
      v25(v22, v23);
      char v26 = static Date.< infix(_:_:)();
      Class v27 = *v49;
      char v28 = v8;
      uint64_t v29 = v8;
      uint64_t v30 = v50;
      (*v49)(v28, v50);
      v27(v12, v30);
      if (v26)
      {
        sub_10009B1B8((uint64_t)v63);
        uint64_t result = sub_10009B1B8((uint64_t)&v66);
        uint64_t v8 = v29;
        uint64_t v31 = v69;
        uint64_t v32 = v60;
      }
      else
      {
        v56(v58, v57);
        v53(v54, v23);
        char v33 = static Date.> infix(_:_:)();
        uint64_t v34 = v29;
        v27(v29, v30);
        v27(v12, v30);
        if (v33)
        {
          sub_10009B1B8((uint64_t)v63);
          uint64_t result = sub_10009B1B8((uint64_t)&v66);
          uint64_t v8 = v29;
LABEL_5:
          uint64_t v13 = v48 + 40;
          if (++v51 == v46) {
            return result;
          }
          goto LABEL_6;
        }
        uint64_t v35 = v67;
        uint64_t v36 = v68;
        sub_1000A6B78(&v66, v67);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v36 + 8))(v62, v35, v36);
        uint64_t v37 = AnyHashable.hashValue.getter();
        sub_10008E17C((uint64_t)v62);
        uint64_t v38 = v64;
        uint64_t v39 = v65;
        sub_1000A6B78(v63, v64);
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v61, v38, v39);
        uint64_t v40 = AnyHashable.hashValue.getter();
        sub_10008E17C((uint64_t)v61);
        sub_10009B1B8((uint64_t)v63);
        uint64_t result = sub_10009B1B8((uint64_t)&v66);
        BOOL v41 = v37 < v40;
        uint64_t v8 = v34;
        uint64_t v31 = v69;
        uint64_t v32 = v60;
        if (!v41) {
          goto LABEL_5;
        }
      }
      uint64_t v42 = *v59;
      if (!*v59) {
        break;
      }
      uint64_t v43 = v42 + v32;
      sub_1001146DC((long long *)(v42 + v32 + 40), (uint64_t)&v66);
      long long v44 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)(v43 + 40) = *(_OWORD *)v43;
      *(_OWORD *)(v43 + 56) = v44;
      *(void *)(v43 + 72) = *(void *)(v43 + 32);
      uint64_t result = sub_1001146DC(&v66, v43);
      uint64_t v15 = v32 - 40;
      uint64_t v14 = v31 + 1;
      if (v51 == v14) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100508680(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v94 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v94 - 8);
  uint64_t v9 = __chkstk_darwin(v94);
  uint64_t v93 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)&v79 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = (a2 - a1) / 40;
  id v84 = a3;
  uint64_t v14 = a3 - a2;
  uint64_t v15 = v14 / 40;
  uint64_t v106 = a1;
  uint64_t v105 = a4;
  if (v13 >= v14 / 40)
  {
    if (v14 >= -39)
    {
      if (a4 != a2 || &a2[40 * v15] <= a4) {
        memmove(a4, a2, 40 * v15);
      }
      long long v44 = &a4[40 * v15];
      unint64_t v104 = v44;
      uint64_t v106 = a2;
      if (v14 >= 40 && a1 < a2)
      {
        uint64_t v80 = (void (**)(char *, uint64_t))(v8 + 8);
        uint64_t v45 = v84 - 40;
        int v82 = a4;
        uint64_t v81 = (void (**)(char *, uint64_t))a1;
        do
        {
          uint64_t v91 = (uint64_t)v45;
          sub_1000D4774((uint64_t)(v44 - 40), (uint64_t)&v101);
          uint64_t v95 = a2;
          uint64_t v90 = a2 - 40;
          sub_1000D4774((uint64_t)(a2 - 40), (uint64_t)v98);
          uint64_t v48 = v102;
          uint64_t v49 = v103;
          uint64_t v50 = sub_1000A6B78(&v101, v102);
          uint64_t v51 = (void (*)(void, void *))v49[2];
          uint64_t v52 = v92;
          id v86 = (void (*)(uint64_t, void))v50;
          uint64_t v89 = (void (*)(uint64_t, char *))v48;
          char v88 = v49;
          uint64_t v87 = v51;
          v51(v48, v49);
          uint64_t v53 = v99;
          uint64_t v54 = v100;
          uint64_t v55 = sub_1000A6B78(v98, v99);
          uint64_t v56 = *(char **)(v54 + 16);
          uint64_t v57 = v93;
          unint64_t v83 = (unint64_t)v55;
          char v85 = (void *)v53;
          id v84 = v56;
          ((void (*)(uint64_t, uint64_t))v56)(v53, v54);
          char v58 = static Date.< infix(_:_:)();
          uint64_t v59 = *v80;
          uint64_t v60 = v94;
          (*v80)(v57, v94);
          v59(v52, v60);
          if (v58)
          {
            BOOL v61 = 1;
          }
          else
          {
            v87(v89, v88);
            ((void (*)(void *, uint64_t))v84)(v85, v54);
            char v62 = static Date.> infix(_:_:)();
            v59(v57, v60);
            v59(v52, v60);
            if (v62)
            {
              BOOL v61 = 0;
            }
            else
            {
              uint64_t v63 = v102;
              uint64_t v64 = v103;
              sub_1000A6B78(&v101, v102);
              ((void (*)(void *__return_ptr, uint64_t, void *))v64[1])(v97, v63, v64);
              uint64_t v65 = AnyHashable.hashValue.getter();
              sub_10008E17C((uint64_t)v97);
              uint64_t v66 = v99;
              uint64_t v67 = v100;
              sub_1000A6B78(v98, v99);
              (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v67 + 8))(v96, v66, v67);
              uint64_t v68 = AnyHashable.hashValue.getter();
              sub_10008E17C((uint64_t)v96);
              BOOL v61 = v65 < v68;
            }
          }
          uint64_t v69 = v95;
          unint64_t v70 = (unint64_t)v82;
          Swift::Int v71 = v81;
          unint64_t v72 = v91;
          unint64_t v73 = v91 + 40;
          sub_10009B1B8((uint64_t)v98);
          sub_10009B1B8((uint64_t)&v101);
          if (v61)
          {
            uint64_t v74 = v90;
            if ((char *)v73 != v69 || v72 >= (unint64_t)v69)
            {
              long long v46 = *(_OWORD *)v90;
              long long v47 = *((_OWORD *)v90 + 1);
              *(void *)(v72 + 32) = *((void *)v90 + 4);
              *(_OWORD *)unint64_t v72 = v46;
              *(_OWORD *)(v72 + 16) = v47;
            }
            v106 -= 40;
            long long v44 = v104;
            if ((unint64_t)v104 <= v70) {
              break;
            }
          }
          else
          {
            uint64_t v75 = v104;
            long long v44 = v104 - 40;
            v104 -= 40;
            if (v73 < (unint64_t)v75 || v72 >= (unint64_t)v75 || (_OWORD *)v73 != v75)
            {
              long long v76 = *(_OWORD *)v44;
              long long v77 = *(_OWORD *)((char *)v75 - 24);
              *(void *)(v72 + 32) = *((void *)v75 - 1);
              *(_OWORD *)unint64_t v72 = v76;
              *(_OWORD *)(v72 + 16) = v77;
            }
            uint64_t v74 = v69;
            if ((unint64_t)v44 <= v70) {
              break;
            }
          }
          uint64_t v45 = (char *)(v72 - 40);
          a2 = v74;
        }
        while (v74 > (char *)v71);
      }
LABEL_50:
      sub_100520164((void **)&v106, (const void **)&v105, &v104);
      return 1;
    }
  }
  else if (v12 >= -39)
  {
    if (a4 != a1 || &a1[40 * v13] <= a4) {
      memmove(a4, a1, 40 * v13);
    }
    unint64_t v83 = (unint64_t)&a4[40 * v13];
    unint64_t v104 = (char *)v83;
    if (v12 >= 40 && a2 < v84)
    {
      uint64_t v81 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v16 = v92;
      while (1)
      {
        uint64_t v95 = a2;
        sub_1000D4774((uint64_t)a2, (uint64_t)&v101);
        sub_1000D4774((uint64_t)a4, (uint64_t)v98);
        uint64_t v17 = v102;
        uint64_t v18 = (char *)v103;
        uint64_t v19 = sub_1000A6B78(&v101, v102);
        uint64_t v20 = (void (*)(uint64_t, char *))*((void *)v18 + 2);
        char v88 = v19;
        uint64_t v91 = v17;
        uint64_t v90 = v18;
        uint64_t v89 = v20;
        v20(v17, v18);
        uint64_t v22 = v99;
        uint64_t v21 = v100;
        uint64_t v23 = sub_1000A6B78(v98, v99);
        uint64_t v24 = *(void (**)(uint64_t, void))(v21 + 16);
        uint64_t v25 = v93;
        char v85 = v23;
        uint64_t v87 = (void (*)(void, void *))v21;
        id v86 = v24;
        v24(v22, v21);
        char v26 = static Date.< infix(_:_:)();
        Class v27 = *v81;
        uint64_t v28 = v94;
        (*v81)(v25, v94);
        v27(v16, v28);
        if (v26)
        {
          sub_10009B1B8((uint64_t)v98);
          sub_10009B1B8((uint64_t)&v101);
          uint64_t v29 = v95;
        }
        else
        {
          v89(v91, v90);
          v86(v22, v87);
          char v34 = static Date.> infix(_:_:)();
          v27(v25, v28);
          v27(v16, v28);
          if (v34)
          {
            sub_10009B1B8((uint64_t)v98);
            sub_10009B1B8((uint64_t)&v101);
            uint64_t v29 = v95;
LABEL_18:
            uint64_t v30 = v106;
            BOOL v41 = v105 + 40;
            if (v106 != v105 || v106 >= v41)
            {
              long long v42 = *(_OWORD *)v105;
              long long v43 = *((_OWORD *)v105 + 1);
              *((void *)v106 + 4) = *((void *)v105 + 4);
              *uint64_t v30 = v42;
              v30[1] = v43;
            }
            uint64_t v105 = v41;
            unint64_t v31 = (unint64_t)v29;
            goto LABEL_23;
          }
          uint64_t v35 = v102;
          uint64_t v36 = v103;
          sub_1000A6B78(&v101, v102);
          ((void (*)(void *__return_ptr, uint64_t, void *))v36[1])(v97, v35, v36);
          uint64_t v37 = AnyHashable.hashValue.getter();
          sub_10008E17C((uint64_t)v97);
          uint64_t v38 = v99;
          uint64_t v39 = v100;
          sub_1000A6B78(v98, v99);
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v39 + 8))(v96, v38, v39);
          uint64_t v40 = AnyHashable.hashValue.getter();
          sub_10008E17C((uint64_t)v96);
          sub_10009B1B8((uint64_t)v98);
          sub_10009B1B8((uint64_t)&v101);
          uint64_t v29 = v95;
          if (v37 >= v40) {
            goto LABEL_18;
          }
        }
        uint64_t v30 = v106;
        unint64_t v31 = (unint64_t)(v29 + 40);
        if (v106 >= v29 && (unint64_t)v106 < v31 && v106 == v29)
        {
          uint64_t v30 = v29;
        }
        else
        {
          long long v32 = *(_OWORD *)v29;
          long long v33 = *((_OWORD *)v29 + 1);
          *((void *)v106 + 4) = *((void *)v29 + 4);
          *uint64_t v30 = v32;
          v30[1] = v33;
        }
LABEL_23:
        uint64_t v106 = (char *)v30 + 40;
        a4 = v105;
        if ((unint64_t)v105 < v83)
        {
          a2 = (char *)v31;
          if (v31 < (unint64_t)v84) {
            continue;
          }
        }
        goto LABEL_50;
      }
    }
    goto LABEL_50;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100508F9C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_100052C70((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1001146DC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100509034(uint64_t a1, uint64_t a2)
{
  sub_1000CBC00(a1, (uint64_t)v18, &qword_10071A530);
  sub_1000CBC00(a2, (uint64_t)v17, &qword_10071A530);
  sub_1000CBC00((uint64_t)v18, (uint64_t)v10, &qword_10071A530);
  sub_1000CBC00((uint64_t)v17, (uint64_t)&v12, &qword_10071A530);
  if (!v11)
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
    sub_1000CBBA4((uint64_t)v18, &qword_10071A530);
    if (!*((void *)&v13 + 1))
    {
      sub_1000CBBA4((uint64_t)v10, &qword_10071A530);
      goto LABEL_7;
    }
LABEL_12:
    sub_1000CBBA4((uint64_t)v10, &qword_10071A578);
LABEL_13:
    char v6 = 0;
    return v6 & 1;
  }
  sub_1000CBC00((uint64_t)v10, (uint64_t)v9, &qword_10071A530);
  if (!*((void *)&v13 + 1))
  {
    sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
    sub_1000CBBA4((uint64_t)v18, &qword_10071A530);
    sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10071A1A0);
    goto LABEL_12;
  }
  v8[2] = v14;
  v8[3] = v15;
  v8[4] = v16;
  v8[0] = v12;
  v8[1] = v13;
  char v4 = static AnyHashable.== infix(_:_:)();
  sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_10071A1A0);
  sub_1000CBBA4((uint64_t)v17, &qword_10071A530);
  sub_1000CBBA4((uint64_t)v18, &qword_10071A530);
  sub_1000CBBA4((uint64_t)v9, (uint64_t *)&unk_10071A1A0);
  sub_1000CBBA4((uint64_t)v10, &qword_10071A530);
  if ((v4 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((static AnyHashable.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v5 = type metadata accessor for DOCProgressCollectionListViewController.NullProgress(0);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  char v6 = _s5Files37DOCProgressProvidingOperationIconTypeO21__derived_enum_equalsySbAC_ACtFZ_0(a1 + *(int *)(v5 + 32), a2 + *(int *)(v5 + 32));
  return v6 & 1;
}

void *sub_100509250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = _swiftEmptyArrayStorage;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    uint64_t v3 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = 0;
    uint64_t v30 = a1 + 32;
    uint64_t v50 = (void *)v47 + 1;
    uint64_t v28 = a2 + 32;
    uint64_t v25 = a2 + 72;
    uint64_t v26 = a3 + 32;
    uint64_t v29 = _swiftEmptyArrayStorage;
LABEL_8:
    sub_1000CBC00(v30 + 80 * v5, (uint64_t)v46, (uint64_t *)&unk_10071A1A0);
    uint64_t v7 = *((void *)&v48 + 1);
    uint64_t v6 = v48;
    sub_1000A6B78(v50, v48);
    uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 24))(v6, v7);
    LOBYTE(v6) = [v8 isCancelled];

    if (v6) {
      goto LABEL_6;
    }
    long long v9 = v48;
    sub_1000A6B78(v50, v48);
    (*(void (**)(long long *__return_ptr, void, void))(*((void *)&v9 + 1) + 8))(&v34, v9, *((void *)&v9 + 1));
    uint64_t v10 = *(void *)(v4 + 16);
    if (!v10) {
      goto LABEL_19;
    }
    sub_10008E1D0(v28, (uint64_t)v45);
    swift_bridgeObjectRetain();
    char v11 = static AnyHashable.== infix(_:_:)();
    sub_10008E17C((uint64_t)v45);
    if (v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
    if (v10 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    uint64_t v12 = v25;
    uint64_t v13 = 1;
    while (1)
    {
      uint64_t result = (void *)sub_10008E1D0(v12, (uint64_t)v45);
      uint64_t v15 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      char v16 = static AnyHashable.== infix(_:_:)();
      sub_10008E17C((uint64_t)v45);
      if (v16)
      {
        uint64_t v4 = a2;
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
LABEL_36:
        sub_10008E17C((uint64_t)&v34);
        sub_1000CBC00((uint64_t)v46, (uint64_t)v45, (uint64_t *)&unk_10071A1A0);
LABEL_5:
        sub_1000CBBA4((uint64_t)v45, (uint64_t *)&unk_10071A1A0);
LABEL_6:
        sub_1000CBBA4((uint64_t)v46, (uint64_t *)&unk_10071A1A0);
        goto LABEL_7;
      }
      ++v13;
      v12 += 40;
      if (v15 == v10)
      {
        uint64_t v4 = a2;
        swift_bridgeObjectRelease();
        uint64_t v3 = a3;
LABEL_19:
        sub_10008E17C((uint64_t)&v34);
        sub_1000CBC00((uint64_t)v46, (uint64_t)v45, (uint64_t *)&unk_10071A1A0);
        sub_1000CBC00((uint64_t)v45, (uint64_t)v44, (uint64_t *)&unk_10071A1A0);
        uint64_t v17 = *(void *)(v3 + 16);
        if (!v17) {
          goto LABEL_30;
        }
        swift_bridgeObjectRetain();
        uint64_t v18 = v26;
        while (2)
        {
          sub_1000CBC00(v18, (uint64_t)&v34, &qword_10071A530);
          sub_1000CBC00((uint64_t)v44, (uint64_t)&v39, &qword_10071A530);
          if (!*((void *)&v35 + 1))
          {
            if (!*((void *)&v40 + 1))
            {
              sub_1000CBBA4((uint64_t)&v34, &qword_10071A530);
LABEL_4:
              swift_bridgeObjectRelease();
              sub_1000CBBA4((uint64_t)v44, &qword_10071A530);
              goto LABEL_5;
            }
            goto LABEL_22;
          }
          sub_1000CBC00((uint64_t)&v34, (uint64_t)v33, &qword_10071A530);
          if (!*((void *)&v40 + 1))
          {
            sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10071A1A0);
LABEL_22:
            sub_1000CBBA4((uint64_t)&v34, &qword_10071A578);
            goto LABEL_23;
          }
          v32[2] = v41;
          v32[3] = v42;
          v32[4] = v43;
          v32[0] = v39;
          v32[1] = v40;
          char v19 = static AnyHashable.== infix(_:_:)();
          sub_1000CBBA4((uint64_t)v32, (uint64_t *)&unk_10071A1A0);
          sub_1000CBBA4((uint64_t)v33, (uint64_t *)&unk_10071A1A0);
          sub_1000CBBA4((uint64_t)&v34, &qword_10071A530);
          if (v19) {
            goto LABEL_4;
          }
LABEL_23:
          v18 += 80;
          if (--v17) {
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
LABEL_30:
        sub_1000CBBA4((uint64_t)v44, &qword_10071A530);
        sub_1000CBBA4((uint64_t)v45, (uint64_t *)&unk_10071A1A0);
        long long v36 = v47[0];
        long long v37 = v47[1];
        long long v38 = v48;
        long long v34 = v46[0];
        long long v35 = v46[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_100191300(0, v29[2] + 1, 1);
        }
        uint64_t v20 = v49;
        unint64_t v22 = v49[2];
        unint64_t v21 = v49[3];
        if (v22 >= v21 >> 1)
        {
          sub_100191300(v21 > 1, v22 + 1, 1);
          uint64_t v20 = v49;
        }
        v20[2] = v22 + 1;
        uint64_t v29 = v20;
        uint64_t v23 = &v20[10 * v22];
        v23[3] = v35;
        v23[4] = v36;
        v23[5] = v37;
        v23[6] = v38;
        v23[2] = v34;
        uint64_t v4 = a2;
LABEL_7:
        if (++v5 == v31) {
          return v29;
        }
        goto LABEL_8;
      }
    }
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1005096C0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100509700()
{
  return sub_1005052FC(*(void *)(v0 + 24), 1);
}

uint64_t sub_10050972C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071A530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100509794()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005097CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1005097D4()
{
  uint64_t v1 = sub_1000CBE70(&qword_10071A580);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  if (*(void *)(v0 + 40))
  {
    sub_10009B1B8(v0 + 16);
    sub_10009B1B8(v0 + 56);
  }
  uint64_t v5 = (v3 + 96) & ~v3;
  uint64_t v6 = (v4 + v3 + v5) & ~v3;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v0 + v5, v1);
  v7(v0 + v6, v1);

  return _swift_deallocObject(v0, v6 + v4, v3 | 7);
}

uint64_t sub_1005098DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071A530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100509944(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000CBE70(&qword_10071A580);

  return sub_1005050E8(a1, a2, a3, v3 + 16);
}

void sub_100509A00()
{
}

void sub_100509A08(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_100509A10()
{
  swift_release();
  sub_10009B1B8(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100509A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  return sub_100504824(a1, a2, a3, a4, *(void *)(v4 + 16), (void *)(v4 + 24));
}

uint64_t sub_100509A5C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100509A94(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v51 = a4;
  uint64_t v50 = a3;
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v45 = *(void (***)(char *, uint64_t))(v47 - 8);
  __chkstk_darwin(v47);
  long long v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10071A520);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_1000A6B78(a1, v14);
  char v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  [v16 cancel];

  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_1000A6B78(a1, v17);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 8))(v53, v17, v18);
  sub_1000D4774((uint64_t)a1, (uint64_t)&v54);
  id v19 = [self mainRunLoop];
  double Current = CFAbsoluteTimeGetCurrent();
  uint64_t v21 = OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable;
  uint64_t v48 = a2;
  unint64_t v22 = *(void **)(a2 + OBJC_IVAR____TtC5Files39DOCProgressCollectionListViewController_diffable);
  if (v22)
  {
    double v23 = Current;
    id v24 = v22;
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    uint64_t v25 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v13, v7);
    uint64_t v27 = *(void *)(v25 + 16);
    if (!v27)
    {
LABEL_7:

      swift_bridgeObjectRelease();
LABEL_19:
      v50(1);
      return sub_1000CBBA4((uint64_t)v53, (uint64_t *)&unk_10071A1A0);
    }
    id v49 = v19;
    uint64_t v28 = v25 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1000CBC00(v28, (uint64_t)v52, (uint64_t *)&unk_10071A1A0);
      char v29 = static AnyHashable.== infix(_:_:)();
      sub_1000CBBA4((uint64_t)v52, (uint64_t *)&unk_10071A1A0);
      if (v29) {
        break;
      }
      v28 += 80;
      if (!--v27)
      {
LABEL_6:

        swift_bridgeObjectRelease_n();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n();
    if (CFAbsoluteTimeGetCurrent() - v23 > 0.5)
    {
LABEL_9:

      goto LABEL_19;
    }
    long long v44 = v10;
    uint64_t v30 = v45 + 1;
    uint64_t v31 = &selRef_cellForItemAtIndexPath_;
    id v19 = v49;
    ++v45;
    while (1)
    {
      long long v32 = v46;
      Date.init(timeIntervalSinceNow:)();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*v30)(v32, v47);
      [v19 v31[341]:isa];

      long long v34 = *(void **)(v48 + v21);
      if (!v34) {
        break;
      }
      id v35 = v34;
      long long v36 = v44;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v37 = NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
      v26(v36, v7);
      uint64_t v38 = *(void *)(v37 + 16);
      if (!v38) {
        goto LABEL_7;
      }
      uint64_t v39 = v37 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1000CBC00(v39, (uint64_t)v52, (uint64_t *)&unk_10071A1A0);
        char v40 = static AnyHashable.== infix(_:_:)();
        sub_1000CBBA4((uint64_t)v52, (uint64_t *)&unk_10071A1A0);
        if (v40) {
          break;
        }
        v39 += 80;
        if (!--v38) {
          goto LABEL_6;
        }
      }
      swift_bridgeObjectRelease_n();
      CFAbsoluteTime v41 = CFAbsoluteTimeGetCurrent();
      id v19 = v49;
      uint64_t v30 = v45;
      uint64_t v31 = &selRef_cellForItemAtIndexPath_;
      if (v41 - v23 > 0.5) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100509FB0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100509FE8()
{
  sub_100503624(*(void **)(v0 + 16));
}

uint64_t sub_100509FF0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10050A000()
{
}

uint64_t sub_10050A008(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[3];
    if (v7)
    {
      uint64_t v8 = a2[4];
      *(void *)(a1 + 24) = v7;
      *(void *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      long long v9 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(v4 + 64) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    }
    else
    {
      long long v11 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v11;
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      long long v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
    }
    long long v13 = *(_OWORD *)(a2 + 13);
    *(_OWORD *)(v4 + 104) = v13;
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(v4 + 80, (uint64_t)(a2 + 10));
    uint64_t v14 = a3[6];
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[7];
    uint64_t v19 = a3[8];
    uint64_t v20 = *(void **)((char *)a2 + v18);
    *(void *)(v4 + v18) = v20;
    uint64_t v21 = (void *)(v4 + v19);
    unint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = type metadata accessor for DOCProgressProvidingOperationIconType();
    id v24 = v20;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v27 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v27;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v26 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t sub_10050A290(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_10009B1B8(a1);
    sub_10009B1B8(a1 + 40);
  }
  sub_10009B1B8(a1 + 80);
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  uint64_t v6 = a1 + a2[8];
  type metadata accessor for DOCProgressProvidingOperationIconType();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v8 = type metadata accessor for UTType();
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v6, v8);
  }
  return result;
}

uint64_t sub_10050A3C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    long long v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    long long v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    long long v10 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
  }
  long long v11 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 80, a2 + 80);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a3[8];
  uint64_t v18 = *(void **)(a2 + v16);
  *(void *)(a1 + v16) = v18;
  uint64_t v19 = (void *)(a1 + v17);
  uint64_t v20 = (void *)(a2 + v17);
  uint64_t v21 = type metadata accessor for DOCProgressProvidingOperationIconType();
  id v22 = v18;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v25 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v25;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v24 = type metadata accessor for UTType();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10050A600(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v6)
    {
      sub_1002B25D4((uint64_t *)a1, (uint64_t *)a2);
      sub_1002B25D4((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
    }
    else
    {
      sub_1000CBBA4(a1, (uint64_t *)&unk_10071A1A0);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v8 = *(_OWORD *)(a2 + 64);
      long long v10 = *(_OWORD *)(a2 + 16);
      long long v9 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v8;
      *(_OWORD *)(a1 + 16) = v10;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v11 = *(_OWORD *)(a2 + 16);
    long long v12 = *(_OWORD *)(a2 + 32);
    long long v13 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *(_OWORD *)(a1 + 16) = v11;
    *(_OWORD *)(a1 + 32) = v12;
  }
  sub_1002B25D4((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = *(void **)(a2 + v18);
  uint64_t v20 = *(void **)(a1 + v18);
  *(void *)(a1 + v18) = v19;
  id v21 = v19;

  if (a1 != a2)
  {
    uint64_t v22 = a3[8];
    uint64_t v23 = (void *)(a1 + v22);
    uint64_t v24 = (void *)(a2 + v22);
    sub_1003CD0C0(a1 + v22);
    uint64_t v25 = type metadata accessor for DOCProgressProvidingOperationIconType();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v27 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10050A888(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(_OWORD *)(a1 + 96) = v9;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for DOCProgressProvidingOperationIconType();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v18 = type metadata accessor for UTType();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10050A9D4(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 24))
  {
    if (*(void *)(a2 + 24))
    {
      sub_10009B1B8(a1);
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      sub_10009B1B8(a1 + 40);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      goto LABEL_6;
    }
    sub_1000CBBA4(a1, (uint64_t *)&unk_10071A1A0);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
LABEL_6:
  sub_10009B1B8(a1 + 80);
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = *(void **)(a1 + v14);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);

  if (a1 != a2)
  {
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (const void *)(a2 + v16);
    sub_1003CD0C0(a1 + v16);
    uint64_t v19 = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = type metadata accessor for UTType();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10050ABA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050ABB4);
}

uint64_t sub_10050ABB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 104);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10050ACE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050ACF4);
}

uint64_t sub_10050ACF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 104) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for DOCProgressProvidingOperationIconType();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_10050AE20()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DOCProgressProvidingOperationIconType();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050AF08()
{
  return sub_1000BAE94(&qword_10071A650, (void (*)(uint64_t))type metadata accessor for DOCProgressCollectionListViewController.NullProgress);
}

uint64_t sub_10050AF50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10050AFC0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v14 = a1;
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v7);
  *(_WORD *)(v1 + 16) = 512;
  *(unsigned char *)(v1 + 18) = 2;
  sub_10011029C();
  uint64_t v15 = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  static DispatchQoS.unspecified.getter();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)(v1 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v8 = (void *)(v1 + OBJC_IVAR____TtC5Files29DOCProviderDomainStateManager_domainStatePollingInterval);
  *uint64_t v8 = 2;
  uint64_t v9 = enum case for DispatchTimeInterval.seconds(_:);
  uint64_t v10 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  *(void *)(v2 + 24) = v14;
  return v2;
}

uint64_t sub_10050B27C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v4 + 32);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  v16[3] = a2;
  v16[4] = a3;
  v16[5] = a1;
  aBlock[4] = sub_10050C004;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B44E0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v18 = a1;
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  swift_release();
  return swift_release();
}

void sub_10050B574(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = *(void **)(Strong + 24);
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v8;
    v10[3] = a2;
    v10[4] = a3;
    v10[5] = a4;
    aBlock[4] = sub_10050C014;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10050BD94;
    void aBlock[3] = &unk_1006B4530;
    uint64_t v11 = _Block_copy(aBlock);
    id v12 = v9;
    swift_retain();
    swift_retain();
    id v13 = a4;
    swift_release();
    [v12 domainStateWithCompletionHandler:v11];
    _Block_release(v11);
    swift_release();
  }
}

uint64_t sub_10050B6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v41 = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v43 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchTime();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v33 - v20;
  id v39 = [*(id *)(a3 + 24) disconnectionState];
  if (([*(id *)(a3 + 24) isiCloudDriveProvider] & 1) != 0 || a1 == 2)
  {
    *(unsigned char *)(a3 + 16) = 1;
    uint64_t v37 = *(void *)(a3 + 32);
    static DispatchTime.now()();
    long long v36 = v21;
    + infix(_:_:)();
    uint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v33 = v16 + 8;
    uint64_t v38 = v22;
    v22(v19, v15);
    uint64_t v23 = (void *)swift_allocObject();
    uint64_t v24 = v41;
    v23[2] = a3;
    v23[3] = v24;
    v23[4] = a5;
    uint64_t v50 = sub_10050C0B0;
    uint64_t v51 = v23;
    aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256;
    uint64_t v48 = sub_1000666D8;
    id v49 = &unk_1006B45D0;
    long long v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v45 = _swiftEmptyArrayStorage;
    sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    uint64_t v35 = v15;
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v25 = v36;
    uint64_t v26 = v34;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v43);
    v38(v25, v35);
    swift_release();
  }
  if (a1 == 2) {
    char v27 = 2;
  }
  else {
    char v27 = 1;
  }
  BOOL v28 = v39 != (id)1;
  if (v39 == (id)1) {
    char v29 = v27;
  }
  else {
    char v29 = 0;
  }
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v41;
  *(void *)(v30 + 24) = a5;
  *(unsigned char *)(v30 + 32) = v29;
  *(void *)(v30 + 40) = a3;
  uint64_t v50 = sub_10050C060;
  uint64_t v51 = (void *)v30;
  aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  uint64_t v48 = sub_1000666D8;
  id v49 = &unk_1006B4580;
  uint64_t v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_1000BAAEC((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v43);
  uint64_t result = swift_release();
  *(unsigned char *)(a3 + 17) = v28;
  *(unsigned char *)(a3 + 18) = a1 == 2;
  return result;
}

void sub_10050BC68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    sub_10011029C();
    id v5 = (id)static OS_dispatch_queue.main.getter();
    sub_10050B27C(v5, a2, a3);
  }
}

uint64_t sub_10050BCF8(void (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6 = [*(id *)(a4 + 24) localizedDisconnectionBannerText];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v10 = 0;
  }
  a1(a3, v8, v10);

  return swift_bridgeObjectRelease();
}

void sub_10050BD94(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(uint64_t, id))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, v6);
  swift_release();
}

uint64_t sub_10050BE0C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files29DOCProviderDomainStateManager_domainStatePollingInterval;
  uint64_t v2 = type metadata accessor for DispatchTimeInterval();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10050BEBC()
{
  return type metadata accessor for DOCProviderDomainStateManager();
}

uint64_t type metadata accessor for DOCProviderDomainStateManager()
{
  uint64_t result = qword_10071A690;
  if (!qword_10071A690) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10050BF10()
{
  uint64_t result = type metadata accessor for DispatchTimeInterval();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050BFC8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10050C004()
{
  sub_10050B574(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10050C014(uint64_t a1, uint64_t a2)
{
  return sub_10050B6B0(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_10050C020()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10050C060()
{
  return sub_10050BCF8(*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_10050C070()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10050C0B0()
{
  sub_10050BC68(v0[2], v0[3], v0[4]);
}

id sub_10050C0D4(uint64_t a1, uint64_t a2)
{
  id v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  id v6 = objc_allocWithZone(v5);
  swift_retain();
  uint64_t v7 = (char *)v6;
  UUID.init()();
  uint64_t v8 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
  *(void *)uint64_t v8 = DOCSplitBrowserViewController.didCommitPreview(of:);
  *((void *)v8 + 1) = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(void *)uint64_t v9 = a1;
  *((void *)v9 + 1) = a2;
  swift_retain();

  v14.receiver = v7;
  v14.super_class = v5;
  id v10 = [super init];
  swift_release();
  uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess();
  id v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return v12;
}

id sub_10050C218(uint64_t a1, uint64_t a2)
{
  id v5 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
  id v6 = objc_allocWithZone(v5);
  swift_retain();
  uint64_t v7 = (char *)v6;
  UUID.init()();
  uint64_t v8 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
  *(void *)uint64_t v8 = a1;
  *((void *)v8 + 1) = a2;
  uint64_t v9 = &v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  swift_retain();

  v14.receiver = v7;
  v14.super_class = v5;
  [super init];
  swift_release();
  uint64_t v11 = (void *)(v2 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess();
  id v12 = v10;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  return v12;
}

id sub_10050C37C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNodeObserverSubscriber(0);
  return [super dealloc];
}

id sub_10050C540()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_10019E3AC();
  v3.receiver = v0;
  v3.super_class = ObjectType;
  [super dealloc];
}

id sub_10050C6F8(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  id v12 = (void *)a6(a5, v10);

  swift_release();

  return v12;
}

void sub_10050C798(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70((uint64_t *)&unk_100706730);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

uint64_t sub_10050C8DC(uint64_t a1)
{
  unint64_t v2 = sub_10007CC5C(a1);
  objc_super v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v5 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        uint64_t v8 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v8 = (char *)*(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      if (*(void *)&v8[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock]) {
        (*(void (**)(unint64_t))&v8[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock])(v2);
      }
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_10050CA10(uint64_t a1, uint64_t a2)
{
  return sub_10050E3F8(a2);
}

uint64_t sub_10050CA20(unint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v3 + 56) = 0;
  *(void *)(v3 + 16) = a1;
  *(double *)(v3 + 64) = a3;
  if (!(a1 >> 62))
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v7) {
      goto LABEL_3;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_18:
    *(void *)(v4 + 32) = v22;
    swift_bridgeObjectRelease();
    return v4;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  if (!v7) {
    goto LABEL_17;
  }
LABEL_3:
  BOOL v28 = _swiftEmptyArrayStorage;
  uint64_t result = sub_10019109C(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    char v26 = a2 & 1;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      uint64_t v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCNodeObserver());
      swift_getObjectType();
      id v11 = (void *)swift_unknownObjectRetain();
      id v12 = sub_10050E01C(v11, 0, v26, v10);
      uint64_t v13 = swift_allocObject();
      swift_weakInit();
      objc_super v14 = (objc_class *)type metadata accessor for DOCNodeObserverSubscriber(0);
      id v15 = objc_allocWithZone(v14);
      swift_retain_n();
      uint64_t v16 = (char *)v15;
      UUID.init()();
      uint64_t v17 = (uint64_t (**)())&v16[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
      *uint64_t v17 = sub_10050E6F8;
      v17[1] = (uint64_t (*)())v13;
      uint64_t v18 = &v16[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_didFinishGatheringBlock];
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      swift_retain();

      v27.receiver = v16;
      v27.super_class = v14;
      [super init];
      swift_release();
      uint64_t v20 = &v12[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
      swift_beginAccess();
      id v21 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v20 & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_endAccess();
      swift_unknownObjectRelease();
      swift_release_n();
      uint64_t v22 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10019109C(0, v22[2] + 1, 1);
        uint64_t v22 = v28;
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1)
      {
        sub_10019109C(v23 > 1, v24 + 1, 1);
        uint64_t v22 = v28;
      }
      ++v9;
      v22[2] = v24 + 1;
      uint64_t v25 = &v22[2 * v24];
      v25[4] = v21;
      v25[5] = v12;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10050CD54()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&aBlock[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011029C();
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  aBlock[4] = sub_10050E700;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B4658;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_10050D004()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10050D708();
    return swift_release();
  }
  return result;
}

uint64_t DOCMultiNodeObserver.deinit()
{
  sub_10050D648();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v34 = *(void *)(v1 + 16);
  if (!v34)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v0;
  }
  uint64_t v32 = v0;
  uint64_t v33 = v1 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v4 = v33 + 16 * v2;
    uint64_t v6 = *(void **)v4;
    uint64_t v5 = *(char **)(v4 + 8);
    uint64_t v7 = (unint64_t *)&v5[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers];
    swift_beginAccess();
    unint64_t v8 = *v7;
    uint64_t v35 = v5;
    long long v36 = v6;
    if (*v7 >> 62)
    {
      id v29 = v6;
      uint64_t v30 = v5;
      swift_bridgeObjectRetain();
      uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
      if (!v9) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v10 = v6;
      id v11 = v5;
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_3;
      }
    }
    id v12 = (v8 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
        : *(id *)(v8 + 32);
    uint64_t v13 = v12;
    objc_super v14 = v36;
    char v15 = static UUID.== infix(_:_:)();

    if ((v15 & 1) == 0) {
      break;
    }
    unint64_t v16 = 0;
LABEL_21:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    unint64_t v22 = *v7;
    int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
    *uint64_t v7 = v22;
    if (!isUniquelyReferenced_nonNull_bridgeObject
      || (v22 & 0x8000000000000000) != 0
      || (v22 & 0x4000000000000000) != 0)
    {
      unint64_t v22 = sub_1000BC2A8(v22);
      *uint64_t v7 = v22;
    }
    uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
    unint64_t v25 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v16 >= v25) {
      goto LABEL_34;
    }
    unint64_t v26 = v25 - 1;
    uint64_t v27 = v25 - 1 - v16;
    if (v27 < 0) {
      goto LABEL_35;
    }
    uint64_t v28 = v24 + 8 * v16;
    uint64_t v3 = *(void **)(v28 + 32);
    memmove((void *)(v28 + 32), (const void *)(v28 + 40), 8 * v27);
    *(void *)(v24 + 16) = v26;
    specialized Array._endMutation()();
    swift_endAccess();

LABEL_4:
    ++v2;

    if (v2 == v34)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v0 = v32;
      goto LABEL_32;
    }
  }
  if (v9 == 1)
  {
LABEL_3:

    swift_bridgeObjectRelease();
    uint64_t v3 = v5;
    goto LABEL_4;
  }
  uint64_t v17 = 5;
  while (1)
  {
    unint64_t v16 = v17 - 4;
    if ((v8 & 0xC000000000000001) != 0) {
      id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v18 = *(id *)(v8 + 8 * v17);
    }
    id v19 = v18;
    char v20 = static UUID.== infix(_:_:)();

    if (v20)
    {
      objc_super v14 = v36;
      goto LABEL_21;
    }
    uint64_t v21 = v17 - 3;
    if (__OFADD__(v16, 1)) {
      break;
    }
    ++v17;
    if (v21 == v9) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t DOCMultiNodeObserver.__deallocating_deinit()
{
  DOCMultiNodeObserver.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10050D390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  uint64_t v8 = v7 - 8;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  objc_super v14 = (char *)&v23 - v13;
  UUID.init()();
  char v15 = &v14[*(int *)(v8 + 28)];
  *(void *)char v15 = a1;
  *((void *)v15 + 1) = a2;
  sub_10050E710((uint64_t)v14, (uint64_t)v12);
  unint64_t v16 = (unint64_t *)(v3 + 48);
  swift_beginAccess();
  unint64_t v17 = *(void *)(v3 + 48);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 48) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v17 = sub_10018FD4C(0, *(void *)(v17 + 16) + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  unint64_t v20 = *(void *)(v17 + 16);
  unint64_t v19 = *(void *)(v17 + 24);
  if (v20 >= v19 >> 1)
  {
    unint64_t v17 = sub_10018FD4C(v19 > 1, v20 + 1, 1, v17);
    *unint64_t v16 = v17;
  }
  *(void *)(v17 + 16) = v20 + 1;
  sub_10050E774((uint64_t)v12, v17+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v20);
  swift_endAccess();
  uint64_t v21 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 16))(a3, v14, v21);
  return sub_10050E7D8((uint64_t)v14);
}

void sub_10050D588()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0)
  {
    *(unsigned char *)(v0 + 40) = 1;
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = (void **)(v1 + 40);
      do
      {
        uint64_t v4 = *v3;
        id v5 = *(v3 - 1);
        id v6 = v4;
        sub_100034EF8();

        v3 += 2;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_10050D648()
{
  if (*(unsigned char *)(v0 + 40) == 1)
  {
    *(unsigned char *)(v0 + 40) = 0;
    uint64_t v1 = *(void *)(v0 + 32);
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = (void **)(v1 + 40);
      do
      {
        uint64_t v4 = *v3;
        id v5 = *(v3 - 1);
        id v6 = v4;
        sub_10019E3AC();

        v3 += 2;
        --v2;
      }
      while (v2);
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_10050D708()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v16 = (char *)&v20 - v15;
  if ((*(unsigned char *)(v1 + 56) & 1) == 0)
  {
    *(unsigned char *)(v1 + 56) = 1;
    sub_10011029C();
    uint64_t v22 = v6;
    uint64_t v20 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v13, v9);
    uint64_t v17 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = sub_10050E708;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B4680;
    id v18 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    unint64_t v19 = (void *)v20;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    return ((uint64_t (*)(char *, uint64_t))v21)(v16, v9);
  }
  return result;
}

uint64_t sub_10050DA80()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    if (*(unsigned char *)(result + 56) == 1)
    {
      uint64_t v2 = *(void *)(*(void *)(result + 32) + 16);
      if (v2)
      {
        swift_bridgeObjectRetain();
        specialized ContiguousArray.reserveCapacity(_:)();
        uint64_t v3 = 40;
        do
        {
          swift_unknownObjectRetain();
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
          v3 += 16;
          --v2;
        }
        while (v2);
        swift_bridgeObjectRelease();
      }
      *(void *)(v1 + 16) = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v4 = *(void *)(v1 + 48);
      uint64_t v5 = *(void *)(v4 + 16);
      if (v5)
      {
        uint64_t v6 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
        uint64_t v7 = v4
           + ((*(unsigned __int8 *)(*(void *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v6 - 8) + 80));
        uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 72);
        swift_bridgeObjectRetain();
        do
        {
          (*(void (**)(uint64_t))(v7 + *(int *)(v6 + 20)))(v1);
          v7 += v8;
          --v5;
        }
        while (v5);
        swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v1 + 56) = 0;
    }
    return swift_release();
  }
  return result;
}

void *sub_10050DC50(void *a1)
{
  return sub_10018EEFC(0, a1[2], 0, a1);
}

void *sub_10050DC64(void *a1)
{
  return sub_10018F840(0, a1[2], 0, a1);
}

uint64_t sub_10050DC78()
{
  return type metadata accessor for DOCNodeObserverSubscriber(0);
}

uint64_t type metadata accessor for DOCNodeObserverSubscriber(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_10071A7E8);
}

uint64_t sub_10050DCA0()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCNodeObserver()
{
  return self;
}

uint64_t type metadata accessor for DOCMultiNodeObserver()
{
  return self;
}

uint64_t sub_10050DD90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10050DDA4);
}

uint64_t sub_10050DDA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10050DE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10050DE78);
}

uint64_t sub_10050DE78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for DOCMultiNodeObserver.Subscriber(uint64_t a1)
{
  return sub_10009E984(a1, qword_10071AA20);
}

char *sub_10050DF54(uint64_t a1)
{
  return sub_10018F9B8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10050DF68(unint64_t a1)
{
  return sub_1000B7F44(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_10050DF7C(void *a1)
{
  return sub_10018FADC(0, a1[2], 0, a1);
}

uint64_t sub_10050DF90(unint64_t a1)
{
  return sub_10018EF08(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_10050DFA4(void *a1)
{
  return sub_10018FE90(0, a1[2], 0, a1);
}

void *sub_10050DFB8(void *a1)
{
  return sub_1001900DC(0, a1[2], 0, a1);
}

void *sub_10050DFCC(void *a1)
{
  return sub_1001900C8(0, a1[2], 0, a1);
}

void *sub_10050DFE0(void *a1)
{
  return sub_1001904CC(0, a1[2], 0, a1);
}

void *sub_10050DFF4(void *a1)
{
  return sub_100190610(0, a1[2], 0, a1);
}

void *sub_10050E008(void *a1)
{
  return sub_100190860(0, a1[2], 0, a1);
}

char *sub_10050E01C(void *a1, void *a2, char a3, char *a4)
{
  uint64_t v31 = a2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = type metadata accessor for DOCNodeType();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v30 - v12;
  *(void *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers] = _swiftEmptyArrayStorage;
  uint64_t v14 = OBJC_IVAR____TtC5Files15DOCNodeObserver_node;
  *(void *)&a4[OBJC_IVAR____TtC5Files15DOCNodeObserver_node] = a1;
  uint64_t v15 = a4;
  swift_unknownObjectRetain();
  if ((a3 & 1) != 0
    && (DOCNode.nodeType.getter(),
        (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, enum case for DOCNodeType.FINode(_:), v7),
        char v16 = static DOCNodeType.== infix(_:_:)(),
        uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8),
        v17(v11, v7),
        v17(v13, v7),
        (v16 & 1) != 0))
  {
    unsigned __int8 v18 = [a1 isFolder];
    uint64_t v20 = v31;
    unint64_t v19 = (objc_class *)ObjectType;
    if (v18) {
      unsigned int v21 = 1;
    }
    else {
      unsigned int v21 = [a1 isPackage];
    }
  }
  else
  {
    unsigned int v21 = 0;
    uint64_t v20 = v31;
    unint64_t v19 = (objc_class *)ObjectType;
  }
  v15[OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving] = v21;
  uint64_t v22 = type metadata accessor for DOCNodeCollection();
  uint64_t v23 = *(void **)&a4[v14];
  uint64_t v24 = swift_getObjectType();
  id v25 = v20;
  swift_unknownObjectRetain();
  char v34 = v21 ^ 1;
  uint64_t v26 = 4;
  if (!v21) {
    uint64_t v26 = 0;
  }
  *(void *)&v15[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection] = sub_10001A2F0(v23, 0, v20, v26 | ((unint64_t)(v21 ^ 1u) << 32), v22, v24);

  v33.receiver = v15;
  v33.super_class = v19;
  uint64_t v27 = (char *)[super init];
  *(void *)(*(void *)&v27[OBJC_IVAR____TtC5Files15DOCNodeObserver_collection]
            + OBJC_IVAR____TtC5Files17DOCNodeCollection_delegate
            + 8) = &off_1006B45F8;
  swift_unknownObjectWeakAssign();
  uint64_t v28 = v27;
  sub_100034EF8();

  swift_unknownObjectRelease();
  return v28;
}

uint64_t sub_10050E2E4(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 += OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_uuid;
  while (1)
  {
    id v6 = (a1 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(a1 + 8 * v5 + 32);
    uint64_t v7 = v6;
    char v8 = static UUID.== infix(_:_:)();

    if (v8) {
      return v5;
    }
    uint64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4) {
      return 0;
    }
  }
}

uint64_t sub_10050E3F8(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_node) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v4 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_3:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        uint64_t v7 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        uint64_t v7 = (char *)*(id *)(v3 + 8 * v6 + 32);
      }
      char v8 = v7;
      ++v6;
      uint64_t v9 = *(void (**)(uint64_t))&v7[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
      swift_retain();
      uint64_t v10 = swift_unknownObjectRetain();
      v9(v10);

      swift_release();
      swift_unknownObjectRelease();
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10050E550(uint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_deepObserving) == 1
    && *(unsigned char *)(result + OBJC_IVAR____TtC5Files17DOCNodeCollection_type + 16) == 1)
  {
    uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files15DOCNodeObserver_subscribers);
    swift_beginAccess();
    uint64_t v3 = *v2;
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v4 = result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_5:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v5 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0) {
            uint64_t v6 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v6 = (char *)*(id *)(v3 + 8 * v5 + 32);
          }
          uint64_t v7 = v6;
          ++v5;
          char v8 = *(void (**)(uint64_t))&v6[OBJC_IVAR____TtC5Files25DOCNodeObserverSubscriber_updateBlock];
          swift_retain();
          uint64_t v9 = swift_unknownObjectRetain();
          v8(v9);

          swift_release();
          swift_unknownObjectRelease();
        }
        while (v4 != v5);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10050E6C0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050E6F8()
{
  return sub_10050CD54();
}

uint64_t sub_10050E700()
{
  return sub_10050D004();
}

uint64_t sub_10050E708()
{
  return sub_10050DA80();
}

uint64_t sub_10050E710(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050E774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050E7D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCMultiNodeObserver.Subscriber(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10050E834()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10050E86C(uint64_t a1)
{
  sub_10050C798(a1, *(void *)(v1 + 16));
}

uint64_t UITraitCollection.tabBarBlurAvoidanceTopOffset.getter()
{
  sub_100034698();

  return UITraitCollection.subscript.getter();
}

BOOL UITabBarController.usingVariableBlurBottomBar.getter()
{
  uint64_t v1 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  id v2 = v0;
  id v3 = [v1 tabBar];
  id v4 = [v3 _backgroundView];

  if (!v4) {
    return 0;
  }
  type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  BOOL v5 = swift_dynamicCastClass() != 0;

  return v5;
}

void sub_10050E984()
{
  uint64_t v1 = type metadata accessor for UITraitOverrides();
  __chkstk_darwin(v1 - 8);
  id v2 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  id v3 = v0;
  id v4 = [v2 tabBar];
  BOOL v5 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  id v6 = v3;
  id v7 = [v5 tabBar];
  id v8 = [v7 _backgroundView];

  if (!v8) {
    goto LABEL_6;
  }
  type metadata accessor for DOCTabBarVariableBlurBackgroundView();
  uint64_t v9 = swift_dynamicCastClass();
  if (!v9)
  {

    goto LABEL_6;
  }
  uint64_t v10 = v9;
  [v4 _setBackgroundView:0];
  if (*(void *)(v10 + OBJC_IVAR____TtC5Files35DOCTabBarVariableBlurBackgroundView_gradientView))
  {
    swift_retain();
    sub_1002DE540();

    swift_release();
LABEL_6:
    UIViewController.traitOverrides.getter();
    sub_100034698();
    UITraitOverrides.subscript.setter();
    UIViewController.traitOverrides.setter();

    return;
  }
  __break(1u);
}

uint64_t *UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.unsafeMutableAddressor()
{
  return &static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name;
}

uint64_t static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.setter(uint64_t a1, void *a2)
{
  static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name = a1;
  off_10071AA60 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static UITraitCollection.DOCTabBarBlurAvoidanceTrait.name.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t *UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.unsafeMutableAddressor()
{
  if (qword_1007052A0 != -1) {
    swift_once();
  }
  return &static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
}

double static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.getter()
{
  if (qword_1007052A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return *(double *)&static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue;
}

uint64_t static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.setter(double a1)
{
  if (qword_1007052A0 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue = *(void *)&a1;
  return result;
}

uint64_t (*static UITraitCollection.DOCTabBarBlurAvoidanceTrait.defaultValue.modify())()
{
  if (qword_1007052A0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

double DOCAutoBarHidingTabBarController._edgeInsets(forChildViewController:insetsAreAbsolute:)(uint64_t a1, uint64_t a2)
{
  v7.super_class = (Class)DOCAutoBarHidingTabBarController;
  [super _edgeInsetsForChildViewController:a1 insetsAreAbsolute:a2];
  double v4 = v3;
  id v5 = [v2 traitCollection];
  sub_100034698();
  UITraitCollection.subscript.getter();

  return v4;
}

ValueMetadata *type metadata accessor for UITraitCollection.DOCTabBarBlurAvoidanceTrait()
{
  return &type metadata for UITraitCollection.DOCTabBarBlurAvoidanceTrait;
}

id sub_10050F058(void *a1)
{
  double v3 = &v1[OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewDelegate];
  *(void *)double v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = OBJC_IVAR____TtC5FilesP33_D3104C987618D68A12FF2C3DB05A577232DOCGoToSuggestionsCollectionView_focusableCollectionViewState;
  type metadata accessor for DOCFocusableCollectionViewState();
  uint64_t v5 = swift_allocObject();
  uint64_t v6 = v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForMostRecentlySelectedItem;
  uint64_t v7 = type metadata accessor for IndexPath();
  id v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_indexPathForSelectionExtensionStart, 1, 1, v7);
  *(unsigned char *)(v5 + OBJC_IVAR____TtC5Files31DOCFocusableCollectionViewState_hasFocus) = 0;
  *(void *)&v1[v4] = v5;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for DOCGoToSuggestionsCollectionView();
  [super initWithCoder:a1];

  return v9;
}

id sub_10050F1AC()
{
  return sub_100512C70(0, type metadata accessor for DOCGoToSuggestionsCollectionView);
}

uint64_t type metadata accessor for DOCGoToSuggestionsCollectionView()
{
  return self;
}

uint64_t sub_10050F238()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10050F26C()
{
  return swift_retain();
}

uint64_t sub_10050F27C(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICellConfigurationState();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  objc_super v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v23 - v13;
  static UIBackgroundConfiguration.clear()();
  v27[3] = v4;
  v27[4] = (uint64_t)&protocol witness table for UICellConfigurationState;
  uint64_t v15 = sub_100052C70(v27);
  uint64_t v24 = v5;
  char v16 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v16(v15, a1, v4);
  UIBackgroundConfiguration.updated(for:)();
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  uint64_t v25 = v8;
  uint64_t v23 = v17;
  v17(v11, v8);
  sub_10009B1B8((uint64_t)v27);
  LOBYTE(v11) = UICellConfigurationState.isSelected.getter();
  v16((uint64_t *)v7, a1, v4);
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
LABEL_4:
    id v19 = [self systemGray4Color];
    UIBackgroundConfiguration.backgroundColor.setter();
    goto LABEL_5;
  }
  char v18 = UICellConfigurationState.isHighlighted.getter();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v4);
  if (v18) {
    goto LABEL_4;
  }
LABEL_5:
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v26, v14, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, v21);
  UICollectionViewCell.backgroundConfiguration.setter();
  return v23(v14, v21);
}

id sub_10050F6B0()
{
  return sub_100512C70(0, type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell);
}

id sub_10050F6E8(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void))
{
  v12.receiver = a1;
  v12.super_class = (Class)a7(0);
  return [super initWithFrame:a2, a3, a4, a5];
}

id sub_10050F778(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v6.receiver = a1;
  v6.super_class = (Class)a4(0);
  return [super initWithCoder:a3];
}

id sub_10050F7C8()
{
  return sub_100512C70(0, type metadata accessor for DOCGoToSuggestionsViewController.HeaderView);
}

id sub_10050F7E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  double v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v1 collectionView];
  if (result)
  {
    objc_super v12 = result;
    id v13 = [result indexPathsForSelectedItems];

    if (!v13)
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
LABEL_8:
      id result = (id)sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_1007069A0);
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = 0;
      return result;
    }
    uint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v14 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v5, v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1) {
      goto LABEL_8;
    }
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_1005109D4(a1);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10050FA60()
{
  uint64_t v0 = type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements();
  __chkstk_darwin(v0);
  uint64_t v1 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)aBlock - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v5 = swift_allocBox();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v1);
  UICollectionLayoutListConfiguration.init(appearance:)();
  id v6 = [self clearColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10051394C(&qword_10071AB40, (void (*)(uint64_t))&type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements);
  sub_1000CBE70(&qword_10071AB48);
  sub_1005136A0();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  UICollectionLayoutListConfiguration.contentHuggingElements.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v5;
  id v9 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_10051377C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000148B8;
  void aBlock[3] = &unk_1006B4950;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v11 = [v9 initWithSectionProvider:v10];
  _Block_release(v10);
  swift_release();
  swift_release();
  swift_release();
  return v11;
}

void sub_10050FD9C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for UIListSeparatorConfiguration.Visibility();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UIListSeparatorConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  if (!Strong)
  {
    v13(a2, a1, v8);
    return;
  }
  uint64_t v14 = (unsigned __int8 *)Strong;
  uint64_t v33 = v5;
  uint64_t v34 = v8;
  ((void (*)(char *, uint64_t))v13)(v11, a1);
  UIListSeparatorConfiguration.topSeparatorInsets.getter();
  UIListSeparatorConfiguration.bottomSeparatorInsets.getter();
  id v15 = [v14 view];
  if (!v15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  char v16 = v15;
  uint64_t v17 = a2;
  [v15 directionalLayoutMargins];

  id v18 = [v14 view];
  if (!v18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  id v19 = v18;
  [v18 directionalLayoutMargins];

  int v20 = v14[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering];
  uint64_t v21 = IndexPath.row.getter();
  if (v20 == 1)
  {
    uint64_t v22 = v17;
    uint64_t v23 = v34;
    if (!v21)
    {
      (*(void (**)(char *, void, uint64_t))(v33 + 104))(v7, enum case for UIListSeparatorConfiguration.Visibility.hidden(_:), v4);
      UIListSeparatorConfiguration.topSeparatorVisibility.setter();
    }
    goto LABEL_16;
  }
  uint64_t v22 = v17;
  uint64_t v23 = v34;
  if (v21)
  {
LABEL_11:
    uint64_t v26 = IndexPath.row.getter();
    id v27 = [v14 collectionView];
    if (!v27)
    {
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v28 = v27;
    id v29 = (char *)[v27 numberOfItemsInSection:IndexPath.section.getter()];

    if (!__OFSUB__(v29, 1))
    {
      if ((char *)v26 != v29 - 1)
      {
LABEL_16:
        UIListSeparatorConfiguration.topSeparatorInsets.setter();
        UIListSeparatorConfiguration.bottomSeparatorInsets.setter();

        (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v22, v11, v23);
        return;
      }
      id v30 = [v14 view];
      if (v30)
      {
        uint64_t v31 = v30;
        [v30 directionalLayoutMargins];

        goto LABEL_16;
      }
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_18;
  }
  id v24 = [v14 view];
  if (v24)
  {
    uint64_t v25 = v24;
    [v24 directionalLayoutMargins];

    goto LABEL_11;
  }
LABEL_22:
  __break(1u);
}

uint64_t sub_100510180(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_projectBox();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    objc_super v12 = (void *)Strong;
    uint64_t v14 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 88);
    id v13 = *(void **)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 96);
    uint64_t v28 = *(void *)(Strong + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 104);
    id v27 = v13;
    id v26 = v14;
  }
  else
  {
    id v26 = 0;
    id v27 = 0;
    uint64_t v28 = 0;
  }
  swift_beginAccess();
  id v15 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (v15
    && (char v16 = v15[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering],
        v15,
        (v16 & 1) != 0))
  {
    uint64_t v17 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
  }
  else
  {
    uint64_t v17 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.supplementary(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *v17, v6);
  swift_beginAccess();
  UICollectionLayoutListConfiguration.headerMode.setter();
  UICollectionLayoutListConfiguration.headerTopPadding.setter();
  swift_endAccess();
  sub_10009E6C4(0, &qword_10070AED0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  id v18 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v19 = [v18 boundarySupplementaryItems];
  sub_10009E6C4(0, (unint64_t *)&unk_10070AE00);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v20 >> 62))
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v21) {
      goto LABEL_10;
    }
LABEL_17:

    swift_bridgeObjectRelease_n();
    return (uint64_t)v18;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v21 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_10:
  if (v21 >= 1)
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((v20 & 0xC000000000000001) != 0) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v24 = *(id *)(v20 + 8 * i + 32);
      }
      uint64_t v25 = v24;
      [v24 setPinToVisibleBounds:0 v26, v27, v28];
    }
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

void sub_10051060C()
{
  v21.receiver = v0;
  v21.super_class = (Class)type metadata accessor for DOCGoToSuggestionsViewController();
  [super viewDidLoad];
  id v1 = [v0 collectionView];
  if (!v1)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = v1;
  type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v4 = String._bridgeToObjectiveC()();
  [v2 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v4];

  id v5 = [v0 collectionView];
  if (!v5)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = v5;
  type metadata accessor for DOCGoToSuggestionsViewController.HeaderView();
  uint64_t v7 = swift_getObjCClassFromMetadata();
  uint64_t v8 = UICollectionElementKindSectionHeader;
  NSString v9 = String._bridgeToObjectiveC()();
  [v6 registerClass:v7 forSupplementaryViewOfKind:v8 withReuseIdentifier:v9];

  id v10 = [v0 collectionView];
  if (!v10)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v11 = v10;
  [v10 setShowsVerticalScrollIndicator:0];

  id v12 = [v0 collectionView];
  if (!v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v13 = v12;
  [v12 setShowsHorizontalScrollIndicator:0];

  id v14 = [v0 collectionView];
  if (!v14)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v15 = v14;
  [v14 setPreservesSuperviewLayoutMargins:1];

  id v16 = [v0 collectionView];
  if (!v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v17 = v16;
  [v16 setAllowsSelection:1];

  id v18 = [v0 collectionView];
  if (v18)
  {
    id v19 = v18;
    id v20 = [self clearColor];
    [v19 setBackgroundColor:v20];

    return;
  }
LABEL_15:
  __break(1u);
}

unint64_t sub_1005109D4@<X0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering) == 1)
  {
    unint64_t result = IndexPath.row.getter();
    if ((result & 0x8000000000000000) == 0)
    {
      unint64_t result = IndexPath.row.getter();
      uint64_t v4 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
      if ((int64_t)result < *(void *)(*(void *)(v1
                                                          + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions)
                                              + 16))
      {
        unint64_t result = IndexPath.row.getter();
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else
        {
          uint64_t v5 = *(void *)(v1 + v4);
          if (result < *(void *)(v5 + 16))
          {
            uint64_t v6 = v5 + 40 * result + 32;
            return sub_1000D4774(v6, a1);
          }
        }
        __break(1u);
        goto LABEL_24;
      }
    }
LABEL_21:
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    return result;
  }
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0) {
    goto LABEL_21;
  }
  unint64_t result = IndexPath.section.getter();
  uint64_t v7 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections;
  if ((int64_t)result >= *(void *)(*(void *)(v1
                                                       + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections)
                                           + 16))
    goto LABEL_21;
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = *(void *)(v1 + v7);
  if (result >= *(void *)(v8 + 16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(v8 + 16 * result + 40);
  swift_bridgeObjectRetain();
  if (IndexPath.row.getter() < 0 || IndexPath.row.getter() >= *(void *)(v9 + 16))
  {
    unint64_t result = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (result >= *(void *)(v9 + 16))
  {
LABEL_27:
    __break(1u);
    return result;
  }
  sub_1000D4774(v9 + 40 * result + 32, a1);

  return swift_bridgeObjectRelease();
}

void sub_100510B60()
{
  int v0 = 0;
  unint64_t v1 = 0;
  uint64_t v2 = _swiftEmptyArrayStorage;
  while (v1 < 2)
  {
    int v29 = v0;
    int v3 = *((unsigned __int8 *)&off_10068A828 + v1 + 32);
    uint64_t v4 = *(void *)(v27 + v26[1]);
    long long v36 = _swiftEmptyArrayStorage;
    uint64_t v5 = *(void *)(v4 + 16);
    swift_bridgeObjectRetain();
    if (v5)
    {
      uint64_t v28 = v2;
      unint64_t v6 = 0;
      uint64_t v7 = v4 + 32;
      while (v6 < *(void *)(v4 + 16))
      {
        sub_1000D4774(v7, (uint64_t)&v33);
        uint64_t v8 = v34;
        uint64_t v9 = v35;
        sub_1000A6B78(&v33, v34);
        char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
        if (v10 == 2 || v3 == ((v10 & 1) == 0))
        {
          sub_10009B1B8((uint64_t)&v33);
        }
        else
        {
          sub_1001146DC(&v33, (uint64_t)v30);
          id v12 = v36;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100190F84(0, v12[2] + 1, 1);
            id v12 = v36;
          }
          unint64_t v14 = v12[2];
          unint64_t v13 = v12[3];
          if (v14 >= v13 >> 1) {
            sub_100190F84(v13 > 1, v14 + 1, 1);
          }
          uint64_t v15 = v31;
          uint64_t v16 = v32;
          uint64_t v17 = sub_10003CCE8((uint64_t)v30, v31);
          double v18 = __chkstk_darwin(v17);
          id v20 = (char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, double))(v21 + 16))(v20, v18);
          sub_100508F9C(v14, (uint64_t)v20, (uint64_t *)&v36, v15, v16);
          sub_10009B1B8((uint64_t)v30);
        }
        ++v6;
        v7 += 40;
        if (v5 == v6)
        {
          uint64_t v22 = v36;
          uint64_t v2 = v28;
          goto LABEL_21;
        }
      }
      __break(1u);
      break;
    }
    uint64_t v22 = _swiftEmptyArrayStorage;
LABEL_21:
    swift_bridgeObjectRelease();
    if (v22[2])
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_10018FFB8(0, v2[2] + 1, 1, v2);
      }
      unint64_t v24 = v2[2];
      unint64_t v23 = v2[3];
      if (v24 >= v23 >> 1) {
        uint64_t v2 = sub_10018FFB8((void *)(v23 > 1), v24 + 1, 1, v2);
      }
      v2[2] = v24 + 1;
      uint64_t v25 = &v2[2 * v24];
      *((unsigned char *)v25 + 32) = v3;
      v25[5] = v22;
    }
    else
    {
      swift_release();
    }
    int v0 = 1;
    unint64_t v1 = &_mh_execute_header.magic + 1;
    if (v29)
    {
      *(void *)(v27 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections) = v2;
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

id sub_100510E88(void *a1, double a2, double a3)
{
  if (([a1 isSymbolImage] & 1) != 0
    || (([a1 size], v7 == a2) ? (BOOL v8 = v6 == a3) : (BOOL v8 = 0), v8))
  {
    return a1;
  }
  else
  {
    id v9 = [v3 traitCollection];
    id v10 = [self formatForTraitCollection:v9];

    id v11 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v10 format:a2];
    uint64_t v12 = swift_allocObject();
    *(double *)(v12 + 16) = a2;
    *(double *)(v12 + 24) = a3;
    *(void *)(v12 + 32) = a1;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_100430D20;
    *(void *)(v13 + 24) = v12;
    aBlock[4] = sub_100162780;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100429DC4;
    void aBlock[3] = &unk_1006B48D8;
    unint64_t v14 = _Block_copy(aBlock);
    id v15 = a1;
    swift_retain();
    swift_release();
    id v16 = [v11 imageWithActions:v14];

    _Block_release(v14);
    LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if (v11) {
      __break(1u);
    }
    else {
      return v16;
    }
  }
  return result;
}

uint64_t sub_1005110DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCContentLayoutSizeCategory();
  uint64_t v73 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::Int v71 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v72 = (char *)&v63 - v7;
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v74 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v63 - v12;
  NSString v14 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v16 = [a1 dequeueReusableCellWithReuseIdentifier:v14 forIndexPath:isa];

  self;
  uint64_t v17 = swift_dynamicCastObjCClassUnconditional();
  sub_1005109D4((uint64_t)&v77);
  if (v78)
  {
    id v67 = v16;
    sub_1001146DC(&v77, (uint64_t)v80);
    uint64_t v64 = v17;
    UICollectionViewListCell.defaultContentConfiguration()();
    uint64_t v18 = v81;
    uint64_t v19 = v82;
    sub_1000A6B78(v80, v81);
    (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
    UIListContentConfiguration.attributedText.setter();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v21 = Strong;
      uint64_t v22 = Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v23 = *(void *)(v22 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v23 + 16))(v21, v80, ObjectType, v23);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        if (v25)
        {
          id v26 = [v1 traitCollection];
          static CGSize.doc_preferredSourceListIconSize(for:)();
          double v28 = v27;
          double v30 = v29;

          sub_100510E88(v25, v28, v30);
          UIListContentConfiguration.image.setter();
          static UIListContentConfiguration.ImageProperties.standardDimension.getter();
          uint64_t v31 = (void (*)(long long *, void))UIListContentConfiguration.imageProperties.modify();
          UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
          v31(&v77, 0);
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    uint64_t v69 = v9;
    uint64_t v70 = v8;
    uint64_t v32 = &v2[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics];
    if ((v2[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 40] & 1) == 0) {
      UIListContentConfiguration.imageToTextPadding.setter();
    }
    if ((v32[80] & 1) == 0) {
      UIListContentConfiguration.directionalLayoutMargins.setter();
    }
    uint64_t v66 = v32;
    uint64_t v68 = v13;
    sub_1000CBE70(&qword_10070D800);
    long long v33 = (void *)v73;
    uint64_t v34 = *(void *)(v73 + 72);
    unint64_t v35 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10059B760;
    unint64_t v37 = v36 + v35;
    uint64_t v38 = (void (*)(void))v33[13];
    uint64_t v39 = v4;
    ((void (*)(unint64_t, void, uint64_t))v38)(v36 + v35, enum case for DOCContentLayoutSizeCategory.large(_:), v4);
    unint64_t v63 = v37 + v34;
    v38();
    id v40 = [v2 traitCollection];
    uint64_t v41 = v72;
    UITraitCollection.doc_preferredLayoutSizeCategory.getter();

    uint64_t v42 = (void (*)(char *, unint64_t, uint64_t))v33[2];
    uint64_t v43 = v71;
    unint64_t v65 = v37;
    v42(v71, v37, v39);
    sub_10051394C(&qword_10070D808, (void (*)(uint64_t))&type metadata accessor for DOCContentLayoutSizeCategory);
    LOBYTE(v40) = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v44 = (void (*)(char *, uint64_t))v33[1];
    swift_bridgeObjectRetain();
    v44(v43, v39);
    if ((v40 & 1) == 0)
    {
      v42(v43, v63, v39);
      dispatch thunk of static Equatable.== infix(_:_:)();
      v44(v43, v39);
    }
    swift_bridgeObjectRelease();
    v44(v41, v39);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v45 = v68;
    long long v46 = (void (*)(long long *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    v46(&v77, 0);
    uint64_t v47 = (void (*)(long long *, void))UIListContentConfiguration.textProperties.modify();
    UIListContentConfiguration.TextProperties.lineBreakMode.setter();
    v47(&v77, 0);
    uint64_t v48 = v66;
    id v49 = (void *)*((void *)v66 + 11);
    if (v49)
    {
      id v50 = v49;
      uint64_t v51 = (void (*)(long long *, void))UIListContentConfiguration.imageProperties.modify();
      UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter();
      v51(&v77, 0);
    }
    uint64_t v52 = (void *)*((void *)v48 + 12);
    if (v52)
    {
      id v53 = v52;
      uint64_t v54 = (void (*)(long long *, void))UIListContentConfiguration.textProperties.modify();
      UIListContentConfiguration.TextProperties.font.setter();
      v54(&v77, 0);
    }
    uint64_t v55 = v69;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
    uint64_t v57 = v74;
    uint64_t v58 = v70;
    v56(v74, v45, v70);
    id v59 = v67;
    UIContentConfiguration.asVibrancyCapableConfiguration.getter();
    uint64_t v60 = *(void (**)(char *, uint64_t))(v55 + 8);
    v60(v57, v58);
    if (v76)
    {
      sub_1001146DC(&v75, (uint64_t)&v77);
    }
    else
    {
      uint64_t v78 = v58;
      uint64_t v79 = &protocol witness table for UIListContentConfiguration;
      BOOL v61 = sub_100052C70((uint64_t *)&v77);
      v56((char *)v61, v45, v58);
      sub_1000CBBA4((uint64_t)&v75, &qword_1007160C0);
    }
    uint64_t v17 = v64;
    UICollectionViewCell.contentConfiguration.setter();

    v60(v45, v58);
    sub_10009B1B8((uint64_t)v80);
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v77, &qword_10070D7D0);
  }
  return v17;
}

unint64_t sub_100511A00(void *a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100716080);
  __chkstk_darwin(v3 - 8);
  uint64_t v78 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  uint64_t v74 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v76 = *(void *)(v7 - 8);
  uint64_t v77 = v7;
  __chkstk_darwin(v7);
  uint64_t v73 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for UIButton.Configuration();
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v68 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v69 = (char *)v67 - v11;
  __chkstk_darwin(v12);
  uint64_t v79 = (char *)v67 - v13;
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v67 - v18;
  uint64_t v20 = type metadata accessor for UIListContentConfiguration();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v80 = v20;
  uint64_t v81 = v21;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v24 = String._bridgeToObjectiveC()();
  NSString v25 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v27 = [a1 dequeueReusableSupplementaryViewOfKind:v24 withReuseIdentifier:v25 forIndexPath:isa];

  type metadata accessor for DOCGoToSuggestionsViewController.HeaderView();
  uint64_t v28 = swift_dynamicCastClassUnconditional();
  unint64_t result = IndexPath.section.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v30 = *(void *)&v1[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections];
  if (result >= *(void *)(v30 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v67[1] = v1;
  char v31 = *(unsigned char *)(v30 + 16 * result + 32);
  swift_bridgeObjectRetain();
  static UIListContentConfiguration.header()();
  sub_1002ABBD4(v31);
  UIListContentConfiguration.text.setter();
  uint64_t v32 = v80;
  v82[3] = v80;
  v82[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  long long v33 = sub_100052C70(v82);
  (*(void (**)(uint64_t *, char *, uint64_t))(v81 + 16))(v33, v23, v32);
  id v34 = v27;
  UICollectionViewCell.contentConfiguration.setter();

  id v35 = v34;
  UICollectionViewCell.backgroundConfiguration.getter();
  uint64_t v36 = type metadata accessor for UIBackgroundConfiguration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v19, 1, v36))
  {
    sub_100513864((uint64_t)v19, (uint64_t)v16);
    UICollectionViewCell.backgroundConfiguration.setter();

    sub_1000CBBA4((uint64_t)v19, (uint64_t *)&unk_10070E2F0);
    swift_bridgeObjectRelease();
    if (v31)
    {
LABEL_5:
      id v37 = v35;
      UICollectionViewListCell.accessories.setter();

LABEL_9:
      (*(void (**)(char *, uint64_t))(v81 + 8))(v23, v32);
      return v28;
    }
  }
  else
  {
    UIBackgroundConfiguration.visualEffect.setter();
    UICollectionViewCell.backgroundConfiguration.setter();
    swift_bridgeObjectRelease();

    if (v31) {
      goto LABEL_5;
    }
  }
  v67[0] = v35;
  unint64_t result = (unint64_t)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v38 = (void *)result;
    v83._countAndFlagsBits = 0xD00000000000003ALL;
    v83._object = (void *)0x80000001005FD4C0;
    v39._object = (void *)0x80000001005FD4A0;
    v39._countAndFlagsBits = 0xD00000000000001ALL;
    v40._countAndFlagsBits = 0x617A696C61636F4CLL;
    v40._object = (void *)0xEB00000000656C62;
    v41._countAndFlagsBits = 0x7261656C43;
    v41._object = (void *)0xE500000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v39, v40, (NSBundle)v38, v41, v83);

    uint64_t v42 = self;
    uint64_t v43 = v79;
    static UIButton.Configuration.borderless()();
    sub_10051241C();

    uint64_t v44 = (void (*)(uint64_t *, void))UIButton.Configuration.contentInsets.modify();
    *(void *)(v45 + 24) = 0;
    v44(v82, 0);
    swift_bridgeObjectRelease();
    sub_10009E6C4(0, (unint64_t *)&unk_1007085F0);
    uint64_t v46 = v72;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
    uint64_t v48 = v69;
    uint64_t v49 = v75;
    v47(v69, v43, v75);
    uint64_t v50 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v47(v68, v48, v49);
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_1005138CC;
    *(void *)(v51 + 24) = v50;
    swift_retain_n();
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v68 = (char *)UIButton.init(configuration:primaryAction:)();
    swift_release();
    uint64_t v72 = *(void *)(v46 + 8);
    ((void (*)(char *, uint64_t))v72)(v48, v49);
    swift_release();
    sub_1000CBE70(&qword_100708CF8);
    uint64_t v52 = *(void *)(type metadata accessor for UICellAccessory() - 8);
    unint64_t v53 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_1005A0030;
    uint64_t v69 = (char *)(v54 + v53);
    uint64_t v55 = sub_1000CBE70(&qword_10070E2E0);
    uint64_t v56 = v74;
    uint64_t v57 = (uint64_t (**)())&v74[*(int *)(v55 + 48)];
    uint64_t v58 = enum case for UICellAccessory.DisplayedState.always(_:);
    uint64_t v59 = type metadata accessor for UICellAccessory.DisplayedState();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 104))(v56, v58, v59);
    *uint64_t v57 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
    v57[1] = 0;
    (*(void (**)(char *, void, uint64_t))(v70 + 104))(v56, enum case for UICellAccessory.Placement.trailing(_:), v71);
    uint64_t v60 = enum case for UICellAccessory.LayoutDimension.actual(_:);
    uint64_t v61 = type metadata accessor for UICellAccessory.LayoutDimension();
    uint64_t v62 = *(void *)(v61 - 8);
    unint64_t v63 = v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 104))(v78, v60, v61);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v61);
    id v64 = v67[0];
    unint64_t v65 = v68;
    uint64_t v66 = v73;
    UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
    static UICellAccessory.customView(configuration:)();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v66, v77);
    UICollectionViewListCell.accessories.setter();

    ((void (*)(char *, uint64_t))v72)(v79, v49);
    uint64_t v32 = v80;
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10051241C()
{
  uint64_t v0 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_100716FF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  UIButton.Configuration.attributedTitle.setter();
  uint64_t v6 = (uint64_t (*)(unsigned char *, void))UIButton.Configuration.attributedTitle.modify();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v11[-2] = v9;
    swift_getKeyPath();
    v11[1] = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
    sub_1002DC380();
    AttributedString.subscript.setter();
  }
  return v6(v12, 0);
}

void sub_100512644()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1005127D8();
  }
}

void sub_1005127D8()
{
  uint64_t v1 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtC5Files21DOCGoToViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v3, ObjectType, v5);
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRelease();
  }
  uint64_t v7 = OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
  uint64_t v8 = *(void *)&v0[OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions];
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v36 = _swiftEmptyArrayStorage;
  uint64_t v10 = *(void *)(v8 + 16);
  swift_bridgeObjectRetain();
  if (v10)
  {
    uint64_t v29 = v7;
    unint64_t v11 = 0;
    uint64_t v12 = v8 + 32;
    while (v11 < *(void *)(v8 + 16))
    {
      sub_1000D4774(v12, (uint64_t)&v33);
      uint64_t v13 = v34;
      uint64_t v14 = v35;
      sub_1000A6B78(&v33, v34);
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
      if (v15 != 2 && (v15 & 1) == 0)
      {
        sub_10009B1B8((uint64_t)&v33);
      }
      else
      {
        sub_1001146DC(&v33, (uint64_t)v30);
        uint64_t v17 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100190F84(0, v17[2] + 1, 1);
          uint64_t v17 = v36;
        }
        unint64_t v19 = v17[2];
        unint64_t v18 = v17[3];
        if (v19 >= v18 >> 1) {
          sub_100190F84(v18 > 1, v19 + 1, 1);
        }
        uint64_t v20 = v31;
        uint64_t v21 = v32;
        uint64_t v22 = sub_10003CCE8((uint64_t)v30, v31);
        double v23 = __chkstk_darwin(v22);
        NSString v25 = &v30[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
        (*(void (**)(unsigned char *, double))(v26 + 16))(v25, v23);
        sub_100508F9C(v19, (uint64_t)v25, (uint64_t *)&v36, v20, v21);
        sub_10009B1B8((uint64_t)v30);
      }
      ++v11;
      v12 += 40;
      if (v10 == v11)
      {
        uint64_t v9 = v36;
        uint64_t v7 = v29;
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_20:
    swift_bridgeObjectRelease();
    *(void *)&v1[v7] = v9;
    swift_bridgeObjectRelease();
    sub_100510B60();
    id v27 = [v1 collectionView];
    if (v27)
    {
      uint64_t v28 = v27;
      [v27 reloadData];

      return;
    }
  }
  __break(1u);
}

uint64_t sub_100512BE8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_metrics + 96);

  sub_10003A094(v0 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestionsTableViewDelegate);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_100512C58(uint64_t a1)
{
  return sub_100512C70(a1, type metadata accessor for DOCGoToSuggestionsViewController);
}

id sub_100512C70(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController()
{
  return self;
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController.SuggestionCell()
{
  return self;
}

uint64_t type metadata accessor for DOCGoToSuggestionsViewController.HeaderView()
{
  return self;
}

void *sub_100512E10()
{
  uint64_t v1 = v0;
  unint64_t result = [v0 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t result = (void *)swift_conformsToProtocol2();
  if (!result)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v5 = ((uint64_t (*)(const char *, uint64_t, uint64_t, void *))result[9])("performKeyCommand:", 1, ObjectType, result);

  sub_100169BFC(v5);
  unint64_t result = [v1 collectionView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  uint64_t v7 = swift_getObjectType();
  unint64_t result = (void *)swift_conformsToProtocol2();
  if (result)
  {
    unint64_t v8 = ((uint64_t (*)(const char *, uint64_t, uint64_t, void *))result[10])("performKeyCommand:", 1, v7, result);

    sub_100169BFC(v8);
    return _swiftEmptyArrayStorage;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCGoToSuggestionsViewController.Section(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DOCGoToSuggestionsViewController.Section()
{
  return &type metadata for DOCGoToSuggestionsViewController.Section;
}

uint64_t sub_1005130E8@<X0>(id a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  if (a2 == 2)
  {
    if ((uint64_t)[a1 numberOfSections] >= 1
      && (uint64_t)[a1 numberOfItemsInSection:0] >= 1)
    {
      goto LABEL_10;
    }
LABEL_11:
    uint64_t v13 = type metadata accessor for IndexPath();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v10 = v13;
    uint64_t v11 = a3;
    uint64_t v12 = 1;
    goto LABEL_12;
  }
  if (a2 != 1 || (uint64_t)[a1 numberOfSections] < 1) {
    goto LABEL_11;
  }
  uint64_t result = (uint64_t)[a1 numberOfSections];
  if (__OFSUB__(result, 1))
  {
    __break(1u);
    goto LABEL_16;
  }
  id v6 = [a1 numberOfItemsInSection:result - 1];
  BOOL v7 = __OFSUB__(v6, 1);
  uint64_t result = (uint64_t)v6 - 1;
  if (v7)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  if (result < 0) {
    goto LABEL_11;
  }
LABEL_10:
  IndexPath.init(item:section:)();
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  uint64_t v10 = v8;
  uint64_t v11 = a3;
  uint64_t v12 = 0;
LABEL_12:

  return v9(v11, v12, 1, v10);
}

char *sub_100513248@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = IndexPath.section.getter();
  if (v6 >= (uint64_t)[a1 numberOfSections]) {
    goto LABEL_23;
  }
  BOOL v7 = (char *)[a1 numberOfItemsInSection:IndexPath.section.getter()];
  if (a2 != 2)
  {
    if (a2 != 1) {
      goto LABEL_23;
    }
    if (!IndexPath.item.getter())
    {
      if (IndexPath.section.getter() >= 1)
      {
        uint64_t result = (char *)IndexPath.section.getter();
        if (__OFSUB__(result, 1))
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        uint64_t result = (char *)[a1 numberOfItemsInSection:result - 1];
        if (__OFSUB__(result, 1))
        {
LABEL_32:
          __break(1u);
          return result;
        }
        if (!__OFSUB__(IndexPath.section.getter(), 1)) {
          goto LABEL_16;
        }
        __break(1u);
      }
      goto LABEL_23;
    }
    BOOL v7 = (char *)IndexPath.item.getter();
    a1 = v7 - 1;
    if (!__OFSUB__(v7, 1)) {
      goto LABEL_15;
    }
    __break(1u);
  }
  uint64_t v8 = v7;
  uint64_t result = (char *)IndexPath.item.getter();
  if (__OFSUB__(v8, 1))
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (result == v8 - 1)
  {
    uint64_t v10 = IndexPath.section.getter();
    uint64_t result = (char *)[a1 numberOfSections];
    if (!__OFSUB__(result, 1))
    {
      if (v10 < (uint64_t)(result - 1))
      {
        uint64_t result = (char *)IndexPath.section.getter();
        if (!__OFADD__(result, 1)) {
          goto LABEL_16;
        }
        goto LABEL_30;
      }
LABEL_23:
      uint64_t v16 = type metadata accessor for IndexPath();
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
      uint64_t v13 = v16;
      uint64_t v14 = a3;
      uint64_t v15 = 1;
      goto LABEL_24;
    }
    goto LABEL_28;
  }
  uint64_t result = (char *)IndexPath.item.getter();
  if (__OFADD__(result, 1))
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
LABEL_15:
  IndexPath.section.getter();
LABEL_16:
  IndexPath.init(item:section:)();
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v13 = v11;
  uint64_t v14 = a3;
  uint64_t v15 = 0;
LABEL_24:

  return (char *)v12(v14, v15, 1, v13);
}

uint64_t sub_100513434@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1005130E8(a1, a2, a3);
}

char *sub_100513450@<X0>(char *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_100513248(a1, a2, a3);
}

uint64_t sub_10051346C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  return 0;
}

CGFloat sub_1005134D0()
{
  uint64_t v0 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  IndexPath.init(row:section:)();
  char v4 = static IndexPath.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v4) {
    return -100.0;
  }
  else {
    return UIEdgeInsetsZero.top;
  }
}

void sub_1005135D8()
{
}

void sub_1005135E0()
{
  sub_1005109D4((uint64_t)v2);
  uint64_t v0 = v3;
  sub_1000CBBA4((uint64_t)v2, &qword_10070D7D0);
  if (v0)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      id v1 = sub_1002AC064();
      sub_1003BEE64();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100513658()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100513690()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_1005136A0()
{
  unint64_t result = qword_10071AB50;
  if (!qword_10071AB50)
  {
    sub_100074618(&qword_10071AB48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071AB50);
  }
  return result;
}

uint64_t sub_1005136FC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100513734(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
}

uint64_t sub_10051373C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051377C(uint64_t a1, uint64_t a2)
{
  return sub_100510180(a1, a2);
}

unint64_t sub_100513784(unint64_t result)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_isFiltering) == 1)
  {
    uint64_t v2 = v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_suggestions;
    return *(void *)(*(void *)v2 + 16);
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files32DOCGoToSuggestionsViewController_sections);
    if (*(void *)(v3 + 16) > result)
    {
      uint64_t v2 = v3 + 16 * result + 40;
      return *(void *)(*(void *)v2 + 16);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1005137E0()
{
  sub_1005109D4((uint64_t)&v1);
  if (!v2) {
    return sub_1000CBBA4((uint64_t)&v1, &qword_10070D7D0);
  }
  sub_1001146DC(&v1, (uint64_t)v3);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1002AFE10(v3);
    swift_unknownObjectRelease();
  }
  return sub_10009B1B8((uint64_t)v3);
}

uint64_t sub_100513864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1005138CC()
{
}

uint64_t sub_1005138D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100513918()
{
  return 8;
}

uint64_t sub_100513924()
{
  return swift_release();
}

uint64_t sub_10051392C(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100513940(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10051394C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005139A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  __chkstk_darwin(v2);
  uint64_t v3 = OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task))
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCLoadingViewController____lazy_storage___task);
  }
  else
  {
    aBlock[4] = sub_100513B34;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B49C0;
    _Block_copy(aBlock);
    sub_1001102E4();
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_1000B921C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    type metadata accessor for DispatchWorkItem();
    swift_allocObject();
    uint64_t v4 = DispatchWorkItem.init(flags:block:)();
    *(void *)(v1 + v3) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100513B34()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "PERF: The empty DOCLoadingViewController is visible for more than 5 seconds", v6, 2u);
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_100513C68(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = (objc_class *)type metadata accessor for DOCLoadingViewController();
  v16.receiver = v2;
  v16.super_class = v11;
  [super viewDidAppear:a1 & 1];
  sub_1005139A0();
  char v12 = dispatch thunk of DispatchWorkItem.isCancelled.getter();
  uint64_t result = swift_release();
  if ((v12 & 1) == 0)
  {
    sub_10011029C();
    uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v7, v4);
    sub_1005139A0();
    OS_dispatch_queue.asyncAfter(deadline:execute:)();

    swift_release();
    return ((uint64_t (*)(char *, uint64_t))v15)(v10, v4);
  }
  return result;
}

uint64_t sub_100513FEC()
{
  return swift_release();
}

id sub_100513FFC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCLoadingViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCLoadingViewController()
{
  return self;
}

uint64_t sub_100514064(uint64_t a1, void *aBlock)
{
  objc_super v2 = *(void (**)(void (*)(uint64_t), uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_100516028, v4);
  swift_release();

  return swift_release();
}

void sub_1005140F8(uint64_t a1, uint64_t a2)
{
  sub_10009E6C4(0, (unint64_t *)&qword_100708610);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  (*(void (**)(uint64_t, objc_class *))(a2 + 16))(a2, isa);
}

id sub_100514174(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithBarButtonSystemItem:0 target:0 action:0];
  [v2 setPrimaryAction:a1];
  return v2;
}

id sub_1005141D0(char a1, uint64_t a2)
{
  uint64_t v3 = qword_1005AFCD0[a1];
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());

  return [v4 initWithBarButtonSystemItem:v3 primaryAction:a2];
}

void *sub_100514234()
{
  uint64_t v1 = v0;
  id v2 = [v0 leftBarButtonItems];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    id v4 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v4 = _swiftEmptyArrayStorage;
  }
  sub_100083AD8((unint64_t)v4);
  id v5 = [v1 leadingItemGroups];
  uint64_t v6 = sub_10009E6C4(0, &qword_10071AB88);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v8 = (uint64_t)result;
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  uint64_t v38 = v6;
  Swift::String v39 = v1;
  if (v8)
  {
    if (v8 < 1)
    {
      __break(1u);
      goto LABEL_45;
    }
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      char v12 = v11;
      ++v10;
      id v13 = [v11 barButtonItems:v38];
      sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
      unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100083AD8(v14);
    }
    while (v8 != v10);
    swift_bridgeObjectRelease_n();
    uint64_t v1 = v39;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  sub_100083AD8((unint64_t)_swiftEmptyArrayStorage);
  id v15 = [v1 centerItemGroups];
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v16 >> 62))
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_17;
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v17 = (uint64_t)result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_17:
  if (v17 < 1)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v18 = 0;
  do
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v19 = *(id *)(v16 + 8 * v18 + 32);
    }
    uint64_t v20 = v19;
    ++v18;
    id v21 = [v19 barButtonItems:v38];
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100083AD8(v22);
  }
  while (v17 != v18);
  swift_bridgeObjectRelease_n();
  uint64_t v1 = v39;
LABEL_27:
  sub_100083AD8((unint64_t)_swiftEmptyArrayStorage);
  id v23 = [v1 rightBarButtonItems];
  if (v23)
  {
    uint64_t v24 = v23;
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    NSString v25 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    NSString v25 = _swiftEmptyArrayStorage;
  }
  sub_100083AD8((unint64_t)v25);
  id v26 = [v1 trailingItemGroups];
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v28 = (uint64_t)result;
    if (result)
    {
LABEL_32:
      if (v28 >= 1)
      {
        uint64_t v29 = 0;
        do
        {
          if ((v27 & 0xC000000000000001) != 0) {
            id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v30 = *(id *)(v27 + 8 * v29 + 32);
          }
          uint64_t v31 = v30;
          ++v29;
          id v32 = [v30 barButtonItems:v38];
          sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
          unint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          sub_100083AD8(v33);
        }
        while (v28 != v29);
        swift_bridgeObjectRelease_n();
        uint64_t v1 = v39;
        goto LABEL_41;
      }
LABEL_46:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v28) {
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_41:
  sub_100083AD8((unint64_t)_swiftEmptyArrayStorage);
  id v34 = [v1 _dci_fixedTrailingGroup];
  if (v34)
  {
    uint64_t v35 = v34;
    id v36 = [v34 barButtonItems];
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    unint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100083AD8(v37);
  }
  return _swiftEmptyArrayStorage;
}

id sub_1005147BC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = qword_1005AFCD0[a1];
  v10[3] = swift_getObjectType();
  v10[0] = a2;
  id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_unknownObjectRetain();
  uint64_t v7 = _bridgeAnythingToObjectiveC<A>(_:)();
  sub_10009B1B8((uint64_t)v10);
  id v8 = [v6 initWithBarButtonSystemItem:v5 target:v7 action:a3 v10[0]];
  swift_unknownObjectRelease();
  return v8;
}

void sub_100514878()
{
  qword_1007376F0 = 4;
}

uint64_t sub_100514888(void (*a1)(void *), int a2, id a3)
{
  id v4 = [a3 menu];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [v4 children];

    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    uint64_t v7 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  a1(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100514948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, (unint64_t *)&qword_10070B700);
}

uint64_t sub_10051495C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, &qword_100708700);
}

uint64_t sub_100514970(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v9 = a3;
    uint64_t v6 = a2;
    uint64_t v8 = a1;
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v6) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v6 - v8;
  if (__OFSUB__(v6, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v4;
    if (!__OFADD__(v25, v4)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v4;
  if (__OFADD__(v11, v4)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v13;
  uint64_t v28 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v5 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v16 = (void *)(v15 + 32 + 8 * v8);
  sub_10009E6C4(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        id v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v6);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v4;
          if (!__OFADD__(v21, v4))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v6;
      if (!__OFSUB__(v17, v6)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *unint64_t v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_100514C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v22 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v8 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v10 = v23 + v7;
    if (!__OFADD__(v23, v7)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v9 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v10 = v9 + v7;
  if (__OFADD__(v9, v7)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v11 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v11;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v11 & 0x8000000000000000) != 0
    || (v11 & 0x4000000000000000) != 0
    || (uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8, v10 > *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v11 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v11;
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  unint64_t v14 = (void *)(v13 + 32 + 8 * v6);
  sub_1000CBE70((uint64_t *)&unk_100706730);
  swift_arrayDestroy();
  if (v7)
  {
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24 - v5;
      if (!__OFSUB__(v24, v5))
      {
LABEL_17:
        if (v16 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v17 = (char *)(v14 + 1);
        uint64_t v18 = (char *)(v13 + 32 + 8 * v5);
        if (v14 + 1 != (void *)v18 || v17 >= &v18[8 * v16]) {
          memmove(v17, v18, 8 * v16);
        }
        if (!(v11 >> 62))
        {
          uint64_t v19 = *(void *)(v13 + 16);
          uint64_t v20 = v19 + v7;
          if (!__OFADD__(v19, v7))
          {
LABEL_23:
            *(void *)(v13 + 16) = v20;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v20 = v25 + v7;
        if (!__OFADD__(v25, v7)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(v13 + 16);
      uint64_t v16 = v15 - v5;
      if (!__OFSUB__(v15, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *unint64_t v14 = v3;

  return specialized Array._endMutation()();
}

uint64_t sub_100514F68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, (unint64_t *)&qword_100706740);
}

char *sub_100514F7C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    uint64_t v8 = sub_10018F840(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  uint64_t v18 = (uint64_t)&v8[4 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 32);
    uint64_t v23 = (char *)&v8[4 * a2 + 4];
    size_t v24 = 32 * v22;
    if ((char *)(v18 + 32) != v23 || result >= &v23[v24]) {
      uint64_t result = (char *)memmove(result, v23, v24);
    }
    uint64_t v25 = v8[2];
    BOOL v21 = __OFADD__(v25, v12);
    uint64_t v26 = v25 + v12;
    if (!v21)
    {
      v8[2] = v26;
LABEL_20:
      *(void *)uint64_t v18 = a3;
      *(void *)(v18 + 8) = a4;
      *(void *)(v18 + 16) = a5;
      *(unsigned char *)(v18 + 24) = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100515118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, &qword_100707CD0);
}

uint64_t sub_10051512C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100515144(a1, a2, a3, (void (*)(void))type metadata accessor for DOCItemCollectionViewController);
}

uint64_t sub_100515144(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a4;
    uint64_t v8 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v9;
    if (!__OFADD__(v25, v9)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v9;
  if (__OFADD__(v11, v9)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v13;
  uint64_t v28 = v8;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v16 = (void *)(v15 + 32 + 8 * v7);
  v6(0);
  swift_arrayDestroy();
  if (v9)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v5;
      if (!__OFSUB__(v26, v5))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v5);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v9;
          if (!__OFADD__(v21, v9))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v9;
        if (!__OFADD__(v27, v9)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v5;
      if (!__OFSUB__(v17, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_100515440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100515144(a1, a2, a3, (void (*)(void))type metadata accessor for DOCMutableSidebarSection);
}

uint64_t sub_100515458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, (unint64_t *)&qword_1007069C0);
}

uint64_t sub_10051546C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, (unint64_t *)&unk_1007085C0);
}

char *sub_100515480(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *(void **)v4;
  int64_t v7 = *(void *)(*(void *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_1000AF10C(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[2 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = v6[2];
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v16 + 2);
    uint64_t v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = v6[2];
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *uint64_t v16 = a3;
      v16[1] = a4;
      *(void *)uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100515604(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v26 < v4) {
    goto LABEL_36;
  }
LABEL_4:
  uint64_t v6 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v7 = v8 >> 62;
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 - v6;
    if (!__OFSUB__(v9, v6)) {
      goto LABEL_7;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v27 + v30;
    if (!__OFADD__(v27, v30)) {
      goto LABEL_9;
    }
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 - v6;
  if (__OFSUB__(v9, v6)) {
    goto LABEL_40;
  }
LABEL_7:
  uint64_t v30 = v10;
  if (*v3 >> 62) {
    goto LABEL_41;
  }
  uint64_t v11 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v10;
  if (__OFADD__(v11, v10)) {
    goto LABEL_43;
  }
LABEL_9:
  unint64_t v13 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v13;
  unint64_t v29 = v7;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_14:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_15;
    }
LABEL_44:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v16 = v15 + 32 + 8 * v5;
  sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
  swift_arrayDestroy();
  uint64_t v17 = v30;
  if (!v30) {
    goto LABEL_26;
  }
  if (!(v13 >> 62))
  {
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v19 = v18 - v4;
    if (!__OFSUB__(v18, v4)) {
      goto LABEL_18;
    }
LABEL_47:
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = v30;
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  uint64_t v19 = v28 - v4;
  if (__OFSUB__(v28, v4)) {
    goto LABEL_47;
  }
LABEL_18:
  if (v19 < 0)
  {
LABEL_51:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v20 = (char *)(v16 + 8 * v9);
  uint64_t v21 = (char *)(v15 + 32 + 8 * v4);
  if (v20 != v21 || v20 >= &v21[8 * v19])
  {
    memmove(v20, v21, 8 * v19);
    uint64_t v17 = v30;
  }
  if (v13 >> 62) {
    goto LABEL_48;
  }
  uint64_t v22 = *(void *)(v15 + 16);
LABEL_24:
  if (__OFADD__(v22, v17))
  {
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  *(void *)(v15 + 16) = v22 + v17;
LABEL_26:
  if (v9 >= 1)
  {
    if (v29)
    {
      unint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = sub_1002F53FC(v23);
      swift_bridgeObjectRelease();
      sub_100515F38((uint64_t)(v24 + 4), v24[2], v9);
      swift_release();
      goto LABEL_31;
    }
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) == v9)
    {
      swift_arrayInitWithCopy();
      goto LABEL_31;
    }
    goto LABEL_50;
  }
LABEL_31:
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_1005159E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100515144(a1, a2, a3, (void (*)(void))type metadata accessor for DOCTransitionableContext.SettingsTransaction);
}

uint64_t sub_1005159F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100514970(a1, a2, a3, (unint64_t *)&qword_100707710);
}

char *sub_100515A0C(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    unint64_t v8 = sub_100190610(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  uint64_t v18 = &v8[4 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 4);
    unint64_t v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 32 * v22);
    }
    uint64_t v24 = v8[2];
    BOOL v21 = __OFADD__(v24, v12);
    uint64_t v25 = v24 + v12;
    if (!v21)
    {
      v8[2] = v25;
LABEL_20:
      void *v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100515BA0(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_1000B7F44(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *uint64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for DOCBrowserHistoryItem(0) - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_1002903D0(a3, v17);
  }
  return sub_1000CBBA4(a3, (uint64_t *)&unk_10071AB90);
}

char *sub_100515DAC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  int64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    int64_t v6 = sub_1000B7F78(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[16 * a1 + 32];
  sub_1000CBE70((uint64_t *)&unk_100708BD0);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = *((void *)v6 + 2);
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = v16 + 16;
    unint64_t v21 = &v6[16 * a2 + 32];
    if (v16 + 16 != v21 || result >= &v21[16 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = *((void *)v6 + 2);
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      *((void *)v6 + 2) = v23;
LABEL_20:
      *(void *)uint64_t v16 = a3;
      *((void *)v16 + 1) = a4;
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100515F38(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (a2 == a3)
  {
    if (result)
    {
      sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100515FB0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100515FE8(void (*a1)(void *), int a2)
{
  return sub_100514888(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_100515FF0()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100516028(uint64_t a1)
{
  sub_1005140F8(a1, *(void *)(v1 + 16));
}

char *sub_100516030(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = (char *)sub_10018EEFC(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[8 * a1 + 32];
    int64_t v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 8 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10051618C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10018FE90(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_1000CBE70(&qword_100708D60);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = (char *)&v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= (void *)&v16[24 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[3 * a1 + 4], v16, 24 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10051630C(uint64_t a1, uint64_t a2)
{
  return sub_1000ABDA8(a1, a2, (unint64_t *)&unk_100706720);
}

uint64_t sub_100516320(uint64_t a1, uint64_t a2)
{
  return sub_1000ABDA8(a1, a2, &qword_10070E2D0);
}

uint64_t sub_100516334(uint64_t a1, uint64_t a2)
{
  return sub_1000463D8(a1, a2, (void (*)(void))type metadata accessor for DOCSidebarCellAccessoryItem);
}

uint64_t sub_10051634C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10018F840(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = 32 * a1;
  uint64_t v13 = (char *)&v4[4 * a1 + 4];
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v15 = v4[2];
  BOOL v16 = __OFSUB__(v15, a2);
  uint64_t v17 = v15 - a2;
  if (v16) {
    goto LABEL_26;
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = (char *)&v4[4 * a2 + 4];
    size_t v19 = 32 * v17;
    if (v12 != 32 * a2 || v13 >= &v18[v19]) {
      uint64_t result = (uint64_t)memmove(v13, v18, v19);
    }
    uint64_t v20 = v4[2];
    BOOL v16 = __OFADD__(v20, v8);
    uint64_t v21 = v20 - v7;
    if (!v16)
    {
      v4[2] = v21;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005164C0(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *((void *)v4 + 3) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_10018F9B8(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  sub_1000CBE70(&qword_100708E48);
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = *((void *)v4 + 2);
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    BOOL v16 = &v4[16 * a2 + 32];
    if (a1 != a2 || &v4[16 * a1 + 32] >= &v16[16 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[16 * a1 + 32], v16, 16 * v15);
    }
    uint64_t v17 = *((void *)v4 + 2);
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      *((void *)v4 + 2) = v18;
LABEL_20:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100516634(uint64_t a1, uint64_t a2)
{
  return sub_1000ABDA8(a1, a2, (unint64_t *)&unk_1007085C0);
}

uint64_t sub_100516648(uint64_t a1, uint64_t a2)
{
  return sub_1005169E0(a1, a2, (uint64_t (*)(void))sub_10018EF08, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
}

uint64_t sub_100516674(uint64_t a1, uint64_t a2)
{
  return sub_1000463D8(a1, a2, (void (*)(void))type metadata accessor for DOCItemCollectionView);
}

uint64_t sub_10051668C(uint64_t a1, uint64_t a2)
{
  return sub_1000463D8(a1, a2, (void (*)(void))type metadata accessor for DOCBrowserContainerController);
}

uint64_t sub_1005166A4(uint64_t a1, uint64_t a2)
{
  return sub_1000ABDA8(a1, a2, (unint64_t *)&unk_100705C20);
}

uint64_t sub_1005166B8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_1000CBE70(&qword_10070F9B0);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        BOOL v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_10051699C(uint64_t a1, uint64_t a2)
{
  return sub_1000463D8(a1, a2, (void (*)(void))type metadata accessor for DOCTransitionableContext.SettingsTransaction);
}

uint64_t sub_1005169B4(uint64_t a1, uint64_t a2)
{
  return sub_1005169E0(a1, a2, (uint64_t (*)(void))sub_1000B7F44, type metadata accessor for DOCBrowserHistoryItem);
}

uint64_t sub_1005169E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100516BD8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void UIViewController.doc_manuallyHiddenForSearch.setter(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  if (v10 == 2)
  {
    if ((a1 & 1) == 0) {
      return;
    }
  }
  else if ((((v10 & 1) == 0) ^ a1))
  {
    return;
  }
  uint64_t v5 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();

  id v6 = [v2 view];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (void *)UIViewController.associatedObjectStorage.getter();
    swift_getKeyPath();
    dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
    swift_release();

    [v7 setHidden:v9 & 1];
  }
  else
  {
    __break(1u);
  }
}

void sub_100516D08(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v6 = [v2 scopeFragment];
  if (!v6)
  {
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }

  NSString v7 = [v2 scopeFragment];
  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = 539371040;
    unint64_t v13 = 0xE400000000000000;
    v8._countAndFlagsBits = a1;
    v8._object = a2;
    String.append(_:)(v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = String.init<A>(_:)();
    uint64_t v11 = v9;
    String.append<A>(contentsOf:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v3 setScopeFragment:v7, v10, v11, v12, v13];
}

uint64_t sub_100516E5C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1005202BC(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10051ED24(v6);
  return specialized ContiguousArray._endMutation()();
}

BOOL sub_100516ED8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  switch(v2)
  {
    case 2:
      return v3 == 2;
    case 3:
      return v3 == 3;
    case 4:
      return v3 == 4;
  }
  if ((v3 - 2) < 3) {
    return 0;
  }
  return (((v2 & 1) == 0) ^ v3) & 1;
}

id sub_100516F7C()
{
  return sub_10051E2D0(type metadata accessor for DOCEverywhereSearchScope);
}

uint64_t sub_100516FA8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_displayName);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_100516FE4()
{
  id v1 = [objc_allocWithZone((Class)NSFileProviderSearchQuery) initWithSearchScope:0];
  [v1 setTrashedItemsMembership:*(void *)(v0 + OBJC_IVAR____TtC5Files24DOCEverywhereSearchScope_trashedItemsMembership)];
  return v1;
}

id sub_10051703C()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source + 8)) {
    id v1 = &selRef_scopedSearchQuery;
  }
  else {
    id v1 = &selRef_scopedSearchQueryUnderItem;
  }
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source), *v1));
  [v2 setShouldPerformServerSearch:*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_shouldPerformServerSearch)];
  [v2 setTrashedItemsMembership:*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_trashedItemsMembership)];
  return v2;
}

id sub_100517100()
{
  return sub_10051E2D0(type metadata accessor for DOCItemCollectionSearchScope);
}

uint64_t sub_100517168()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_displayName);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1005171A8()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source + 8) == 1) {
    return [*(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionSearchScope_source) itemFilteringPredicate];
  }
  else {
    return 0;
  }
}

id sub_1005171F8()
{
  id v1 = [objc_allocWithZone((Class)NSFileProviderSearchQuery) initWithSearchScope:0];
  [v1 setProviderDomainID:*(void *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_providerDomainIdentifier)];
  [v1 setShouldPerformServerSearch:*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_shouldPerformServerSearch)];
  [v1 setTrashedItemsMembership:*(void *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_trashedItemsMembership)];
  return v1;
}

id sub_1005172B8()
{
  return sub_10051E2D0(type metadata accessor for DOCFileProviderSearchScope);
}

uint64_t sub_100517320()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files26DOCFileProviderSearchScope_displayName);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_100517490()
{
  return sub_10051E2D0(type metadata accessor for DOCPlaceholderSearchController);
}

id sub_1005174A8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController);
  }
  else
  {
    id v4 = sub_10051750C(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10051750C(uint64_t a1)
{
  id v2 = [objc_allocWithZone((Class)type metadata accessor for DOCSuggestionsTableViewController()) init];
  id result = [v2 view];
  if (result)
  {
    id v4 = result;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClassUnconditional();
    [v5 setAccessibilityIdentifier:DOCItemCollectionViewSearchSuggestionsTableViewIdentifier];
    [v5 setContentInsetAdjustmentBehavior:2];
    id v6 = [v5 widthAnchor];
    id v7 = [v6 constraintEqualToConstant:500.0];

    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
    *(void *)(inited + 32) = v7;
    specialized Array._endMutation()();
    swift_retain();
    id v9 = v7;
    sub_10051E384(2);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint);
    *(void *)(a1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint) = v9;

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005176AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement];
  if (v2) {
    goto LABEL_18;
  }
  id v3 = sub_1005174A8();
  id v4 = [v3 tableView];

  if (!v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  id v5 = [v4 superview];

  if (v5)
  {
LABEL_18:
    id v62 = sub_1005174A8();
    id v63 = [v62 tableView];

    if (v63)
    {
      [v63 setHidden:v2];

      sub_10051D230(0);
      return;
    }
    __break(1u);
    goto LABEL_21;
  }
  id v6 = sub_1005174A8();
  id v7 = [v6 tableView];

  if (!v7)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

  uint64_t v8 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView;
  [*(id *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v9 = *(id *)&v1[v8];
  id v10 = sub_1005174A8();
  id v11 = [v10 tableView];

  if (!v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  [v9 addSubview:v11];

  uint64_t v12 = OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints;
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints];
  uint64_t v14 = *(void *)(v13 + 24);
  char v15 = *(unsigned char *)(v13 + 32);
  *(void *)(v13 + 24) = 0;
  *(unsigned char *)(v13 + 32) = 1;
  swift_retain();
  sub_10051E508(v14, v15);
  swift_release();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  swift_retain();
  id v17 = sub_1005174A8();
  id v18 = [v17 tableView];

  if (!v18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  id v19 = [v18 centerXAnchor];

  id v20 = [*(id *)&v1[v8] centerXAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(inited + 32) = v21;
  uint64_t v65 = inited;
  specialized Array._endMutation()();
  sub_10051E384(2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_1005A0C30;
  swift_retain();
  id v23 = sub_1005174A8();
  id v24 = [v23 tableView];

  if (!v24)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  id v25 = [v24 leadingAnchor];

  id v26 = [*(id *)&v1[v8] leadingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26];

  *(void *)(v22 + 32) = v27;
  id v28 = sub_1005174A8();
  id v29 = [v28 tableView];

  if (!v29)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v30 = [v29 trailingAnchor];

  id v31 = [*(id *)&v1[v8] trailingAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v22 + 40) = v32;
  uint64_t v65 = v22;
  specialized Array._endMutation()();
  sub_10051E384(1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1005A1560;
  id v34 = [*(id *)&v1[v8] widthAnchor];
  id v35 = sub_1005174A8();
  id v36 = [v35 tableView];

  if (!v36)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  id v37 = [v36 widthAnchor];

  id v38 = [v34 constraintGreaterThanOrEqualToAnchor:v37 multiplier:1.0];
  *(void *)(v33 + 32) = v38;
  id v39 = [*(id *)&v1[v8] topAnchor];
  id v40 = sub_1005174A8();
  id v41 = [v40 tableView];

  if (!v41)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v42 = [v41 topAnchor];

  id v43 = [v39 constraintGreaterThanOrEqualToAnchor:v42];
  *(void *)(v33 + 40) = v43;
  id v44 = [*(id *)&v1[v8] bottomAnchor];
  id v45 = sub_1005174A8();
  id v46 = [v45 tableView];

  if (!v46)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v47 = [v46 bottomAnchor];

  id v48 = [v44 constraintGreaterThanOrEqualToAnchor:v47];
  *(void *)(v33 + 48) = v48;
  id v49 = [*(id *)&v1[v8] heightAnchor];
  id v50 = sub_1005174A8();
  id v51 = [v50 tableView];

  if (v51)
  {
    uint64_t v52 = self;
    id v53 = [v51 heightAnchor];

    id v54 = [v49 constraintGreaterThanOrEqualToAnchor:v53 multiplier:1.0];
    *(void *)(v33 + 56) = v54;
    uint64_t v65 = v33;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&unk_100706720);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v52 activateConstraints:isa];

    if (v1[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
      && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
    {
      id v57 = [Strong traitCollectionExpectedForSearchPresentation];
      swift_unknownObjectRelease();
    }
    else
    {
      v64.receiver = v1;
      v64.super_class = (Class)type metadata accessor for DOCSearchController();
      id v57 = [super traitCollection];
    }
    uint64_t v58 = *(void *)&v1[v12];
    swift_retain();
    id v59 = [v57 horizontalSizeClass];
    uint64_t v60 = *(void *)(v58 + 24);
    char v61 = *(unsigned char *)(v58 + 32);
    *(void *)(v58 + 24) = v59;
    *(unsigned char *)(v58 + 32) = 0;
    sub_10051E508(v60, v61);

    swift_release();
    goto LABEL_18;
  }
LABEL_30:
  __break(1u);
}

id sub_100517F1C()
{
  uint64_t v1 = v0;
  id v2 = [v0 searchBar];
  unsigned int v3 = [v2 isFirstResponder];

  if (v3) {
    sub_10051C5F8();
  }
  unint64_t v4 = sub_100518244();
  sub_100178094(v4);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    id v7 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
    uint64_t v8 = (void **)(v5 + 40);
    do
    {
      id v9 = *v8;
      uint64_t v31 = (uint64_t)*(v8 - 1);
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v10 = *((void *)v7 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 8);
        id v13 = v9;
        uint64_t v14 = v12(v1, ObjectType, v10);
        swift_unknownObjectRelease();
        uint64_t v15 = *(void *)(v14 + 16);
        swift_bridgeObjectRelease();
        if (v15)
        {
          id v16 = sub_10051AF1C();
          if (((unint64_t)[v16 trashedItemsMembership] & 0xFFFFFFFFFFFFFFFDLL) == 0)
          {
            NSString v20 = v16;
            goto LABEL_18;
          }
          id v17 = [v16 providerDomainID];

          if (v17)
          {
            id result = [v16 providerDomainID];
            if (!result)
            {
              __break(1u);
              return result;
            }
            id v19 = result;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            NSString v20 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            if (DOCProviderDomainIDIsExternalDevice())
            {

LABEL_18:
LABEL_19:
              type metadata accessor for DOCQueryFragmentSuggestion();
              if (swift_dynamicCastClass())
              {
                id v24 = [v1 searchBar];
                id v25 = [v24 searchTextField];

                [v25 removeTokenAtIndex:v31];
              }
              goto LABEL_5;
            }
            char v26 = DOCProviderDomainIDIsSharedServerDomainID();

            if (v26) {
              goto LABEL_19;
            }
          }
          else
          {
          }
        }
      }
      else
      {
        id v21 = v9;
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v22 = *((void *)v7 + 1);
        uint64_t v23 = swift_getObjectType();
        LOBYTE(v22) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 16))(v1, v23, v22);
        swift_unknownObjectRelease();
        if ((v22 & 1) == 0) {
          goto LABEL_19;
        }
      }
LABEL_5:

      v8 += 2;
      --v6;
    }
    while (v6);
  }
  swift_bridgeObjectRelease();
  id result = sub_10051AC1C();
  if ((v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement] & 1) == 0)
  {
    uint64_t v27 = OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions;
    id v28 = v1;
    unint64_t v29 = swift_bridgeObjectRetain();
    id v30 = sub_10052030C(v29, (uint64_t)v28);
    swift_bridgeObjectRelease();

    *(void *)&v1[v27] = v30;
    swift_bridgeObjectRelease();
    sub_10051D03C();
    return sub_10051AC1C();
  }
  return result;
}

uint64_t sub_100518244()
{
  id v1 = [v0 searchBar];
  id v2 = [v1 searchTextField];

  id v3 = [v2 tokens];
  sub_10009E6C4(0, (unint64_t *)&unk_10071B0C8);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_18:
  swift_bridgeObjectRetain_n();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_3:
  uint64_t v6 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * v6);
    }
    uint64_t v8 = v7;
    uint64_t v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    if ([v7 representedObject])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v12, 0, sizeof(v12));
    }
    sub_1000516C4((uint64_t)v12, (uint64_t)v13);
    if (!v14) {
      break;
    }
    type metadata accessor for DOCSearchSuggestion();
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_22;
    }

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    ++v6;
    if (v9 == v5)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = (void *)v15;
      goto LABEL_20;
    }
  }
  sub_10006273C((uint64_t)v13);
LABEL_22:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_1005184F8()
{
  id v1 = [v0 searchBar];
  id v2 = [v1 text];

  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    id v2 = (id)(v3 & 0xFFFFFFFFFFFFLL);
  }
  else
  {
    unint64_t v5 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = (uint64_t)v2;
  }
  if (v6) {
    return 0;
  }
  id v8 = [v0 searchBar];
  id v9 = [v8 searchTextField];

  id v10 = [v9 tokens];
  sub_10009E6C4(0, (unint64_t *)&unk_10071B0C8);
  unint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  return v12 == 0;
}

void sub_1005186D0()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (uint64_t *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (objc_class *)type metadata accessor for DOCSearchController();
  v30.receiver = v0;
  v30.super_class = v6;
  [super viewDidLoad];
  id v7 = [v0 view];
  if (!v7)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v8 = v7;
  [v7 setAccessibilityIdentifier:DOCSearchControllerContainerViewIdentifier];

  id v9 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_configuration];
  id v10 = (char *)objc_allocWithZone((Class)type metadata accessor for DOCSuggesterManager());
  *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters] = _swiftEmptyArrayStorage;
  *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_gatheredSuggestions] = _swiftEmptyArrayStorage;
  *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_searchId] = 0;
  *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSuggesterManager_numWaitedSuggesterResults] = 0;
  *(void *)&v10[OBJC_IVAR____TtC5Files12DOCSuggester_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v10[OBJC_IVAR____TtC5Files12DOCSuggester_configuration] = v9;
  unint64_t v11 = (objc_class *)type metadata accessor for DOCSuggester();
  v29.receiver = v10;
  v29.super_class = v11;
  id v12 = v9;
  id v13 = [super init];
  uint64_t v14 = OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager;
  unint64_t v15 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager];
  *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager] = v13;

  uint64_t v16 = *(void *)&v1[v14];
  if (!v16)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)(v16 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate + 8) = &off_1006B4D98;
  swift_unknownObjectWeakAssign();
  id v17 = *(void **)&v1[v14];
  if (!v17)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  id v18 = v17;
  uint64_t v19 = sub_100103388(v12);

  NSString v20 = *(void **)&v1[v14];
  if (v20)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v21 = v20;
    *unint64_t v5 = static OS_dispatch_queue.main.getter();
    (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
    unint64_t v22 = _dispatchPreconditionTest(_:)();
    (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
    if (v22)
    {
      uint64_t v23 = OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters;
      *(void *)&v21[OBJC_IVAR____TtC5Files19DOCSuggesterManager_suggesters] = v19;
      swift_bridgeObjectRelease();
      unint64_t v22 = *(void *)&v21[v23];
      if (!(v22 >> 62))
      {
        uint64_t v24 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v24)
        {
LABEL_8:
          if (v24 >= 1)
          {
            uint64_t v25 = 0;
            do
            {
              if ((v22 & 0xC000000000000001) != 0) {
                char v26 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                char v26 = (char *)*(id *)(v22 + 8 * v25 + 32);
              }
              uint64_t v27 = v26;
              ++v25;
              *(void *)&v26[OBJC_IVAR____TtC5Files12DOCSuggester_delegate + 8] = &off_10068C870;
              swift_unknownObjectWeakAssign();
            }
            while (v24 != v25);
            goto LABEL_16;
          }
          __break(1u);
          goto LABEL_18;
        }
LABEL_16:
        swift_bridgeObjectRelease_n();

        id v28 = (char *)sub_1005174A8();
        *(void *)&v28[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestionsTableViewDelegate + 8] = &off_1006B4D78;
        swift_unknownObjectWeakAssign();

        sub_1005176AC();
        sub_1000C6A40();
        return;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    if (v24) {
      goto LABEL_8;
    }
    goto LABEL_16;
  }
LABEL_21:
  __break(1u);
}

void sub_100518AE0()
{
  v14.receiver = v0;
  v14.super_class = (Class)type metadata accessor for DOCSearchController();
  [super viewDidLayoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v0 view];
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = [v3 readableContentGuide];

      [v5 layoutFrame];
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      CGFloat v13 = v12;

      v15.origin.x = v7;
      v15.origin.y = v9;
      v15.size.width = v11;
      v15.size.height = v13;
      [v2 setConstant:CGRectGetWidth(v15)];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_100518D94(uint64_t (*a1)(id), uint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for Logger();
  id result = (id)__chkstk_darwin(v7);
  CGFloat v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState] - 2 >= 3)
  {
    uint64_t v31 = v9;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = a1;
    *(void *)(v12 + 24) = a2;
    CGFloat v13 = (char **)&v3[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss];
    swift_beginAccess();
    objc_super v14 = *v13;
    sub_1000C0640((uint64_t)a1);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *CGFloat v13 = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      objc_super v14 = sub_1000B7F78(0, *((void *)v14 + 2) + 1, 1, v14);
      *CGFloat v13 = v14;
    }
    unint64_t v17 = *((void *)v14 + 2);
    unint64_t v16 = *((void *)v14 + 3);
    if (v17 >= v16 >> 1)
    {
      objc_super v14 = sub_1000B7F78((char *)(v16 > 1), v17 + 1, 1, v14);
      *CGFloat v13 = v14;
    }
    *((void *)v14 + 2) = v17 + 1;
    id v18 = &v14[16 * v17];
    *((void *)v18 + 4) = sub_100180DF4;
    *((void *)v18 + 5) = v12;
    swift_endAccess();
    static Logger.UI.getter();
    uint64_t v19 = v3;
    NSString v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315650;
      uint64_t v29 = v7;
      uint64_t v32 = sub_10009B0E4(0xD000000000000028, 0x80000001005FE0E0, v33);
      objc_super v30 = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 12) = 1024;
      LODWORD(v32) = a3 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v22 + 18) = 2048;
      uint64_t v32 = *((void *)*v13 + 2);
      uint64_t v19 = v30;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s animated: %{BOOL}d blocks to run: %ld", (uint8_t *)v22, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v29);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v7);
    }
    id result = [v19 setActive:0];
    if ((a3 & 1) == 0)
    {
      uint64_t v23 = *v13;
      *CGFloat v13 = (char *)_swiftEmptyArrayStorage;
      uint64_t v24 = *((void *)v23 + 2);
      if (v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = v23 + 40;
        do
        {
          char v26 = (void (*)(uint64_t))*((void *)v25 - 1);
          uint64_t v27 = swift_retain();
          v26(v27);
          swift_release();
          v25 += 16;
          --v24;
        }
        while (v24);
        return (id)swift_bridgeObjectRelease_n();
      }
      else
      {
        return (id)swift_bridgeObjectRelease();
      }
    }
  }
  else if (a1)
  {
    return (id)a1(result);
  }
  return result;
}

id sub_10051926C(void *a1)
{
  id result = [v1 setActive:0];
  if (a1)
  {
    *((unsigned char *)v1 + OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled) = 1;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    v7[4] = sub_100521D28;
    uint64_t v7[5] = v4;
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 1107296256;
    v7[2] = sub_100045AE0;
    v7[3] = &unk_1006B4F98;
    id v5 = _Block_copy(v7);
    swift_unknownObjectRetain();
    id v6 = v1;
    swift_release();
    [a1 animateAlongsideTransition:0 completion:v5];
    _Block_release(v5);
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005193E8()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v30 = v6;
  uint64_t v31 = v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  objc_super v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v16 = (char *)&v26 - v15;
  if (([v1 isActive] & 1) != 0
    || (uint64_t v29 = v3,
        [v1 loadViewIfNeeded],
        sub_10051C5F8(),
        [v1 setActive:1],
        ![v1 isActive]))
  {
    uint64_t v22 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A0030;
    *(void *)(v23 + 56) = type metadata accessor for DOCSearchController();
    *(void *)(v23 + 64) = sub_1000BAEDC((unint64_t *)&unk_10071B0F0, v24, (void (*)(uint64_t))type metadata accessor for DOCSearchController);
    *(void *)(v23 + 32) = v1;
    id v25 = v1;
    os_log(_:dso:log:type:_:)();

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v11 + 8);
    v28(v14, v10);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v1;
    aBlock[4] = sub_1005212DC;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B4EF8;
    id v18 = _Block_copy(aBlock);
    id v19 = v1;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1000BAEDC((unint64_t *)&qword_100706770, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    NSString v20 = (void *)v27;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v30);
    return ((uint64_t (*)(char *, uint64_t))v28)(v16, v10);
  }
}

void sub_10051997C(void *a1)
{
  id v1 = [a1 searchBar];
  [v1 becomeFirstResponder];
}

void sub_1005199D0()
{
  if (v0[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] == 1
    && (uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v2 = [Strong traitCollectionExpectedForSearchPresentation];
    swift_unknownObjectRelease();
  }
  else
  {
    v7.receiver = v0;
    v7.super_class = (Class)type metadata accessor for DOCSearchController();
    [super traitCollection];
  }
  if (sub_1000951EC(1))
  {
    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints];
    swift_retain();
    id v4 = [v2 horizontalSizeClass];
    uint64_t v5 = *(void *)(v3 + 24);
    char v6 = *(unsigned char *)(v3 + 32);
    *(void *)(v3 + 24) = v4;
    *(unsigned char *)(v3 + 32) = 0;
    sub_10051E508(v5, v6);
    swift_release();
    sub_1000C6A40();
  }
}

uint64_t sub_100519AD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return (a1[1] == a2[1]) & ~(*a1 ^ *a2) & (a2[2] ^ a1[2] ^ 1u);
}

uint64_t sub_100519DBC(void *a1)
{
  char v3 = v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus];
  v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] = 1;
  if ((v3 & 1) == 0) {
    sub_1005176AC();
  }
  id v4 = [v1 searchBar];
  unsigned int v5 = [v4 isFirstResponder];

  if (v5) {
    sub_10051C5F8();
  }
  id v6 = [a1 text];
  if (v6)
  {
    objc_super v7 = v6;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1005207BC(a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100519F58(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchPredicate();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v38 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  id v11 = a1;
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v37 = v4;
    uint64_t v15 = v14;
    uint64_t v33 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v40 = v35;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v36 = v7;
    uint64_t v39 = sub_10009B0E4(0xD000000000000015, 0x80000001005FDE40, &v40);
    os_log_t v32 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2112;
    uint64_t v34 = v8;
    uint64_t v39 = (uint64_t)v11;
    uint64_t v16 = v5;
    id v17 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v33 = v11;

    uint64_t v5 = v16;
    os_log_t v18 = v32;
    _os_log_impl((void *)&_mh_execute_header, v32, v13, "%s. searchBar: %@", (uint8_t *)v15, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v37;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v36);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  id v19 = [v11 text];
  if (v19)
  {
    NSString v20 = v19;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t result = String.count.getter();
  if (result < 1)
  {
    swift_bridgeObjectRelease();
    *(void *)(v2 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    sub_10051D03C();
    return (uint64_t)sub_10051AC1C();
  }
  uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager);
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = String.doc_searchEscapedString.getter();
    uint64_t v26 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_100518244();
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    uint64_t v28 = static OS_dispatch_queue.main.getter();
    uint64_t v29 = v38;
    *id v38 = v28;
    (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v29, enum case for DispatchPredicate.onQueue(_:), v4);
    char v30 = _dispatchPreconditionTest(_:)();
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v5 + 8))(v29, v4);
    if (v30)
    {
      sub_100103E88(v24, v26, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)sub_10051AC1C();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10051A3FC()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v24 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = v23;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t aBlock = sub_10009B0E4(0xD000000000000022, 0x80000001005FDE10, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2080;
    id v9 = [v5 searchBar];
    id v10 = [v9 text];

    if (v10)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    uint64_t aBlock = v11;
    uint64_t v27 = v13;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t aBlock = sub_10009B0E4(v14, v15, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s search text: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v16 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer;
  [*(id *)&v5[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] invalidate];
  id v17 = self;
  uint64_t v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v30 = sub_10052129C;
  uint64_t v31 = v18;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v27 = 1107296256;
  uint64_t v28 = sub_10041B2E4;
  uint64_t v29 = &unk_1006B4EA8;
  id v19 = _Block_copy(&aBlock);
  swift_release();
  id v20 = [v17 scheduledTimerWithTimeInterval:0 repeats:v19 block:0.1];
  _Block_release(v19);
  os_log_type_t v21 = *(void **)&v5[v16];
  *(void *)&v5[v16] = v20;
}

void sub_10051A7B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10051A804();
  }
}

void sub_10051A804()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.UI.getter();
  uint64_t v5 = v0;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v20 = v1;
    uint64_t v8 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v23 = v19;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v21 = sub_10009B0E4(0xD000000000000020, 0x80000001005FDDE0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2080;
    id v9 = [v5 searchBar];
    id v10 = [v9 text];

    if (v10)
    {
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    uint64_t v21 = v11;
    uint64_t v22 = v13;
    sub_1000CBE70((uint64_t *)&unk_10070BD50);
    uint64_t v14 = String.init<A>(describing:)();
    uint64_t v21 = sub_10009B0E4(v14, v15, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s search text: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  uint64_t v16 = *(void **)&v5[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer];
  *(void *)&v5[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;

  id v17 = [v5 searchBar];
  sub_100519F58(v17);
}

id sub_10051AC1C()
{
  if (([v0 isActive] & 1) == 0)
  {
    id result = [v0 doc_hasAppearedOrIsAppearing];
    if (!result) {
      return result;
    }
  }
  BOOL v2 = sub_1005184F8();
  if ((v2 ^ [v0 showsSearchResultsController]))
  {
    return [v0 setShowsSearchResultsController:!v2];
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v4 = Strong;
  if (v2)
  {
    if (Strong)
    {
      if ([Strong respondsToSelector:"willDismissSearchResultsController:"]) {
        [v4 willDismissSearchResultsController:v0];
      }
      swift_unknownObjectRelease();
    }
    [v0 setShowsSearchResultsController:!v2];
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v5 = result;
      if ([result respondsToSelector:"didDismissSearchResultsController:"]) {
        [v5 didDismissSearchResultsController:v0];
      }
LABEL_22:
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    if (Strong)
    {
      if ([Strong respondsToSelector:"willPresentSearchResultsController:"]) {
        [v4 willPresentSearchResultsController:v0];
      }
      swift_unknownObjectRelease();
    }
    [v0 setShowsSearchResultsController:!v2];
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v6 = result;
      if ([result respondsToSelector:"didPresentSearchResultsController:"]) {
        [v6 didPresentSearchResultsController:v0];
      }
      goto LABEL_22;
    }
  }
  return result;
}

void sub_10051AE0C()
{
  id v1 = [v0 searchBar];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];

  id v5 = [v0 searchBar];
  id v3 = [v0 searchBar];
  id v4 = [v3 text];

  if (v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_1005207BC(v5);
  swift_bridgeObjectRelease();
}

id sub_10051AF1C()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *((void *)v6 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 8))(v0, ObjectType, v7);
    swift_unknownObjectRelease();
    unint64_t v10 = *(void *)(v9 + 16);
    if (v10)
    {
      uint64_t v11 = OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex;
      unint64_t v12 = *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
      if (v12 >= v10)
      {
        static Logger.UI.getter();
        uint64_t v18 = v0;
        swift_bridgeObjectRetain();
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = (_DWORD *)swift_slowAlloc();
          uint64_t v23 = v18;
          uint64_t v22 = v21;
          *uint64_t v21 = 134218240;
          unint64_t v24 = *(void *)&v1[v11];
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          *((_WORD *)v22 + 6) = 2048;
          swift_bridgeObjectRelease();
          unint64_t v24 = v10;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Tried to get out-of-bounds index %ld of searchScopes (array size is %ld", (uint8_t *)v22, 0x16u);
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        return [objc_allocWithZone((Class)NSFileProviderSearchQuery) initWithSearchScope:0];
      }
      else
      {
        uint64_t v13 = *(void *)(v9 + 16 * v12 + 40);
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v14 = swift_getObjectType();
        uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v14, v13);
        swift_unknownObjectRelease();
        return (id)v15;
      }
    }
    swift_bridgeObjectRelease();
  }
  id v17 = objc_allocWithZone((Class)NSFileProviderSearchQuery);

  return [v17 initWithSearchScope:0];
}

void sub_10051B220()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v128 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v128 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v128 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)&v128 - v16;
  if (!sub_1005184F8())
  {
    v135 = v8;
    id v19 = sub_10051AF1C();
    uint64_t v20 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController]
                    + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
    if (!v20)
    {
      __break(1u);
LABEL_77:

      __break(1u);
LABEL_78:
      sub_10006273C((uint64_t)&v145);
      while (1)
      {
LABEL_79:
        _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
      }
    }
    uint64_t v133 = (uint64_t)v14;
    uint64_t v140 = v5;
    uint64_t v138 = v2;
    uint64_t v21 = v20 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
    if (*(unsigned char *)(v21 + 16)) {
      goto LABEL_79;
    }
    id v22 = v19;
    uint64_t v23 = *(void **)v21;
    sub_10009E6C4(0, &qword_10071B0D8);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v25 = v23;
    LODWORD(v23) = [v25 isKindOfClass:ObjCClassFromMetadata];

    uint64_t v26 = *(char **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
    uint64_t v141 = v1;
    uint64_t v142 = v22;
    uint64_t v137 = v3;
    uint64_t v134 = v11;
    int v136 = (int)v23;
    if (v26 && *(void *)&v26[OBJC_IVAR____TtC5Files13DOCSuggestion_textReplacement + 8])
    {
      uint64_t v27 = v26;
      static Logger.UI.getter();
      uint64_t v28 = v27;
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = swift_slowAlloc();
        BOOL v132 = (void *)swift_slowAlloc();
        uint64_t v139 = swift_slowAlloc();
        uint64_t v145 = v139;
        *(_DWORD *)uint64_t v31 = 136315394;
        *(void *)&v144[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005FDD50, &v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v31 + 12) = 2112;
        *(void *)&v144[0] = v28;
        os_log_t v32 = v28;
        id v1 = v141;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *BOOL v132 = v26;

        _os_log_impl((void *)&_mh_execute_header, v29, v30, "%s suggestion: %@", (uint8_t *)v31, 0x16u);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v33 = v137;
      }
      else
      {

        uint64_t v33 = v3;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v138);
      type metadata accessor for DOCSearchSuggestion();
      uint64_t v34 = (void *)swift_dynamicCastClass();
      LODWORD(v139) = v34 != 0;
      if (v34)
      {
        uint64_t v35 = *(void (**)(void *))((swift_isaMask & *v34) + 0x1D8);
        uint64_t v36 = v28;
        v35(v142);
      }
    }
    else
    {
      LODWORD(v139) = 0;
    }
    id v37 = [v1 searchBar];
    id v38 = [v37 searchTextField];

    id v39 = [v38 tokens];
    sub_10009E6C4(0, (unint64_t *)&unk_10071B0C8);
    unint64_t v40 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v40 >> 62) {
      goto LABEL_74;
    }
    uint64_t v41 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v41)
    {
      uint64_t v42 = 4;
      while (1)
      {
        id v43 = (v40 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v40 + 8 * v42);
        id v44 = v43;
        uint64_t v45 = v42 - 3;
        if (__OFADD__(v42 - 4, 1)) {
          break;
        }
        if ([v43 representedObject])
        {
          _bridgeAnyObjectToAny(_:)();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v144, 0, sizeof(v144));
        }
        sub_1000516C4((uint64_t)v144, (uint64_t)&v145);
        if (!v147) {
          goto LABEL_78;
        }
        type metadata accessor for DOCSearchSuggestion();
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_79;
        }
        id v46 = v143;
        (*(void (**)(void *))((swift_isaMask & *v143) + 0x1D8))(v142);

        ++v42;
        if (v45 == v41) {
          goto LABEL_29;
        }
      }
      __break(1u);
LABEL_74:
      swift_bridgeObjectRetain_n();
      uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    id v48 = v141;
    id v47 = v142;
    if ((v139 & 1) != 0
      || (id v49 = [v141 searchBar],
          id v50 = [v49 text],
          v49,
          !v50))
    {
LABEL_44:
      id v97 = [v47 scopeFragment];
      if (v97)
      {

        if ((sub_10051C538() & 1) == 0)
        {
          [v47 setShouldPerformServerSearch:0];
          long long v98 = (void *)static DOCLog.UI.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v99 = swift_allocObject();
          *(_OWORD *)(v99 + 16) = xmmword_1005A0030;
          *(void *)(v99 + 56) = sub_10009E6C4(0, &qword_10071B0E0);
          *(void *)(v99 + 64) = sub_1005211FC();
          *(void *)(v99 + 32) = v47;
          id v100 = v47;
          static os_log_type_t.default.getter();
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
        }
      }
      unsigned int v101 = [self protectedAppsEnabled];
      uint64_t v102 = v140;
      if (!v101) {
        goto LABEL_62;
      }
      if (v136)
      {
        id v103 = [self sharedManager];
        uint64_t v104 = sub_100520FD4();
        unint64_t v106 = v105;

        if (v106)
        {
          uint64_t v107 = HIBYTE(v106) & 0xF;
          if ((v106 & 0x2000000000000000) == 0) {
            uint64_t v107 = v104 & 0xFFFFFFFFFFFFLL;
          }
          if (v107)
          {
            char v108 = v134;
            static Logger.UI.getter();
            swift_bridgeObjectRetain_n();
            uint64_t v109 = Logger.logObject.getter();
            os_log_type_t v110 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v109, v110))
            {
              uint64_t v111 = swift_slowAlloc();
              uint64_t v145 = swift_slowAlloc();
              *(_DWORD *)uint64_t v111 = 136315394;
              *(void *)&v144[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005FDD50, &v145);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v111 + 12) = 2080;
              swift_bridgeObjectRetain();
              *(void *)&v144[0] = sub_10009B0E4(v104, v106, &v145);
              id v48 = v141;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v109, v110, "%s [PROTECTED APPS] Filtering search results. Created filter query clause %s", (uint8_t *)v111, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            (*(void (**)(char *, uint64_t))(v137 + 8))(v108, v138);
            sub_100516D08(v104, (void *)v106);
            swift_bridgeObjectRelease();
            goto LABEL_62;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v102 = v135;
        static Logger.UI.getter();
        uint64_t v112 = Logger.logObject.getter();
        os_log_type_t v113 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v112, v113))
        {
          uint64_t v114 = (uint8_t *)swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          *(_DWORD *)uint64_t v114 = 136315138;
          id v47 = v142;
          *(void *)&v144[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005FDD50, &v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          BOOL v115 = "%s [PROTECTED APPS] No hidden apps to filter search results.";
          goto LABEL_60;
        }
      }
      else
      {
        static Logger.UI.getter();
        uint64_t v112 = Logger.logObject.getter();
        os_log_type_t v113 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v112, v113))
        {
          uint64_t v114 = (uint8_t *)swift_slowAlloc();
          uint64_t v145 = swift_slowAlloc();
          *(_DWORD *)uint64_t v114 = 136315138;
          id v47 = v142;
          *(void *)&v144[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005FDD50, &v145);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          BOOL v115 = "%s [PROTECTED APPS] Not filtering search results item collection does not support predicates.";
LABEL_60:
          _os_log_impl((void *)&_mh_execute_header, v112, v113, v115, v114, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
      }

      (*(void (**)(char *, uint64_t))(v137 + 8))(v102, v138);
LABEL_62:
      unint64_t v116 = (char *)(id)UIKeyboardGetCurrentInputMode();
      if (!v116)
      {
LABEL_68:
        char v127 = *(void **)&v48[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
        *(void *)&v48[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = v47;

        return;
      }
      uint64_t v0 = v116;
      sub_1000CBE70(&qword_100707EF0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10059B760;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v118;
      *(void *)(inited + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 56) = v119;
      id v120 = (id)UIKeyboardInputModeGetNormalizedIdentifier();
      if (v120)
      {
        uint64_t v121 = v120;
        uint64_t v122 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v124 = v123;

        char v125 = sub_100109128(v122, v124, (void *)inited);
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_arrayDestroy();
        id v126 = (id)UIKeyboardInputModeGetLanguage();

        if (v126)
        {
          if ((v125 & 1) == 0) {
            [v47 setKeyboardLanguage:v126];
          }
        }
        goto LABEL_68;
      }
      goto LABEL_77;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    String.doc_searchEscapedString.getter();
    swift_bridgeObjectRelease();
    if (String.count.getter() >= 1)
    {
      id v51 = [self semanticSearch];
      unsigned int v52 = [v51 isEnabled];

      unint64_t v53 = (unint64_t)[v47 trashedItemsMembership] & 0xFFFFFFFFFFFFFFFDLL;
      if (v52)
      {
        if (v53 && (sub_10051C538() & 1) == 0)
        {
          uint64_t v54 = v133;
          static Logger.UI.getter();
          uint64_t v55 = Logger.logObject.getter();
          os_log_type_t v56 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v55, v56))
          {
            id v57 = (uint8_t *)swift_slowAlloc();
            uint64_t v145 = swift_slowAlloc();
            *(_DWORD *)id v57 = 136315138;
            id v47 = v142;
            *(void *)&v144[0] = sub_10009B0E4(0xD000000000000016, 0x80000001005FDD50, &v145);
            id v48 = v141;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v55, v56, "%s [SEMANTIC SEARCH] Semantic Search enabled", v57, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v133, v138);
          }
          else
          {

            (*(void (**)(uint64_t, uint64_t))(v137 + 8))(v54, v138);
          }
          [v47 setShouldPerformSemanticSearch:1];
          NSString v58 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v47 setUserQueryString:v58];
          goto LABEL_41;
        }
LABEL_40:
        NSString v58 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v47 setFilename:v58];
LABEL_41:

        goto LABEL_44;
      }
      if (!v53 || (sub_10051C538() & 1) != 0) {
        goto LABEL_40;
      }
      uint64_t v59 = String.doc_searchQueryValue.getter();
      char v61 = v60;
      swift_bridgeObjectRelease();
      uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v146 = v62;
      v63._countAndFlagsBits = 540884256;
      v63._object = (void *)0xE400000000000000;
      String.append(_:)(v63);
      v64._countAndFlagsBits = v59;
      v64._object = v61;
      String.append(_:)(v64);
      uint64_t v65 = v146;
      uint64_t v139 = v145;
      uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v146 = v66;
      v67._countAndFlagsBits = 540884256;
      v67._object = (void *)0xE400000000000000;
      String.append(_:)(v67);
      v68._countAndFlagsBits = v59;
      v68._object = v61;
      String.append(_:)(v68);
      uint64_t v133 = v145;
      BOOL v132 = v146;
      uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v146 = v69;
      v70._countAndFlagsBits = 540884256;
      v70._object = (void *)0xE400000000000000;
      String.append(_:)(v70);
      v71._countAndFlagsBits = v59;
      v71._object = v61;
      String.append(_:)(v71);
      uint64_t v131 = v145;
      uint64_t v130 = v146;
      uint64_t v145 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v146 = v72;
      v73._countAndFlagsBits = 540884256;
      v73._object = (void *)0xE400000000000000;
      String.append(_:)(v73);
      v74._countAndFlagsBits = v59;
      v74._object = v61;
      String.append(_:)(v74);
      uint64_t v75 = v146;
      uint64_t v129 = v145;
      uint64_t v145 = 0;
      uint64_t v146 = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(20);
      uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v78 = v77;
      swift_bridgeObjectRelease();
      uint64_t v145 = v76;
      uint64_t v146 = v78;
      v79._countAndFlagsBits = 540884256;
      v79._object = (void *)0xE400000000000000;
      String.append(_:)(v79);
      v80._countAndFlagsBits = v59;
      v80._object = v61;
      String.append(_:)(v80);
      v81._countAndFlagsBits = 545029152;
      v81._object = (void *)0xE400000000000000;
      String.append(_:)(v81);
      v82._countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
      String.append(_:)(v82);
      swift_bridgeObjectRelease();
      v83._countAndFlagsBits = 540884256;
      v83._object = (void *)0xE400000000000000;
      String.append(_:)(v83);
      v84._countAndFlagsBits = v59;
      v84._object = v61;
      String.append(_:)(v84);
      id v48 = v141;
      swift_bridgeObjectRelease();
      uint64_t v86 = v145;
      char v85 = v146;
      uint64_t v145 = 0;
      uint64_t v146 = (void *)0xE000000000000000;
      id v47 = v142;
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      uint64_t v145 = 40;
      uint64_t v146 = (void *)0xE100000000000000;
      v87._countAndFlagsBits = v139;
      v87._object = v65;
      String.append(_:)(v87);
      swift_bridgeObjectRelease();
      v88._countAndFlagsBits = 545029152;
      v88._object = (void *)0xE400000000000000;
      String.append(_:)(v88);
      v89._countAndFlagsBits = v133;
      v89._object = v132;
      String.append(_:)(v89);
      swift_bridgeObjectRelease();
      v90._countAndFlagsBits = 545029152;
      v90._object = (void *)0xE400000000000000;
      String.append(_:)(v90);
      v91._countAndFlagsBits = v131;
      v91._object = v130;
      String.append(_:)(v91);
      swift_bridgeObjectRelease();
      v92._countAndFlagsBits = 545029152;
      v92._object = (void *)0xE400000000000000;
      String.append(_:)(v92);
      v93._countAndFlagsBits = v129;
      v93._object = v75;
      String.append(_:)(v93);
      swift_bridgeObjectRelease();
      v94._countAndFlagsBits = 545029152;
      v94._object = (void *)0xE400000000000000;
      String.append(_:)(v94);
      v95._countAndFlagsBits = v86;
      v95._object = v85;
      String.append(_:)(v95);
      swift_bridgeObjectRelease();
      v96._countAndFlagsBits = 41;
      v96._object = (void *)0xE100000000000000;
      String.append(_:)(v96);
      sub_100516D08(v145, v146);
    }
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  uint64_t v18 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;
}

id sub_10051C538()
{
  id v1 = [v0 providerDomainID];

  if (!v1) {
    return 0;
  }
  id result = [v0 providerDomainID];
  if (result)
  {
    uint64_t v3 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (DOCProviderDomainIDIsExternalDevice()) {
      uint64_t v5 = 1;
    }
    else {
      uint64_t v5 = DOCProviderDomainIDIsSharedServerDomainID();
    }

    return (id)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10051C5F8()
{
  id v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 8))(v1, ObjectType, v4);
    unint64_t v7 = *(void *)(v6 + 16);
    if (v7 < 2)
    {
      swift_bridgeObjectRelease();
      id v19 = [v1 searchBar];
      [v19 setScopeButtonTitles:0];
    }
    else
    {
      id v20 = [v1 searchBar];
      sub_100059E2C(0, v7, 0);
      uint64_t v8 = (uint64_t *)(v6 + 40);
      do
      {
        uint64_t v9 = *v8;
        uint64_t v10 = swift_getObjectType();
        uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
        swift_unknownObjectRetain();
        uint64_t v12 = v11(v10, v9);
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
        unint64_t v16 = _swiftEmptyArrayStorage[2];
        unint64_t v15 = _swiftEmptyArrayStorage[3];
        if (v16 >= v15 >> 1) {
          sub_100059E2C(v15 > 1, v16 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v16 + 1;
        id v17 = &_swiftEmptyArrayStorage[2 * v16];
        v17[4] = v12;
        v17[5] = v14;
        v8 += 2;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v20 setScopeButtonTitles:isa];

      id v19 = [v1 searchBar];
      [v19 setSelectedScopeButtonIndex:*(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex]];
    }

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10051C93C()
{
  id v1 = [v0 searchBar];
  id v2 = [v1 searchTextField];

  id v3 = [v2 tokens];
  sub_10009E6C4(0, (unint64_t *)&unk_10071B0C8);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      if (v5 >= 1)
      {
        uint64_t v6 = 0;
        while (1)
        {
          if ((v4 & 0xC000000000000001) != 0) {
            id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v7 = *(id *)(v4 + 8 * v6 + 32);
          }
          uint64_t v8 = v7;
          if ([v7 representedObject])
          {
            _bridgeAnyObjectToAny(_:)();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v37, 0, sizeof(v37));
          }
          sub_1000516C4((uint64_t)v37, (uint64_t)v38);
          if (v39)
          {
            type metadata accessor for DOCSearchSuggestion();
            if (swift_dynamicCast()) {
              goto LABEL_18;
            }
          }
          else
          {
            sub_10006273C((uint64_t)v38);
          }
          unint64_t v40 = 0;
LABEL_18:

          if (v40)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          if (v5 == ++v6)
          {
            swift_bridgeObjectRelease();
            goto LABEL_24;
          }
        }
      }
      __break(1u);
      goto LABEL_51;
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  id v36 = v2;
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if (!v9) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v9) {
      goto LABEL_37;
    }
  }
  if (v9 < 1)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  for (uint64_t i = 0; i != v9; ++i)
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      uint64_t v11 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v11 = (char *)(id)_swiftEmptyArrayStorage[i + 4];
    }
    uint64_t v12 = v11;
    uint64_t v13 = *(uint64_t (**)(uint64_t))&v11[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    if (v13)
    {
      uint64_t v14 = swift_retain();
      uint64_t v15 = v13(v14);
      unint64_t v16 = (void **)&v12[OBJC_IVAR____TtC5Files13DOCSuggestion_customImage];
      swift_beginAccess();
      id v17 = *v16;
      *unint64_t v16 = (void *)v15;

      sub_1000A7258((uint64_t)v13);
    }
    uint64_t v18 = *(uint64_t (**)(uint64_t))&v12[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    if (v18)
    {
      uint64_t v19 = swift_retain();
      uint64_t v20 = v18(v19);
      uint64_t v21 = (void **)&v12[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
      swift_beginAccess();
      id v22 = *v21;
      *uint64_t v21 = (void *)v20;

      sub_1000A7258((uint64_t)v18);
    }
  }
LABEL_37:
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_49;
    }
  }
  else
  {
    uint64_t v23 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v23) {
      goto LABEL_49;
    }
  }
  unint64_t v40 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v23 < 0)
  {
LABEL_52:
    __break(1u);
    JUMPOUT(0x10051D01CLL);
  }
  unint64_t v24 = self;
  uint64_t v25 = 0;
  do
  {
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
      os_log_type_t v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      os_log_type_t v30 = (char *)(id)_swiftEmptyArrayStorage[v25 + 4];
    }
    uint64_t v31 = v30;
    os_log_t v32 = (void **)&v30[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImage];
    swift_beginAccess();
    uint64_t v33 = *v32;
    id v34 = v33;
    if (!v33)
    {
      NSString v26 = String._bridgeToObjectiveC()();
      id v34 = [self systemImageNamed:v26];
    }
    ++v25;
    id v27 = v33;
    swift_bridgeObjectRetain();
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v29 = [v24 tokenWithIcon:v34 text:v28];

    [v29 setRepresentedObject:v31];
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v23 != v25);
LABEL_49:
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 setTokens:isa];
}

void sub_10051D03C()
{
  id v1 = v0;
  sub_10051D230((unsigned char *)1);
  id v2 = (char *)sub_1005174A8();
  uint64_t v3 = OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions;
  uint64_t v4 = OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions;
  *(void *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_suggestions] = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v2[OBJC_IVAR____TtC5Files33DOCSuggestionsTableViewController_sortedSuggestions] = *(void *)&v2[v4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1004BF84C(1);

  unint64_t v5 = *(void *)&v1[v3];
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    if (!v6) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_11;
    }
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  if (v6 < 0)
  {
    __break(1u);
    return;
  }
  uint64_t v7 = 0;
  do
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v5 + 8 * v7 + 32);
    }
    uint64_t v9 = v8;
    ++v7;
    sub_100102DE8();

    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
  }
  while (v6 != v7);
LABEL_11:
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10071B0B8);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setSearchSuggestions:isa];
}

unsigned char *sub_10051D230(unsigned char *result)
{
  char v2 = (char)result;
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = (unsigned char *)swift_bridgeObjectRelease();
    if (v7 < 1) {
      goto LABEL_4;
    }
  }
  else if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) < 1)
  {
    goto LABEL_4;
  }
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement) & 1) == 0)
  {
    int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus);
    int v4 = v6 ^ 1;
    if (v6 & 1) == 0 && (v2) {
      return result;
    }
    goto LABEL_6;
  }
LABEL_4:
  if (v2) {
    return result;
  }
  int v4 = 1;
LABEL_6:
  uint64_t result = *(unsigned char **)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  int v5 = result[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed];
  result[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_contentUnavailableUIAllowed] = v4;
  if (v4 != v5)
  {
    return [result docSetNeedsUpdateContentUnavailableConfiguration];
  }
  return result;
}

void sub_10051D330()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
  if (v1)
  {
    char v2 = v0;
    id v18 = *(id *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion];
    if (*(void *)(v1 + OBJC_IVAR____TtC5Files13DOCSuggestion_textReplacement + 8))
    {
      id v3 = v18;
      swift_bridgeObjectRetain();
      sub_10051AE0C();
      swift_bridgeObjectRelease();
    }
    else
    {
      int v4 = v18;
      id v5 = [v2 searchBar];
      id v6 = [v5 searchTextField];

      id v7 = [v2 searchBar];
      id v8 = [v7 searchTextField];

      id v9 = [v8 textualRange];
      uint64_t v10 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v4) + 0x178))(v18);
      swift_bridgeObjectRetain();
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v12 = [self tokenWithIcon:v10 text:v11];

      [v12 setRepresentedObject:v4];
      id v13 = [v2 searchBar];
      id v14 = [v13 searchTextField];

      id v15 = [v14 tokens];
      sub_10009E6C4(0, (unint64_t *)&unk_10071B0C8);
      unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      [v6 replaceTextualPortionOfRange:v9 withToken:v12 atIndex:v17];

      sub_10051AC1C();
    }
  }
}

id sub_10051D68C()
{
  return sub_10051E2D0(type metadata accessor for DOCSearchController);
}

void sub_10051D7F0()
{
}

void sub_10051D7F8(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState;
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_searchPresentationState) = a1;
  switch(a1)
  {
    case 2:
      if (v3 == 2) {
        return;
      }
      break;
    case 3:
      if (v3 == 3) {
        return;
      }
      break;
    case 4:
      if (v3 == 4) {
        return;
      }
      int v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
      char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
      *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible) = 0;
      if ((v5 & 1) == 0) {
        return;
      }
      sub_10051DB00();
      goto LABEL_16;
    default:
      if (v3 - 2) >= 3 && ((((a1 & 1) == 0) ^ v3)) {
        return;
      }
      break;
  }
  int v4 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
  int v6 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible);
  int v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_canShowAppMenuButton);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible) = v7;
  if (v6 != v7) {
    sub_10051DB00();
  }
  if (v6)
  {
LABEL_16:
    if (*v4 == 1 && (*(unsigned char *)(v1 + v2) & 0xFE) != 2)
    {
      sub_10051D910();
    }
  }
}

void sub_10051D910()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v2 = Strong + OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate;
  id v18 = (id)Strong;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    id v15 = v18;
LABEL_14:

    return;
  }
  int v3 = *(void **)(v0 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    int v6 = *(uint64_t (**)(id, uint64_t, uint64_t))(v4 + 24);
    int v7 = v3;
    id v8 = (void *)v6(v18, ObjectType, v4);
    id v9 = *(void **)&v7[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu];
    *(void *)&v7[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu] = v8;
    id v10 = v8;

    sub_100117710();
    NSString v11 = v7;
    if (v8 && (id v12 = [v10 accessibilityIdentifier]) != 0)
    {
      id v13 = v12;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v16 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v14 = v16;
    }
    else
    {
      id v14 = 0;
    }
    [v11 setAccessibilityIdentifier:v14];

    swift_unknownObjectRelease();
    id v15 = v17;
    goto LABEL_14;
  }

  swift_unknownObjectRelease();
}

void sub_10051DB00()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible;
    if (v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButtonVisible] == 1)
    {
      id v21 = Strong;
      id v3 = [Strong searchBar];
      uint64_t v4 = OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton;
      char v5 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
      if (v5)
      {
        int v6 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
        id v7 = v6;
      }
      else
      {
        id v7 = [objc_allocWithZone((Class)type metadata accessor for DOCSearchAppMenuButton()) init];
        int v6 = 0;
        char v5 = *(void **)&v0[v4];
      }
      *(void *)&v0[v4] = v7;
      id v10 = v7;
      id v11 = v6;

      uint64_t v12 = self;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v0;
      *(void *)(v13 + 24) = v10;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_100520768;
      *(void *)(v14 + 24) = v13;
      aBlock[4] = sub_1000879B8;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100087990;
      void aBlock[3] = &unk_1006B4E58;
      id v15 = _Block_copy(aBlock);
      id v16 = (char *)v10;
      id v17 = v0;
      swift_retain();
      swift_release();
      [(id)v12 performWithoutAnimation:v15];
      _Block_release(v15);
      LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
      uint64_t v18 = swift_release();
      if (v12)
      {
        __break(1u);
      }
      else if (*(void *)&v16[OBJC_IVAR____TtC5Files22DOCSearchAppMenuButton_attachedMenu])
      {
        [v3 _setSearchFieldContainerLayoutCustomizationDelegate:v17];
        id v19 = v3;
        [v16 frame];
        [v19 _setAdditionalPaddingForCancelButtonAtLeadingEdge:CGRectGetWidth(v25) + 8.0 + 24.0];
        swift_release();
      }
      else
      {
        int v20 = v0[v2];
        v0[v2] = 0;
        if (v20 == 1) {
          sub_10051DB00(v18);
        }
        [v3 _setSearchFieldContainerLayoutCustomizationDelegate:0];
        [v3 _setAdditionalPaddingForCancelButtonAtLeadingEdge:0.0];
        swift_release();
      }
    }
    else
    {
      id v8 = *(void **)&v0[OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton];
      if (v8)
      {
        id v22 = Strong;
        id v9 = v8;
        [v9 removeFromSuperview];

        uint64_t Strong = v22;
      }
    }
  }
}

void sub_10051DE44(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat MidY, CGFloat a9, CGFloat a10)
{
  id v11 = *(void **)(v10 + OBJC_IVAR____TtC5Files32DOCSearchControllerStackedLayout_appMenuButton);
  if (!v11) {
    return;
  }
  if (!a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  id v21 = v11;
  char v22 = UIView.doc_isRTL.getter();
  [v21 frame];
  v29.origin.x = a7;
  v29.origin.y = MidY;
  v29.size.width = a9;
  v29.size.height = a10;
  if (CGRectIsEmpty(v29))
  {
    [a1 _additionalPaddingForCancelButtonAtLeadingEdge];
    double v24 = v23 + -8.0;
    if (v22)
    {
      if (!a2)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      double v24 = -v24;
      [a2 bounds];
      double MinX = CGRectGetMinX(v30);
    }
    else
    {
      if (!a2)
      {
LABEL_18:
        __break(1u);
        return;
      }
      [a2 bounds];
      double MinX = CGRectGetMaxX(v31);
    }
    a7 = MinX + v24;
    v32.origin.x = a3;
    v32.origin.y = a4;
    v32.size.width = a5;
    v32.size.height = a6;
    MidY = CGRectGetMidY(v32);
    a9 = 0.0;
    a10 = 0.0;
  }
  CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)();
  CGRect.byCenteringVertically(relativeToRect:isRTL:)();
  if (!a2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  [a2 bounds];
  v34.origin.x = a7;
  v34.origin.y = MidY;
  v34.size.width = a9;
  v34.size.height = a10;
  CGRectContainsRect(v33, v34);
  id v26 = [v21 window];
  if (v26) {

  }
  uint64_t v27 = sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  __chkstk_darwin(v27);
  static UIView.doc_performBlock(allowingAnimations:block:)();
}

void sub_10051E0CC(void *a1, char a2, double *a3, void *a4)
{
  double v7 = 0.0;
  if (a2) {
    double v7 = 1.0;
  }
  [a1 setAlpha:v7];
  [a1 setFrame:*a3, a3[1], a3[2], a3[3]];
  id v8 = [a1 superview];

  if (!v8)
  {
    if (a4)
    {
      [a4 addSubview:a1];
      [a4 bringSubviewToFront:a1];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10051E2B8()
{
  return sub_10051E2D0(type metadata accessor for DOCSearchControllerStackedLayout);
}

id sub_10051E2D0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

void *sub_10051E354()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController);
  id v2 = v1;
  return v1;
}

void sub_10051E384(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + 16;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v1 + 16);
  if (*(void *)(v5 + 16) && (uint64_t v6 = sub_1000BBA9C(a1), (v7 & 1) != 0))
  {
    uint64_t v14 = *(void **)(*(void *)(v5 + 56) + 8 * v6);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
  }
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_10009EDD8(v8);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *(void *)(v2 + 16);
  *(void *)(v2 + 16) = 0x8000000000000000;
  sub_1003E0150((uint64_t)v14, a1, isUniquelyReferenced_nonNull_native);
  *(void *)(v2 + 16) = v13;
  swift_bridgeObjectRelease();
  swift_endAccess();
  if ((*(unsigned char *)(v2 + 32) & 1) == 0 && *(void *)(*(void *)v4 + 16))
  {
    sub_1000BBA9C(*(void *)(v2 + 24));
    if (v10)
    {
      id v11 = self;
      sub_10009E6C4(0, (unint64_t *)&unk_100706720);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v11 activateConstraints:isa];
    }
  }
}

void sub_10051E508(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    if (*(void *)(*(void *)(v2 + 16) + 16))
    {
      sub_1000BBA9C(a1);
      if (v4)
      {
        uint64_t v5 = self;
        sub_10009E6C4(0, (unint64_t *)&unk_100706720);
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v5 deactivateConstraints:isa];
      }
    }
  }
  if ((*(unsigned char *)(v2 + 32) & 1) == 0)
  {
    uint64_t v7 = *(void *)(v2 + 24);
    swift_beginAccess();
    if (*(void *)(*(void *)(v2 + 16) + 16))
    {
      sub_1000BBA9C(v7);
      if (v8)
      {
        id v9 = self;
        sub_10009E6C4(0, (unint64_t *)&unk_100706720);
        swift_bridgeObjectRetain();
        Class v10 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v9 activateConstraints:v10];
      }
    }
  }
}

uint64_t sub_10051E674()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t UIViewController.doc_manuallyHiddenForSearch.getter()
{
  uint64_t v0 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  return v2 & 1;
}

void sub_10051E704(unsigned char *a1@<X8>)
{
  char v2 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  *a1 = v3 & 1;
}

void sub_10051E774(unsigned __int8 *a1)
{
}

void sub_10051E79C(unsigned __int8 *a1)
{
}

void (*UIViewController.doc_manuallyHiddenForSearch.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  char v3 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();

  swift_release();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a1 + 9) & 1;
  return sub_10051E848;
}

void sub_10051E848(uint64_t a1)
{
}

uint64_t type metadata accessor for DOCEverywhereSearchScope()
{
  return self;
}

uint64_t type metadata accessor for DOCItemCollectionSearchScope()
{
  return self;
}

uint64_t type metadata accessor for DOCFileProviderSearchScope()
{
  return self;
}

uint64_t getEnumTagSinglePayload for DOCSearchController.LayoutConfiguration(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

ValueMetadata *type metadata accessor for DOCSearchController.LayoutConfiguration()
{
  return &type metadata for DOCSearchController.LayoutConfiguration;
}

ValueMetadata *type metadata accessor for DOCSearchController.TraitSource()
{
  return &type metadata for DOCSearchController.TraitSource;
}

unsigned char *_s5Files23DOCSuggestionsPlacementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10051EA5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSuggestionsPlacement()
{
  return &type metadata for DOCSuggestionsPlacement;
}

ValueMetadata *type metadata accessor for DOCItemCollectionSearchScope.Source()
{
  return &type metadata for DOCItemCollectionSearchScope.Source;
}

uint64_t getEnumTagSinglePayload for DOCSearchPresentationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10051EB54);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 2;
  if (v8 <= 2) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCSearchPresentationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10051EC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSearchPresentationState()
{
  return &type metadata for DOCSearchPresentationState;
}

unint64_t sub_10051EC78()
{
  unint64_t result = qword_10071B0A8;
  if (!qword_10071B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0A8);
  }
  return result;
}

unint64_t sub_10051ECD0()
{
  unint64_t result = qword_10071B0B0;
  if (!qword_10071B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0B0);
  }
  return result;
}

Swift::Int sub_10051ED24(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0)
    {
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      goto LABEL_194;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v12 = *(void *)(v10 + 8 * i);
        uint64_t v13 = v9;
        do
        {
          uint64_t v14 = *(void *)(v10 + v13);
          if (*(unsigned __int8 *)(v12 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(v14 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category)) {
            break;
          }
          if (!v10) {
            goto LABEL_189;
          }
          *(void *)(v10 + v13 + 8) = v14;
          *(void *)(v10 + v13) = v12;
          v13 -= 8;
        }
        while (v13 != -8);
        v9 += 8;
      }
    }
  }
  else
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1)
    {
LABEL_194:
      Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v119 = a1;
    Swift::Int v120 = result;
    uint64_t v122 = v1;
    if (v3 >= 2)
    {
      uint64_t v6 = v5 >> 1;
      type metadata accessor for DOCSearchSuggestion();
      uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
      *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
      unsigned int v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
      uint64_t v133 = v7;
      goto LABEL_18;
    }
    id v15 = (char *)_swiftEmptyArrayStorage;
    uint64_t v133 = (uint64_t)_swiftEmptyArrayStorage;
    unsigned int v8 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1)
    {
LABEL_18:
      Swift::Int v16 = 0;
      uint64_t v17 = *a1;
      uint64_t v124 = *a1 - 8;
      id v15 = (char *)_swiftEmptyArrayStorage;
      uint64_t v18 = &OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category;
      Swift::Int v19 = v3;
      Swift::Int v121 = v3;
      __dst = v8;
      uint64_t v125 = v17;
      while (1)
      {
        Swift::Int v21 = v16 + 1;
        if (v16 + 1 < v19)
        {
          unsigned int v22 = *(unsigned __int8 *)(*(void *)(v17 + 8 * v21) + *v18);
          unsigned int v23 = *(unsigned __int8 *)(*(void *)(v17 + 8 * v16) + *v18);
          Swift::Int v21 = v16 + 2;
          if (v16 + 2 < v19)
          {
            unsigned int v24 = v22;
            while (1)
            {
              unsigned int v25 = *(unsigned __int8 *)(*(void *)(v17 + 8 * v21) + *v18);
              if (v22 < v23 == v25 >= v24) {
                break;
              }
              ++v21;
              unsigned int v24 = v25;
              if (v19 == v21)
              {
                Swift::Int v21 = v19;
                break;
              }
            }
          }
          if (v22 < v23)
          {
            if (v21 < v16) {
              goto LABEL_184;
            }
            if (v16 < v21)
            {
              id v26 = (uint64_t *)(v124 + 8 * v21);
              Swift::Int v27 = v21;
              Swift::Int v28 = v16;
              CGRect v29 = (uint64_t *)(v17 + 8 * v16);
              do
              {
                if (v28 != --v27)
                {
                  if (!v17) {
                    goto LABEL_191;
                  }
                  uint64_t v30 = *v29;
                  uint64_t *v29 = *v26;
                  uint64_t *v26 = v30;
                }
                ++v28;
                --v26;
                ++v29;
              }
              while (v28 < v27);
            }
          }
        }
        if (v21 < v19)
        {
          if (__OFSUB__(v21, v16)) {
            goto LABEL_179;
          }
          if (v21 - v16 < v120)
          {
            Swift::Int v31 = v16 + v120;
            if (__OFADD__(v16, v120)) {
              goto LABEL_185;
            }
            if (v31 >= v19) {
              Swift::Int v31 = v19;
            }
            if (v31 < v16) {
              goto LABEL_186;
            }
            if (v21 != v31)
            {
              CGRect v32 = (uint64_t *)(v124 + 8 * v21);
              do
              {
                uint64_t v33 = *(void *)(v17 + 8 * v21);
                Swift::Int v34 = v16;
                uint64_t v35 = v32;
                do
                {
                  uint64_t v36 = *v35;
                  if (*(unsigned __int8 *)(v33 + *v18) >= *(unsigned __int8 *)(*v35 + *v18)) {
                    break;
                  }
                  if (!v17) {
                    goto LABEL_187;
                  }
                  uint64_t *v35 = v33;
                  v35[1] = v36;
                  --v35;
                  ++v34;
                }
                while (v21 != v34);
                ++v21;
                ++v32;
              }
              while (v21 != v31);
              Swift::Int v21 = v31;
            }
          }
        }
        if (v21 < v16) {
          goto LABEL_178;
        }
        Swift::Int v123 = v21;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v15 = sub_10051F91C(0, *((void *)v15 + 2) + 1, 1, v15);
        }
        unsigned int v8 = __dst;
        unint64_t v38 = *((void *)v15 + 2);
        unint64_t v37 = *((void *)v15 + 3);
        unint64_t v20 = v38 + 1;
        if (v38 >= v37 >> 1)
        {
          uint64_t v111 = sub_10051F91C((char *)(v37 > 1), v38 + 1, 1, v15);
          unsigned int v8 = __dst;
          id v15 = v111;
        }
        *((void *)v15 + 2) = v20;
        uint64_t v39 = v15 + 32;
        unint64_t v40 = &v15[16 * v38 + 32];
        *(void *)unint64_t v40 = v16;
        *((void *)v40 + 1) = v123;
        if (v38) {
          break;
        }
        unint64_t v20 = 1;
LABEL_20:
        Swift::Int v19 = v121;
        Swift::Int v16 = v123;
        if (v123 >= v121) {
          goto LABEL_150;
        }
      }
      id v126 = v15 + 32;
      char v127 = v15;
      while (1)
      {
        unint64_t v41 = v20 - 1;
        if (v20 >= 4)
        {
          id v46 = &v39[16 * v20];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_167;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_168;
          }
          unint64_t v53 = v20 - 2;
          uint64_t v54 = &v39[16 * v20 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_170;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_173;
          }
          if (v58 >= v49)
          {
            uint64_t v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_177;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_90;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v70 = *((void *)v15 + 4);
            uint64_t v71 = *((void *)v15 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_84;
          }
          uint64_t v43 = *((void *)v15 + 4);
          uint64_t v42 = *((void *)v15 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_169;
        }
        unint64_t v53 = v20 - 2;
        uint64_t v59 = &v39[16 * v20 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_172;
        }
        uint64_t v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_175;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_176;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_90:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v64) {
          goto LABEL_171;
        }
        uint64_t v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_174;
        }
        if (v75 < v63) {
          goto LABEL_20;
        }
LABEL_92:
        if (v41 - 1 >= v20)
        {
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
          goto LABEL_180;
        }
        if (!v17) {
          goto LABEL_190;
        }
        Swift::String v80 = v18;
        unint64_t v131 = v41 - 1;
        int64_t v132 = v41;
        uint64_t v130 = &v39[16 * v41 - 16];
        uint64_t v81 = *(void *)v130;
        Swift::String v82 = &v39[16 * v41];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        uint64_t v129 = v82;
        char v85 = (char *)(v17 + 8 * *(void *)v130);
        uint64_t v86 = (char *)(v17 + 8 * *(void *)v82);
        unint64_t v87 = v17 + 8 * v83;
        uint64_t v88 = v86 - v85;
        uint64_t v89 = v86 - v85 + 7;
        if (v86 - v85 >= 0) {
          uint64_t v89 = v86 - v85;
        }
        uint64_t v90 = v89 >> 3;
        uint64_t v91 = v87 - (void)v86;
        uint64_t v92 = v87 - (void)v86 + 7;
        if ((uint64_t)(v87 - (void)v86) >= 0) {
          uint64_t v92 = v87 - (void)v86;
        }
        uint64_t v93 = v92 >> 3;
        if (v90 >= v92 >> 3)
        {
          if (v91 < -7) {
            goto LABEL_193;
          }
          if ((unint64_t)v8 >= v87 || v8 != v86)
          {
            uint64_t v99 = v83;
            memmove(v8, v86, 8 * v93);
            uint64_t v83 = v99;
            unsigned int v8 = __dst;
          }
          Swift::String v95 = &v8[8 * v93];
          uint64_t v17 = v125;
          if (v81 < v84)
          {
            BOOL v69 = v91 < 8;
            uint64_t v18 = v80;
            if (v69)
            {
              Swift::String v96 = v8;
              goto LABEL_138;
            }
            id v100 = (char *)(v124 + 8 * v83);
            unsigned int v101 = v86;
            while (2)
            {
              uint64_t v102 = v100 + 8;
              uint64_t v104 = *((void *)v101 - 1);
              v101 -= 8;
              uint64_t v103 = v104;
              if (*(unsigned __int8 *)(*((void *)v95 - 1) + *v80) >= *(unsigned __int8 *)(v104 + *v80))
              {
                uint64_t v103 = *((void *)v95 - 1);
                unsigned int v101 = v86;
                if (v102 != v95)
                {
                  v95 -= 8;
                  goto LABEL_130;
                }
                BOOL v105 = v100 >= v95;
                v95 -= 8;
                if (v105) {
LABEL_130:
                }
                  *(void *)id v100 = v103;
              }
              else if (v102 != v86 || v100 >= v86)
              {
                goto LABEL_130;
              }
              if (v85 >= v101 || (v100 -= 8, uint64_t v86 = v101, v8 >= v95))
              {
                Swift::String v96 = v8;
                uint64_t v86 = v101;
                goto LABEL_138;
              }
              continue;
            }
          }
          Swift::String v96 = v8;
        }
        else
        {
          if (v88 < -7) {
            goto LABEL_193;
          }
          if (v8 != v85 || v8 >= v86)
          {
            uint64_t v94 = v83;
            memmove(v8, v85, 8 * v90);
            uint64_t v83 = v94;
            unsigned int v8 = __dst;
          }
          Swift::String v95 = &v8[8 * v90];
          if (v84 < v83)
          {
            uint64_t v18 = v80;
            Swift::String v96 = v8;
            if (v88 < 8)
            {
LABEL_113:
              uint64_t v86 = v85;
              uint64_t v17 = v125;
              goto LABEL_138;
            }
            while (2)
            {
              uint64_t v97 = *(void *)v86;
              if (*(unsigned __int8 *)(*(void *)v86 + *v80) >= *(unsigned __int8 *)(*(void *)v96 + *v80))
              {
                uint64_t v97 = *(void *)v96;
                BOOL v98 = v85 == v96;
                v96 += 8;
                if (!v98) {
                  goto LABEL_110;
                }
              }
              else
              {
                BOOL v98 = v85 == v86;
                v86 += 8;
                if (!v98) {
LABEL_110:
                }
                  *(void *)char v85 = v97;
              }
              v85 += 8;
              if (v96 >= v95 || (unint64_t)v86 >= v87) {
                goto LABEL_113;
              }
              continue;
            }
          }
          Swift::String v96 = v8;
          uint64_t v86 = v85;
          uint64_t v17 = v125;
        }
        uint64_t v18 = v80;
LABEL_138:
        uint64_t v106 = v95 - v96;
        uint64_t v107 = v95 - v96 + 7;
        if (v106 >= 0) {
          uint64_t v107 = v106;
        }
        if (v106 <= -8) {
          goto LABEL_193;
        }
        uint64_t v108 = v107 >> 3;
        if (v86 != v96 || v86 >= &v96[8 * v108])
        {
          uint64_t v109 = v83;
          memmove(v86, v96, 8 * v108);
          uint64_t v83 = v109;
        }
        if (v83 < v81) {
          goto LABEL_164;
        }
        id v15 = v127;
        if (v132 > *((void *)v127 + 2)) {
          goto LABEL_165;
        }
        *(void *)uint64_t v130 = v81;
        uint64_t v39 = v126;
        *(void *)&v126[16 * v131 + 8] = v83;
        unint64_t v110 = *((void *)v127 + 2);
        if (v132 >= (uint64_t)v110) {
          goto LABEL_166;
        }
        unint64_t v20 = v110 - 1;
        memmove(v129, v129 + 16, 16 * (v110 - 1 - v132));
        *((void *)v127 + 2) = v110 - 1;
        unsigned int v8 = __dst;
        if (v110 <= 2) {
          goto LABEL_20;
        }
      }
    }
    unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_150:
    if (v20 >= 2)
    {
      uint64_t v112 = *v119;
      while (1)
      {
        unint64_t v113 = v20 - 2;
        if (v20 < 2) {
          break;
        }
        if (!v112) {
          goto LABEL_192;
        }
        uint64_t v114 = v8;
        uint64_t v115 = *(void *)&v15[16 * v113 + 32];
        uint64_t v116 = *(void *)&v15[16 * v20 + 24];
        sub_10051F684((char *)(v112 + 8 * v115), (char *)(v112 + 8 * *(void *)&v15[16 * v20 + 16]), v112 + 8 * v116, v8);
        if (v122) {
          goto LABEL_161;
        }
        if (v116 < v115) {
          goto LABEL_181;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v15 = sub_100520230((uint64_t)v15);
        }
        if (v113 >= *((void *)v15 + 2)) {
          goto LABEL_182;
        }
        v117 = &v15[16 * v113 + 32];
        *(void *)v117 = v115;
        *((void *)v117 + 1) = v116;
        unint64_t v118 = *((void *)v15 + 2);
        if (v20 > v118) {
          goto LABEL_183;
        }
        memmove(&v15[16 * v20 + 16], &v15[16 * v20 + 32], 16 * (v118 - v20));
        *((void *)v15 + 2) = v118 - 1;
        unint64_t v20 = v118 - 1;
        unsigned int v8 = v114;
        if (v118 <= 2) {
          goto LABEL_161;
        }
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
      goto LABEL_188;
    }
LABEL_161:
    swift_bridgeObjectRelease();
    *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
    specialized Array._endMutation()();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10051F684(char *__src, char *a2, unint64_t a3, char *__dst)
{
  int v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  unsigned int v24 = __src;
  unsigned int v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      Swift::Int v16 = &v4[8 * v13];
      unsigned int v22 = v16;
      unsigned int v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        uint64_t v17 = (char *)(a3 - 8);
        while (1)
        {
          uint64_t v18 = v17 + 8;
          Swift::Int v19 = v6 - 8;
          uint64_t v20 = *((void *)v6 - 1);
          if (*(unsigned __int8 *)(*((void *)v16 - 1) + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category))
          {
            unsigned int v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              *(void *)uint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              *(void *)uint64_t v17 = v20;
            }
            unsigned int v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          v17 -= 8;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    unsigned int v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(unsigned __int8 *)(*(void *)v6 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category) >= *(unsigned __int8 *)(*(void *)v4 + OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category))
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          unsigned int v23 = v4;
          id v15 = v6;
        }
        else
        {
          id v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      unsigned int v24 = v7;
    }
LABEL_42:
    sub_10051FE90((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10051F91C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1000CBE70(&qword_10071B0C0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10051FA18(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10051FAF0(a1, a2, a3, (uint64_t *)&unk_100708EC0);
}

uint64_t sub_10051FA24(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100520020(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

char *sub_10051FA3C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

uint64_t sub_10051FAE4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10051FAF0(a1, a2, a3, &qword_100708DF0);
}

uint64_t sub_10051FAF0(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = sub_1000CBE70(a4);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_10051FC30(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

char *sub_10051FCEC(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_10051FDBC(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
    {
      return (char *)memmove(result, v3, 72 * v6);
    }
  }
  return result;
}

char *sub_10051FE90(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_10051FF4C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_100520008(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_100520020(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_100520020(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_100520164(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_100520230(uint64_t a1)
{
  return sub_10051F91C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100520244(void *a1)
{
  return sub_1001914EC(0, a1[2], 0, a1);
}

uint64_t sub_100520258(void *a1)
{
  return sub_100191500(0, a1[2], 0, a1);
}

uint64_t sub_10052026C(uint64_t a1)
{
  return sub_100191B3C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100520280(void *a1)
{
  return sub_100191FB4(0, a1[2], 0, a1);
}

uint64_t sub_100520294(uint64_t a1)
{
  return sub_100192138(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005202A8(void *a1)
{
  return sub_100192408(0, a1[2], 0, a1);
}

uint64_t sub_1005202BC(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1005202D0(void *a1)
{
  return sub_100192710(0, a1[2], 0, a1);
}

uint64_t sub_1005202E4(void *a1)
{
  return sub_100193190(0, a1[2], 0, a1);
}

uint64_t sub_1005202F8(void *a1)
{
  return sub_100191B28(0, a1[2], 0, a1);
}

void *sub_10052030C(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  if (a1 >> 62)
  {
LABEL_29:
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  unint64_t v21 = v2;
  unint64_t v4 = 0;
  uint64_t v5 = a2 + OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate;
  uint64_t v23 = v2 & 0xFFFFFFFFFFFFFF8;
  unint64_t v24 = v2 & 0xC000000000000001;
  uint64_t v22 = v3;
  while (1)
  {
    if (v24)
    {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v4 >= *(void *)(v23 + 16))
      {
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      id v6 = *(id *)(v2 + 8 * v4 + 32);
    }
    uint64_t v7 = v6;
    unint64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_28;
    }
    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_21;
    }
    uint64_t v9 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8))(a2, ObjectType, v9);
    swift_unknownObjectRelease();
    uint64_t v12 = *(void *)(v11 + 16);
    swift_bridgeObjectRelease();
    if (!v12) {
      goto LABEL_21;
    }
    id v13 = sub_10051AF1C();
    if (((unint64_t)[v13 trashedItemsMembership] & 0xFFFFFFFFFFFFFFFDLL) == 0)
    {
      NSString v17 = v13;
      goto LABEL_18;
    }
    id v14 = [v13 providerDomainID];

    if (!v14)
    {

LABEL_21:
      if (!swift_unknownObjectWeakLoadStrong()) {
        goto LABEL_4;
      }
      uint64_t v19 = *(void *)(v5 + 8);
      uint64_t v20 = swift_getObjectType();
      LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a2, v20, v19);
      swift_unknownObjectRelease();
      if (v19) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
    uint64_t result = [v13 providerDomainID];
    if (!result) {
      break;
    }
    Swift::Int v16 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (DOCProviderDomainIDIsExternalDevice())
    {

      unint64_t v2 = v21;
LABEL_18:

      goto LABEL_23;
    }
    char v18 = DOCProviderDomainIDIsSharedServerDomainID();

    unint64_t v2 = v21;
    if ((v18 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_23:
    type metadata accessor for DOCQueryFragmentSuggestion();
    if (swift_dynamicCastClass())
    {

      goto LABEL_5;
    }
LABEL_4:
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
LABEL_5:
    ++v4;
    if (v8 == v22) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
  return result;
}

void sub_1005205F4()
{
  uint64_t v1 = v0;
  unint64_t v2 = swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_10052030C(v2, (uint64_t)v1);
  swift_bridgeObjectRelease();

  if ((v3 & 0x8000000000000000) != 0 || (v3 & 0x4000000000000000) != 0)
  {
    unint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t)sub_1002F4E08(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = v4;
  sub_100516E5C(&v8);
  swift_bridgeObjectRelease();
  uint64_t v5 = v8;
  if (v8 < 0 || (v8 & 0x4000000000000000) != 0)
  {
    type metadata accessor for DOCSuggestion();
    swift_bridgeObjectRetain();
    uint64_t v6 = _bridgeCocoaArray<A>(_:)();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    type metadata accessor for DOCSuggestion();
    uint64_t v6 = v5;
  }
  swift_release();
  *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions] = v6;
  swift_bridgeObjectRelease();
  sub_10051D03C();
}

void sub_100520718()
{
  sub_10051E0CC(*(void **)(v0 + 16), *(unsigned char *)(v0 + 24), *(double **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_100520728()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100520768()
{
  uint64_t v1 = *(void **)(v0 + 24);
  sub_10051D910();

  return [v1 sizeToFit];
}

uint64_t sub_1005207AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005207BC(void *a1)
{
  id v3 = [v1 presentingViewController];
  if (v3)
  {
    id v11 = v3;
    if ((objc_msgSend(v3, "doc_hasDisappearedOrIsDisappearing") & 1) == 0)
    {
      [v1 loadViewIfNeeded];
      id v4 = [a1 text];
      if (v4)
      {
        uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v7 = v6;

        id v4 = (id)(v5 & 0xFFFFFFFFFFFFLL);
      }
      else
      {
        unint64_t v7 = 0xE000000000000000;
      }
      swift_bridgeObjectRelease();
      uint64_t v8 = HIBYTE(v7) & 0xF;
      if ((v7 & 0x2000000000000000) == 0) {
        uint64_t v8 = (uint64_t)v4;
      }
      if (v8)
      {
        sub_10051A3FC();
      }
      else
      {
        uint64_t v9 = *(void **)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer];
        *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;

        id v10 = [v1 searchBar];
        sub_100519F58(v10);
      }
    }
  }
}

void sub_1005208EC()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController__suggesterManager] = 0;
  uint64_t v1 = OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewContainerView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIView) init];
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTableViewWidthConstraint] = 0;
  v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchPresentationState] = 4;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___stackedSearchLayout] = 0;
  v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsPlacement] = 0;
  v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController____lazy_storage___suggestionsTableViewController] = 0;
  uint64_t v2 = OBJC_IVAR____TtC5Files19DOCSearchController_sizeCategoryDependantConstraints;
  type metadata accessor for DOCSizeCategoryDependantConstraints();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &_swiftEmptyDictionarySingleton;
  *(void *)(v3 + 24) = 0;
  *(unsigned char *)(v3 + 32) = 1;
  *(void *)&v0[v2] = v3;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC5Files19DOCSearchController_isDeactiveTemporary] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC5Files19DOCSearchController__currentTraitCollectionSource] = 0;
  id v4 = &v0[OBJC_IVAR____TtC5Files19DOCSearchController_layoutConfiguration];
  *(_WORD *)id v4 = 0;
  v4[2] = 1;
  v0[OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_suggestionsTypingTimeoutTimer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_displayedSuggestions] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

id sub_100520AE0()
{
  uint64_t v1 = v0;
  type metadata accessor for DOCAssertion();
  swift_allocObject();
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion] = DOCAssertion.init(traceInfo:)();
  swift_release();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if ([Strong respondsToSelector:"willDismissSearchController:"]) {
      [v3 willDismissSearchController:v1];
    }
    swift_unknownObjectRelease();
  }

  return [v1 setShowsSearchResultsController:0];
}

uint64_t sub_100520BBC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    if ([Strong respondsToSelector:"didDismissSearchController:"]) {
      [v3 didDismissSearchController:v1];
    }
    swift_unknownObjectRelease();
  }
  uint64_t v4 = OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion;
  if (*(void *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_dismissingAssertion))
  {
    swift_retain();
    dispatch thunk of DOCAssertion.invalidate()();
    swift_release();
  }
  *(void *)(v1 + v4) = 0;
  swift_release();
  uint64_t v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_blocksToRunAfterDismiss);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v6 + 40;
    do
    {
      uint64_t v9 = *(void (**)(uint64_t))(v8 - 8);
      uint64_t v10 = swift_retain();
      v9(v10);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100520CF0()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v0;
  aBlock[4] = sub_100521CEC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B4F48;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v0;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1000BAEDC((unint64_t *)&qword_100706770, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t sub_100520FD4()
{
  if (![self protectedAppsEnabled]) {
    return 0;
  }
  id v0 = [self sharedManager];
  sub_1005446F4();
  uint64_t v2 = v1;

  if (!v2) {
    return 0;
  }
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    sub_100059E2C(0, v3, 0);
    uint64_t v4 = (void **)(v2 + 40);
    do
    {
      uint64_t v5 = (uint64_t)*(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      v7._countAndFlagsBits = v5;
      v7._object = v6;
      String.append(_:)(v7);
      v8._countAndFlagsBits = 41;
      v8._object = (void *)0xE100000000000000;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_100059E2C(v9 > 1, v10 + 1, 1);
      }
      v4 += 2;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      id v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = 0xD000000000000019;
      _OWORD v11[5] = 0x80000001005FDDC0;
      --v3;
    }
    while (v3);
  }
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10070AEB0);
  sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_1005211FC()
{
  unint64_t result = qword_10071B0E8;
  if (!qword_10071B0E8)
  {
    sub_10009E6C4(255, &qword_10071B0E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B0E8);
  }
  return result;
}

uint64_t sub_100521264()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10052129C()
{
}

uint64_t sub_1005212A4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005212DC()
{
  sub_10051997C(*(void **)(v0 + 16));
}

void sub_1005212E4(void *a1)
{
  if ([a1 representedObject])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1000516C4((uint64_t)v7, (uint64_t)v8);
  if (v9)
  {
    type metadata accessor for DOCSuggestion();
    int v2 = swift_dynamicCast();
    int64_t v3 = v6;
    if (!v2) {
      int64_t v3 = 0;
    }
  }
  else
  {
    sub_10006273C((uint64_t)v8);
    int64_t v3 = 0;
  }
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion);
  *(void *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_selectedSuggestion) = v3;
  id v5 = v3;

  sub_10051D330();
}

void sub_1005213C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery;
  Swift::String v7 = *(void **)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery];
  *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_cachedSearchQuery] = 0;

  Swift::String v8 = *(void **)&v0[v6];
  if (!v8)
  {
    sub_10051B220();
    Swift::String v8 = *(void **)&v0[v6];
    if (!v8) {
      return;
    }
  }
  uint64_t v9 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection;
  uint64_t v10 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController]
                  + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection);
  if (!v10)
  {
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v11 = *(void *)&v0[OBJC_IVAR____TtC5Files19DOCSearchController_resultCollectionViewController];
  uint64_t v12 = v10 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v12 + 16)) {
    goto LABEL_68;
  }
  uint64_t v13 = *(void **)v12;
  uint64_t v71 = v8;
  id v14 = v8;
  id v15 = v13;
  self;
  Swift::Int v16 = (void *)swift_dynamicCastObjCClass();
  if (!v16) {

  }
  uint64_t v17 = *(void *)(v11 + v9);
  if (!v17) {
    goto LABEL_62;
  }
  uint64_t v72 = v5;
  uint64_t v18 = v17 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v18 + 16)) {
    goto LABEL_68;
  }
  id v19 = *(id *)v18;
  self;
  uint64_t v20 = (void *)swift_dynamicCastObjCClass();
  uint64_t v73 = v3;
  uint64_t v74 = v2;
  if (v20)
  {
    unint64_t v21 = v20;
    if (!v16)
    {
      id v22 = v20;
      goto LABEL_15;
    }
  }
  else
  {

    if (!v16) {
      goto LABEL_68;
    }
    unint64_t v21 = 0;
  }
  id v22 = v16;
LABEL_15:
  id v76 = v16;
  uint64_t v23 = (void *)static DOCLog.UI.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
  *(void *)(v24 + 56) = sub_10009E6C4(0, &qword_10071B0E0);
  *(void *)(v24 + 64) = sub_1005211FC();
  *(void *)(v24 + 32) = v14;
  id v25 = v14;
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  unint64_t v78 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v27 = Strong;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  Swift::Int v28 = &v1[OBJC_IVAR____TtC5Files19DOCSearchController_searchDelegate];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v29 = *((void *)v28 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 8))(v1, ObjectType, v29);
    swift_unknownObjectRelease();
    unint64_t v32 = *(void *)(v31 + 16);
    if (!v32)
    {
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)&v1[OBJC_IVAR____TtC5Files19DOCSearchController_selectedScopeIndex];
    if (v33 >= v32)
    {
      __break(1u);
      goto LABEL_56;
    }
    uint64_t v34 = *(void *)(v31 + 16 * v33 + 40);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v35 = swift_getObjectType();
    uint64_t v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v35, v34);
    swift_unknownObjectRelease();
    if (v36)
    {
      uint64_t v1 = v36;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_24:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_26;
      }
LABEL_56:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_24;
    }
  }
LABEL_26:
  id v75 = v21;
  id v37 = [v22 searchQuery];
  uint64_t v38 = v11;
  if (!v37) {
    goto LABEL_40;
  }
  uint64_t v39 = v37;
  id v40 = v25;
  id v41 = v39;
  LOBYTE(v39) = static NSObject.== infix(_:_:)();

  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
  uint64_t v42 = *(void *)(v11 + v9);
  if (!v42)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  uint64_t v43 = v42 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v43 + 16)) {
    goto LABEL_68;
  }
  id v44 = *(id *)v43;
  id v45 = [v44 itemFilteringPredicate];

  if (!v45)
  {
    if (v78 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v70 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v70) {
        goto LABEL_40;
      }
    }
    else if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_40;
    }
  }
  uint64_t v46 = *(void *)(v11 + v9);
  if (!v46)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v47 = v46 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v47 + 16)) {
    goto LABEL_68;
  }
  id v48 = *(id *)v47;
  id v49 = [v48 itemFilteringPredicate];

  if (v49)
  {
    if (v78 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v69) {
        goto LABEL_36;
      }
    }
    else if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_36;
    }
LABEL_40:
    uint64_t v56 = *(void *)(v11 + v9);
    if (v56)
    {
      uint64_t v57 = v56 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
      if (*(unsigned char *)(v57 + 16)) {
        goto LABEL_68;
      }
      id v58 = *(id *)v57;
      [v58 stopObserving];

      [v22 setSearchQuery:v25];
      uint64_t v59 = *(void *)(v11 + v9);
      if (v59)
      {
        uint64_t v60 = v59 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
        if (*(unsigned char *)(v60 + 16)) {
          goto LABEL_68;
        }
        unint64_t v61 = v78;
        id v62 = *(id *)v60;
        if (v61 >> 62)
        {
          swift_bridgeObjectRetain();
          id v63 = (id)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v63)
          {
LABEL_47:
            [v62 setItemFilteringPredicate:v63];

            uint64_t v65 = *(void *)(v38 + v9);
            if (v65)
            {
              uint64_t v66 = v65 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
              id v67 = v75;
              if ((*(unsigned char *)(v66 + 16) & 1) == 0)
              {
                id v68 = *(id *)v66;
                [v68 startObserving];
                swift_bridgeObjectRelease();

                swift_unknownObjectRelease();
                return;
              }
              while (1)
              {
LABEL_68:
                _assertionFailure(_:_:file:line:flags:)();
                __break(1u);
              }
            }
            goto LABEL_65;
          }
        }
        else
        {
          id v63 = *(id *)((v61 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v63) {
            goto LABEL_47;
          }
        }
        sub_10009E6C4(0, &qword_100716480);
        swift_bridgeObjectRetain();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v63 = [self andPredicateWithSubpredicates:isa];

        goto LABEL_47;
      }
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
LABEL_36:
  uint64_t v50 = v72;
  static Logger.UI.getter();
  id v51 = v40;
  BOOL v52 = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 138412290;
    id v77 = v51;
    id v51 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v55 = v71;

    _os_log_impl((void *)&_mh_execute_header, v52, v53, "Not triggering a new observation, since search query object or predicate(s) haven't changed: %@", v54, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v74);
  swift_bridgeObjectRelease();
}

void sub_100521CEC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files19DOCSearchController_searchFieldHasFocus) = 0;
  if (v2 == 1) {
    sub_1005176AC();
  }
}

void sub_100521D28()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC5Files19DOCSearchController_activationTemporilyDisabled) = 0;
}

uint64_t sub_100521D3C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100521D74()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

unsigned char *storeEnumTagSinglePayload for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100521E80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement()
{
  return &type metadata for DOCSearchController.LayoutConfiguration.NavigationBarRelativePlacement;
}

unint64_t sub_100521EBC()
{
  unint64_t result = qword_10071B100;
  if (!qword_10071B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B100);
  }
  return result;
}

id DOCFileProviderSource.appMenuIconPreferingSymbolImages.getter()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v1)
  {
    id v2 = [v1 identifier];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    if ((v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      id result = (id)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v6;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v7 == v5)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    id v15 = [self currentDevice];
    id v16 = [v15 doc_symbolName];

    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    uint64_t v20 = self;
    swift_bridgeObjectRetain();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [v20 _systemImageNamed:v21 withConfiguration:0];

    if (v22)
    {
      swift_bridgeObjectRelease();

      return v22;
    }
    else
    {
      uint64_t v23 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1005A0030;
      *(void *)(v24 + 56) = &type metadata for String;
      *(void *)(v24 + 64) = sub_100073F48();
      *(void *)(v24 + 32) = v17;
      *(void *)(v24 + 40) = v19;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v25 = [objc_allocWithZone((Class)UIImage) init];
      swift_bridgeObjectRelease();
      return v25;
    }
  }
  char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v9) {
    goto LABEL_19;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v10 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      id v13 = [v0 iconForSize:0];
      return v13;
    }
  }

  return (id)sub_100523084();
}

uint64_t sub_1005222BC()
{
  type metadata accessor for DOCSourceListInterface_Default();
  uint64_t result = swift_initStaticObject();
  qword_1007376F8 = result;
  return result;
}

id sub_100522350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  id v6 = sub_1005236C4(a3, a4, 0, 1);
  swift_release();

  return v6;
}

uint64_t sub_1005226CC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (v1)
  {
    id v2 = [v1 identifier];
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8) & 1) == 0)
    {
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v6;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v3 && v7 == v5) {
    char v9 = 1;
  }
  else {
    char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

id sub_100522844()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
  if (v2)
  {
    id v3 = [v2 identifier];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    if ((v0[OBJC_IVAR____TtC5Files21DOCFileProviderSource_type + 8] & 1) == 0)
    {
      id result = (id)_assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v7;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v8 == v6)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    id v16 = [self currentDevice];
    id v17 = [v16 doc_symbolName];

    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v18;

    goto LABEL_19;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v11 == v6) {
    goto LABEL_38;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v13)
  {
LABEL_15:
    uint64_t v14 = 0x6873617274;
LABEL_16:
    swift_bridgeObjectRelease();
    unint64_t v15 = 0xE500000000000000;
    goto LABEL_19;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v29 == v6)
  {
LABEL_38:
    uint64_t v14 = 0x6873617274;
LABEL_39:
    swift_bridgeObjectRelease_n();
    unint64_t v15 = 0xE500000000000000;
    goto LABEL_19;
  }
  char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v31) {
    goto LABEL_15;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v32 == v6) {
    goto LABEL_42;
  }
  char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v34)
  {
LABEL_37:
    uint64_t v14 = 0xD000000000000018;
    swift_bridgeObjectRelease();
LABEL_43:
    unint64_t v15 = 0x80000001005D2510;
    goto LABEL_19;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v35 == v6)
  {
LABEL_42:
    uint64_t v14 = 0xD000000000000018;
    swift_bridgeObjectRelease_n();
    goto LABEL_43;
  }
  char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_37;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v37 == v6)
  {
    swift_bridgeObjectRelease();
LABEL_49:
    swift_bridgeObjectRelease();
    sub_100523498();
    id v39 = (id)static UIImage.doc_executablesFrameworkImage(named:)();
    if (!v39)
    {
      id v40 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = xmmword_1005A0030;
      *(void *)(v41 + 56) = &type metadata for String;
      *(void *)(v41 + 64) = sub_100073F48();
      *(void *)(v41 + 32) = 0xD000000000000020;
      *(void *)(v41 + 40) = 0x80000001005FE320;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v39 = [objc_allocWithZone((Class)UIImage) init];
    }
    id v21 = v39;
    goto LABEL_22;
  }
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_49;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v42 == v6) {
    goto LABEL_58;
  }
  char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v43)
  {
LABEL_55:
    uint64_t v14 = 0x6B636F6C63;
    goto LABEL_16;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v44 == v6)
  {
LABEL_58:
    uint64_t v14 = 0x6B636F6C63;
    goto LABEL_39;
  }
  char v45 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v45) {
    goto LABEL_55;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v46 == v6)
  {
    uint64_t v14 = 0x697966696E67616DLL;
    swift_bridgeObjectRelease_n();
LABEL_68:
    unint64_t v15 = 0xEF7373616C67676ELL;
    goto LABEL_19;
  }
  char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v47)
  {
    uint64_t v14 = 0x697966696E67616DLL;
    swift_bridgeObjectRelease();
    goto LABEL_68;
  }
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v4 && v48 == v6)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v14 = 0x697966696E67616DLL;
    goto LABEL_68;
  }
  char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = 0x697966696E67616DLL;
  unint64_t v15 = 0xEF7373616C67676ELL;
  if (v49)
  {
LABEL_19:
    uint64_t v19 = self;
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 _systemImageNamed:v20 withConfiguration:0];

    if (v21)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      id v22 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.fault.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_1005A0030;
      *(void *)(v23 + 56) = &type metadata for String;
      *(void *)(v23 + 64) = sub_100073F48();
      *(void *)(v23 + 32) = v14;
      *(void *)(v23 + 40) = v15;
      swift_bridgeObjectRetain();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      id v21 = [objc_allocWithZone((Class)UIImage) init];
      swift_bridgeObjectRelease();
    }
LABEL_22:
    id v24 = v21;
    if ([v1 iconPreferingSymbolImagesRequiresHierarchicalColors])
    {
      id v25 = [self tintColor];
      id v26 = [self configurationWithHierarchicalColor:v25];

      id v27 = [v24 imageByApplyingSymbolConfiguration:v26];
      if (v27)
      {

        return v27;
      }
    }
    else
    {
    }
    return v24;
  }
  v51.receiver = v1;
  v51.super_class = (Class)type metadata accessor for DOCFileProviderSource(0);
  id v50 = [super iconPreferingSymbolImages];

  return v50;
}

uint64_t sub_100523084()
{
  sub_100523498();
  id v0 = (id)static UIImage.doc_executablesFrameworkImage(named:)();
  id v21 = v0;
  if (v0
    && (uint64_t v1 = self,
        id v2 = v0,
        id v3 = [v1 configurationWithPointSize:5 weight:20.0],
        id v0 = [v2 imageByApplyingSymbolConfiguration:v3],
        v2,
        v2,
        v3,
        v0))
  {
    uint64_t v4 = self;
    id v0 = v0;
    id v5 = [v4 blackColor];
    id v6 = [v0 imageWithTintColor:v5 renderingMode:2];
  }
  else
  {
    id v6 = 0;
  }
  id v21 = v6;

  id v7 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  id v8 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v7 format:20.0, 20.0];
  uint64_t v9 = swift_allocObject();
  __asm { FMOV            V0.2D, #20.0 }
  *(_OWORD *)(v9 + 16) = _Q0;
  *(void *)(v9 + 32) = &v21;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100523884;
  *(void *)(v15 + 24) = v9;
  aBlock[4] = sub_100162780;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100429DC4;
  void aBlock[3] = &unk_1006B50F0;
  id v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  id v17 = [v8 imageWithActions:v16];

  _Block_release(v16);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v7)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = v21;
    swift_release();

    return (uint64_t)v17;
  }
  return result;
}

id sub_1005233F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBrowseStartingPointsDocumentSource();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCSourceListInterface()
{
  return self;
}

uint64_t type metadata accessor for DOCSourceListInterface_Default()
{
  return self;
}

uint64_t type metadata accessor for DOCBrowseStartingPointsDocumentSource()
{
  return self;
}

unint64_t sub_100523498()
{
  unint64_t result = qword_1007123B0;
  if (!qword_1007123B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007123B0);
  }
  return result;
}

id sub_1005234D8(void *a1)
{
  if (![a1 isFolder]) {
    return 0;
  }
  uint64_t v2 = 0x7265646C6F66;
  unint64_t v3 = sub_10049D394(&off_10068B1C8);
  sub_1000CBE70(&qword_10071B2C8);
  swift_arrayDestroy();
  id v4 = [a1 doc_folderIconType];
  if (*(void *)(v3 + 16) && (uint64_t v5 = sub_1000BBA9C(v4), (v6 & 1) != 0))
  {
    id v7 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v5);
    uint64_t v2 = *v7;
    unint64_t v8 = v7[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v8 = 0xE600000000000000;
  }
  swift_bridgeObjectRelease();
  char v10 = self;
  swift_bridgeObjectRetain();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [v10 _systemImageNamed:v11 withConfiguration:0];

  if (v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v12 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.fault.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_100073F48();
    *(void *)(v13 + 32) = v2;
    *(void *)(v13 + 40) = v8;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v9 = [objc_allocWithZone((Class)UIImage) init];
    swift_bridgeObjectRelease();
  }
  return v9;
}

id sub_1005236C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v8 = self;
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [v8 _systemImageNamed:v9 withConfiguration:0];

  if (v10)
  {

    if ((a4 & 1) == 0)
    {
LABEL_3:
      id v11 = [self configurationWithScale:a3];
      id v12 = [v10 imageWithConfiguration:v11];

      return v12;
    }
  }
  else
  {
    uint64_t v14 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.fault.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1005A0030;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_100073F48();
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    swift_bridgeObjectRetain();
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    id v10 = [objc_allocWithZone((Class)UIImage) init];
    if ((a4 & 1) == 0) {
      goto LABEL_3;
    }
  }
  return v10;
}

uint64_t sub_100523874()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_100523884()
{
  id result = **(id **)(v0 + 32);
  if (result) {
    return [result drawInRect:CGRectMake(0.0, 0.0, *(double *)(v0 + 16), *(double *)(v0 + 24))];
  }
  __break(1u);
  return result;
}

uint64_t sub_1005238AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005238BC()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10011029C();
  static DispatchQoS.unspecified.getter();
  v7[1] = _swiftEmptyArrayStorage;
  sub_1000BAF24((unint64_t *)&qword_1007054C0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_1000CBE70((uint64_t *)&unk_100709900);
  sub_10009449C((unint64_t *)&qword_1007054D0, (uint64_t *)&unk_100709900);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_100737700 = result;
  return result;
}

id sub_100523AFC(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v71 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v70 - v14;
  __chkstk_darwin(v13);
  id v17 = (char *)&v70 - v16;
  id v79 = [objc_allocWithZone((Class)PDFDocument) init];
  unint64_t v18 = (unint64_t)[a1 pageCount];
  if ((v18 & 0x8000000000000000) != 0) {
    __break(1u);
  }
  unint64_t v19 = v18;
  uint64_t v72 = a3;
  uint64_t v73 = a2;
  id v77 = v15;
  unint64_t v78 = v17;
  uint64_t v74 = v8;
  uint64_t v75 = v10;
  uint64_t v76 = v9;
  if (v18)
  {
    uint64_t v20 = 0;
    id v21 = v79;
    do
    {
      id v23 = [a1 imageOfPageAtIndex:v20];
      id v24 = [objc_allocWithZone((Class)PDFPage) initWithImage:v23];
      if (v24)
      {
        id v25 = v24;
        [v21 insertPage:v24 atIndex:[v21 pageCount]];
      }
      ++v20;
    }
    while (v19 != v20);
  }
  id v26 = self;
  id v27 = [v26 defaultManager];
  id v28 = [v27 temporaryDirectory];

  uint64_t v29 = v78;
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  id v30 = [objc_allocWithZone((Class)NSUUID) init];
  id v31 = [v30 UUIDString];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v77;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  id v33 = [v26 defaultManager];
  URL.path.getter();
  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  LODWORD(v30) = [v33 fileExistsAtPath:v34];

  if (v30)
  {
    id v35 = [v26 defaultManager];
    URL.path.getter();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v80._countAndFlagsBits = 0;
    unsigned int v37 = [v35 removeItemAtPath:v36 error:&v80];

    countAndFlagsBits = (void *)v80._countAndFlagsBits;
    if (!v37)
    {
LABEL_14:
      id v64 = countAndFlagsBits;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v65 = (uint64_t)v74;
      uint64_t v66 = v75;
      uint64_t v67 = v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v76);
      v73(v65);

      swift_errorRelease();
      sub_1001939F8(v65);
      id v68 = *(void (**)(char *, uint64_t))(v66 + 8);
      v68(v32, v67);
      return (id)((uint64_t (*)(char *, uint64_t))v68)(v29, v67);
    }
    id v39 = (id)v80._countAndFlagsBits;
  }
  id v40 = [v26 defaultManager];
  URL.path.getter();
  NSString v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v80._countAndFlagsBits = 0;
  unsigned int v42 = [v40 createDirectoryAtPath:v41 withIntermediateDirectories:1 attributes:0 error:&v80];

  countAndFlagsBits = (void *)v80._countAndFlagsBits;
  if (!v42) {
    goto LABEL_14;
  }
  id v43 = (id)v80._countAndFlagsBits;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    char v45 = result;
    v46._countAndFlagsBits = 0xD000000000000019;
    v81._countAndFlagsBits = 0xD000000000000028;
    v81._object = (void *)0x80000001005FE4F0;
    v46._object = (void *)0x80000001005FE4B0;
    v47._object = (void *)0x80000001005FE4D0;
    v48._countAndFlagsBits = 0x617A696C61636F4CLL;
    v48._object = (void *)0xEB00000000656C62;
    v47._countAndFlagsBits = 0xD000000000000010;
    Swift::String v49 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v46, v48, (NSBundle)v45, v47, v81);

    Swift::String v80 = v49;
    swift_bridgeObjectRetain();
    v50._countAndFlagsBits = 1717858350;
    v50._object = (void *)0xE400000000000000;
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    objc_super v51 = v71;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    sub_1000CBE70(&qword_10071B370);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1005A0030;
    os_log_type_t v53 = (void *)kCGPDFContextShouldOutputAllImagesAsJPEG;
    *(void *)(inited + 32) = kCGPDFContextShouldOutputAllImagesAsJPEG;
    *(void *)(inited + 64) = &type metadata for Bool;
    *(unsigned char *)(inited + 40) = 1;
    id v54 = v53;
    sub_100496154(inited);
    URL._bridgeToObjectiveC()(v55);
    uint64_t v57 = v56;
    type metadata accessor for PDFDocumentWriteOption(0);
    sub_1000BAF24(&qword_100706148, type metadata accessor for PDFDocumentWriteOption);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v59 = v79;
    unsigned int v60 = [v79 writeToURL:v57 withOptions:isa];

    uint64_t v61 = (uint64_t)v74;
    uint64_t v62 = v75;
    if (v60)
    {
      uint64_t v63 = v76;
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v74, v51, v76);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v61, 0, 1, v63);
    }
    else
    {
      uint64_t v63 = v76;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56))(v74, 1, 1, v76);
    }
    v73(v61);

    sub_1001939F8(v61);
    uint64_t v69 = *(void (**)(char *, uint64_t))(v62 + 8);
    v69(v51, v63);
    v69(v32, v63);
    return (id)((uint64_t (*)(char *, uint64_t))v69)(v29, v63);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for DOCDocumentScannerWriter()
{
  return self;
}

uint64_t sub_1005242D0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19[0] - 8);
  __chkstk_darwin(v19[0]);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007052C0 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100737700;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_100524608;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B5140;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v13;
  id v17 = a1;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v19[1] = _swiftEmptyArrayStorage;
  sub_1000BAF24((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v19[0]);
  return swift_release();
}

uint64_t sub_1005245C8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_100524608()
{
  return sub_100523AFC(*(void **)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

char *sub_100524614(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer;
  id v10 = objc_allocWithZone((Class)CALayer);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_layerBackgroundColor] = 0;

  v17.receiver = v11;
  v17.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  uint64_t v12 = (char *)[v17 initWithFrame:a1, a2, a3, a4];
  id v13 = [v12 layer];
  uint64_t v14 = OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer;
  [v13 addSublayer:*(void *)&v12[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer]];

  id v15 = *(id *)&v12[v14];
  [v12 bounds];
  [v15 setFrame:];

  return v12;
}

id sub_100524814()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  [super layoutSubviews];
  uint64_t v1 = self;
  [v1 begin];
  [v1 setDisableActions:1];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_backgroundLayer];
  unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files22DOCBackgroundColorView_layerBackgroundColor];
  if (v3) {
    id v4 = [v3 CGColor];
  }
  else {
    id v4 = 0;
  }
  [v2 setBackgroundColor:v4];

  [v0 bounds];
  [v2 setFrame:];
  return [v1 commit];
}

id sub_100524954()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCBackgroundColorView();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCBackgroundColorView()
{
  return self;
}

unint64_t sub_1005249FC()
{
  unint64_t result = qword_10071B3B0;
  if (!qword_10071B3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3B0);
  }
  return result;
}

unint64_t sub_100524A54()
{
  unint64_t result = qword_10071B3B8;
  if (!qword_10071B3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B3B8);
  }
  return result;
}

uint64_t sub_100524AA8()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_100524ADC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100524AF8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v6, qword_100737708);
  sub_10009D098(v6, (uint64_t)qword_100737708);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_100524D10()
{
  uint64_t v0 = sub_1000CBE70(&qword_10071B3E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_10071B3E8);
  __chkstk_darwin(v1);
  sub_100380748();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x80000001005FE6E0;
  v2._countAndFlagsBits = 0xD000000000000024;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70((uint64_t *)&unk_10071B3F0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_100524EB0(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for OpenURLIntent();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  sub_1000CBE70(&qword_1007076B0);
  v2[20] = swift_task_alloc();
  sub_1000CBE70(&qword_10070BB00);
  v2[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URLComponents();
  v2[22] = v4;
  v2[23] = *(void *)(v4 - 8);
  unsigned char v2[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = type metadata accessor for DOCFileEntity();
  v2[32] = swift_task_alloc();
  return _swift_task_switch(sub_1005250E0, 0, 0);
}

uint64_t sub_1005250E0()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[29];
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = *(void **)(v1 + *(int *)(v2 + 32));
  v0[33] = v4;
  id v5 = v4;
  sub_100117404(v1);
  id v6 = [self defaultManager];
  v0[34] = v6;
  v0[2] = v0;
  v0[7] = v3;
  v0[3] = sub_10052523C;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_100388CB0;
  v0[13] = &unk_1006B5190;
  v0[14] = v7;
  [v6 fetchURLForItem:v5 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10052523C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_100525830;
  }
  else {
    uint64_t v2 = sub_10052534C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10052534C()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[21];
  id v5 = *(void (**)(void))(v0[26] + 32);
  ((void (*)(void, void, void))v5)(v0[30], v0[29], v0[25]);

  URLComponents.init(url:resolvingAgainstBaseURL:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    id v6 = (void *)v0[33];
    uint64_t v7 = v0[30];
    uint64_t v8 = v0[25];
    uint64_t v9 = v0[26];
    sub_1000CBBA4(v0[21], &qword_10070BB00);
    uint64_t v10 = type metadata accessor for DeepLinkError();
    sub_1000CC014(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v10 - 8) + 104))(v11, enum case for DeepLinkError.deeplinkConstructionError(_:), v10);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_7;
  }
  uint64_t v12 = v0[25];
  uint64_t v13 = v0[26];
  uint64_t v14 = v0[20];
  (*(void (**)(void, void, void))(v0[23] + 32))(v0[24], v0[21], v0[22]);
  static DeepLinkLocation.filesAppURLScheme.getter();
  URLComponents.scheme.setter();
  URLComponents.url.getter();
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12);
  char v38 = (void *)v0[33];
  if (v15 == 1)
  {
    uint64_t v16 = v0[30];
    uint64_t v18 = v0[25];
    uint64_t v17 = v0[26];
    uint64_t v20 = v0[23];
    uint64_t v19 = v0[24];
    uint64_t v21 = v0[22];
    sub_1000CBBA4(v0[20], &qword_1007076B0);
    uint64_t v22 = type metadata accessor for DeepLinkError();
    sub_1000CC014(&qword_10070BB08, (void (*)(uint64_t))&type metadata accessor for DeepLinkError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, enum case for DeepLinkError.deeplinkConstructionError(_:), v22);
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_5;
  }
  uint64_t v37 = v0[30];
  uint64_t v25 = v0[28];
  uint64_t v26 = v0[26];
  uint64_t v27 = v0[27];
  uint64_t v28 = v0[25];
  uint64_t v29 = v0[23];
  uint64_t v35 = v0[22];
  uint64_t v36 = v0[24];
  uint64_t v31 = v0[18];
  uint64_t v30 = v0[19];
  uint64_t v34 = v0[17];
  v5(v25);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v27, v25, v28);
  OpenURLIntent.init(_:)();
  sub_1000CC014(&qword_10070BB18, (void (*)(uint64_t))&type metadata accessor for OpenURLIntent);
  static IntentResult.result<A>(opensIntent:)();

  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v34);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v32(v25, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v36, v35);
  v32(v37, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v24 = (uint64_t (*)(void))v0[1];
LABEL_7:
  return v24();
}

uint64_t sub_100525830()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[33];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10052591C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1007052C8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_10009D098(v2, (uint64_t)qword_100737708);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t sub_1005259C8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000CB70;
  return sub_100524EB0(a1, v4);
}

uint64_t sub_100525A68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100525B18();
  *a1 = result;
  return result;
}

uint64_t sub_100525A90(uint64_t a1)
{
  unint64_t v2 = sub_100380748();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for QuickLookFileIntent()
{
  return &type metadata for QuickLookFileIntent;
}

uint64_t sub_100525ADC()
{
  return sub_100073DF0(&qword_10071B3C8, &qword_10071B3D0);
}

uint64_t sub_100525B18()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  uint64_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_100707AE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v8 - 8);
  uint64_t v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_1000CBE70((uint64_t *)&unk_100707AF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for DOCFileEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_1000CC014(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1005260E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

id sub_100526110()
{
  id v1 = [v0 effectiveFullBrowser];
  id v2 = [v1 dataSource];

  unint64_t v3 = sub_10008A504();
  if (v3 >> 62) {
    goto LABEL_20;
  }
  unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    while (__OFSUB__(v4--, 1))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      swift_bridgeObjectRetain();
      unint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v4) {
        goto LABEL_21;
      }
    }
    if ((v3 & 0xC000000000000001) != 0)
    {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_11;
    }
    if ((v4 & 0x8000000000000000) != 0) {
      goto LABEL_18;
    }
    if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_19;
    }
    id v6 = *(id *)(v3 + 32 + 8 * v4);
LABEL_11:
    uint64_t v7 = v6;
    uint64_t v8 = swift_dynamicCastObjCProtocolConditional();
    id result = [v7 view];
    if (!result)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return result;
    }
    uint64_t v10 = result;
    [result alpha];
    double v12 = v11;

    id result = [v7 view];
    if (!result) {
      goto LABEL_28;
    }
    uint64_t v13 = result;
    unsigned int v14 = [result isHidden];

    if (v8 && v12 == 1.0 && !v14)
    {
      __chkstk_darwin(v15);
      unint64_t v17 = v4;
      sub_100529100(&v17, (unint64_t *)&v18);
      uint64_t v16 = v18;
      goto LABEL_22;
    }
  }
LABEL_21:
  uint64_t v16 = 0;
LABEL_22:
  swift_bridgeObjectRelease();
  if (v16)
  {
    id result = (id)swift_dynamicCastObjCProtocolConditional();
    if (result) {
      return result;
    }
  }
  return 0;
}

NSString sub_100526378()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10071B400 = (uint64_t)result;
  return result;
}

id DOCTabbedBrowserViewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  DOCTabbedBrowserViewController.canPerformKeyCommandAction(_:with:)();
  if (v5 != 2) {
    return (id)(v5 & 1);
  }
  sub_1000CBC00(a2, (uint64_t)v16, (uint64_t *)&unk_100705D60);
  uint64_t v6 = v17;
  if (v17)
  {
    uint64_t v7 = sub_1000A6B78(v16, v17);
    uint64_t v8 = *(void *)(v6 - 8);
    double v9 = __chkstk_darwin(v7);
    double v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    sub_10009B1B8((uint64_t)v16);
  }
  else
  {
    uint64_t v12 = 0;
  }
  v15.receiver = v2;
  v15.super_class = (Class)DOCTabbedBrowserViewController;
  id v13 = [super canPerformAction:a1 withSender:v12];
  swift_unknownObjectRelease();
  return v13;
}

_OWORD *DOCTabbedBrowserViewController.target(forAction:withSender:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  DOCTabbedBrowserViewController.canPerformKeyCommandAction(_:with:)();
  if (v6)
  {
    *(void *)(a3 + 24) = sub_10009E6C4(0, (unint64_t *)&unk_10071B410);
    id v15 = v28;
    *(void *)a3 = v28;
    return v15;
  }
  else
  {
    id v7 = [v28 presentedViewController];

    if (v7) {
      goto LABEL_3;
    }
    id v17 = [v28 splitBrowserViewController];
    sub_1000CBC00(a2, (uint64_t)&v29, (uint64_t *)&unk_100705D60);
    uint64_t v18 = v30;
    if (v30)
    {
      uint64_t v19 = sub_1000A6B78(&v29, v30);
      uint64_t v20 = *(void *)(v18 - 8);
      double v21 = __chkstk_darwin(v19);
      uint64_t v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v20 + 16))(v23, v21);
      uint64_t v24 = _bridgeAnythingToObjectiveC<A>(_:)();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v18);
      sub_10009B1B8((uint64_t)&v29);
    }
    else
    {
      uint64_t v24 = 0;
    }
    id v26 = [v17 targetForAction:a1 withSender:v24];

    swift_unknownObjectRelease();
    if (!v26)
    {
LABEL_3:
      sub_1000CBC00(a2, (uint64_t)&v32, (uint64_t *)&unk_100705D60);
      uint64_t v8 = *((void *)&v33 + 1);
      if (*((void *)&v33 + 1))
      {
        double v9 = sub_1000A6B78(&v32, *((uint64_t *)&v33 + 1));
        uint64_t v10 = *(void *)(v8 - 8);
        double v11 = __chkstk_darwin(v9);
        id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v10 + 16))(v13, v11);
        uint64_t v14 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v8);
        sub_10009B1B8((uint64_t)&v32);
      }
      else
      {
        uint64_t v14 = 0;
      }
      v31.receiver = v28;
      v31.super_class = (Class)DOCTabbedBrowserViewController;
      [super targetForAction:a1 withSender:v14];
      swift_unknownObjectRelease();
      if (v25)
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v32 = 0u;
        long long v33 = 0u;
      }
      return (_OWORD *)sub_1000516C4((uint64_t)&v32, a3);
    }
    else
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_1000A54B0(&v29, &v32);
      return sub_1000A54B0(&v32, (_OWORD *)a3);
    }
  }
}

void DOCTabbedBrowserViewController.pressesBegan(_:with:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100526B10()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  char v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v0 splitBrowserViewController:v4];
  id v8 = [v7 fullDocumentManagerViewController];

  double v9 = (char *)sub_1000567E0();
  if (!v9) {
    return 0;
  }
  uint64_t v10 = (void **)&v9[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
  swift_beginAccess();
  double v11 = *v10;
  if (!v11)
  {

    return 0;
  }
  type metadata accessor for DOCItemCollectionViewController(0);
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {

    return v12;
  }
  id v13 = v11;

  if ([(id)v12 isFirstResponder]) {
    goto LABEL_6;
  }
  id v14 = [v1 presentedViewController];

  if (v14) {
    goto LABEL_6;
  }
  id v16 = [v1 viewIfLoaded];
  if (v16)
  {
    id v17 = v16;
    id v18 = [v16 window];

    if (v18)
    {
      id v19 = [v18 firstResponder];

      if (v19)
      {
        uint64_t v44 = &OBJC_PROTOCOL___UIKeyInput;
        uint64_t v20 = swift_dynamicCastObjCProtocolConditional();

        if (v20)
        {
LABEL_6:

          return 0;
        }
      }
    }
  }
  static Logger.UI.getter();
  id v21 = v13;
  id v22 = v1;
  id v23 = v21;
  id v24 = v22;
  id v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  int v27 = v26;
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v28 = swift_slowAlloc();
    int v41 = v27;
    uint64_t v29 = v28;
    id v43 = (void *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v46 = v42;
    *(_DWORD *)uint64_t v29 = 136315650;
    uint64_t v45 = sub_10009B0E4(0xD000000000000025, 0x80000001005FE980, &v46);
    id v39 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v29 + 12) = 2112;
    uint64_t v45 = (uint64_t)v24;
    id v30 = v24;
    os_log_t v40 = v25;
    id v31 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v43 = v24;

    *(_WORD *)(v29 + 22) = 2080;
    id v32 = v39;
    id v33 = [(id)v12 description];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v36 = v35;

    uint64_t v45 = sub_10009B0E4(v34, v36, &v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    os_log_t v37 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v41, "%s %@ is forwarding key event for Type Ahead to: %s", (uint8_t *)v29, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    uint64_t v12 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    return 1;
  }
  return v12;
}

void DOCTabbedBrowserViewController.pressesChanged(_:with:)(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100527030(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  sub_10009E6C4(0, &qword_10070D238);
  sub_10035C084((unint64_t *)&qword_10070D240, &qword_10070D238);
  uint64_t v8 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a4;
  id v10 = a1;
  a5(v8, a4);

  return swift_bridgeObjectRelease();
}

void DOCTabbedBrowserViewController.pressesEnded(_:with:)(uint64_t a1, uint64_t a2)
{
}

void DOCTabbedBrowserViewController.pressesCancelled(_:with:)(uint64_t a1, uint64_t a2)
{
}

void sub_10052716C(uint64_t a1, uint64_t a2, SEL *a3, void (*a4)(uint64_t, uint64_t))
{
  sub_10009E6C4(0, &qword_10070D238);
  sub_10035C084((unint64_t *)&qword_10070D240, &qword_10070D238);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v18.receiver = v4;
  v18.super_class = (Class)DOCTabbedBrowserViewController;
  [super isa:a2];

  if (sub_100526B10())
  {
    id v10 = [v4 splitBrowserViewController];
    id v11 = [v10 fullDocumentManagerViewController];

    uint64_t v12 = (char *)sub_1000567E0();
    if (v12)
    {
      id v13 = (void **)&v12[OBJC_IVAR____TtC5Files29DOCBrowserContainerController_contentViewController];
      swift_beginAccess();
      id v14 = *v13;
      if (v14
        && (type metadata accessor for DOCItemCollectionViewController(0), (uint64_t v15 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v16 = v15;
        id v17 = v14;

        if ((*(unsigned char *)(v16 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_endingInlineRename) & 1) != 0
          || !*(void *)(v16 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_inlineRenameController)
          && *(unsigned char *)(v16 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_preparingForInlineRename) != 1)
        {
          a4(a1, a2);
        }
      }
      else
      {
        id v17 = v12;
      }
    }
  }
}

void sub_100527364(uint64_t a1)
{
  uint64_t v42 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v42 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v42);
  double v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (id)_DocumentManagerBundle();
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  char v6 = v5;
  v45._countAndFlagsBits = 0xD00000000000003DLL;
  v45._object = (void *)0x80000001005FE860;
  v7._object = (void *)0x80000001005FE820;
  v7._countAndFlagsBits = 0x1000000000000034;
  v8._countAndFlagsBits = 0x617A696C61636F4CLL;
  v8._object = (void *)0xEB00000000656C62;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v45);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1005A0030;
  URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
  uint64_t v12 = v11;
  *(void *)(v10 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
  *(void *)(v10 + 64) = sub_10035C084((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
  *(void *)(v10 + 32) = v12;
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  id v13 = (id)_DocumentManagerBundle();
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  id v14 = v13;
  v46._countAndFlagsBits = 0xD00000000000003FLL;
  v46._object = (void *)0x80000001005FE8C0;
  v15._object = (void *)0x80000001005FE8A0;
  v15._countAndFlagsBits = 0xD000000000000017;
  v16._countAndFlagsBits = 0x617A696C61636F4CLL;
  v16._object = (void *)0xEB00000000656C62;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v46);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v20 = [self alertControllerWithTitle:v18 message:v19 preferredStyle:1];

  id v21 = (id)_DocumentManagerBundle();
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v22 = v21;
  v47._countAndFlagsBits = 0xD000000000000027;
  v47._object = (void *)0x80000001005FE900;
  v23._countAndFlagsBits = 0x7463656E6E6F43;
  v23._object = (void *)0xE700000000000000;
  v24._countAndFlagsBits = 0x617A696C61636F4CLL;
  v24._object = (void *)0xEB00000000656C62;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v47);

  uint64_t v26 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))((char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v42);
  unint64_t v27 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = v43;
  *(void *)(v28 + 16) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v28 + v27, v4, v26);
  id v30 = v29;
  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10052906C;
  aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10041B2E4;
  void aBlock[3] = &unk_1006B5298;
  id v32 = _Block_copy(aBlock);
  swift_release();
  id v33 = self;
  id v34 = [v33 actionWithTitle:v31 style:0 handler:v32];
  _Block_release(v32);

  id v35 = (id)_DocumentManagerBundle();
  if (v35)
  {
    unint64_t v36 = v35;
    v48._countAndFlagsBits = 0xD00000000000001DLL;
    v48._object = (void *)0x80000001005FE930;
    v37._countAndFlagsBits = 0x6C65636E6143;
    v37._object = (void *)0xE600000000000000;
    v38._countAndFlagsBits = 0x617A696C61636F4CLL;
    v38._object = (void *)0xEB00000000656C62;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v48);

    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v41 = [v33 actionWithTitle:v40 style:1 handler:0];

    [v20 addAction:v34];
    [v20 addAction:v41];
    [v20 setPreferredAction:v34];
    [v30 presentViewController:v20 animated:1 completion:0];

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100527A40(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  double v5 = __chkstk_darwin(v4 - 8);
  Swift::String v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v2 presentedViewController];
  if (!v8 || (Swift::String v9 = v8, self, v10 = swift_dynamicCastObjCClass(), v9, !v10))
  {
    sub_1000CBC00(a1, (uint64_t)v7, &qword_1007076B0);
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    id v14 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11) != 1)
    {
      URL._bridgeToObjectiveC()(v13);
      id v14 = v15;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
    }
    id v16 = (id)_DocumentManagerBundle();
    if (!v16)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    Swift::String v17 = v16;
    NSString v18 = self;
    v37._countAndFlagsBits = 0xD000000000000037;
    v37._object = (void *)0x80000001005FE7E0;
    v19._object = (void *)0x80000001005E2F60;
    v19._countAndFlagsBits = 0xD000000000000011;
    v20._countAndFlagsBits = 0x617A696C61636F4CLL;
    v20._object = (void *)0xEB00000000656C62;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v17, v21, v37);

    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (qword_1007052D0 != -1) {
      swift_once();
    }
    id v23 = [v18 actionControllerForConnectingToServerURL:v14 actionTitle:v22 providerIdentifier:qword_10071B400];

    id v24 = [v23 view];
    if (!v24) {
      goto LABEL_24;
    }
    Swift::String v25 = v24;
    id v26 = [v2 view];
    if (!v26)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    unint64_t v27 = v26;
    id v28 = [v26 tintColor];

    if (!v28)
    {
LABEL_26:
      __break(1u);
      return;
    }
    id v29 = [self _doc_safeTintColor:v28];

    [v25 setTintColor:v29];
    [v23 setDelegate:v2];
    id v30 = [self dismissingKeyCommandsWithAction:"performDismiss:"];
    sub_10009E6C4(0, &qword_100708860);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      if (v32) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v32)
      {
LABEL_13:
        if (v32 >= 1)
        {
          for (uint64_t i = 0; i != v32; ++i)
          {
            if ((v31 & 0xC000000000000001) != 0) {
              id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v34 = *(id *)(v31 + 8 * i + 32);
            }
            id v35 = v34;
            [v23 addKeyCommand:v34];
          }
          goto LABEL_20;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    [v2 presentViewController:v23 animated:1 completion:0];
  }
}

void sub_100527FC4()
{
  id v1 = [v0 effectiveFullBrowser];
  [v1 setGoToFileProviderSources:0];
  id v2 = [v1 configuration];
  id v3 = [v1 sourceObserver];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = objc_allocWithZone((Class)type metadata accessor for DOCSourceOrderObserver());
    Swift::String v7 = DOCSourceOrderObserver.init(configuration:sourceObserver:updateBlock:)(v2, v4, (uint64_t)sub_10043AF04, v5);
    [v1 setSourceOrderObserver:v7];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100528130(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DOCAnalyticsConnectToServerShownEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  DOCAnalyticsConnectToServerShownEvent.init(bundleID:origin:)();
  type metadata accessor for DOCAnalyticsManager();
  id v13 = (void *)static DOCAnalyticsManager.shared.getter();
  DOCAnalyticsManager.sendConnectToServerShownEvent(_:)();

  [a3 presentConnectToServer:0];
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

id DOCTabbedBrowserViewController.actionControllerDidFinishAction(_:userInfo:error:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v7 = [a1 providerIdentifier];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  if (qword_1007052D0 != -1) {
    swift_once();
  }
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
    swift_bridgeObjectRelease_n();
    if (a3)
    {
LABEL_9:
      swift_errorRetain();
      uint64_t v15 = (void *)static DOCLog.Source.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
      uint64_t v17 = _convertErrorToNSError(_:)();
      *(void *)(v16 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v16 + 64) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v16 + 32) = v17;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return result;
    }
    if (a3) {
      goto LABEL_9;
    }
  }
  if (!a2)
  {
    long long v29 = 0u;
    long long v30 = 0u;
    goto LABEL_20;
  }
  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(a2 + 16) || (uint64_t v20 = sub_100042F50(v18, v19), (v21 & 1) == 0))
  {
    long long v29 = 0u;
    long long v30 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_10009B208(*(void *)(a2 + 56) + 32 * v20, (uint64_t)&v29);
  swift_bridgeObjectRelease();
  if (!*((void *)&v30 + 1))
  {
LABEL_20:
    sub_1000CBBA4((uint64_t)&v29, (uint64_t *)&unk_100705D60);
    goto LABEL_21;
  }
  if (swift_dynamicCast())
  {
    id v22 = [v4 splitBrowserViewController];
    id v23 = [v22 sidebarViewController];

    sub_100287524(v27, v28);
    swift_bridgeObjectRelease();
    return [v4 switchToTab:2];
  }
LABEL_21:
  id v24 = [v4 splitBrowserViewController];
  Swift::String v25 = (char *)[v24 sidebarViewController];

  id v26 = &v25[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pendingSelectionProviderDomainIdentifier];
  *(void *)id v26 = 0;
  *((void *)v26 + 1) = 0;

  return (id)swift_bridgeObjectRelease();
}

void DOCTabbedBrowserViewController.actionControllerDidFinishAction(_:error:)(uint64_t a1, uint64_t a2)
{
  if (a2) {
    uint64_t v4 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v4 = 0;
  }
  id v5 = (id)v4;
  [v2 actionControllerDidFinishAction:a1];
}

void DOCTabbedBrowserViewController.actionController(_:presentError:completion:)()
{
  id v0 = (id)_convertErrorToNSError(_:)();
  DOCPresentAlertForError();
}

void sub_1005288D4()
{
  id v0 = [self sharedManager];
  [v0 restoreCurrentlyFocused];
}

void sub_100528A00()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      id v3 = (void *)v2;
      id v4 = [v1 splitBrowserViewController];
      id v5 = [v4 doc_splitViewState];

      LODWORD(v4) = [v5 isSidebarShown];
      [v3 setNeverAllowShowingSystemTabs:v4 ^ 1];
      id v6 = [v1 splitBrowserViewController];
      [v6 toggleSidebarShown];

      id v1 = v6;
    }
  }
}

uint64_t sub_100528B54()
{
  id v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_10071B420);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCSplitViewState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - v11;
  id v13 = [v0 splitBrowserViewController];
  id v14 = [v13 doc_splitViewState];

  static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)();
  DOCSplitViewState.with(isCollapsed:)();
  id v15 = [v1 traitCollection];
  uint64_t v16 = (void *)UITraitCollection.modifyingTraits(_:)();

  id v17 = [v1 configuration];
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  id v18 = v16;
  uint64_t v19 = static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)();

  sub_1000CBBA4((uint64_t)v4, &qword_10071B420);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v6 + 8);
  v20(v8, v5);
  v20(v12, v5);
  return v19;
}

uint64_t sub_100528EC4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100528EFC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100528F3C()
{
}

unint64_t sub_100528F44(unint64_t result, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0) {
    return specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > result)
  {
    return (unint64_t)*(id *)(a2 + 8 * result + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_100528FA0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10052906C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  URL._bridgeToObjectiveC()((NSURL *)((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  id v4 = v3;
  [v2 presentConnectToServer:v3];
}

unint64_t sub_100529100@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_100528F44(*a1, **(void **)(v2 + 16));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

void sub_100529154()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_bbiStorage];
  swift_beginAccess();
  uint64_t v3 = *(objc_class **)(v2 + 184);
  if (v3)
  {
    id v4 = v0;
    swift_retain();
    uint64_t v5 = v3;
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070B700);
    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = v0;
    swift_retain();
    v45.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v45.value.super.Class isa = 0;
    v46.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v45, v46, v47).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2, 0, 0, 0, sub_100529798, v6);
    *(void *)(v2 + 184) = isa;
    type metadata accessor for DOCBarButtonItemGroup();
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A04F0;
    *(void *)(v9 + 32) = isa;
    specialized Array._endMutation()();
    uint64_t v5 = isa;
    uint64_t v10 = static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
    swift_bridgeObjectRelease();

    uint64_t v3 = 0;
    *(void *)(v2 + 176) = v10;
  }
  uint64_t v11 = v3;
  swift_endAccess();
  swift_release();

  uint64_t v12 = *(void **)&v1[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
  if ([v12 interactionMode] == (id)2)
  {
    id v13 = (objc_class *)(id)_DocumentManagerBundle();
    if (!v13)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    id v14 = v13;
    unint64_t v44 = 0x80000001005FEA40;
    uint64_t v15 = 1702256979;
    goto LABEL_22;
  }
  uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v16)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v17 = v16 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v17 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v18 = *(void *)(v17 + 8);
    swift_unknownObjectRetain();
    if (!v18)
    {
LABEL_17:
      unsigned int v26 = [v12 forPickingFolders];
      uint64_t v27 = (objc_class *)(id)_DocumentManagerBundle();
      id v14 = v27;
      if (v26)
      {
        if (!v27)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        unint64_t v28 = 0xD000000000000026;
        unint64_t v44 = 0x80000001005FE9D0;
        uint64_t v15 = 1852141647;
        unint64_t v29 = 0xE400000000000000;
        uint64_t v30 = 0x617A696C61636F4CLL;
        unint64_t v31 = 0xEB00000000656C62;
        v32.super.Class isa = v14;
        uint64_t v33 = 0;
        unint64_t v34 = 0xE000000000000000;
        goto LABEL_23;
      }
      if (!v27)
      {
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v15 = 1702260557;
      unint64_t v44 = 0x80000001005FE9B0;
LABEL_22:
      unint64_t v29 = 0xE400000000000000;
      uint64_t v30 = 0x617A696C61636F4CLL;
      unint64_t v31 = 0xEB00000000656C62;
      v32.super.Class isa = v14;
      uint64_t v33 = 0;
      unint64_t v34 = 0xE000000000000000;
      unint64_t v28 = 0xD00000000000001ALL;
LABEL_23:
      DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v15, *(Swift::String *)&v30, v32, *(Swift::String *)&v33, *(Swift::String *)(&v44 - 1));
      goto LABEL_24;
    }
  }
  swift_getObjectType();
  id v14 = (objc_class *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (!v14) {
    goto LABEL_17;
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong || (id v20 = [Strong pickerOperationFor:v14], swift_unknownObjectRelease(), v20 != (id)1))
  {

    goto LABEL_17;
  }
  id v21 = (id)_DocumentManagerBundle();
  if (!v21)
  {
LABEL_39:
    __break(1u);
    return;
  }
  uint64_t v22 = v21;
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  v48._object = (void *)0x80000001005FEA20;
  v23._object = (void *)0x80000001005FEA00;
  v24._countAndFlagsBits = 0x617A696C61636F4CLL;
  v24._object = (void *)0xEB00000000656C62;
  v25._countAndFlagsBits = 2037411651;
  v25._object = (void *)0xE400000000000000;
  v48._countAndFlagsBits = 0xD00000000000001ALL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v48);

LABEL_24:
  id v35 = v5;
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [(objc_class *)v35 setTitle:v36];

  uint64_t v37 = *(void *)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_nodeCollection];
  if (!v37)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v38 = v37 + OBJC_IVAR____TtC5Files17DOCNodeCollection_type;
  if (*(unsigned char *)(v38 + 16))
  {
    swift_unknownObjectRetain();
  }
  else
  {
    uint64_t v39 = *(void *)(v38 + 8);
    swift_unknownObjectRetain();
    if (!v39)
    {
LABEL_31:
      [(objc_class *)v35 setEnabled:0];
      return;
    }
  }
  swift_getObjectType();
  NSString v40 = (void *)DOCNode.fpfs_syncFetchFPItem()();
  swift_unknownObjectRelease();
  if (!v40) {
    goto LABEL_31;
  }
  id v41 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v41)
  {
    id v42 = [v41 pickerOperationFor:v40];
    swift_unknownObjectRelease();
    BOOL v43 = v42 != 0;
  }
  else
  {
    BOOL v43 = 1;
  }
  [(objc_class *)v35 setEnabled:v43];
}

uint64_t sub_10052970C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100529744()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1002A0380();
  }
}

void sub_100529798()
{
}

SEL *NSProgress.totalUnitMb.setter(double a1)
{
  return sub_1005297B8((SEL *)&selRef_setTotalUnitCount_, a1);
}

SEL *NSProgress.completedUnitMb.setter(double a1)
{
  return sub_1005297B8((SEL *)&selRef_setCompletedUnitCount_, a1);
}

SEL *sub_1005297B8(SEL *result, double a2)
{
  double v3 = a2 * 1000000.0;
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18) {
    return (SEL *)[v2 *result:v3];
  }
LABEL_7:
  __break(1u);
  return result;
}

double NSProgress.totalUnitMb.getter()
{
  return (double)(uint64_t)[v0 totalUnitCount] / 1000000.0;
}

id *(*NSProgress.totalUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)[v1 totalUnitCount] / 1000000.0;
  return sub_1005298B8;
}

id *sub_1005298B8(id *a1, char a2)
{
  return sub_100529970(a1, a2, (SEL *)&selRef_setTotalUnitCount_);
}

double NSProgress.completedUnitMb.getter()
{
  return (double)(uint64_t)[v0 completedUnitCount] / 1000000.0;
}

id *(*NSProgress.completedUnitMb.modify(uint64_t a1))(id *a1, char a2)
{
  *(void *)(a1 + 8) = v1;
  *(double *)a1 = (double)(uint64_t)[v1 completedUnitCount] / 1000000.0;
  return sub_100529964;
}

id *sub_100529964(id *a1, char a2)
{
  return sub_100529970(a1, a2, (SEL *)&selRef_setCompletedUnitCount_);
}

id *sub_100529970(id *result, char a2, SEL *a3)
{
  double v3 = *(double *)result * 1000000.0;
  BOOL v4 = (*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000;
  if ((a2 & 1) == 0) {
    goto LABEL_6;
  }
  if ((*(void *)&v3 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  BOOL v4 = v3 == 9.22337204e18;
  if (v3 < 9.22337204e18) {
    return (id *)[result[1] *a3:(uint64_t)v3];
  }
  __break(1u);
LABEL_6:
  if (v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 < 9.22337204e18) {
    return (id *)[result[1] *a3:v3];
  }
LABEL_14:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCProgressUI()
{
  return self;
}

objc_class *sub_100529A38(uint64_t a1)
{
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v3 = v2;
  if (v1 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0)
    {
LABEL_7:
      unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
      if (result)
      {
        uint64_t v8 = result;
        unint64_t v9 = 0xD00000000000005ALL;
        unint64_t v18 = 0x80000001005FEA80;
        uint64_t v10 = 0x6E69726170657250;
        unint64_t v11 = 0xAC000000A680E267;
        uint64_t v12 = 0x617A696C61636F4CLL;
        unint64_t v13 = 0xEB00000000656C62;
        v14.super.Class isa = v8;
        uint64_t v15 = 0x6E69726170657250;
        unint64_t v16 = 0xAC000000A680E267;
LABEL_12:
        uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v10, *(Swift::String *)&v12, v14, *(Swift::String *)&v15, *(Swift::String *)&v9)._countAndFlagsBits;

        return (objc_class *)countAndFlagsBits;
      }
      __break(1u);
      goto LABEL_14;
    }
  }
  unint64_t result = (objc_class *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v8 = result;
    unint64_t v18 = 0x80000001005FEB00;
    unint64_t v11 = 0x80000001005FEAE0;
    uint64_t v10 = 0x1000000000000014;
    uint64_t v12 = 0x617A696C61636F4CLL;
    unint64_t v13 = 0xEB00000000656C62;
    v14.super.Class isa = v8;
    uint64_t v15 = 0x1000000000000014;
    unint64_t v16 = 0x80000001005FEAE0;
    unint64_t v9 = 0xD000000000000047;
    goto LABEL_12;
  }
LABEL_14:
  __break(1u);
  return result;
}

id DOCPreviewController.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return DOCPreviewController.init()();
}

uint64_t sub_100529C28(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_100529C50(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id DOCQLItemsPreviewController.__allocating_init(previewItems:)(unint64_t a1)
{
  id v3 = objc_allocWithZone(v1);
  return DOCQLItemsPreviewController.init(previewItems:)(a1);
}

id sub_100529D68@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 currentPreviewItemIndex];
  *a2 = result;
  return result;
}

id sub_100529D9C(void *a1, id *a2)
{
  return [*a2 setCurrentPreviewItemIndex:*a1];
}

void DOCDocumentManager.previewController(_:import:nextTo:completion:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
}

void sub_100529DC4(void *a1, uint64_t a2)
{
  id v3 = v2;
  id v59 = a1;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v58 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v57 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTimeInterval();
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v13 = (uint64_t *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v21 = &v3[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  int v22 = v3[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16];
  if (v22 == 255) {
    return;
  }
  id v54 = v8;
  uint64_t v55 = v9;
  uint64_t v23 = *(void *)v21;
  Swift::String v24 = (void *)*((void *)v21 + 1);
  if ((v22 & 1) == 0)
  {
    Swift::String v49 = (char *)&v48 - v19;
    uint64_t v50 = v20;
    uint64_t v51 = v18;
    uint64_t v53 = v5;
    unint64_t v61 = v23;
    sub_10039E1B8(v23, v24, 0);
    sub_10039E1B8(v23, v24, 0);
    sub_1001B5B34(a2, v23);
    unsigned int v26 = v25;
    char v28 = v27;
    sub_10039E204(v23, v24, v22);
    uint64_t v52 = v6;
    if (v28) {
      unsigned int v26 = (char *)[v3 currentPreviewItemIndex];
    }
    uint64_t v30 = (uint64_t)(v26 + 1);
    if (__OFADD__(v26, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = v23 & 0xFFFFFFFFFFFFFF8;
      if (!((unint64_t)v23 >> 62))
      {
        uint64_t v31 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v32 = (uint64_t)v59;
        id v33 = v59;
        if (v31 >= v30) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    if (v23 < 0) {
      uint64_t v29 = v23;
    }
    uint64_t v48 = v29;
    sub_100491D80((id)v23, v24, v22);
    id v45 = v59;
    uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v47 = v23;
    uint64_t v32 = (uint64_t)v59;
    sub_10039E204(v47, v24, v22);
    if (v46 >= v30)
    {
LABEL_8:
      if ((v30 & 0x8000000000000000) == 0)
      {
        sub_100515458((uint64_t)(v26 + 1), (uint64_t)(v26 + 1), v32);
        DOCPreviewController.set(_:defaultIndex:)(v61, 0, 0, (unint64_t)v26, 0);
        swift_bridgeObjectRelease();
        if ([v3 respondsToSelector:"setCurrentPreviewItemIndex:animated:"]) {
          [v3 setCurrentPreviewItemIndex:v30 animated:1];
        }
        else {
          [v3 setCurrentPreviewItemIndex:v30];
        }
        sub_10009E6C4(0, (unint64_t *)&qword_100705380);
        id v59 = (id)static OS_dispatch_queue.main.getter();
        static DispatchTime.now()();
        *unint64_t v13 = 1;
        uint64_t v34 = v56;
        (*(void (**)(void *, void, uint64_t))(v56 + 104))(v13, enum case for DispatchTimeInterval.seconds(_:), v11);
        id v35 = v49;
        + infix(_:_:)();
        (*(void (**)(void *, uint64_t))(v34 + 8))(v13, v11);
        uint64_t v36 = v51;
        uint64_t v37 = *(void (**)(char *, uint64_t))(v50 + 8);
        v37(v16, v51);
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = v3;
        aBlock[4] = sub_100534150;
        aBlock[5] = v38;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1000666D8;
        void aBlock[3] = &unk_1006B5750;
        uint64_t v39 = _Block_copy(aBlock);
        NSString v40 = v3;
        swift_release();
        id v41 = v57;
        static DispatchQoS.unspecified.getter();
        aBlock[0] = _swiftEmptyArrayStorage;
        sub_1000BAF6C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_1000CBE70((uint64_t *)&unk_100705390);
        sub_100073DF0((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
        id v42 = v54;
        uint64_t v43 = v53;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        id v44 = v59;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
        _Block_release(v39);

        (*(void (**)(char *, uint64_t))(v52 + 8))(v42, v43);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v55);
        v37(v35, v36);
        return;
      }
LABEL_22:
      __break(1u);
      return;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_10039E1B8(*(void *)v21, *((void **)v21 + 1), 1);

  swift_bridgeObjectRelease();
}

void sub_10052A44C(unint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v25 - v12;
  if (a4)
  {
    if ((a1 & 0x8000000000000000) == 0)
    {
      if (*(void *)(a2 + 16) > a1)
      {
        type metadata accessor for URL();
        id v18 = objc_allocWithZone((Class)QLItem);
        URL._bridgeToObjectiveC()(v19);
        id v21 = v20;
        [v18 initWithURL:v20];

        return;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v14 = *(id *)(a2 + 8 * a1 + 32);
LABEL_6:
  uint64_t v15 = v14;
  id v16 = [objc_allocWithZone((Class)QLItem) initWithFPItem:v14];
  if ((a2 & 0xC000000000000001) != 0) {
    id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v17 = *(id *)(a2 + 8 * a1 + 32);
  }
  int v22 = v17;
  id v23 = [v17 contentType];

  static UTType._unconditionallyBridgeFromObjectiveC(_:)();
  static UTType.pdf.getter();
  LOBYTE(v22) = UTType.conforms(to:)();
  Swift::String v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v10, v7);
  v24(v13, v7);
  [v16 setUseFullPDFTransition:v22 & 1];
}

uint64_t sub_10052A6F4(unint64_t a1, void *a2, char a3)
{
  char v3 = a3;
  uint64_t v4 = a2;
  if ((a3 & 1) == 0)
  {
    if (a1 >> 62) {
      goto LABEL_21;
    }
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v7 = 4;
      while (1)
      {
        id v8 = (a1 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(a1 + 8 * v7);
        uint64_t v9 = v8;
        uint64_t v10 = v7 - 3;
        if (__OFADD__(v7 - 4, 1)) {
          break;
        }
        id v11 = [v8 providerDomainID];
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v14 = v13;

        if (v12 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v14 == v15)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0)
          {

            goto LABEL_6;
          }
        }
        unsigned __int8 v18 = [v9 doc_isAppContainerRoot];

        if (v18)
        {
          sub_10039E21C(a1, a2, 0);
          return 0;
        }
LABEL_6:
        ++v7;
        if (v10 == v6) {
          goto LABEL_22;
        }
      }
      __break(1u);
LABEL_21:
      swift_bridgeObjectRetain();
    }
LABEL_22:
    uint64_t v4 = a2;
    sub_10039E21C(a1, a2, 0);
    char v3 = a3;
  }
  id v20 = [self defaultPermission];
  if (![v20 hasOpenInRestrictions])
  {

    return 1;
  }
  if (v3)
  {
    id v22 = v4;
    id v23 = [v22 providerDomain];
    if (v23)
    {
      Swift::String v24 = v23;
      id v25 = [v23 topLevelBundleIdentifier];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v26 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v19 = [v20 canCopyfromContainingBundleIdentifer:v26];

      return (uint64_t)v19;
    }

    return 1;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v19 = [v20 canCopyItems:isa];

  return (uint64_t)v19;
}

id DOCQLItemsPreviewController.init(previewItems:)(unint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files27DOCQLItemsPreviewController__nonSourceBasedQLItems] = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_10071B4D0);
    _bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  }
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10071B4D0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCQLItemsPreviewController();
  [super initWithPreviewItems:isa];

  return v3;
}

id DOCQLItemsPreviewController.init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC5Files27DOCQLItemsPreviewController__nonSourceBasedQLItems] = _swiftEmptyArrayStorage;
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for DOCQLItemsPreviewController();
  [super initWithNibName:v5 bundle:a3];

  return v6;
}

id DOCQLItemsPreviewController.__allocating_init(previewItems:)()
{
  id v1 = objc_allocWithZone(v0);
  sub_1000CBE70(&qword_10071B4D0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithPreviewItems:isa];

  return v3;
}

void DOCQLItemsPreviewController.init(previewItems:)()
{
}

id DOCQLItemsPreviewController.__deallocating_deinit(uint64_t a1)
{
  return sub_100531094(a1, type metadata accessor for DOCQLItemsPreviewController);
}

uint64_t DOCPreviewController.editingDelegate.getter()
{
  return sub_10052AE38();
}

uint64_t DOCPreviewController.editingDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_10052AE90(a1, a2, &OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate);
}

uint64_t (*DOCPreviewController.editingDelegate.modify(void *a1))()
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
  void v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10052AE28;
}

uint64_t DOCPreviewController.visibilityDelegate.getter()
{
  return sub_10052AE38();
}

uint64_t sub_10052AE38()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t DOCPreviewController.visibilityDelegate.setter(uint64_t a1, uint64_t a2)
{
  return sub_10052AE90(a1, a2, &OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate);
}

uint64_t sub_10052AE90(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3 + *a3;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*DOCPreviewController.visibilityDelegate.modify(void *a1))()
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate;
  void v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10052AE28;
}

void sub_10052AF80(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t DOCPreviewController.actionManager.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void DOCPreviewController.actionManager.setter(void *a1)
{
}

void (*DOCPreviewController.actionManager.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_actionManager;
  v3[4] = v1;
  void v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_10052B130;
}

void sub_10052B130(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

void *DOCPreviewController.configuration.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DOCPreviewController.configuration.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_configuration);
  swift_beginAccess();
  id v4 = *v3;
  *id v3 = a1;
}

uint64_t (*DOCPreviewController.configuration.modify())()
{
  return j__swift_endAccess;
}

void DOCPreviewController.set(_:defaultIndex:)(unint64_t a1, void *a2, uint64_t a3, unint64_t a4, int a5)
{
  id v6 = v5;
  int v70 = a5;
  uint64_t v8 = a3;
  unsigned __int8 v11 = -1;
  LODWORD(v12) = ~(_BYTE)a3;
  uint64_t v13 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = __chkstk_darwin(v16);
  Swift::String v80 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v64 - v20;
  if (v12)
  {
    unint64_t v81 = a1;
    unsigned int v74 = v8;
    uint64_t v69 = a2;
    if (v8)
    {
      uint64_t v68 = v19;
      uint64_t v83 = _swiftEmptyArrayStorage;
      unint64_t v29 = *(void *)(a1 + 16);
      sub_100491D80((id)a1, a2, v8);
      id v30 = a2;
      swift_bridgeObjectRetain();
      if (v29)
      {
        uint64_t v66 = v6;
        unint64_t v67 = a4;
        unint64_t v78 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
        uint64_t v79 = v68 + 16;
        unint64_t v31 = v29;
        unint64_t v72 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
        uint64_t v73 = v15;
        unint64_t v32 = a1 + v72;
        uint64_t v33 = *(void *)(v68 + 72);
        uint64_t v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
        id v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
        Swift::String v82 = (void (**)(uint64_t, char *, uint64_t))(v68 + 32);
        uint64_t v71 = (void (**)(uint64_t, uint64_t))(v68 + 8);
        unint64_t v64 = (v68 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        unint64_t v65 = v31;
        uint64_t v34 = (uint64_t)v75;
        v78(v15, a1 + v72, v16);
        while (1)
        {
          id v35 = *v77;
          (*v77)(v15, 0, 1, v16);
          if ((*v76)(v15, 1, v16) == 1)
          {
            id v6 = v66;
            a4 = v67;
            char v46 = v70;
            unint64_t v29 = v65;
            goto LABEL_37;
          }
          uint64_t v36 = *v82;
          (*v82)(v34, v15, v16);
          if (sub_10052BAE0(v34))
          {
            v36((uint64_t)v80, (char *)v34, v16);
            uint64_t v37 = v83;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100190C40(0, v37[2] + 1, 1);
              uint64_t v37 = v83;
            }
            unint64_t v39 = v37[2];
            unint64_t v38 = v37[3];
            if (v39 >= v38 >> 1)
            {
              sub_100190C40(v38 > 1, v39 + 1, 1);
              uint64_t v37 = v83;
            }
            _OWORD v37[2] = v39 + 1;
            v36((uint64_t)v37 + v72 + v39 * v33, v80, v16);
            uint64_t v83 = v37;
            a1 = v81;
            uint64_t v15 = v73;
            uint64_t v34 = (uint64_t)v75;
          }
          else
          {
            (*v71)(v34, v16);
          }
          v32 += v33;
          if (!--v31) {
            break;
          }
          v78(v15, v32, v16);
        }
        id v6 = v66;
        a4 = v67;
        unint64_t v29 = v65;
        v35(v15, 1, 1, v16);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v15, 1, 1, v16);
      }
      char v46 = v70;
LABEL_37:
      swift_bridgeObjectRelease();
      sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
      uint64_t v8 = (uint64_t)v83;
      a2 = v69;
      LOBYTE(v23) = v74;
      if (v46)
      {
        int v48 = 1;
      }
      else
      {
        if (v29 <= a4) {
          goto LABEL_59;
        }
        a4 = sub_1001B5CE4(a1+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * a4, (uint64_t)v83);
        int v48 = v47 & 1;
      }
      LODWORD(v82) = v48;
      id v45 = a2;
      goto LABEL_45;
    }
    uint64_t v83 = _swiftEmptyArrayStorage;
    uint64_t v21 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 >> 62)
    {
      uint64_t v23 = v74;
      sub_100491D80((id)a1, a2, v74);
      sub_10039E1B8(a1, a2, 0);
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      if (v22) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v23 = v74;
      sub_100491D80((id)a1, a2, v74);
      sub_10039E1B8(a1, a2, 0);
      if (v22)
      {
LABEL_5:
        unint64_t v67 = a4;
        if (v22 >= 1)
        {
          uint64_t v24 = 0;
          unint64_t v25 = a1 & 0xC000000000000001;
          do
          {
            if (v25) {
              id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v26 = *(id *)(a1 + 8 * v24 + 32);
            }
            char v27 = v26;
            if ([v26 isFolder])
            {
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              a1 = v81;
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            ++v24;
          }
          while (v22 != v24);
          a2 = v69;
          uint64_t v23 = v74;
          sub_10039E204(a1, v69, v74);
          uint64_t v8 = (uint64_t)v83;
          a4 = v67;
          if ((v70 & 1) == 0)
          {
LABEL_28:
            if ((a1 & 0xC000000000000001) == 0)
            {
              if ((a4 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (*(void *)(v21 + 16) > a4)
              {
                id v40 = *(id *)(a1 + 8 * a4 + 32);
LABEL_32:
                id v41 = v40;
                sub_1001B5B34((uint64_t)v40, v8);
                a4 = v42;
                char v44 = v43;

                id v45 = 0;
                LODWORD(v82) = v44 & 1;
                LOBYTE(v23) = v74;
                goto LABEL_45;
              }
              __break(1u);
              (*v71)(v8, v23);
              swift_bridgeObjectRelease();
              swift_release();
              __break(1u);
              return;
            }
LABEL_60:
            id v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_32;
          }
          goto LABEL_44;
        }
        __break(1u);
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    sub_10039E204(a1, a2, v23);
    uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
    if ((v70 & 1) == 0) {
      goto LABEL_28;
    }
LABEL_44:
    id v45 = 0;
    LODWORD(v82) = 1;
LABEL_45:
    unsigned __int8 v11 = v23 & 1;
    id v12 = [self defaultPermission];
    if ([v12 hasOpenInRestrictions])
    {
      if ((v23 & 1) == 0)
      {
        id v49 = v12;
        sub_10039E1B8(v8, v45, 0);
        LOBYTE(v12) = sub_100531984(v8, v49);

        sub_10039E204(a1, a2, v74);
        sub_10039E21C(v8, v45, 0);
LABEL_52:
        a1 = v8;
        a2 = v45;
        int v28 = (int)v82;
        goto LABEL_53;
      }
      id v53 = v45;
      id v54 = [v53 providerDomain];
      if (v54)
      {
        uint64_t v55 = v54;
        id v56 = [v54 topLevelBundleIdentifier];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v57 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v58 = [v12 dataOwnerStateForBundleIdentifier:v57];

        sub_10039E204(v81, v69, v74);
        LOBYTE(v12) = v58 == (id)1;
        goto LABEL_52;
      }

      uint64_t v50 = a1;
      uint64_t v51 = a2;
      unsigned __int8 v52 = v74;
    }
    else
    {

      uint64_t v50 = a1;
      uint64_t v51 = a2;
      unsigned __int8 v52 = v23;
    }
    sub_10039E204(v50, v51, v52);
    LOBYTE(v12) = 0;
    goto LABEL_52;
  }
  int v28 = 1;
  a4 = 0;
LABEL_53:
  id v59 = &v6[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  uint64_t v60 = *(void *)&v6[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  unint64_t v61 = *(void **)&v6[OBJC_IVAR____TtC5Files20DOCPreviewController_source + 8];
  *(void *)id v59 = a1;
  *((void *)v59 + 1) = a2;
  unsigned __int8 v62 = v59[16];
  v59[16] = v11;
  sub_100491D80((id)a1, a2, v11);
  sub_10039E204(v60, v61, v62);
  [v6 setIsContentManaged:v12 & 1];
  [v6 reloadData];
  if (v28) {
    unint64_t v63 = 0;
  }
  else {
    unint64_t v63 = a4;
  }
  [v6 setCurrentPreviewItemIndex:v63, v64];
  sub_10039E204(a1, a2, v11);
}

BOOL sub_10052BAE0(uint64_t a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_100708110);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v26 - v8;
  __chkstk_darwin(v7);
  unsigned __int8 v11 = (char *)&v26 - v10;
  BOOL v27 = URL.startAccessingSecurityScopedResource()();
  uint64_t v26 = a1;
  URL._bridgeToObjectiveC()(v12);
  uint64_t v14 = v13;
  id v29 = 0;
  uint64_t v30 = 0;
  unsigned int v15 = [v13 getPromisedItemResourceValue:&v30 forKey:NSURLContentTypeKey error:&v29];

  uint64_t v16 = v30;
  if (v15)
  {
    id v17 = v29;
    swift_unknownObjectRetain();
    uint64_t v28 = v1;
    if (v16)
    {
LABEL_3:
      uint64_t v30 = v16;
      uint64_t v18 = type metadata accessor for UTType();
      swift_unknownObjectRetain();
      int v19 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, v19 ^ 1u, 1, v18);
      goto LABEL_6;
    }
  }
  else
  {
    id v20 = v29;
    swift_unknownObjectRetain();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v28 = 0;
    if (v16) {
      goto LABEL_3;
    }
  }
  uint64_t v18 = type metadata accessor for UTType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
LABEL_6:
  sub_1000CBC00((uint64_t)v11, (uint64_t)v9, &qword_100708110);
  type metadata accessor for UTType();
  uint64_t v21 = *(void *)(v18 - 8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v9, 1, v18) == 1)
  {
    sub_1000CBBA4((uint64_t)v9, &qword_100708110);
    sub_1000CBC00((uint64_t)v11, (uint64_t)v6, &qword_100708110);
LABEL_9:
    BOOL v24 = v22(v6, 1, v18) == 1;
    goto LABEL_11;
  }
  char v23 = UTType.isFolderUTI.getter();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v18);
  sub_1000CBC00((uint64_t)v11, (uint64_t)v6, &qword_100708110);
  if (v23) {
    goto LABEL_9;
  }
  BOOL v24 = 1;
LABEL_11:
  sub_1000CBBA4((uint64_t)v6, &qword_100708110);
  sub_1000CBBA4((uint64_t)v11, &qword_100708110);
  swift_unknownObjectRelease();
  if (v27) {
    URL.stopAccessingSecurityScopedResource()();
  }
  return v24;
}

id DOCPreviewController.delegate.getter()
{
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for DOCPreviewController();
  [super delegate];

  return v1;
}

uint64_t DOCPreviewController.delegate.setter(void *a1)
{
  if (a1)
  {
    uint64_t v2 = a1;
  }
  else
  {
    swift_unknownObjectRetain();
    uint64_t v2 = v1;
  }
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCPreviewController();
  [super setDelegate:v2];
  return swift_unknownObjectRelease();
}

id DOCPreviewController.keyCommands.getter()
{
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for DOCPreviewController();
  id v1 = [super keyCommands];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10009E6C4(0, &qword_100708860);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  id v6 = [v5 keyCommandWithInput:v4 modifierFlags:0 action:"dismissViaKeyCommand"];

  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 keyCommandWithInput:v7 modifierFlags:0 action:"dismissViaKeyCommand"];

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  v25._object = (void *)0x80000001005FEBA0;
  v11._uint64_t countAndFlagsBits = 0x207373696D736944;
  v11._object = (void *)0xEF77656976657250;
  v12._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v12._object = (void *)0xEB00000000656C62;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v25._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v25);

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v8 setDiscoverabilityTitle:v14];

  if (!(v3 >> 62))
  {
    uint64_t v15 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v16 = v8;
    id v17 = v6;
    swift_bridgeObjectRetain();
    uint64_t v18 = v15 + 2;
    if (!__OFADD__(v15, 2)) {
      goto LABEL_7;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v20 = v8;
  id v21 = v6;
  swift_bridgeObjectRetain();
  uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  BOOL v23 = __OFADD__(v22, 2);
  uint64_t v18 = v22 + 2;
  if (v23) {
    goto LABEL_13;
  }
LABEL_7:
  sub_10009EDF0(v18);
  specialized Array._endMutation()();
  id v8 = v8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_14:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v19 = v6;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  return (id)v3;
}

uint64_t DOCPreviewController.canPerformAction(_:withSender:)(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 presentedViewController];
  if (v5)
  {
    id v6 = v5;
    self;
    uint64_t v7 = swift_dynamicCastObjCClass();

    if (v7) {
      return 0;
    }
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v9 = (void **)&FPActionCopy;
  }
  else
  {
    if ((static Selector.== infix(_:_:)() & 1) == 0)
    {
      sub_1000CBC00(a2, (uint64_t)v21, (uint64_t *)&unk_100705D60);
      uint64_t v12 = v22;
      if (v22)
      {
        Swift::String v13 = sub_1000A6B78(v21, v22);
        uint64_t v14 = *(void *)(v12 - 8);
        double v15 = __chkstk_darwin(v13);
        id v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, double))(v14 + 16))(v17, v15);
        uint64_t v18 = _bridgeAnythingToObjectiveC<A>(_:)();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v12);
        sub_10009B1B8((uint64_t)v21);
      }
      else
      {
        uint64_t v18 = 0;
      }
      id v19 = (objc_class *)type metadata accessor for DOCPreviewController();
      v20.receiver = v2;
      v20.super_class = v19;
      [super canPerformAction:a1 withSender:v18];
      swift_unknownObjectRelease();
      return (uint64_t)v8;
    }
    uint64_t v9 = (void **)&FPActionReparent;
  }
  uint64_t v10 = *v9;

  return sub_10048DF9C(v10);
}

void DOCPreviewController.duplicate(_:)()
{
  if ([v0 currentPreviewItem])
  {
    self;
    id v1 = (void *)swift_dynamicCastObjCClass();
    if (v1 && (id v2 = [v1 fpItem]) != 0)
    {
      unint64_t v3 = v2;
      id v4 = [self defaultManager];
      id v5 = [v3 itemID];
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v3;
      *(void *)(v6 + 24) = v0;
      void v10[4] = sub_10053228C;
      v10[5] = v6;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_10016A350;
      v10[3] = &unk_1006B5310;
      uint64_t v7 = _Block_copy(v10);
      id v8 = v3;
      id v9 = v0;
      swift_release();
      [v4 fetchParentsForItemID:v5 recursively:0 completionHandler:v7];
      _Block_release(v7);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id sub_10052C914()
{
  id result = [self mapTableWithKeyOptions:5 valueOptions:0];
  qword_10071B4C0 = (uint64_t)result;
  return result;
}

void static DOCPreviewController.clearSharedController(for:)(void *a1)
{
  if (a1)
  {
    uint64_t v1 = qword_1007052D8;
    id v2 = a1;
    if (v1 != -1) {
      swift_once();
    }
    [qword_10071B4C0 removeObjectForKey:];
  }
  else
  {
    id v2 = (id)static DOCLog.Source.getter();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();
  }
}

id DOCPreviewController.init()()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  v1[16] = -1;
  id v2 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = 0;
  v0[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity] = 0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCPreviewController();
  [super initWithNibName:0 bundle:0];
  [v4 setDelegate:v4];
  [v4 setDataSource:v4];
  [v4 setAlwaysDisplayPreviewItemTitle:1];

  return v4;
}

Swift::Void __swiftcall DOCPreviewController.viewWillAppear(_:)(Swift::Bool a1)
{
  id v2 = v1;
  v6.receiver = v2;
  v6.super_class = (Class)type metadata accessor for DOCPreviewController();
  [super viewWillAppear:a1];
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
  swift_release();
  swift_release();
  id v5 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation];
  *(void *)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = v4;

  sub_10052D6E0();
}

void sub_10052CE14()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCFileEntity();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    double v15 = (unsigned char *)(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
    swift_beginAccess();
    if (*v15 == 1 && [v14 currentPreviewItem])
    {
      self;
      uint64_t v16 = (void *)swift_dynamicCastObjCClass();
      if (v16 && (id v17 = [v16 fpItem]) != 0)
      {
        uint64_t v18 = v17;
        type metadata accessor for DOCUserActivityController();
        swift_allocObject();
        uint64_t v27 = v7;
        swift_unknownObjectWeakInit();
        swift_retain();
        dispatch thunk of static DOCUserActivityController.userActivityFor(item:completion:)();
        swift_release_n();
        id v28 = v18;
        sub_100162CCC(v28, (uint64_t)v12);
        uint64_t v19 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
        sub_1001173A0((uint64_t)v12, (uint64_t)v9);
        type metadata accessor for MainActor();
        id v20 = v14;
        uint64_t v21 = static MainActor.shared.getter();
        unint64_t v22 = (*(unsigned __int8 *)(v27 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
        BOOL v23 = (void *)swift_allocObject();
        v23[2] = v21;
        v23[3] = &protocol witness table for MainActor;
        v23[4] = v20;
        sub_100142DFC((uint64_t)v9, (uint64_t)v23 + v22);
        sub_10003D154((uint64_t)v5, (uint64_t)&unk_10071B640, (uint64_t)v23);

        swift_release();
        swift_unknownObjectRelease();
        sub_100117404((uint64_t)v12);
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    sub_10052E6E4();
    uint64_t v24 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v2, 1, 1, v24);
    uint64_t v25 = (uint64_t)v14 + OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL;
    swift_beginAccess();
    sub_10014B834((uint64_t)v2, v25);
    swift_endAccess();
  }
}

uint64_t sub_10052D21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for DOCFileEntity();
  v5[5] = swift_task_alloc();
  sub_1000CBE70((uint64_t *)&unk_10070C630);
  v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10052D314, v7, v6);
}

id sub_10052D314()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  id result = [v1 view];
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = v0[6];
    sub_1001173A0(v0[3], v0[5]);
    sub_1000BAF6C(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
    EntityIdentifier.init<A>(for:)();
    uint64_t v5 = type metadata accessor for EntityIdentifier();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    UIView.appEntityIdentifier.setter();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall DOCPreviewController.viewDidAppear(_:)(Swift::Bool a1)
{
  uint64_t v3 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (objc_class *)type metadata accessor for DOCPreviewController();
  v10.receiver = v1;
  v10.super_class = v6;
  [super viewDidAppear:a1];
  sub_10052E6E4();
  uint64_t v7 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = (uint64_t)v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL;
  swift_beginAccess();
  sub_10014B834((uint64_t)v5, v8);
  swift_endAccess();
}

void sub_10052D6E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = &unk_10071B608;
  *(void *)(v3 + 24) = v2;
  id v4 = objc_allocWithZone((Class)type metadata accessor for UIAppIntentInteraction());
  sub_100421058();
  uint64_t v5 = UIAppIntentInteraction.init<A>(intent:perform:)();
  uint64_t v6 = OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction;
  uint64_t v7 = *(void **)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction];
  *(void *)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = v5;

  uint64_t v8 = *(void **)&v1[v6];
  if (v8)
  {
    id v9 = v8;
    id v10 = [v1 view];
    if (v10)
    {
      id v11 = v10;
      [v10 addInteraction:v9];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10052D824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  void v3[5] = a1;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10052D8C0, v5, v4);
}

id sub_10052D8C0()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong currentPreviewItemIndex];
    id result = (id)IntentParameter.wrappedValue.getter();
    if (*(unsigned char *)(v0 + 72))
    {
      id result = [v2 numberOfPreviewItems];
      if (__OFADD__(v3, 1))
      {
        __break(1u);
      }
      else if (!__OFSUB__(result, 1))
      {
        if ((uint64_t)result - 1 >= (uint64_t)v3 + 1) {
          uint64_t v5 = (uint64_t)v3 + 1;
        }
        else {
          uint64_t v5 = (uint64_t)result - 1;
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    else if (!__OFSUB__(v3, 1))
    {
      uint64_t v5 = ((uint64_t)v3 - 1) & ~(((uint64_t)v3 - 1) >> 63);
LABEL_11:
      [v2 setCurrentPreviewItemIndex:v5];
      if (v3 != [v2 currentPreviewItemIndex]) {
        [v2 refreshCurrentPreviewItem];
      }
      uint64_t v8 = *(uint64_t **)(v0 + 40);
      v8[3] = sub_1000CBE70(&qword_10071B630);
      v8[4] = sub_100073DF0(&qword_100712F60, &qword_10071B630);
      sub_100052C70(v8);
      static IntentResult.result<>()();

      uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_14;
    }
    __break(1u);
    return result;
  }
  sub_10026B408();
  swift_allocError();
  unsigned char *v6 = 2;
  swift_willThrow();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
LABEL_14:
  return (id)v7();
}

uint64_t sub_10052DA90(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_10000CB70;
  return v8(a1, v5);
}

id DOCPreviewController.modalPresentationStyle.setter(uint64_t a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for DOCPreviewController();
  return [super setModalPresentationStyle:a1];
}

Swift::Void __swiftcall DOCPreviewController.viewWillDisappear(_:)(Swift::Bool a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (objc_class *)type metadata accessor for DOCPreviewController();
  v22.receiver = v2;
  v22.super_class = v8;
  [super viewWillDisappear:a1];
  [self cancelPreviousPerformRequestsWithTarget:v2 selector:"reallyBecomeCurrent:" object:0];
  uint64_t v9 = (void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity];
  swift_beginAccess();
  id v10 = *v9;
  *uint64_t v9 = 0;
  [v10 resignCurrent];

  id v11 = &v2[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity];
  swift_beginAccess();
  *id v11 = 0;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation];
  *(void *)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;

  sub_10048FF1C();
  static Logger.UI.getter();
  Swift::String v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    double v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)double v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[Interaction] Clearing last opened item in 'viewWillDisappear' (QL dismissing)", v15, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v16 = (id *)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration];
  swift_beginAccess();
  if (*v16)
  {
    NSString v17 = [*v16 sceneIdentifier];
    if (v17)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    NSString v17 = 0;
  }
  uint64_t v18 = (char *)_s5Files21DOCInteractionManagerC06sharedC03forACSo8NSStringCSg_tFZ_0(v17);

  uint64_t v19 = (void **)&v18[OBJC_IVAR____TtC5Files21DOCInteractionManager_lastOpenedItem];
  swift_beginAccess();
  id v20 = *v19;
  *uint64_t v19 = 0;
  sub_1000D7C50(v20);
}

void sub_10052DF3C()
{
  id v1 = [v0 childViewControllers];
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v2 >> 62))
  {
    if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v3 = *(id *)(v2 + 32);
  }
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5) {

  }
  [v5 topViewController];
}

uint64_t DOCPreviewController.publishesUserActivity.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
  swift_beginAccess();
  return *v1;
}

uint64_t DOCPreviewController.publishesUserActivity.setter(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*DOCPreviewController.publishesUserActivity.modify())()
{
  return j_j__swift_endAccess;
}

void *DOCPreviewController.currentUserActivity.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
  swift_beginAccess();
  unint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void DOCPreviewController.currentUserActivity.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
  id v5 = a1;
  [v4 resignCurrent];
}

void (*DOCPreviewController.currentUserActivity.modify(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity;
  v3[4] = v1;
  void v3[5] = v4;
  id v5 = (void **)(v1 + v4);
  swift_beginAccess();
  uint64_t v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_10052E2B4;
}

void sub_10052E2B4(uint64_t a1, char a2)
{
  unint64_t v2 = *(void **)a1;
  uint64_t v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  uint64_t v6 = *(void *)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 40);
  id v7 = *(void **)(v6 + v5);
  *(void *)(v6 + v5) = *v4;
  if (a2)
  {
    id v8 = v3;
    [v7 resignCurrent];

    id v7 = *v4;
  }
  else
  {
    id v9 = v3;
    [v7 resignCurrent];
  }

  free(v2);
}

void sub_10052E35C(void *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  *(void *)(v4 + 24) = a1;
  v7[4] = sub_100534110;
  uint64_t v7[5] = v4;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  void v7[2] = sub_1000666D8;
  v7[3] = &unk_1006B5700;
  uint64_t v5 = _Block_copy(v7);
  id v6 = a1;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v5);
}

void sub_10052E434(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = (void **)(Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
    swift_beginAccess();
    id v6 = *v5;
    *uint64_t v5 = a2;
    id v7 = a2;
    [v6 resignCurrent];

    _s5Files20DOCPreviewControllerC25makeHostedActivityCurrentyyF_0();
  }
}

id _s5Files20DOCPreviewControllerC25makeHostedActivityCurrentyyF_0()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v1 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithSuiteName:v2];

  double v4 = 5.0;
  if (v3)
  {
    if ([v3 valueForKey:DOCUserDefaultsKeyActivityDelay])
    {
      _bridgeAnyObjectToAny(_:)();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v7, 0, sizeof(v7));
    }
    sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_100705D60);
    if (v9)
    {
      if (swift_dynamicCast())
      {
        if (v6 < 0.0) {
          double v4 = 5.0;
        }
        else {
          double v4 = v6;
        }
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_100705D60);
    }
  }
  [self cancelPreviousPerformRequestsWithTarget:v0 selector:"reallyBecomeCurrent:" object:0];
  return [v0 performSelector:"reallyBecomeCurrent:" withObject:0 afterDelay:v4];
}

void sub_10052E6E4()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  double v6 = (char *)&v16 - v5;
  sub_10052DF3C();
  if (v7)
  {
    id v8 = v7;
    static Logger.Rename.getter();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v17 = v0;
      *(_DWORD *)id v11 = 136315138;
      uint64_t v18 = sub_10009B0E4(0xD000000000000015, 0x80000001005FEEC0, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s: Resetting rename delegate to discard any rename operation", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v17);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
    }
    id v15 = [v8 navigationItem];
    UINavigationItem.renameDelegate.setter();
    sub_1000BAF6C(&qword_10071B5F8, (void (*)(uint64_t))type metadata accessor for DOCPreviewController);
    swift_unknownObjectRetain();
    UINavigationItem.renameDelegate.setter();
  }
  else
  {
    static Logger.Rename.getter();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v14 = 136315138;
      uint64_t v18 = sub_10009B0E4(0xD000000000000015, 0x80000001005FEEC0, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: Could not reset rename delegate", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

Swift::Int __swiftcall DOCPreviewController.numberOfPreviewItems(in:)(QLPreviewController in)
{
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  int v3 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v3 == 255) {
    return 0;
  }
  unint64_t v4 = *v2;
  if (v3) {
    return *(void *)(v4 + 16);
  }
  if (!(v4 >> 62)) {
    return *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  double v6 = (void *)v2[1];
  sub_10039E1B8(*v2, v6, 0);
  Swift::Int v7 = _CocoaArrayWrapper.endIndex.getter();
  sub_10039E204(v4, v6, v3);
  return v7;
}

id DOCPreviewController.previewController(_:previewItemAt:)(uint64_t a1, unint64_t a2)
{
  int v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  int v4 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v4 == 255)
  {
    id v12 = objc_allocWithZone((Class)QLItem);
    return [v12 init];
  }
  else
  {
    uint64_t v7 = *v3;
    double v6 = (void *)v3[1];
    sub_10039E1B8(*v3, v6, v4 & 1);
    sub_10052A44C(a2, v7, v8, v4 & 1);
    uint64_t v10 = v9;
    sub_10039E204(v7, v6, v4);
    return (id)v10;
  }
}

uint64_t DOCPreviewController.previewController(_:editingModeFor:)()
{
  return sub_100532914();
}

BOOL DOCPreviewController.previewController(_:shouldAllowKeyCommand:)(uint64_t a1, uint64_t a2)
{
  return (unint64_t)(a2 - 4) < 0xFFFFFFFFFFFFFFFELL;
}

void DOCPreviewController.previewController(_:willSaveEditedItem:)(uint64_t a1, void *a2)
{
}

void DOCPreviewController.previewController(_:didSaveEditedCopyOf:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_10052EF18(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  LODWORD(v77) = a4;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v68 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v69 = (char *)&v66 - v9;
  __chkstk_darwin(v10);
  unsigned int v74 = (char *)&v66 - v11;
  uint64_t v12 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v12);
  unint64_t v67 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v66 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v66 - v18;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = (void *)result;
    uint64_t v72 = v6;
    objc_super v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v22(v19, 1, 1, v5);
    uint64_t v71 = swift_allocBox();
    uint64_t v24 = v23;
    uint64_t v73 = v5;
    v22(v23, 1, 1, v5);
    id v25 = [objc_allocWithZone((Class)NSFileCoordinator) init];
    URL._bridgeToObjectiveC()(v26);
    id v28 = v27;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v21;
    *(void *)(v29 + 24) = a3;
    *(void *)(v29 + 32) = v24;
    *(void *)(v29 + 40) = v19;
    uint64_t v76 = v19;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_100533730;
    *(void *)(v30 + 24) = v29;
    uint64_t v70 = v29;
    Swift::String v82 = sub_100363E10;
    uint64_t v83 = v30;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v79 = 1107296256;
    Swift::String v80 = sub_100529C50;
    unint64_t v81 = &unk_1006B5458;
    unint64_t v31 = _Block_copy(&aBlock);
    uint64_t v75 = v21;
    id v32 = a3;
    swift_retain();
    swift_release();
    uint64_t aBlock = 0;
    [v25 coordinateReadingItemAtURL:v28 options:1 error:&aBlock byAccessor:v31];
    _Block_release(v31);

    uint64_t v33 = aBlock;
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v29)
    {
      __break(1u);
    }
    else
    {
      uint64_t v34 = v32;
      if (v77) {
        URL.stopAccessingSecurityScopedResource()();
      }
      uint64_t v36 = v72;
      uint64_t v35 = v73;
      if (v33)
      {
        uint64_t v37 = v33;
        unint64_t v38 = (void *)static DOCLog.UI.getter();
        static os_log_type_t.error.getter();
        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_10059B760;
        URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
        uint64_t v41 = v40;
        *(void *)(v39 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
        *(void *)(v39 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
        *(void *)(v39 + 32) = v41;
        *(void *)(v39 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
        *(void *)(v39 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
        *(void *)(v39 + 72) = v37;
        unint64_t v42 = v37;
        os_log(_:dso:log:type:_:)();
        swift_release();

        swift_bridgeObjectRelease();
LABEL_12:
        sub_1000CBBA4((uint64_t)v76, &qword_1007076B0);
        return swift_release();
      }
      sub_1000CBC00((uint64_t)v76, (uint64_t)v16, &qword_1007076B0);
      char v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      if (v43(v16, 1, v35) == 1)
      {

        sub_1000CBBA4((uint64_t)v16, &qword_1007076B0);
LABEL_11:
        swift_release();
        goto LABEL_12;
      }
      id v77 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
      v77(v74, v16, v35);
      char v44 = &v75[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
      swift_beginAccess();
      uint64_t v45 = (uint64_t)v44;
      uint64_t v46 = (uint64_t)v67;
      sub_1000CBC00(v45, (uint64_t)v67, &qword_1007076B0);
      if (v43((char *)v46, 1, v35) == 1)
      {
        sub_1000CBBA4(v46, &qword_1007076B0);
        uint64_t v47 = swift_allocObject();
        swift_unknownObjectWeakInit();
        int v48 = v68;
        (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v68, v74, v35);
        unint64_t v49 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        unint64_t v50 = (v7 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v47;
        v77((char *)(v51 + v49), v48, v35);
        *(void *)(v51 + v50) = v34;
        *(void *)(v51 + ((v50 + 15) & 0xFFFFFFFFFFFFFFF8)) = v71;
        Swift::String v82 = sub_100533844;
        uint64_t v83 = v51;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v79 = 1107296256;
        Swift::String v80 = sub_1000666D8;
        unint64_t v81 = &unk_1006B54A8;
        unsigned __int8 v52 = _Block_copy(&aBlock);
        id v53 = v34;
        swift_retain();
        swift_release();
        DOCRunInMainThread();
        _Block_release(v52);

        (*(void (**)(char *, uint64_t))(v36 + 8))(v74, v35);
        goto LABEL_11;
      }
      id v54 = v69;
      uint64_t v55 = (void (*)(unint64_t, char *, uint64_t))v77;
      v77(v69, (char *)v46, v35);
      unint64_t v67 = (char *)[objc_allocWithZone((Class)NSFileCoordinator) init];
      URL._bridgeToObjectiveC()(&v84);
      uint64_t v66 = v56;
      NSString v57 = v68;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v68, v54, v35);
      unint64_t v58 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v59 = swift_allocObject();
      v55(v59 + v58, v57, v35);
      uint64_t v60 = swift_allocObject();
      *(void *)(v60 + 16) = sub_100533970;
      *(void *)(v60 + 24) = v59;
      Swift::String v82 = sub_100363E38;
      uint64_t v83 = v60;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v79 = 1107296256;
      Swift::String v80 = sub_100529C50;
      unint64_t v81 = &unk_1006B5520;
      unint64_t v61 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t aBlock = 0;
      id v62 = v67;
      unint64_t v63 = v66;
      [v67 coordinateReadingItemAtURL:v66 options:1 error:&aBlock byAccessor:v61];
      _Block_release(v61);

      unint64_t v64 = *(void (**)(char *, uint64_t))(v36 + 8);
      v64(v69, v35);
      v64(v74, v35);
      unint64_t v65 = aBlock;
      LOBYTE(v62) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v62 & 1) == 0)
      {
        sub_1000CBBA4((uint64_t)v76, &qword_1007076B0);
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10052F8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a5;
  uint64_t v39 = a4;
  uint64_t v40 = a1;
  uint64_t v45 = a3;
  uint64_t v5 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v5);
  uint64_t v41 = (uint64_t)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v43 = (char *)&v36 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v38 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v37 = (char *)&v36 - v16;
  __chkstk_darwin(v17);
  char v44 = (char *)&v36 - v18;
  dispatch_semaphore_t v19 = dispatch_semaphore_create(0);
  uint64_t v20 = swift_allocBox();
  uint64_t v22 = v21;
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v36(v21, 1, 1, v12);
  id v23 = [self defaultManager];
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v19;
  *(void *)(v24 + 24) = v20;
  aBlock[4] = sub_100533BA4;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  void aBlock[3] = &unk_1006B55E8;
  id v25 = _Block_copy(aBlock);
  uint64_t v26 = v19;
  swift_retain();
  swift_release();
  [v23 fetchURLForItem:v45 completionHandler:v25];
  _Block_release(v25);

  OS_dispatch_semaphore.wait()();
  swift_beginAccess();
  sub_1000CBC00(v22, (uint64_t)v11, &qword_1007076B0);
  swift_release();
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v27(v11, 1, v12) == 1) {
    return sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
  }
  id v28 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v29 = v44;
  v28(v44, v11, v12);
  uint64_t v11 = v43;
  sub_10053076C((uint64_t)v43);
  if (v27(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v12);
    return sub_1000CBBA4((uint64_t)v11, &qword_1007076B0);
  }
  unint64_t v31 = v37;
  v28(v37, v11, v12);
  uint64_t v32 = v39;
  sub_1000CBBA4(v39, &qword_1007076B0);
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v32, v31, v12);
  v36(v32, 0, 1, v12);
  URL.lastPathComponent.getter();
  uint64_t v33 = (uint64_t)v38;
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  uint64_t v34 = v41;
  sub_100530A3C(v33, v41);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v35(v33, v12);
  v35((uint64_t)v31, v12);
  v35((uint64_t)v29, v12);
  return sub_10014B834(v34, v42);
}

void sub_10052FD94()
{
  uint64_t v0 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v3 = URL.startAccessingSecurityScopedResource()();
  id v4 = [self defaultManager];
  NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)();
  sub_1000CBBA4((uint64_t)v2, &qword_1007076B0);

  if (v3) {
    URL.stopAccessingSecurityScopedResource()();
  }
}

void sub_10052FF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = Strong + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate;
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v10 = *(void *)(v9 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v11 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = v11;
      *(void *)(v12 + 24) = a4;
      uint64_t v13 = *(void (**)(void *, uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v10 + 8);
      swift_retain();
      swift_retain();
      v13(v8, a2, a3, sub_100533A30, v12, ObjectType, v10);
      swift_release();
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_1005300D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v27 = (char *)&v26 - v7;
  uint64_t v8 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = swift_projectBox();
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    sub_1000CBC00(a1, (uint64_t)v13, &qword_1007076B0);
    uint64_t v17 = (uint64_t)v16 + OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL;
    swift_beginAccess();
    sub_10014B834((uint64_t)v13, v17);
    swift_endAccess();
    swift_beginAccess();
    sub_1000CBC00(v14, (uint64_t)v10, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
    {

      return sub_1000CBBA4((uint64_t)v10, &qword_1007076B0);
    }
    else
    {
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
      dispatch_semaphore_t v19 = v27;
      v18(v27, v10, v2);
      id v20 = [objc_allocWithZone((Class)NSOperationQueue) init];
      [v20 setMaxConcurrentOperationCount:8];
      NSString v21 = String._bridgeToObjectiveC()();
      [v20 setName:v21];

      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v19, v2);
      unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v16;
      v18((char *)(v23 + v22), v5, v2);
      aBlock[4] = sub_100533B04;
      aBlock[5] = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B5598;
      uint64_t v24 = _Block_copy(aBlock);
      id v25 = v16;
      swift_release();
      [v20 addOperationWithBlock:v24];
      _Block_release(v24);

      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v19, v2);
    }
  }
  return result;
}

Swift::Void __swiftcall DOCPreviewController.previewControllerWillDismiss(_:)(QLPreviewController a1)
{
  uint64_t v2 = v1 + OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
    swift_unknownObjectRelease();
  }
}

Swift::Int sub_10053070C(uint64_t a1)
{
  uint64_t v2 = swift_projectBox();
  swift_beginAccess();
  sub_100533BAC(a1, v2);
  return OS_dispatch_semaphore.signal()();
}

void sub_10053076C(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v5 = URL.startAccessingSecurityScopedResource()();
  id v6 = [self defaultManager];
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  id v20 = 0;
  id v10 = [v6 URLForDirectory:99 inDomain:1 appropriateForURL:v8 create:1 error:&v20];

  id v11 = v20;
  if (v10)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    id v12 = v11;

    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 0, 1, v13);
    sub_1000CBE0C((uint64_t)v4, a1, &qword_1007076B0);
    if (!v5) {
      return;
    }
  }
  else
  {
    id v14 = v20;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v15 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1005A0030;
    uint64_t v17 = _convertErrorToNSError(_:)();
    *(void *)(v16 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v16 + 64) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v16 + 32) = v17;
    os_log(_:dso:log:type:_:)();
    swift_errorRelease();

    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
    if (!v5) {
      return;
    }
  }
  URL.stopAccessingSecurityScopedResource()();
}

id sub_100530A3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  id v4 = [self defaultManager];
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  URL._bridgeToObjectiveC()(v8);
  id v10 = v9;
  id v27 = 0;
  unsigned int v11 = [v4 copyItemAtURL:v7 toURL:v9 error:&v27];

  id v26 = v27;
  if (v11)
  {
    uint64_t v12 = type metadata accessor for URL();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a1, v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a2, 0, 1, v12);
    return v26;
  }
  else
  {
    id v15 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v16 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1005A0230;
    URL._bridgeToObjectiveC()((NSURL *)&unk_1005A0000);
    uint64_t v19 = v18;
    uint64_t v20 = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v17 + 56) = v20;
    uint64_t v21 = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v17 + 64) = v21;
    *(void *)(v17 + 32) = v19;
    URL._bridgeToObjectiveC()(v22);
    *(void *)(v17 + 96) = v20;
    *(void *)(v17 + 104) = v21;
    *(void *)(v17 + 72) = v23;
    uint64_t v24 = _convertErrorToNSError(_:)();
    *(void *)(v17 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v17 + 144) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v17 + 112) = v24;
    os_log(_:dso:log:type:_:)();
    swift_errorRelease();

    swift_bridgeObjectRelease();
    uint64_t v25 = type metadata accessor for URL();
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
}

void *DOCPreviewController.previewController(_:transitionViewFor:)()
{
  return sub_100533020();
}

void sub_100530D98(void *a1, uint64_t a2)
{
  swift_beginAccess();
  id v4 = *(void **)(a2 + 16);
  *(void *)(a2 + 16) = a1;
  id v5 = a1;
}

void DOCPreviewController.init(previewItems:)()
{
}

void DOCPreviewController.init(nibName:bundle:)()
{
}

void sub_100530F78()
{
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate);
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate);
  swift_unknownObjectWeakDestroy();

  sub_10039E204(*(void *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source), *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 8), *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16));
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL, &qword_1007076B0);
  sub_10003A094(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider);

  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity);
}

id DOCPreviewController.__deallocating_deinit()
{
  return sub_100531094(0, type metadata accessor for DOCPreviewController);
}

id sub_100531094(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

void (*sub_1005311DC(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = DOCPreviewController.currentUserActivity.modify(v2);
  return sub_10040493C;
}

Swift::Void __swiftcall DOCPreviewController.navigationItem(_:didEndRenamingWith:)(UINavigationItem _, Swift::String didEndRenamingWith)
{
}

uint64_t DOCPreviewController.navigationItem(_:willBeginRenamingWith:selectedRange:)(uint64_t a1, uint64_t a2)
{
  return sub_100533394(a2);
}

void sub_100531254(uint64_t a1)
{
  if (sub_10048DF9C(FPActionRename))
  {
    sub_10052DF3C();
    if (v2)
    {
      uint64_t v3 = v2;
      id v4 = [v2 navigationController];

      if (v4)
      {
        [v4 rename:a1];
      }
    }
  }
}

void DOCDocumentManager.previewController(_:wantsToRevealItem:)(uint64_t a1, void *a2)
{
}

void sub_100531300(char a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    static Logger.UI.getter();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Move Previewed Item: unable to reveal item, since effective browser view controller can't be obtained", v8, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_10053143C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v63 = a7;
  unint64_t v64 = a4;
  id v61 = a6;
  uint64_t v10 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v56 - v14;
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  __chkstk_darwin(v16);
  id v62 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v56 - v20;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v23 = (void *)Strong;
  sub_1000CBC00(a1, (uint64_t)v15, &qword_1007076B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {

    sub_1000CBBA4((uint64_t)v15, &qword_1007076B0);
LABEL_6:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v12, 1, 1, v16);
    v64(v12);
    return (id)sub_1000CBBA4((uint64_t)v12, &qword_1007076B0);
  }
  uint64_t v24 = v15;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v25(v21, v24, v16);
  if (a2)
  {

    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    goto LABEL_6;
  }
  uint64_t v59 = v25;
  uint64_t v60 = v17 + 32;
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    id v27 = result;
    v67._uint64_t object = (void *)0x80000001005FEEE0;
    v28._uint64_t countAndFlagsBits = 0x79706F63204025;
    v28._uint64_t object = (void *)0xE700000000000000;
    v29._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v29._uint64_t object = (void *)0xEB00000000656C62;
    v30._uint64_t countAndFlagsBits = 0;
    v30._uint64_t object = (void *)0xE000000000000000;
    v67._uint64_t countAndFlagsBits = 0xD000000000000024;
    Swift::String v31 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v67);
    uint64_t object = (uint64_t)v31._object;
    uint64_t countAndFlagsBits = v31._countAndFlagsBits;

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
    id v33 = [v61 displayName];
    uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v36 = v35;

    *(void *)(v32 + 56) = &type metadata for String;
    *(void *)(v32 + 64) = sub_100073F48();
    *(void *)(v32 + 32) = v34;
    *(void *)(v32 + 40) = v36;
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v65 = (void *)v37;
    uint64_t v66 = v39;
    v40._uint64_t countAndFlagsBits = 46;
    v40._uint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v40);
    uint64_t v41 = v63;
    v42._uint64_t countAndFlagsBits = URL.pathExtension.getter();
    String.append(_:)(v42);
    swift_bridgeObjectRelease();
    id v61 = v65;
    uint64_t countAndFlagsBits = v66;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v64;
    *(void *)(v43 + 24) = a5;
    uint64_t v44 = v43;
    uint64_t object = v43;
    uint64_t v45 = self;
    swift_retain();
    unint64_t v64 = (void (*)(char *))[v45 defaultManager];
    uint64_t v46 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v62, v41, v16);
    unint64_t v47 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v48 = (v18 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v50 = (char *)swift_allocObject();
    *((void *)v50 + 2) = sub_100363E10;
    *((void *)v50 + 3) = v44;
    uint64_t v51 = v64;
    *((void *)v50 + 4) = v64;
    *((void *)v50 + 5) = v23;
    v59(&v50[v47], v46, v16);
    unsigned __int8 v52 = &v50[v48];
    uint64_t v53 = countAndFlagsBits;
    *(void *)unsigned __int8 v52 = v61;
    *((void *)v52 + 1) = v53;
    *(void *)&v50[v49] = 2;
    swift_retain();
    id v54 = v51;
    id v55 = v23;
    swift_bridgeObjectRetain();
    FPItemManager.doc_fetchItem(for:completionHandler:)();
    swift_bridgeObjectRelease();
    swift_release();

    swift_release();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_100531984(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      os_log_type_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [a2 dataOwnerStateForNode:v6];

      BOOL v11 = v9 == (id)1;
      BOOL v10 = v9 == (id)1;
      ++v5;
      BOOL v11 = v11 || v8 == v4;
      if (v11) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  BOOL v10 = 0;
LABEL_17:
  swift_bridgeObjectRelease();
  return v10;
}

id _s5Files20DOCPreviewControllerC06sharedC03forACSgSo8NSStringCSg_tFZ_0(void *a1)
{
  if (a1)
  {
    uint64_t v1 = qword_1007052D8;
    id v2 = a1;
    if (v1 != -1) {
      swift_once();
    }
    uint64_t v3 = (void *)qword_10071B4C0;
    id v4 = [(id)qword_10071B4C0 objectForKey:v2];
    if (v4)
    {
      id v5 = v4;
    }
    else
    {
      id v7 = objc_allocWithZone((Class)type metadata accessor for DOCPreviewController());
      id v5 = DOCPreviewController.init()();
      [v3 setObject:v5 forKey:v2];
    }
  }
  else
  {
    id v6 = (void *)static DOCLog.Source.getter();
    static os_log_type_t.debug.getter();
    os_log(_:dso:log:type:_:)();

    return 0;
  }
  return v5;
}

void sub_100531B9C(void *a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v34 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  BOOL v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for UTType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v33 - v16;
  self;
  uint64_t v18 = swift_dynamicCastObjCClass();
  id v33 = v10;
  if (v18)
  {
    uint64_t v19 = (void *)v18;
    swift_unknownObjectRetain();
    id v20 = [v19 fpItem];
    if (v20)
    {
      uint64_t v21 = v20;
      if ([v20 isWritable])
      {
        id v22 = [v21 contentType];
        static UTType._unconditionallyBridgeFromObjectiveC(_:)();

        static UTType.movie.getter();
        LOBYTE(v22) = UTType.conforms(to:)();

        swift_unknownObjectRelease();
        uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
        v23(v14, v11);
        v23(v17, v11);
        if (v22) {
          return;
        }
        goto LABEL_9;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  if (QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions != 1) {
    return;
  }
LABEL_9:
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    swift_unknownObjectRetain();
    id v26 = [v25 fpItem];
    if (v26)
    {
      id v27 = v26;
      FPItem.bumpLastOpenDate(delay:)(0.0);
      swift_unknownObjectRelease();

      return;
    }
    swift_unknownObjectRelease();
  }
  id v28 = [a1 previewItemURL:v33];
  if (v28)
  {
    Swift::String v29 = v28;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = v34;
    Swift::String v31 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v31(v4, v7, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v4, 1, v5) != 1)
    {
      uint64_t v32 = v33;
      v31(v33, v4, v5);
      URL.bumpLastOpenDate(delay:completionHandler:)();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v4, 1, 1, v5);
  }
  sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
}

void sub_100531FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = v11;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_10053426C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001B6B50;
  void aBlock[3] = &unk_1006B57C8;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_release();
  [a2 fetchURL:v14];
  _Block_release(v14);
}

uint64_t type metadata accessor for DOCQLItemsPreviewController()
{
  return self;
}

uint64_t type metadata accessor for DOCPreviewController()
{
  uint64_t result = qword_10071B5E0;
  if (!qword_10071B5E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10053224C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10053228C(unint64_t a1, uint64_t a2)
{
  sub_10048F7A8(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

id sub_100532294@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 currentPreviewItemIndex];
  *a2 = result;
  return result;
}

id sub_1005322C8(void *a1, id *a2)
{
  return [*a2 setCurrentPreviewItemIndex:*a1];
}

void sub_1005322DC()
{
}

void sub_1005322E4(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v12 = (void *)Strong;
    DOCFullDocumentManagerViewController.reveal(item:showEnclosingFolder:completionBlock:)(a1, 1, (uint64_t)sub_100531300, 0);
    id v7 = v12;
  }
  else
  {
    static Logger.UI.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Move Previewed Item: unable to reveal item, since effective browser view controller can't be obtained", v10, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_100532498()
{
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_editingDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_visibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_configuration] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_duplicatedNodeSubscriber] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_source];
  *(void *)uint64_t v1 = 0;
  *((void *)v1 + 1) = 0;
  v1[16] = -1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC5Files20DOCPreviewController_importedURL];
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_observation] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_linkNavigateInteraction] = 0;
  v0[OBJC_IVAR____TtC5Files20DOCPreviewController_publishesUserActivity] = 0;
  *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10053261C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - v10;
  unint64_t v12 = (id *)&v1[OBJC_IVAR____TtC5Files20DOCPreviewController_currentUserActivity];
  swift_beginAccess();
  [*v12 becomeCurrent];
  id v13 = [v1 currentPreviewItem];
  if (v13)
  {
    uint64_t v14 = v13;
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      swift_unknownObjectRetain();
      id v17 = [v16 fpItem];
      if (v17)
      {
        uint64_t v18 = v17;
        FPItem.bumpLastOpenDate(delay:)(0.0);
        swift_unknownObjectRelease_n();

        return;
      }
      swift_unknownObjectRelease();
    }
    id v19 = [v14 previewItemURL];
    if (v19)
    {
      id v20 = v19;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v21(v4, v8, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
      {
        v21(v11, v4, v5);
        URL.bumpLastOpenDate(delay:completionHandler:)();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
LABEL_11:
        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    }
    sub_1000CBBA4((uint64_t)v4, &qword_1007076B0);
    goto LABEL_11;
  }
}

uint64_t sub_100532914()
{
  uint64_t v0 = type metadata accessor for UTType();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - v5;
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();
  if (!v7) {
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  uint64_t v8 = (void *)v7;
  swift_unknownObjectRetain();
  id v9 = [v8 fpItem];
  if (!v9)
  {
    swift_unknownObjectRelease();
    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  uint64_t v10 = v9;
  if (([v9 isWritable] & 1) == 0)
  {
    swift_unknownObjectRelease();

    return QLPreviewItemEditingModeCreateCopyAndDisplayDismissActions;
  }
  id v11 = [v10 contentType];
  static UTType._unconditionallyBridgeFromObjectiveC(_:)();

  static UTType.movie.getter();
  LOBYTE(v11) = UTType.conforms(to:)();

  swift_unknownObjectRelease();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
  v12(v3, v0);
  v12(v6, v0);
  if (v11) {
    return 2;
  }
  else {
    return 1;
  }
}

void sub_100532AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    swift_unknownObjectRetain();
    id v8 = [v7 fpItem];
    if (v8)
    {
      id v9 = v8;
      BOOL v19 = URL.startAccessingSecurityScopedResource()();
      id v10 = [objc_allocWithZone((Class)NSOperationQueue) init];
      [v10 setMaxConcurrentOperationCount:8];
      NSString v11 = String._bridgeToObjectiveC()();
      [v10 setName:v11];

      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(&v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], a2, v3);
      unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v12;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v4 + 32))(v14 + v13, &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], v3);
      unint64_t v15 = v14 + ((v5 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
      *(void *)unint64_t v15 = v9;
      *(unsigned char *)(v15 + 8) = v19;
      aBlock[4] = sub_10039E120;
      aBlock[5] = v14;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B5660;
      uint64_t v16 = _Block_copy(aBlock);
      id v17 = v9;
      swift_release();
      [v10 addOperationWithBlock:v16];
      _Block_release(v16);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
}

id sub_100532DE8()
{
  id v0 = [self defaultManager];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  id v13 = 0;
  unsigned int v4 = [v0 removeItemAtURL:v2 error:&v13];

  id v5 = v13;
  if (v4)
  {
    return v5;
  }
  else
  {
    id v7 = v13;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v8 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_10059B760;
    URL._bridgeToObjectiveC()((NSURL *)&off_10059B000);
    uint64_t v11 = v10;
    *(void *)(v9 + 56) = sub_10009E6C4(0, (unint64_t *)&qword_100707EE0);
    *(void *)(v9 + 64) = sub_1000C5A24((unint64_t *)&qword_10070ACD0, (unint64_t *)&qword_100707EE0);
    *(void *)(v9 + 32) = v11;
    uint64_t v12 = _convertErrorToNSError(_:)();
    *(void *)(v9 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v9 + 104) = sub_1000C5A24((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v9 + 72) = v12;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return (id)swift_errorRelease();
  }
}

void *sub_100533020()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (!v1) {
    return 0;
  }
  uint64_t v2 = (void *)v1;
  swift_unknownObjectRetain();
  id v3 = [v2 fpItem];
  if (!v3)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  unsigned int v4 = v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  uint64_t v6 = v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_transitioningProvider;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v7 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(void (**)(uint64_t, void *, void (*)(void *), uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v9(v0, v4, sub_10039E274, v5, ObjectType, v7);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
  }
  swift_unknownObjectRelease();
  swift_beginAccess();
  uint64_t v10 = *(void **)(v5 + 16);
  id v11 = v10;
  swift_release();
  return v10;
}

void *_s5Files20DOCPreviewControllerC21excludedActivityTypes3forSayypGSo09QLPreviewC0C_tF_0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source);
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files20DOCPreviewController_source + 16);
  if (v2 == 255) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v3 = *v1;
  unsigned int v4 = (void *)v1[1];
  sub_10039E1B8(*v1, v4, v2 & 1);
  if (sub_10052A6F4(v3, v4, v2 & 1))
  {
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000CBE70(&qword_100708BE0);
    uint64_t v5 = (void *)swift_allocObject();
    *((_OWORD *)v5 + 1) = xmmword_1005A0030;
    type metadata accessor for ActivityType(0);
    v5[7] = v6;
    v5[4] = UIActivityTypeCopyToPasteboard;
    uint64_t v7 = UIActivityTypeCopyToPasteboard;
  }
  sub_10039E204(v3, v4, v2);
  return v5;
}

void sub_100533280(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = v2;
  if ([v2 currentPreviewItem])
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
      if (v6)
      {
        sub_10009E6C4(0, (unint64_t *)&unk_10070BD68);
        swift_unknownObjectRetain();
        id v7 = v6;
        char v8 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();

        if (v8) {
          sub_10048E290(a1, a2);
        }
      }
    }
    swift_unknownObjectRelease();
  }
  uint64_t v9 = *(void **)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
  *(void *)&v3[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = 0;
}

uint64_t sub_100533394(uint64_t a1)
{
  int v2 = v1;
  id v4 = [v2 currentPreviewItem];
  if (v4)
  {
    self;
    id v4 = (id)swift_dynamicCastObjCClass();
    if (!v4)
    {
      swift_unknownObjectRelease();
      id v4 = 0;
    }
  }
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
  *(void *)&v2[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = v4;

  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s5Files20DOCPreviewControllerC33navigationItemShouldBeginRenamingySbSo012UINavigationE0CF_0()
{
  char v1 = sub_10048DF9C(FPActionRename);
  if (v1)
  {
    id v2 = [v0 currentPreviewItem];
    if (v2)
    {
      self;
      id v2 = (id)swift_dynamicCastObjCClass();
      if (!v2)
      {
        swift_unknownObjectRelease();
        id v2 = 0;
      }
    }
    unint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed];
    *(void *)&v0[OBJC_IVAR____TtC5Files20DOCPreviewController_itemBeingRenamed] = v2;
  }
  return v1 & 1;
}

void destroy for DOCPreviewSource(uint64_t a1)
{
}

uint64_t _s5Files16DOCPreviewSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10039E1B8(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DOCPreviewSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_10039E1B8(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  id v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10039E21C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DOCPreviewSource(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10039E21C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for DOCPreviewSource()
{
  return &type metadata for DOCPreviewSource;
}

uint64_t sub_100533610()
{
  return type metadata accessor for DOCPreviewController();
}

void sub_100533618()
{
  sub_100009E5C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1005336F0()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100533730(uint64_t a1)
{
  return sub_10052F8E8(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10053373C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10053374C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_100533844()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10052FF68(v4, v0 + v2, v5, v6);
}

uint64_t sub_1005338E0()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100533970()
{
  type metadata accessor for URL();

  sub_10052FD94();
}

uint64_t sub_1005339E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005339F0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100533A30(uint64_t a1)
{
  return sub_1005300D4(a1);
}

uint64_t sub_100533A38()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

id sub_100533B04()
{
  type metadata accessor for URL();

  return sub_100532DE8();
}

uint64_t sub_100533B64()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

Swift::Int sub_100533BA4(uint64_t a1)
{
  return sub_10053070C(a1);
}

uint64_t sub_100533BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100533C14()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 9, v5);
}

uint64_t sub_100533CFC(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_10000CB70;
  return sub_10052D824(a1, a2, v2);
}

uint64_t sub_100533DA8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100533DE0(uint64_t a1, uint64_t *a2)
{
  unint64_t v6 = *(int **)(v2 + 16);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *id v7 = v3;
  v7[1] = sub_1000D1744;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_10071B610 + dword_10071B610);
  return v8(a1, a2, v6);
}

void sub_100533EA8(void *a1)
{
  sub_10052E35C(a1, v1);
}

uint64_t sub_100533EB0()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100533FD4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CB70;
  return sub_10052D21C(a1, v5, v6, v7, v8);
}

uint64_t sub_1005340D0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100534110()
{
  sub_10052E434(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100534118()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100534150()
{
  sub_100531254(*(void *)(v0 + 16));
}

uint64_t sub_100534158()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100534190()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

id sub_10053426C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = (void (*)(char *))v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)v2[5];
  uint64_t v10 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10053143C(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_1005342F4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

char *sub_100534434()
{
  uint64_t v1 = (void *)v0[7];
  if (v1)
  {
    uint64_t v2 = (char *)v0[7];
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = (void *)v0[2];
    unint64_t v5 = v0[6];
    unint64_t v6 = (void *)v3[4];
    uint64_t v7 = (void *)v3[5];
    objc_allocWithZone((Class)type metadata accessor for DOCColumnInfoViewController());
    id v8 = v4;
    swift_bridgeObjectRetain();
    id v9 = v6;
    id v10 = v7;
    uint64_t v11 = sub_10028F344(v8, v5, v6, v7);
    uint64_t v12 = (void *)v3[7];
    v3[7] = v11;
    uint64_t v2 = v11;

    uint64_t v1 = 0;
  }
  id v13 = v1;
  return v2;
}

uint64_t sub_1005344E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  unint64_t v5 = v4;
  v4[7] = 0;
  type metadata accessor for DOCConcreteSelectionLocation();
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    unint64_t v11 = *(void *)(v10 + OBJC_IVAR____TtC5Files28DOCConcreteSelectionLocation_selectedNodes);
    swift_bridgeObjectRetain();
    if (v11 >> 62)
    {
LABEL_9:
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16 < 1) {
        goto LABEL_10;
      }
LABEL_7:
      uint64_t v5[2] = a1;
      v5[3] = a3;
      v5[4] = a2;
      v5[5] = a4;
      v5[6] = v11;
      return (uint64_t)v5;
    }
  }
  else
  {
    id v12 = [a3 node];
    if (v12)
    {
      id v13 = v12;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1005A04F0;
      *(void *)(v14 + 32) = v13;
      unint64_t v24 = v14;
      specialized Array._endMutation()();
      unint64_t v11 = v24;
      if (v24 >> 62) {
        goto LABEL_9;
      }
    }
    else
    {
      unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
        goto LABEL_9;
      }
    }
  }
  if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1) {
    goto LABEL_7;
  }
LABEL_10:
  _StringGuts.grow(_:)(82);
  v17._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  v17._uint64_t object = (void *)0x80000001005FEFA0;
  String.append(_:)(v17);
  id v18 = [a3 description];
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  v22._uint64_t countAndFlagsBits = v19;
  v22._uint64_t object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t object = (void *)0x80000001005FEFE0;
  v23._uint64_t countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v23);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100534710()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCItemInfoContainerDataSource()
{
  return self;
}

char *sub_100534794(uint64_t a1)
{
  if (a1 == 4 || a1 == 1) {
    return sub_100534434();
  }
  else {
    return 0;
  }
}

void *sub_1005347C8(uint64_t a1, uint64_t *a2)
{
  id v55 = a2;
  uint64_t v4 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v63 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DOCOperationItem();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  id v62 = (char *)v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v67 = (char *)v44 - v14;
  uint64_t v48 = sub_1000CBE70((uint64_t *)&unk_100708D70);
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v15 = __chkstk_darwin(v48);
  uint64_t v49 = (uint64_t)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v46 = (char *)v44 - v18;
  __chkstk_darwin(v17);
  uint64_t v45 = (uint64_t)v44 - v19;
  uint64_t v56 = *(void *)(a1 + 16);
  if (!v56) {
    return _swiftEmptyArrayStorage;
  }
  v44[1] = v2;
  uint64_t v61 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v20 = v11 + 56;
  unint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v65 = v11 + 16;
  uint64_t v50 = v11;
  uint64_t v68 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v60 = *(void *)(v7 + 72);
  v44[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v51 = _swiftEmptyArrayStorage;
  Swift::String v22 = v63;
  Swift::String v23 = v67;
  uint64_t v24 = v56;
  uint64_t v53 = v9;
  uint64_t v54 = v6;
  do
  {
    sub_100376A18(v61 + v60 * v21, (uint64_t)v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100376A88((uint64_t)v9);
    }
    else
    {
      uint64_t v25 = &v9[*(int *)(sub_1000CBE70(&qword_100711EA0) + 48)];
      uint64_t v26 = *((void *)v25 + 1);
      uint64_t v57 = *(void *)v25;
      uint64_t v69 = *v70;
      v69(v23, v9, v10);
      uint64_t v59 = v26;
      if (v26)
      {
        uint64_t v27 = *v55;
        uint64_t v28 = *(void *)(*v55 + 16);
        uint64_t v58 = *v55;
        if (v28)
        {
          unint64_t v52 = v20 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
          uint64_t v29 = v27 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
          uint64_t v66 = *(void *)(v50 + 72);
          uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
          swift_bridgeObjectRetain();
          while (1)
          {
            v30(v22, v29, v10);
            Swift::String v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
            (*(void (**)(char *, void, uint64_t, uint64_t))v20)(v22, 0, 1, v10);
            if ((*v64)(v22, 1, v10) == 1) {
              break;
            }
            uint64_t v32 = v20;
            id v33 = v62;
            v69(v62, v22, v10);
            sub_100080268(&qword_100708600, (void (*)(uint64_t))&type metadata accessor for URL);
            char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
            (*v68)(v33, v10);
            if (v34)
            {
              swift_bridgeObjectRelease();
              uint64_t v35 = (uint64_t)v46;
              uint64_t v36 = &v46[*(int *)(v48 + 48)];
              Swift::String v23 = v67;
              v69(v46, v67, v10);
              uint64_t v37 = v59;
              *(void *)uint64_t v36 = v57;
              *((void *)v36 + 1) = v37;
              uint64_t v38 = v45;
              sub_1000CBE0C(v35, v45, (uint64_t *)&unk_100708D70);
              sub_1000CBE0C(v38, v49, (uint64_t *)&unk_100708D70);
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                id v9 = v53;
                uint64_t v20 = v32;
                unint64_t v39 = (unint64_t)v51;
              }
              else
              {
                unint64_t v39 = sub_10018F7F8(0, v51[2] + 1, 1, (unint64_t)v51);
                id v9 = v53;
                uint64_t v20 = v32;
              }
              unint64_t v41 = *(void *)(v39 + 16);
              unint64_t v40 = *(void *)(v39 + 24);
              if (v41 >= v40 >> 1) {
                unint64_t v39 = sub_10018F7F8(v40 > 1, v41 + 1, 1, v39);
              }
              *(void *)(v39 + 16) = v41 + 1;
              unint64_t v42 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
              uint64_t v51 = (void *)v39;
              sub_1000CBE0C(v49, v39 + v42 + *(void *)(v47 + 72) * v41, (uint64_t *)&unk_100708D70);
              Swift::String v22 = v63;
              goto LABEL_22;
            }
            v29 += v66;
            --v28;
            Swift::String v22 = v63;
            uint64_t v20 = v32;
            if (!v28) {
              goto LABEL_15;
            }
          }
        }
        else
        {
          Swift::String v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v20;
          swift_bridgeObjectRetain();
LABEL_15:
          v31(v22, 1, 1, v10);
        }
        swift_bridgeObjectRelease();
        Swift::String v23 = v67;
        (*v68)(v67, v10);
        swift_bridgeObjectRelease();
        id v9 = v53;
LABEL_22:
        uint64_t v24 = v56;
      }
      else
      {
        (*v68)(v23, v10);
      }
    }
    ++v21;
  }
  while (v21 != v24);
  swift_bridgeObjectRelease();
  return v51;
}

void *sub_100534E80(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t result = (void *)sub_100408BEC(a1);
    uint64_t v4 = (uint64_t)result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v10 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_22;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_23;
      }
      uint64_t v19 = v7;
      sub_10008E1D0(*(void *)(a1 + 48) + 40 * v4, (uint64_t)v24);
      uint64_t v25 = *(void **)(*(void *)(a1 + 56) + 8 * v4);
      uint64_t v11 = v25;
      sub_10008E1D0((uint64_t)v24, (uint64_t)v22);
      *((void *)&v23 + 1) = v11;
      v20[0] = v22[0];
      v20[1] = v22[1];
      long long v21 = v23;
      id v12 = v11;
      sub_1000CBBA4((uint64_t)v24, (uint64_t *)&unk_10071B8D0);
      id v13 = *((id *)&v21 + 1);
      sub_1000CBBA4((uint64_t)v20, (uint64_t *)&unk_10071B8D0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (void *)specialized ContiguousArray._endMutation()();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(v8 + 8 * v10);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_25;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_26;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v9 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        unint64_t v16 = v10 + 1;
        unint64_t v17 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v8 + 8 * v16);
          if (v18)
          {
LABEL_18:
            int64_t v9 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v10)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v10++);
              if (v18)
              {
                unint64_t v16 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      uint64_t v7 = v19 + 1;
      uint64_t v4 = v9;
      if (v19 + 1 == v2) {
        return v26;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1005350C0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v3 = Hasher._finalize()();
    swift_bridgeObjectRelease();
    uint64_t v4 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v5 = v3 & ~v4;
    uint64_t v6 = a2 + 56;
    if ((*(void *)(a2 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
    {
      uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v9 = v8;
      if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10)
      {
LABEL_17:
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
LABEL_18:
        char v20 = 1;
        return v20 & 1;
      }
      uint64_t v13 = ~v4;
      unint64_t v14 = (v5 + 1) & v13;
      if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
      {
        while (1)
        {
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v17 = v16;
          if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18) {
            break;
          }
          char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v20 & 1) == 0)
          {
            unint64_t v14 = (v14 + 1) & v13;
            if ((*(void *)(v6 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14)) {
              continue;
            }
          }
          return v20 & 1;
        }
        goto LABEL_17;
      }
    }
  }
  char v20 = 0;
  return v20 & 1;
}

uint64_t sub_100535288(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    goto LABEL_9;
  }
  Swift::UInt v3 = a1 & 1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v3);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (((v3 == 0) ^ *(unsigned __int8 *)(v8 + v6)))
  {
    char v9 = 1;
    return v9 & 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_9:
    char v9 = 0;
    return v9 & 1;
  }
  do
  {
    char v9 = (v3 == 0) ^ *(unsigned char *)(v8 + v11);
    if (v9) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return v9 & 1;
}

BOOL sub_100535394(Swift::UInt a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1005354CC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = __CocoaSet.contains(_:)();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = NSObject._rawHashValue(seed:)(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  sub_10009E6C4(0, (unint64_t *)&unk_10070D320);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = static NSObject.== infix(_:_:)();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

uint64_t sub_10053562C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v6 = Hasher._finalize()();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      char v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_100535764(Swift::UInt32 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(_DWORD *)(v8 + 4 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_100535854(uint64_t a1, uint64_t a2, id a3, int a4, uint64_t a5, int a6, void *a7, void (*a8)(void), uint64_t a9)
{
  id v186 = a7;
  int v187 = a6;
  uint64_t v185 = a5;
  int v182 = a4;
  uint64_t v190 = a2;
  uint64_t v188 = a9;
  uint64_t v203 = type metadata accessor for URL();
  uint64_t v195 = *(void *)(v203 - 8);
  uint64_t v12 = __chkstk_darwin(v203);
  v198 = &v181[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  v193 = &v181[-v15];
  __chkstk_darwin(v14);
  v202 = &v181[-v16];
  uint64_t v201 = type metadata accessor for DOCOperationItem();
  uint64_t v17 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  uint64_t v19 = (id *)&v181[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v20 = 1;
  uint64_t v191 = a1;
  v183 = a8;
  switch((char)a1)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        switch((char)v191)
        {
          case 2:
          case 3:
          case 4:
          case 5:
          case 6:
          case 7:
            char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v22) {
              goto LABEL_8;
            }
            switch((char)v191)
            {
              case 2:
                goto LABEL_7;
              default:
                char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
                break;
            }
            break;
          default:
            goto LABEL_7;
        }
        goto LABEL_7;
      }
      break;
    default:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
  }
LABEL_8:
  unint64_t v23 = (unint64_t)_swiftEmptyArrayStorage;
  v212 = _swiftEmptyArrayStorage;
  uint64_t v24 = swift_allocObject();
  uint64_t v184 = v24;
  *(void *)(v24 + 16) = _swiftEmptyArrayStorage;
  uint64_t v25 = (uint64_t *)(v24 + 16);
  uint64_t v26 = *(void *)(v190 + 16);
  id v192 = a3;
  if (v26)
  {
    uint64_t v27 = v190 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v200 = *(void *)(v17 + 72);
    v197 = v19 + 1;
    uint64_t v28 = (void (**)(unsigned char *, id *, uint64_t))(v195 + 32);
    int v199 = v20 & (a3 != 0);
    v194 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v195 + 16);
    v196 = (void (**)(unsigned char *, uint64_t))(v195 + 8);
    swift_bridgeObjectRetain();
    uint64_t v29 = v202;
    uint64_t v30 = v203;
    do
    {
      sub_100376A18(v27, (uint64_t)v19);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v31 = *v19;
        if (v199)
        {
          uint64_t v32 = self;
          id v33 = a3;
          id v34 = [v32 defaultPermission];
          unsigned int v35 = [v34 canItem:v31 performAction:1 item:v33];

          if (v35)
          {
            id v31 = v31;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }
        else
        {
          id v50 = v31;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        uint64_t v29 = v202;
        uint64_t v30 = v203;
      }
      else
      {
        uint64_t v36 = sub_1000CBE70(&qword_100711EA0);
        swift_bridgeObjectRelease();
        int v37 = *((unsigned __int8 *)v19 + *(int *)(v36 + 64));
        uint64_t v38 = (void (*)(unint64_t, unsigned char *, uint64_t))*v28;
        (*v28)(v29, v19, v30);
        if (v199)
        {
          if (v37) {
            uint64_t v39 = 1;
          }
          else {
            uint64_t v39 = 2;
          }
          unint64_t v40 = self;
          id v41 = a3;
          id v42 = [v40 defaultPermission];
          unsigned int v43 = [v42 canAppWithDataOwnerState:v39 performAction:1 node:v41];

          if (v43)
          {
            (*v194)(v193, v202, v203);
            unint64_t v44 = (unint64_t)v212;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v44 = sub_10018F80C(0, *(void *)(v44 + 16) + 1, 1, v44);
            }
            unint64_t v46 = *(void *)(v44 + 16);
            unint64_t v45 = *(void *)(v44 + 24);
            if (v46 >= v45 >> 1) {
              unint64_t v44 = sub_10018F80C(v45 > 1, v46 + 1, 1, v44);
            }
            *(void *)(v44 + 16) = v46 + 1;
            uint64_t v47 = v195;
            unint64_t v48 = v44
                + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))
                + *(void *)(v195 + 72) * v46;
            uint64_t v49 = v203;
            v38(v48, v193, v203);

            v212 = (void *)v44;
            uint64_t v30 = v49;
            uint64_t v29 = v202;
            (*(void (**)(unsigned char *, uint64_t))(v47 + 8))(v202, v49);
            a3 = v192;
          }
          else
          {
            uint64_t v56 = v202;
            uint64_t v30 = v203;
            (*v196)(v202, v203);

            uint64_t v29 = v56;
          }
        }
        else
        {
          (*v194)(v198, v29, v30);
          unint64_t v51 = (unint64_t)v212;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v51 = sub_10018F80C(0, *(void *)(v51 + 16) + 1, 1, v51);
          }
          unint64_t v53 = *(void *)(v51 + 16);
          unint64_t v52 = *(void *)(v51 + 24);
          if (v53 >= v52 >> 1) {
            unint64_t v51 = sub_10018F80C(v52 > 1, v53 + 1, 1, v51);
          }
          *(void *)(v51 + 16) = v53 + 1;
          uint64_t v54 = v195;
          unint64_t v55 = v51
              + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))
              + *(void *)(v195 + 72) * v53;
          uint64_t v30 = v203;
          v38(v55, v198, v203);
          v212 = (void *)v51;
          uint64_t v29 = v202;
          (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v202, v30);
        }
      }
      v27 += v200;
      --v26;
    }
    while (v26);
    swift_bridgeObjectRelease();
    uint64_t v57 = v212;
    unint64_t v23 = *v25;
  }
  else
  {
    uint64_t v57 = _swiftEmptyArrayStorage;
  }
  if (v57[2])
  {
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v172 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v172) {
        goto LABEL_127;
      }
    }
    else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_127;
    }
    if (v57[2])
    {
      if ((_BYTE)v191)
      {
        if (v191 != 1)
        {
LABEL_126:
          uint64_t aBlock = 0;
          unint64_t v206 = 0xE000000000000000;
          _StringGuts.grow(_:)(42);
          v179._uint64_t countAndFlagsBits = 0x7020746F6E6E6143;
          v179._uint64_t object = (void *)0xEF206D726F667265;
          String.append(_:)(v179);
          char v211 = v191;
          _print_unlocked<A, B>(_:_:)();
          v180._uint64_t countAndFlagsBits = 0xD000000000000019;
          v180._uint64_t object = (void *)0x80000001005FF560;
          String.append(_:)(v180);
LABEL_127:
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          JUMPOUT(0x1005374FCLL);
        }
        if (a3)
        {
          Swift::String v67 = self;
          id v68 = a3;
          swift_bridgeObjectRetain();
          id v69 = [v67 shared];
          id v70 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
          uint64_t v61 = DOCCopyOperation.init(urls:destinationFolder:undoManager:)((uint64_t)v57, v68, v69);
LABEL_56:
          self;
          uint64_t v71 = swift_dynamicCastObjCClass();
          if (v71)
          {
            uint64_t v72 = (void *)v71;
            uint64_t v61 = v61;
            if (sub_1005347C8(v190, (uint64_t *)&v212)[2])
            {
              sub_1000CBE70(&qword_100711D08);
              uint64_t v73 = (void **)static _DictionaryStorage.allocate(capacity:)();
            }
            else
            {
              uint64_t v73 = (void **)&_swiftEmptyDictionarySingleton;
            }
            uint64_t aBlock = v73;
            uint64_t v74 = swift_bridgeObjectRetain();
            sub_100543EC0(v74, 1, &aBlock);
            swift_bridgeObjectRelease();
            sub_100080268((unint64_t *)&unk_100705B80, (void (*)(uint64_t))&type metadata accessor for URL);
            Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
            swift_release();
            [v72 setTargetFilenamesByURL:isa];
          }
          goto LABEL_61;
        }
        goto LABEL_120;
      }
      if (a3)
      {
        id v58 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
        id v59 = a3;
        swift_bridgeObjectRetain();
        Class v60 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        uint64_t v61 = (char *)[v58 initWithURLs:v60 destinationFolder:v59];

        goto LABEL_56;
      }
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      swift_unexpectedError();
      __break(1u);
      goto LABEL_126;
    }
    unint64_t v23 = *v25;
  }
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v173 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v173) {
      goto LABEL_50;
    }
  }
  else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    switch((char)v191)
    {
      case 1:
        if (!a3) {
          goto LABEL_123;
        }
        uint64_t v133 = *v25;
        uint64_t v134 = self;
        id v135 = a3;
        swift_bridgeObjectRetain();
        id v136 = [v134 shared];
        id v137 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
        uint64_t v61 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(v133, v135, 0, v136);
        goto LABEL_61;
      case 2:
        if (!a3) {
          goto LABEL_122;
        }
        uint64_t v120 = *v25;
        Swift::Int v121 = self;
        id v122 = a3;
        swift_bridgeObjectRetain();
        id v123 = [v121 shared];
        id v124 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
        uint64_t v61 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(v120, v122, 1, v123);
        [v61 setShouldBounceOnCollision:1];
        goto LABEL_61;
      case 3:
        uint64_t v125 = self;
        swift_bridgeObjectRetain();
        id v126 = [v125 shared];
        char v127 = (objc_class *)type metadata accessor for DOCTrashOperation();
        uint64_t v128 = (char *)objc_allocWithZone(v127);
        *(void *)&v128[OBJC_IVAR____TtC5Files17DOCTrashOperation_sourceParentFolderItem] = 0;
        *(void *)&v128[OBJC_IVAR____TtC5Files17DOCTrashOperation_undoManager] = v126;
        sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
        id v129 = v126;
        Class v130 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        v204.receiver = v128;
        v204.super_class = v127;
        unint64_t v131 = (char *)[super initWithItems:v130];

        int64_t v132 = *(void **)&v131[OBJC_IVAR____TtC5Files17DOCTrashOperation_undoManager];
        uint64_t v61 = v131;
        [v132 registerUndoOperationForSender:v61];

        goto LABEL_61;
      case 4:
        uint64_t v117 = *v25;
        unint64_t v118 = self;
        id v119 = a3;
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_1002FFAD8(v117, a3, [v118 shared]);
        goto LABEL_61;
      case 5:
        v151 = self;
        swift_bridgeObjectRetain();
        id v152 = [v151 shared];
        id v153 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
        uint64_t v61 = (char *)DOCDeleteOperation.init(items:originalOperation:undoManager:)();
        goto LABEL_61;
      case 6:
        if (!a3) {
          goto LABEL_124;
        }
        uint64_t v154 = *v25;
        uint64_t v155 = self;
        id v156 = a3;
        swift_bridgeObjectRetain();
        id v157 = [v155 shared];
        id v158 = objc_allocWithZone((Class)type metadata accessor for DOCArchiveOperation());
        uint64_t v61 = sub_10038F9F8(v154, v156, v157);
        goto LABEL_61;
      case 7:
        uint64_t v138 = *v25;
        if ((unint64_t)*v25 >> 62)
        {
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_81:
            if ((v138 & 0xC000000000000001) == 0)
            {
              if (!*(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_119;
              }
              id v140 = *(id *)(v138 + 32);
LABEL_84:
              uint64_t v141 = v140;
              swift_bridgeObjectRelease();
              if (a3)
              {
                uint64_t v142 = self;
                id v143 = a3;
                id v144 = [v142 shared];
                id v145 = objc_allocWithZone((Class)type metadata accessor for DOCUnarchiveOperation());
                uint64_t v146 = sub_1003F90A8(v141, v143, v144);
                uint64_t v147 = swift_allocObject();
                id v148 = v186;
                *(void *)(v147 + 16) = v186;
                v209 = (uint64_t (*)())sub_100546108;
                v210 = (void *)v147;
                uint64_t aBlock = _NSConcreteStackBlock;
                unint64_t v206 = 1107296256;
                v207 = sub_10053C620;
                v208 = &unk_1006B6138;
                uint64_t v149 = _Block_copy(&aBlock);
                uint64_t v61 = v146;
                id v150 = v148;
                swift_release();
                [v61 setPassphraseRequestBlock:v149];
                _Block_release(v149);

LABEL_61:
                self;
                uint64_t v76 = swift_dynamicCastObjCClass();
                uint64_t v77 = v184;
                id v78 = v186;
                if (v76)
                {
                  uint64_t v79 = (void *)v76;
                  Swift::String v80 = v61;
                  if (v182) {
                    [v79 setShouldBounceOnCollision:1];
                  }
                  if ((v187 & 1) == 0) {
                    [v79 setLastUsageUpdatePolicy:v185];
                  }
                }
                uint64_t v81 = swift_allocObject();
                id v82 = v189;
                swift_unknownObjectWeakInit();
                uint64_t v83 = swift_allocObject();
                swift_unknownObjectWeakInit();
                uint64_t v84 = swift_allocObject();
                *(void *)(v84 + 16) = v81;
                *(void *)(v84 + 24) = v83;
                v209 = sub_1005474FC;
                v210 = (void *)v84;
                uint64_t aBlock = _NSConcreteStackBlock;
                unint64_t v206 = 1107296256;
                v207 = sub_10044D134;
                v208 = &unk_1006B5F80;
                char v85 = _Block_copy(&aBlock);
                swift_release();
                [v61 setErrorRecoveryHandler:v85];
                _Block_release(v85);
                uint64_t v86 = swift_allocObject();
                uint64_t v87 = (uint64_t)v183;
                uint64_t v88 = v188;
                *(void *)(v86 + 16) = v183;
                *(void *)(v86 + 24) = v88;
                id v89 = v192;
                *(void *)(v86 + 32) = v61;
                *(void *)(v86 + 40) = v89;
                *(unsigned char *)(v86 + 48) = v191;
                *(void *)(v86 + 56) = v82;
                *(void *)(v86 + 64) = v78;
                *(void *)(v86 + 72) = v77;
                uint64_t v90 = v185;
                *(void *)(v86 + 80) = v190;
                *(void *)(v86 + 88) = v90;
                *(unsigned char *)(v86 + 96) = v187 & 1;
                type metadata accessor for DOCArchiveOperation();
                uint64_t v91 = swift_dynamicCastClass();
                if (v91)
                {
                  uint64_t v92 = (void *)v91;
                  uint64_t v93 = (void *)swift_allocObject();
                  v93[2] = v92;
                  v93[3] = sub_100545F6C;
                  v93[4] = v86;
                  v209 = (uint64_t (*)())sub_1005460A8;
                  v210 = v93;
                  uint64_t aBlock = _NSConcreteStackBlock;
                  unint64_t v206 = 1107296256;
                  v207 = sub_10000CAE4;
                  v208 = &unk_1006B60E8;
                  uint64_t v94 = _Block_copy(&aBlock);
                  uint64_t v203 = (uint64_t)v210;
                  id v95 = v89;
                  id v96 = v78;
                  uint64_t v97 = v61;
                  swift_bridgeObjectRetain();
                  sub_1000C0640(v87);
                  id v98 = v189;
                  id v99 = v189;
                  swift_retain();
                  swift_retain();
                  swift_release();
                  [v92 setArchiveCompletionBlock:v94];
                  _Block_release(v94);
                }
                else
                {
                  type metadata accessor for DOCUnarchiveOperation();
                  uint64_t v100 = swift_dynamicCastClass();
                  if (v100)
                  {
                    unsigned int v101 = (void *)v100;
                    uint64_t v102 = (void *)swift_allocObject();
                    v102[2] = v101;
                    v102[3] = sub_100545F6C;
                    v102[4] = v86;
                    v209 = (uint64_t (*)())sub_100546064;
                    v210 = v102;
                    uint64_t aBlock = _NSConcreteStackBlock;
                    unint64_t v206 = 1107296256;
                    v207 = sub_10000CAE4;
                    v208 = &unk_1006B6098;
                    uint64_t v103 = _Block_copy(&aBlock);
                    id v104 = v192;
                    id v105 = v186;
                    uint64_t v106 = v61;
                    swift_bridgeObjectRetain();
                    sub_1000C0640(v87);
                    id v98 = v189;
                    id v107 = v189;
                    swift_retain();
                    swift_retain();
                    swift_release();
                    [v101 setUnarchiveCompletionBlock:v103];
                    _Block_release(v103);
                  }
                  else
                  {
                    type metadata accessor for DOCCopyOperation();
                    uint64_t v108 = swift_dynamicCastClass();
                    id v109 = v186;
                    id v98 = v189;
                    if (v108)
                    {
                      unint64_t v110 = (void *)v108;
                      uint64_t v111 = (void *)swift_allocObject();
                      v111[2] = v110;
                      v111[3] = sub_100545F6C;
                      v111[4] = v86;
                      v209 = (uint64_t (*)())sub_100546004;
                      v210 = v111;
                      uint64_t aBlock = _NSConcreteStackBlock;
                      unint64_t v206 = 1107296256;
                      v207 = sub_1001950CC;
                      v208 = &unk_1006B6048;
                      uint64_t v112 = _Block_copy(&aBlock);
                      id v113 = v192;
                      id v114 = v109;
                      uint64_t v115 = v61;
                      swift_bridgeObjectRetain();
                      sub_1000C0640(v87);
                      id v116 = v98;
                      swift_retain();
                      swift_retain();
                      swift_release();
                      [v110 setActionCompletionBlock:v112];
                      _Block_release(v112);
                    }
                    else
                    {
                      uint64_t v159 = swift_allocObject();
                      *(void *)(v159 + 16) = sub_100545F6C;
                      *(void *)(v159 + 24) = v86;
                      v209 = (uint64_t (*)())sub_100545FB4;
                      v210 = (void *)v159;
                      uint64_t aBlock = _NSConcreteStackBlock;
                      unint64_t v206 = 1107296256;
                      v207 = sub_1001950CC;
                      v208 = &unk_1006B5FF8;
                      Swift::Int v160 = _Block_copy(&aBlock);
                      id v161 = v192;
                      id v162 = v109;
                      v163 = v61;
                      swift_bridgeObjectRetain();
                      sub_1000C0640(v87);
                      id v164 = v98;
                      swift_retain();
                      swift_retain();
                      swift_release();
                      [v163 setActionCompletionBlock:v160];
                      _Block_release(v160);
                    }
                  }
                }
                [v61 setQualityOfService:25];
                uint64_t v165 = (void *)static DOCLog.UI.getter();
                static os_log_type_t.debug.getter();
                sub_1000CBE70((uint64_t *)&unk_100708800);
                uint64_t v166 = swift_allocObject();
                *(_OWORD *)(v166 + 16) = xmmword_1005A0230;
                *(void *)(v166 + 56) = &type metadata for String;
                unint64_t v167 = sub_100073F48();
                *(void *)(v166 + 64) = v167;
                *(void *)(v166 + 32) = 0xD000000000000076;
                *(void *)(v166 + 40) = 0x80000001005FF580;
                unint64_t v168 = 0xE400000000000000;
                uint64_t v169 = 1702260557;
                switch((char)v191)
                {
                  case 1:
                    uint64_t v169 = 2037411651;
                    break;
                  case 2:
                    uint64_t v169 = 0x746163696C707544;
                    goto LABEL_96;
                  case 3:
                    unint64_t v168 = 0xE500000000000000;
                    uint64_t v169 = 0x6873617254;
                    break;
                  case 4:
                    unint64_t v168 = 0xE700000000000000;
                    uint64_t v169 = 0x68736172746E55;
                    break;
                  case 5:
                    unint64_t v168 = 0xE600000000000000;
                    uint64_t v169 = 0x6574656C6544;
                    break;
                  case 6:
                    unint64_t v168 = 0xE700000000000000;
                    uint64_t v169 = 0x65766968637241;
                    break;
                  case 7:
                    uint64_t v169 = 0x7669686372616E55;
LABEL_96:
                    unint64_t v168 = 0xE900000000000065;
                    break;
                  default:
                    break;
                }
                *(void *)(v166 + 96) = &type metadata for String;
                *(void *)(v166 + 104) = v167;
                *(void *)(v166 + 72) = v169;
                *(void *)(v166 + 80) = v168;
                *(void *)(v166 + 136) = sub_10009E6C4(0, &qword_10071B8B8);
                *(void *)(v166 + 144) = sub_10035C084((unint64_t *)&unk_10071B8C0, &qword_10071B8B8);
                *(void *)(v166 + 112) = v61;
                v170 = v61;
                os_log(_:dso:log:type:_:)();

                swift_bridgeObjectRelease();
                [v98 scheduleAction:v170];
                swift_release();

                swift_release();
                return swift_bridgeObjectRelease();
              }
              goto LABEL_125;
            }
LABEL_117:
            id v140 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v139 = *(void *)((v138 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v139) {
            goto LABEL_81;
          }
        }
        swift_bridgeObjectRelease();
        __break(1u);
        goto LABEL_117;
      default:
        if (!a3) {
          goto LABEL_121;
        }
        uint64_t v62 = *v25;
        uint64_t v63 = self;
        id v64 = a3;
        swift_bridgeObjectRetain();
        id v65 = [v63 shared];
        id v66 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
        uint64_t v61 = sub_100198CE0(v62, v64, v65);
        goto LABEL_61;
    }
  }
  v174 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.error.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = xmmword_10059B760;
  *(void *)(v175 + 56) = &type metadata for String;
  unint64_t v176 = sub_100073F48();
  *(void *)(v175 + 64) = v176;
  *(void *)(v175 + 32) = 0xD000000000000076;
  *(void *)(v175 + 40) = 0x80000001005FF580;
  unint64_t v177 = 0xE400000000000000;
  uint64_t v178 = 1702260557;
  switch((char)v191)
  {
    case 1:
      uint64_t v178 = 2037411651;
      break;
    case 2:
      uint64_t v178 = 0x746163696C707544;
      goto LABEL_109;
    case 3:
      unint64_t v177 = 0xE500000000000000;
      uint64_t v178 = 0x6873617254;
      break;
    case 4:
      unint64_t v177 = 0xE700000000000000;
      uint64_t v178 = 0x68736172746E55;
      break;
    case 5:
      unint64_t v177 = 0xE600000000000000;
      uint64_t v178 = 0x6574656C6544;
      break;
    case 6:
      unint64_t v177 = 0xE700000000000000;
      uint64_t v178 = 0x65766968637241;
      break;
    case 7:
      uint64_t v178 = 0x7669686372616E55;
LABEL_109:
      unint64_t v177 = 0xE900000000000065;
      break;
    default:
      break;
  }
  *(void *)(v175 + 96) = &type metadata for String;
  *(void *)(v175 + 104) = v176;
  *(void *)(v175 + 72) = v178;
  *(void *)(v175 + 80) = v177;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  if (v183) {
    v183(0);
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1005375B8(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 144) = a2;
  *(void *)(v3 + 32) = a1;
  *(void *)(v3 + 40) = a3;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 48) = v4;
  *(void *)(v3 + 56) = *(void *)(v4 - 8);
  *(void *)(v3 + 64) = swift_task_alloc();
  *(void *)(v3 + 72) = swift_task_alloc();
  return _swift_task_switch(sub_10053768C, 0, 0);
}

uint64_t sub_10053768C()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_40;
    }
  }
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  if (v2 < 1)
  {
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v27) {
      goto LABEL_28;
    }
LABEL_23:
    uint64_t v24 = *(void *)(v0 + 40);
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_task_alloc();
    *(void *)(v0 + 88) = v25;
    *(void *)(v25 + 16) = v24;
    *(void *)(v25 + 24) = v1;
    uint64_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v26;
    void *v26 = v0;
    v26[1] = sub_100537D70;
LABEL_35:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v42 = *(void *)(v0 + 32) + 32;
  uint64_t v3 = (void *)FPActionTrash;
  unsigned int v43 = (void *)FPActionDelete;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (v44) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v42 + 8 * i);
    }
    uint64_t v6 = v5;
    uint64_t v7 = *(void **)(v0 + 40);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A04F0;
    *(void *)(v9 + 32) = v6;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v10 = v6;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v7 eligibleActionsForItems:isa];

    type metadata accessor for FPAction(0);
    sub_100080268((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = v3;
    LOBYTE(isa) = sub_1005350C0((uint64_t)v14, v13);

    if (isa)
    {
      swift_bridgeObjectRelease();
      v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_7;
    }
    id v15 = v43;
    char v16 = sub_1005350C0((uint64_t)v15, v13);
    swift_bridgeObjectRelease();

    if (v16)
    {
      v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_7:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  int v17 = *(unsigned __int8 *)(v0 + 144);
  swift_bridgeObjectRelease();
  if (v17 == 1)
  {
    static Logger.AppIntents.getter();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v18, v19))
    {
      char v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Items are about to be deleted/trashed without usual confirmation because confirmation happened as part of the DeleteIntent flow ahead of the intent execution", v20, 2u);
      swift_slowDealloc();
    }
    uint64_t v21 = *(void *)(v0 + 72);
    uint64_t v22 = *(void *)(v0 + 48);
    uint64_t v23 = *(void *)(v0 + 56);

    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  }
  unint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 80) = v1;
  if (v1 >> 62) {
    goto LABEL_27;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_28:
  unint64_t v28 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v28;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v39) {
      goto LABEL_39;
    }
LABEL_30:
    char v29 = *(unsigned char *)(v0 + 144);
    swift_bridgeObjectRetain();
    if ((v29 & 1) == 0)
    {
      static Logger.AppIntents.getter();
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "Items are about to be deleted/trashed without usual confirmation because confirmation happened as part of the DeleteIntent flow ahead of the intent execution", v32, 2u);
        swift_slowDealloc();
      }
      uint64_t v34 = *(void *)(v0 + 56);
      uint64_t v33 = *(void *)(v0 + 64);
      uint64_t v35 = *(void *)(v0 + 48);

      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    }
    uint64_t v36 = *(void *)(v0 + 40);
    uint64_t v37 = swift_task_alloc();
    *(void *)(v0 + 120) = v37;
    *(void *)(v37 + 16) = v36;
    *(void *)(v37 + 24) = v28;
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_100537E8C;
    goto LABEL_35;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_30;
  }
LABEL_39:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_40:
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_100537D70()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10053831C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005380C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100537E8C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100538030;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100537FA8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100537FA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100538030()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005380C4()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    char v2 = *(unsigned char *)(v0 + 144);
    swift_bridgeObjectRetain();
    if ((v2 & 1) == 0)
    {
      static Logger.AppIntents.getter();
      uint64_t v3 = Logger.logObject.getter();
      os_log_type_t v4 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v3, v4))
      {
        id v5 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v5 = 0;
        _os_log_impl((void *)&_mh_execute_header, v3, v4, "Items are about to be deleted/trashed without usual confirmation because confirmation happened as part of the DeleteIntent flow ahead of the intent execution", v5, 2u);
        swift_slowDealloc();
      }
      uint64_t v7 = *(void *)(v0 + 56);
      uint64_t v6 = *(void *)(v0 + 64);
      uint64_t v8 = *(void *)(v0 + 48);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    }
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 120) = v10;
    *(void *)(v10 + 16) = v9;
    *(void *)(v10 + 24) = v1;
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_100537E8C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10053831C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t FPItemManager.trashOrDeleteItems(_:confirmationHandler:forceConfirmation:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 160) = a4;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return _swift_task_switch(sub_1005383DC, 0, 0);
}

uint64_t sub_1005383DC()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_39;
    }
  }
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 24) = _swiftEmptyArrayStorage;
  if (v2 < 1)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v29) {
      goto LABEL_32;
    }
LABEL_24:
    uint64_t v21 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_task_alloc();
    *(void *)(v0 + 88) = v22;
    *(void *)(v22 + 16) = v21;
    *(void *)(v22 + 24) = v1;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_100538F2C;
    uint64_t v24 = (char *)&type metadata for () + 8;
    unint64_t v25 = 0x80000001005FF000;
    uint64_t v26 = sub_100544434;
    unint64_t v27 = 0xD000000000000022;
    uint64_t v28 = v22;
    goto LABEL_25;
  }
  unint64_t v38 = v1 & 0xC000000000000001;
  uint64_t v36 = *(void *)(v0 + 32) + 32;
  uint64_t v3 = (void *)FPActionTrash;
  uint64_t v37 = (void *)FPActionDelete;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v2; ++i)
  {
    if (v38) {
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v5 = *(id *)(v36 + 8 * i);
    }
    uint64_t v6 = v5;
    uint64_t v7 = *(void **)(v0 + 56);
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1005A04F0;
    *(void *)(v9 + 32) = v6;
    specialized Array._endMutation()();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    id v10 = v6;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v12 = [v7 eligibleActionsForItems:isa];

    type metadata accessor for FPAction(0);
    sub_100080268((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
    uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    id v14 = v3;
    LOBYTE(isa) = sub_1005350C0((uint64_t)v14, v13);

    if (isa)
    {
      swift_bridgeObjectRelease();
      v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 16) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_7;
    }
    id v15 = v37;
    char v16 = sub_1005350C0((uint64_t)v15, v13);
    swift_bridgeObjectRelease();

    if (v16)
    {
      v10;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v0 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                         + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_7:
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  int v17 = *(unsigned __int8 *)(v0 + 160);
  swift_bridgeObjectRelease();
  if (v17 == 1)
  {
    uint64_t v39 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v18;
    void *v18 = v0;
    os_log_type_t v19 = sub_100538AC0;
    goto LABEL_19;
  }
  unint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 80) = v1;
  if (v1 >> 62) {
    goto LABEL_31;
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_24;
  }
LABEL_32:
  unint64_t v30 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v30;
  if (v30 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v34) {
      goto LABEL_38;
    }
LABEL_34:
    if ((*(unsigned char *)(v0 + 160) & 1) == 0)
    {
      uint64_t v39 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v18;
      void *v18 = v0;
      os_log_type_t v19 = sub_100539328;
LABEL_19:
      v18[1] = v19;
      return v39();
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = *(void *)(v0 + 112);
    uint64_t v32 = *(void *)(v0 + 56);
    uint64_t v33 = swift_task_alloc();
    *(void *)(v0 + 136) = v33;
    *(void *)(v33 + 16) = v32;
    *(void *)(v33 + 24) = v31;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1005395B4;
    unint64_t v27 = 0xD000000000000023;
    uint64_t v24 = (char *)&type metadata for () + 8;
    unint64_t v25 = 0x80000001005FF030;
    uint64_t v26 = sub_10054443C;
    uint64_t v28 = v33;
LABEL_25:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v23, 0, 0, v27, v25, v26, v28, v24);
  }
  if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_34;
  }
LABEL_38:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_39:
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_100538AC0()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1005397C0;
  }
  else {
    uint64_t v2 = sub_100538BD4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100538BD4()
{
  unint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 80) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = *(void *)(v0 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 88) = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100538F2C;
    id v5 = (char *)&type metadata for () + 8;
    unint64_t v6 = 0x80000001005FF000;
    uint64_t v7 = sub_100544434;
    unint64_t v8 = 0xD000000000000022;
    uint64_t v9 = v3;
LABEL_4:
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, v8, v6, v7, v9, v5);
  }
  unint64_t v11 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v11;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_10;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
  if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_10:
  if (*(unsigned char *)(v0 + 160))
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 136) = v14;
    *(void *)(v14 + 16) = v13;
    *(void *)(v14 + 24) = v12;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1005395B4;
    unint64_t v8 = 0xD000000000000023;
    id v5 = (char *)&type metadata for () + 8;
    unint64_t v6 = 0x80000001005FF030;
    uint64_t v7 = sub_10054443C;
    uint64_t v9 = v14;
    goto LABEL_4;
  }
  os_log_type_t v19 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  id v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v15;
  void *v15 = v0;
  v15[1] = sub_100539328;
  return v19();
}

uint64_t sub_100538F2C()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005392AC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100539048;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100539048()
{
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 112) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_3:
      if (*(unsigned char *)(v0 + 160))
      {
        swift_bridgeObjectRetain();
        uint64_t v2 = *(void *)(v0 + 112);
        uint64_t v3 = *(void *)(v0 + 56);
        uint64_t v4 = swift_task_alloc();
        *(void *)(v0 + 136) = v4;
        *(void *)(v4 + 16) = v3;
        *(void *)(v4 + 24) = v2;
        id v5 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v5;
        *id v5 = v0;
        v5[1] = sub_1005395B4;
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000023, 0x80000001005FF030, sub_10054443C, v4, (char *)&type metadata for () + 8);
      }
      else
      {
        uint64_t v10 = (uint64_t (*)(void))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
        swift_bridgeObjectRetain();
        swift_retain();
        unint64_t v6 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v6;
        void *v6 = v0;
        v6[1] = sub_100539328;
        return v10();
      }
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1005392AC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100539328()
{
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10053953C;
  }
  else {
    uint64_t v2 = sub_10053943C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10053943C()
{
  swift_release();
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_task_alloc();
  v0[17] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1005395B4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000023, 0x80000001005FF030, sub_10054443C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10053953C()
{
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005395B4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100539748;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1005396D0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1005396D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100539748()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005397C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10053982C(unint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DOCOperationItem();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (void **)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    uint64_t v14 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_20:
      swift_bridgeObjectRetain();
      sub_100535854(3, (uint64_t)v14, 0, 0, 0, 1, a2, 0, 0);
      swift_bridgeObjectRelease();
    }
LABEL_21:
    if (v44 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_24;
      }
    }
    else if (!*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_24:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v31 = swift_bridgeObjectRetain();
    sub_100539CF8(v31, a2, a3, a4);
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_3:
  if (v11 >= 1)
  {
    uint64_t v33 = a2;
    uint64_t v34 = a3;
    uint64_t v35 = a4;
    uint64_t v13 = 0;
    id v40 = (id)FPActionTrash;
    unint64_t v41 = a1 & 0xC000000000000001;
    uint64_t v14 = _swiftEmptyArrayStorage;
    id v36 = (id)FPActionDelete;
    long long v39 = xmmword_1005A04F0;
    do
    {
      if (v41) {
        id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v15 = *(id *)(a1 + 8 * v13 + 32);
      }
      uint64_t v16 = v15;
      sub_1000CBE70((uint64_t *)&unk_1007084E0);
      uint64_t v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = v39;
      *(void *)(v18 + 32) = v16;
      uint64_t v43 = v18;
      specialized Array._endMutation()();
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      id v19 = v16;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v21 = [v42 eligibleActionsForItems:isa];

      type metadata accessor for FPAction(0);
      sub_100080268((unint64_t *)&qword_1007069D0, type metadata accessor for FPAction);
      uint64_t v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      id v23 = v40;
      char v24 = sub_1005350C0((uint64_t)v23, v22);

      if (v24)
      {
        swift_bridgeObjectRelease();
        *uint64_t v10 = v19;
        swift_storeEnumTagMultiPayload();
        id v25 = v19;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = (void *)sub_10018F984(0, v14[2] + 1, 1, (unint64_t)v14);
        }
        unint64_t v27 = v14[2];
        unint64_t v26 = v14[3];
        if (v27 >= v26 >> 1) {
          uint64_t v14 = (void *)sub_10018F984(v26 > 1, v27 + 1, 1, (unint64_t)v14);
        }
        v14[2] = v27 + 1;
        sub_10010C430((uint64_t)v10, (uint64_t)v14+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v27);
      }
      else
      {
        id v28 = v36;
        char v29 = sub_1005350C0((uint64_t)v28, v22);

        swift_bridgeObjectRelease();
        if (v29)
        {
          id v30 = v19;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      ++v13;
    }
    while (v11 != v13);
    swift_bridgeObjectRelease();
    a3 = v34;
    a4 = v35;
    a2 = v33;
    if (v14[2]) {
      goto LABEL_20;
    }
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_100539CF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a4;
  uint64_t v41 = a3;
  uint64_t v7 = type metadata accessor for DOCChainOperation.DOCChainOperationMode();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = a1;
  uint64_t v11 = (objc_class *)type metadata accessor for DOCBlockOperation();
  id v12 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)DOCBlockOperation.init(block:)();
  id v14 = objc_allocWithZone((Class)type metadata accessor for DOCDeletePreflightUIOperation());
  swift_bridgeObjectRetain();
  id v15 = a2;
  uint64_t v16 = (void *)DOCDeletePreflightUIOperation.init(items:alertPresenting:)();
  int v17 = (void *)swift_allocObject();
  v17[2] = a1;
  v17[3] = v4;
  v17[4] = v15;
  id v18 = objc_allocWithZone(v11);
  swift_bridgeObjectRetain();
  id v19 = v15;
  id v20 = v4;
  id v21 = (void *)DOCBlockOperation.init(block:)();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v22 = swift_allocObject();
  long long v38 = xmmword_1005A0C30;
  *(_OWORD *)(v22 + 16) = xmmword_1005A0C30;
  *(void *)(v22 + 32) = v13;
  *(void *)(v22 + 40) = v16;
  uint64_t v42 = v22;
  specialized Array._endMutation()();
  id v23 = (objc_class *)type metadata accessor for DOCChainOperation();
  id v24 = objc_allocWithZone(v23);
  id v40 = v13;
  id v39 = v16;
  id v25 = (void *)DOCChainOperation.init(operations:)();
  unint64_t v26 = *(void (**)(char *, void, uint64_t))(v8 + 104);
  v26(v10, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnSuccess(_:), v7);
  dispatch thunk of DOCChainOperation.mode.setter();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = v38;
  *(void *)(v27 + 32) = v25;
  *(void *)(v27 + 40) = v21;
  uint64_t v42 = v27;
  specialized Array._endMutation()();
  objc_allocWithZone(v23);
  id v28 = v25;
  id v29 = v21;
  id v30 = (void *)DOCChainOperation.init(operations:)();
  v26(v10, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnFailure(_:), v7);
  dispatch thunk of DOCChainOperation.mode.setter();
  uint64_t v31 = v41;
  if (v41)
  {
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v37;
    *(void *)(v32 + 16) = v31;
    *(void *)(v32 + 24) = v33;
    sub_1000C0640(v31);
    id v34 = v30;
    dispatch thunk of DOCOperation.finishedBlock.setter();
  }
  id v35 = [self mainQueue];
  [v35 addOperation:v30];
}

void sub_10053A084(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10059B760;
  *(void *)(v10 + 56) = &type metadata for String;
  *(void *)(v10 + 64) = sub_100073F48();
  *(void *)(v10 + 32) = 0xD000000000000032;
  *(void *)(v10 + 40) = 0x80000001005FF990;
  *(void *)(v10 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  *(void *)(v10 + 104) = sub_10035C084((unint64_t *)&qword_100710B40, (unint64_t *)&qword_1007069C0);
  *(void *)(v10 + 72) = a1;
  id v11 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v12 = [v11 itemID];
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a3;
  v13[3] = a4;
  v13[4] = v11;
  _OWORD v13[5] = v4;
  v13[6] = a2;
  v18[4] = sub_100546A04;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10016A350;
  v18[3] = &unk_1006B6890;
  id v14 = _Block_copy(v18);
  id v15 = v11;
  swift_retain();
  id v16 = v4;
  id v17 = a2;
  swift_release();
  [v16 fetchParentsForItemID:v12 recursively:0 completionHandler:v14];
  _Block_release(v14);
}

uint64_t sub_10053A2BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v36 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v32 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  dispatch_group_t v13 = dispatch_group_create();
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v14 = result;
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  id v34 = v8;
  uint64_t v35 = v9;
  uint64_t v33 = v10;
  if (!v14)
  {
    uint64_t v23 = v36;
    swift_bridgeObjectRelease();
LABEL_12:
    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    id v37 = (id)static OS_dispatch_queue.main.getter();
    id v24 = (void *)swift_allocObject();
    v24[2] = a2;
    v24[3] = a3;
    v24[4] = v12;
    uint64_t v43 = sub_1003ED600;
    unint64_t v44 = v24;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v40 = 1107296256;
    uint64_t v41 = sub_1000666D8;
    uint64_t v42 = &unk_1006B6570;
    id v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    unint64_t v26 = v32;
    static DispatchQoS.unspecified.getter();
    long long v38 = _swiftEmptyArrayStorage;
    sub_100080268((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v27 = v34;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v28 = v37;
    OS_dispatch_group.notify(qos:flags:queue:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v6);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v35);
    swift_release();
    return swift_release();
  }
  if (v14 >= 1)
  {
    uint64_t v29 = a2;
    uint64_t v30 = a3;
    uint64_t v31 = v6;
    uint64_t v16 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(a1 + 8 * v16 + 32);
      }
      id v18 = v17;
      ++v16;
      dispatch_group_enter(v13);
      id v19 = (void *)swift_allocObject();
      void v19[2] = v13;
      v19[3] = v18;
      v19[4] = v12;
      uint64_t v43 = sub_10054633C;
      unint64_t v44 = v19;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v40 = 1107296256;
      uint64_t v41 = sub_1001B6B50;
      uint64_t v42 = &unk_1006B6520;
      id v20 = _Block_copy(&aBlock);
      id v21 = v13;
      id v22 = v18;
      swift_retain();
      swift_release();
      [v37 fetchURLForItem:v22 completionHandler:v20];
      _Block_release(v20);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    a3 = v30;
    uint64_t v6 = v31;
    uint64_t v23 = v36;
    a2 = v29;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t FPItemManager.duplicateItems(_:desiredFileNames:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  void v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_10053A7B4, 0, 0);
}

uint64_t sub_10053A7B4()
{
  unint64_t v1 = v0[3];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = v0[5];
    long long v9 = *(_OWORD *)(v0 + 3);
    uint64_t v3 = swift_task_alloc();
    v0[6] = v3;
    *(_OWORD *)(v3 + 16) = v9;
    *(void *)(v3 + 32) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[7] = v4;
    uint64_t v5 = sub_1000CBE70(&qword_100708810);
    *uint64_t v4 = v0;
    v4[1] = sub_10053A96C;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000023, 0x80000001005E0C10, sub_10026DBE0, v3, v5);
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
  static NSError.noSuchFileError.getter();
  swift_willThrow();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10053A96C()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10053AA88;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10014734C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10053AA88()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10053AAF0(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, void **a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v41 = a6;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v42 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  __chkstk_darwin(v18);
  unint64_t v44 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCRenameOperation();
  id v20 = self;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = [v20 shared];
  uint64_t v23 = (void *)DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  *(void *)(v24 + 32) = v10;
  *(void *)(v24 + 40) = a4;
  *(unsigned char *)(v24 + 48) = a5;
  *(void *)(v24 + 56) = v41;
  *(void *)(v24 + 64) = a7;
  id v50 = sub_100545CBC;
  uint64_t v51 = v24;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  unint64_t v48 = sub_1001950CC;
  uint64_t v49 = &unk_1006B5CD8;
  id v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v26 = v23;
  id v27 = v10;
  id v28 = a4;
  swift_retain();
  swift_release();
  [v26 setActionCompletionBlock:v25];
  _Block_release(v25);

  if (a8)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a8;
    *(void *)(v29 + 24) = a9;
    id v50 = sub_100545D08;
    uint64_t v51 = v29;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v47 = 1107296256;
    unint64_t v48 = sub_10053BC2C;
    uint64_t v49 = &unk_1006B5D28;
    uint64_t v30 = _Block_copy(&aBlock);
    sub_1000C0640(a8);
    id v31 = v26;
    sub_1000C0640(a8);
    swift_release();
    [v31 setFinishedBlock:v30];
    _Block_release(v30);

    sub_1000A7258(a8);
  }
  uint64_t v32 = v44;
  static Logger.Rename.getter();
  id v33 = v26;
  id v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = swift_slowAlloc();
    id v37 = (void *)swift_slowAlloc();
    uint64_t v41 = (void **)swift_slowAlloc();
    uint64_t aBlock = v41;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v45 = sub_10009B0E4(0xD000000000000063, 0x80000001005FF3B0, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2112;
    uint64_t v45 = (uint64_t)v33;
    id v38 = v27;
    id v39 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *id v37 = v33;

    id v27 = v38;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s: Adding Rename Operation %@", (uint8_t *)v36, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v43);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v42 + 8))(v32, v43);
  }
  [v27 scheduleAction:v33];
}

void sub_10053AFC0(void *a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, void **a8, uint64_t a9)
{
  uint64_t v10 = v9;
  uint64_t v47 = a8;
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v48 = *(void *)(v18 - 8);
  uint64_t v49 = v18;
  __chkstk_darwin(v18);
  id v50 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DOCRenameOperation();
  id v20 = self;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = [v20 shared];
  uint64_t v23 = (void *)DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v10;
  *(void *)(v24 + 24) = a2;
  *(void *)(v24 + 32) = a3;
  *(void *)(v24 + 40) = a4;
  *(unsigned char *)(v24 + 48) = a5;
  *(void *)(v24 + 56) = a6;
  *(void *)(v24 + 64) = a7;
  uint64_t v56 = sub_10054478C;
  uint64_t v57 = v24;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  uint64_t v54 = sub_1001950CC;
  unint64_t v55 = &unk_1006B58A0;
  id v25 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  id v26 = v23;
  id v27 = v10;
  id v28 = a4;
  uint64_t v29 = (uint64_t)v47;
  swift_retain();
  swift_release();
  [v26 setActionCompletionBlock:v25];
  _Block_release(v25);

  uint64_t v30 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v30;
  *(void *)(v32 + 24) = v31;
  uint64_t v56 = (void (*)(uint64_t))sub_1005474FC;
  uint64_t v57 = v32;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v53 = 1107296256;
  uint64_t v54 = sub_10044D134;
  unint64_t v55 = &unk_1006B5940;
  id v33 = _Block_copy(&aBlock);
  id v34 = v26;
  swift_release();
  [v34 setErrorRecoveryHandler:v33];
  _Block_release(v33);

  if (v29)
  {
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v29;
    *(void *)(v35 + 24) = a9;
    uint64_t v56 = (void (*)(uint64_t))sub_1005474F8;
    uint64_t v57 = v35;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v53 = 1107296256;
    uint64_t v54 = sub_10053BC2C;
    unint64_t v55 = &unk_1006B5990;
    uint64_t v36 = _Block_copy(&aBlock);
    sub_1000C0640(v29);
    id v37 = v34;
    sub_1000C0640(v29);
    swift_release();
    [v37 setFinishedBlock:v36];
    _Block_release(v36);

    sub_1000A7258(v29);
  }
  id v38 = v50;
  static Logger.Rename.getter();
  id v39 = v34;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v47 = (void **)swift_slowAlloc();
    uint64_t aBlock = v47;
    *(_DWORD *)uint64_t v42 = 136315394;
    uint64_t v51 = sub_10009B0E4(0xD000000000000066, 0x80000001005FF150, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 12) = 2112;
    uint64_t v51 = (uint64_t)v39;
    id v44 = v27;
    id v45 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v43 = v39;

    id v27 = v44;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s: Adding Rename Operation %@", (uint8_t *)v42, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v49);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v49);
  }
  [v27 scheduleAction:v39];
}

uint64_t FPItemManager.createNewFolder(parentItem:folderName:shouldBounceOnCollision:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 88) = a4;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  return _swift_task_switch(sub_10053B5A4, 0, 0);
}

uint64_t sub_10053B5A4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 48);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = self;
  id v5 = v3;
  swift_bridgeObjectRetain();
  id v6 = [v4 shared];
  id v7 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation());
  uint64_t v8 = (void *)DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)();
  *(void *)(v0 + 56) = v8;
  [v8 setShouldBounceOnCollision:v1];
  [v2 scheduleAction:v8];
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *(void *)(v9 + 16) = v8;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = sub_1000CBE70(&qword_10070B670);
  *uint64_t v10 = v0;
  v10[1] = sub_10053B754;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD00000000000003FLL, 0x80000001005FF060, sub_100544734, v9, v11);
}

uint64_t sub_10053B754()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10053B8D8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10053B870;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10053B870()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10053B8D8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10053B944(void *a1)
{
  uint64_t v3 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1005A0030;
  *(void *)(v4 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
  *(void *)(v4 + 64) = sub_10035C084(&qword_10071B8E0, (unint64_t *)&unk_1007076A0);
  *(void *)(v4 + 32) = a1;
  id v5 = a1;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v6 = [objc_allocWithZone((Class)FPDisconnectDomainOperation) initWithDomain:v5];
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  *(void *)(v9 + 24) = v8;
  id v20 = sub_1005462D0;
  uint64_t v21 = v9;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_10044D134;
  uint64_t v19 = &unk_1006B6458;
  uint64_t v10 = _Block_copy(&v16);
  id v11 = v6;
  swift_release();
  [v11 setErrorRecoveryHandler:v10];
  _Block_release(v10);

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  id v20 = sub_1005462EC;
  uint64_t v21 = v12;
  uint64_t v16 = _NSConcreteStackBlock;
  uint64_t v17 = 1107296256;
  uint64_t v18 = sub_1001950CC;
  uint64_t v19 = &unk_1006B64A8;
  uint64_t v13 = _Block_copy(&v16);
  id v14 = v5;
  id v15 = v11;
  swift_release();
  [v15 setActionCompletionBlock:v13];
  _Block_release(v13);

  [v1 scheduleAction:v15];
}

uint64_t sub_10053BC2C(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = *(void (**)(long long *, void *))(a1 + 32);
  if (a2)
  {
    *((void *)&v9 + 1) = swift_getObjectType();
    *(void *)&long long v8 = a2;
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(&v8, a3);
  swift_release();

  return sub_1000CBBA4((uint64_t)&v8, (uint64_t *)&unk_100705D60);
}

uint64_t FPItemManager.rename(item:name:overwriteExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 80) = a4;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  return _swift_task_switch(sub_10053BCF0, 0, 0);
}

uint64_t sub_10053BCF0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 80);
  long long v8 = *(_OWORD *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *(_OWORD *)(v4 + 16) = v8;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 40) = v2;
  *(void *)(v4 + 48) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  uint64_t v6 = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  *uint64_t v5 = v0;
  v5[1] = sub_10053BE28;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000025, 0x80000001005F6630, sub_100468EB8, v4, v6);
}

uint64_t sub_10053BE28()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    char v2 = sub_10039F7FC;
  }
  else
  {
    swift_task_dealloc();
    char v2 = sub_10014734C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10053BF44(unsigned __int8 *a1, char *a2)
{
  return sub_1004C0B9C(*a1, *a2);
}

Swift::Int sub_10053BF50()
{
  return sub_10010CD6C();
}

uint64_t sub_10053BF5C()
{
  return sub_10010C8D0();
}

Swift::Int sub_10053BF64()
{
  return sub_10010CD6C();
}

unint64_t sub_10053BF6C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100544A5C(*a1);
  *a2 = result;
  return result;
}

void sub_10053BF9C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1702260557;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 2037411651;
      goto LABEL_3;
    case 2:
      uint64_t v3 = 0x746163696C707544;
      goto LABEL_10;
    case 3:
      *a1 = 0x6873617254;
      a1[1] = 0xE500000000000000;
      return;
    case 4:
      *a1 = 0x68736172746E55;
      a1[1] = 0xE700000000000000;
      return;
    case 5:
      *a1 = 0x6574656C6544;
      a1[1] = 0xE600000000000000;
      return;
    case 6:
      *a1 = 0x65766968637241;
      a1[1] = 0xE700000000000000;
      return;
    case 7:
      uint64_t v3 = 0x7669686372616E55;
LABEL_10:
      *a1 = v3;
      a1[1] = 0xE900000000000065;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

void sub_10053C098(int a1, id a2, uint64_t a3)
{
  if ([a2 recoveryAttempter])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000A54B0(&v6, &v7);
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    swift_dynamicCast();
    uint64_t v4 = (void *)_convertErrorToNSError(_:)();
    [v5 attemptRecoveryFromError:v4 optionIndex:a3];
  }
  else
  {
    __break(1u);
  }
}

void sub_10053C174(uint64_t a1, void (*a2)(uint64_t))
{
  if (a2)
  {
    uint64_t v3 = swift_retain();
    a2(v3);
    sub_1000A7258((uint64_t)a2);
  }
}

void sub_10053C1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, id a5, void *a6)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a4)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  id v21 = [self alertControllerWithTitle:v9 message:v10 preferredStyle:1];

  if ((unint64_t)a5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    if (!v11) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v11 = *(void *)(((unint64_t)a5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v11) {
      goto LABEL_13;
    }
  }
  if (v11 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v11; ++i)
  {
    if (((unint64_t)a5 & 0xC000000000000001) != 0) {
      id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v13 = *((id *)a5 + i + 4);
    }
    id v14 = v13;
    [v21 addAction:v13];
  }
LABEL_13:
  swift_bridgeObjectRelease();
  if (!((unint64_t)a5 >> 62))
  {
    if (*(void *)(((unint64_t)a5 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
      goto LABEL_25;
    }
LABEL_17:
    a5 = v21;
    id v16 = [a5 actions];
    sub_10009E6C4(0, &qword_10071B880);
    uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!((unint64_t)v11 >> 62))
    {
      uint64_t v17 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v17) {
        goto LABEL_19;
      }
      goto LABEL_30;
    }
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17)
    {
LABEL_19:
      unint64_t v18 = v17 - 1;
      if (!__OFSUB__(v17, 1))
      {
        if ((v11 & 0xC000000000000001) == 0)
        {
          if ((v18 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v18 < *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v19 = *(id *)(v11 + 8 * v18 + 32);
LABEL_24:
            id v20 = v19;
            swift_bridgeObjectRelease();
            [a5 setPreferredAction:v20];

            goto LABEL_25;
          }
          __break(1u);
          return;
        }
LABEL_32:
        id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_24;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 == 1) {
    goto LABEL_17;
  }
LABEL_25:
  [a6 presentViewController:v21 animated:1 completion:0];
}

void sub_10053C4C8()
{
  uint64_t v0 = (void *)_convertErrorToNSError(_:)();
  id v1 = [v0 localizedRecoverySuggestion];

  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v2 = (id)_DocumentManagerBundle();
  if (!v2)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v3 = v2;
  sub_10009E6C4(0, (unint64_t *)&unk_100711140);
  v8._uint64_t object = (void *)0xE200000000000000;
  v4._uint64_t countAndFlagsBits = 19279;
  v4._uint64_t object = (void *)0xE200000000000000;
  v5._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v5._uint64_t object = (void *)0xEB00000000656C62;
  v6._uint64_t countAndFlagsBits = 0;
  v6._uint64_t object = (void *)0xE000000000000000;
  v8._uint64_t countAndFlagsBits = 19279;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v8);

  static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t sub_10053C620(uint64_t a1, void *a2, void *aBlock)
{
  Swift::String v4 = *(void (**)(void))(a1 + 32);
  Swift::String v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();

  return swift_release();
}

void sub_10053C6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    if (a3)
    {
LABEL_3:
      uint64_t v7 = _convertErrorToNSError(_:)();
      goto LABEL_6;
    }
  }
  else
  {
    NSString v6 = 0;
    if (a3) {
      goto LABEL_3;
    }
  }
  uint64_t v7 = 0;
LABEL_6:
  id v8 = (id)v7;
  (*(void (**)(uint64_t, NSString))(a4 + 16))(a4, v6);
}

void sub_10053C75C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (a2)
  {
    id v20 = (void *)_convertErrorToNSError(_:)();
    if (NSError.isUserCancelledError.getter())
    {
      id v21 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.error.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1005A0230;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_100073F48();
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 32) = 0xD000000000000076;
      *(void *)(v22 + 40) = 0x80000001005FF580;
      unint64_t v24 = 0xE400000000000000;
      uint64_t v25 = 1702260557;
      switch((char)a8)
      {
        case 1:
          uint64_t v25 = 2037411651;
          break;
        case 2:
          uint64_t v25 = 0x746163696C707544;
          goto LABEL_33;
        case 3:
          unint64_t v24 = 0xE500000000000000;
          uint64_t v25 = 0x6873617254;
          break;
        case 4:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x68736172746E55;
          break;
        case 5:
          unint64_t v24 = 0xE600000000000000;
          uint64_t v25 = 0x6574656C6544;
          break;
        case 6:
          unint64_t v24 = 0xE700000000000000;
          uint64_t v25 = 0x65766968637241;
          break;
        case 7:
          uint64_t v25 = 0x7669686372616E55;
LABEL_33:
          unint64_t v24 = 0xE900000000000065;
          break;
        default:
          break;
      }
      *(void *)(v22 + 96) = &type metadata for String;
      *(void *)(v22 + 104) = v23;
      *(void *)(v22 + 72) = v25;
      *(void *)(v22 + 80) = v24;
      *(void *)(v22 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
      *(void *)(v22 + 144) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
      *(void *)(v22 + 112) = v20;
      id v65 = v20;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      sub_10053D3BC(a4, a5, a1, a6, a7);

      return;
    }
    id v64 = a7;
    if (NSError.isFilenameCollisionError.getter())
    {
      self;
      if (swift_dynamicCastObjCClass())
      {
        if (a3 != 1)
        {
LABEL_40:
          uint64_t v46 = (void *)static DOCLog.UI.getter();
          static os_log_type_t.error.getter();
          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v47 = swift_allocObject();
          *(_OWORD *)(v47 + 16) = xmmword_1005A0230;
          *(void *)(v47 + 56) = &type metadata for String;
          unint64_t v48 = sub_100073F48();
          *(void *)(v47 + 64) = v48;
          *(void *)(v47 + 32) = 0xD000000000000076;
          *(void *)(v47 + 40) = 0x80000001005FF580;
          unint64_t v49 = 0xE400000000000000;
          uint64_t v50 = 1702260557;
          switch((char)a8)
          {
            case 1:
              uint64_t v50 = 2037411651;
              break;
            case 2:
              uint64_t v50 = 0x746163696C707544;
              goto LABEL_56;
            case 3:
              unint64_t v49 = 0xE500000000000000;
              uint64_t v50 = 0x6873617254;
              break;
            case 4:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x68736172746E55;
              break;
            case 5:
              unint64_t v49 = 0xE600000000000000;
              uint64_t v50 = 0x6574656C6544;
              break;
            case 6:
              unint64_t v49 = 0xE700000000000000;
              uint64_t v50 = 0x65766968637241;
              break;
            case 7:
              uint64_t v50 = 0x7669686372616E55;
LABEL_56:
              unint64_t v49 = 0xE900000000000065;
              break;
            default:
              break;
          }
          *(void *)(v47 + 96) = &type metadata for String;
          *(void *)(v47 + 104) = v48;
          *(void *)(v47 + 72) = v50;
          *(void *)(v47 + 80) = v49;
          *(void *)(v47 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
          *(void *)(v47 + 144) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
          *(void *)(v47 + 112) = v20;
          id v56 = v20;
          os_log(_:dso:log:type:_:)();

          swift_bridgeObjectRelease();
          id v57 = v56;
          sub_100544FB8((uint64_t)v57, a10, 0, 0);

          sub_10053D3BC(a4, a5, a1, a6, v64);
          return;
        }
        id v31 = [v20 userInfo];
        uint64_t v32 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v32 + 16) && (uint64_t v35 = sub_100042F50(v33, v34), (v36 & 1) != 0))
        {
          sub_10009B208(*(void *)(v32 + 56) + 32 * v35, (uint64_t)&v68);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*((void *)&v69 + 1))
          {
            sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
            if (swift_dynamicCast())
            {
              self;
              if (swift_dynamicCastObjCClass())
              {
                swift_beginAccess();
                unint64_t v37 = *(void *)(a11 + 16);
                swift_bridgeObjectRetain();
                char v38 = sub_100109110((uint64_t)v67, v37);
                swift_bridgeObjectRelease();
                if (v38)
                {
                  id v39 = (void *)static DOCLog.UI.getter();
                  static os_log_type_t.debug.getter();
                  sub_1000CBE70((uint64_t *)&unk_100708800);
                  uint64_t v40 = swift_allocObject();
                  *(_OWORD *)(v40 + 16) = xmmword_1005A0030;
                  *(void *)(v40 + 56) = &type metadata for String;
                  *(void *)(v40 + 64) = sub_100073F48();
                  *(void *)(v40 + 32) = 0xD000000000000076;
                  *(void *)(v40 + 40) = 0x80000001005FF580;
                  os_log(_:dso:log:type:_:)();

                  swift_bridgeObjectRelease();
                  sub_100535854(a8, a12, v64, 1, a13, a14 & 1, a10, a4, a5);

                  return;
                }
              }

              goto LABEL_40;
            }
LABEL_63:
            *(void *)&long long v68 = 0;
            *((void *)&v68 + 1) = 0xE000000000000000;
            _StringGuts.grow(_:)(63);
            v58._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
            v58._uint64_t object = (void *)0x80000001005FF6D0;
            String.append(_:)(v58);
            id v59 = [v20 description];
            uint64_t v60 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v62 = v61;

            v63._uint64_t countAndFlagsBits = v60;
            v63._uint64_t object = v62;
            String.append(_:)(v63);
            swift_bridgeObjectRelease();
            _assertionFailure(_:_:file:line:flags:)();
            __break(1u);
            JUMPOUT(0x10053D33CLL);
          }
        }
        else
        {
          long long v68 = 0u;
          long long v69 = 0u;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_1000CBBA4((uint64_t)&v68, (uint64_t *)&unk_100705D60);
        goto LABEL_63;
      }
    }
    os_log_type_t v41 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1005A0230;
    *(void *)(v42 + 56) = &type metadata for String;
    unint64_t v43 = sub_100073F48();
    *(void *)(v42 + 64) = v43;
    *(void *)(v42 + 32) = 0xD000000000000076;
    *(void *)(v42 + 40) = 0x80000001005FF580;
    unint64_t v44 = 0xE400000000000000;
    uint64_t v45 = 1702260557;
    switch((char)a8)
    {
      case 1:
        uint64_t v45 = 2037411651;
        break;
      case 2:
        uint64_t v45 = 0x746163696C707544;
        goto LABEL_46;
      case 3:
        unint64_t v44 = 0xE500000000000000;
        uint64_t v45 = 0x6873617254;
        break;
      case 4:
        unint64_t v44 = 0xE700000000000000;
        uint64_t v45 = 0x68736172746E55;
        break;
      case 5:
        unint64_t v44 = 0xE600000000000000;
        uint64_t v45 = 0x6574656C6544;
        break;
      case 6:
        unint64_t v44 = 0xE700000000000000;
        uint64_t v45 = 0x65766968637241;
        break;
      case 7:
        uint64_t v45 = 0x7669686372616E55;
LABEL_46:
        unint64_t v44 = 0xE900000000000065;
        break;
      default:
        break;
    }
    *(void *)(v42 + 96) = &type metadata for String;
    *(void *)(v42 + 104) = v43;
    *(void *)(v42 + 72) = v45;
    *(void *)(v42 + 80) = v44;
    *(void *)(v42 + 136) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v42 + 144) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v42 + 112) = v20;
    id v51 = v20;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    unint64_t v52 = (void *)swift_allocObject();
    v52[2] = a4;
    v52[3] = a5;
    v52[4] = a1;
    v52[5] = a6;
    v52[6] = v64;
    id v53 = v51;
    sub_1000C0640(a4);
    id v54 = v64;
    id v55 = a6;
    swift_bridgeObjectRetain();
    sub_100544FB8((uint64_t)v53, a10, (uint64_t)sub_1005461A8, (uint64_t)v52);

    swift_release();
  }
  else
  {
    sub_10053D3BC(a4, a5, a1, a6, a7);
    id v26 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_10059B760;
    *(void *)(v27 + 56) = &type metadata for String;
    unint64_t v28 = sub_100073F48();
    *(void *)(v27 + 64) = v28;
    *(void *)(v27 + 32) = 0xD000000000000076;
    *(void *)(v27 + 40) = 0x80000001005FF580;
    unint64_t v29 = 0xE400000000000000;
    uint64_t v30 = 1702260557;
    switch((char)a8)
    {
      case 1:
        uint64_t v30 = 2037411651;
        break;
      case 2:
        uint64_t v30 = 0x746163696C707544;
        goto LABEL_23;
      case 3:
        unint64_t v29 = 0xE500000000000000;
        uint64_t v30 = 0x6873617254;
        break;
      case 4:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x68736172746E55;
        break;
      case 5:
        unint64_t v29 = 0xE600000000000000;
        uint64_t v30 = 0x6574656C6544;
        break;
      case 6:
        unint64_t v29 = 0xE700000000000000;
        uint64_t v30 = 0x65766968637241;
        break;
      case 7:
        uint64_t v30 = 0x7669686372616E55;
LABEL_23:
        unint64_t v29 = 0xE900000000000065;
        break;
      default:
        break;
    }
    *(void *)(v27 + 96) = &type metadata for String;
    *(void *)(v27 + 104) = v28;
    *(void *)(v27 + 72) = v30;
    *(void *)(v27 + 80) = v29;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
  }
}

void sub_10053D3BC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  if (a1)
  {
    if (a3)
    {
      swift_retain();
      id v8 = a3;
    }
    else
    {
      self;
      uint64_t v13 = swift_dynamicCastObjCClass();
      if (v13)
      {
        id v14 = (void *)v13;
        sub_1000C0640(a1);
        id v15 = a4;
        id v16 = [v14 transferResults];
        if (v16)
        {
          uint64_t v17 = v16;
          sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
          uint64_t v18 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v8 = sub_100534E80(v18);
          swift_bridgeObjectRelease();
        }
        else
        {

          id v8 = 0;
        }
      }
      else
      {
        if (a5)
        {
          sub_1000CBE70((uint64_t *)&unk_1007084E0);
          uint64_t v19 = swift_allocObject();
          *(_OWORD *)(v19 + 16) = xmmword_1005A04F0;
          *(void *)(v19 + 32) = a5;
          aBlock[0] = v19;
          swift_retain();
          specialized Array._endMutation()();
          id v8 = (void *)aBlock[0];
        }
        else
        {
          swift_retain();
          id v8 = 0;
        }
        id v20 = a5;
      }
    }
    NSString v9 = (void *)swift_allocObject();
    v9[2] = a1;
    v9[3] = a2;
    v9[4] = v8;
    aBlock[4] = sub_1005461D0;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B61D8;
    NSString v10 = _Block_copy(aBlock);
    sub_1000C0640(a1);
    swift_bridgeObjectRetain();
    swift_release();
    DOCRunInMainThread();
    sub_1000A7258(a1);
    _Block_release(v10);
  }
}

uint64_t sub_10053D5FC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, void *a6)
{
  NSString v9 = *(void **)(a3 + *a6);
  *(void *)(a3 + *a6) = a1;
  id v10 = a1;

  if (!a1) {
    return a4(0, a2, 1);
  }
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1005A04F0;
  *(void *)(v11 + 32) = v10;
  uint64_t v14 = v11;
  specialized Array._endMutation()();
  id v12 = v10;
  a4(v14, a2, 1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10053D700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, char a6, uint64_t a7, uint64_t a8)
{
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v13 pathExtension];

  uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v17 = v16;

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [v18 stringByDeletingPathExtension];

  id v20 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  sub_100545390(a1, v20, v22, v15, v17, a5, a6, a7, a8);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void sub_10053D824(uint64_t a1, uint64_t a2, void (*a3)(void *, uint64_t))
{
  sub_1000CBC00(a1, (uint64_t)v7, (uint64_t *)&unk_100705D60);
  if (v8)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    if (swift_dynamicCast()) {
      Swift::String v5 = v6;
    }
    else {
      Swift::String v5 = 0;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_100705D60);
    Swift::String v5 = 0;
  }
  a3(v5, a2);
}

void sub_10053D8E4(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v6 = (void *)swift_allocObject();
  uint64_t v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v9[4] = sub_100545B88;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1000666D8;
  v9[3] = &unk_1006B5C88;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  id v8 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

id sub_10053D9C4(uint64_t a1, unint64_t a2, char a3, void (*a4)(id), uint64_t a5, void *a6, void *a7)
{
  id v31 = a7;
  uint64_t v34 = a4;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v12 - 8);
  uint64_t v33 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v30 = a1;
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v16 = [self alertControllerWithTitle:0 message:v15 preferredStyle:1];

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    NSString v18 = result;
    v37._uint64_t object = (void *)0xE200000000000000;
    v19._uint64_t countAndFlagsBits = 19279;
    v19._uint64_t object = (void *)0xE200000000000000;
    v20._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v20._uint64_t object = (void *)0xEB00000000656C62;
    v21._uint64_t countAndFlagsBits = 0;
    v21._uint64_t object = (void *)0xE000000000000000;
    v37._uint64_t countAndFlagsBits = 19279;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v37);

    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = a3 & 1;
    *(void *)(v22 + 24) = v34;
    *(void *)(v22 + 32) = a5;
    *(void *)(v22 + 40) = a6;
    swift_retain();
    id v23 = a6;
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = (uint64_t)sub_100545B74;
    aBlock[5] = v22;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10041B2E4;
    void aBlock[3] = (uint64_t)&unk_1006B5B48;
    uint64_t v25 = _Block_copy(aBlock);
    swift_release();
    id v26 = [self actionWithTitle:v24 style:0 handler:v25];
    _Block_release(v25);

    [v16 addAction:v26];
    [v16 setPreferredAction:v26];
    if ((a3 & 1) == 0) {
      v34(v23);
    }
    [v31 presentViewController:v16 animated:1 completion:0];
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v35 = sub_10009B0E4(0xD000000000000075, 0x80000001005FF1C0, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_10009B0E4(v30, a2, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: prompting user with message: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (id)(*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v14, v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10053DE3C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  if (a2)
  {
    id v8 = (void *)swift_allocObject();
    v8[2] = a3;
    v8[3] = a4;
    v8[4] = a5;
    v11[4] = sub_100545B88;
    _OWORD v11[5] = v8;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_1000666D8;
    v11[3] = &unk_1006B5B98;
    NSString v9 = _Block_copy(v11);
    swift_retain();
    id v10 = a5;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v9);
  }
}

uint64_t sub_10053DF24(unint64_t a1, uint64_t a2, uint64_t (*a3)(void, uint64_t), uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v13 = a1 & 0xFFFFFFFFFFFFFF8;
  if (!(a1 >> 62))
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v14) {
      goto LABEL_4;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    NSString v24 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_10059B760;
    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v26 = sub_100073F48();
    *(void *)(v25 + 64) = v26;
    *(void *)(v25 + 32) = 0xD000000000000032;
    *(void *)(v25 + 40) = 0x80000001005FF990;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v27 = String.init<A>(describing:)();
    *(void *)(v25 + 96) = &type metadata for String;
    *(void *)(v25 + 104) = v26;
    *(void *)(v25 + 72) = v27;
    *(void *)(v25 + 80) = v28;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return a3(0, a2);
  }
LABEL_4:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v13 + 16))
    {
      __break(1u);
      return result;
    }
    id v16 = *(id *)(a1 + 32);
  }
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_1000CBE70(&qword_10070AE10);
  uint64_t v18 = *(void *)(type metadata accessor for DOCOperationItem() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1005A0030;
  *(void *)(v20 + v19) = a5;
  swift_storeEnumTagMultiPayload();
  Swift::String v21 = (void *)swift_allocObject();
  v21[2] = a3;
  void v21[3] = a4;
  v21[4] = a2;
  id v22 = a5;
  id v23 = v17;
  swift_retain();
  swift_errorRetain();
  sub_100535854(7, v20, v17, 1, 1, 0, a7, sub_100546A7C, (uint64_t)v21);
  swift_bridgeObjectRelease();

  return swift_release();
}

void sub_10053E23C(unint64_t a1, void (*a2)(void))
{
  if (!a1) {
    goto LABEL_10;
  }
  unint64_t v3 = a1;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_4;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    a1 = 0;
    goto LABEL_10;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_9;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)(v4 + 16))
    {
      __break(1u);
      return;
    }
    id v6 = *(id *)(v3 + 32);
  }
  id v7 = v6;
  swift_bridgeObjectRelease();
  a1 = (unint64_t)v7;
LABEL_10:
  id v8 = (id)a1;
  a2();
}

void sub_10053E330(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100711880);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = a2;
  aBlock[4] = sub_100546630;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000CAE4;
  void aBlock[3] = &unk_1006B67C8;
  id v10 = _Block_copy(aBlock);
  id v11 = a2;
  swift_release();
  [v11 setCreateFolderCompletionBlock:v10];
  _Block_release(v10);
}

uint64_t sub_10053E4F4(void *a1, uint64_t a2)
{
  if (a2)
  {
    swift_errorRetain();
    sub_1000CBE70(&qword_100711880);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    id v3 = a1;
    dispatch thunk of DOCCreateFolderOperation.folderItem.setter();
    id v4 = v3;
    sub_1000CBE70(&qword_100711880);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_10053E590(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  id v10 = self;
  id v11 = a3;
  swift_bridgeObjectRetain();
  id v12 = [v10 shared];
  id v13 = objc_allocWithZone((Class)type metadata accessor for DOCCreateFolderOperation());
  uint64_t v14 = (void *)DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)();
  [v14 setShouldBounceOnCollision:a6 & 1];
  NSString v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  v19[4] = sub_1005462C0;
  v19[5] = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  void v19[2] = sub_10000CAE4;
  v19[3] = &unk_1006B6408;
  id v16 = _Block_copy(v19);
  id v17 = v14;
  swift_retain();
  swift_release();
  [v17 setCreateFolderCompletionBlock:v16];
  _Block_release(v16);

  id v18 = [self defaultManager];
  [v18 scheduleAction:v17];
}

uint64_t sub_10053E758(void *a1, uint64_t a2, uint64_t a3, void (*a4)(long long *, uint64_t))
{
  id v7 = a1;
  dispatch thunk of DOCCreateFolderOperation.folderItem.setter();
  if (a1)
  {
    *((void *)&v11 + 1) = sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    *(void *)&long long v10 = v7;
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  id v8 = v7;
  a4(&v10, a2);
  return sub_1000CBBA4((uint64_t)&v10, (uint64_t *)&unk_100705D60);
}

void sub_10053E808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1000CBC00(a1, (uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
  if (v14)
  {
    sub_1000A54B0(&aBlock, v11);
    sub_10009B208((uint64_t)v11, (uint64_t)v10);
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    swift_dynamicCast();
    sub_10009B1B8((uint64_t)v11);
    uint64_t v6 = v17;
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a3;
  v7[3] = a4;
  v7[4] = v6;
  NSString v15 = sub_1000D4A60;
  id v16 = v7;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  id v13 = sub_1000666D8;
  uint64_t v14 = &unk_1006B63B8;
  id v8 = _Block_copy(&aBlock);
  id v9 = v6;
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v8);
}

void sub_10053E968(uint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  id v12 = self;
  swift_bridgeObjectRetain();
  id v13 = a2;
  id v14 = [v12 shared];
  id v15 = objc_allocWithZone((Class)type metadata accessor for DOCMoveOperation());
  id v16 = sub_100198CE0(a1, v13, v14);
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = a3;
  uint64_t v27 = sub_10054658C;
  uint64_t v28 = v17;
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_10044D134;
  unint64_t v26 = &unk_1006B66D8;
  id v18 = _Block_copy(&v23);
  unint64_t v19 = v16;
  swift_release();
  [v19 setErrorRecoveryHandler:v18];
  _Block_release(v18);

  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a4;
  *(void *)(v20 + 24) = a5;
  uint64_t v27 = sub_100547398;
  uint64_t v28 = v20;
  id v23 = _NSConcreteStackBlock;
  uint64_t v24 = 1107296256;
  uint64_t v25 = sub_1001950CC;
  unint64_t v26 = &unk_1006B6728;
  Swift::String v21 = _Block_copy(&v23);
  id v22 = v19;
  swift_retain();
  swift_release();
  [v22 setActionCompletionBlock:v21];
  _Block_release(v21);

  [v6 scheduleAction:v22];
}

void sub_10053EB98(uint64_t a1, char a2)
{
  id v6 = (id)_convertErrorToNSError(_:)();
  if ([v6 code] == (id)-1001)
  {
    if ([v6 recoveryAttempter])
    {
      if (a2) {
        uint64_t v3 = 2;
      }
      else {
        uint64_t v3 = 1;
      }
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
      sub_1000A54B0(&v8, &v9);
      sub_10009E6C4(0, (unint64_t *)&qword_100706710);
      swift_dynamicCast();
      id v4 = v6;
      uint64_t v5 = (void *)_convertErrorToNSError(_:)();

      [v7 attemptRecoveryFromError:v5 optionIndex:v3];
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
  }
}

uint64_t sub_10053ECCC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v9 = sub_1000CBE70(&qword_100719840);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_10053E968(a3, a4, a5, (uint64_t)sub_100546578, v13);
  return swift_release();
}

void sub_10053EE2C(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone((Class)FPDeleteOperation);
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithItems:isa];

  [v6 setFinishAfterPreflight:1];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v17 = sub_100546264;
  uint64_t v18 = v7;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_1001950CC;
  id v16 = &unk_1006B62F0;
  long long v8 = _Block_copy(&v13);
  id v9 = v6;
  swift_retain();
  swift_release();
  [v9 setActionCompletionBlock:v8];
  _Block_release(v8);

  uint64_t v17 = sub_10053F144;
  uint64_t v18 = 0;
  uint64_t v13 = _NSConcreteStackBlock;
  uint64_t v14 = 1107296256;
  uint64_t v15 = sub_10044D134;
  id v16 = &unk_1006B6318;
  uint64_t v10 = _Block_copy(&v13);
  id v11 = v9;
  [v11 setErrorRecoveryHandler:v10];
  _Block_release(v10);

  id v12 = [self defaultManager];
  [v12 scheduleAction:v11];
}

uint64_t sub_10053F058(uint64_t a1, void (*a2)(void *, id))
{
  if (!a1) {
    goto LABEL_5;
  }
  swift_errorRetain();
  uint64_t v3 = (void *)_convertErrorToNSError(_:)();
  char v4 = NSError.isUserCancelledError.getter();

  if ((v4 & 1) == 0)
  {
    swift_errorRelease();
LABEL_5:
    id v5 = [objc_allocWithZone((Class)NSError) init:0, 0, 0];
    a2(v7, v5);

    return sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_100705D60);
  }
  v7[3] = &type metadata for String;
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  a2(v7, 0);
  swift_errorRelease();
  return sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_100705D60);
}

void sub_10053F144()
{
  uint64_t v0 = (void *)_convertErrorToNSError(_:)();
  id v1 = [v0 recoveryAttempter];

  if (v1)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
    sub_1000A54B0(&v4, &v5);
    sub_10009E6C4(0, (unint64_t *)&qword_100706710);
    swift_dynamicCast();
    id v2 = (void *)_convertErrorToNSError(_:)();
    [v3 attemptRecoveryFromError:v2 optionIndex:0];
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10053F228(void (*a1)(void *, void), uint64_t a2, unint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v29 = a5;
  uint64_t v9 = type metadata accessor for DOCOperationItem();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (void **)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v15 = (void *)((char *)v27 - v14);
  unint64_t v30 = a3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (!v16)
  {
LABEL_16:
    sub_100535854(5, (uint64_t)v17, 0, 0, 0, 1, v29, 0, 0);
    swift_bridgeObjectRelease();
    v31[3] = sub_1000CBE70(&qword_100708810);
    v31[0] = v30;
    swift_bridgeObjectRetain();
    a1(v31, 0);
    return sub_1000CBBA4((uint64_t)v31, (uint64_t *)&unk_100705D60);
  }
  v31[0] = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190F0C(0, v16 & ~(v16 >> 63), 0);
  if ((v16 & 0x8000000000000000) == 0)
  {
    v27[1] = a4;
    v27[2] = a2;
    uint64_t v28 = a1;
    uint64_t v17 = (void *)v31[0];
    if ((v30 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v16; ++i)
      {
        uint64_t *v15 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_storeEnumTagMultiPayload();
        v31[0] = v17;
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1)
        {
          sub_100190F0C(v20 > 1, v21 + 1, 1);
          uint64_t v17 = (void *)v31[0];
        }
        v17[2] = v21 + 1;
        sub_10010C430((uint64_t)v15, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v21);
      }
    }
    else
    {
      id v22 = (void **)(v30 + 32);
      do
      {
        id v23 = *v22;
        *uint64_t v13 = *v22;
        swift_storeEnumTagMultiPayload();
        v31[0] = v17;
        unint64_t v25 = v17[2];
        unint64_t v24 = v17[3];
        id v26 = v23;
        if (v25 >= v24 >> 1)
        {
          sub_100190F0C(v24 > 1, v25 + 1, 1);
          uint64_t v17 = (void *)v31[0];
        }
        v17[2] = v25 + 1;
        sub_10010C430((uint64_t)v13, (uint64_t)v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v25);
        ++v22;
        --v16;
      }
      while (v16);
    }
    a1 = v28;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_10053F530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    id v8 = (id)_convertErrorToNSError(_:)();
    if (NSError.isUserCancelledError.getter())
    {
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = a3;
      *(void *)(v6 + 24) = a4;
      aBlock[4] = sub_100045B40;
      aBlock[5] = v6;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B62A0;
      uint64_t v7 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      DOCRunInMainThread();
      _Block_release(v7);
    }
    else
    {
    }
  }
}

void sub_10053F650(uint64_t a1, void **a2, uint64_t a3, void *a4, int a5, void *a6)
{
  unint64_t v44 = a6;
  HIDWORD(v39) = a5;
  uint64_t v41 = a1;
  uint64_t v43 = sub_1000CBE70(&qword_100708100);
  uint64_t v9 = *(void *)(v43 - 8);
  uint64_t v42 = (char *)&v39 - ((*(void *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a4;
  id v10 = [a4 filename];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 pathExtension];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v15 = v14;

    Swift::Bool v16 = String.isKnownExtension()();
    NSString v17 = String._bridgeToObjectiveC()();
    id v18 = [v17 pathExtension];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::Bool v19 = String.isKnownExtension()();
    swift_bridgeObjectRelease();
    if (v16)
    {
      unint64_t v20 = v44;
      if (v19)
      {
        if ((v39 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
LABEL_10:
          uint64_t v28 = v40;
          type metadata accessor for DOCRenameOperation();
          uint64_t v29 = self;
          id v30 = v28;
          id v31 = [v29 shared];
          uint64_t v32 = (void *)DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)();
          uint64_t v33 = v42;
          uint64_t v34 = v43;
          (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v42, v41, v43);
          unint64_t v35 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
          uint64_t v36 = swift_allocObject();
          (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v36 + v35, v33, v34);
          unint64_t v49 = sub_1005465A0;
          uint64_t v50 = v36;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          uint64_t v47 = sub_10053BC2C;
          unint64_t v48 = &unk_1006B6778;
          Swift::String v37 = _Block_copy(&aBlock);
          id v38 = v32;
          swift_release();
          [v38 setFinishedBlock:v37];
          _Block_release(v37);

          [v20 scheduleAction:v38];
          return;
        }
        NSString v21 = String._bridgeToObjectiveC()();
        id v22 = [v21 stringByDeletingPathExtension];

        uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v25 = v24;

        long long aBlock = (void **)v23;
        uint64_t v46 = v25;
      }
      else
      {
        long long aBlock = a2;
        uint64_t v46 = a3;
        swift_bridgeObjectRetain();
      }
      v26._uint64_t countAndFlagsBits = 46;
      v26._uint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v26);
      v27._uint64_t countAndFlagsBits = v13;
      v27._uint64_t object = v15;
      String.append(_:)(v27);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v20 = v44;
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_10053FA14(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    v4[0] = a2;
    swift_errorRetain();
  }
  else
  {
    sub_1000CBC00(a1, (uint64_t)v4, (uint64_t *)&unk_100705D60);
    if (v4[3])
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
      if (swift_dynamicCast())
      {
        v4[0] = v3;
        sub_1000CBE70(&qword_100708100);
        return CheckedContinuation.resume(returning:)();
      }
    }
    else
    {
      sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_100705D60);
    }
    v4[0] = [objc_allocWithZone((Class)NSError) init];
  }
  sub_1000CBE70(&qword_100708100);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_10053FB0C(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v19 = a3;
  unint64_t v20 = a4;
  uint64_t v6 = sub_1000CBE70(&qword_100710CC0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (a2 >> 62)
  {
    sub_1000CBE70((uint64_t *)&unk_100706730);
    unint64_t v10 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    unint64_t v10 = a2;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v12 = (v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v11, v9, v6);
  *(void *)(v15 + v12) = a2;
  *(void *)(v15 + v13) = v19;
  Swift::Bool v16 = v20;
  *(void *)(v15 + v14) = v20;
  swift_bridgeObjectRetain();
  id v17 = v16;
  swift_bridgeObjectRetain();
  sub_100160BC4(v10, (void (*)(void *))sub_1005467B0, v15);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_10053FD00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, void *a5)
{
  uint64_t v10 = sub_1000CBE70(&qword_100710CC0);
  unint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || (swift_getObjectType(), (uint64_t v14 = DOCNode.fpfs_syncFetchFPItem()()) == 0))
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    uint64_t aBlock = static NSError.noSuchFileError.getter();
    CheckedContinuation.resume(throwing:)();
    return;
  }
  uint64_t v15 = (void *)v14;
  id v70 = a5;
  uint64_t v16 = self;
  unint64_t v74 = a3;
  id v17 = (void *)v16;
  swift_bridgeObjectRetain();
  unint64_t v18 = v15;
  uint64_t v19 = v17;
  unint64_t isUniquelyReferenced_nonNull_native = v74;
  id v21 = [v19 shared];
  id v22 = objc_allocWithZone((Class)type metadata accessor for DOCCopyOperation());
  uint64_t v23 = DOCCopyOperation.init(items:destinationFolder:isDuplication:undoManager:)(isUniquelyReferenced_nonNull_native, (void *)v18, 1, v21);
  [v23 setLastUsageUpdatePolicy:2];
  [v23 setShouldBounceOnCollision:1];
  if (!a4) {
    goto LABEL_38;
  }
  uint64_t v73 = v23;
  uint64_t v64 = v12;
  uint64_t v24 = (void *)sub_10049617C((uint64_t)_swiftEmptyArrayStorage);
  if (isUniquelyReferenced_nonNull_native >> 62)
  {
LABEL_42:
    swift_bridgeObjectRetain_n();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v25 = *(void *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  uint64_t v65 = v13;
  unint64_t v66 = v11;
  uint64_t v67 = a2;
  unint64_t v68 = v18;
  uint64_t v69 = v10;
  if (!v25)
  {
    unint64_t v18 = (unint64_t)v73;
LABEL_37:
    swift_bridgeObjectRelease_n();
    sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
    sub_10035C084((unint64_t *)&qword_100708240, (unint64_t *)&qword_1007069C0);
    id v58 = (id)v18;
    swift_bridgeObjectRetain();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v58 setTargetFilenamesByItem:isa];
    swift_bridgeObjectRelease();

    uint64_t v23 = (char *)v18;
    unint64_t v18 = v68;
    uint64_t v10 = v69;
    unint64_t v11 = v66;
    a2 = v67;
    uint64_t v12 = v64;
    uint64_t v13 = v65;
LABEL_38:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    unint64_t v60 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v61 = swift_allocObject();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v61 + v60, v13, v10);
    *(void *)(v61 + ((v12 + v60 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
    uint64_t v81 = sub_100546914;
    uint64_t v82 = v61;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v78 = 1107296256;
    uint64_t v79 = sub_1001950CC;
    Swift::String v80 = &unk_1006B6840;
    uint64_t v62 = _Block_copy(&aBlock);
    Swift::String v63 = v23;
    swift_release();
    [v63 setActionCompletionBlock:v62];
    _Block_release(v62);

    [v70 scheduleAction:v63];
    return;
  }
  a2 = v25;
  unint64_t v11 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  Swift::String v26 = a4 + 5;
  unint64_t v75 = a4[2];
  uint64_t v13 = 4;
  unint64_t v18 = (unint64_t)v73;
  unint64_t v71 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  uint64_t v72 = v25;
  while (1)
  {
    unint64_t v27 = v13 - 4;
    if (v11) {
      uint64_t v28 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v28 = (uint64_t *)*(id *)(isUniquelyReferenced_nonNull_native + 8 * v13);
    }
    a4 = v28;
    uint64_t v10 = v13 - 3;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v27 >= v75)
    {

      goto LABEL_9;
    }
    id v29 = [v28 filename];
    if (!v29) {
      break;
    }
    id v30 = v29;
    id v31 = [v29 pathExtension];

    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v33;

    swift_bridgeObjectRetain();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [v34 pathExtension];

    uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v38 = v37;

    uint64_t v39 = *(v26 - 1);
    uint64_t v76 = *v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v40 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v40 = v36 & 0xFFFFFFFFFFFFLL;
    }
    if (v40) {
      goto LABEL_19;
    }
    uint64_t v41 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v41 = v32 & 0xFFFFFFFFFFFFLL;
    }
    if (!v41)
    {
LABEL_19:
      a2 = v39;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t aBlock = v39;
      uint64_t v78 = v76;
      v42._uint64_t countAndFlagsBits = 46;
      v42._uint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v42);
      v43._uint64_t countAndFlagsBits = v32;
      v43._uint64_t object = (void *)v11;
      String.append(_:)(v43);
      swift_bridgeObjectRelease();
      a2 = aBlock;
      uint64_t v76 = v78;
    }
    a4 = a4;
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t aBlock = (uint64_t)v24;
    unint64_t v18 = sub_10017C424((uint64_t)a4);
    uint64_t v45 = v24[2];
    BOOL v46 = (v44 & 1) == 0;
    uint64_t v47 = v45 + v46;
    if (__OFADD__(v45, v46)) {
      goto LABEL_40;
    }
    unint64_t v11 = v44;
    if (v24[3] >= v47)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100359814();
      }
    }
    else
    {
      sub_1003502C8(v47, isUniquelyReferenced_nonNull_native);
      unint64_t v48 = sub_10017C424((uint64_t)a4);
      if ((v11 & 1) != (v49 & 1)) {
        goto LABEL_44;
      }
      unint64_t v18 = v48;
    }
    unint64_t isUniquelyReferenced_nonNull_native = v74;
    uint64_t v24 = (void *)aBlock;
    if (v11)
    {
      uint64_t v50 = (uint64_t *)(*(void *)(aBlock + 56) + 16 * v18);
      swift_bridgeObjectRelease();
      uint64_t v51 = v76;
      *uint64_t v50 = a2;
      v50[1] = v51;
    }
    else
    {
      *(void *)(aBlock + 8 * (v18 >> 6) + 64) |= 1 << v18;
      *(void *)(v24[6] + 8 * v18) = a4;
      unint64_t v52 = (uint64_t *)(v24[7] + 16 * v18);
      uint64_t v53 = v76;
      *unint64_t v52 = a2;
      v52[1] = v53;
      uint64_t v54 = v24[2];
      BOOL v55 = __OFADD__(v54, 1);
      uint64_t v56 = v54 + 1;
      if (v55) {
        goto LABEL_41;
      }
      v24[2] = v56;
      id v57 = a4;
    }

    swift_bridgeObjectRelease();
    a2 = v72;
    unint64_t v18 = (unint64_t)v73;
    unint64_t v11 = v71;
LABEL_9:
    v26 += 2;
    ++v13;
    if (v10 == a2) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_44:
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

uint64_t sub_1005403F4(uint64_t a1, int a2, id a3)
{
  if (a1)
  {
    swift_errorRetain();
LABEL_3:
    sub_1000CBE70(&qword_100710CC0);
    return CheckedContinuation.resume(throwing:)();
  }
  id v4 = [a3 transferResults];
  if (!v4)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    static NSError.noSuchFileError.getter();
    goto LABEL_3;
  }
  long long v5 = v4;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1002F5254(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1000CBE70(&qword_100710CC0);
  CheckedContinuation.resume(returning:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100540520(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9 = sub_1000CBE70((uint64_t *)&unk_10071B8E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v37 = (void *)Strong;
    NSString v34 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v16(v14, a1, v9);
    uint64_t v17 = *(unsigned __int8 *)(v10 + 80);
    unint64_t v38 = a3;
    uint64_t v33 = a1;
    uint64_t v18 = (v17 + 16) & ~v17;
    id v35 = a4;
    uint64_t v36 = a5;
    uint64_t v19 = swift_allocObject();
    unint64_t v20 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
    v20(v19 + v18, v14, v9);
    id v21 = v34;
    v16(v34, v33, v9);
    uint64_t v23 = v36;
    id v22 = v37;
    uint64_t v24 = v35;
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v25 + v18;
    unint64_t v27 = v38;
    v20(v26, v21, v9);
    uint64_t v28 = v19;
    uint64_t v29 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v30 = (void *)swift_allocObject();
    void v30[2] = v29;
    v30[3] = sub_1005463EC;
    v30[4] = v25;
    v30[5] = v27;
    v30[6] = v23;
    v30[7] = sub_10054636C;
    v30[8] = v28;
    if (v24)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      id v31 = v24;
      sub_100540B40(v31, v29, (void (*)(char *, uint64_t))sub_1005463EC, v25, v27, v23, (uint64_t)sub_10054636C, v28);
      swift_release();

      swift_release();
      swift_release();
      return swift_release();
    }
    else
    {
      if (v27 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000CBE70((uint64_t *)&unk_100706730);
        unint64_t v27 = _bridgeCocoaArray<A>(_:)();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      }
      swift_retain();
      swift_retain();
      sub_10015FB9C(v27, (unint64_t)sub_1005463EC, v25, (void (*)(void))sub_1005464C8, (uint64_t)v30);

      swift_release();
      swift_bridgeObjectRelease();
      swift_release_n();
      return swift_release_n();
    }
  }
  else
  {
    uint64_t v39 = 0;
    return AsyncThrowingStream.Continuation.finish(throwing:)();
  }
}

uint64_t sub_100540910(double a1)
{
  uint64_t v2 = sub_1000CBE70(&qword_10071B8F8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = a1;
  char v8 = 0;
  sub_1000CBE70((uint64_t *)&unk_10071B8E8);
  AsyncThrowingStream.Continuation.yield(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100540A04(void *a1, char a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071B8F8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1;
  if (a2)
  {
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_10071B8E8);
  }
  else
  {
    char v11 = 1;
    id v8 = a1;
    sub_1000CBE70((uint64_t *)&unk_10071B8E8);
    AsyncThrowingStream.Continuation.yield(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v10 = 0;
  }
  return AsyncThrowingStream.Continuation.finish(throwing:)();
}

void sub_100540B40(void *a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = (void *)Strong;
    uint64_t v17 = self;
    swift_bridgeObjectRetain();
    id v18 = a1;
    id v19 = [v17 shared];
    id v20 = objc_allocWithZone((Class)type metadata accessor for DOCArchiveOperation());
    id v21 = sub_10038F9F8(a5, v18, v19);
    [v21 setArchiveFormat:a6];
    id v22 = (uint64_t *)&v21[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler];
    uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressHandler];
    *id v22 = a7;
    v22[1] = a8;
    sub_1000C0640(a7);
    sub_1000A7258(v23);
    aBlock[0] = [v21 progress];
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v24 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    swift_release();

    uint64_t v25 = *(void **)&v21[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation];
    *(void *)&v21[OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation] = v24;

    uint64_t v26 = (void *)swift_allocObject();
    void v26[2] = v21;
    v26[3] = a3;
    v26[4] = a4;
    aBlock[4] = sub_100546560;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_10000CAE4;
    void aBlock[3] = &unk_1006B6660;
    unint64_t v27 = _Block_copy(aBlock);
    uint64_t v28 = v21;
    swift_retain();
    swift_release();
    [v28 setArchiveCompletionBlock:v27];
    _Block_release(v27);

    [v16 scheduleAction:v28];
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    uint64_t v28 = (char *)static NSError.userCancelledError.getter();
    a3(v28, 1);
  }
}

void sub_100540E2C(void *a1, void *a2, uint64_t a3, void (*a4)(void *, uint64_t))
{
  uint64_t v8 = OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation;
  uint64_t v9 = *(void **)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_progressObservation);
  if (v9)
  {
    id v10 = v9;
    dispatch thunk of NSKeyValueObservation.invalidate()();

    uint64_t v9 = *(void **)(a3 + v8);
  }
  *(void *)(a3 + v8) = 0;

  char v11 = *(void **)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem);
  *(void *)(a3 + OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem) = a1;
  id v12 = a1;

  if (a2)
  {
    swift_errorRetain();
    a4(a2, 1);
    swift_errorRelease();
  }
  if (a1)
  {
    id v13 = v12;
    a4(a1, 0);
  }
  else
  {
    a4(0, 0);
  }
}

void sub_100540F54(void *a1, void (*a2)(id, uint64_t), uint64_t a3, void (*a4)(void))
{
  if (a1 && (id v6 = objc_msgSend(a1, "fpfs_fpItem")) != 0)
  {
    id v7 = v6;
    a4();
  }
  else
  {
    sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    id v7 = (id)static NSError.userCancelledError.getter();
    a2(v7, 1);
  }
}

void sub_100541004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v7 = self;
  swift_bridgeObjectRetain();
  id v8 = [v7 shared];
  id v9 = objc_allocWithZone((Class)type metadata accessor for DOCDeleteOperation());
  id v10 = (void *)DOCDeleteOperation.init(items:originalOperation:undoManager:)();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  v13[4] = sub_100547398;
  _OWORD v13[5] = v11;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_1001950CC;
  v13[3] = &unk_1006B6930;
  id v12 = _Block_copy(v13);
  swift_retain();
  swift_release();
  [v10 setActionCompletionBlock:v12];
  _Block_release(v12);
  [v4 scheduleAction:v10];
}

uint64_t sub_100541168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1000CBE70(&qword_100719840);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  double v8 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5, v8);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  sub_100541004(a3, (uint64_t)sub_100546578, v10);
  return swift_release();
}

void sub_1005412B0(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_100719840);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  double v7 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v10 = self;
  swift_bridgeObjectRetain();
  id v11 = [v10 shared];
  uint64_t v12 = (objc_class *)type metadata accessor for DOCTrashOperation();
  id v13 = (char *)objc_allocWithZone(v12);
  *(void *)&v13[OBJC_IVAR____TtC5Files17DOCTrashOperation_sourceParentFolderItem] = 0;
  *(void *)&v13[OBJC_IVAR____TtC5Files17DOCTrashOperation_undoManager] = v11;
  sub_10009E6C4(0, (unint64_t *)&qword_1007069C0);
  id v14 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v22.receiver = v13;
  v22.super_class = v12;
  uint64_t v16 = (char *)[v22 initWithItems:isa];

  uint64_t v17 = *(void **)&v16[OBJC_IVAR____TtC5Files17DOCTrashOperation_undoManager];
  id v18 = v16;
  [v17 registerUndoOperationForSender:v18];

  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100546578;
  *(void *)(v19 + 24) = v9;
  aBlock[4] = sub_1003BE358;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1001950CC;
  void aBlock[3] = &unk_1006B69A8;
  id v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v18 setActionCompletionBlock:v20];
  _Block_release(v20);
  [a2 scheduleAction:v18];
  swift_release();
}

uint64_t sub_1005415A0(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    sub_1000CBE70(&qword_100719840);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    sub_1000CBE70(&qword_100719840);
    return CheckedContinuation.resume(returning:)();
  }
}

void sub_100541604()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    swift_beginAccess();
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = (void *)_convertErrorToNSError(_:)();
      sub_100544AA8(v4, v3);

      id v1 = v4;
    }
  }
}

uint64_t sub_1005416AC(uint64_t a1, void *a2)
{
  if (a1)
  {
    uint64_t v3 = (void *)_convertErrorToNSError(_:)();
    uint64_t v4 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_10059B760;
    *(void *)(v5 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
    *(void *)(v5 + 64) = sub_10035C084(&qword_10071B8E0, (unint64_t *)&unk_1007076A0);
    *(void *)(v5 + 32) = a2;
    *(void *)(v5 + 96) = sub_10009E6C4(0, (unint64_t *)&qword_100707ED0);
    *(void *)(v5 + 104) = sub_10035C084((unint64_t *)&qword_100708B60, (unint64_t *)&qword_100707ED0);
    *(void *)(v5 + 72) = v3;
    id v6 = a2;
    id v7 = v3;
    os_log(_:dso:log:type:_:)();
  }
  else
  {
    uint64_t v4 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
    *(void *)(v8 + 56) = sub_10009E6C4(0, (unint64_t *)&unk_1007076A0);
    *(void *)(v8 + 64) = sub_10035C084(&qword_10071B8E0, (unint64_t *)&unk_1007076A0);
    *(void *)(v8 + 32) = a2;
    id v9 = a2;
    os_log(_:dso:log:type:_:)();
  }

  return swift_bridgeObjectRelease();
}

void sub_1005418D0(NSObject *a1, uint64_t a2, NSObject *a3, void *a4, uint64_t a5)
{
  uint64_t v54 = a5;
  os_log_t v55 = a1;
  id v58 = a3;
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_100708E70);
  uint64_t v53 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v56 = *(void *)(v10 - 8);
  uint64_t v57 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  id v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v52 - v14;
  uint64_t v16 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for URL();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  objc_super v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_errorRetain();
    static Logger.UI.getter();
    swift_errorRetain();
    id v23 = a4;
    swift_errorRetain();
    uint64_t v24 = v23;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      os_log_t v55 = v25;
      uint64_t v28 = v27;
      uint64_t v29 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 138412546;
      id v59 = v24;
      id v30 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v29 = v24;

      *(_WORD *)(v28 + 12) = 2112;
      swift_errorRetain();
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      id v59 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v29[1] = v31;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v32 = v55;
      _os_log_impl((void *)&_mh_execute_header, v55, v26, "Error fetching the url for item %@: %@", (uint8_t *)v28, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v15, v57);
    Swift::String v43 = v58;
  }
  else
  {
    uint64_t v33 = v9;
    uint64_t v35 = v53;
    uint64_t v34 = v54;
    sub_1000CBC00((uint64_t)v55, (uint64_t)v18, &qword_1007076B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_1000CBBA4((uint64_t)v18, &qword_1007076B0);
      uint64_t v36 = v13;
      static Logger.UI.getter();
      unint64_t v37 = a4;
      unint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 138412290;
        id v59 = v37;
        Swift::String v42 = v37;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v41 = v37;

        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Error fetching the url for item: %@ but also did not get an error", v40, 0xCu);
        sub_1000CBE70(&qword_100707CC0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        unint64_t v38 = v37;
      }
      Swift::String v43 = v58;

      (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
    }
    else
    {
      unint64_t v44 = (unint64_t *)(v34 + 16);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
      uint64_t v45 = *(int *)(v7 + 48);
      uint64_t v46 = (uint64_t)v33;
      *(void *)uint64_t v33 = a4;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(&v33[v45], v22, v19);
      swift_beginAccess();
      unint64_t v47 = *v44;
      id v48 = a4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v44 = v47;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v47 = sub_100190998(0, *(void *)(v47 + 16) + 1, 1, v47);
        *unint64_t v44 = v47;
      }
      unint64_t v51 = *(void *)(v47 + 16);
      unint64_t v50 = *(void *)(v47 + 24);
      if (v51 >= v50 >> 1)
      {
        unint64_t v47 = sub_100190998(v50 > 1, v51 + 1, 1, v47);
        *unint64_t v44 = v47;
      }
      Swift::String v43 = v58;
      *(void *)(v47 + 16) = v51 + 1;
      sub_1000CBE0C(v46, v47+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v51, (uint64_t *)&unk_100708E70);
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    }
  }
  dispatch_group_leave(v43);
}

uint64_t sub_100541F74(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v33 = sub_1000CBE70((uint64_t *)&unk_100708E70);
  uint64_t v6 = *(void *)(v33 - 8);
  uint64_t v7 = __chkstk_darwin(v33);
  os_log_t v32 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - v9;
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v34 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    v27[1] = a3;
    uint64_t v28 = a2;
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_100190C40(0, v14, 0);
    uint64_t v16 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v17 = *(void *)(v6 + 72);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v30 = v17;
    uint64_t v31 = v12;
    id v18 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    uint64_t v19 = v34;
    do
    {
      sub_1000CBC00(v16, (uint64_t)v10, (uint64_t *)&unk_100708E70);
      uint64_t v20 = *(int *)(v33 + 48);
      uint64_t v21 = &v32[v20];
      (*v29)(&v32[v20], &v10[v20], v11);
      objc_super v22 = *v18;
      (*v18)(v19, v21, v11);
      sub_1000CBBA4((uint64_t)v10, (uint64_t *)&unk_100708E70);
      uint64_t v15 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190C40(0, v15[2] + 1, 1);
        uint64_t v15 = v35;
      }
      unint64_t v24 = v15[2];
      unint64_t v23 = v15[3];
      if (v24 >= v23 >> 1)
      {
        sub_100190C40(v23 > 1, v24 + 1, 1);
        uint64_t v15 = v35;
      }
      v15[2] = v24 + 1;
      unint64_t v25 = (unint64_t)v15
          + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))
          + *(void *)(v31 + 72) * v24;
      uint64_t v19 = v34;
      v22((char *)v25, v34, v11);
      uint64_t v35 = v15;
      v16 += v30;
      --v14;
    }
    while (v14);
    a2 = v28;
  }
  a2(v15);
  return swift_bridgeObjectRelease();
}

BOOL sub_100542264(void *a1, void *a2)
{
  id v3 = [a1 topLevelBundleIdentifier];
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  LOBYTE(a2) = sub_100109128(v4, v6, a2);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_1005422D8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_10054231C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v37 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v36 - 8);
  uint64_t v11 = __chkstk_darwin(v36);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v22 = 0;
  }
  else
  {
    char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21)
    {
      unint64_t v22 = 0;
    }
    else
    {
      swift_beginAccess();
      unint64_t v22 = *(void *)(*(void *)(a2 + 40) + 16);
    }
  }
  id v23 = [a3 allowedProviderIdentifiers];
  if (v23)
  {
    unint64_t v24 = v23;
    uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v25 = 0;
  }
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [a3 setAllowedProviderIdentifiers:isa];

  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a3;
  *(void *)(v27 + 24) = v25;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)(a2 + 40) + 16) < v22)
  {
    __break(1u);
  }
  else
  {
    id v29 = a3;
    sub_100515DAC(v22, v22, (uint64_t)sub_100545E84, v27);
    uint64_t result = swift_endAccess();
    if (*(void *)(*(void *)(a2 + 40) + 16) == 1)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_100705380);
      uint64_t v30 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v31 = v36;
      v35(v13, v36);
      aBlock[4] = sub_100545E8C;
      aBlock[5] = a2;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000666D8;
      void aBlock[3] = &unk_1006B5EB8;
      os_log_t v32 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_100080268((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_1000CBE70((uint64_t *)&unk_100705390);
      sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
      uint64_t v33 = v37;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v33);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      return ((uint64_t (*)(char *, uint64_t))v35)(v15, v31);
    }
  }
  return result;
}

id sub_10054285C(void *a1, Class isa)
{
  [a1 stopObserving];
  if (isa) {
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  [a1 setAllowedProviderIdentifiers:isa];

  return [a1 startObserving];
}

uint64_t sub_1005428D8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100545E94;
  *(void *)(v3 + 24) = a1;
  void v7[4] = sub_100162A48;
  uint64_t v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  _OWORD v7[2] = sub_100087990;
  v7[3] = &unk_1006B5F08;
  char v4 = _Block_copy(v7);
  uint64_t v5 = v2;
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v5, v4);

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100542A1C(uint64_t a1)
{
  *(unsigned char *)(a1 + 24) = 0;
  uint64_t v2 = (void *)(a1 + 40);
  swift_beginAccess();
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      uint64_t v6 = *(void (**)(uint64_t))(v5 - 8);
      uint64_t v7 = swift_retain();
      v6(v7);
      swift_release();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  *uint64_t v2 = _swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100542AD0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

id sub_100542B10()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v113 = *(void *)(v1 - 8);
  uint64_t v114 = v1;
  __chkstk_darwin(v1);
  uint64_t v111 = (char *)&v102 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for DispatchQoS();
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  id v109 = (char *)&v102 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v115 = (char *)&v102 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v102 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v102 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v102 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v102 - v17;
  id result = [self protectedAppsEnabled];
  if (!result) {
    return result;
  }
  uint64_t v107 = (uint64_t)v15;
  static Logger.UI.getter();
  uint64_t v20 = v0;
  char v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.debug.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v116 = v4;
  uint64_t v117 = v5;
  uint64_t v108 = v9;
  id v105 = v12;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v106 = (void (*)(char *, uint64_t))swift_slowAlloc();
    aBlock[0] = (uint64_t)v106;
    *(_DWORD *)uint64_t v24 = 136315650;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2080;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 22) = 2112;
    unint64_t v118 = v20;
    os_log_type_t v26 = v20;
    uint64_t v4 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v25 = v20;

    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s [PROTECTED APPS] %s %@", (uint8_t *)v24, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    uint64_t v5 = v117;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v27 = *(void (**)(char *, uint64_t))(v5 + 8);
  v27(v18, v4);
  uint64_t v28 = self;
  id v29 = [v28 sharedManager];
  sub_1000B4ADC((SEL *)&selRef_protectedApplications, 0xD00000000000001DLL, 0x80000001005FF490, "%s [PROTECTED APPS] getting OIDs from protectedApplications %s", (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  uint64_t v31 = v30;

  id v32 = [v20 excludedParentOIDs];
  uint64_t v33 = v107;
  uint64_t v106 = v27;
  id v104 = v20;
  if (v32)
  {
    uint64_t v34 = v32;
    uint64_t v35 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v31)
    {
      char v36 = sub_1000082EC(v35, v31);
      swift_bridgeObjectRelease();
      if (v36)
      {
        swift_bridgeObjectRelease();
LABEL_10:
        int v37 = 0;
        uint64_t v38 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
        goto LABEL_19;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (!v31)
  {
    goto LABEL_10;
  }
  uint64_t v103 = v28;
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v39 = v20;
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    Swift::String v43 = (void *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    aBlock[0] = v102;
    *(_DWORD *)uint64_t v42 = 136315906;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 12) = 2080;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v42 + 22) = 2080;
    unint64_t v118 = v31;
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_10071B888);
    uint64_t v44 = String.init<A>(describing:)();
    unint64_t v118 = (void *)sub_10009B0E4(v44, v45, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 32) = 2112;
    unint64_t v118 = v39;
    uint64_t v46 = v39;
    uint64_t v4 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *Swift::String v43 = v39;

    uint64_t v27 = v106;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "%s [PROTECTED APPS] %s setting excluded parent OIDs to: %s for collection: %@", (uint8_t *)v42, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v47 = v107;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v47 = v33;
  }
  v27((char *)v47, v4);
  uint64_t v20 = v104;
  uint64_t v38 = &selRef_nodeDownloadButton_downloadingNode_encounteredError_;
  if (v31)
  {
    v48.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v48.super.Class isa = 0;
  }
  [v39 setExcludedParentOIDs:v48.super.isa];

  int v37 = 1;
  uint64_t v28 = v103;
LABEL_19:
  id v49 = [v28 v38[301]];
  id v50 = [v49 hostIdentifier];

  uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v53 = v52;

  uint64_t v54 = (void *)sub_1000B5830(v51, v53);
  swift_bridgeObjectRelease();
  id result = [v20 allowedProviderIdentifiers];
  if (result)
  {
    os_log_t v55 = result;
    uint64_t v56 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v54)
    {
      char v57 = sub_1000082EC(v56, v54);
      swift_bridgeObjectRelease();
      if (v57)
      {
        id result = (id)swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (!v54)
  {
LABEL_24:
    id v58 = v108;
    if (!v37) {
      return result;
    }
    goto LABEL_34;
  }
  id v59 = v105;
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  unint64_t v60 = v20;
  uint64_t v61 = Logger.logObject.getter();
  os_log_type_t v62 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = swift_slowAlloc();
    uint64_t v64 = (void *)swift_slowAlloc();
    uint64_t v107 = swift_slowAlloc();
    aBlock[0] = v107;
    *(_DWORD *)uint64_t v63 = 136315906;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v63 + 12) = 2080;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v63 + 22) = 2080;
    unint64_t v118 = v54;
    swift_bridgeObjectRetain();
    sub_1000CBE70(&qword_10071B888);
    uint64_t v65 = String.init<A>(describing:)();
    unint64_t v118 = (void *)sub_10009B0E4(v65, v66, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v63 + 32) = 2112;
    unint64_t v118 = v60;
    uint64_t v67 = v60;
    uint64_t v4 = v116;
    uint64_t v20 = v104;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v64 = v60;

    uint64_t v27 = v106;
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s [PROTECTED APPS] %s setting allowedProviderIdentifiers to: %s for collection: %@", (uint8_t *)v63, 0x2Au);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v68 = v105;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    unint64_t v68 = v59;
  }
  v27(v68, v4);
  id v58 = v108;
  if (v54)
  {
    v69.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v69.super.Class isa = 0;
  }
  [v60 setAllowedProviderIdentifiers:v69.super.isa];

LABEL_34:
  static Logger.UI.getter();
  id v70 = v20;
  unint64_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    unint64_t v74 = (void *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    aBlock[0] = v75;
    *(_DWORD *)uint64_t v73 = 136316162;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v73 + 12) = 2080;
    unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v73 + 22) = 2080;
    id v76 = [v70 allowedProviderIdentifiers];
    uint64_t v107 = v75;
    if (v76)
    {
      uint64_t v77 = v76;
      uint64_t v78 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v78 = 0;
    }
    unint64_t v118 = (void *)v78;
    sub_1000CBE70(&qword_10071B888);
    uint64_t v81 = String.init<A>(describing:)();
    unint64_t v118 = (void *)sub_10009B0E4(v81, v82, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 32) = 2080;
    id v83 = [v70 excludedParentOIDs];
    if (v83)
    {
      uint64_t v84 = v83;
      uint64_t v85 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v85 = 0;
    }
    unint64_t v118 = (void *)v85;
    uint64_t v86 = String.init<A>(describing:)();
    unint64_t v118 = (void *)sub_10009B0E4(v86, v87, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v73 + 42) = 2112;
    unint64_t v118 = v70;
    uint64_t v88 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v74 = v70;

    _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s [PROTECTED APPS] %s restarting observation with allowedProviderIdentifiers: %s excludedParentOIDs: %s on collection: %@", (uint8_t *)v73, 0x34u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v4 = v116;
    uint64_t v79 = v108;
    uint64_t v80 = v116;
    uint64_t v27 = v106;
  }
  else
  {

    uint64_t v79 = v58;
    uint64_t v80 = v4;
  }
  v27(v79, v80);
  id result = [v70 doc_isObserving];
  if (result)
  {
    id v89 = v115;
    static Logger.UI.getter();
    uint64_t v90 = v70;
    uint64_t v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v91, v92))
    {
      uint64_t v93 = swift_slowAlloc();
      uint64_t v94 = (void *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v93 = 136315650;
      unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v93 + 12) = 2080;
      unint64_t v118 = (void *)sub_10009B0E4(0xD00000000000001ELL, 0x80000001005FF420, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v93 + 22) = 2112;
      unint64_t v118 = v90;
      id v95 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v94 = v90;

      _os_log_impl((void *)&_mh_execute_header, v91, v92, "%s [PROTECTED APPS] %s restarting observation for %@", (uint8_t *)v93, 0x20u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v106(v115, v116);
    }
    else
    {

      v27(v89, v4);
    }
    id v96 = [v90 workingQueue];
    uint64_t v97 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = (uint64_t)sub_100545D5C;
    aBlock[5] = v97;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    void aBlock[3] = (uint64_t)&unk_1006B5D78;
    id v98 = _Block_copy(aBlock);
    swift_retain();
    id v99 = v109;
    static DispatchQoS.unspecified.getter();
    unint64_t v118 = _swiftEmptyArrayStorage;
    sub_100080268((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    uint64_t v100 = v111;
    uint64_t v101 = v114;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v98);

    (*(void (**)(char *, uint64_t))(v113 + 8))(v100, v101);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v99, v112);
    swift_release();
    return (id)swift_release();
  }
  return result;
}

void sub_100543E1C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong doc_restartObservation];
  }
}

uint64_t sub_100543EC0(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1000CBE70((uint64_t *)&unk_100708D70);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v67) = a2;
  uint64_t v64 = v3;
  uint64_t v17 = &v15[*(int *)(v12 + 48)];
  unint64_t v63 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v63;
  uint64_t v69 = *(void *)(v13 + 72);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  sub_1000CBC00(v18, (uint64_t)v15, (uint64_t *)&unk_100708D70);
  uint64_t v65 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v70 = v7;
  unint64_t v71 = v19;
  uint64_t v72 = v8 + 32;
  v19((unint64_t)v10, v15, v7);
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *((void *)v17 + 1);
  unint64_t v68 = v17;
  uint64_t v73 = a3;
  uint64_t v22 = *a3;
  unint64_t v24 = sub_10017BB10((uint64_t)v10);
  uint64_t v25 = *(void *)(v22 + 16);
  BOOL v26 = (v23 & 1) == 0;
  uint64_t v27 = v25 + v26;
  if (__OFADD__(v25, v26)) {
    goto LABEL_24;
  }
  char v28 = v23;
  if (*(void *)(v22 + 24) >= v27)
  {
    if (v67)
    {
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100357A78();
      if (v28) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v35 = (void *)*v73;
    *(void *)(*v73 + 8 * (v24 >> 6) + 64) |= 1 << v24;
    uint64_t v36 = v35[6];
    uint64_t v67 = *(void *)(v65 + 72);
    uint64_t v37 = v70;
    v71(v36 + v67 * v24, v10, v70);
    uint64_t v38 = (void *)(v35[7] + 16 * v24);
    *uint64_t v38 = v20;
    v38[1] = v21;
    uint64_t v39 = v35[2];
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v35[2] = v41;
    uint64_t v42 = v16 - 1;
    if (v16 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v43 = v37;
    uint64_t v44 = v66 + v69 + v63;
    while (1)
    {
      sub_1000CBC00(v44, (uint64_t)v15, (uint64_t *)&unk_100708D70);
      v71((unint64_t)v10, v15, v43);
      uint64_t v45 = *(void *)v68;
      uint64_t v46 = *((void *)v68 + 1);
      uint64_t v47 = (void *)*v73;
      unint64_t v49 = sub_10017BB10((uint64_t)v10);
      uint64_t v50 = v47[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        break;
      }
      char v53 = v48;
      if (v47[3] < v52)
      {
        sub_10034DAC4(v52, 1);
        unint64_t v54 = sub_10017BB10((uint64_t)v10);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_26;
        }
        unint64_t v49 = v54;
      }
      if (v53) {
        goto LABEL_10;
      }
      uint64_t v56 = (void *)*v73;
      *(void *)(*v73 + 8 * (v49 >> 6) + 64) |= 1 << v49;
      uint64_t v43 = v70;
      v71(v56[6] + v67 * v49, v10, v70);
      char v57 = (void *)(v56[7] + 16 * v49);
      *char v57 = v45;
      v57[1] = v46;
      uint64_t v58 = v56[2];
      BOOL v40 = __OFADD__(v58, 1);
      uint64_t v59 = v58 + 1;
      if (v40) {
        goto LABEL_25;
      }
      v56[2] = v59;
      v44 += v69;
      if (!--v42) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_10034DAC4(v27, v67 & 1);
  unint64_t v29 = sub_10017BB10((uint64_t)v10);
  if ((v28 & 1) == (v30 & 1))
  {
    unint64_t v24 = v29;
    if ((v28 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v32 = swift_allocError();
    swift_willThrow();
    uint64_t v76 = v32;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    char v33 = swift_dynamicCast();
    uint64_t v34 = v70;
    if ((v33 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v10, v34);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  uint64_t v74 = 0;
  unint64_t v75 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v60._uint64_t object = (void *)0x80000001005E9380;
  v60._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v60);
  _print_unlocked<A, B>(_:_:)();
  v61._uint64_t countAndFlagsBits = 39;
  v61._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v61);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void sub_100544434(uint64_t a1)
{
  sub_1005412B0(a1, *(void **)(v1 + 16));
}

uint64_t sub_10054443C(uint64_t a1)
{
  return sub_100541168(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

int64_t sub_100544448(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_10054452C(uint64_t result, void *a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v22 = result + 32;
    uint64_t v20 = a2 + 7;
    uint64_t v21 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v4;
      }
      unint64_t v23 = v5;
      while (1)
      {
        if (v4 == v23) {
          goto LABEL_34;
        }
        uint64_t v6 = v4++;
        uint64_t v7 = a2[2];
        if (!v7) {
          goto LABEL_7;
        }
        unint64_t v8 = (uint64_t *)(v22 + 16 * v6);
        uint64_t v9 = *v8;
        uint64_t v10 = v8[1];
        if (a2[4] == *v8 && a2[5] == v10) {
          break;
        }
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
        if (result) {
          break;
        }
        if (v7 != 1)
        {
          uint64_t v12 = v20;
          uint64_t v13 = 1;
          while (1)
          {
            uint64_t v14 = v13 + 1;
            if (__OFADD__(v13, 1)) {
              break;
            }
            if (*(v12 - 1) == v9 && *v12 == v10) {
              goto LABEL_25;
            }
            uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
            if (result) {
              goto LABEL_25;
            }
            v12 += 2;
            ++v13;
            if (v14 == v7) {
              goto LABEL_7;
            }
          }
          __break(1u);
LABEL_34:
          __break(1u);
          return result;
        }
LABEL_7:
        if (v4 == v2) {
          return (uint64_t)v21;
        }
      }
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v16 = v21;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = sub_100059E2C(0, v21[2] + 1, 1);
        uint64_t v16 = v21;
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1)
      {
        uint64_t result = sub_100059E2C(v17 > 1, v18 + 1, 1);
        uint64_t v16 = v21;
      }
      v16[2] = v18 + 1;
      uint64_t v21 = v16;
      uint64_t v19 = &v16[2 * v18];
      v19[4] = v9;
      v19[5] = v10;
      if (v4 == v2) {
        return (uint64_t)v21;
      }
    }
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

void sub_1005446F4()
{
}

void sub_100544734(uint64_t a1)
{
  sub_10053E330(a1, *(void **)(v1 + 16));
}

uint64_t sub_10054473C()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10054478C(uint64_t a1)
{
  sub_100545390(a1, *(void ***)(v1 + 24), *(void **)(v1 + 32), 0, 0xE000000000000000, *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

void sub_1005447CC(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  v31[0] = a6;
  uint64_t v13 = type metadata accessor for DOCChainOperation.DOCChainOperationMode();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a2;
  *(void *)(v17 + 32) = a3;
  *(unsigned char *)(v17 + 40) = a4;
  id v18 = objc_allocWithZone((Class)type metadata accessor for DOCBlockOperation());
  id v19 = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = (void *)DOCBlockOperation.init(block:)();
  id v21 = objc_allocWithZone((Class)type metadata accessor for DOCCreateNewFolderPostflightUIOperation());
  swift_bridgeObjectRetain();
  id v22 = a5;
  unint64_t v23 = (void *)DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1005A0C30;
  *(void *)(v24 + 32) = v20;
  *(void *)(v24 + 40) = v23;
  v31[1] = v24;
  specialized Array._endMutation()();
  objc_allocWithZone((Class)type metadata accessor for DOCChainOperation());
  id v25 = v20;
  id v26 = v23;
  uint64_t v27 = (void *)DOCChainOperation.init(operations:)();
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v31[0];
  *(void *)(v28 + 24) = a7;
  id v29 = v27;
  swift_retain();
  dispatch thunk of DOCOperation.finishedBlock.setter();

  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DOCChainOperation.DOCChainOperationMode.cancelSubsequentOperationsOnSuccess(_:), v13);
  dispatch thunk of DOCChainOperation.mode.setter();
  id v30 = [self mainQueue];
  [v30 addOperation:v29];
}

unint64_t sub_100544A5C(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10068B618, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

void sub_100544AA8(void *a1, void *a2)
{
  unint64_t v4 = self;
  unint64_t v5 = (void *)_convertErrorToNSError(_:)();
  id v6 = [v4 augmentedErrorForError:v5];

  if (!v6) {
    id v6 = a1;
  }
  uint64_t v7 = _swiftEmptyArrayStorage;
  unint64_t v46 = (unint64_t)_swiftEmptyArrayStorage;
  id v8 = [v6 localizedRecoveryOptions];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v7 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v10 = v7[2];
  if (v10)
  {
    BOOL v40 = a2;
    unint64_t v11 = self;
    uint64_t v12 = 0;
    uint64_t v13 = v7 + 5;
    while (1)
    {
      if (v12)
      {
        swift_bridgeObjectRetain();
        id v14 = [v6 userInfo];
        uint64_t v15 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        if (*(void *)(v15 + 16) && (uint64_t v18 = sub_100042F50(v16, v17), (v19 & 1) != 0))
        {
          sub_10009B208(*(void *)(v15 + 56) + 32 * v18, (uint64_t)&aBlock);
        }
        else
        {
          long long aBlock = 0u;
          long long v43 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((void *)&v43 + 1))
        {
          sub_1000CBBA4((uint64_t)&aBlock, (uint64_t *)&unk_100705D60);
LABEL_18:
          uint64_t v20 = 0;
          goto LABEL_19;
        }
        if (!swift_dynamicCast() || (v41 & 1) == 0) {
          goto LABEL_18;
        }
        uint64_t v20 = 2;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v20 = 1;
      }
LABEL_19:
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v6;
      *(void *)(v21 + 24) = v12;
      id v22 = v6;
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_100544FA8;
      uint64_t v45 = (void *)v21;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v43 = sub_10041B2E4;
      *((void *)&v43 + 1) = &unk_1006B59E0;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_release();
      id v25 = [v11 actionWithTitle:v23 style:v20 handler:v24];
      _Block_release(v24);

      id v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      v13 += 2;
      ++v12;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        a2 = v40;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  id v27 = [v6 localizedDescription];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  id v31 = [v6 localizedRecoverySuggestion];
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  unint64_t v36 = v46;
  uint64_t v37 = (void *)swift_allocObject();
  _OWORD v37[2] = v28;
  v37[3] = v30;
  v37[4] = v33;
  v37[5] = v35;
  v37[6] = v36;
  v37[7] = a2;
  uint64_t v44 = (void (*)(int))sub_100544FB4;
  uint64_t v45 = v37;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v43 = sub_1000666D8;
  *((void *)&v43 + 1) = &unk_1006B5A30;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v39 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_100544F70()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100544FA8(int a1)
{
  sub_10053C098(a1, *(id *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_100544FB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = (void *)_convertErrorToNSError(_:)();
  id v8 = [v7 localizedFailureReason];
  uint64_t v37 = a2;
  if (v8)
  {

    id v9 = [v7 localizedDescription];
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id result = (id)_DocumentManagerBundle();
    if (!result) {
      goto LABEL_10;
    }
    id v9 = result;
    v44._uint64_t object = (void *)0x80000001005FF390;
    v13._uint64_t object = (void *)0x80000001005FF360;
    v13._uint64_t countAndFlagsBits = 0x1000000000000023;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._uint64_t object = (void *)0xEB00000000656C62;
    v15._uint64_t countAndFlagsBits = 0;
    v15._uint64_t object = (void *)0xE000000000000000;
    v44._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    Swift::String v16 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v9, v15, v44);
    uint64_t object = v16._object;
    uint64_t countAndFlagsBits = v16._countAndFlagsBits;
  }
  uint64_t v17 = countAndFlagsBits;
  uint64_t v18 = object;

  id v19 = [v7 localizedFailureReason];
  if (!v19) {
    id v19 = [v7 localizedDescription];
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    NSString v23 = result;
    v45._uint64_t object = (void *)0xE200000000000000;
    v24._uint64_t countAndFlagsBits = 19279;
    v24._uint64_t object = (void *)0xE200000000000000;
    v25._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v25._uint64_t object = (void *)0xEB00000000656C62;
    v26._uint64_t countAndFlagsBits = 0;
    v26._uint64_t object = (void *)0xE000000000000000;
    v45._uint64_t countAndFlagsBits = 19279;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v45);

    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a3;
    *(void *)(v27 + 24) = a4;
    sub_1000C0640(a3);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_100545BCC;
    long long v43 = (void *)v27;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    BOOL v40 = sub_10041B2E4;
    char v41 = &unk_1006B5BE8;
    uint64_t v29 = _Block_copy(&aBlock);
    swift_release();
    id v30 = [self actionWithTitle:v28 style:0 handler:v29];
    _Block_release(v29);

    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1005A04F0;
    *(void *)(v31 + 32) = v30;
    long long aBlock = (void **)v31;
    specialized Array._endMutation()();
    uint64_t v32 = aBlock;
    uint64_t v33 = (void *)swift_allocObject();
    long long v33[2] = v17;
    uint64_t v33[3] = v18;
    v33[4] = v20;
    v33[5] = v22;
    v33[6] = v32;
    v33[7] = v37;
    uint64_t v42 = (void (*)(uint64_t))sub_100544FB4;
    long long v43 = v33;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v39 = 1107296256;
    BOOL v40 = sub_1000666D8;
    char v41 = &unk_1006B5C38;
    uint64_t v34 = _Block_copy(&aBlock);
    id v35 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v37;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v34);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_100545390(uint64_t a1, void **a2, void *a3, uint64_t a4, unint64_t a5, void *a6, char a7, uint64_t a8, uint64_t a9)
{
  unint64_t v68 = a2;
  uint64_t v16 = type metadata accessor for Logger();
  __chkstk_darwin(v16);
  id v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = a8;
    *(void *)(v29 + 24) = a9;
    uint64_t v77 = sub_10013C344;
    uint64_t v78 = v29;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v74 = 1107296256;
    unint64_t v75 = sub_1000666D8;
    uint64_t v76 = &unk_1006B5A80;
    id v30 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    DOCRunInMainThread();
    uint64_t v31 = v30;
LABEL_24:
    _Block_release(v31);
    return;
  }
  uint64_t v66 = a3;
  uint64_t v67 = v17;
  char v20 = a7;
  uint64_t v69 = a8;
  uint64_t v70 = a6;
  uint64_t v71 = a9;
  uint64_t v21 = (void *)_convertErrorToNSError(_:)();
  id v22 = [v21 domain];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  if (v23 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v25 == v26)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_17;
    }
  }
  if ([v21 code] == (id)-1001)
  {
    if ((a5 & 0x2000000000000000) != 0) {
      uint64_t v32 = HIBYTE(a5) & 0xF;
    }
    else {
      uint64_t v32 = a4 & 0xFFFFFFFFFFFFLL;
    }
    id v33 = (id)_DocumentManagerBundle();
    uint64_t v34 = v33;
    if (v32)
    {
      if (v33)
      {
        v35._uint64_t countAndFlagsBits = 0x100000000000005CLL;
        v79._uint64_t countAndFlagsBits = 0xD000000000000038;
        v79._uint64_t object = (void *)0x80000001005FF2A0;
        v35._uint64_t object = (void *)0x80000001005FF240;
        v36._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v36._uint64_t object = (void *)0xEB00000000656C62;
        v37._uint64_t countAndFlagsBits = 0;
        v37._uint64_t object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v79);

        sub_1000CBE70((uint64_t *)&unk_100708800);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_10059B760;
        *(void *)(v38 + 56) = &type metadata for String;
        unint64_t v39 = sub_100073F48();
        BOOL v40 = v66;
        *(void *)(v38 + 32) = v68;
        *(void *)(v38 + 40) = v40;
        *(void *)(v38 + 96) = &type metadata for String;
        *(void *)(v38 + 104) = v39;
        *(void *)(v38 + 64) = v39;
        *(void *)(v38 + 72) = a4;
        *(void *)(v38 + 80) = a5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        uint64_t v56 = String.init(format:_:)();
        uint64_t v58 = v57;
        Swift::String v60 = v70;
        uint64_t v59 = v71;
        swift_bridgeObjectRelease();
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = v56;
        *(void *)(v61 + 24) = v58;
        *(unsigned char *)(v61 + 32) = v20 & 1;
        *(void *)(v61 + 40) = v69;
        *(void *)(v61 + 48) = v59;
        *(void *)(v61 + 56) = v21;
        *(void *)(v61 + 64) = v60;
        uint64_t v77 = sub_100545B20;
        uint64_t v78 = v61;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v74 = 1107296256;
        unint64_t v75 = sub_1000666D8;
        uint64_t v76 = &unk_1006B5AF8;
        uint64_t v62 = _Block_copy(&aBlock);
        swift_retain();
        id v63 = v21;
        id v64 = v60;
        swift_release();
        DOCRunInMainThread();

        uint64_t v31 = v62;
        goto LABEL_24;
      }
      __break(1u);
    }
    else if (v33)
    {
      v80._uint64_t object = (void *)0x80000001005FF330;
      v51._uint64_t object = (void *)0x80000001005FF2E0;
      v51._uint64_t countAndFlagsBits = 0x1000000000000043;
      v52._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v52._uint64_t object = (void *)0xEB00000000656C62;
      v53._uint64_t countAndFlagsBits = 0;
      v53._uint64_t object = (void *)0xE000000000000000;
      v80._uint64_t countAndFlagsBits = 0xD000000000000022;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v34, v53, v80);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_1005A0030;
      *(void *)(v54 + 56) = &type metadata for String;
      *(void *)(v54 + 64) = sub_100073F48();
      char v55 = v66;
      *(void *)(v54 + 32) = v68;
      *(void *)(v54 + 40) = v55;
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    __break(1u);
    return;
  }
LABEL_17:
  static Logger.Rename.getter();
  id v41 = v21;
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v66 = (void *)swift_slowAlloc();
    unint64_t v68 = (void **)swift_slowAlloc();
    long long aBlock = v68;
    *(_DWORD *)uint64_t v44 = 136315394;
    uint64_t v72 = sub_10009B0E4(0xD000000000000075, 0x80000001005FF1C0, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 12) = 2112;
    uint64_t v72 = (uint64_t)v41;
    id v45 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v66 = v41;

    _os_log_impl((void *)&_mh_execute_header, v42, v43, "%s: Rename Operation failed: %@", (uint8_t *)v44, 0x16u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v16);
  uint64_t v46 = v69;
  uint64_t v47 = (void *)swift_allocObject();
  uint64_t v48 = v71;
  _OWORD v47[2] = v46;
  v47[3] = v48;
  v47[4] = v41;
  id v49 = v41;
  swift_retain();
  id v50 = v49;
  sub_100544FB8((uint64_t)v50, v70, (uint64_t)sub_100545AC4, (uint64_t)v47);

  swift_release();
}

void sub_100545AC4()
{
  sub_10053D8E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100545AD0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

id sub_100545B20()
{
  return sub_10053D9C4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void (**)(id))(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_100545B34()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100545B74(uint64_t a1)
{
  sub_10053DE3C(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_100545B8C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100545BCC(uint64_t a1)
{
  sub_10053C174(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_100545BD8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100545C28()
{
  sub_10053C1C8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(id *)(v0 + 48), *(void **)(v0 + 56));
}

uint64_t sub_100545C3C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_100545C6C()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100545CBC(uint64_t a1)
{
  return sub_10053D700(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_100545CD0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100545D08(uint64_t a1, uint64_t a2)
{
  sub_10053D824(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_100545D24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100545D5C()
{
}

uint64_t sub_100545D64()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_100545D9C(void *a1)
{
  return sub_100542264(a1, *(void **)(v1 + 16));
}

uint64_t sub_100545DA4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100545DB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_100545DE0()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100545E28()
{
  return sub_10054231C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100545E34()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100545E44()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_100545E84()
{
  return sub_10054285C(*(void **)(v0 + 16), *(Class *)(v0 + 24));
}

uint64_t sub_100545E8C()
{
  return sub_1005428D8(v0);
}

uint64_t sub_100545E94()
{
  return sub_100542A1C(v0);
}

uint64_t sub_100545E9C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for DOCOperationItem()
{
  uint64_t result = qword_10071B980;
  if (!qword_10071B980) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100545EFC()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 97, 7);
}

void sub_100545F6C(void *a1, uint64_t a2, char a3)
{
  sub_10053C75C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40), *(unsigned __int8 *)(v3 + 48), *(void *)(v3 + 56), *(void **)(v3 + 64), *(void *)(v3 + 72), *(void *)(v3 + 80), *(void *)(v3 + 88), *(unsigned char *)(v3 + 96));
}

uint64_t sub_100545FB4(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v1 + 16))(0, a1, 1);
}

uint64_t sub_100545FE8()
{
  return sub_100546504((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100546004(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v1 + 24))(0, a1, *(unsigned __int8 *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC5Files16DOCCopyOperation_engineTypeUsed));
}

uint64_t sub_100546048()
{
  return sub_100546504((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100546064(void *a1, uint64_t a2)
{
  return sub_10053D5FC(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR____TtC5Files21DOCUnarchiveOperation_unarchivedItem);
}

uint64_t sub_10054608C()
{
  return sub_100546504((void (*)(void))&_swift_release, 40);
}

uint64_t sub_1005460A8(void *a1, uint64_t a2)
{
  return sub_10053D5FC(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24), *(void *)(v2 + 32), &OBJC_IVAR____TtC5Files19DOCArchiveOperation_archivedItem);
}

uint64_t sub_1005460D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100546108()
{
}

uint64_t sub_100546110()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100546148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10053C6CC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_100546150()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1005461A8()
{
  sub_10053D3BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1005461B8()
{
  return sub_100546A2C((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005461D0()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

void sub_100546200(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100546208()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100546250(void (*a1)(void *, void), uint64_t a2)
{
  return sub_10053F228(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

void sub_10054625C(uint64_t a1, uint64_t a2)
{
  sub_10053F530(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100546264(uint64_t a1)
{
  return sub_10053F058(a1, *(void (**)(void *, id))(v1 + 16));
}

uint64_t sub_10054626C()
{
  return sub_100546504((void (*)(void))&_swift_bridgeObjectRelease, 41);
}

void sub_100546288(uint64_t a1, uint64_t a2)
{
  sub_10053E590(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40));
}

void sub_100546298(uint64_t a1, uint64_t a2)
{
  sub_10053E808(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1005462A4()
{
  return sub_100546504((void (*)(void))&_swift_release, 40);
}

uint64_t sub_1005462C0(void *a1, uint64_t a2)
{
  return sub_10053E758(a1, a2, *(void *)(v2 + 16), *(void (**)(long long *, uint64_t))(v2 + 24));
}

void sub_1005462D0()
{
}

uint64_t sub_1005462EC(uint64_t a1)
{
  return sub_1005416AC(a1, *(void **)(v1 + 16));
}

uint64_t sub_1005462F4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10054633C(NSObject *a1, uint64_t a2)
{
  sub_1005418D0(a1, a2, *(NSObject **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_100546348()
{
  return sub_100546A2C((void (*)(void))&_swift_release);
}

uint64_t sub_100546360()
{
  return sub_10014B6CC((uint64_t *)&unk_10071B8E8);
}

uint64_t sub_10054636C(double a1)
{
  sub_1000CBE70((uint64_t *)&unk_10071B8E8);

  return sub_100540910(a1);
}

uint64_t sub_1005463E0()
{
  return sub_10014B6CC((uint64_t *)&unk_10071B8E8);
}

uint64_t sub_1005463EC(void *a1, char a2)
{
  char v3 = a2 & 1;
  sub_1000CBE70((uint64_t *)&unk_10071B8E8);

  return sub_100540A04(a1, v3);
}

uint64_t sub_100546470()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1005464C8(void *a1)
{
  sub_100540B40(a1, *(void *)(v1 + 16), *(void (**)(char *, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

void sub_1005464E0(void **a1)
{
}

uint64_t sub_1005464E8()
{
  return sub_100546504((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100546504(void (*a1)(void), uint64_t a2)
{
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

void sub_100546560(void *a1, void *a2)
{
  sub_100540E2C(a1, a2, *(void *)(v2 + 16), *(void (**)(void *, uint64_t))(v2 + 24));
}

uint64_t sub_10054656C()
{
  return sub_10014B6CC(&qword_100719840);
}

uint64_t sub_10054657C()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_10054658C(uint64_t a1)
{
  sub_10053EB98(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_100546594()
{
  return sub_10014B6CC(&qword_100708100);
}

uint64_t sub_1005465A0(uint64_t a1, uint64_t a2)
{
  sub_1000CBE70(&qword_100708100);

  return sub_10053FA14(a1, a2);
}

uint64_t sub_100546624()
{
  return sub_100546874(&qword_100711880);
}

uint64_t sub_100546630(void *a1, uint64_t a2)
{
  sub_1000CBE70(&qword_100711880);

  return sub_10053E4F4(a1, a2);
}

uint64_t sub_1005466E0()
{
  uint64_t v1 = sub_1000CBE70(&qword_100710CC0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1005467B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000CBE70(&qword_100710CC0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void *)(v1 + v5);
  id v8 = *(uint64_t **)(v1 + v6);
  id v9 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_10053FD00(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_100546868()
{
  return sub_100546874(&qword_100710CC0);
}

uint64_t sub_100546874(uint64_t *a1)
{
  uint64_t v2 = sub_1000CBE70(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7 + 8, v6);
}

uint64_t sub_100546914(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1000CBE70(&qword_100710CC0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1005403F4(a1, (int)v1 + (int)v4, v5);
}

uint64_t sub_1005469B4()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100546A04(unint64_t a1, uint64_t a2)
{
  return sub_10053DF24(a1, a2, *(uint64_t (**)(void, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_100546A14()
{
  return sub_100546A2C((void (*)(void))&_swift_errorRelease);
}

uint64_t sub_100546A2C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

void sub_100546A7C(unint64_t a1)
{
  sub_10053E23C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_100546A88()
{
  return sub_10014B6CC(&qword_100719840);
}

uint64_t sub_100546A94(uint64_t a1)
{
  return sub_1005415A0(a1);
}

uint64_t sub_100546AFC()
{
  return sub_10014B6CC(&qword_100719840);
}

uint64_t _s22ArchiveOperationStatusOwCP(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1003A5888(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void _s22ArchiveOperationStatusOwxx(uint64_t a1)
{
}

uint64_t _s22ArchiveOperationStatusOwca(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_1003A5888(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1003A587C(v5, v6);
  return a1;
}

uint64_t _s22ArchiveOperationStatusOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_1003A587C(v5, v6);
  return a1;
}

ValueMetadata *_s22ArchiveOperationStatusOMa()
{
  return &_s22ArchiveOperationStatusON;
}

unsigned char *storeEnumTagSinglePayload for DOCActionOperationKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100546CD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCActionOperationKind()
{
  return &type metadata for DOCActionOperationKind;
}

char *sub_100546D08(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v6 = *a2;
      *(void *)a1 = *a2;
      unint64_t v7 = v6;
    }
    else
    {
      uint64_t v9 = type metadata accessor for URL();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_1000CBE70(&qword_100711EA0);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = &a1[v11];
      Swift::String v13 = (uint64_t *)((char *)a2 + v11);
      uint64_t v15 = *v13;
      uint64_t v14 = v13[1];
      *(void *)uint64_t v12 = v15;
      *((void *)v12 + 1) = v14;
      a1[*(int *)(v10 + 64)] = *((unsigned char *)a2 + *(int *)(v10 + 64));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_100546E3C(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = *a1;
  }
  else
  {
    uint64_t v3 = type metadata accessor for URL();
    (*(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    sub_1000CBE70(&qword_100711EA0);
    swift_bridgeObjectRelease();
  }
}

void **sub_100546EE8(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unsigned int v4 = *a2;
    *a1 = *a2;
    id v5 = v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_1000CBE70(&qword_100711EA0);
    uint64_t v8 = *(int *)(v7 + 48);
    uint64_t v9 = (void **)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    *uint64_t v9 = v12;
    v9[1] = v11;
    *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_100546FCC(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_100376A88((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      unsigned int v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = sub_1000CBE70(&qword_100711EA0);
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v9 = (void **)((char *)a1 + v8);
      uint64_t v10 = (void **)((char *)a2 + v8);
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      *((unsigned char *)a1 + *(int *)(v7 + 64)) = *((unsigned char *)a2 + *(int *)(v7 + 64));
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005470C8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = sub_1000CBE70(&qword_100711EA0);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1005471A0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100376A88((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = sub_1000CBE70(&qword_100711EA0);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      a1[*(int *)(v7 + 64)] = a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10054728C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[4] = v2;
    v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_100547340()
{
  unint64_t result = qword_10071B9B8;
  if (!qword_10071B9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071B9B8);
  }
  return result;
}

uint64_t sub_100547508()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    *(unsigned char *)(v0 + 24) = 0;
    sub_100548774(v0, *(void *)(v0 + 16), (uint64_t)&unk_1006B6C10, (uint64_t)sub_100548A4C, (uint64_t)&unk_1006B6C28);
  }
  swift_release();
  sub_1000A7258(*(void *)(v0 + 32));
  sub_1000A7258(*(void *)(v0 + 48));

  return swift_deallocClassInstance();
}

uint64_t sub_100547590(uint64_t a1, uint64_t a2)
{
  v43[1] = a2;
  uint64_t v3 = type metadata accessor for Date();
  unint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v53 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v52);
  char v55 = (void *)((char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v43 - v10;
  uint64_t v12 = type metadata accessor for DOCFileOperation();
  uint64_t v50 = *(void *)(v12 - 8);
  uint64_t v51 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v54 = (uint64_t)v43 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void **)(v17 + 120);
  id v19 = *(void **)(v17 + 128);
  v57[0] = _swiftEmptyArrayStorage;
  if (!v18)
  {
    id v22 = v19;
    if (!v19) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v20 = v19;
  id v21 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v19)
  {
LABEL_7:
    id v23 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  unint64_t v24 = v57[0];

  if (!(v24 >> 62))
  {
    uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v25) {
      goto LABEL_12;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    BOOL v40 = _swiftEmptyArrayStorage;
LABEL_31:
    sub_1002FB85C((uint64_t)v40);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v25) {
    goto LABEL_30;
  }
LABEL_12:
  uint64_t v58 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C7C(0, v25 & ~(v25 >> 63), 0);
  if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = 0;
    char v28 = (void (**)(char *, void, uint64_t, uint64_t))(v49 + 56);
    uint64_t v29 = (uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
    unint64_t v44 = 0x80000001005FFA90;
    unint64_t v48 = v24;
    v49 += 32;
    uint64_t v45 = v49 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    unint64_t v46 = v24 & 0xC000000000000001;
    uint64_t v47 = v25;
    do
    {
      if (v46) {
        id v30 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v30 = *(id *)(v24 + 8 * v27 + 32);
      }
      uint64_t v31 = v30;
      uint64_t v32 = NSProgress.fileTotalCount.getter();
      char v34 = v33;
      id v56 = [v31 hash];
      AnyHashable.init<A>(_:)();
      static Date.now.getter();
      (*v28)(v11, 0, 1, v3);
      if ((v34 & 1) == 0 && v32 >= 2)
      {
        Swift::String v35 = v55;
        *char v55 = 0xD000000000000012;
        v35[1] = v44;
      }
      swift_storeEnumTagMultiPayload();
      sub_10008E1D0((uint64_t)v57, (uint64_t)v15);
      *((void *)v15 + 5) = v31;
      sub_1001653A8((uint64_t)v11, (uint64_t)v9);
      int v36 = (*v29)(v9, 1, v3);
      Swift::String v37 = v53;
      if (v36 == 1)
      {
        Date.init(timeIntervalSinceNow:)();
        sub_100165410((uint64_t)v11);
        sub_10008E17C((uint64_t)v57);
        sub_100165410((uint64_t)v9);
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))v49;
      }
      else
      {
        sub_100165410((uint64_t)v11);
        sub_10008E17C((uint64_t)v57);
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))v49;
        (*(void (**)(char *, char *, uint64_t))v49)(v37, v9, v3);
      }
      uint64_t v39 = v51;
      v38(&v15[*(int *)(v51 + 24)], v37, v3);
      sub_100404B98((uint64_t)v55, (uint64_t)&v15[*(int *)(v39 + 28)], (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
      sub_100404B98((uint64_t)v15, v54, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      BOOL v40 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190C7C(0, v40[2] + 1, 1);
        BOOL v40 = v58;
      }
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1)
      {
        sub_100190C7C(v41 > 1, v42 + 1, 1);
        BOOL v40 = v58;
      }
      ++v27;
      v40[2] = v42 + 1;
      sub_100404B98(v54, (uint64_t)v40+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v42, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      unint64_t v24 = v48;
    }
    while (v47 != v27);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_100547BBC(void (*a1)(void *, void), uint64_t a2)
{
  v43[1] = a2;
  unint64_t v44 = a1;
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v51 = *(void (***)(char *, uint64_t, uint64_t))(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v56);
  char v55 = (void *)((char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1000CBE70((uint64_t *)&unk_10070B980);
  __chkstk_darwin(v7 - 8);
  uint64_t v54 = (uint64_t)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v43 - v10;
  uint64_t v12 = type metadata accessor for DOCFileOperation();
  uint64_t v52 = *(void *)(v12 - 8);
  uint64_t v53 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v57 = (uint64_t)v43 - v16;
  uint64_t v17 = *(void *)(v2 + 16);
  uint64_t v18 = *(void **)(v17 + 120);
  id v19 = *(void **)(v17 + 128);
  v59[0] = _swiftEmptyArrayStorage;
  if (!v18)
  {
    id v22 = v19;
    if (!v19) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  id v20 = v19;
  id v21 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (v19)
  {
LABEL_7:
    id v23 = v19;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
LABEL_10:
  unint64_t v24 = v59[0];

  unint64_t v25 = v24;
  if (!(v24 >> 62))
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v26) {
      goto LABEL_12;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    BOOL v40 = _swiftEmptyArrayStorage;
LABEL_32:
    v44(v40, 0);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v26) {
    goto LABEL_31;
  }
LABEL_12:
  Swift::String v60 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100190C7C(0, v26 & ~(v26 >> 63), 0);
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = 0;
    unint64_t v47 = v25 & 0xC000000000000001;
    uint64_t v48 = v26;
    uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v51 + 7);
    id v30 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 6);
    uint64_t v50 = v5;
    v51 += 4;
    unint64_t v45 = 0x80000001005FFA90;
    uint64_t v46 = (unint64_t)v51 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    unint64_t v49 = v25;
    do
    {
      if (v47) {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v31 = *(id *)(v25 + 8 * v28 + 32);
      }
      uint64_t v32 = v31;
      uint64_t v33 = NSProgress.fileTotalCount.getter();
      char v35 = v34;
      id v58 = [v32 hash];
      AnyHashable.init<A>(_:)();
      static Date.now.getter();
      (*v29)(v11, 0, 1, v3);
      if (v35)
      {
        uint64_t v36 = (uint64_t)v55;
      }
      else
      {
        uint64_t v36 = (uint64_t)v55;
        if (v33 >= 2)
        {
          *char v55 = 0xD000000000000012;
          *(void *)(v36 + 8) = v45;
        }
      }
      swift_storeEnumTagMultiPayload();
      sub_10008E1D0((uint64_t)v59, (uint64_t)v14);
      *((void *)v14 + 5) = v32;
      uint64_t v37 = v54;
      sub_1001653A8((uint64_t)v11, v54);
      if ((*v30)(v37, 1, v3) == 1)
      {
        Date.init(timeIntervalSinceNow:)();
        sub_100165410((uint64_t)v11);
        sub_10008E17C((uint64_t)v59);
        sub_100165410(v37);
        uint64_t v38 = (void (*)(char *, char *, uint64_t))*v51;
      }
      else
      {
        sub_100165410((uint64_t)v11);
        sub_10008E17C((uint64_t)v59);
        uint64_t v38 = (void (*)(char *, char *, uint64_t))*v51;
        (*v51)(v5, v37, v3);
      }
      uint64_t v39 = v53;
      v38(&v14[*(int *)(v53 + 24)], v5, v3);
      sub_100404B98(v36, (uint64_t)&v14[*(int *)(v39 + 28)], (uint64_t (*)(void))type metadata accessor for DOCProgressProvidingOperationIconType);
      sub_100404B98((uint64_t)v14, v57, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      BOOL v40 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100190C7C(0, v40[2] + 1, 1);
        BOOL v40 = v60;
      }
      unint64_t v42 = v40[2];
      unint64_t v41 = v40[3];
      if (v42 >= v41 >> 1)
      {
        sub_100190C7C(v41 > 1, v42 + 1, 1);
        BOOL v40 = v60;
      }
      ++v28;
      v40[2] = v42 + 1;
      sub_100404B98(v57, (uint64_t)v40+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(void *)(v52 + 72) * v42, (uint64_t (*)(void))type metadata accessor for DOCFileOperation);
      unint64_t v25 = v49;
      uint64_t v5 = v50;
    }
    while (v48 != v28);
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DOCFileProviderSyncStateProvider()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for DOCFileProviderSyncStateProvider.ObservingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005483FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCFileProviderSyncStateProvider.ObservingState()
{
  return &type metadata for DOCFileProviderSyncStateProvider.ObservingState;
}

unint64_t sub_100548438()
{
  unint64_t result = qword_10071BAF0[0];
  if (!qword_10071BAF0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10071BAF0);
  }
  return result;
}

void sub_10054848C(void (*a1)(void *))
{
  int v3 = *(void **)(*(void *)(*(void *)v1 + 16) + 136);
  id v4 = v3;
  a1(v3);
}

uint64_t sub_1005484F8()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 48);
  sub_1000C0640(v2);
  return v2;
}

uint64_t sub_10054854C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 48);
  *(void *)(v5 + 48) = a1;
  *(void *)(v5 + 56) = a2;
  return sub_1000A7258(v6);
}

uint64_t (*sub_1005485A4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1005485FC(void (*a1)(void *, void), uint64_t a2)
{
  return sub_100547BBC(a1, a2);
}

uint64_t sub_100548620()
{
  uint64_t v1 = *v0;
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 32);
  sub_1000C0640(v2);
  return v2;
}

uint64_t sub_100548674(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 32);
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return sub_1000A7258(v6);
}

uint64_t (*sub_1005486CC())()
{
  return j__swift_endAccess;
}

uint64_t sub_100548724(uint64_t a1, uint64_t a2)
{
  return sub_100548774(a1, a2, (uint64_t)&unk_1006B6C60, (uint64_t)sub_100548B38, (uint64_t)&unk_1006B6C78);
}

uint64_t sub_10054874C(uint64_t a1, uint64_t a2)
{
  return sub_100548774(a1, a2, (uint64_t)&unk_1006B6C10, (uint64_t)sub_100548A4C, (uint64_t)&unk_1006B6C28);
}

uint64_t sub_100548774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v18[0] = a5;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(void *)(a2 + 24);
  uint64_t v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  aBlock[4] = a4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = v18[0];
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  id v20 = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_100548A10()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100548A4C()
{
  return sub_10038C584(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100548A54(void *a1, char a2)
{
  uint64_t v3 = v2;
  *(unsigned char *)(v3 + 24) = 0;
  *(_OWORD *)(v3 + 32) = 0u;
  *(_OWORD *)(v3 + 48) = 0u;
  if (qword_100704E38 != -1) {
    swift_once();
  }
  swift_retain();
  uint64_t v6 = sub_10013F904(a1);
  swift_release();
  *(void *)(v3 + 16) = v6;
  if ((a2 & 1) != 0 && (*(unsigned char *)(v3 + 24) & 1) == 0)
  {
    *(unsigned char *)(v3 + 24) = 1;
    sub_100548774(v3, v6, (uint64_t)&unk_1006B6C60, (uint64_t)sub_100548B38, (uint64_t)&unk_1006B6C78);
  }
  return v3;
}

uint64_t sub_100548B38()
{
  return sub_10038C504(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100548B48()
{
  return sub_100548B7C();
}

uint64_t type metadata accessor for DOCWeakArray()
{
  return sub_1000D21B0();
}

uint64_t sub_100548B70()
{
  return sub_100548B7C();
}

uint64_t sub_100548B7C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DOCWeakArray.WeakElement()
{
  return sub_1000D21B0();
}

void sub_100548BD0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v11 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  uint64_t v48 = sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v12 = swift_allocObject();
  long long v47 = xmmword_10059B760;
  *(_OWORD *)(v12 + 16) = xmmword_10059B760;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v49 = sub_100073F48();
  *(void *)(v12 + 64) = v49;
  unint64_t v45 = (unint64_t)"createAndShowFileImportPicker()";
  *(void *)(v12 + 32) = 0xD00000000000001ALL;
  *(void *)(v12 + 40) = 0x80000001005FFC70;
  unint64_t v46 = 0x80000001005FFC70;
  URL._bridgeToObjectiveC()((NSURL *)0x80000001005FFC70);
  uint64_t v14 = v13;
  *(void *)(v12 + 96) = sub_10054AA54();
  *(void *)(v12 + 104) = sub_100198550();
  *(void *)(v12 + 72) = v14;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v15 = &v2[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess();
  sub_1000EEE00((uint64_t)v10, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v17 = (id)Strong;
    uint64_t v18 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v47;
    unint64_t v20 = v49;
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = v20;
    *(void *)(v19 + 32) = 0xD00000000000001ALL;
    *(void *)(v19 + 40) = v46;
    uint64_t v21 = *(void *)(*(void *)v15 + 16);
    *(void *)(v19 + 96) = &type metadata for Int;
    *(void *)(v19 + 104) = &protocol witness table for Int;
    *(void *)(v19 + 72) = v21;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    type metadata accessor for DOCDocumentPickerViewController();
    uint64_t v22 = swift_dynamicCastClass();
    if (v22)
    {
      id v23 = (void *)v22;
      id v24 = v17;
      uint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_1002F551C(v25);
      swift_bridgeObjectRelease();
      id v27 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
      id v17 = DOCPickerContext.init(with:)((uint64_t)v26);
      [v23 setPickerContext:v17];
    }
  }
  else
  {
    uint64_t v28 = OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer;
    uint64_t v29 = *(void **)&v2[OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer];
    if (v29)
    {
      id v30 = v29;
      id v31 = (void *)static DOCLog.UI.getter();
      static os_log_type_t.debug.getter();
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
      unint64_t v33 = v49;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = v33;
      unint64_t v34 = v45 | 0x8000000000000000;
      *(void *)(v32 + 32) = 0xD00000000000001ALL;
      *(void *)(v32 + 40) = v34;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      [v30 invalidate];
      char v35 = *(void **)&v2[v28];
      *(void *)&v2[v28] = 0;
    }
    uint64_t v36 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1005A0030;
    unint64_t v38 = v49;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = v38;
    unint64_t v39 = v45 | 0x8000000000000000;
    *(void *)(v37 + 32) = 0xD00000000000001ALL;
    *(void *)(v37 + 40) = v39;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    BOOL v40 = self;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v2;
    aBlock[4] = sub_10054AA94;
    aBlock[5] = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10041B2E4;
    void aBlock[3] = &unk_1006B6EB0;
    unint64_t v42 = _Block_copy(aBlock);
    os_log_type_t v43 = v2;
    swift_release();
    id v44 = [v40 scheduledTimerWithTimeInterval:0 repeats:v42 block:0.15];
    _Block_release(v42);
    id v17 = *(id *)&v2[v28];
    *(void *)&v2[v28] = v44;
  }
}

void sub_100549140(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport;
  swift_beginAccess();
  if (*(void *)(*(void *)v2 + 16)) {
    sub_100549424();
  }
}

uint64_t sub_100549198@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, 1uLL, 1);
  uint64_t v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    URL.init(fileURLWithPath:)();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v12 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    static Logger.Picker.getter();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not locate documents directory", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v12 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, v12, 1, v2);
}

void sub_100549424()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer;
  [*(id *)(v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_deferredFileURLImportTimer) invalidate];
  uint64_t v7 = *(void **)(v1 + v6);
  *(void *)(v1 + v6) = 0;

  uint64_t v8 = self;
  uint64_t v9 = v1 + OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport;
  swift_beginAccess();
  uint64_t v10 = swift_bridgeObjectRetain();
  sub_1002F551C(v10);
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_release();
  id v12 = [v8 configurationForExportingDocumentsToURLs:isa mode:2];

  [v12 setForPickingDocuments:1];
  [v12 setInProcess:1];
  [v12 setIsContentManaged:0];
  [v12 setSupportsRemovableFileProviders:1];
  UUID.init()();
  UUID.uuidString.getter();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setSceneIdentifier:v13];

  os_log_type_t v14 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10059B760;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_100073F48();
  *(void *)(v15 + 32) = 0xD00000000000001FLL;
  *(void *)(v15 + 40) = 0x80000001005FFC50;
  uint64_t v16 = *(void *)(*(void *)v9 + 16);
  *(void *)(v15 + 96) = &type metadata for Int;
  *(void *)(v15 + 104) = &protocol witness table for Int;
  *(void *)(v15 + 72) = v16;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  id v17 = v12;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1002F551C(v18);
  swift_bridgeObjectRelease();
  id v20 = objc_allocWithZone((Class)type metadata accessor for DOCPickerContext());
  id v21 = DOCPickerContext.init(with:)((uint64_t)v19);
  id v22 = objc_allocWithZone((Class)type metadata accessor for DOCDocumentPickerViewController());
  id v23 = DOCDocumentPickerViewController.init(configuration:context:)(v17, v21);
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  [v23 setModalInPresentation:1];
  swift_unknownObjectWeakAssign();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v25 = *(void **)(Strong + OBJC_IVAR____TtC5Files20BrowserSceneDelegate_viewController);
    if (v25)
    {
      id v26 = v25;
      swift_unknownObjectRelease();
      id v27 = v26;
      [v27 presentViewController:v23 animated:1 completion:0];
    }
    else
    {

      swift_unknownObjectRelease();
    }
  }
  else
  {
  }
}

uint64_t sub_100549844(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v91 = a1;
  uint64_t v5 = type metadata accessor for Logger();
  id v98 = *(char ***)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v80 - v9;
  uint64_t v11 = sub_1000CBE70(&qword_1007076B0);
  __chkstk_darwin(v11 - 8);
  NSString v13 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v80 - v15;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v95 = (char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v96 = (char *)v80 - v21;
  __chkstk_darwin(v22);
  id v24 = (char *)v80 - v23;
  sub_100549198((uint64_t)v16);
  id v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  id v105 = (uint8_t *)(v18 + 48);
  if (v104(v16, 1, v17) == 1)
  {
    sub_1001939F8((uint64_t)v16);
  }
  else
  {
    uint64_t v94 = v18;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v101 = v18 + 32;
    uint64_t v102 = v13;
    uint64_t v100 = v25;
    v25(v24, v16, v17);
    id v99 = self;
    id v26 = [v99 defaultManager];
    uint64_t v85 = v24;
    URL._bridgeToObjectiveC()(&v110);
    uint64_t v28 = v27;
    type metadata accessor for URLResourceKey(0);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    id v109 = 0;
    id v30 = [v26 contentsOfDirectoryAtURL:v28 includingPropertiesForKeys:isa options:0 error:&v109];

    id v31 = v109;
    if (v30)
    {
      uint64_t v81 = v3;
      uint64_t v82 = a2;
      uint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v31;

      uint64_t v35 = *(void *)(v32 + 16);
      v80[2] = v32;
      if (v35)
      {
        uint64_t v36 = v94;
        uint64_t v106 = *(void (**)(char *, unint64_t, uint64_t))(v94 + 16);
        uint64_t v107 = v94 + 16;
        unint64_t v37 = v32 + ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80));
        uint64_t v38 = *(void *)(v94 + 72);
        uint64_t v103 = (void (**)(char *, uint64_t))(v94 + 8);
        uint64_t v93 = (void (**)(char *, uint64_t))(v98 + 1);
        uint64_t v97 = v38;
        id v98 = (char **)(v94 + 56);
        v80[1] = (v94 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        *(void *)&long long v34 = 138412546;
        long long v84 = v34;
        id v83 = (char *)&type metadata for Any + 8;
        unint64_t v39 = v102;
        BOOL v40 = v96;
        uint64_t v86 = v5;
        os_log_type_t v92 = v7;
        v106(v102, v37, v17);
        while (1)
        {
          id v96 = *v98;
          ((void (*)(char *, void, uint64_t, uint64_t))v96)(v39, 0, 1, v17);
          if (v104(v39, 1, v17) == 1) {
            break;
          }
          v100(v40, v39, v17);
          id v43 = [v99 defaultManager];
          URL._bridgeToObjectiveC()(v44);
          unint64_t v46 = v45;
          id v109 = 0;
          unsigned int v47 = [v43 removeItemAtURL:v45 error:&v109];

          if (v47)
          {
            uint64_t v41 = *v103;
            unint64_t v42 = v109;
            v41(v40, v17);
          }
          else
          {
            uint64_t v48 = v109;
            _convertNSErrorToError(_:)();

            swift_willThrow();
            static Logger.Picker.getter();
            unint64_t v49 = v95;
            v106(v95, (unint64_t)v40, v17);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v50 = Logger.logObject.getter();
            os_log_type_t v51 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v50, v51))
            {
              uint64_t v52 = swift_slowAlloc();
              uint64_t v53 = (void *)swift_slowAlloc();
              uint64_t v88 = v53;
              id v89 = (void (*)(char *, unint64_t, uint64_t))swift_slowAlloc();
              id v109 = v89;
              *(_DWORD *)uint64_t v52 = v84;
              os_log_t v87 = v50;
              URL._bridgeToObjectiveC()((NSURL *)&v110._baseURL);
              *(void *)(v52 + 4) = v54;
              *uint64_t v53 = v54;
              uint64_t v90 = *v103;
              v90(v49, v17);
              *(_WORD *)(v52 + 12) = 2080;
              char v55 = (void *)_convertErrorToNSError(_:)();
              id v56 = [v55 localizedDescription];

              uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v58 = v17;
              unint64_t v60 = v59;

              uint64_t v36 = v94;
              *(void *)(v52 + 14) = sub_10009B0E4(v57, v60, (uint64_t *)&v109);
              uint64_t v17 = v58;
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              os_log_t v61 = v87;
              _os_log_impl((void *)&_mh_execute_header, v87, v51, "Could not cleanup %@ in Inbox. Error: %s", (uint8_t *)v52, 0x16u);
              sub_1000CBE70(&qword_100707CC0);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              uint64_t v5 = v86;
              swift_slowDealloc();

              swift_errorRelease();
              (*v93)(v92, v5);
              v90(v40, v58);
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
              uint64_t v62 = *v103;
              (*v103)(v49, v17);
              swift_errorRelease();
              (*v93)(v92, v5);
              v62(v40, v17);
            }
          }
          unint64_t v39 = v102;
          v37 += v97;
          if (!--v35)
          {
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v96)(v102, 1, 1, v17);
            break;
          }
          v106(v102, v37, v17);
        }
      }
      else
      {
        uint64_t v36 = v94;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v102, 1, 1, v17);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v85, v17);
      a2 = v82;
      uint64_t v3 = v81;
    }
    else
    {
      id v63 = v109;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      static Logger.Picker.getter();
      swift_errorRetain();
      swift_errorRetain();
      id v64 = Logger.logObject.getter();
      os_log_type_t v65 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v64, v65))
      {
        uint64_t v66 = (uint8_t *)swift_slowAlloc();
        uint64_t v106 = (void (*)(char *, unint64_t, uint64_t))swift_slowAlloc();
        id v109 = v106;
        uint64_t v86 = v5;
        *(_DWORD *)uint64_t v66 = 136315138;
        id v104 = (unsigned int (*)(char *, uint64_t, uint64_t))(v66 + 4);
        id v105 = v66;
        uint64_t v67 = (void *)_convertErrorToNSError(_:)();
        uint64_t v107 = v17;
        unint64_t v68 = v67;
        uint64_t v69 = v3;
        id v70 = [v67 localizedDescription];

        uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v73 = v72;

        uint64_t v3 = v69;
        uint64_t v108 = sub_10009B0E4(v71, v73, (uint64_t *)&v109);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v65, "Could not list Inbox. Error: %s", v105, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        ((void (*)(char *, uint64_t))v98[1])(v10, v86);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v85, v107);
      }
      else
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        ((void (*)(char *, uint64_t))v98[1])(v10, v5);
        (*(void (**)(char *, uint64_t))(v94 + 8))(v85, v17);
      }
    }
  }
  uint64_t v74 = &v3[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess();
  *(void *)uint64_t v74 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v76 = (void *)result;
    uint64_t v77 = (void *)swift_allocObject();
    uint64_t v78 = v91;
    v77[2] = v3;
    v77[3] = v78;
    v77[4] = a2;
    Swift::String v79 = v3;
    swift_retain();
    UIViewController.doc_dismiss(animated:includingPresented:completion:)();

    return swift_release();
  }
  return result;
}

id sub_10054A430()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCImportFileController();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCImportFileController()
{
  return self;
}

uint64_t sub_10054A4F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1002685C4(a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10054A5D0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1002685C4((uint64_t)_swiftEmptyArrayStorage);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10054A690(uint64_t a1)
{
  uint64_t v3 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10059B760;
  *(void *)(v4 + 56) = &type metadata for String;
  *(void *)(v4 + 64) = sub_100073F48();
  *(void *)(v4 + 32) = 0xD000000000000028;
  *(void *)(v4 + 40) = 0x80000001005FFBF0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess();
  uint64_t v6 = *(void *)(*(void *)v5 + 16);
  *(void *)(v4 + 96) = &type metadata for Int;
  *(void *)(v4 + 104) = &protocol witness table for Int;
  *(void *)(v4 + 72) = v6;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  *(void *)(v7 + 24) = a1;
  uint64_t v8 = v1;
  swift_bridgeObjectRetain();
  sub_100549844((uint64_t)sub_10054A9CC, v7);
  return swift_release();
}

uint64_t sub_10054A7F4()
{
  uint64_t v1 = (void *)static DOCLog.UI.getter();
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10059B760;
  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_100073F48();
  *(void *)(v2 + 32) = 0xD00000000000001BLL;
  *(void *)(v2 + 40) = 0x80000001005FFBA0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC5Files23DOCImportFileController_fileURLsToImport];
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  *(void *)(v2 + 96) = &type metadata for Int;
  *(void *)(v2 + 104) = &protocol witness table for Int;
  *(void *)(v2 + 72) = v4;
  os_log(_:dso:log:type:_:)();

  swift_bridgeObjectRelease();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  uint64_t v6 = v0;
  sub_100549844((uint64_t)sub_10054A984, v5);
  return swift_release();
}

uint64_t sub_10054A94C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10054A984()
{
  return sub_10054A5D0();
}

uint64_t sub_10054A98C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10054A9CC()
{
  return sub_10054A4F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10054A9D4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10054AA14()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  uint64_t v2 = swift_unknownObjectWeakAssign();
  return v1(v2);
}

unint64_t sub_10054AA54()
{
  unint64_t result = qword_100707EE0;
  if (!qword_100707EE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100707EE0);
  }
  return result;
}

void sub_10054AA94(uint64_t a1)
{
  sub_100549140(a1, *(void *)(v1 + 16));
}

id sub_10054AB4C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionGridCellSpringLoadedInteractionEffect();
  return [super dealloc];
}

void sub_10054AB80(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v21 = Strong;
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      uint64_t v8 = (void *)v7;
      id v9 = [a1 state];
      if (v9)
      {
        if (v9 == (id)1)
        {
          [v21 setHighlighted:1];
        }
        else if (v9 == (id)2)
        {
          NSString v10 = String._bridgeToObjectiveC()();
          id v11 = [self animationWithKeyPath:v10];

          Class isa = Double._bridgeToObjectiveC()().super.super.isa;
          [v11 setToValue:isa];

          [v11 setDuration:0.1];
          [v11 setAutoreverses:1];
          LODWORD(v13) = 2.0;
          [v11 setRepeatCount:v13];
          [v11 setRemovedOnCompletion:1];
          id v14 = [v8 layer];
          NSString v15 = String._bridgeToObjectiveC()();
          [v14 addAnimation:v11 forKey:v15];
        }
      }
      else
      {
        [v21 setHighlighted:0];
      }

      id v19 = v21;

      return;
    }
  }
  static Logger.UI.getter();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "Missing targetCell or thumbnailView in DOCItemCollectionGridCellSpringLoadedInteractionEffect, ignoring", v18, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10054AE94()
{
  unint64_t result = qword_10071BC80;
  if (!qword_10071BC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BC80);
  }
  return result;
}

uint64_t sub_10054AEE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v6;
  v3[15] = v5;
  return _swift_task_switch(sub_10054AFE4, v6, v5);
}

uint64_t sub_10054AFE4()
{
  id v21 = v0;
  IntentParameter.wrappedValue.getter();
  uint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  v0[16] = v1;
  static Logger.AppIntents.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[10];
    uint64_t v17 = v0[9];
    uint64_t v18 = v0[11];
    uint64_t v19 = v2;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[4] = sub_10009B0E4(0xD00000000000002DLL, 0x80000001005FFDB0, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[5] = sub_10009B0E4(v19, v1, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%s Search action initiated from Link with search phrase %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v19;
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v18, v17);
  }
  else
  {
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    uint64_t v9 = v0[9];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
  }
  uint64_t v10 = v0[7];
  uint64_t v11 = static MainActor.shared.getter();
  v0[17] = v11;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[18] = v12;
  _OWORD v12[2] = v10;
  v12[3] = v2;
  v12[4] = v1;
  double v13 = (void *)swift_task_alloc();
  v0[19] = v13;
  uint64_t v14 = sub_1000CBE70(&qword_10071B630);
  *double v13 = v0;
  v13[1] = sub_10054B2CC;
  uint64_t v15 = v0[6];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v15, v11, &protocol witness table for MainActor, 0xD00000000000002DLL, 0x80000001005FFDB0, sub_10054D00C, v12, v14);
}

uint64_t sub_10054B2CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v5 = sub_10054B474;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    uint64_t v5 = sub_10054B404;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10054B404()
{
  swift_release();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10054B474()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10054B50C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v3[5] = a2;
  v3[6] = a3;
  v3[4] = a1;
  uint64_t v4 = type metadata accessor for Logger();
  v3[7] = v4;
  v3[8] = *(void *)(v4 - 8);
  v3[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StringSearchCriteria();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  v3[13] = type metadata accessor for MainActor();
  v3[14] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[15] = v7;
  v3[16] = v6;
  return _swift_task_switch(sub_10054B664, v7, v6);
}

uint64_t sub_10054B664()
{
  id v24 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[10];
  IntentParameter.wrappedValue.getter();
  uint64_t v4 = StringSearchCriteria.term.getter();
  unint64_t v6 = v5;
  v0[17] = v5;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  static Logger.AppIntents.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v20 = v0[8];
    uint64_t v21 = v0[7];
    uint64_t v22 = v0[9];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    v0[2] = sub_10009B0E4(0xD00000000000002DLL, 0x80000001005FFDB0, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[3] = sub_10009B0E4(v4, v6, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s Search action initiated from Link with search phrase %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v22, v21);
  }
  else
  {
    uint64_t v10 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v12 = v0[7];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  }
  uint64_t v13 = v0[5];
  uint64_t v14 = static MainActor.shared.getter();
  v0[18] = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[19] = v15;
  v15[2] = v13;
  v15[3] = v4;
  v15[4] = v6;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[20] = v16;
  uint64_t v17 = sub_1000CBE70(&qword_10071B630);
  *uint64_t v16 = v0;
  v16[1] = sub_10054B98C;
  uint64_t v18 = v0[4];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v18, v14, &protocol witness table for MainActor, 0xD00000000000002DLL, 0x80000001005FFDB0, sub_10054CFBC, v15, v17);
}

uint64_t sub_10054B98C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    unint64_t v5 = sub_10054BB40;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 120);
    uint64_t v4 = *(void *)(v2 + 128);
    unint64_t v5 = sub_10054BAC4;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10054BAC4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10054BB40()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10054BBEC(uint64_t a1)
{
  return sub_10054C3C0(a1, qword_100737740);
}

uint64_t sub_10054BC04()
{
  uint64_t v0 = sub_1000CBE70(&qword_10071BD28);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_10071BD30);
  __chkstk_darwin(v1);
  sub_1000D6960();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._uint64_t object = (void *)0x8000000100600010;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_10071BD38);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._uint64_t object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10054BDA4(uint64_t a1)
{
  return sub_10054C78C(a1, qword_100737758);
}

void sub_10054BDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_10071BCF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  double v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  id v14 = sub_100066A5C();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  void v16[3] = sub_10054CFCC;
  v16[4] = v13;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_10026AD10;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B7018;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v14 performAfterSearchInitialization:v17];
  _Block_release(v17);
  swift_release();
}

uint64_t sub_10054BFE0()
{
  IntentParameter.wrappedValue.getter();
  return v1;
}

uint64_t sub_10054C014()
{
  return IntentParameter.wrappedValue.setter();
}

void (*sub_10054C048(void *a1))(void *)
{
  Swift::String v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_10054C0A4;
}

uint64_t sub_10054C0AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10054C0C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10054C0E4@<X0>(uint64_t a1@<X8>)
{
  return sub_10054CD14(&qword_1007052E8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100737740, a1);
}

uint64_t sub_10054C11C@<X0>(uint64_t a1@<X8>)
{
  return sub_10054CD14(&qword_1007052F0, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737758, a1);
}

uint64_t sub_10054C158(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10054DC54, v3, v2);
}

uint64_t sub_10054C1F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10054D580();
  *a1 = result;
  return result;
}

unint64_t sub_10054C21C()
{
  unint64_t result = qword_10071BCA0;
  if (!qword_10071BCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BCA0);
  }
  return result;
}

unint64_t sub_10054C274()
{
  unint64_t result = qword_10071BCA8;
  if (!qword_10071BCA8)
  {
    type metadata accessor for StringSearchCriteria();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BCA8);
  }
  return result;
}

uint64_t sub_10054C2CC()
{
  sub_1000CBE70(&qword_10071BD20);
  uint64_t v0 = type metadata accessor for StringSearchScope();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A0030;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for StringSearchScope.general(_:), v0);
  qword_100737770 = v3;
  return result;
}

uint64_t sub_10054C3A8(uint64_t a1)
{
  return sub_10054C3C0(a1, qword_100737778);
}

uint64_t sub_10054C3C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  sub_10001AF94(v9, a2);
  sub_10009D098(v9, (uint64_t)a2);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_10054C5E0()
{
  uint64_t v0 = sub_1000CBE70(&qword_10071BD08);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1000CBE70(&qword_10071BD10);
  __chkstk_darwin(v1);
  sub_1000D1508();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._uint64_t object = (void *)0x80000001005FFF20;
  v2._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_1000CBE70(&qword_10071BD18);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._uint64_t object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

uint64_t sub_10054C780(uint64_t a1)
{
  return sub_10054C78C(a1, qword_100737790);
}

uint64_t sub_10054C78C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = type metadata accessor for IntentAuthenticationPolicy();
  sub_10001AF94(v3, a2);
  uint64_t v4 = sub_10009D098(v3, (uint64_t)a2);
  uint64_t v5 = enum case for IntentAuthenticationPolicy.requiresAuthentication(_:);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v6(v4, v5, v3);
}

void sub_10054C810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1000CBE70(&qword_10071BCF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  double v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, a1, v7, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v13 + v12, v11, v7);
  id v14 = sub_100066A5C();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v15;
  void v16[3] = sub_10054CFCC;
  v16[4] = v13;
  v16[5] = a3;
  v16[6] = a4;
  aBlock[4] = sub_10026AD10;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B6FA0;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v14 performAfterSearchInitialization:v17];
  _Block_release(v17);
  swift_release();
}

uint64_t sub_10054CA40(uint64_t a1, char a2)
{
  uint64_t v3 = sub_1000CBE70(&qword_10071B630);
  __chkstk_darwin(v3 - 8);
  if (a2)
  {
    swift_errorRetain();
    sub_1000CBE70(&qword_10071BCF0);
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    static IntentResult.result<>()();
    sub_1000CBE70(&qword_10071BCF0);
    return CheckedContinuation.resume(returning:)();
  }
}

uint64_t sub_10054CB0C@<X0>(void *a1@<X8>)
{
  if (qword_1007052F8 != -1) {
    swift_once();
  }
  *a1 = qword_100737770;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10054CB78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StringSearchCriteria();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  IntentParameter.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_10054CC6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10054CC88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10054CCA4@<X0>(uint64_t a1@<X8>)
{
  return sub_10054CD14(&qword_100705300, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100737778, a1);
}

uint64_t sub_10054CCDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10054CD14(&qword_100705308, (uint64_t (*)(void))&type metadata accessor for IntentAuthenticationPolicy, (uint64_t)qword_100737790, a1);
}

uint64_t sub_10054CD14@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10009D098(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10054CDBC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10054CE54, v3, v2);
}

uint64_t sub_10054CE54()
{
  swift_release();
  static IntentResult.result<>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10054CEC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10054D098();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for SearchFileAssistantIntent()
{
  return &type metadata for SearchFileAssistantIntent;
}

ValueMetadata *type metadata accessor for SearchFileShortcutsIntent()
{
  return &type metadata for SearchFileShortcutsIntent;
}

uint64_t sub_10054CF08()
{
  return sub_100073DF0(&qword_10071BCC8, &qword_10071BCD0);
}

uint64_t sub_10054CF44()
{
  return sub_100073DF0(&qword_100712F60, &qword_10071B630);
}

uint64_t sub_10054CF80()
{
  return sub_100073DF0(&qword_10071BCD8, &qword_10071BCE0);
}

void sub_10054CFBC(uint64_t a1)
{
  sub_10054C810(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10054CFD0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10054D00C(uint64_t a1)
{
  sub_10054BDB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10054D01C(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  sub_1000CBE70(&qword_10071BCF0);
  return sub_10054CA40(a1, v3);
}

uint64_t sub_10054D098()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v22 = *(void *)(v0 - 8);
  uint64_t v23 = v0;
  __chkstk_darwin(v0);
  uint64_t v21 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v20 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v4 - 8);
  uint64_t v19 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Locale();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  v18[0] = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v18[0] - 8);
  __chkstk_darwin(v18[0]);
  v18[1] = sub_1000CBE70(&qword_10071BD00);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v13 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  id v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v14(v9, enum case for LocalizedStringResource.BundleDescription.main(_:), v6);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v14(v9, v13, v6);
  uint64_t v15 = v19;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, void))(v12 + 56))(v15, 0, 1, v18[0]);
  uint64_t v16 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v20, 1, 1, v16);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v21, enum case for InputConnectionBehavior.default(_:), v23);
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t sub_10054D554@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = IntentParameter.projectedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10054D580()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v41 = *(void *)(v0 - 8);
  uint64_t v42 = v0;
  __chkstk_darwin(v0);
  BOOL v40 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1000CBE70(&qword_1007075E0);
  __chkstk_darwin(v2 - 8);
  unint64_t v39 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for String.IntentInputOptions.CapitalizationType();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v36 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.IntentInputOptions.KeyboardType();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  unint64_t v33 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_100710990);
  __chkstk_darwin(v8 - 8);
  uint64_t v32 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1000CBE70((uint64_t *)&unk_10070C020);
  __chkstk_darwin(v10 - 8);
  id v30 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v17 - 8);
  uint64_t v28 = type metadata accessor for LocalizedStringResource();
  uint64_t v18 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v29 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1000CBE70(&qword_100716F30);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v21(v15, enum case for LocalizedStringResource.BundleDescription.main(_:), v12);
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v21(v15, v20, v12);
  uint64_t v22 = v30;
  LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v28);
  long long v43 = xmmword_1005B0980;
  (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, enum case for String.IntentInputOptions.KeyboardType.default(_:), v35);
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v36, enum case for String.IntentInputOptions.CapitalizationType.sentences(_:), v38);
  uint64_t v23 = v32;
  String.IntentInputOptions.init(keyboardType:capitalizationType:multiline:autocorrect:smartQuotes:smartDashes:)();
  uint64_t v24 = type metadata accessor for String.IntentInputOptions();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  uint64_t v25 = type metadata accessor for IntentDialog();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v39, 1, 1, v25);
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v40, enum case for InputConnectionBehavior.default(_:), v42);
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

void *sub_10054DC5C(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_10071BE00);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_retain();
  uint64_t v8 = sub_10004D62C(a1);
  uint64_t v10 = v9;
  swift_release();
  uint64_t v11 = v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v11, (uint64_t)v16, (uint64_t *)&unk_100705D60);
  if (v16[3])
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v12 = v15;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v12 = (id)qword_10071BD48;
LABEL_8:
  v16[0] = v8;
  v16[1] = v10;
  UICollectionViewDiffableDataSource.snapshot(for:)();

  uint64_t v13 = sub_100550A14();
  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t sub_10054DE58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)sub_1000CBE70(&qword_10071BE00);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
  uint64_t v10 = *(void **)(v9 + 24);
  uint64_t v11 = v10[2];
  if (!v11)
  {
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  unint64_t v62 = a1;
  uint64_t v63 = a2;
  id v64 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v8;
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v12 = 0;
  while (2)
  {
    long long v13 = *(_OWORD *)&v10[2 * v12++ + 4];
    long long v65 = v13;
    a1 = v13;
    switch(*(unsigned char *)(v13 + 16))
    {
      case 3:
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        break;
      default:
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          swift_unknownObjectRelease();
          if (v11 != v12) {
            continue;
          }
          swift_bridgeObjectRelease_n();
          __break(1u);
        }
        break;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRetain();
  a2 = 0;
  uint64_t v10 = sub_1005562BC(v62, a1, *((uint64_t *)&v65 + 1));
  uint64_t v11 = v63;
  uint64_t v15 = IndexPath.row.getter();
  uint64_t v16 = *(unsigned __int8 *)(a1 + 73);
  unint64_t v62 = v15 - v16;
  uint64_t v17 = v64;
  if (__OFSUB__(v15, v16)) {
    goto LABEL_44;
  }
  uint64_t v18 = v3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v18, (uint64_t)&v69, (uint64_t *)&unk_100705D60);
  if (v71)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v19 = (id)v67;
      goto LABEL_15;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v69, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v19 = (id)qword_10071BD48;
LABEL_15:
  uint64_t v59 = 0;
  long long v69 = v65;
  UICollectionViewDiffableDataSource.snapshot(for:)();

  unint64_t v60 = v6;
  uint64_t v20 = NSDiffableDataSourceSectionSnapshot.items.getter();
  if (!*(void *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  uint64_t v21 = *(void *)(v20 + 32);
  uint64_t v63 = *(void *)(v20 + 40);
  uint64_t v6 = *(void **)(v20 + 48);
  a2 = *(void *)(v20 + 56);
  uint64_t v9 = *(void *)(v20 + 64);
  int v22 = *(unsigned __int8 *)(v20 + 72);
  swift_unknownObjectRetain();
  sub_1000A9454(v6, a2, v9, v22);
  swift_bridgeObjectRelease();
  if (v22 != 255)
  {
    swift_unknownObjectRelease();
    sub_1000A7C1C(v6, a2, v9, v22);
LABEL_19:
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v6 = 0;
    a2 = 0;
    uint64_t v9 = 0;
    int v24 = 0;
    goto LABEL_21;
  }
  int v24 = 255;
  uint64_t v23 = v63;
LABEL_21:
  *(void *)&long long v69 = v21;
  *((void *)&v69 + 1) = v23;
  id v70 = v6;
  uint64_t v71 = a2;
  uint64_t v72 = v9;
  int v58 = v24;
  char v73 = v24;
  uint64_t v11 = (uint64_t)v17;
  uint64_t v25 = sub_100550A14();
  unint64_t v26 = v62;
  if ((v62 & 0x8000000000000000) != 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v11 = (uint64_t)v25;
  if (v25[2] < v62)
  {
LABEL_46:
    __break(1u);
LABEL_47:
    uint64_t v51 = (2 * v62) | 1;
    swift_bridgeObjectRelease();
    unint64_t v52 = v51;
    unint64_t v26 = v62;
    uint64_t v29 = sub_1002F526C(v11, v9, 0, v52);
    goto LABEL_28;
  }
  uint64_t v63 = v23;
  uint64_t v53 = v9;
  uint64_t v54 = a2;
  char v55 = v6;
  uint64_t v56 = v21;
  uint64_t v9 = (uint64_t)(v25 + 4);
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v27 = (void *)swift_dynamicCastClass();
  if (!v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  uint64_t v57 = v18;
  uint64_t v28 = v27[2];
  swift_release();
  uint64_t v6 = v60;
  a2 = v59;
  if (v28 != v26) {
    goto LABEL_47;
  }
  uint64_t v29 = (void *)swift_dynamicCastClass();
  if (!v29)
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = _swiftEmptyArrayStorage;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_100555DF0((uint64_t)v29, (uint64_t)v10);
  id v30 = v10;
  uint64_t v32 = v31;
  uint64_t v59 = a2;
  swift_release();
  uint64_t v33 = (uint64_t)v30;
  swift_bridgeObjectRelease();
  unint64_t v34 = *(void *)(v11 + 16);
  uint64_t v35 = v34 - v26;
  if (v34 < v26)
  {
    __break(1u);
LABEL_49:
    swift_bridgeObjectRelease();
    uint64_t v38 = sub_1002F526C(v11, v9, v62, (2 * v34) | 1);
    unint64_t v39 = &qword_100705000;
    goto LABEL_34;
  }
  unint64_t v26 = (unint64_t)v6;
  swift_unknownObjectRetain_n();
  uint64_t v36 = (void *)swift_dynamicCastClass();
  if (!v36)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = _swiftEmptyArrayStorage;
  }
  uint64_t v37 = v36[2];
  swift_release();
  if (v37 != v35) {
    goto LABEL_49;
  }
  uint64_t v38 = (void *)swift_dynamicCastClass();
  unint64_t v39 = &qword_100705000;
  if (!v38)
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = _swiftEmptyArrayStorage;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v40 = v33;
  swift_bridgeObjectRetain();
  sub_100555DF0((uint64_t)v38, v33);
  uint64_t v42 = v41;
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)&long long v67 = v32;
  sub_1001698BC(v40);
  sub_1001698BC(v42);
  long long v43 = v64;
  sub_1005538FC((uint64_t)&v69, *(unsigned char *)(a1 + 48));
  swift_bridgeObjectRelease();
  sub_1000CBC00(v57, (uint64_t)&v67, (uint64_t *)&unk_100705D60);
  if (v68)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    char v44 = swift_dynamicCast();
    uint64_t v45 = v61;
    if (v44)
    {
      id v46 = v66;
      goto LABEL_41;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v67, (uint64_t *)&unk_100705D60);
    uint64_t v45 = v61;
  }
  if (v39[99] != -1) {
    swift_once();
  }
  id v46 = (id)qword_10071BD48;
LABEL_41:
  unsigned int v47 = v55;
  uint64_t v48 = v54;
  uint64_t v49 = v53;
  long long v67 = v65;
  UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

  sub_100488A14(v56, v63, v47, v48, v49, v58);
  swift_unknownObjectRelease();
  (*(void (**)(char *, unint64_t))(v45 + 8))(v43, v26);
  return swift_unknownObjectRelease();
}

id sub_10054E684@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isEjectable];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10054E6B8(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsEjectable:*a1];
}

void sub_10054E6CC()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  aBlock[4] = sub_100557284;
  aBlock[5] = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000148B8;
  void aBlock[3] = &unk_1006B71D0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  id v4 = [v2 initWithSectionProvider:v3];
  _Block_release(v3);
  swift_release();
  swift_release();
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  id v5 = [super collectionView];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setCollectionViewLayout:v4];
  }
  else
  {
    __break(1u);
  }
}

id sub_10054E814()
{
  uint64_t v1 = v0;
  uint64_t v45 = sub_1000CBE70(&qword_10071BE10);
  uint64_t v2 = *(void *)(v45 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  __chkstk_darwin(v45);
  uint64_t v41 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - v5;
  uint64_t v44 = sub_1000CBE70(&qword_10071BE18);
  uint64_t v7 = *(void *)(v44 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v44);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - v10;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCSidebarItemCell(0);
  long long v43 = v11;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for DOCSidebarHeaderCell();
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v12 = (objc_class *)type metadata accessor for DOCSidebarViewController(0);
  uint64_t v42 = v1;
  v49.receiver = v1;
  v49.super_class = v12;
  id result = [super collectionView];
  id v39 = result;
  if (result)
  {
    char v14 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    uint64_t v15 = v41;
    uint64_t v37 = v6;
    uint64_t v16 = v6;
    uint64_t v17 = v45;
    v14(v41, v16, v45);
    uint64_t v18 = v40;
    uint64_t v19 = v44;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v40, v43, v44);
    unint64_t v20 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    unint64_t v21 = (v3 + *(unsigned __int8 *)(v7 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v22 = swift_allocObject();
    uint64_t v38 = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v22 + v20, v15, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v21, v18, v19);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_100556F6C;
    *(void *)(v23 + 24) = v22;
    int v24 = (objc_class *)sub_1000CBE70((uint64_t *)&unk_100709880);
    id v25 = objc_allocWithZone(v24);
    uint64_t v26 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    uint64_t v51 = v24;
    *(void *)&long long v50 = v26;
    uint64_t v27 = (uint64_t)v42 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
    swift_beginAccess();
    sub_1000D225C((uint64_t)&v50, v27);
    swift_endAccess();
    id result = (id)sub_1000CBC00(v27, (uint64_t)&v47, (uint64_t *)&unk_100705D60);
    if (v48)
    {
      sub_1000A54B0(&v47, &v50);
      swift_dynamicCast();
      uint64_t v28 = v46;
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v29 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify();
      sub_1000CBE70(&qword_10071BE20);
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldExpandItem.setter();
      v29(&v50, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      id v30 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify();
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldCollapseItem.setter();
      v30(&v50, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v31 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify();
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willExpandItem.setter();
      v31(&v50, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v32 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify();
      UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willCollapseItem.setter();
      v32(&v50, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v33 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      sub_1000CBE70(&qword_10071BE28);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
      v33(&v50, 0);
      unint64_t v34 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter();
      v34(&v50, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v35 = (void (*)(long long *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
      v35(&v50, 0);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v45);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v43, v44);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10054EF5C@<X0>(unsigned char *a1@<X8>)
{
  long long v47 = a1;
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIListContentConfiguration();
  uint64_t v46 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UICellConfigurationState();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  __chkstk_darwin(v12);
  char v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005502B4();
  id v15 = [v1 _bridgedConfigurationState];
  uint64_t v42 = v14;
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  uint64_t v48 = v11;
  uint64_t v49 = v9;
  swift_dynamicCast();
  uint64_t v16 = (objc_class *)sub_1000CBE70(&qword_10071BDF0);
  v50.receiver = v1;
  v50.super_class = v16;
  id v17 = [super contentView];
  self;
  uint64_t v41 = swift_dynamicCastObjCClassUnconditional();
  UICollectionViewCell.backgroundConfiguration.getter();
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  uint64_t v45 = v8;
  uint64_t v40 = v5;
  if (v18 == 1)
  {
    static UIBackgroundConfiguration.clear()();
    sub_1000CBBA4((uint64_t)v4, (uint64_t *)&unk_10070E2F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  uint64_t v19 = swift_isaMask & *v1;
  int v39 = *((unsigned __int8 *)v1 + *(void *)(v19 + 0x60));
  unint64_t v20 = (char *)v1 + *(void *)(v19 + 104);
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *((void *)v20 + 1);
  uint64_t v23 = *((void *)v20 + 2);
  char v24 = v20[24];
  uint64_t v25 = *((void *)v20 + 5);
  uint64_t v37 = *((void *)v20 + 4);
  uint64_t v38 = v21;
  char v26 = v20[48];
  uint64_t v27 = (void *)*((void *)v20 + 7);
  uint64_t v28 = (int *)sub_1000CBE70((uint64_t *)&unk_100716098);
  uint64_t v30 = v46;
  uint64_t v29 = v47;
  (*(void (**)(unsigned char *, char *, uint64_t))(v46 + 16))(&v47[v28[12]], v48, v49);
  uint64_t v31 = &v29[v28[10]];
  *(void *)uint64_t v31 = v38;
  *((void *)v31 + 1) = v22;
  *((void *)v31 + 2) = v23;
  v31[24] = v24;
  *((void *)v31 + 4) = v37;
  *((void *)v31 + 5) = v25;
  v31[48] = v26;
  *((void *)v31 + 7) = v27;
  unsigned char *v29 = v39;
  (*(void (**)(unsigned char *, char *, uint64_t))(v43 + 32))(&v29[v28[9]], v42, v44);
  uint64_t v32 = v40;
  *(void *)&v29[v28[11]] = v41;
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 32))(&v29[v28[13]], v45, v32);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v30 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v34 = v27;
  return v33(v48, v49);
}

uint64_t sub_10054F3C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v33 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIListContentConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UICellConfigurationState();
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  __chkstk_darwin(v13);
  id v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100550508();
  id v16 = [v1 _bridgedConfigurationState];
  uint64_t v30 = v15;
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  uint64_t v17 = v9;
  swift_dynamicCast();
  int v18 = (objc_class *)sub_1000CBE70(&qword_10071BDF8);
  v34.receiver = v1;
  v34.super_class = v18;
  [super contentView];
  self;
  uint64_t v29 = swift_dynamicCastObjCClassUnconditional();
  UICollectionViewCell.backgroundConfiguration.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    static UIBackgroundConfiguration.clear()();
    sub_1000CBBA4((uint64_t)v5, (uint64_t *)&unk_10070E2F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v33, v5, v6);
  }
  uint64_t v20 = v6;
  char v21 = *((unsigned char *)v1 + *(void *)((swift_isaMask & *v1) + 0x60));
  uint64_t v22 = (void *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x68));
  swift_beginAccess();
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  uint64_t v25 = (int *)sub_1000CBE70(&qword_100710940);
  (*(void (**)(unsigned char *, char *, uint64_t))(v10 + 16))(&a1[v25[12]], v12, v17);
  char v26 = &a1[v25[10]];
  void *v26 = v24;
  v26[1] = v23;
  *a1 = v21;
  (*(void (**)(unsigned char *, char *, uint64_t))(v31 + 32))(&a1[v25[9]], v30, v32);
  *(void *)&a1[v25[11]] = v29;
  (*(void (**)(unsigned char *, char *, uint64_t))(v7 + 32))(&a1[v25[13]], v33, v20);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  swift_bridgeObjectRetain();
  return v27(v12, v17);
}

uint64_t sub_10054F7EC()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v1 - 8);
  char v55 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v56 = *(unsigned char **)(v54 - 8);
  uint64_t v3 = __chkstk_darwin(v54);
  objc_super v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v48 - v5;
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  uint64_t v53 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)sub_1000CBE70((uint64_t *)&unk_100716098);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  id v16 = (char *)&v48 - v15;
  __chkstk_darwin(v14);
  int v18 = (char *)&v48 - v17;
  unint64_t v52 = v0;
  sub_10054EF5C((unsigned char *)&v48 - v17);
  type metadata accessor for UICellConfigurationState();
  sub_1005571D4(qword_1007134A8, (void (*)(uint64_t))&type metadata accessor for UICellConfigurationState);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_1000CBC00((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_100716098);
  if (v19)
  {
    char v20 = *v16;
    sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_100716098);
    uint64_t v21 = (uint64_t)v18;
    uint64_t v23 = v53;
    uint64_t v22 = v54;
    uint64_t v24 = (uint64_t)v56;
    if (v20) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v16, (uint64_t *)&unk_100716098);
    uint64_t v21 = (uint64_t)v18;
    uint64_t v23 = v53;
    uint64_t v22 = v54;
    uint64_t v24 = (uint64_t)v56;
  }
  uint64_t v49 = v7;
  uint64_t v25 = v9;
  static UIListContentConfiguration.subtitleCell()();
  static UIBackgroundConfiguration.listCell()();
  char v26 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v27 = v50;
  v26(v50, v6, v22);
  v26(v6, v27, v22);
  uint64_t v24 = (uint64_t)v56;
  uint64_t v28 = v25;
  uint64_t v7 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 40))(v21 + v10[12], v28, v49);
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 40))(v21 + v10[13], v6, v22);
LABEL_6:
  uint64_t v51 = v21;
  uint64_t v29 = (long long *)(v21 + v10[10]);
  long long v30 = v29[1];
  long long v58 = *v29;
  long long v59 = v30;
  long long v31 = v29[3];
  long long v60 = v29[2];
  long long v61 = v31;
  sub_10042A6E0();
  sub_1000CBC00(v21, (uint64_t)v13, (uint64_t *)&unk_100716098);
  uint64_t v32 = &v13[v10[12]];
  v57[3] = v7;
  v57[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v33 = sub_100052C70(v57);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v23 + 16))(v33, v32, v7);
  objc_super v34 = v52;
  UICollectionViewCell.contentConfiguration.setter();
  uint64_t v35 = v55;
  (*(void (**)(char *, unsigned char *, uint64_t))(v24 + 16))(v55, &v13[v10[13]], v22);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v35, 0, 1, v22);
  UICollectionViewCell.backgroundConfiguration.setter();
  *((unsigned char *)v34 + *(void *)((swift_isaMask & *v34) + 0x60)) = *v13;
  uint64_t v36 = &v13[v10[10]];
  uint64_t v38 = *(void *)v36;
  uint64_t v37 = *((void *)v36 + 1);
  uint64_t v39 = *((void *)v36 + 2);
  char v40 = v36[24];
  uint64_t v41 = *((void *)v36 + 5);
  uint64_t v54 = *((void *)v36 + 4);
  char v42 = v36[48];
  uint64_t v56 = v13;
  uint64_t v43 = (void *)*((void *)v36 + 7);
  uint64_t v44 = (char *)v34 + *(void *)((swift_isaMask & *v34) + 0x68);
  swift_beginAccess();
  char v55 = (char *)*((void *)v44 + 1);
  uint64_t v45 = (void *)*((void *)v44 + 7);
  *(void *)uint64_t v44 = v38;
  *((void *)v44 + 1) = v37;
  *((void *)v44 + 2) = v39;
  v44[24] = v40;
  *((void *)v44 + 4) = v54;
  *((void *)v44 + 5) = v41;
  v44[48] = v42;
  *((void *)v44 + 7) = v43;
  swift_bridgeObjectRetain();
  id v46 = v43;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v56, (uint64_t *)&unk_100716098);
  return sub_1000CBBA4(v51, (uint64_t *)&unk_100716098);
}

uint64_t sub_10054FD70(uint64_t a1)
{
  uint64_t v2 = v1;
  v43[1] = a1;
  uint64_t v3 = sub_1000CBE70((uint64_t *)&unk_10070E2F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v5 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v43[0] = (char *)v43 - v9;
  uint64_t v10 = type metadata accessor for UIListContentConfiguration();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)sub_1000CBE70(&qword_100710940);
  __chkstk_darwin(v13);
  uint64_t v44 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v43 - v16;
  __chkstk_darwin(v18);
  char v20 = (char *)v43 - v19;
  sub_10054F3C4((unsigned char *)v43 - v19);
  type metadata accessor for UICellConfigurationState();
  sub_1005571D4(qword_1007134A8, (void (*)(uint64_t))&type metadata accessor for UICellConfigurationState);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  sub_1000CBC00((uint64_t)v20, (uint64_t)v17, &qword_100710940);
  if (v21)
  {
    char v22 = *v17;
    sub_1000CBBA4((uint64_t)v17, &qword_100710940);
    uint64_t v23 = v45;
    if (v22) {
      goto LABEL_9;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v17, &qword_100710940);
  }
  uint64_t v24 = (void *)UICellConfigurationState.traitCollection.getter();
  id v25 = [v24 sourceOutlineStyle];

  if (v25 == (id)1) {
    static UIListContentConfiguration.prominentInsetGroupedHeader()();
  }
  else {
    static UIListContentConfiguration.header()();
  }
  char v26 = (char *)v43[0];
  static UIBackgroundConfiguration.listHeader()();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v28 = v7;
  uint64_t v29 = v5;
  long long v30 = v7;
  uint64_t v31 = v48;
  v27(v28, (uint64_t)v26, v48);
  uint64_t v32 = v30;
  uint64_t v5 = v29;
  v27(v26, (uint64_t)v32, v31);
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(&v20[v13[12]], v12, v47);
  (*(void (**)(char *, char *, uint64_t))(v29 + 40))(&v20[v13[13]], v26, v31);
  uint64_t v23 = v45;
LABEL_9:
  swift_bridgeObjectRetain();
  UIListContentConfiguration.text.setter();
  uint64_t v33 = v44;
  sub_1000CBC00((uint64_t)v20, (uint64_t)v44, &qword_100710940);
  objc_super v34 = &v33[v13[12]];
  uint64_t v35 = v47;
  v49[3] = v47;
  v49[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v36 = sub_100052C70(v49);
  (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v46 + 16))(v36, v34, v35);
  UICollectionViewCell.contentConfiguration.setter();
  uint64_t v37 = v48;
  (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 16))(v23, &v33[v13[13]], v48);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v23, 0, 1, v37);
  UICollectionViewCell.backgroundConfiguration.setter();
  *((unsigned char *)v2 + *(void *)((swift_isaMask & *v2) + 0x60)) = *v33;
  uint64_t v38 = (uint64_t *)&v33[v13[10]];
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  uint64_t v41 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68));
  swift_beginAccess();
  void *v41 = v40;
  v41[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1000CBBA4((uint64_t)v33, &qword_100710940);
  return sub_1000CBBA4((uint64_t)v20, &qword_100710940);
}

uint64_t sub_1005502B4()
{
  uint64_t v1 = type metadata accessor for UICellConfigurationState();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  uint64_t v8 = type metadata accessor for UIListContentConfiguration();
  int v9 = swift_dynamicCast();
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  if (v9)
  {
    uint64_t v11 = *(void *)(v8 - 8);
    v10(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8) != 1) {
      return sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007160B0);
    }
  }
  else
  {
    v10(v7, 1, 1, v8);
  }
  sub_1000CBBA4((uint64_t)v7, (uint64_t *)&unk_1007160B0);
  id v13 = [v0 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  v15[3] = v8;
  v15[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100052C70(v15);
  static UIListContentConfiguration.subtitleCell()();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t sub_100550508()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UICellConfigurationState();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1000CBE70((uint64_t *)&unk_1007160B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewCell.contentConfiguration.getter();
  sub_1000CBE70(&qword_1007160C0);
  uint64_t v9 = type metadata accessor for UIListContentConfiguration();
  int v10 = swift_dynamicCast();
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  if (v10)
  {
    v11(v8, 0, 1, v9);
    return sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007160B0);
  }
  else
  {
    v11(v8, 1, 1, v9);
    sub_1000CBBA4((uint64_t)v8, (uint64_t *)&unk_1007160B0);
    id v13 = [v1 _bridgedConfigurationState];
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

    v17[3] = v9;
    v17[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100052C70(v17);
    uint64_t v14 = (void *)UICellConfigurationState.traitCollection.getter();
    id v15 = [v14 sourceOutlineStyle];

    if (v15 == (id)1) {
      static UIListContentConfiguration.prominentInsetGroupedHeader()();
    }
    else {
      static UIListContentConfiguration.header()();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return UICollectionViewCell.contentConfiguration.setter();
  }
}

uint64_t sub_10055075C(void (*a1)(char *), uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UICellConfigurationState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (char *)a3 + *(void *)((swift_isaMask & *a3) + 0x68);
  swift_beginAccess();
  a1(v9);
  swift_endAccess();
  id v10 = [a3 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10054F7EC();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1005508B8(void (*a1)(char *), uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UICellConfigurationState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (char *)a3 + *(void *)((swift_isaMask & *a3) + 0x68);
  swift_beginAccess();
  a1(v9);
  swift_endAccess();
  id v10 = [a3 _bridgedConfigurationState];
  static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();

  sub_10054FD70((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_100550A14()
{
  sub_1000CBE70(&qword_10071BE00);
  uint64_t v0 = NSDiffableDataSourceSectionSnapshot.items.getter();
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1)
  {
    uint64_t v2 = (unsigned __int8 *)(v0 + 72);
    do
    {
      int v6 = *v2;
      if (v6 != 255)
      {
        uint64_t v7 = (void *)*((void *)v2 - 3);
        uint64_t v8 = *((void *)v2 - 2);
        uint64_t v9 = *((void *)v2 - 1);
        long long v11 = *(_OWORD *)(v2 - 40);
        swift_unknownObjectRetain();
        sub_1000A9454(v7, v8, v9, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_10019107C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v4 = _swiftEmptyArrayStorage[2];
        unint64_t v3 = _swiftEmptyArrayStorage[3];
        if (v4 >= v3 >> 1) {
          sub_10019107C(v3 > 1, v4 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v4 + 1;
        uint64_t v5 = &_swiftEmptyArrayStorage[6 * v4];
        *((_OWORD *)v5 + 2) = v11;
        v5[6] = v7;
        v5[7] = v8;
        v5[8] = v9;
        *((unsigned char *)v5 + 72) = v6;
      }
      v2 += 48;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100550B5C()
{
  id v0 = [objc_allocWithZone((Class)UICollectionViewLayout) init];
  id v1 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v0 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  qword_10071BD40 = (uint64_t)v1;
}

uint64_t sub_100550BD0()
{
  if (qword_100705310 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10071BD40;
  id v1 = objc_allocWithZone((Class)sub_1000CBE70((uint64_t *)&unk_100709880));
  id v2 = v0;
  uint64_t result = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  qword_10071BD48 = result;
  return result;
}

Swift::Int sub_100550C60()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = *(void **)(v1 + 24);
  sub_10009E6C4(0, &qword_100706E28);
  sub_10010DB6C();
  id v3 = v2;
  AnyHashable.init<A>(_:)();
  AnyHashable.hash(into:)();
  sub_10008E17C((uint64_t)v5);
  return Hasher._finalize()();
}

uint64_t sub_100550CFC()
{
  type metadata accessor for DOCMutableSidebarSection();
  sub_10010DAF8();
  AnyHashable.hash(into:)();
  return sub_10008E17C((uint64_t)v1);
}

Swift::Int sub_100550D78()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  id v2 = *(void **)(v1 + 24);
  sub_10009E6C4(0, &qword_100706E28);
  sub_10010DB6C();
  id v3 = v2;
  AnyHashable.init<A>(_:)();
  AnyHashable.hash(into:)();
  sub_10008E17C((uint64_t)v5);
  return Hasher._finalize()();
}

uint64_t sub_100550E10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  id v2 = *(void **)(*(void *)v0 + 40);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._uint64_t object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  return 0x6E6F6974636573;
}

uint64_t sub_100550E80(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v3 = *(id *)(v2 + 24);
  char v4 = static NSObject.== infix(_:_:)();

  return v4 & 1;
}

uint64_t sub_100550EF0()
{
  sub_1000CBE0C(v0 + 16, (uint64_t)v11, (uint64_t *)&unk_10071CE60);
  sub_1000CBE0C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_10071CE60);
  char v1 = v13;
  if (v13 == 255)
  {
    uint64_t v10 = 0x203A726564616568;
    uint64_t v6 = *(void *)(*(void *)v0 + 32);
    uint64_t v7 = *(void **)(*(void *)v0 + 40);
    swift_bridgeObjectRetain();
    v8._uint64_t countAndFlagsBits = v6;
    v8._uint64_t object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v2 = v12[0];
    uint64_t v3 = v12[1];
    uint64_t v4 = v12[2];
    uint64_t v10 = 0x3A646C6968632020;
    sub_1003126F0((uint64_t)v11);
    v5._uint64_t countAndFlagsBits = sub_100249BF4(v2, v3, v4, v1);
    String.append(_:)(v5);
    swift_bridgeObjectRelease();
    sub_100312750((uint64_t)v11);
  }
  return v10;
}

Swift::Int sub_100550FF0()
{
  Hasher.init(_seed:)();
  char v1 = *(void **)(*(void *)v0 + 24);
  sub_10009E6C4(0, &qword_100706E28);
  sub_10010DB6C();
  id v2 = v1;
  AnyHashable.init<A>(_:)();
  AnyHashable.hash(into:)();
  sub_10008E17C((uint64_t)v8);
  int v3 = *(unsigned __int8 *)(v0 + 40);
  if (v3 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 24);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v6 = *(void **)(v0 + 16);
    Hasher._combine(_:)(1u);
    sub_10010ED28(v6, v5, v4, v3);
    sub_10010ED28(v6, v5, v4, v3);
    sub_100249E60((unint64_t)v6, v5, v4, v3);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    sub_1000A7C1C(v6, v5, v4, v3);
    sub_1000A7C1C(v6, v5, v4, v3);
  }
  return Hasher._finalize()();
}

void sub_100551150()
{
  char v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  int v4 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v5 = *(void **)(*(void *)v0 + 24);
  sub_10009E6C4(0, &qword_100706E28);
  sub_10010DB6C();
  id v6 = v5;
  AnyHashable.init<A>(_:)();
  AnyHashable.hash(into:)();
  sub_10008E17C((uint64_t)v7);
  if (v4 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    sub_10010ED28(v1, v2, v3, v4);
    sub_10010ED28(v1, v2, v3, v4);
    sub_100249E60((unint64_t)v1, v2, v3, v4);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    sub_1000A7C1C(v1, v2, v3, v4);
    sub_1000A7C1C(v1, v2, v3, v4);
  }
}

Swift::Int sub_1005512A0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  int v5 = *((unsigned __int8 *)v0 + 40);
  Hasher.init(_seed:)();
  id v6 = *(void **)(v1 + 24);
  sub_10009E6C4(0, &qword_100706E28);
  sub_10010DB6C();
  id v7 = v6;
  AnyHashable.init<A>(_:)();
  AnyHashable.hash(into:)();
  sub_10008E17C((uint64_t)v9);
  if (v5 == 255)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    sub_10010ED28(v2, v3, v4, v5);
    sub_10010ED28(v2, v3, v4, v5);
    sub_100249E60((unint64_t)v2, v3, v4, v5);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    sub_1000A7C1C(v2, v3, v4, v5);
    sub_1000A7C1C(v2, v3, v4, v5);
  }
  return Hasher._finalize()();
}

uint64_t sub_1005513F8()
{
  return sub_100550EF0();
}

uint64_t sub_100551434(long long *a1, long long *a2)
{
  long long v2 = a1[1];
  long long v5 = *a1;
  v6[0] = v2;
  *(_OWORD *)((char *)v6 + 9) = *(long long *)((char *)a1 + 25);
  long long v3 = a2[1];
  long long v7 = *a2;
  v8[0] = v3;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a2 + 25);
  return sub_100555C20((uint64_t)&v5, (uint64_t *)&v7) & 1;
}

void sub_100551480(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)a3;
  long long v5 = *(void **)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(a3 + 32);
  int v8 = *(unsigned __int8 *)(a3 + 40);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = (void *)Strong;
    if (v8 != 255)
    {
      sub_10010ED28(v5, v6, v7, v8);
      sub_100551550(a1, (char *)v5, v6, v7, v8, v4);
      sub_1000A7C1C(v5, v6, v7, v8);
    }
  }
}

void sub_100551550(void *a1, char *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v12 = *(void *)&v6[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
  if (v12)
  {
    unsigned __int8 v13 = *(void **)(v12 + 24);
    if (v13)
    {
      type metadata accessor for DOCSidebarItemCell(0);
      uint64_t v14 = a1;
      id v15 = v13;
      char v16 = static NSObject.== infix(_:_:)();

      if (v16) {
        return;
      }
    }
  }
  *(void *)((char *)a1 + qword_1007155E0 + 8) = &off_10069D530;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = a4;
  sub_100554FC0((uint64_t)a1, a2, a3, a4, a5);
  if (a5 == 1 && (type metadata accessor for DOCFileProviderSource(0), (uint64_t v18 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v19 = v18;
    char v20 = (objc_class *)type metadata accessor for DOCEjectionController();
    char v21 = (char *)objc_allocWithZone(v20);
    swift_unknownObjectWeakInit();
    *(void *)&v21[OBJC_IVAR____TtC5Files21DOCEjectionController_observation] = 0;
    swift_unknownObjectWeakInit();
    *(void *)&v21[OBJC_IVAR____TtC5Files21DOCEjectionController____lazy_storage____button] = 0;
    *(void *)&v21[OBJC_IVAR____TtC5Files21DOCEjectionController_source] = v19;
    swift_unknownObjectWeakAssign();
    sub_10010ED28(a2, a3, a4, 1u);
    sub_10010ED28(a2, a3, a4, 1u);
    sub_10010ED28(a2, a3, a4, 1u);
    sub_10010ED28(a2, a3, a4, 1u);
    v89.receiver = v21;
    v89.super_class = v20;
    uint64_t v85 = v7;
    [super init];
    uint64_t v90 = v19;
    swift_getKeyPath();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = (char *)v22;
    uint64_t v24 = _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
    swift_release();
    uint64_t v17 = a4;
    swift_release();

    sub_10010EDB8(a2, a3, a4, 1u);
    id v25 = *(void **)&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_observation];
    *(void *)&v23[OBJC_IVAR____TtC5Files21DOCEjectionController_observation] = v24;

    sub_10042ACBC(v22);
    sub_10010EDB8(a2, a3, a4, 1u);
    sub_10010EDB8(a2, a3, a4, 1u);
  }
  else
  {
    sub_10042ACBC(0);
  }
  uint64_t v26 = sub_100249BF4((unint64_t)a2, a3, v17, a5);
  sub_10042C574(v26, v27);
  if (a5 == 1)
  {
    id v29 = [a2 domainName];
    if (v29)
    {
      long long v30 = v29;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_10010EDB8(a2, a3, v17, 1u);
    }
    else
    {
      sub_10010EDB8(a2, a3, v17, 1u);
    }
  }
  __chkstk_darwin(v28);
  id v31 = [a1 window];
  id v32 = v31;
  if (v31) {

  }
  __chkstk_darwin(v32 == 0);
  UIView.doc_performBlock(allowingAnimations:block:)();
  swift_bridgeObjectRelease();
  BOOL v33 = sub_100249914(*(void *)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController], a2, a3, v17, a5);
  sub_100429BD0(v33);
  if (a5 == 2)
  {
    objc_super v34 = a2;
    uint64_t v35 = a2;
  }
  else
  {
    uint64_t v35 = 0;
  }
  uint64_t v36 = *(void **)((char *)a1 + qword_100715600);
  *(void *)((char *)a1 + qword_100715600) = v35;

  unsigned __int8 v37 = sub_100555258(a2, a3, v17, a5, a6);
  int v38 = *((unsigned __int8 *)a1 + qword_100715630);
  *((unsigned char *)a1 + qword_100715630) = v37;
  if (v38 != v37)
  {
    uint64_t v39 = sub_10042DB1C(v37);
    uint64_t v40 = *(void *)((char *)a1 + qword_100715628);
    *(void *)((char *)a1 + qword_100715628) = v39;
    swift_retain();
    sub_10042DF8C(v40);
    swift_release();
    swift_release();
  }
  [a1 setIndentationLevel:0];
  if (a5 != 3 && a5)
  {
    unsigned __int8 v42 = 0;
  }
  else
  {
    uint64_t v41 = a2;
    unsigned __int8 v42 = [v41 isFolder];
  }
  *((unsigned char *)a1 + qword_1007155E8) = v42;
  if (a5 == 1)
  {
    type metadata accessor for DOCExternalDeviceSource();
    BOOL v43 = swift_dynamicCastClass() != 0;
    *((unsigned char *)a1 + qword_1007155F0) = v43;
    type metadata accessor for DOCFileProviderSource(0);
    uint64_t v44 = swift_dynamicCastClass();
    if (v44)
    {
      uint64_t v45 = *(void **)(v44 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
      id v46 = v45;
    }
    else
    {
      uint64_t v45 = 0;
    }
  }
  else
  {
    uint64_t v45 = 0;
    *((unsigned char *)a1 + qword_1007155F0) = 0;
  }
  uint64_t v47 = *(void **)((char *)a1 + qword_100715618);
  *(void *)((char *)a1 + qword_100715618) = v45;
  id v48 = v45;
  sub_10042C9FC(v47);

  if (a5 == 4)
  {
    uint64_t v49 = *(void **)&a2[OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain];
    id v50 = v49;
  }
  else
  {
    uint64_t v49 = 0;
  }
  uint64_t v51 = *(void **)((char *)a1 + qword_100715620);
  *(void *)((char *)a1 + qword_100715620) = v49;
  id v52 = v49;
  sub_10042D1B8(v51);

  if (a5)
  {
    if (a5 != 1
      || (uint64_t v53 = *(void **)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext],
          type metadata accessor for DOCFileProviderSource(0),
          (uint64_t v54 = swift_dynamicCastClass()) == 0)
      || (char v55 = *(void **)(v54 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain)) == 0)
    {
      char v58 = 1;
      goto LABEL_39;
    }
    sub_10010ED28(a2, a3, v17, 1u);
    id v56 = v53;
    id v57 = v55;
    char v58 = sub_10001076C(v57, (uint64_t)v53);
  }
  else
  {
    long long v59 = *(void **)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_pickerContext];
    sub_10010ED28(a2, a3, v17, 0);
    id v57 = v59;
    char v58 = sub_100236694(a2, (uint64_t)v59);
  }

  sub_10010EDB8(a2, a3, v17, a5);
LABEL_39:
  [a1 setUserInteractionEnabled:v58 & 1];
  uint64_t v60 = sub_1001B3D24((uint64_t)&off_100689C70);
  long long v61 = (void *)((char *)a1 + *(void *)((swift_isaMask & *a1) + 0x78));
  swift_beginAccess();
  swift_retain();
  unint64_t v62 = swift_bridgeObjectRetain();
  char v63 = sub_100556550(v62, v60);
  swift_bridgeObjectRelease();
  swift_release();
  if ((v63 & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    uint64_t v64 = swift_endAccess();
    sub_100429FC4(v64);
  }
  swift_release();
  if (*(unsigned char *)(a6 + 49))
  {
    uint64_t v65 = sub_1001B40BC();
    swift_retain();
    unint64_t v66 = swift_bridgeObjectRetain();
    char v67 = sub_100556550(v66, v65);
    swift_bridgeObjectRelease();
    swift_release();
    if ((v67 & 1) == 0)
    {
      swift_beginAccess();
      swift_retain();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      uint64_t v68 = swift_endAccess();
      sub_100429FC4(v68);
    }
    swift_release();
  }
  if (*(unsigned char *)(a6 + 72) == 1)
  {
    uint64_t v88 = a2;
    id v73 = [v88 identifier];
    uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v76 = v75;
    if (v74 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v76 == v77)
    {

LABEL_59:
      swift_bridgeObjectRelease_n();
LABEL_61:
      sub_10010EDB8(a2, a3, a4, 1u);
      return;
    }
    char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_61;
    }
    id v79 = [v88 identifier];
    uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v82 = v81;
    if (v80 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v82 == v83)
    {

      goto LABEL_59;
    }
    char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, 1u);
    if ((v84 & 1) == 0)
    {
      uint64_t v69 = sub_1001B445C();
      swift_retain();
      unint64_t v70 = swift_bridgeObjectRetain();
      char v71 = sub_100556550(v70, v69);
      swift_bridgeObjectRelease();
      swift_release();
      if ((v71 & 1) == 0)
      {
        swift_beginAccess();
        swift_retain();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v61 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v72 = swift_endAccess();
        sub_100429FC4(v72);
      }
      swift_release();
    }
  }
}

uint64_t sub_100552110(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    long long v5 = (void *)result;
    uint64_t v6 = *(void *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 40);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    sub_10030B960(v6, v7);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005521A0(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1000CBE0C((uint64_t)(a3 + 1), (uint64_t)v7, (uint64_t *)&unk_10071CE60);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_10071CE60);
  long long v6 = *a3;
  if (v8[24] == 255)
  {
    type metadata accessor for DOCSidebarHeaderCell();
    swift_unknownObjectRetain();
    uint64_t v4 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_1003127F4((uint64_t)&v6);
  }
  else
  {
    sub_100312724((uint64_t)&v6);
    sub_1003126F0((uint64_t)v7);
    type metadata accessor for DOCSidebarItemCell(0);
    uint64_t v4 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_1003127F4((uint64_t)&v6);
    sub_100312750((uint64_t)v7);
  }
  return v4;
}

uint64_t sub_1005522FC(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    char v8 = sub_10028ADD0(v4, v5, a3 & 1);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

void sub_100552380(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    char v5 = *(unsigned char *)(*(void *)a2 + 16);
    swift_retain();
    sub_10004D62C(v5);
    swift_release();
    type metadata accessor for DOCMutableSidebarSection();
    *(unsigned char *)(swift_dynamicCastClassUnconditional() + 48) = 1;
    sub_1000B8744(0, 0);
    swift_retain();
    sub_100167C64();
    swift_unknownObjectRelease();
    swift_release();
    sub_100284134(0xD000000000000016, 0x80000001005E3070, 0);
  }
}

uint64_t sub_100552488(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a5;
  uint64_t v21 = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  unsigned __int8 v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = a1[1];
  long long v25 = *a1;
  v26[0] = v14;
  *(_OWORD *)((char *)v26 + 9) = *(long long *)((char *)a1 + 25);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  id v15 = (void *)static OS_dispatch_queue.main.getter();
  long long v27 = v25;
  sub_1000CBE0C((uint64_t)v26, (uint64_t)v28, (uint64_t *)&unk_10071CE60);
  uint64_t v16 = swift_allocObject();
  long long v17 = v26[0];
  *(_OWORD *)(v16 + 24) = v25;
  *(void *)(v16 + 16) = a2;
  *(_OWORD *)(v16 + 40) = v17;
  *(_OWORD *)(v16 + 49) = *(_OWORD *)((char *)v26 + 9);
  aBlock[4] = v21;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = v22;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  sub_100312724((uint64_t)&v27);
  sub_1003126F0((uint64_t)v28);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1005571D4((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v23);
}

void sub_1005527A4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    char v5 = *(unsigned char *)(*(void *)a2 + 16);
    swift_retain();
    sub_10004D62C(v5);
    swift_release();
    type metadata accessor for DOCMutableSidebarSection();
    *(unsigned char *)(swift_dynamicCastClassUnconditional() + 48) = 0;
    swift_retain();
    sub_100167C64();
    swift_unknownObjectRelease();
    swift_release();
    sub_100284134(0xD000000000000016, 0x80000001005E3070, 0);
  }
}

BOOL sub_100552898(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  long long v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 40);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    if (v5 == 255)
    {
      BOOL v9 = 0;
    }
    else
    {
      sub_1000A9454(v2, v3, v4, v5);
      uint64_t v8 = swift_unknownObjectRetain();
      BOOL v9 = sub_1001A622C(v8, v1, v2, v3, v4, v5);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v2, v3, v4, v5);
    }
  }
  else
  {
    return 0;
  }
  return v9;
}

void sub_100552980()
{
  uint64_t v0 = sub_1000CBE70(&qword_10071BE30);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v21 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1000CBE70(&qword_10071BE38);
  __chkstk_darwin(v3 - 8);
  int v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_1000CBE70(&qword_10071BE40);
    uint64_t v6 = NSDiffableDataSourceTransaction.sectionTransactions.getter();
    uint64_t v7 = *(void *)(v6 + 16);
    v16[1] = v6;
    if (v7)
    {
      BOOL v9 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
      uint64_t v8 = v1 + 16;
      unint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
      uint64_t v18 = *(void *)(v8 + 56);
      uint64_t v19 = v9;
      unint64_t v11 = v8 + 40;
      uint64_t v12 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 32);
      long long v17 = (void (**)(uint64_t, char *, uint64_t))(v8 + 16);
      uint64_t v20 = v8;
      unsigned __int8 v13 = (void (**)(uint64_t, uint64_t))(v8 - 8);
      swift_bridgeObjectRetain();
      v16[0] = v11 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v14 = (uint64_t)v21;
      while (1)
      {
        v19(v5, v10, v0);
        id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v11;
        (*(void (**)(char *, void, uint64_t, uint64_t))v11)(v5, 0, 1, v0);
        if ((*v12)(v5, 1, v0) == 1) {
          break;
        }
        (*v17)(v14, v5, v0);
        sub_100552C24(v14, Strong);
        (*v13)(v14, v0);
        v10 += v18;
        if (!--v7) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      id v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
      swift_bridgeObjectRetain();
LABEL_8:
      v15(v5, 1, 1, v0);
    }
    swift_bridgeObjectRelease_n();
  }
}

void sub_100552C24(uint64_t a1, char *a2)
{
  long long v30 = a2;
  uint64_t v2 = sub_1000CBE70(&qword_10071BE00);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CBE70(&qword_10071BE30);
  NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter();
  uint64_t v6 = v32;
  NSDiffableDataSourceSectionTransaction.finalSnapshot.getter();
  uint64_t v7 = NSDiffableDataSourceSectionSnapshot.items.getter();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v7 + 16);
  uint64_t v31 = v6;
  if (v8)
  {
    BOOL v9 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 72);
    unint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      int v12 = *v9;
      if (v12 != 255)
      {
        unsigned __int8 v13 = (void *)*((void *)v9 - 3);
        uint64_t v14 = *((void *)v9 - 2);
        uint64_t v15 = *((void *)v9 - 1);
        sub_10010ED28(v13, v14, v15, *v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v10 = sub_10018F840(0, v10[2] + 1, 1, v10);
        }
        unint64_t v17 = v10[2];
        unint64_t v16 = v10[3];
        if (v17 >= v16 >> 1) {
          unint64_t v10 = sub_10018F840((void *)(v16 > 1), v17 + 1, 1, v10);
        }
        v10[2] = v17 + 1;
        unint64_t v11 = &v10[4 * v17];
        v11[4] = v13;
        _OWORD v11[5] = v14;
        void v11[6] = v15;
        *((unsigned char *)v11 + 56) = v12;
      }
      v9 += 48;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v6 = v31;
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)&v30[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver];
  if (!v18)
  {
    sub_10009E6C4(0, (unint64_t *)&qword_10070B650);
    uint64_t v28 = (char *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_21:

    return;
  }
  uint64_t v19 = v30;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  char v21 = *(unsigned char *)(v6 + 16);
  uint64_t v22 = v19;
  swift_bridgeObjectRetain();
  id v23 = v18;
  swift_retain();
  sub_10004D62C(v21);
  swift_release();
  type metadata accessor for DOCMutableSidebarSection();
  uint64_t v24 = swift_dynamicCastClassUnconditional();
  swift_beginAccess();
  uint64_t v25 = *(void *)(v20 + 16) + 1;
  if (!__OFADD__(*(void *)(v20 + 16), 1))
  {
    *(void *)(v20 + 16) = v25;
    if (v25 == 1) {
      sub_100283EC4(0x655274696D6D6F63, 0xED0000726564726FLL);
    }
    uint64_t v26 = *(void *)&v22[OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession];
    if (v26) {
      unsigned __int8 v27 = *(unsigned char *)(v26 + 17);
    }
    else {
      unsigned __int8 v27 = 0;
    }
    uint64_t v28 = v22;
    swift_retain();
    sub_10010DC20((uint64_t)v10, v27, (uint64_t)v23, v24, v20, v28);
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease();
    swift_release_n();

    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_100553010(char a1)
{
  if (v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_appLaunchOptimizationsActive]) {
    return 1;
  }
  uint64_t v2 = v1;
  if (!objc_msgSend(v1, "doc_hasAppearedOrIsAppearing")) {
    return 1;
  }
  uint64_t v4 = (uint64_t)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource];
  swift_beginAccess();
  sub_1000CBC00(v4, (uint64_t)v11, (uint64_t *)&unk_100705D60);
  if (v12)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v5 = v10;
      if (qword_100705318 != -1) {
        swift_once();
      }
      goto LABEL_11;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)v11, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v5 = (id)qword_10071BD48;
LABEL_11:
  uint64_t v6 = (void *)qword_10071BD48;
  sub_1000CBE70((uint64_t *)&unk_100709880);
  id v7 = v6;
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) != 0
    || *(uint64_t *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController__updatingModelForUIChangeCount] > 0
    || *(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount])
  {
    return 1;
  }
  if (!*(void *)&v2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadIsInProgressCount]) {
    return 0;
  }
  sub_100553210(0xD00000000000003DLL, 0x80000001006000F0, a1 & 1);
  return 2;
}

uint64_t sub_100553210(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    static Logger.UI.getter();
    swift_bridgeObjectRetain_n();
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v16 = a1;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_10009B0E4(v16, a2, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "ERROR: %s", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_10055341C()
{
  uint64_t v1 = v0;
  uint64_t v29 = sub_1000CBE70(&qword_10071BE00);
  uint64_t v2 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v0 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  uint64_t v28 = v9;
  sub_1000CBC00(v9, (uint64_t)&v33, (uint64_t *)&unk_100705D60);
  if (v34)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v10 = v32;
      goto LABEL_8;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v33, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v10 = (id)qword_10071BD48;
LABEL_8:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v11 = NSDiffableDataSourceSnapshot.numberOfSections.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__mutableSectionsData);
    uint64_t result = *(void *)(v13 + 24);
    uint64_t v27 = *(void *)(result + 16);
    if (v27)
    {
      uint64_t v25 = result + 32;
      v23[2] = result;
      swift_bridgeObjectRetain_n();
      v23[1] = v13;
      swift_retain();
      uint64_t v26 = v13 + 32;
      swift_beginAccess();
      uint64_t v14 = 0;
      uint64_t v24 = (void (**)(char *, uint64_t))(v2 + 8);
      v23[3] = (char *)&type metadata for Any + 8;
      while (1)
      {
        uint64_t v16 = *(void *)(*(void *)v26 + 16);
        long long v30 = *(_OWORD *)(v25 + 16 * v14);
        if (v16)
        {
          uint64_t v17 = v4;
          sub_10009E6C4(0, (unint64_t *)&qword_100706710);
          uint64_t v18 = v30;
          swift_bridgeObjectRetain_n();
          swift_unknownObjectRetain();
          uint64_t v19 = 32;
          while (1)
          {
            uint64_t v20 = *(void **)(v18 + 24);
            swift_unknownObjectRetain();
            id v21 = v20;
            char v22 = static NSObject.== infix(_:_:)();

            if (v22) {
              break;
            }
            swift_unknownObjectRelease();
            v19 += 16;
            if (!--v16) {
              goto LABEL_20;
            }
          }
          swift_unknownObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease_n();
          uint64_t v4 = v17;
        }
        else
        {
          swift_unknownObjectRetain();
        }
        sub_100556D10();
        swift_unknownObjectRetain();
        NSDiffableDataSourceSectionSnapshot.init()();
        sub_1000CBC00(v28, (uint64_t)&v33, (uint64_t *)&unk_100705D60);
        if (!v34) {
          break;
        }
        sub_1000CBE70((uint64_t *)&unk_100709880);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_25;
        }
        id v15 = v31;
LABEL_12:
        ++v14;
        long long v33 = v30;
        UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

        (*v24)(v4, v29);
        swift_unknownObjectRelease_n();
        if (v14 == v27)
        {
          swift_release();
          return swift_bridgeObjectRelease_n();
        }
      }
      sub_1000CBBA4((uint64_t)&v33, (uint64_t *)&unk_100705D60);
LABEL_25:
      if (qword_100705318 != -1) {
        swift_once();
      }
      id v15 = (id)qword_10071BD48;
      goto LABEL_12;
    }
  }
  return result;
}

uint64_t sub_1005538FC(uint64_t a1, char a2)
{
  sub_1000CBE0C(a1, (uint64_t)v26, &qword_100717530);
  uint64_t v16 = v26[1];
  uint64_t v17 = v26[0];
  uint64_t v20 = v26[3];
  id v21 = (void *)v26[2];
  uint64_t v19 = v26[4];
  unsigned __int8 v18 = v27;
  sub_1000CBE0C(a1, (uint64_t)v23, &qword_100717530);
  sub_100553D88((uint64_t)v24);
  uint64_t v4 = v24[0];
  uint64_t v5 = v24[1];
  uint64_t v7 = (void *)v24[2];
  uint64_t v6 = v24[3];
  uint64_t v8 = v24[4];
  unsigned __int8 v9 = v25;
  sub_1000CBE0C(a1, (uint64_t)v32, &qword_100717530);
  char v22 = a2;
  if (v32[0])
  {
    sub_1000CBE0C(a1, (uint64_t)&v29, &qword_100717530);
    sub_1000CBE0C((uint64_t)v24, (uint64_t)v31, &qword_100717530);
    if (v31[0])
    {
      v35[0] = v4;
      v35[1] = v5;
      v35[2] = (uint64_t)v7;
      v35[3] = v6;
      v35[4] = v8;
      unsigned __int8 v36 = v9;
      long long v33 = v29;
      v34[0] = *(_OWORD *)v30;
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v30[9];
      long long v38 = v29;
      sub_1000CBE0C((uint64_t)v34, (uint64_t)v37, (uint64_t *)&unk_10071CE60);
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100556D64);
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100556D64);
      sub_100556DC4((uint64_t)v24, (void (*)(void, void, void, void, void, void))sub_100556D64);
      char v10 = sub_100555C20((uint64_t)&v33, v35);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v7, v6, v8, v9);
      sub_1003127F4((uint64_t)&v38);
      sub_100312750((uint64_t)v37);
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100488A14);
    }
    else
    {
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100556D64);
      swift_unknownObjectRetain();
      sub_1000A9454(v21, v20, v19, v18);
      swift_unknownObjectRelease();
      sub_1000A7C1C(*(id *)v30, *(uint64_t *)&v30[8], *(uint64_t *)&v30[16], v30[24]);
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100488A14);
      char v10 = 0;
    }
  }
  else
  {
    sub_1000CBE0C((uint64_t)v24, (uint64_t)v35, &qword_100717530);
    char v10 = v35[0] == 0;
  }
  uint64_t v11 = sub_100550A14()[2];
  swift_bridgeObjectRelease();
  if (v11)
  {
    os_log_type_t v12 = sub_100550A14();
    sub_1000CBE70(&qword_10071BE00);
    NSDiffableDataSourceSectionSnapshot.delete(_:)((Swift::OpaquePointer)v12);
    swift_bridgeObjectRelease();
  }
  if ((v10 & 1) == 0)
  {
    sub_1000CBE0C((uint64_t)v24, (uint64_t)&v29, &qword_100717530);
    if ((void)v29)
    {
      sub_1000CBE70((uint64_t *)&unk_10070F6C0);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_1005A0030;
      *(void *)(v13 + 32) = v4;
      *(void *)(v13 + 40) = v5;
      *(void *)(v13 + 48) = v7;
      *(void *)(v13 + 56) = v6;
      *(void *)(v13 + 64) = v8;
      *(unsigned char *)(v13 + 72) = v9;
      sub_100556DC4((uint64_t)v24, (void (*)(void, void, void, void, void, void))sub_100556D64);
      swift_unknownObjectRetain();
      sub_1000A9454(v7, v6, v8, v9);
      sub_1000CBE70(&qword_10071BE00);
      NSDiffableDataSourceSectionSnapshot.delete(_:)((Swift::OpaquePointer)v13);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000A7C1C(v7, v6, v8, v9);
    }
    sub_1000CBE0C(a1, (uint64_t)v28, &qword_100717530);
    if (v28[0])
    {
      sub_1000CBE70((uint64_t *)&unk_10070F6C0);
      uint64_t v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1005A0030;
      *(void *)(v14 + 32) = v17;
      *(void *)(v14 + 40) = v16;
      *(void *)(v14 + 48) = v21;
      *(void *)(v14 + 56) = v20;
      *(void *)(v14 + 64) = v19;
      *(unsigned char *)(v14 + 72) = v18;
      sub_100556DC4(a1, (void (*)(void, void, void, void, void, void))sub_100556D64);
      swift_unknownObjectRetain();
      sub_1000A9454(v21, v20, v19, v18);
      sub_1000CBE70(&qword_10071BE00);
      NSDiffableDataSourceSectionSnapshot.append(_:to:)();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000A7C1C(v21, v20, v19, v18);
    }
  }
  sub_1000CBE70(&qword_10071BE00);
  NSDiffableDataSourceSectionSnapshot.append(_:to:)();
  sub_100555A18(v22 & 1);
  return sub_100556DC4((uint64_t)v24, (void (*)(void, void, void, void, void, void))sub_100488A14);
}

void sub_100553D88(uint64_t a1@<X8>)
{
  sub_1000CBE70(&qword_10071BE00);
  uint64_t v2 = NSDiffableDataSourceSectionSnapshot.items.getter();
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = *(void **)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = *(void *)(v2 + 64);
    int v6 = *(unsigned __int8 *)(v2 + 72);
    long long v9 = *(_OWORD *)(v2 + 32);
    swift_unknownObjectRetain();
    sub_1000A9454(v3, v4, v5, v6);
    swift_bridgeObjectRelease();
    if (v6 == 255)
    {
      char v7 = -1;
      long long v8 = v9;
      goto LABEL_7;
    }
    swift_unknownObjectRelease();
    sub_1000A7C1C(v3, v4, v5, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = 0;
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  char v7 = 0;
  long long v8 = 0uLL;
LABEL_7:
  *(_OWORD *)a1 = v8;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v7;
}

uint64_t sub_100553E80(uint64_t a1, void *a2, long long *a3, uint64_t *a4, char a5, uint64_t a6, uint64_t a7)
{
  sub_1000CBE0C(a7, (uint64_t)v41, &qword_100717530);
  v30[1] = v41[0];
  id v31 = (id)v41[2];
  uint64_t v32 = v41[3];
  uint64_t v33 = v41[4];
  int v34 = v42;
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  __chkstk_darwin(v14);
  unsigned __int8 v37 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (__objc2_class *)(a1 + 88);
  swift_beginAccess();
  sub_10010ED28(a2, (uint64_t)a3, (uint64_t)a4, a5);
  sub_1005572F4(a1 + 88, (unint64_t)a2, (uint64_t)a3, (uint64_t)a4, a5);
  uint64_t v18 = v17;
  sub_10010EDB8(a2, (uint64_t)a3, (uint64_t)a4, a5);
  int64_t v19 = *(void *)(*(void *)(a1 + 88) + 16);
  if (v19 < v18)
  {
    __break(1u);
    goto LABEL_19;
  }
  sub_10051634C(v18, v19);
  swift_endAccess();
  sub_1000CBE0C(a7, (uint64_t)&v43, &qword_100717530);
  if ((void)v43)
  {
    a3 = &v43;
    void v44[2] = v43;
    v45[0] = v44[0];
    *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)((char *)v44 + 9);
    uint64_t v18 = a6 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
    swift_beginAccess();
    sub_1000CBC00(v18, (uint64_t)v39, (uint64_t *)&unk_100705D60);
    uint64_t v16 = _TtC5FilesP33_39E00B7F57686CC7F9EA376E8E1834E735DOCSizeCategoryDependantConstraints;
    if (v40)
    {
      swift_unknownObjectRetain();
      sub_1000A9454(v31, v32, v33, v34);
      sub_1000CBE70((uint64_t *)&unk_100709880);
      char v20 = swift_dynamicCast();
      a6 = v36;
      if (v20)
      {
        a4 = &qword_100705000;
        id v21 = _TtC5FilesP33_39E00B7F57686CC7F9EA376E8E1834E735DOCSizeCategoryDependantConstraints;
        char v22 = (__objc2_class *)v47[0];
        goto LABEL_9;
      }
    }
    else
    {
      swift_unknownObjectRetain();
      sub_1000A9454(v31, v32, v33, v34);
      sub_1000CBBA4((uint64_t)v39, (uint64_t *)&unk_100705D60);
      a6 = v36;
    }
    a4 = &qword_100705000;
    if (qword_100705318 == -1)
    {
LABEL_8:
      id v21 = v16;
      char v22 = v16[85].isa;
LABEL_9:
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      sub_1000CBE70((uint64_t *)&unk_10070F6C0);
      id v23 = (_OWORD *)swift_allocObject();
      v23[1] = xmmword_1005A0030;
      a3[6] = a3[3];
      sub_1000CBE0C((uint64_t)v45, (uint64_t)v47, (uint64_t *)&unk_10071CE60);
      long long v24 = a3[4];
      v23[2] = a3[3];
      v23[3] = v24;
      *(_OWORD *)((char *)v23 + 57) = *(long long *)((char *)a3 + 73);
      sub_100312724((uint64_t)v46);
      sub_1003126F0((uint64_t)v47);
      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v23);
      swift_bridgeObjectRelease();
      sub_1000CBC00(v18, (uint64_t)v39, (uint64_t *)&unk_100705D60);
      if (v40)
      {
        sub_1000CBE70((uint64_t *)&unk_100709880);
        char v25 = swift_dynamicCast();
        uint64_t v26 = v35;
        if (v25)
        {
          unsigned __int8 v27 = v38;
LABEL_16:
          uint64_t v28 = v37;
          dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

          sub_1003127F4((uint64_t)v46);
          sub_100312750((uint64_t)v47);
          (*(void (**)(char *, uint64_t))(v26 + 8))(v28, a6);
          goto LABEL_17;
        }
      }
      else
      {
        sub_1000CBBA4((uint64_t)v39, (uint64_t *)&unk_100705D60);
        uint64_t v26 = v35;
      }
      if (a4[99] != -1) {
        swift_once();
      }
      unsigned __int8 v27 = v21[85].isa;
      goto LABEL_16;
    }
LABEL_19:
    swift_once();
    goto LABEL_8;
  }
LABEL_17:
  sub_1000A767C();
  return 0;
}

id DOCSidebarViewController.collectionViewLayout.getter()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for DOCSidebarViewController(0);
  id result = [super collectionView];
  if (result)
  {
    uint64_t v2 = result;
    id v3 = [result collectionViewLayout];

    self;
    return (id)swift_dynamicCastObjCClassUnconditional();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100554438(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a2;
  uint64_t v44 = a1;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
  uint64_t v38 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  __chkstk_darwin(v2);
  objc_super v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v18 = (void *)Strong;
  uint64_t v19 = Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v19, (uint64_t)&v48, (uint64_t *)&unk_100705D60);
  if (v49)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v20 = v47;
      goto LABEL_10;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v48, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v20 = (id)qword_10071BD48;
LABEL_10:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  IndexPath.init(row:section:)();
  unint64_t v22 = IndexPath.section.getter();
  uint64_t v23 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  if ((v22 & 0x8000000000000000) != 0 || v22 >= *(void *)(v23 + 16))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v46);

    return 0;
  }
  else
  {
    long long v36 = *(_OWORD *)(v23 + 16 * v22 + 32);
    uint64_t v35 = v4;
    uint64_t v24 = v36;
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v25 = [v18 traitCollection];
    id v26 = [v25 sourceOutlineStyle];

    unsigned __int8 v27 = *(void (**)(char *, void, uint64_t))(v37 + 104);
    uint64_t v28 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:);
    uint64_t v44 = v24;
    int v29 = *(unsigned __int8 *)(v24 + 73);
    if (v26 != (id)1) {
      uint64_t v28 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.Appearance.sidebar(_:);
    }
    v27(v7, *v28, v5);
    long long v30 = v41;
    UICollectionLayoutListConfiguration.init(appearance:)();
    id v31 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection(_:);
    if (!v29) {
      id v31 = (unsigned int *)&enum case for UICollectionLayoutListConfiguration.HeaderMode.none(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v38 + 104))(v35, *v31, v39);
    UICollectionLayoutListConfiguration.headerMode.setter();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    UICollectionLayoutListConfiguration._didEndSwipingHandler.setter();
    sub_10009E6C4(0, &qword_10070AED0);
    id v21 = (void *)static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
    long long v48 = v36;
    uint64_t v32 = v46;
    if (NSDiffableDataSourceSnapshot.numberOfItems(inSection:)() > 0) {
      goto LABEL_24;
    }
    if (qword_100705320 != -1) {
      swift_once();
    }
    if (byte_10071BD50 != 1)
    {
      [v21 contentInsets];
      [v21 setContentInsets:0.0];
      [v21 contentInsets];
      [v21 setContentInsets:];
LABEL_24:
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v32);
      return v21;
    }
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v32);
    return 0;
  }
}

id sub_100554BA0()
{
  uint64_t v0 = sub_1000CBE70((uint64_t *)&unk_100709870);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)UISwipeActionsConfiguration) init];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return v4;
  }
  uint64_t v6 = (void *)Strong;
  uint64_t v7 = Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v7, (uint64_t)&v19, (uint64_t *)&unk_100705D60);
  if (*((void *)&v20[0] + 1))
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v8 = (id)v17;
      goto LABEL_9;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v19, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10071BD48;
LABEL_9:
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  sub_100486DAC((uint64_t)v16);
  sub_1000CBE0C((uint64_t)v16, (uint64_t)&v17, &qword_100717530);
  if (!(void)v17)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
LABEL_18:

    return v4;
  }
  long long v19 = v17;
  v20[0] = v18[0];
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)v18 + 9);
  sub_1000CBE0C((uint64_t)v20, (uint64_t)v21, (uint64_t *)&unk_10071CE60);
  sub_1000CBE0C((uint64_t)v21, (uint64_t)v23, (uint64_t *)&unk_10071CE60);
  if (v23[24] == 255)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    long long v22 = v19;
    sub_1003127F4((uint64_t)&v22);
    goto LABEL_18;
  }
  unint64_t v15 = (unint64_t)_swiftEmptyArrayStorage;
  id v9 = sub_10030E708(&v19);
  if (v9)
  {
    id v10 = v9;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
      uint64_t v14 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_10009E6C4(0, (unint64_t *)&unk_10071A5A0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [self configurationWithActions:isa];

  long long v22 = v19;
  sub_1003127F4((uint64_t)&v22);
  sub_100312750((uint64_t)v21);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v12;
}

void sub_100554F64(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    a2();
  }
}

uint64_t sub_100554FC0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  if (a5 && a5 != 3)
  {
    if (a5 == 2)
    {
      uint64_t v12 = type metadata accessor for DOCSidebarItemCell.TagIconProvider();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a2;
      *(unsigned char *)(v13 + 24) = [a2 labelIndex] == 0;
      void v27[3] = v12;
      v27[4] = &off_1006ABAC0;
      v27[0] = v13;
      goto LABEL_13;
    }
    goto LABEL_7;
  }
  id v14 = a2;
  id v15 = objc_msgSend(objc_msgSend(*(id *)(v6+ OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration), "sourceListUI"), "nonThumbnailedIconForItem:", v14);

  swift_unknownObjectRelease();
  if (!v15)
  {
LABEL_7:
    id v15 = sub_10024A91C((unint64_t)a2, a3, a4, a5);
    char v16 = v17 & 1;
    goto LABEL_8;
  }
  char v16 = 0;
LABEL_8:
  uint64_t v18 = type metadata accessor for DOCSidebarItemCell.RawImageIconProvider();
  uint64_t v19 = swift_allocObject();
  if (!v15)
  {
    if (qword_1007051D8 != -1) {
      swift_once();
    }
    char v16 = byte_100737560;
    id v15 = (id)qword_100737558;
  }
  *(void *)(v19 + 16) = v15;
  *(unsigned char *)(v19 + 24) = v16;
  id v25 = (ValueMetadata *)v18;
  id v26 = &off_1006ABAD0;
  *(void *)&long long v24 = v19;
  sub_1001146DC(&v24, (uint64_t)v27);
LABEL_13:
  sub_1000D4774((uint64_t)v27, (uint64_t)v23);
  id v25 = &_s21CacheableIconProviderVN;
  id v26 = &off_1006B73A8;
  uint64_t v20 = swift_allocObject();
  *(void *)&long long v24 = v20;
  swift_unknownObjectWeakInit();
  *(void *)(v20 + 24) = a2;
  *(void *)(v20 + 32) = a3;
  *(void *)(v20 + 40) = a4;
  *(unsigned char *)(v20 + 48) = a5;
  sub_1001146DC(v23, v20 + 56);
  uint64_t v21 = a1 + qword_1007155F8;
  swift_beginAccess();
  sub_10010ED28(a2, a3, a4, a5);
  sub_100556CA8((uint64_t)&v24, v21);
  swift_endAccess();
  sub_10042B050();
  sub_1000CBBA4((uint64_t)&v24, &qword_1007160A8);
  return sub_10009B1B8((uint64_t)v27);
}

uint64_t sub_100555258(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  switch(*(unsigned char *)(a5 + 16))
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = 0;
      if ((v10 & 1) == 0) {
        return v11;
      }
LABEL_4:
      uint64_t v12 = *(void *)(v5 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
      if (!v12 || *(unsigned char *)(v12 + 16) != 1) {
        return 0;
      }
      if (a4 == 1)
      {
        swift_retain();
        sub_10010ED28(a1, a2, a3, 1u);
        sub_10047DB60();
        id v13 = [a1 identifier];
        char v14 = sub_1005350BC();

        swift_bridgeObjectRelease();
        if ((v14 & 1) != 0 || ![a1 status])
        {
          sub_10010EDB8(a1, a2, a3, 1u);
          swift_release();
        }
        else
        {
          id v15 = [a1 status];
          uint64_t v11 = 1;
          sub_10010EDB8(a1, a2, a3, 1u);
          swift_release();
          if (v15 != (id)2) {
            return v11;
          }
        }
      }
      return 2;
  }
}

id sub_1005554A0(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6)
{
  uint64_t v7 = v6;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v15 = (void *)Strong;
    char v16 = *(void **)(v7 + 8);
    uint64_t v17 = *(void *)(v7 + 16);
    uint64_t v18 = *(void *)(v7 + 24);
    char v19 = *(unsigned char *)(v7 + 32);
    id v20 = sub_10055563C(a3, v16, v17, v18, v19, a4, a5);
    if (v20)
    {
      uint64_t v21 = v20;
    }
    else
    {
      long long v22 = (void *)(v7 + 40);
      uint64_t v24 = *(void *)(v7 + 64);
      uint64_t v23 = *(void *)(v7 + 72);
      sub_1000A6B78(v22, v24);
      uint64_t v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, double, double, double))(v23 + 8))(a1, a2, a3, v24, v23, a4, a5, a6);
      sub_1005557C4(v21, v25 & 1, a3, v16, v17, v18, v19, a4, a5);
    }
  }
  else
  {
    if (qword_1007051D8 != -1) {
      swift_once();
    }
    return (id)qword_100737558;
  }
  return v21;
}

id sub_10055563C(void *a1, void *a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7)
{
  id v15 = (uint64_t *)(v7 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess();
  uint64_t v16 = *v15;
  uint64_t v17 = *(void *)(*v15 + 16);
  sub_10010ED28(a2, a3, a4, a5);
  id v18 = a1;
  swift_bridgeObjectRetain();
  if (v17 && (unint64_t v19 = sub_10017C290((unint64_t)a2, a3, a4, a5), (v20 & 1) != 0))
  {
    unint64_t v21 = *(void *)(*(void *)(v16 + 56) + 8 * v19);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v21 = sub_10049492C((uint64_t)_swiftEmptyArrayStorage);
  }
  swift_bridgeObjectRelease();
  sub_10010EDB8(a2, a3, a4, a5);
  if (!*(void *)(v21 + 16) || (unint64_t v22 = sub_10017C240((uint64_t)v18), (v23 & 1) == 0))
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v24 = *(void *)(v21 + 56) + 32 * v22;
  double v26 = *(double *)v24;
  double v25 = *(double *)(v24 + 8);
  id v27 = *(id *)(v24 + 16);

  swift_bridgeObjectRelease();
  if (v26 != a6 || v25 != a7)
  {

    return 0;
  }
  return v27;
}

void sub_1005557C4(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, char a7, double a8, double a9)
{
  id v18 = (void *)(v9 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_itemToCachedIcon);
  swift_beginAccess();
  sub_10010ED28(a4, a5, a6, a7);
  id v19 = a3;
  id v33 = a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v21 = (void *)*v18;
  uint64_t v35 = (void *)*v18;
  void *v18 = 0x8000000000000000;
  unint64_t v23 = sub_10017C290((unint64_t)a4, a5, a6, a7);
  uint64_t v24 = v21[2];
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_10;
  }
  LOBYTE(a3) = v22;
  if (v21[3] >= v26)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_10:
    sub_100358DFC();
    unint64_t v21 = v35;
    goto LABEL_6;
  }
  sub_10034F818(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v21 = v35;
  unint64_t v27 = sub_10017C290((unint64_t)a4, a5, a6, a7);
  if ((a3 & 1) != (v28 & 1))
  {
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v23 = v27;
LABEL_6:
  void *v18 = v21;
  swift_bridgeObjectRelease();
  int v29 = (void *)*v18;
  swift_bridgeObjectRetain();
  if ((a3 & 1) == 0)
  {
    unint64_t v30 = sub_10049492C((uint64_t)_swiftEmptyArrayStorage);
    sub_1003E2614(v23, (uint64_t)a4, a5, a6, a7, v30, v29);
    sub_10010ED28(a4, a5, a6, a7);
  }
  uint64_t v31 = v29[7];
  swift_bridgeObjectRelease();
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v36 = *(void *)(v31 + 8 * v23);
  *(void *)(v31 + 8 * v23) = 0x8000000000000000;
  sub_1003E0ACC((uint64_t)v33, a2 & 1, v19, v32, a8, a9);
  *(void *)(v31 + 8 * v23) = v36;

  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_10010EDB8(a4, a5, a6, a7);
}

void sub_100555A18(int a1)
{
  sub_100553D88((uint64_t)v9);
  uint64_t v2 = v9[0];
  uint64_t v3 = v9[1];
  id v4 = (void *)v9[2];
  uint64_t v5 = v9[3];
  uint64_t v6 = v9[4];
  unsigned __int8 v7 = v10;
  sub_1000CBE0C((uint64_t)v9, (uint64_t)v11, &qword_100717530);
  if (v11[0])
  {
    sub_1000CBE70(&qword_10071BE00);
    if ((NSDiffableDataSourceSectionSnapshot.isExpanded(_:)() ^ a1))
    {
      sub_1000CBE70((uint64_t *)&unk_10070F6C0);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1005A0030;
      *(void *)(v8 + 32) = v2;
      *(void *)(v8 + 40) = v3;
      *(void *)(v8 + 48) = v4;
      *(void *)(v8 + 56) = v5;
      *(void *)(v8 + 64) = v6;
      *(unsigned char *)(v8 + 72) = v7;
      swift_unknownObjectRetain();
      sub_1000A9454(v4, v5, v6, v7);
      if (a1) {
        NSDiffableDataSourceSectionSnapshot.expand(_:)((Swift::OpaquePointer)v8);
      }
      else {
        NSDiffableDataSourceSectionSnapshot.collapse(_:)((Swift::OpaquePointer)v8);
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    sub_1000A7C1C(v4, v5, v6, v7);
  }
}

uint64_t _s6XCTestCMa()
{
  return self;
}

uint64_t sub_100555B88(uint64_t a1)
{
  return sub_10042C988(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_100555B90()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_10071BD50 = v2;
}

uint64_t sub_100555C20(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  id v5 = *(id *)(v4 + 24);
  char v6 = static NSObject.== infix(_:_:)();

  if (v6)
  {
    int v7 = *(unsigned __int8 *)(a1 + 40);
    int v8 = *((unsigned __int8 *)a2 + 40);
    char v9 = (v7 & v8) == 255;
    if (v7 != 255 && v8 != 255)
    {
      unsigned __int8 v10 = *(void **)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v12 = *(void *)(a1 + 32);
      char v14 = (void *)a2[2];
      uint64_t v13 = a2[3];
      uint64_t v15 = a2[4];
      sub_1000A9454(v10, v11, v12, v7);
      sub_1000A9454(v10, v11, v12, v7);
      sub_1000A9454(v14, v13, v15, v8);
      unint64_t v16 = sub_100249E60((unint64_t)v10, v11, v12, v7);
      uint64_t v18 = v17;
      if (v16 == sub_100249E60((unint64_t)v14, v13, v15, v8) && v18 == v19) {
        char v9 = 1;
      }
      else {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000A7C1C(v14, v13, v15, v8);
      sub_1000A7C1C(v10, v11, v12, v7);
      sub_1000A7C1C(v10, v11, v12, v7);
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

void sub_100555DF0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v34 = a1 + 32;
  id v5 = _swiftEmptyArrayStorage;
  char v32 = (unsigned __int8 *)(a2 + 72);
  unint64_t v30 = *(void *)(a1 + 16);
  while (1)
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    uint64_t v35 = v5;
    unint64_t v33 = v6;
LABEL_7:
    if (v4 == v6)
    {
      __break(1u);
      return;
    }
    int v7 = (long long *)(v34 + 48 * v4);
    char v9 = (void *)*((void *)v7 + 2);
    uint64_t v8 = *((void *)v7 + 3);
    uint64_t v10 = *((void *)v7 + 4);
    int v11 = *((unsigned __int8 *)v7 + 40);
    unint64_t v36 = v4 + 1;
    uint64_t v12 = *(void *)(v3 + 16);
    uint64_t v39 = v8;
    uint64_t v40 = v10;
    long long v37 = *v7;
    if (v12) {
      break;
    }
    swift_unknownObjectRetain();
    sub_1000A9454(v9, v8, v10, v11);
    unint64_t v4 = v36;
LABEL_27:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_10019107C(0, v5[2] + 1, 1);
    }
    long long v26 = v37;
    unint64_t v28 = v5[2];
    unint64_t v27 = v5[3];
    if (v28 >= v27 >> 1)
    {
      sub_10019107C(v27 > 1, v28 + 1, 1);
      long long v26 = v37;
    }
    uint64_t v5[2] = v28 + 1;
    int v29 = &v5[6 * v28];
    *((_OWORD *)v29 + 2) = v26;
    v29[6] = v9;
    v29[7] = v39;
    v29[8] = v40;
    *((unsigned char *)v29 + 72) = v11;
    if (v4 == v2) {
      return;
    }
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100706710);
  uint64_t v44 = *(void **)(v37 + 24);
  swift_unknownObjectRetain();
  uint64_t v38 = v9;
  int v41 = v11;
  sub_1000A9454(v9, v8, v10, v11);
  swift_bridgeObjectRetain();
  uint64_t v13 = v32;
  while (1)
  {
    uint64_t v45 = v12;
    uint64_t v15 = (void *)*((void *)v13 - 3);
    uint64_t v16 = *((void *)v13 - 2);
    uint64_t v17 = *((void *)v13 - 1);
    int v18 = *v13;
    swift_unknownObjectRetain();
    sub_1000A9454(v15, v16, v17, v18);
    id v19 = v44;
    char v20 = static NSObject.== infix(_:_:)();

    if ((v20 & 1) == 0)
    {
LABEL_18:
      swift_unknownObjectRelease();
      sub_1000A7C1C(v15, v16, v17, v18);
      goto LABEL_11;
    }
    uint64_t v42 = v15;
    uint64_t v43 = v17;
    if (v18 == 255) {
      break;
    }
    if (v41 == 255) {
      goto LABEL_18;
    }
    sub_1000A9454(v15, v16, v17, v18);
    sub_1000A9454(v38, v39, v40, v41);
    sub_1000A9454(v15, v16, v17, v18);
    unint64_t v21 = sub_100249E60((unint64_t)v15, v16, v17, v18);
    uint64_t v23 = v22;
    if (v21 == sub_100249E60((unint64_t)v38, v39, v40, v41) && v23 == v24)
    {
      swift_bridgeObjectRelease_n();
      sub_1000A7C1C(v38, v39, v40, v41);
      sub_1000A7C1C(v42, v16, v43, v18);
      sub_1000A7C1C(v42, v16, v43, v18);
      swift_unknownObjectRelease();
      sub_1000A7C1C(v42, v16, v43, v18);
LABEL_22:
      swift_unknownObjectRelease();
      uint64_t v3 = a2;
      swift_bridgeObjectRelease();
      unsigned __int8 v25 = v41;
      goto LABEL_24;
    }
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000A7C1C(v38, v39, v40, v41);
    sub_1000A7C1C(v42, v16, v43, v18);
    sub_1000A7C1C(v42, v16, v43, v18);
    swift_unknownObjectRelease();
    sub_1000A7C1C(v42, v16, v43, v18);
    if (v14) {
      goto LABEL_22;
    }
LABEL_11:
    v13 += 48;
    uint64_t v12 = v45 - 1;
    if (v45 == 1)
    {
      uint64_t v3 = a2;
      swift_bridgeObjectRelease();
      unint64_t v2 = v30;
      id v5 = v35;
      unint64_t v4 = v36;
      LOBYTE(v11) = v41;
      char v9 = v38;
      goto LABEL_27;
    }
  }
  unsigned __int8 v25 = v41;
  if (v41 != 255)
  {
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  swift_unknownObjectRelease();
  uint64_t v3 = a2;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
LABEL_24:
  sub_1000A7C1C(v38, v39, v40, v25);
  unint64_t v2 = v30;
  id v5 = v35;
  unint64_t v4 = v36;
  unint64_t v6 = v33;
  if (v36 != v30) {
    goto LABEL_7;
  }
}

void *sub_1005562BC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    id result = (void *)sub_10019107C(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0) {
      break;
    }
    uint64_t v7 = 0;
    while (v5 != v7)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v7 + 32);
      }
      id v9 = v8;
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      swift_unknownObjectRetain();
      if (v11 >= v10 >> 1) {
        sub_10019107C(v10 > 1, v11 + 1, 1);
      }
      ++v7;
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[6 * v11];
      v12[4] = a2;
      _OWORD v12[5] = a3;
      v12[7] = 0;
      v12[8] = 0;
      v12[6] = v9;
      *((unsigned char *)v12 + 72) = 0;
      if (v5 == v7) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_10055642C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_10019107C(0, v3, 0);
    unint64_t v6 = (unsigned __int8 *)(a1 + 56);
    do
    {
      uint64_t v7 = (void *)*((void *)v6 - 3);
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v9 = *((void *)v6 - 1);
      unsigned __int8 v10 = *v6;
      sub_10010ED28(v7, v8, v9, *v6);
      uint64_t v11 = a2;
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      int64_t v17 = v13 + 1;
      swift_unknownObjectRetain();
      if (v13 >= v12 >> 1) {
        sub_10019107C(v12 > 1, v17, 1);
      }
      v6 += 32;
      _swiftEmptyArrayStorage[2] = v17;
      char v14 = &_swiftEmptyArrayStorage[6 * v13];
      v14[4] = v11;
      v14[5] = a3;
      v14[6] = v7;
      v14[7] = v8;
      v14[8] = v9;
      *((unsigned char *)v14 + 72) = v10;
      --v3;
      a2 = v11;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100556550(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = *(void *)(a2 + 16);
      a2 = *(void *)(a2 + 24);
      uint64_t v6 = 4;
      do
      {
        uint64_t v7 = v6 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v8 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          uint64_t v8 = *(void *)(a1 + 8 * v6);
          swift_retain();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        if (*(void *)(v8 + 16) == v5 && *(void *)(v8 + 24) == a2)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return 1;
        }
        char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_release();
        if (v11)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
        ++v6;
      }
      while (v9 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1005566AC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  v28[1] = a4;
  uint64_t v30 = sub_1000CBE70(&qword_10071BE00);
  uint64_t v7 = *(void *)(v30 - 8);
  uint64_t v8 = __chkstk_darwin(v30);
  unsigned __int8 v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)v28 - v11;
  uint64_t v13 = *(void *)(a3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_editingSession);
  if (v13 && *(unsigned char *)(v13 + 17) == 2)
  {
    swift_beginAccess();
    char v14 = *(void **)(a1 + 88);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    char v14 = sub_10028CFF0(v15);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRetain();
  uint64_t v16 = sub_10055642C((uint64_t)v14, a1, a2);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  BOOL v17 = *(unsigned char *)(a1 + 73) == 1;
  uint64_t v29 = a2;
  if (v17)
  {
    int v20 = *(unsigned __int8 *)(a1 + 48);
    swift_unknownObjectRetain();
    unsigned __int8 v19 = -1;
    int v18 = (void *)a1;
  }
  else
  {
    int v18 = 0;
    a2 = 0;
    unsigned __int8 v19 = 0;
    int v20 = 1;
  }
  v36[0] = v18;
  v36[1] = a2;
  memset(&v36[2], 0, 24);
  unsigned __int8 v37 = v19;
  sub_100556D10();
  NSDiffableDataSourceSectionSnapshot.init()();
  if (!v16[2])
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  v28[0] = v20;
  uint64_t v21 = a3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v21, (uint64_t)&v33, (uint64_t *)&unk_100705D60);
  if (!v35)
  {
    sub_1000CBBA4((uint64_t)&v33, (uint64_t *)&unk_100705D60);
    goto LABEL_14;
  }
  sub_1000CBE70((uint64_t *)&unk_100709880);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    if (qword_100705318 != -1) {
      swift_once();
    }
    id v22 = (id)qword_10071BD48;
    goto LABEL_17;
  }
  id v22 = v32;
LABEL_17:
  uint64_t v33 = a1;
  uint64_t v34 = v29;
  UICollectionViewDiffableDataSource.snapshot(for:)();

  uint64_t v23 = v30;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v30);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v23);
  sub_100556D64(v18, a2, 0, 0, 0, v19);
  sub_1005538FC((uint64_t)v36, v28[0]);
  swift_bridgeObjectRelease();
  sub_100488A14((uint64_t)v18, a2, 0, 0, 0, v19);
LABEL_18:
  unsigned __int8 v24 = *(unsigned char *)(a1 + 16);
  swift_beginAccess();
  sub_1004FE48C(v24);
  swift_endAccess();
  uint64_t v25 = a3 + OBJC_IVAR____TtC5Files24DOCSidebarViewController__diffableDataSource;
  swift_beginAccess();
  sub_1000CBC00(v25, (uint64_t)&v33, (uint64_t *)&unk_100705D60);
  if (v35)
  {
    sub_1000CBE70((uint64_t *)&unk_100709880);
    if (swift_dynamicCast())
    {
      id v26 = v31;
      goto LABEL_25;
    }
  }
  else
  {
    sub_1000CBBA4((uint64_t)&v33, (uint64_t *)&unk_100705D60);
  }
  if (qword_100705318 != -1) {
    swift_once();
  }
  id v26 = (id)qword_10071BD48;
LABEL_25:
  uint64_t v33 = a1;
  uint64_t v34 = v29;
  UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();

  sub_100488A14((uint64_t)v18, a2, 0, 0, 0, v19);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v30);
  return swift_unknownObjectRelease();
}

id sub_100556BD0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isEjectable];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100556C04(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsEjectable:*a1];
}

uint64_t sub_100556C18()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100556C50()
{
}

uint64_t sub_100556C58()
{
  swift_unknownObjectWeakDestroy();
  sub_10010EDB8(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  sub_10009B1B8(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100556CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_1007160A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_100556D10()
{
  unint64_t result = qword_10071BE08;
  if (!qword_10071BE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071BE08);
  }
  return result;
}

id sub_100556D64(id result, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (result)
  {
    swift_unknownObjectRetain();
    return sub_1000A9454(a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_100556DC4(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void sub_100556E04(void *a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100556E0C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_100552110(a1, a2, a3);
}

uint64_t sub_100556E14()
{
  uint64_t v1 = sub_1000CBE70(&qword_10071BE10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_1000CBE70(&qword_10071BE18);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100556F6C(uint64_t a1, uint64_t a2, long long *a3)
{
  sub_1000CBE70(&qword_10071BE10);
  sub_1000CBE70(&qword_10071BE18);

  return sub_1005521A0(a1, a2, a3);
}

uint64_t sub_100557060()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100557098(uint64_t a1, uint64_t a2, long long *a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, long long *))(v3 + 16);
  long long v5 = a3[1];
  long long v7 = *a3;
  v8[0] = v5;
  *(_OWORD *)((char *)v8 + 9) = *(long long *)((char *)a3 + 25);
  return v4(a1, a2, &v7);
}

uint64_t sub_1005570DC(uint64_t *a1)
{
  return sub_1005522FC(a1, v1, 1) & 1;
}

uint64_t sub_100557100(uint64_t *a1)
{
  return sub_1005522FC(a1, v1, 0) & 1;
}

uint64_t sub_100557124(long long *a1)
{
  return sub_100552488(a1, v1, (uint64_t)&unk_1006B7190, (uint64_t)sub_100557278, (uint64_t)&unk_1006B71A8);
}

uint64_t sub_100557164(long long *a1)
{
  return sub_100552488(a1, v1, (uint64_t)&unk_1006B7140, (uint64_t)sub_1005571C8, (uint64_t)&unk_1006B7158);
}

BOOL sub_1005571A4(uint64_t a1)
{
  return sub_100552898(a1);
}

void sub_1005571AC()
{
}

uint64_t sub_1005571B4()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005571C8()
{
  sub_1005527A4(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_1005571D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100557220()
{
  swift_release();
  swift_unknownObjectRelease();
  int v1 = *(unsigned __int8 *)(v0 + 64);
  if (v1 != 255) {
    sub_10010EDB8(*(id *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v1);
  }

  return _swift_deallocObject(v0, 65, 7);
}

void sub_100557278()
{
  sub_100552380(*(void *)(v0 + 16), v0 + 24);
}

void *sub_100557284(uint64_t a1, uint64_t a2)
{
  return sub_100554438(a1, a2);
}

id sub_10055728C()
{
  return sub_100554BA0();
}

void sub_100557294()
{
  sub_100554F64(v0, sub_10030E490);
}

void sub_1005572C4()
{
  sub_100554F64(v0, sub_10030E590);
}

void sub_1005572F4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  long long v5 = *(void **)a1;
  uint64_t v61 = *(void *)(*(void *)a1 + 16);
  if (v61)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    while (1)
    {
      unint64_t v66 = v7;
      uint64_t v8 = v5;
      uint64_t v9 = &v5[v6];
      uint64_t v10 = (void *)v5[v6 + 4];
      uint64_t v11 = v9[5];
      uint64_t v12 = v9[6];
      char v13 = *((unsigned char *)v9 + 56);
      sub_10010ED28(v10, v11, v12, v13);
      unint64_t v14 = sub_100249E60((unint64_t)v10, v11, v12, v13);
      uint64_t v16 = v15;
      if (v14 == sub_100249E60(a2, a3, a4, a5) && v16 == v17) {
        break;
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v10, v11, v12, v13);
      if (v19) {
        goto LABEL_12;
      }
      unint64_t v7 = v66 + 1;
      v6 += 4;
      long long v5 = v8;
      if (v61 == v66 + 1)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_10010EDB8(v10, v11, v12, v13);
LABEL_12:
    int v20 = v8;
    swift_bridgeObjectRelease();
    unint64_t v21 = v66 + 1;
    if (!__OFADD__(v66, 1))
    {
      unint64_t v22 = v8[2];
      while (1)
      {
        if (v21 == v22) {
          return;
        }
        if (v21 >= v22)
        {
          __break(1u);
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        unint64_t v60 = v21;
        unsigned __int8 v24 = &v20[v6];
        uint64_t v25 = (void *)v20[v6 + 8];
        uint64_t v26 = v20[v6 + 9];
        uint64_t v27 = v20[v6 + 10];
        char v28 = v20[v6 + 11];
        sub_10010ED28(v25, v26, v27, v28);
        unint64_t v29 = sub_100249E60((unint64_t)v25, v26, v27, v28);
        uint64_t v31 = v30;
        if (v29 == sub_100249E60(a2, a3, a4, a5) && v31 == v32) {
          break;
        }
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10010EDB8(v25, v26, v27, v28);
        if (v34) {
          goto LABEL_15;
        }
        unint64_t v35 = v66;
        unint64_t v23 = v60;
        if (v60 != v66)
        {
          if ((v66 & 0x8000000000000000) != 0) {
            goto LABEL_36;
          }
          unint64_t v36 = v20[2];
          if (v66 >= v36) {
            goto LABEL_37;
          }
          if (v60 >= v36) {
            goto LABEL_38;
          }
          uint64_t v37 = 4 * v66;
          uint64_t v38 = (uint64_t)&v20[4 * v66 + 4];
          uint64_t v39 = (void *)v24[8];
          uint64_t v40 = v24[9];
          uint64_t v41 = v24[10];
          unsigned __int8 v42 = *((unsigned char *)v24 + 88);
          unsigned __int8 v43 = *(unsigned char *)(v38 + 24);
          uint64_t v57 = *(void *)(v38 + 8);
          id v58 = *(id *)v38;
          uint64_t v56 = *(void *)(v38 + 16);
          sub_10010ED28(*(id *)v38, v57, v56, v43);
          sub_10010ED28(v39, v40, v41, v42);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v20 = sub_10050DC64(v20);
          }
          uint64_t v44 = &v20[v37];
          uint64_t v45 = (void *)v20[v37 + 4];
          uint64_t v46 = v20[v37 + 5];
          uint64_t v47 = v20[v37 + 6];
          v44[4] = v39;
          v44[5] = v40;
          v44[6] = v41;
          unsigned __int8 v48 = v20[v37 + 7];
          *((unsigned char *)v44 + 56) = v42;
          sub_10010EDB8(v45, v46, v47, v48);
          if (v60 >= v20[2]) {
            goto LABEL_39;
          }
          uint64_t v49 = &v20[v6];
          id v50 = (void *)v20[v6 + 8];
          uint64_t v51 = v20[v6 + 9];
          uint64_t v52 = v20[v6 + 10];
          v49[8] = v58;
          v49[9] = v57;
          v49[10] = v56;
          unsigned __int8 v53 = v20[v6 + 11];
          *((unsigned char *)v49 + 88) = v43;
          sub_10010EDB8(v50, v51, v52, v53);
          *(void *)a1 = v20;
          unint64_t v35 = v66;
        }
        BOOL v54 = __OFADD__(v35, 1);
        unint64_t v55 = v35 + 1;
        if (v54) {
          goto LABEL_35;
        }
        unint64_t v66 = v55;
LABEL_16:
        unint64_t v21 = v23 + 1;
        unint64_t v22 = v20[2];
        v6 += 4;
      }
      swift_bridgeObjectRelease_n();
      sub_10010EDB8(v25, v26, v27, v28);
LABEL_15:
      unint64_t v23 = v60;
      goto LABEL_16;
    }
LABEL_40:
    __break(1u);
  }
}

void _s11OutlineItemVwxx(uint64_t a1)
{
  swift_unknownObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 != 255)
  {
    uint64_t v3 = *(void **)(a1 + 16);
    uint64_t v4 = *(void *)(a1 + 24);
    uint64_t v5 = *(void *)(a1 + 32);
    sub_10010EDB8(v3, v4, v5, v2);
  }
}

uint64_t _s11OutlineItemVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 40);
  swift_unknownObjectRetain();
  if (v5 == 255)
  {
    *uint64_t v4 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)((char *)v4 + 9) = *(_OWORD *)(a2 + 25);
  }
  else
  {
    uint64_t v6 = *(void **)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    uint64_t v8 = *(void *)(a2 + 32);
    sub_10010ED28(v6, v7, v8, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t _s11OutlineItemVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  int v5 = (long long *)(a1 + 16);
  uint64_t v6 = (long long *)(a2 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      long long v19 = *v6;
      *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      *int v5 = v19;
    }
    else
    {
      uint64_t v15 = *(void **)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      uint64_t v17 = *(void *)(a2 + 32);
      sub_10010ED28(v15, v16, v17, v7);
      *(void *)(a1 + 16) = v15;
      *(void *)(a1 + 24) = v16;
      *(void *)(a1 + 32) = v17;
      *(unsigned char *)(a1 + 40) = v7;
    }
  }
  else if (v7 == 255)
  {
    sub_1005578A0(a1 + 16);
    long long v18 = *(_OWORD *)(a2 + 25);
    *int v5 = *v6;
    *(_OWORD *)(a1 + 25) = v18;
  }
  else
  {
    uint64_t v8 = *(void **)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    uint64_t v10 = *(void *)(a2 + 32);
    sub_10010ED28(v8, v9, v10, v7);
    uint64_t v11 = *(void **)(a1 + 16);
    uint64_t v12 = *(void *)(a1 + 24);
    uint64_t v13 = *(void *)(a1 + 32);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(void *)(a1 + 32) = v10;
    unsigned __int8 v14 = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v7;
    sub_10010EDB8(v11, v12, v13, v14);
  }
  return a1;
}

uint64_t sub_1005578A0(uint64_t a1)
{
  return a1;
}

uint64_t _s11OutlineItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 == 255) {
    goto LABEL_5;
  }
  int v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 == 255)
  {
    sub_1005578A0(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    return a1;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void **)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v6;
  sub_10010EDB8(v8, v9, v10, v5);
  return a1;
}

uint64_t _s11OutlineItemVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11OutlineItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

_OWORD *_s14OutlineSectionVwCP(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

void *_s14OutlineSectionVwca(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *_s14OutlineSectionVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  return a1;
}

uint64_t _s21CacheableIconProviderVwxx(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  sub_10010EDB8(*(id *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return sub_10009B1B8(a1 + 40);
}

uint64_t _s21CacheableIconProviderVwcp(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_10010ED28(v4, v5, v6, v7);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t _s21CacheableIconProviderVwca(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyAssign();
  uint64_t v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  unsigned __int8 v7 = *(unsigned char *)(a2 + 32);
  sub_10010ED28(v4, v5, v6, v7);
  long long v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_10010EDB8(v8, v9, v10, v11);
  sub_1002B25D4((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

__n128 _s21CacheableIconProviderVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(v3 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(v3 + 40) = *(_OWORD *)(a2 + 40);
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(v3 + 56) = result;
  *(void *)(v3 + 72) = *(void *)(a2 + 72);
  return result;
}

uint64_t _s21CacheableIconProviderVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_unknownObjectWeakTakeAssign();
  uint64_t v5 = *(void *)(a2 + 24);
  char v6 = *(unsigned char *)(a2 + 32);
  unsigned __int8 v7 = *(void **)(v4 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v6;
  sub_10010EDB8(v7, v8, v9, v10);
  sub_10009B1B8(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *_s21CacheableIconProviderVMa()
{
  return &_s21CacheableIconProviderVN;
}

void *Array<A>.orderedChronologically(oldestFirst:)(char a1, uint64_t a2)
{
  return sub_100557DE0(a2, a1);
}

uint64_t Array<A>.orderedChronologically(oldestFirst:)(char a1)
{
  sub_1000CBE70((uint64_t *)&unk_100708640);
  uint64_t v2 = _arrayForceCast<A, B>(_:)();
  sub_100557DE0(v2, a1);
  swift_bridgeObjectRelease();
  uint64_t v3 = _arrayForceCast<A, B>(_:)();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_100557DE0(uint64_t a1, char a2)
{
  *(void *)&v11[0] = a1;
  swift_bridgeObjectRetain();
  sub_100502928((void **)v11);
  uint64_t v3 = *(void **)&v11[0];
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(*(void *)&v11[0] + 16);
    if (v4)
    {
      unint64_t v5 = v4 - 1;
      if (v4 != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_17;
        }
        while (1)
        {
          unsigned __int8 v7 = v3 + 4;
          uint64_t v4 = (uint64_t)&v3[5 * v4 - 1];
          uint64_t v8 = 1;
          while (1)
          {
            if (v8 - 1 == v5) {
              goto LABEL_7;
            }
            unint64_t v10 = v3[2];
            if (v8 - 1 >= v10) {
              break;
            }
            sub_1000D4774((uint64_t)v7, (uint64_t)v11);
            if (v5 >= v10) {
              goto LABEL_15;
            }
            sub_1002B25D4(v7, (uint64_t *)v4);
            if (v5 >= v3[2]) {
              goto LABEL_16;
            }
            sub_10009B1B8(v4);
            sub_1001146DC(v11, v4);
LABEL_7:
            --v5;
            v4 -= 40;
            v7 += 5;
            if (v8++ >= (uint64_t)v5) {
              return v3;
            }
          }
          __break(1u);
LABEL_15:
          __break(1u);
LABEL_16:
          __break(1u);
LABEL_17:
          uint64_t v3 = sub_10050E008(v3);
        }
      }
    }
  }
  return v3;
}

unint64_t sub_100557F10(unint64_t result)
{
  uint64_t v2 = v1;
  unint64_t v3 = result;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  __n128 result = swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_11;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_unknownObjectRetain();
LABEL_6:
    swift_getObjectType();
    uint64_t v4 = (void *)DOCNode.sourceIdentifier.getter();
    if ((v3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v5 = *(void *)(v3 + 32);
      swift_unknownObjectRetain();
    }
    char v6 = (char *)[objc_allocWithZone(v2) initWithSourceIdentifier:v4 node:v5];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    *(void *)&v6[OBJC_IVAR____TtC5Files28DOCConcreteSelectionLocation_selectedNodes] = v3;
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  __break(1u);
  return result;
}

id sub_10055827C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCConcreteSelectionLocation();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCConcreteSelectionLocation()
{
  return self;
}

void UITableView.doc_scrollToItemIfNeeded(at:)(uint64_t a1)
{
  objc_super v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = IndexPath.section.getter();
  id v9 = [v2 numberOfSections];
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (v8 >= (uint64_t)v9)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    goto LABEL_6;
  }
  uint64_t v10 = IndexPath.item.getter();
  id v11 = [v2 numberOfRowsInSection:IndexPath.section.getter()];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >= (uint64_t)v11)
  {
LABEL_6:
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1005A0030;
    sub_100115EC0();
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v37 = v36;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_100073F48();
    *(void *)(v34 + 32) = v35;
    *(void *)(v34 + 40) = v37;
    sub_10019B0C8();
    uint64_t v38 = (void *)static OS_os_log.default.getter();
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();

    return;
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v2 rectForRowAtIndexPath:isa];
  CGFloat v39 = v14;
  CGFloat v40 = v13;
  double v16 = v15;
  double v18 = v17;

  [v2 _effectiveContentInset];
  double v20 = v19;
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  [v2 contentOffset];
  CGFloat v28 = v22 + v27;
  [v2 contentOffset];
  CGFloat v30 = v20 + v29;
  [v2 bounds];
  CGFloat v31 = CGRectGetWidth(v41) - v22 - v26;
  [v2 bounds];
  v43.size.height = CGRectGetHeight(v42) - v20 - v24;
  v43.origin.x = v28;
  v43.origin.y = v30;
  double v33 = v39;
  double v32 = v40;
  v43.size.width = v31;
  v44.origin.x = v40;
  v44.origin.y = v39;
  v44.size.width = v16;
  v44.size.height = v18;
  if (!CGRectContainsRect(v43, v44)) {
    [v2 scrollRectToVisible:0, v32, v33, v16, v18];
  }
}

void DOCProgressProvidingOperationIconType.hash(into:)()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003CC8C8(v0, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1uLL);
    sub_100558C0C(&qword_1007086E0, (void (*)(uint64_t))&type metadata accessor for UTType);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t type metadata accessor for DOCProgressProvidingOperationIconType()
{
  uint64_t result = qword_10071BF08;
  if (!qword_10071BF08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Int DOCProgressProvidingOperationIconType.hashValue.getter()
{
  return Hasher._finalize()();
}

Swift::Int sub_100558884()
{
  return Hasher._finalize()();
}

uint64_t _s5Files37DOCProgressProvidingOperationIconTypeO21__derived_enum_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DOCProgressProvidingOperationIconType();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  double v13 = (char *)&v27 - v12;
  uint64_t v14 = sub_1000CBE70((uint64_t *)&unk_10071BF40);
  __chkstk_darwin(v14 - 8);
  double v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = &v16[*(int *)(v17 + 56)];
  sub_1003CC8C8(a1, (uint64_t)v16);
  sub_1003CC8C8(a2, (uint64_t)v18);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1003CC8C8((uint64_t)v16, (uint64_t)v13);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      char v24 = static UTType.== infix(_:_:)();
      double v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v7, v4);
      v25(v13, v4);
      sub_1003CD0C0((uint64_t)v16);
      return v24 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_15;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_19;
    }
LABEL_15:
    sub_1005591EC((uint64_t)v16);
    goto LABEL_16;
  }
  sub_1003CC8C8((uint64_t)v16, (uint64_t)v10);
  uint64_t v21 = *v10;
  uint64_t v20 = v10[1];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (v21 == *(void *)v18 && v20 == *((void *)v18 + 1))
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_19:
    sub_1003CD0C0((uint64_t)v16);
    char v24 = 1;
    return v24 & 1;
  }
  sub_1003CD0C0((uint64_t)v16);
LABEL_16:
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_100558BC4()
{
  return sub_100558C0C(&qword_10071BE90, (void (*)(uint64_t))type metadata accessor for DOCProgressProvidingOperationIconType);
}

uint64_t sub_100558C0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DOCProgressProvidingOperationIconType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for UTType();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t destroy for DOCProgressProvidingOperationIconType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for UTType();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for DOCProgressProvidingOperationIconType(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UTType();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for DOCProgressProvidingOperationIconType(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003CD0C0((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for UTType();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for DOCProgressProvidingOperationIconType(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for UTType();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for DOCProgressProvidingOperationIconType(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003CD0C0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for UTType();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10055915C()
{
  uint64_t result = type metadata accessor for UTType();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005591EC(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10071BF40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1005592B0()
{
  return sub_10055C53C(0, type metadata accessor for DOCNotifyingStackView);
}

void *sub_1005592CC()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  id v2 = v1;
  return v1;
}

void sub_1005592FC(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden) = a1;
  id v3 = sub_100099D70();
  [v3 setHidden:*(unsigned __int8 *)(v1 + v2)];
}

uint64_t sub_100559358()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  id v3 = *v2;
  if (v3 && !sub_1000CBC64())
  {
    double v5 = *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics + 16];
    uint64_t v6 = self;
    id v7 = v3;
    id v8 = [v6 defaultMetrics];
    id v9 = [v1 traitCollection];
    [v8 scaledValueForValue:v9 compatibleWithTraitCollection:v5];
    double v11 = v10;

    sub_1000CBE0C((uint64_t)v7 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v17, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v17, (uint64_t)v18, (uint64_t *)&unk_100705550);
    *(double *)&uint64_t result = COERCE_DOUBLE(sub_1000CBEB4(v18));
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      double v12 = v19 / 3.0;
      if (v11 < v19 / 3.0) {
        double v12 = v11;
      }
      if (v5 > v12) {
        double v13 = v5;
      }
      else {
        double v13 = v12;
      }
      id v14 = [v1 traitCollection];
      [v14 displayScale];
      double v16 = v15;

      *(double *)&uint64_t result = floor(v13 * v16) / v16;
    }
  }
  else
  {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_100559504()
{
  uint64_t v1 = v0;
  uint64_t v2 = (char **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  id v3 = *v2;
  if (!*v2) {
    return (uint64_t)v3;
  }
  if (sub_1000CBC64()) {
    return 0;
  }
  uint64_t v4 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection];
  if (!v4) {
    return 0;
  }
  id v5 = v4;
  uint64_t result = sub_100559358();
  if ((v7 & 1) == 0)
  {
    uint64_t v8 = result;
    id v9 = [self configurationWithPointSize:4 weight:3 scale:*(double *)&result];
    if ([v1 isSelected])
    {
      id v10 = [v1 tintColor];
      if (!v10) {
        id v10 = [self linkColor];
      }
      sub_1000CBE70(&qword_100708BE0);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 32) = 0xD000000000000029;
      *(void *)(v11 + 40) = 0x8000000100600820;
      *(_OWORD *)(v11 + 16) = xmmword_1005A0500;
      *(void *)(v11 + 88) = &type metadata for CGFloat;
      *(void *)(v11 + 56) = &type metadata for String;
      *(void *)(v11 + 64) = v8;
      BOOL v12 = [v5 userInterfaceStyle] == (id)2;
      *(void *)(v11 + 120) = &type metadata for Bool;
      *(unsigned char *)(v11 + 96) = v12;
      *(void *)(v11 + 152) = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
      *(void *)(v11 + 128) = v10;
      double v13 = self;
      id v14 = v10;
      v15.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      double v16 = (void *)swift_allocObject();
      void v16[2] = v5;
      void v16[3] = v14;
      void v16[4] = v9;
      CGFloat v28 = sub_10055C9B8;
      double v29 = v16;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v25 = 1107296256;
      double v26 = sub_100559B58;
      uint64_t v27 = &unk_1006B7638;
      uint64_t v17 = _Block_copy(&aBlock);
      id v18 = v5;
      id v19 = v14;
      id v5 = v9;
      swift_release();
      id v3 = (char *)[v13 _cachedImageForKey:v15.super.isa fromBlock:v17];
      _Block_release(v17);
    }
    else
    {
      sub_1000CBE70(&qword_100708BE0);
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 32) = 0xD00000000000002CLL;
      *(void *)(v20 + 40) = 0x80000001006007E0;
      *(_OWORD *)(v20 + 16) = xmmword_10059B760;
      *(void *)(v20 + 88) = &type metadata for CGFloat;
      *(void *)(v20 + 56) = &type metadata for String;
      *(void *)(v20 + 64) = v8;
      uint64_t v21 = self;
      v15.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = v9;
      CGFloat v28 = sub_10055C968;
      double v29 = (void *)v22;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v25 = 1107296256;
      double v26 = sub_100559B58;
      uint64_t v27 = &unk_1006B75E8;
      char v23 = _Block_copy(&aBlock);
      id v19 = v9;
      swift_release();
      id v3 = (char *)[v21 _cachedImageForKey:v15.super.isa fromBlock:v23];
      _Block_release(v23);
    }

    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void sub_100559948(void *a1, void *a2, void *a3)
{
  if ([a1 userInterfaceStyle] == (id)2) {
    id v5 = [self linkColor];
  }
  else {
    id v5 = a2;
  }
  uint64_t v6 = v5;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1005A0C30;
  *(void *)(v7 + 32) = [self whiteColor];
  *(void *)(v7 + 40) = v6;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  id v8 = v6;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self configurationWithPaletteColors:isa];

  id v11 = [a3 configurationByApplyingConfiguration:v10];
  BOOL v12 = self;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 _systemImageNamed:v13 withConfiguration:0];

  if (v14)
  {

    id v15 = [v14 imageWithConfiguration:v11];
    sub_100296440(0.25);
  }
  else
  {
    __break(1u);
  }
}

id sub_100559B58(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  id v3 = (void *)v1(v2);
  swift_release();

  return v3;
}

void sub_100559BA8(uint64_t a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self systemImageNamed:v2];

  if (v3)
  {
    id v4 = [v3 imageWithConfiguration:a1];

    id v5 = [self whiteColor];
    id v6 = [v4 imageWithTintColor:v5 renderingMode:2];

    sub_100296440(0.5);
  }
  else
  {
    __break(1u);
  }
}

void sub_100559CA8(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView;
  id v3 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView);
  if (v3) {
    [v3 setHidden:1];
  }
  uint64_t v4 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView;
  id v5 = *(void **)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView);
  if (v5) {
    [v5 setHidden:1];
  }
  id v6 = *(void **)(a1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView);
  [v6 setThumbnail:0];
  [v6 setImage:0];
  uint64_t v7 = *(void **)(a1 + v2);
  if (v7) {
    [v7 setHidden:0];
  }
  id v8 = *(void **)(a1 + v4);
  if (v8) {
    [v8 setHidden:1];
  }
  uint64_t v9 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden;
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_isSelectionHighlightingTemporarilyHidden) = 0;
  id v10 = sub_100099D70();
  [v10 setHidden:*(unsigned __int8 *)(a1 + v9)];
}

id sub_100559E34()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = *(void **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView);
  if (!v5) {
    return 0;
  }
  id v6 = *(char **)(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  id v7 = v5;
  id v8 = [v6 attributedText];

  if (!v8)
  {
LABEL_7:
    static Logger.UI.getter();
    BOOL v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v32 = v7;
      id v14 = (uint8_t *)swift_slowAlloc();
      v37[0] = swift_slowAlloc();
      *(_DWORD *)id v14 = 136315138;
      v36[0] = sub_10009B0E4(0xD000000000000013, 0x80000001006007C0, v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s gridTitleLabel is empty.", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  id result = [v6 attributedText];
  if (result)
  {
    id v10 = result;
    uint64_t v11 = (uint64_t)[result length];

    if (v11 >= 1)
    {
      [v6 setNeedsLayout];
      [v6 layoutIfNeeded];
      sub_1000CBE0C(*(void *)&v6[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer]+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v36, &qword_100705560);
      sub_1000CBE0C((uint64_t)v36, (uint64_t)v37, &qword_100705560);
      if (sub_1000CBEB4(v37) != 1)
      {
        sub_1000CBE0C((uint64_t)v36, (uint64_t)v35, &qword_100705560);
        sub_10009ABF0((uint64_t)v35);
        [v7 bounds];
        double v17 = v16;
        uint64_t v18 = v38;
        if (v41) {
          double v19 = v40;
        }
        else {
          double v19 = 0.0;
        }
        if (v41) {
          double v20 = v39;
        }
        else {
          double v20 = 0.0;
        }
        if (v44) {
          double v21 = v43;
        }
        else {
          double v21 = 0.0;
        }
        if (v44) {
          double v22 = v42;
        }
        else {
          double v22 = 0.0;
        }
        uint64_t v23 = *(void *)(v38 + 16);
        CGFloat v34 = 2.0;
        uint64_t v24 = swift_bridgeObjectRetain();
        uint64_t v25 = sub_10055C6DC(v24, v18, v23, &v34, v20, v19, 2.0, v22, v21, v17);
        swift_bridgeObjectRelease();
        uint64_t v26 = v25[2];
        if (v26)
        {
          double v33 = _swiftEmptyArrayStorage;
          specialized ContiguousArray.reserveCapacity(_:)();
          uint64_t v27 = self;
          CGFloat v28 = (double *)(v25 + 7);
          do
          {
            id v29 = [v27 valueWithRect:*(v28 - 3), *(v28 - 2), *(v28 - 1), *v28];
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            v28 += 4;
            --v26;
          }
          while (v26);
        }
        swift_bridgeObjectRelease();
        sub_10009E6C4(0, (unint64_t *)&unk_10070AD00);
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v15 = (id)_UIPreviewParametersGenerateTextPlatter();

        sub_1000A0B6C((uint64_t)v36);
        return v15;
      }

      return 0;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_10055A31C(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*v8 && (*((unsigned char *)v9 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_isFocusing) & 1) == 0)
  {
    id v10 = v9;
    static Logger.UI.getter();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Laying out a focus view of a cell that has no focus.", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  id v14 = *(void **)&v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView];
  id v15 = [v14 superview];

  if (v15)
  {
    double v16 = *(void **)&v2[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
    [v16 bounds];
    [v2 convertRect:v16 fromCoordinateSpace:];
    double v18 = v17;
    double v20 = v19;
    [v14 bounds];
    [v2 convertRect:v14 fromCoordinateSpace:];
    double v22 = v21;
    double v24 = v23;
    static UIEdgeInsets.uniform(_:)();
    double v27 = sub_10009D0D0(v18, v22, v20, v24, v25, v26);
  }
  else
  {
    double v27 = 0.0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
  }
  *(double *)a1 = v27;
  *(void *)(a1 + 8) = v28;
  *(void *)(a1 + 16) = v29;
  *(void *)(a1 + 24) = v30;
  *(unsigned char *)(a1 + 32) = v15 == 0;
}

void sub_10055A5AC(void *a1)
{
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
  [v3 frame];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  id v12 = [v1 contentView];
  [v3 convertRect:v12 toCoordinateSpace:v5];
  CGFloat x = v13;
  CGFloat y = v15;
  double width = v17;
  CGFloat height = v19;

  [v3 doc_effectiveContentSize];
  if (width < v21)
  {
    [v3 doc_effectiveContentSize];
    CGFloat v23 = -(v22 - width);
    v30.origin.CGFloat x = x;
    v30.origin.CGFloat y = y;
    v30.size.double width = width;
    v30.size.CGFloat height = height;
    CGRect v31 = CGRectInset(v30, v23, 0.0);
    CGFloat x = v31.origin.x;
    CGFloat y = v31.origin.y;
    double width = v31.size.width;
    CGFloat height = v31.size.height;
  }
  v32.origin.CGFloat x = x;
  v32.origin.CGFloat y = y;
  v32.size.double width = width;
  v32.size.CGFloat height = height;
  CGRect v33 = CGRectInset(v32, -5.0, 0.0);
  [a1 setFrame:CGPointMake(v33.origin.x, v33.origin.y) size:CGSizeMake(v33.size.width, v33.size.height)];
  id v24 = sub_100559E34();
  if (v24)
  {
    double v25 = v24;
    id v26 = [objc_allocWithZone((Class)CAShapeLayer) init];
    id v27 = [v25 CGPath];
    [v26 setPath:v27];

    id v28 = [a1 layer];
    [v28 setMask:v26];
  }
  else
  {
    id v28 = [a1 layer];
    [v28 setMask:0];
  }
}

void (*sub_10055AA3C(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x198uLL);
  *a1 = v3;
  v3[49] = v1;
  v3[50] = DOCItemCollectionCell.cellContent.modify(v3);
  return sub_10055AA98;
}

void sub_10055AA98(uint64_t **a1, char a2)
{
  uint64_t v3 = *a1;
  ((void (*)(uint64_t *, void))(*a1)[50])(*a1, 0);
  if ((a2 & 1) == 0)
  {
    if (qword_100705328 != -1) {
      swift_once();
    }
    double v4 = (void *)(v3[49] + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess();
    if (*v4)
    {
      sub_1000CBE0C(*v4 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)(v3 + 23), (uint64_t *)&unk_100705550);
      sub_1000CBE0C((uint64_t)(v3 + 23), (uint64_t)v3, (uint64_t *)&unk_100705550);
      if (sub_1000CBEB4(v3) != 1)
      {
        uint64_t v5 = v3[8];
        uint64_t v6 = v3[5];
        qword_10071BF50 = v3[6];
        qword_10071BF58 = v5;
        qword_10071BF60 = v6;
      }
    }
  }

  free(v3);
}

void sub_10055AC10(char a1)
{
  uint64_t v2 = v1;
  double v4 = (objc_class *)type metadata accessor for DOCItemCollectionGridCell();
  v8.receiver = v2;
  v8.super_class = v4;
  unsigned int v5 = [super isHighlighted];
  v7.receiver = v2;
  v7.super_class = v4;
  [super setHighlighted:a1 & 1];
  if (v5 != [v2 isHighlighted])
  {
    uint64_t v6 = &v2[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
    swift_beginAccess();
    if (*(void *)v6)
    {
      if (!sub_1000CBC64()) {
        sub_1000A0308();
      }
    }
  }
}

BOOL sub_10055AE38(CGFloat a1, CGFloat a2)
{
  uint64_t v2 = sub_10055AE70(1, a1, a2);
  uint64_t v3 = v2;
  if (v2) {

  }
  return v3 != 0;
}

char *sub_10055AE70(char a1, CGFloat a2, CGFloat a3)
{
  double v4 = v3;
  if ([v4 isHidden]) {
    return 0;
  }
  if (a1)
  {
    [v4 bounds];
    v42.CGFloat x = a2;
    v42.CGFloat y = a3;
    if (!CGRectContainsPoint(v47, v42)) {
      return 0;
    }
  }
  objc_super v8 = *(char **)&v4[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_horizontalStopButton];
  if (v8)
  {
    double v9 = v8;
    double v10 = (char *)[v9 superview];
    if (v10)
    {
      double v11 = v10;
      if ([v9 isHidden])
      {

        double v9 = v11;
      }
      else
      {
        [v4 convertPoint:v11 toCoordinateSpace:a2, a3];
        CGFloat v13 = v12;
        CGFloat v15 = v14;
        [v9 frame];
        v43.CGFloat x = v13;
        v43.CGFloat y = v15;
        BOOL v16 = CGRectContainsPoint(v48, v43);

        if (v16) {
          return v8;
        }
      }
    }
  }
  objc_super v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  if (v8)
  {
    double v17 = v8;
    if (([v17 isHidden] & 1) == 0)
    {
      [v4 convertPoint:v17 toCoordinateSpace:a2, a3];
      CGFloat v19 = v18;
      CGFloat v21 = v20;
      [v17 bounds];
      v44.CGFloat x = v19;
      v44.CGFloat y = v21;
      if (CGRectContainsPoint(v49, v44)) {
        return v8;
      }
    }
  }
  objc_super v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_thumbnailContainerView];
  [v4 convertPoint:v8 toCoordinateSpace:a2, a3];
  id result = *(char **)&v8[OBJC_IVAR____TtC5Files25DOCImageViewContainerView_containedView];
  if (result)
  {
    CGFloat v25 = v22;
    CGFloat v26 = v23;
    [result frame];
    v45.CGFloat x = v25;
    v45.CGFloat y = v26;
    if (CGRectContainsPoint(v50, v45)
      || (objc_super v8 = *(char **)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView],
          objc_msgSend(v4, "convertPoint:toCoordinateSpace:", v8, a2, a3),
          CGFloat v28 = v27,
          CGFloat v30 = v29,
          [v8 bounds],
          v46.CGFloat x = v28,
          v46.CGFloat y = v30,
          CGRectContainsPoint(v51, v46)))
    {
      CGRect v31 = v8;
      return v8;
    }
    sub_1000CBC00((uint64_t)&v4[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider], (uint64_t)&v37, &qword_10071C0B8);
    if (v38)
    {
      sub_1001146DC(&v37, (uint64_t)v39);
      uint64_t v32 = v40;
      uint64_t v33 = v41;
      sub_1000A6B78(v39, v40);
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v33 + 24))(v32, v33))
      {
        uint64_t v34 = v40;
        uint64_t v35 = v41;
        sub_1000A6B78(v39, v40);
        if ((*(uint64_t (**)(char *, uint64_t, uint64_t, CGFloat, CGFloat))(v35 + 16))(v4, v34, v35, a2, a3))
        {
          sub_10009B1B8((uint64_t)v39);
          uint64_t v36 = v4;
          return v4;
        }
      }
      sub_10009B1B8((uint64_t)v39);
    }
    else
    {
      sub_1000CBBA4((uint64_t)&v37, &qword_10071C0B8);
    }
    return 0;
  }
  __break(1u);
  return result;
}

void sub_10055B1A4()
{
  uint64_t v1 = v0;
  sub_1000A1028();
  sub_1000A0C38();
  uint64_t v2 = (id *)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  if (*v2)
  {
    uint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
    id v4 = *v2;
    sub_100099DF8((uint64_t)v17);
    v12[10] = *(_OWORD *)&v17[160];
    v12[11] = *(_OWORD *)&v17[176];
    uint64_t v13 = *(void *)&v17[192];
    v12[6] = *(_OWORD *)&v17[96];
    v12[7] = *(_OWORD *)&v17[112];
    v12[8] = *(_OWORD *)&v17[128];
    v12[9] = *(_OWORD *)&v17[144];
    _OWORD v12[2] = *(_OWORD *)&v17[32];
    void v12[3] = *(_OWORD *)&v17[48];
    v12[4] = *(_OWORD *)&v17[64];
    _OWORD v12[5] = *(_OWORD *)&v17[80];
    v12[0] = *(_OWORD *)v17;
    v12[1] = *(_OWORD *)&v17[16];
    DOCSplitBrowserViewController.didCommitPreview(of:)(v12);
    unsigned int v5 = *(void **)&v3[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
    uint64_t v6 = (uint64_t)v5
       + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
    sub_1000CBE0C((uint64_t)v5+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v14, &qword_100705560);
    sub_1000CBE0C((uint64_t)v12, v6, &qword_100705560);
    sub_10009ABF0((uint64_t)v17);
    sub_10009ABF0((uint64_t)v17);
    sub_1000A0B6C((uint64_t)v14);
    [v5 setNeedsDisplay];
    sub_10009A978((uint64_t)v17);
    sub_1000CBE0C(v6, (uint64_t)v15, &qword_100705560);
    sub_1000CBE0C((uint64_t)v15, (uint64_t)v16, &qword_100705560);
    if (sub_1000CBEB4(v16) != 1) {
      [v3 setFont:v16[0]];
    }
    long long v24 = *(_OWORD *)&v17[136];
    long long v25 = *(_OWORD *)&v17[152];
    long long v26 = *(_OWORD *)&v17[168];
    long long v27 = *(_OWORD *)&v17[184];
    long long v20 = *(_OWORD *)&v17[72];
    long long v21 = *(_OWORD *)&v17[88];
    long long v22 = *(_OWORD *)&v17[104];
    long long v23 = *(_OWORD *)&v17[120];
    v18[0] = *(_OWORD *)&v17[8];
    v18[1] = *(_OWORD *)&v17[24];
    _OWORD v18[2] = *(_OWORD *)&v17[40];
    long long v19 = *(_OWORD *)&v17[56];
    sub_10009AB2C((uint64_t)v18);
    [v3 bounds];
    [v3 contentScaleFactor];
    long long v7 = v19;
    UIPointRoundToScale();
    double v9 = v8;
    double v11 = v10;
    sub_10005519C(v18);
    [v5 setFrame:v9, v11, v7];
    [v3 invalidateIntrinsicContentSize];
    sub_10009A978((uint64_t)v17);
    sub_1000A0C38();
  }
  sub_1000A1930();
  sub_1000A0308();
}

id sub_10055B454()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void **)(v0 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  uint64_t v3 = (char *)*v2;
  if (*v2)
  {
    id v4 = *(void **)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail];
    *(void *)&v3[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail] = 0;
    unsigned int v5 = v3;
    sub_100098488(v4);

    swift_unknownObjectRelease();
  }
  [*(id *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_thumbnailView) setThumbnail:0];
  uint64_t v6 = *(char **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  sub_1000951C8((uint64_t)v10);
  long long v7 = *(void **)&v6[OBJC_IVAR____TtC5Files12DOCFastLabel_textLayer];
  uint64_t v8 = (uint64_t)v7
     + OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation;
  sub_1000CBE0C((uint64_t)v7+ OBJC_IVAR____TtCC5Files12DOCFastLabelP33_7D1ECDF4F67D1CFA2DCB702D72CE29F114FastLabelLayer_labelInformation, (uint64_t)v11, &qword_100705560);
  sub_1000CBE0C((uint64_t)v10, v8, &qword_100705560);
  sub_1000A0B6C((uint64_t)v11);
  [v7 setNeedsDisplay];
  sub_1000CBE0C(v8, (uint64_t)v12, &qword_100705560);
  sub_1000CBE0C((uint64_t)v12, (uint64_t)v13, &qword_100705560);
  if (sub_1000CBEB4(v13) != 1) {
    [v6 setFont:v13[0]];
  }
  [v7 setFrame:0.0, 0.0, 0.0, 0.0];
  [v6 invalidateIntrinsicContentSize];
  [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel) setText:0];
  return [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel) setText:0];
}

void sub_10055B618(char *a1)
{
  uint64_t v2 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_titleBackgroundStateView];
  if (v2)
  {
    id v3 = v2;
    sub_10055A5AC(v3);
  }
  id v4 = *(void **)&a1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_imageBackgroundStateView];
  if (v4)
  {
    id v5 = v4;
    sub_10055A31C((uint64_t)v12);
    sub_1000CBE0C((uint64_t)v12, (uint64_t)v13, &qword_10070E910);
    if ((v14 & 1) == 0)
    {
      double v6 = *(double *)v13;
      double v7 = *(double *)&v13[1];
      double v8 = *(double *)&v13[2];
      double v9 = *(double *)&v13[3];
      id v10 = [v5 superview];
      if (v10)
      {
        id v11 = v10;
        [a1 convertRect:v10 toCoordinateSpace:v6, v7, v8, v9];
        [v5 setFrame:];

        id v5 = v11;
      }
    }
  }
}

void sub_10055B71C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (void *)(Strong + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
    swift_beginAccess();
    if (*v2) {
      [*(id *)(*v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_observedProgress) cancel];
    }
  }
}

void sub_10055B7B4(char a1)
{
  sub_1002CFC38(a1);
  [*(id *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel) setAlpha:1.0];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel);
  id v3 = (void *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent);
  swift_beginAccess();
  char v4 = 1;
  if (!*v3) {
    goto LABEL_5;
  }
  sub_1000CBE0C(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v7, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v8) == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v9 >= 1) {
    char v5 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
  }
  else {
LABEL_5:
  }
    char v5 = 1;
  LOBYTE(v8[0]) = 1;
  sub_1000A2120(v2, v5, 0, 0x100000000);
  double v6 = *(void **)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel);
  if (!*v3)
  {
LABEL_11:
    LOBYTE(v8[0]) = 1;
    sub_1000A2120(v6, v4, 0, 0x100000000);
    *(void *)(v1 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    sub_1000A1028();
    return;
  }
  sub_1000CBE0C(*v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v7, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v7, (uint64_t)v8, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v8) != 1)
  {
    if (v9 < 2) {
      char v4 = 1;
    }
    else {
      char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming);
    }
    goto LABEL_11;
  }
LABEL_13:
  __break(1u);
}

void sub_10055B980()
{
  uint64_t v1 = v0;
  sub_1002CFF50();
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  if (v2)
  {
    id v3 = *(void **)&v0[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel];
    id v4 = v2;
    id v5 = [v3 font];
    [v4 setFont:v5];

    char v6 = 1;
    [v4 setTextAlignment:1];
    *((unsigned char *)v4 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle) = v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics
                                                                                      + 8];
    sub_1002A84B0();
    [v4 setTextContainerInset:1.5, *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding], 1.0, *(double *)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding]];
    [v4 verticalScrollIndicatorInsets];
    [v4 setVerticalScrollIndicatorInsets:];
    sub_10055BC5C(v4);
    [v3 setAlpha:0.0];
    double v7 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_subtitleLabel];
    double v8 = &v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
    swift_beginAccess();
    if (!*v8) {
      goto LABEL_6;
    }
    sub_1000CBE0C(*v8 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v11, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v12) == 1)
    {
      __break(1u);
      goto LABEL_15;
    }
    if (v13 >= 1) {
      char v9 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
    }
    else {
LABEL_6:
    }
      char v9 = 1;
    LOBYTE(v12[0]) = 1;
    sub_1000A2120(v7, v9, 0, 0x100000000);
    id v10 = *(void **)&v1[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_secondSubtitleLabel];
    if (!*v8)
    {
LABEL_12:
      LOBYTE(v12[0]) = 1;
      sub_1000A2120(v10, v6, 0, 0x100000000);
      [v1 setNeedsUpdateConfiguration];
      [v1 layoutBelowIfNeeded];
      [v4 becomeFirstResponder];
      sub_1000A1028();

      return;
    }
    sub_1000CBE0C(*v8 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v11, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v11, (uint64_t)v12, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v12) != 1)
    {
      if (v13 < 2) {
        char v6 = 1;
      }
      else {
        char v6 = v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_isRenaming];
      }
      goto LABEL_12;
    }
LABEL_15:
    __break(1u);
  }
}

void sub_10055BC5C(void *a1)
{
  id v5 = v1;
  uint64_t v6 = OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView;
  double v7 = *(void **)&v1[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView];
  *(void *)&v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_renameTextView] = a1;
  double v8 = a1;

  uint64_t v9 = *(void *)&v5[v6];
  if (v9)
  {
    *(void *)(v9 + OBJC_IVAR____TtC5Files21DOCItemRenameTextView_itemRenameDelegate + 8) = &protocol witness table for DOCItemCollectionCell;
    swift_unknownObjectWeakAssign();
  }
  id v10 = [v5 contentView];
  [v10 addSubview:v8];

  v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_backgroundStyle] = v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_metrics
                                                                       + 8];
  sub_1002A84B0();
  char v11 = v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton];
  v8[OBJC_IVAR____TtC5Files21DOCItemRenameTextView_showsClearButton] = 0;
  if (v11)
  {
    id v12 = sub_1002A90B0();
    [v12 removeFromSuperview];
  }
  uint64_t v13 = &v5[OBJC_IVAR____TtC5Files21DOCItemCollectionCell_cellContent];
  swift_beginAccess();
  if (!*(void *)v13)
  {
    uint64_t v17 = 2;
LABEL_9:
    uint64_t v47 = v6;
    uint64_t v52 = (uint64_t)sub_10055C250(19722, 0xE200000000000000, v17);
    sub_1000CBE70(&qword_10070AEB0);
    sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
    uint64_t v18 = BidirectionalCollection<>.joined(separator:)();
    long long v20 = v19;
    swift_bridgeObjectRelease();
    uint64_t v52 = 77;
    unint64_t v53 = 0xE100000000000000;
    v21._uint64_t countAndFlagsBits = v18;
    v21._uint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    id v2 = [v8 selectedRange];
    uint64_t v3 = v22;
    id v4 = (objc_class *)type metadata accessor for DOCItemRenameTextView();
    v50.receiver = v8;
    v50.super_class = v4;
    id v23 = [super text];
    if (v23)
    {
      long long v24 = v23;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    goto LABEL_13;
  }
  sub_1000CBE0C(*(void *)v13 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v51, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v51, (uint64_t)&v52, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(&v52) == 1)
  {
LABEL_21:
    __break(1u);
    return;
  }
  BOOL v14 = v54 > 0;
  BOOL v15 = __OFADD__(v53, v14);
  unint64_t v16 = v53 + v14;
  if (v15)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v17 = v16 - 1;
  if (!__OFSUB__(v16, 1)) {
    goto LABEL_9;
  }
  __break(1u);
LABEL_13:
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v49.receiver = v8;
  v49.super_class = v4;
  [super setText:v25];

  [v8 setNeedsLayout];
  [v8 layoutIfNeeded];
  [v8 contentSize];
  double v27 = v26;
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v48.receiver = v8;
  v48.super_class = v4;
  [super setText:v28];

  [v8 setSelectedRange:v2, v3];
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_1005A1560;
  id v30 = [v8 topAnchor];
  id v31 = [*(id *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel] topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v29 + 32) = v32;
  id v33 = [v8 heightAnchor];
  id v34 = [v33 constraintEqualToConstant:v27];

  *(void *)(v29 + 40) = v34;
  id v35 = [v8 leadingAnchor];
  uint64_t v36 = *(void **)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_stackView];
  id v37 = [v36 leadingAnchor];
  if (*(void *)&v5[v47]) {
    double v38 = 5.0;
  }
  else {
    double v38 = 0.0;
  }
  uint64_t v39 = OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding;
  id v40 = [v35 constraintEqualToAnchor:v37 constant:-(v38 + *(double *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewAdditionalPadding])];

  *(void *)(v29 + 48) = v40;
  id v41 = [v8 trailingAnchor];
  id v42 = [v36 trailingAnchor];
  if (*(void *)&v5[v47]) {
    double v43 = 5.0;
  }
  else {
    double v43 = 0.0;
  }
  id v44 = [v41 constraintEqualToAnchor:v42 constant:*(double *)&v5[v39] + v43];

  *(void *)(v29 + 56) = v44;
  uint64_t v52 = v29;
  specialized Array._endMutation()();
  *(void *)&v5[OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_renameTextViewConstraints] = v52;
  swift_bridgeObjectRelease();
  CGPoint v45 = self;
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v45 activateConstraints:isa];
}

void *sub_10055C250(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    id result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      double v7 = v6;
      _OWORD v6[2] = a3;
      v6[4] = a1;
      void v6[5] = a2;
      if (a3 != 1)
      {
        void v6[6] = a1;
        v6[7] = a2;
        uint64_t v8 = a3 - 2;
        if (v8)
        {
          uint64_t v9 = v6 + 9;
          do
          {
            *(v9 - 1) = a1;
            *uint64_t v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    return v7;
  }
  return result;
}

uint64_t sub_10055C36C()
{
  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_backgroundConfigurationProvider, &qword_10071C0B8);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridCircularProgressVerticalConstraintFolder));

  return swift_bridgeObjectRelease();
}

id sub_10055C524(uint64_t a1)
{
  return sub_10055C53C(a1, type metadata accessor for DOCItemCollectionGridCell);
}

id sub_10055C53C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return [super dealloc];
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionGridCell.Metrics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionGridCell.Metrics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionGridCell.Metrics()
{
  return &type metadata for DOCItemCollectionGridCell.Metrics;
}

uint64_t sub_10055C628()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10055C660()
{
}

uint64_t sub_10055C668()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10055C6A0()
{
  return sub_1000A0C38();
}

void sub_10055C6C4()
{
  sub_10055B618(*(char **)(v0 + 16));
}

uint64_t sub_10055C6CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void *sub_10055C6DC(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat *a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  int64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    sub_100191340(0, v10, 0);
    double v39 = a5 + a6;
    uint64_t v41 = *(void *)(a2 + 16);
    double v38 = a8 + a9;
    long long v20 = (CGFloat *)(a1 + 56);
    do
    {
      CGFloat v21 = *(v20 - 3);
      CGFloat v22 = *(v20 - 2);
      double v23 = *(v20 - 1);
      CGFloat v24 = *v20;
      v42.origin.CGFloat x = v21;
      v42.origin.CGFloat y = v22;
      v42.size.double width = v23;
      v42.size.CGFloat height = *v20;
      double Height = CGRectGetHeight(v42);
      if (v41)
      {
        v43.origin.CGFloat x = v21;
        v43.origin.CGFloat y = v22;
        v43.size.double width = v23;
        v43.size.CGFloat height = v24;
        BOOL v26 = CGRectEqualToRect(v43, *(CGRect *)(a2 + 32));
        double v27 = Height + -1.0;
        if (a3 == 1) {
          double v27 = Height - a7;
        }
        if (v26)
        {
          double Height = v27;
          double v28 = v39;
        }
        else
        {
          double v28 = 0.0;
        }
        v44.origin.CGFloat x = v21;
        v44.origin.CGFloat y = v22;
        v44.size.double width = v23;
        v44.size.CGFloat height = v24;
        BOOL v29 = CGRectEqualToRect(v44, *(CGRect *)(a2 + 32 * v41));
        double v30 = 1.0;
        if (!v29 || a3 != 2) {
          double v30 = 0.0;
        }
        double Height = Height - v30;
        double v31 = v38;
        if (!v29) {
          double v31 = 0.0;
        }
      }
      else
      {
        double v31 = 0.0;
        double v28 = 0.0;
      }
      double v32 = v31 + v23 + v28;
      CGFloat v33 = *a4;
      v45.origin.CGFloat x = (a10 - v32) * 0.5;
      v45.origin.CGFloat y = *a4;
      v45.size.double width = v32;
      v45.size.CGFloat height = Height;
      *a4 = CGRectGetHeight(v45) + *a4;
      unint64_t v35 = _swiftEmptyArrayStorage[2];
      unint64_t v34 = _swiftEmptyArrayStorage[3];
      if (v35 >= v34 >> 1) {
        sub_100191340(v34 > 1, v35 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v35 + 1;
      uint64_t v36 = (double *)&_swiftEmptyArrayStorage[4 * v35];
      v36[4] = (a10 - v32) * 0.5;
      void v36[5] = v33;
      v36[6] = v32;
      v36[7] = Height;
      v20 += 4;
      --v10;
    }
    while (v10);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10055C920()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10055C930()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_10055C968()
{
  sub_100559BA8(*(void *)(v0 + 16));
}

uint64_t sub_10055C970()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10055C9B8()
{
  sub_100559948(v0[2], v0[3], v0[4]);
}

BOOL sub_10055C9C4(double a1, CGFloat a2)
{
  id v3 = *(id *)(v2 + OBJC_IVAR____TtC5Files25DOCItemCollectionGridCell_gridTitleLabel);
  [v3 bounds];
  [v3 convertRect:v2 toCoordinateSpace:];
  CGFloat x = v20.origin.x;
  CGFloat y = v20.origin.y;
  CGFloat width = v20.size.width;
  CGFloat height = v20.size.height;
  CGRect v21 = CGRectInset(v20, 0.0, -5.0);
  CGRect v22 = CGRectOffset(v21, 0.0, 10.0);
  CGFloat v8 = v22.origin.x;
  CGFloat v9 = v22.origin.y;
  CGFloat v10 = v22.size.width;
  CGFloat v11 = v22.size.height;
  v22.origin.CGFloat x = x;
  v22.origin.CGFloat y = y;
  v22.size.CGFloat width = width;
  v22.size.CGFloat height = height;
  double v12 = CGRectGetMidY(v22) + -2.0;
  v23.origin.CGFloat x = v8;
  v23.origin.CGFloat y = v9;
  v23.size.CGFloat width = v10;
  v23.size.CGFloat height = v11;
  double MinY = CGRectGetMinY(v23);

  if (MinY >= v12) {
    double v14 = v12;
  }
  else {
    double v14 = MinY;
  }
  CGFloat v15 = v8;
  CGFloat v16 = v10;
  CGFloat v17 = v11;
  return CGRectGetMaxY(*(CGRect *)(&v14 - 1)) < a2;
}

uint64_t sub_10055CAD4()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for DOCItemCollectionGridCell.Metrics.Spacing()
{
  return &type metadata for DOCItemCollectionGridCell.Metrics.Spacing;
}

uint64_t sub_10055CB18(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10, void **a11, uint64_t a12)
{
  if (*(void *)(v12 + 32))
  {
    swift_retain();
    DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
    swift_release();
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  *(unsigned char *)(v17 + 32) = a4;
  *(unsigned char *)(v17 + 33) = BYTE1(a4) & 1;
  *(void *)(v17 + 40) = a9;
  *(void *)(v17 + 48) = a10;
  *(void *)(v17 + 56) = v12;
  uint64_t v18 = self;
  sub_10055E9EC(a2, a3, a4, BYTE1(a4) & 1);
  swift_retain();
  swift_retain();
  id v19 = [v18 defaultManager];
  if (a7) {
    sub_10053AAF0(a1, a5, a6, a8, 0, (void **)sub_10055EA88, v17, (uint64_t)a11, a12);
  }
  else {
    sub_10053AFC0(a1, a5, a6, a8, 0, (uint64_t)sub_10055EA88, v17, a11, a12);
  }

  return swift_release();
}

uint64_t sub_10055CCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v14 = (a4 >> 8) & 1;
  uint64_t v27 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  BOOL v26 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v16 - 8);
  uint64_t v29 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10009E6C4(0, (unint64_t *)&qword_100705380);
  uint64_t v25 = static OS_dispatch_queue.main.getter();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a1;
  *(void *)(v19 + 24) = a2;
  *(void *)(v19 + 32) = a3;
  *(unsigned char *)(v19 + 40) = a4;
  *(unsigned char *)(v19 + 41) = v14;
  *(void *)(v19 + 48) = a5;
  *(void *)(v19 + 56) = a6;
  *(void *)(v19 + 64) = a7;
  aBlock[4] = sub_10055EAE4;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B7918;
  CGRect v20 = _Block_copy(aBlock);
  swift_errorRetain();
  sub_10055E9EC(a2, a3, a4, v14);
  swift_retain();
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001102E4();
  sub_1000CBE70((uint64_t *)&unk_100705390);
  sub_1000B921C();
  CGRect v22 = v26;
  uint64_t v21 = v27;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  CGRect v23 = (void *)v25;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v21);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v18, v29);
}

uint64_t sub_10055CF98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, void), uint64_t a6, uint64_t a7)
{
  type metadata accessor for DOCSmartFolderManager();
  uint64_t v13 = (void *)static DOCSmartFolderManager.sharedManager.getter();
  dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()();

  if (a1)
  {
    a3 = 0;
    a4 = 0;
    unsigned int v14 = 1;
    a2 = a1;
  }
  else
  {
    unsigned int v14 = (a4 >> 8) & 1;
    sub_10055E9EC(a2, a3, a4, BYTE1(a4) & 1);
  }
  swift_errorRetain();
  a5(a2, a3, a4 | (v14 << 8));
  if (*(void *)(a7 + 32))
  {
    if (v14) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = (void *)a3;
    }
    if (v14) {
      uint64_t v16 = 0;
    }
    else {
      uint64_t v16 = a2;
    }
    swift_retain();
    sub_1004B695C(v16, v15);
    swift_release();
  }

  return sub_100312438(a2, a3, a4, v14);
}

id sub_10055D0B8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (**a5)(uint64_t a1, void *a2), uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v86 = a6;
  unsigned int v88 = a8;
  uint64_t v87 = a7;
  uint64_t v90 = a5;
  unint64_t v92 = a3;
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v84 = *(void *)(v19 - 8);
  uint64_t v85 = v19;
  __chkstk_darwin(v19);
  objc_super v89 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  CGRect v22 = result;
  v100._uint64_t countAndFlagsBits = 0xD000000000000031;
  v100._uint64_t object = (void *)0x8000000100600B50;
  v23._uint64_t object = (void *)0x8000000100600B10;
  v23._uint64_t countAndFlagsBits = 0x1000000000000038;
  v24._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v24._uint64_t object = (void *)0xEB00000000656C62;
  v25._uint64_t countAndFlagsBits = 0x1000000000000038;
  v25._uint64_t object = (void *)0x8000000100600B10;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v100);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v26 = swift_allocObject();
  long long v91 = xmmword_1005A0030;
  *(_OWORD *)(v26 + 16) = xmmword_1005A0030;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_100073F48();
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v28 = String.init(format:_:)();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v31 = result;
  v32._uint64_t countAndFlagsBits = 0x1000000000000054;
  v101._uint64_t countAndFlagsBits = 0xD000000000000043;
  v101._uint64_t object = (void *)0x80000001006009B0;
  v32._uint64_t object = (void *)0x8000000100600950;
  v33._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v33._uint64_t object = (void *)0xEB00000000656C62;
  v34._uint64_t countAndFlagsBits = 0x1000000000000054;
  v34._uint64_t object = (void *)0x8000000100600950;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v101);

  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v91;
  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = v27;
  *(void *)(v35 + 32) = v92;
  *(void *)(v35 + 40) = a4;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = [self alertControllerWithTitle:v36 message:v37 preferredStyle:1];

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  double v39 = result;
  v73[0] = v28;
  unint64_t v92 = v30;
  v102._uint64_t object = (void *)0x80000001005DFDC0;
  v40._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v40._uint64_t object = (void *)0xE600000000000000;
  v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v41._uint64_t object = (void *)0xEB00000000656C62;
  v42._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v42._uint64_t object = (void *)0xE600000000000000;
  v102._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v102);

  CGRect v43 = (void *)swift_allocObject();
  uint64_t v81 = a13;
  void v43[2] = a13;
  v43[3] = a14;
  uint64_t v82 = a15;
  v43[4] = a15;
  v43[5] = a16;
  CGRect v44 = v90;
  v43[6] = v90;
  uint64_t v83 = a14;
  swift_retain();
  uint64_t v79 = a16;
  swift_retain();
  CGRect v45 = v44;
  NSString v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v98 = sub_10055E9A8;
  id v99 = v43;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v95 = 1107296256;
  uint64_t v90 = &v96;
  id v96 = sub_10041B2E4;
  uint64_t v97 = &unk_1006B7850;
  uint64_t v47 = _Block_copy(&aBlock);
  swift_release();
  id v80 = self;
  id v48 = [v80 actionWithTitle:v46 style:1 handler:v47];
  _Block_release(v47);

  *(void *)&long long v91 = v38;
  id v78 = v48;
  [v38 addAction:v48];
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  objc_super v49 = result;
  id v74 = a12;
  int v75 = a11;
  uint64_t v50 = v88;
  int v51 = (v88 >> 8) & 1;
  v103._uint64_t countAndFlagsBits = 0xD000000000000032;
  v73[1] = a10;
  v103._uint64_t object = (void *)0x8000000100600B90;
  v52._uint64_t countAndFlagsBits = 0x65766F6D6552;
  v52._uint64_t object = (void *)0xE600000000000000;
  v53._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v53._uint64_t object = (void *)0xEB00000000656C62;
  v54._uint64_t countAndFlagsBits = 0x65766F6D6552;
  v54._uint64_t object = (void *)0xE600000000000000;
  Swift::String v55 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v49, v54, v103);
  uint64_t countAndFlagsBits = v55._countAndFlagsBits;
  uint64_t object = v55._object;

  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = v45;
  uint64_t v58 = v86;
  uint64_t v59 = v87;
  *(void *)(v57 + 32) = v86;
  *(void *)(v57 + 40) = v59;
  *(unsigned char *)(v57 + 48) = v50;
  *(unsigned char *)(v57 + 49) = v51;
  *(void *)(v57 + 56) = a9;
  *(void *)(v57 + 64) = a10;
  *(unsigned char *)(v57 + 72) = v75 & 1;
  uint64_t v60 = v81;
  *(void *)(v57 + 80) = a12;
  *(void *)(v57 + 88) = v60;
  uint64_t v61 = v82;
  *(void *)(v57 + 96) = v83;
  *(void *)(v57 + 104) = v61;
  *(void *)(v57 + 112) = v79;
  swift_retain();
  swift_retain();
  unint64_t v62 = v45;
  swift_retain();
  sub_10055E9EC(v58, v59, v50, BYTE1(v50) & 1);
  sub_10055E9FC();
  id v63 = v74;
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v98 = sub_10055E9E8;
  id v99 = (void *)v57;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v95 = 1107296256;
  id v96 = sub_10041B2E4;
  uint64_t v97 = &unk_1006B78A0;
  uint64_t v65 = _Block_copy(&aBlock);
  swift_release();
  id v66 = [v80 actionWithTitle:v64 style:0 handler:v65];
  _Block_release(v65);
  swift_release();

  char v67 = (void *)v91;
  [(id)v91 addAction:v66];
  [v67 setPreferredAction:v66];
  [v63 presentViewController:v67 animated:1 completion:0];
  uint64_t v68 = v89;
  static Logger.Rename.getter();
  unint64_t v69 = v92;
  swift_bridgeObjectRetain();
  unint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v72 = 136315394;
    uint64_t v93 = sub_10009B0E4(0xD00000000000009ALL, 0x8000000100600BD0, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v72 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v93 = sub_10009B0E4(v73[0], v69, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s: prompting user for file extension removal confirmation with message: %s", (uint8_t *)v72, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v68, v85);
}

id sub_10055DA48(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, unsigned __int8 a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v87 = a6;
  unsigned int v89 = a8;
  uint64_t v88 = a7;
  id v91 = a5;
  id v93 = a3;
  uint64_t v19 = type metadata accessor for Logger();
  uint64_t v85 = *(void *)(v19 - 8);
  uint64_t v86 = v19;
  __chkstk_darwin(v19);
  uint64_t v90 = (char *)v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  CGRect v22 = result;
  v101._uint64_t countAndFlagsBits = 0xD000000000000035;
  v101._uint64_t object = (void *)0x8000000100600910;
  v23._uint64_t object = (void *)0x80000001006008C0;
  v23._uint64_t countAndFlagsBits = 0x100000000000004CLL;
  v24._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v24._uint64_t object = (void *)0xEB00000000656C62;
  v25._uint64_t countAndFlagsBits = 0x100000000000004CLL;
  v25._uint64_t object = (void *)0x80000001006008C0;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v101);

  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v26 = swift_allocObject();
  long long v92 = xmmword_1005A0030;
  *(_OWORD *)(v26 + 16) = xmmword_1005A0030;
  *(void *)(v26 + 56) = &type metadata for String;
  unint64_t v27 = sub_100073F48();
  *(void *)(v26 + 64) = v27;
  *(void *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v28 = String.init(format:_:)();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  double v31 = result;
  v32._uint64_t countAndFlagsBits = 0x1000000000000054;
  v102._uint64_t countAndFlagsBits = 0xD000000000000043;
  v102._uint64_t object = (void *)0x80000001006009B0;
  v32._uint64_t object = (void *)0x8000000100600950;
  v33._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v33._uint64_t object = (void *)0xEB00000000656C62;
  v34._uint64_t countAndFlagsBits = 0x1000000000000054;
  v34._uint64_t object = (void *)0x8000000100600950;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v102);

  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v92;
  *(void *)(v35 + 56) = &type metadata for String;
  *(void *)(v35 + 64) = v27;
  *(void *)(v35 + 32) = v93;
  *(void *)(v35 + 40) = a4;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  NSString v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v38 = [self alertControllerWithTitle:v36 message:v37 preferredStyle:1];

  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  double v39 = result;
  v74[0] = v28;
  *(void *)&long long v92 = v30;
  v103._uint64_t countAndFlagsBits = 0xD000000000000032;
  v103._uint64_t object = (void *)0x8000000100600A00;
  v40._uint64_t countAndFlagsBits = 0x20749980E26E6F44;
  v40._uint64_t object = (void *)0xAB00000000646441;
  v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v41._uint64_t object = (void *)0xEB00000000656C62;
  v42._uint64_t countAndFlagsBits = 0x20749980E26E6F44;
  v42._uint64_t object = (void *)0xAB00000000646441;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v103);

  CGRect v43 = (void *)swift_allocObject();
  uint64_t v82 = a13;
  void v43[2] = a13;
  v43[3] = a14;
  uint64_t v84 = a15;
  v43[4] = a15;
  v43[5] = a16;
  id v44 = v91;
  v43[6] = v91;
  uint64_t v83 = a14;
  swift_retain();
  uint64_t v79 = a16;
  swift_retain();
  id v45 = v44;
  NSString v46 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v99 = sub_10055E9A8;
  Swift::String v100 = v43;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v96 = 1107296256;
  uint64_t v81 = &v97;
  uint64_t v97 = sub_10041B2E4;
  id v98 = &unk_1006B7788;
  uint64_t v47 = _Block_copy(&aBlock);
  swift_release();
  id v80 = self;
  id v48 = [v80 actionWithTitle:v46 style:1 handler:v47];
  _Block_release(v47);

  id v91 = v38;
  id v93 = v48;
  [v38 addAction:v48];
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  objc_super v49 = result;
  id v75 = a12;
  int v76 = a11;
  uint64_t v50 = v89;
  int v51 = (v89 >> 8) & 1;
  v74[1] = a10;
  v104._uint64_t object = (void *)0x8000000100600A40;
  v52._uint64_t countAndFlagsBits = 6579265;
  v52._uint64_t object = (void *)0xE300000000000000;
  v53._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v53._uint64_t object = (void *)0xEB00000000656C62;
  v54._uint64_t countAndFlagsBits = 6579265;
  v54._uint64_t object = (void *)0xE300000000000000;
  v104._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  Swift::String v55 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v52, v53, (NSBundle)v49, v54, v104);
  uint64_t countAndFlagsBits = v55._countAndFlagsBits;
  uint64_t object = v55._object;

  uint64_t v56 = swift_allocObject();
  swift_weakInit();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = v56;
  *(void *)(v57 + 24) = v45;
  uint64_t v58 = v87;
  uint64_t v59 = v45;
  uint64_t v60 = v88;
  *(void *)(v57 + 32) = v87;
  *(void *)(v57 + 40) = v60;
  *(unsigned char *)(v57 + 48) = v50;
  *(unsigned char *)(v57 + 49) = v51;
  *(void *)(v57 + 56) = a9;
  *(void *)(v57 + 64) = a10;
  *(unsigned char *)(v57 + 72) = v76 & 1;
  uint64_t v61 = v82;
  *(void *)(v57 + 80) = a12;
  *(void *)(v57 + 88) = v61;
  uint64_t v62 = v84;
  *(void *)(v57 + 96) = v83;
  *(void *)(v57 + 104) = v62;
  *(void *)(v57 + 112) = v79;
  swift_retain();
  swift_retain();
  id v63 = v59;
  swift_retain();
  sub_10055E9EC(v58, v60, v50, BYTE1(v50) & 1);
  sub_10055E9FC();
  id v64 = v75;
  NSString v65 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v99 = sub_10055E9E8;
  Swift::String v100 = (void *)v57;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v96 = 1107296256;
  uint64_t v97 = sub_10041B2E4;
  id v98 = &unk_1006B7800;
  id v66 = _Block_copy(&aBlock);
  swift_release();
  id v67 = [v80 actionWithTitle:v65 style:0 handler:v66];
  _Block_release(v66);
  swift_release();

  id v68 = v91;
  [v91 addAction:v67];
  [v68 setPreferredAction:v93];
  [v64 presentViewController:v68 animated:1 completion:0];
  unint64_t v69 = v90;
  static Logger.Rename.getter();
  unint64_t v70 = v92;
  swift_bridgeObjectRetain();
  os_log_type_t v71 = Logger.logObject.getter();
  os_log_type_t v72 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v73 = 136315394;
    uint64_t v94 = sub_10009B0E4(0xD000000000000096, 0x8000000100600A70, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v73 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v94 = sub_10009B0E4(v74[0], v70, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s: prompting user for file extension addition confirmation with message: %s", (uint8_t *)v73, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v69, v86);
}

uint64_t sub_10055E3EC(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6)
{
  sub_1002EEF3C();
  swift_allocError();
  *CGFloat v9 = 5;
  a2();
  swift_errorRelease();
  uint64_t v10 = swift_allocError();
  *CGFloat v11 = 5;
  a4(a6, v10);

  return swift_errorRelease();
}

uint64_t sub_10055E4D0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, __int16 a6, uint64_t a7, uint64_t a8, char a9, void *a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10055CB18(a3, a4, a5, a6 & 0x1FF, a7, a8, a9 & 1, a10, a11, a12, a13, a14);
    return swift_release();
  }
  return result;
}

uint64_t sub_10055E590(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void), uint64_t a6, void **a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int16 a12, void *a13)
{
  NSString v17 = String._bridgeToObjectiveC()();
  id v18 = [v17 stringByDeletingPathExtension];

  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;

  id v22 = [a4 displayName];
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  if (v19 == v23 && v21 == v25) {
    goto LABEL_8;
  }
  char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v27)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    sub_1002EEF3C();
    swift_allocError();
    *Swift::String v32 = 5;
    a5();
    swift_errorRelease();
    uint64_t v33 = swift_allocError();
    unsigned char *v34 = 5;
    ((void (*)(void *, uint64_t))a7)(a4, v33);
    return swift_errorRelease();
  }
  id v28 = [a4 filename];
  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = v30;

  if (v19 == v29 && v21 == v31)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_9;
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = Strong;
  if (*(void *)(Strong + 32))
  {
    swift_retain();
    DOCHierarchyController.SuspendableUIChangeCoordinator.beginSuspendingVisualChanges(timeout:)(1.0);
    swift_release();
  }
  int v38 = HIBYTE(a12) & 1;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = a10;
  *(void *)(v41 + 24) = a11;
  *(unsigned char *)(v41 + 32) = a12;
  *(unsigned char *)(v41 + 33) = v38;
  *(void *)(v41 + 40) = a5;
  *(void *)(v41 + 48) = a6;
  *(void *)(v41 + 56) = v42;
  id v40 = self;
  sub_10055E9EC(a10, a11, a12, v38);
  swift_retain();
  swift_retain();
  id v39 = [v40 defaultManager];
  sub_10053AFC0(a4, v19, v21, a13, 0, (uint64_t)sub_10055EA88, v41, a7, a8);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t DOCItemRenameOperation.deinit()
{
  swift_release();
  return v0;
}

uint64_t DOCItemRenameOperation.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DOCItemRenameOperation()
{
  return self;
}

uint64_t sub_10055E9AC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10055E9EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return swift_errorRetain();
  }
  else {
    return sub_10055E9FC();
  }
}

uint64_t sub_10055E9FC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10055EA08(uint64_t a1)
{
  return sub_10055E3EC(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10055EA30(uint64_t a1)
{
  return sub_10055E4D0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 49) << 8), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), *(void **)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void ***)(v1 + 104), *(void *)(v1 + 112));
}

uint64_t sub_10055EA8C()
{
  swift_errorRelease();
  sub_100312438(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10055EAE4()
{
  return sub_10055CF98(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40) | (*(unsigned __int8 *)(v0 + 41) << 8), *(void (**)(uint64_t, uint64_t, void))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_10055EB0C(uint64_t a1, uint64_t a2, void (**a3)(uint64_t a1, void *a2), void *a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, unsigned __int16 a10, uint64_t a11, void *a12, char a13, void *a14, void (*a15)(id, uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t (*a19)(void, void, void), uint64_t a20)
{
  id v131 = a4;
  id v132 = a7;
  uint64_t v126 = a5;
  uint64_t v127 = a6;
  uint64_t v129 = a2;
  Class v130 = a3;
  uint64_t v128 = a1;
  uint64_t v123 = a17;
  uint64_t v133 = a15;
  id v118 = a14;
  id v120 = a12;
  uint64_t v119 = a11;
  unsigned int v125 = a10;
  uint64_t v124 = a9;
  uint64_t v21 = type metadata accessor for Logger();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = a18;
  v25[3] = a19;
  v25[4] = a20;
  if ((a13 & 1) == 0)
  {
    sub_1002EEF3C();
    uint64_t v26 = swift_allocError();
    *char v27 = 5;
    swift_retain();
    swift_retain();
    sub_100426164(v26, 0, 256, a18, a19, a20);
    swift_errorRelease();
    uint64_t v28 = swift_allocError();
    unsigned char *v29 = 5;
    v133(v132, v28);
    swift_errorRelease();
    return swift_release();
  }
  Swift::Int v121 = v25;
  uint64_t v116 = a8;
  uint64_t v117 = a16;
  uint64_t v113 = v24;
  uint64_t v112 = v22;
  swift_retain();
  v106[2] = a20;
  swift_retain();
  id v31 = (id)_DocumentManagerBundle();
  if (!v31)
  {
    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_14;
  }
  Swift::String v32 = v31;
  v142._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v142._uint64_t object = (void *)0x8000000100600D00;
  v33._uint64_t object = (void *)0x8000000100600CC0;
  v33._uint64_t countAndFlagsBits = 0x1000000000000032;
  v34._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v34._uint64_t object = (void *)0xEB00000000656C62;
  v35._uint64_t countAndFlagsBits = 0x1000000000000032;
  v35._uint64_t object = (void *)0x8000000100600CC0;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v142);

  uint64_t v122 = sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_10059B760;
  *(void *)(v36 + 56) = &type metadata for String;
  unint64_t v37 = sub_100073F48();
  uint64_t v38 = v129;
  *(void *)(v36 + 32) = v128;
  *(void *)(v36 + 40) = v38;
  *(void *)(v36 + 96) = &type metadata for String;
  *(void *)(v36 + 104) = v37;
  id v39 = v130;
  id v40 = v131;
  *(void *)(v36 + 64) = v37;
  *(void *)(v36 + 72) = v39;
  *(void *)(v36 + 80) = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = String.init(format:_:)();
  unint64_t v43 = v42;
  swift_bridgeObjectRelease();
  id v44 = (id)_DocumentManagerBundle();
  id v45 = v132;
  if (!v44)
  {
LABEL_14:
    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_15;
  }
  NSString v46 = v44;
  v106[1] = a18;
  uint64_t v110 = v21;
  v47._uint64_t countAndFlagsBits = 0x1000000000000054;
  v143._uint64_t countAndFlagsBits = 0xD000000000000043;
  v143._uint64_t object = (void *)0x80000001006009B0;
  v47._uint64_t object = (void *)0x8000000100600950;
  v48._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v48._uint64_t object = (void *)0xEB00000000656C62;
  v49._uint64_t countAndFlagsBits = 0x1000000000000054;
  v49._uint64_t object = (void *)0x8000000100600950;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v47, v48, (NSBundle)v46, v49, v143);

  uint64_t v50 = swift_allocObject();
  long long v114 = xmmword_1005A0030;
  *(_OWORD *)(v50 + 16) = xmmword_1005A0030;
  *(void *)(v50 + 56) = &type metadata for String;
  *(void *)(v50 + 64) = v37;
  *(void *)(v50 + 32) = v126;
  *(void *)(v50 + 40) = v127;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v107 = v41;
  NSString v51 = String._bridgeToObjectiveC()();
  unint64_t v111 = v43;
  swift_bridgeObjectRelease();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v115 = [self alertControllerWithTitle:v51 message:v52 preferredStyle:1];

  id v53 = (id)_DocumentManagerBundle();
  if (!v53)
  {
LABEL_15:
    swift_release();
    swift_release();
    __break(1u);
    goto LABEL_16;
  }
  Swift::String v54 = v53;
  int v55 = (v125 >> 8) & 1;
  char v56 = v125;
  v144._uint64_t countAndFlagsBits = 0xD000000000000028;
  v144._uint64_t object = (void *)0x8000000100600D30;
  v57._uint64_t countAndFlagsBits = 0x2E9C80E220657355;
  v57._uint64_t object = (void *)0xAD00009D80E24025;
  v58._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v58._uint64_t object = (void *)0xEB00000000656C62;
  v59._uint64_t countAndFlagsBits = 0x2E9C80E220657355;
  v59._uint64_t object = (void *)0xAD00009D80E24025;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v57, v58, (NSBundle)v54, v59, v144);

  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = v114;
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = v37;
  unint64_t v108 = v37;
  *(void *)(v60 + 32) = v130;
  *(void *)(v60 + 40) = v131;
  swift_bridgeObjectRetain();
  Class v130 = (void (**)(uint64_t, void *))String.init(format:_:)();
  uint64_t v109 = v61;
  swift_bridgeObjectRelease();
  uint64_t v62 = (void *)swift_allocObject();
  swift_weakInit();
  uint64_t v63 = swift_allocObject();
  id v131 = v62;
  *(void *)(v63 + 16) = v62;
  *(void *)(v63 + 24) = v45;
  uint64_t v64 = v116;
  uint64_t v65 = v124;
  *(void *)(v63 + 32) = v116;
  *(void *)(v63 + 40) = v65;
  *(unsigned char *)(v63 + 48) = v56;
  *(unsigned char *)(v63 + 49) = v55;
  id v66 = v120;
  *(void *)(v63 + 56) = v119;
  *(void *)(v63 + 64) = v66;
  *(unsigned char *)(v63 + 72) = 1;
  id v67 = v118;
  *(void *)(v63 + 80) = v118;
  *(void *)(v63 + 88) = sub_10056059C;
  id v68 = v133;
  *(void *)(v63 + 96) = v121;
  *(void *)(v63 + 104) = v68;
  *(void *)(v63 + 112) = v117;
  swift_retain();
  id v132 = v45;
  id v69 = v67;
  uint64_t v70 = v125;
  id v118 = v69;
  swift_retain();
  swift_retain();
  uint64_t v71 = v65;
  uint64_t v72 = v70;
  uint64_t v73 = v70;
  char v74 = v55;
  sub_10055E9EC(v64, v71, v73, v55);
  sub_10055E9FC();
  NSString v75 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v139 = (uint64_t (*)(uint64_t))sub_10055E9E8;
  uint64_t v140 = v63;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v136 = 1107296256;
  Class v130 = &v137;
  id v137 = sub_10041B2E4;
  uint64_t v138 = &unk_1006B79B8;
  int v76 = _Block_copy(&aBlock);
  swift_release();
  id v120 = self;
  id v77 = [v120 actionWithTitle:v75 style:1 handler:v76];
  _Block_release(v76);
  swift_release();

  id v131 = v77;
  [v115 addAction:v77];
  id v78 = (id)_DocumentManagerBundle();
  if (!v78)
  {
LABEL_16:
    swift_release();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v79 = v78;
  v145._uint64_t object = (void *)0x8000000100600D60;
  v80._uint64_t countAndFlagsBits = 0x9C80E2207065654BLL;
  v80._uint64_t object = (void *)0xAE009C80E240252ELL;
  v81._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v81._uint64_t object = (void *)0xEB00000000656C62;
  v82._uint64_t countAndFlagsBits = 0x9C80E2207065654BLL;
  v82._uint64_t object = (void *)0xAE009C80E240252ELL;
  v145._uint64_t countAndFlagsBits = 0xD000000000000027;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v80, v81, (NSBundle)v79, v82, v145);

  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v114;
  unint64_t v84 = v108;
  *(void *)(v83 + 56) = &type metadata for String;
  *(void *)(v83 + 64) = v84;
  *(void *)(v83 + 32) = v128;
  *(void *)(v83 + 40) = v129;
  swift_bridgeObjectRetain();
  uint64_t v85 = String.init(format:_:)();
  uint64_t v128 = v86;
  uint64_t v129 = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = swift_allocObject();
  swift_weakInit();
  uint64_t v88 = swift_allocObject();
  *(void *)(v88 + 16) = v126;
  unsigned int v89 = v132;
  *(void *)(v88 + 24) = v127;
  *(void *)(v88 + 32) = v89;
  uint64_t v90 = v121;
  *(void *)(v88 + 40) = sub_10056059C;
  *(void *)(v88 + 48) = v90;
  uint64_t v91 = v117;
  *(void *)(v88 + 56) = v133;
  *(void *)(v88 + 64) = v91;
  uint64_t v92 = v116;
  *(void *)(v88 + 72) = v87;
  *(void *)(v88 + 80) = v92;
  uint64_t v93 = v124;
  *(void *)(v88 + 88) = v124;
  *(unsigned char *)(v88 + 96) = v72;
  *(unsigned char *)(v88 + 97) = v74;
  uint64_t v94 = v118;
  *(void *)(v88 + 104) = v118;
  swift_bridgeObjectRetain();
  id v95 = v89;
  id v96 = v94;
  swift_retain();
  swift_retain();
  sub_10055E9EC(v92, v93, v72, v74);
  swift_retain();
  NSString v97 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v139 = sub_1005606A4;
  uint64_t v140 = v88;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v136 = 1107296256;
  id v137 = sub_10041B2E4;
  uint64_t v138 = &unk_1006B7A08;
  id v98 = _Block_copy(&aBlock);
  swift_release();
  id v99 = [v120 actionWithTitle:v97 style:0 handler:v98];
  _Block_release(v98);
  swift_release();

  id v100 = v115;
  [v115 addAction:v99];
  [v100 setPreferredAction:v99];
  [v96 presentViewController:v100 animated:1 completion:0];
  Swift::String v101 = v113;
  static Logger.Rename.getter();
  unint64_t v102 = v111;
  swift_bridgeObjectRetain();
  Swift::String v103 = Logger.logObject.getter();
  os_log_type_t v104 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v103, v104))
  {
    uint64_t v105 = swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v105 = 136315394;
    uint64_t v134 = sub_10009B0E4(0xD0000000000000A6, 0x8000000100600D90, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v105 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v134 = sub_10009B0E4(v107, v102, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "%s: prompting user for file extension change confirmation with message: %s", (uint8_t *)v105, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v112 + 8))(v101, v110);
  return swift_release();
}

uint64_t sub_10055F860(void (**a1)(uint64_t a1, void *a2), uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, char a7, void *a8, void (*a9)(id, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t (*a13)(void, void, void), uint64_t a14)
{
  uint64_t v20 = (void *)swift_allocObject();
  _OWORD v20[2] = a12;
  v20[3] = a13;
  v20[4] = a14;
  if ((a7 & 1) == 0)
  {
    swift_retain();
    swift_retain();
    goto LABEL_22;
  }
  uint64_t v37 = a3;
  uint64_t v38 = a2;
  id v39 = (void *)a5;
  swift_retain();
  swift_retain();
  uint64_t v36 = a1;
  id v21 = [a1 filename];
  if (!v21)
  {
    swift_release();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v22 = v21;
  id v23 = [v21 pathExtension];

  uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  Swift::String v35 = (void *)a6;
  NSString v27 = String._bridgeToObjectiveC()();
  id v28 = [v27 pathExtension];

  uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v31 = v30;

  uint64_t v32 = v29 & 0xFFFFFFFFFFFFLL;
  if ((v31 & 0x2000000000000000) != 0) {
    uint64_t v32 = HIBYTE(v31) & 0xF;
  }
  uint64_t v33 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v33 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (!v32)
  {
    if (v33)
    {
      swift_bridgeObjectRelease();
      sub_10055D0B8(v24, v26, (unint64_t)v39, (uint64_t)v35, v36, v38, v37, a4 & 0x1FF, (uint64_t)v39, (uint64_t)v35, 1u, a8, (uint64_t)sub_10056059C, (uint64_t)v20, (uint64_t)a9, a10);
      swift_release();
      goto LABEL_13;
    }
LABEL_16:
    if (v24 == v29 && v26 == v31)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        swift_retain();
        swift_retain();
        sub_10055EB0C(v24, v26, (void (**)(uint64_t, void *))v29, (void *)v31, (uint64_t)v39, (uint64_t)v35, v36, v38, v37, a4 & 0x1FF, (uint64_t)v39, v35, 1, a8, a9, a10, a11, a12, a13,
          a14);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    a6 = (uint64_t)v35;
    a1 = v36;
    a2 = v38;
    a5 = (uint64_t)v39;
    a3 = v37;
LABEL_22:
    sub_10055CB18(a1, a2, a3, a4 & 0x1FF, a5, a6, a7 & 1, a8, (uint64_t)sub_10056059C, (uint64_t)v20, (void **)a9, a10);
LABEL_23:
    return swift_release();
  }
  if (v33) {
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  sub_10055DA48(v29, v31, v39, (uint64_t)v35, v36, v38, v37, a4 & 0x1FF, (uint64_t)v39, (uint64_t)v35, 1u, a8, (uint64_t)sub_10056059C, (uint64_t)v20, (uint64_t)a9, a10);
  swift_release();
LABEL_13:

  return swift_bridgeObjectRelease();
}

void sub_10055FC64(uint64_t a1, uint64_t a2, char a3, void (*a4)(id, uint64_t), uint64_t a5, id *a6, uint64_t a7, uint64_t (*a8)(void, void, void), uint64_t a9)
{
  uint64_t v79 = a8;
  uint64_t v80 = a5;
  Swift::String v81 = a4;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v76 = *(void *)(v14 - 8);
  uint64_t v77 = v14;
  __chkstk_darwin(v14);
  id v78 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for CharacterSet();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a7;
  uint64_t v83 = a6;
  id v20 = a6[2];
  swift_retain();
  swift_retain();
  if (a3) {
    id v21 = [v20 filename];
  }
  else {
    id v21 = [v20 displayName];
  }
  id v22 = v21;
  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  if (v23 == a1 && v25 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v27 & 1) == 0)
    {
      uint64_t v28 = (uint64_t)v83;
      id v75 = v83[3];
      v29._uint64_t countAndFlagsBits = 46;
      v29._uint64_t object = (void *)0xE100000000000000;
      if (String.hasPrefix(_:)(v29))
      {
        sub_1002EEF3C();
        uint64_t v30 = swift_allocError();
        *unint64_t v31 = 2;
      }
      else
      {
        CharacterSet.init(charactersIn:)();
        v85[0] = a1;
        v85[1] = a2;
        sub_10009D28C();
        StringProtocol.rangeOfCharacter(from:options:range:)();
        if (v38)
        {
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          id v69 = *(void **)(v28 + 16);
          uint64_t v70 = v82;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v71 = v69;
          uint64_t v72 = v75;
          sub_10055F860(v71, a1, a2, a3 & 1, a1, a2, a3 & 1, v75, v81, v80, v28, v70, v79, a9);
          swift_bridgeObjectRelease();

          swift_release_n();
          swift_release_n();
          return;
        }
        sub_1002EEF3C();
        uint64_t v30 = swift_allocError();
        *id v39 = 3;
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      }
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v40 = Error.localizedDescription.getter();
      unint64_t v42 = v41;
      swift_bridgeObjectRetain();
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v44 = [self alertControllerWithTitle:0 message:v43 preferredStyle:1];

      id v45 = (id)_DocumentManagerBundle();
      NSString v46 = v78;
      if (!v45) {
        goto LABEL_37;
      }
      Swift::String v47 = v45;
      v87._uint64_t object = (void *)0xE200000000000000;
      v48._uint64_t countAndFlagsBits = 19279;
      v48._uint64_t object = (void *)0xE200000000000000;
      v49._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v49._uint64_t object = (void *)0xEB00000000656C62;
      v50._uint64_t countAndFlagsBits = 0;
      v50._uint64_t object = (void *)0xE000000000000000;
      v87._uint64_t countAndFlagsBits = 19279;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v48, v49, (NSBundle)v47, v50, v87);

      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v52 = [self actionWithTitle:v51 style:0 handler:0];

      [v44 addAction:v52];
      id v53 = v44;
      id v54 = [v53 actions];
      sub_10009E6C4(0, &qword_10071B880);
      unint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v55 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v56)
        {
LABEL_20:
          unint64_t v57 = v56 - 1;
          if (!__OFSUB__(v56, 1))
          {
            uint64_t v74 = v40;
            if ((v55 & 0xC000000000000001) == 0)
            {
              if ((v57 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v57 < *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v58 = *(id *)(v55 + 8 * v57 + 32);
LABEL_25:
                Swift::String v59 = v58;
                swift_bridgeObjectRelease();
                [v53 setPreferredAction:v59];

                [v75 presentViewController:v53 animated:1 completion:0];
                static Logger.Rename.getter();
                swift_bridgeObjectRetain();
                uint64_t v60 = Logger.logObject.getter();
                os_log_type_t v61 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v60, v61))
                {
                  uint64_t v62 = swift_slowAlloc();
                  id v73 = v53;
                  uint64_t v63 = v62;
                  v85[0] = swift_slowAlloc();
                  *(_DWORD *)uint64_t v63 = 136315394;
                  uint64_t v84 = sub_10009B0E4(0xD000000000000047, 0x8000000100600C70, v85);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  *(_WORD *)(v63 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v84 = sub_10009B0E4(v74, v42, v85);
                  uint64_t v28 = (uint64_t)v83;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s: prompting user with message: %s", (uint8_t *)v63, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  id v53 = v73;
                  swift_slowDealloc();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
                (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v77);
                uint64_t v65 = v81;
                uint64_t v64 = v82;
                id v66 = v79;
                swift_errorRetain();
                sub_100426164(v30, 0, 256, v64, v66, a9);
                swift_errorRelease();
                id v67 = *(void **)(v28 + 16);
                swift_errorRetain();
                id v68 = v67;
                v65(v67, v30);

                sub_100312438(v30, 0, 0, 1);
                swift_errorRelease();

                swift_errorRelease();
                swift_release();
                swift_release();
                return;
              }
              __break(1u);
LABEL_37:
              swift_release_n();
              swift_release_n();
              __break(1u);
              return;
            }
LABEL_34:
            id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_25;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v56 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v56) {
          goto LABEL_20;
        }
      }
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_release_n();
      __break(1u);
      goto LABEL_33;
    }
  }
  sub_1002EEF3C();
  uint64_t v32 = swift_allocError();
  *uint64_t v33 = 4;
  sub_100426164(v32, 0, 256, v82, v79, a9);
  swift_errorRelease();
  id v34 = v83[2];
  uint64_t v35 = swift_allocError();
  *uint64_t v36 = 4;
  uint64_t v83 = (id *)v34;
  v81(v34, v35);
  swift_errorRelease();
  swift_release();
  swift_release();
  uint64_t v37 = v83;
}

uint64_t sub_1005605A4(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_100426164(a1, a2, a3 & 0x1FF, *(void *)(v3 + 16), *(uint64_t (**)(void, void, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1005605C0()
{
  swift_release();

  sub_100312438(*(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));
  sub_1002EF848();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100560634()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  sub_100312438(*(void *)(v0 + 80), *(void *)(v0 + 88), *(unsigned __int8 *)(v0 + 96), *(unsigned char *)(v0 + 97));

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1005606A4(uint64_t a1)
{
  return sub_10055E590(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48), *(void ***)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(unsigned __int8 *)(v1 + 96) | (unsigned __int16)(*(unsigned __int8 *)(v1 + 97) << 8), *(void **)(v1 + 104));
}

uint64_t sub_100560700()
{
  sub_100312438(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(unsigned char *)(v0 + 33));
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100560750(uint64_t a1)
{
  return sub_10055CCA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32) | (*(unsigned __int8 *)(v1 + 33) << 8), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

id sub_1005607A0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor] = 0;
  uint64_t v3 = &v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties];
  uint64_t v4 = type metadata accessor for UIListContentConfiguration.ImageProperties();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer] = 0;
  *(void *)&v1[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem();
  id v5 = a1;
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1005613A8();

  return v6;
}

void sub_1005608C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor;
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor);
  *(void *)(v2 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor) = a1;
  id v11 = a1;
  if (a1)
  {
    if (v5)
    {
      sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
      id v6 = v5;
      id v7 = v11;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
LABEL_9:
        id v11 = v7;
        goto LABEL_10;
      }
    }
LABEL_6:
    id v7 = sub_100561638();
    type metadata accessor for DOCProgressIndicatorView();
    if (swift_dynamicCastClass())
    {
      CGFloat v9 = *(void **)(v2 + v4);
      id v10 = v9;
      sub_100317E18(v9);
    }

    id v6 = v11;
    goto LABEL_9;
  }
  if (v5) {
    goto LABEL_6;
  }
  id v6 = 0;
LABEL_10:
}

id sub_1005609D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UIListContentConfiguration.ImageProperties();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v33 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  char v8 = &v31[-v7];
  uint64_t v9 = sub_1000CBE70(&qword_10070F740);
  __chkstk_darwin(v9 - 8);
  id v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v31[-v13];
  uint64_t v15 = sub_1000CBE70(&qword_10070F748);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = &v31[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v34 = v1;
  uint64_t v19 = (uint64_t)v1 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties;
  swift_beginAccess();
  uint64_t v20 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_1002F94A8(v19, (uint64_t)v18);
  sub_1002F94A8(a1, v20);
  uint64_t v35 = v4;
  id v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v21((uint64_t)v18, 1, v3) == 1)
  {
    if (v21(v20, 1, v3) == 1)
    {
      uint64_t v22 = (uint64_t)v18;
      return (id)sub_1000CBBA4(v22, &qword_10070F740);
    }
  }
  else
  {
    sub_1002F94A8((uint64_t)v18, (uint64_t)v14);
    if (v21(v20, 1, v3) != 1)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v35 + 32))(v8, v20, v3);
      sub_1002F9510();
      int v32 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v23 = *(void (**)(unsigned char *, uint64_t))(v35 + 8);
      v23(v8, v3);
      v23(v14, v3);
      id result = (id)sub_1000CBBA4((uint64_t)v18, &qword_10070F740);
      if (v32) {
        return result;
      }
      goto LABEL_8;
    }
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v14, v3);
  }
  sub_1000CBBA4((uint64_t)v18, &qword_10070F748);
LABEL_8:
  sub_1002F94A8(v19, (uint64_t)v11);
  if (v21((uint64_t)v11, 1, v3) == 1)
  {
    uint64_t v22 = (uint64_t)v11;
    return (id)sub_1000CBBA4(v22, &qword_10070F740);
  }
  uint64_t v25 = v35;
  unint64_t v26 = v33;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v35 + 32))(v33, v11, v3);
  id result = [v34 tintColor];
  if (result)
  {
    char v27 = result;
    Class isa = UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)((UIColor)result).super.isa;

    id v29 = sub_1005616D0();
    [v29 setTintColor:isa];

    id v30 = sub_1005616E4();
    [v30 setTintColor:isa];

    return (id)(*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v26, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100560DE0()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    static Logger.Rename.getter();
    uint64_t v6 = v5;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v22 = v0;
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v21 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      aBlock[0] = v10;
      uint64_t v19 = v9 + 4;
      uint64_t v20 = v9;
      id v11 = *(id *)&v6[OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation];
      id v12 = [v11 description];
      uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v15 = v14;

      uint64_t v23 = sub_10009B0E4(v13, v15, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "ERASE: Formatting operation state changed %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v22);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v6;
    aBlock[4] = (uint64_t)sub_100561AC0;
    aBlock[5] = v16;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1000666D8;
    void aBlock[3] = (uint64_t)&unk_1006B7AD8;
    uint64_t v17 = _Block_copy(aBlock);
    uint64_t v18 = v6;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v17);
  }
}

void sub_100561170(uint64_t a1)
{
  id v2 = sub_1005616F8();
  id v3 = [v2 arrangedSubviews];

  sub_10009E6C4(0, (unint64_t *)&qword_10070A1A0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v6 = 0;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * v6 + 32);
    }
    os_log_type_t v8 = v7;
    ++v6;
    id v9 = sub_1005616F8();
    [v9 removeArrangedSubview:v8];

    [v8 removeFromSuperview];
  }
  while (v5 != v6);
LABEL_10:
  swift_bridgeObjectRelease_n();
  switch(a1)
  {
    case 0:
      id v10 = sub_1005616F8();
      id v11 = sub_100561638();
      goto LABEL_14;
    case 1:
      id v10 = sub_1005616F8();
      id v11 = sub_1005616E4();
      goto LABEL_14;
    case 2:
      return;
    case 3:
      id v10 = sub_1005616F8();
      id v11 = sub_1005616D0();
LABEL_14:
      [v10 addArrangedSubview:v11];

      return;
    default:
      break;
  }
LABEL_18:
  _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
  __break(1u);
  JUMPOUT(0x100561398);
}

void sub_1005613A8()
{
  id v1 = sub_1005616F8();
  [v0 addSubview:v1];

  id v2 = self;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1005A1560;
  id v4 = sub_1005616F8();
  id v5 = [v4 leadingAnchor];

  id v6 = [v0 leadingAnchor];
  id v7 = [v5 constraintEqualToAnchor:v6];

  *(void *)(v3 + 32) = v7;
  id v8 = sub_1005616F8();
  id v9 = [v8 trailingAnchor];

  id v10 = [v0 trailingAnchor];
  id v11 = [v9 constraintEqualToAnchor:v10];

  *(void *)(v3 + 40) = v11;
  id v12 = sub_1005616F8();
  id v13 = [v12 topAnchor];

  id v14 = [v0 topAnchor];
  id v15 = [v13 constraintEqualToAnchor:v14];

  *(void *)(v3 + 48) = v15;
  id v16 = sub_1005616F8();
  id v17 = [v16 bottomAnchor];

  id v18 = [v0 bottomAnchor];
  id v19 = [v17 constraintEqualToAnchor:v18];

  *(void *)(v3 + 56) = v19;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&unk_100706720);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 activateConstraints:isa];
}

id sub_100561638()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for DOCProgressIndicatorView());
    sub_100317F9C(1, 0.5);
    id v7 = v6;
    id v8 = *(void **)(v4 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_preferredIconColor);
    id v9 = v8;
    sub_100317E18(v8);
    id v10 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    id v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1005616D0()
{
  return sub_1002F8E00(&OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView, (SEL *)&selRef_iconForSyncError);
}

id sub_1005616E4()
{
  return sub_1002F8E00(&OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView, (SEL *)&selRef_iconForCompletedSync);
}

id sub_1005616F8()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIStackView) init];
    [v4 setAxis:1];
    [v4 setDistribution:0];
    [v4 setAlignment:3];
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1005617EC()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingStateObserver));

  sub_1000CBBA4(v0 + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_imageProperties, &qword_10070F740);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___progressIndicatorView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___errorImageView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___finishedImageView));
  uint64_t v1 = *(void **)(v0
                + OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem____lazy_storage___mainContainer);
}

id sub_100561894()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem();
  [super dealloc];
}

uint64_t sub_100561980()
{
  return type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem();
}

uint64_t type metadata accessor for DOCRemovableMediaStateSidebarCellAccessoryItem()
{
  uint64_t result = qword_10071C270;
  if (!qword_10071C270) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005619D4()
{
  sub_1002F9450();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100561A88()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100561AC0()
{
  sub_100561170((uint64_t)[*(id *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC5Files46DOCRemovableMediaStateSidebarCellAccessoryItem_formattingOperation) operationState]);
}

uint64_t sub_100561AFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = 1701736302;
  uint64_t v3 = _s23FolderMenuConfigurationVMa(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000CBE70(&qword_10071C7D8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)&v26 - v11;
  sub_1000CBC00(v1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, (uint64_t)&v26 - v11, &qword_10071C7D8);
  id v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v13(v12, 1, v3))
  {
    sub_1000CBBA4((uint64_t)v12, &qword_10071C7D8);
    id v14 = (void *)0xE400000000000000;
    uint64_t v15 = 1701736302;
  }
  else
  {
    sub_100566ECC((uint64_t)v12, (uint64_t)v6);
    sub_1000CBBA4((uint64_t)v12, &qword_10071C7D8);
    uint64_t v15 = sub_100561DE0();
    id v14 = v16;
    sub_100566F30((uint64_t)v6);
  }
  uint64_t v17 = v1 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess();
  sub_1000CBC00(v17, (uint64_t)v10, &qword_10071C7D8);
  if (v13(v10, 1, v3))
  {
    sub_1000CBBA4((uint64_t)v10, &qword_10071C7D8);
    id v18 = (void *)0xE400000000000000;
  }
  else
  {
    sub_100566ECC((uint64_t)v10, (uint64_t)v6);
    sub_1000CBBA4((uint64_t)v10, &qword_10071C7D8);
    uint64_t v2 = sub_100561DE0();
    id v18 = v19;
    sub_100566F30((uint64_t)v6);
  }
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  _StringGuts.grow(_:)(58);
  v20._uint64_t countAndFlagsBits = 0xD000000000000024;
  v20._uint64_t object = (void *)0x8000000100601160;
  String.append(_:)(v20);
  v21._uint64_t countAndFlagsBits = v15;
  v21._uint64_t object = v14;
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._uint64_t object = (void *)0x8000000100601190;
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v22);
  v23._uint64_t countAndFlagsBits = v2;
  v23._uint64_t object = v18;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 32032;
  v24._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  return v27;
}

uint64_t sub_100561DE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s23FolderMenuConfigurationVMa(0);
  uint64_t v3 = *(void **)(v0 + *(int *)(v2 + 28));
  if (v3)
  {
    id v4 = [v3 activityViewControllerProvider];
    if (v4)
    {
      *(void *)(swift_allocObject() + 16) = v4;
      uint64_t v5 = sub_100566DC4;
    }
    else
    {
      uint64_t v5 = 0;
    }
    id v7 = [v3 dragItemsProvider];
    if (v7)
    {
      *(void *)(swift_allocObject() + 16) = v7;
      if (v4)
      {
        v8._uint64_t countAndFlagsBits = 0x6572616873202CLL;
        v8._uint64_t object = (void *)0xE700000000000000;
        String.append(_:)(v8);
      }
      v9._uint64_t countAndFlagsBits = 0x67617264202CLL;
      v9._uint64_t object = (void *)0xE600000000000000;
      String.append(_:)(v9);
      id v6 = sub_100566DBC;
    }
    else
    {
      if (v4)
      {
        v10._uint64_t countAndFlagsBits = 0x6572616873202CLL;
        v10._uint64_t object = (void *)0xE700000000000000;
        String.append(_:)(v10);
      }
      id v6 = 0;
    }
  }
  else
  {
    uint64_t v5 = 0;
    id v6 = 0;
  }
  _StringGuts.grow(_:)(54);
  v11._uint64_t object = (void *)0x8000000100601130;
  v11._uint64_t countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v11);
  id v12 = [*(id *)(v1 + *(int *)(v2 + 20)) displayName];
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;

  v16._uint64_t countAndFlagsBits = v13;
  v16._uint64_t object = v15;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 0x6469766F7270202CLL;
  v17._uint64_t object = (void *)0xEE00203D20737265;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = 1970169197;
  v18._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._uint64_t countAndFlagsBits = 32032;
  v19._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v19);
  sub_1000A7258((uint64_t)v6);
  sub_1000A7258((uint64_t)v5);
  return 0;
}

uint64_t sub_100562058()
{
  uint64_t v1 = sub_1000CBE70(&qword_10071C7D8);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  id v6 = (char *)&v15 - v5;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node);
  _s16TitleMenuContextCMa(0);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectRetain();
  UUID.init()();
  uint64_t v9 = v8 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration;
  Swift::String v10 = (int *)_s23FolderMenuConfigurationVMa(0);
  Swift::String v11 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(*((void *)v10 - 1) + 56);
  v11(v9, 1, 1, v10);
  v11(v8 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, 1, 1, v10);
  *(void *)(v8 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_node) = v7;
  swift_unknownObjectRetain();
  UUID.init()();
  *(void *)&v6[v10[5]] = v7;
  id v12 = (uint64_t (**)())&v6[v10[6]];
  *id v12 = variable initialization expression of DOCTabBarVariableBlurBackgroundView.gradientView;
  v12[1] = 0;
  *(void *)&v6[v10[7]] = 0;
  *(void *)&v6[v10[8]] = 0;
  v11((uint64_t)v6, 0, 1, v10);
  sub_100566DFC((uint64_t)v6, (uint64_t)v4);
  uint64_t v13 = v8 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
  swift_beginAccess();
  sub_100566E64((uint64_t)v4, v13);
  swift_endAccess();
  return v8;
}

uint64_t sub_100562260()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_requestID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_1000CBBA4(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderHierarchyMenuConfiguration, &qword_10071C7D8);
  sub_1000CBBA4(v0 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration, &qword_10071C7D8);

  return swift_deallocClassInstance();
}

uint64_t sub_100562340()
{
  return static UUID.== infix(_:_:)();
}

uint64_t sub_10056235C()
{
  return sub_100561AFC();
}

uint64_t sub_100562380(uint64_t a1, uint64_t a2)
{
  id v2 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1005623F4()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t sub_100562434()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10056243C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100562444()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void sub_10056244C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Rename.getter();
  swift_bridgeObjectRetain_n();
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v21 = a4;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = a3;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v19 = v8;
    *(_DWORD *)uint64_t v15 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_10009B0E4(a1, a2, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "[NavRename]: failed to change name to %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v17 = &Strong[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename];
    *(void *)Swift::String v17 = 0;
    *((void *)v17 + 1) = 0;

    swift_bridgeObjectRelease();
  }
  _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
}

void sub_1005626B0(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x100) != 0)
  {
    sub_10056244C(a6, a7, a4, a5);
  }
  else
  {
    static Logger.Rename.getter();
    swift_bridgeObjectRetain_n();
    Swift::String v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      v19[1] = v18 + 4;
      swift_bridgeObjectRetain();
      void v19[2] = sub_10009B0E4(a6, a7, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "[NavRename]: did commit rename with success: newName = %s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_100562904()
{
  swift_unknownObjectWeakDestroy();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

void sub_10056294C(uint64_t a1, uint64_t a2, unint64_t a3)
{
}

uint64_t sub_10056295C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100565930(a2, a3);
}

void sub_100562968()
{
  DOCItemCollectionViewController.getCurrentLocation()();
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 node];
    if (v3)
    {
      if ([v3 isRootItem])
      {

        swift_unknownObjectRelease();
        return;
      }
      if (*(unsigned char *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode) == 2)
      {
        unsigned __int8 v4 = [*(id *)(v0 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) isPickerUI];
        swift_unknownObjectRelease();
        if ((v4 & 1) == 0) {
          goto LABEL_7;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
      uint64_t v5 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v5;
      *(void *)(v6 + 24) = v2;
      return;
    }
LABEL_7:
  }
}

void sub_100562A84()
{
  uint64_t v1 = v0;
  DOCItemCollectionViewController.getCurrentLocation()();
  if (v2)
  {
    id v3 = v2;
    id v4 = [v2 node];

    if (v4)
    {
      sub_100562968();
      if (v5)
      {
        uint64_t v6 = (uint64_t)v5;
        uint64_t v7 = v5(_swiftEmptyArrayStorage);
        sub_1000A7258(v6);
      }
      else
      {
        uint64_t v7 = 0;
      }
      if (([v4 isRootItem] & 1) == 0
        && (*(unsigned char *)(v1 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_editingMode) != 2
         || [*(id *)(v1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration) isPickerUI]))
      {
        char v8 = 1;
LABEL_12:
        uint64_t v9 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v10 = swift_allocObject();
        *(void *)(v10 + 16) = v9;
        *(unsigned char *)(v10 + 24) = v8;
        *(void *)(v10 + 32) = v4;
        *(void *)(v10 + 40) = v7;
        return;
      }
      if (v7)
      {
        char v8 = 0;
        goto LABEL_12;
      }
      swift_unknownObjectRelease();
    }
  }
}

void sub_100562BEC(unint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  id v60 = a6;
  uint64_t v61 = a7;
  uint64_t v63 = a4;
  uint64_t v10 = type metadata accessor for UTType();
  Class isa = v10[-1].isa;
  Swift::String v59 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1000CBE70(&qword_10071C7D8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  Swift::String v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = _s23FolderMenuConfigurationVMa(0);
  uint64_t v62 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v23 = (void *)Strong;
    uint64_t v56 = v16;
    if (*(void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext))
    {
      unint64_t v55 = (int *)v19;
      unint64_t v57 = a2;
      swift_retain();
      swift_retain();
      a2 = v57;
      char v24 = static UUID.== infix(_:_:)();
      swift_release();
      swift_release();
      if (v24)
      {
        if (a1 >> 62)
        {
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_6:
            if ((a1 & 0xC000000000000001) != 0)
            {
              id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else
            {
              if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_23;
              }
              id v26 = *(id *)(a1 + 32);
            }
            uint64_t v27 = v26;
            swift_bridgeObjectRelease();
            unint64_t v28 = [v27 fileProviderItem];
            if (!v28)
            {

              goto LABEL_14;
            }
            a2 = v28;
            id v53 = v27;
            id v29 = [v23 effectiveAppearance];
            id v54 = v18;
            if (v29)
            {
              id v30 = v29;
              unsigned int v31 = [v29 shouldShowFileExtensions];

              if (v31)
              {
                char v32 = 1;
LABEL_17:
                id v34 = sub_100241DE0(a5);
                id v35 = objc_allocWithZone((Class)_s16FolderMenuHeaderCMa());
                swift_unknownObjectRetain();
                swift_unknownObjectRetain();
                char v36 = v32 & 1;
                uint64_t v37 = sub_100240B10(a5, (uint64_t)v34, v32 & 1);
                uint64_t v38 = swift_allocObject();
                swift_unknownObjectWeakInit();
                id v39 = (uint64_t (*)(uint64_t))swift_allocObject();
                *((void *)v39 + 2) = v38;
                *((void *)v39 + 3) = a2;
                uint64_t v40 = a2;
                unint64_t v41 = v53;
                *((void *)v39 + 4) = v53;
                *((void *)v39 + 5) = v37;
                uint64_t v42 = v61;
                *((void *)v39 + 6) = v60;
                *((void *)v39 + 7) = v42;
                swift_unknownObjectRetain();
                Swift::String v59 = v40;
                id v60 = v41;
                id v43 = v37;
                swift_retain();
                swift_retain();
                UUID.init()();
                id v44 = v55;
                *(void *)&v21[v55[5]] = a5;
                id v45 = (uint64_t (**)(uint64_t))&v21[v44[6]];
                void *v45 = sub_1005670C0;
                v45[1] = v39;
                uint64_t v46 = v44[8];
                *(void *)&v21[v44[7]] = v43;
                id v47 = v43;
                uint64_t v48 = sub_100565770((uint64_t)v23, (uint64_t)a5, v36);

                swift_release();
                swift_unknownObjectRelease();

                *(void *)&v21[v46] = v48;
                uint64_t v49 = (uint64_t)v54;
                sub_100566ECC((uint64_t)v21, (uint64_t)v54);
                (*(void (**)(uint64_t, void, uint64_t, int *))(v62 + 56))(v49, 0, 1, v44);
                uint64_t v50 = (uint64_t)v56;
                sub_100566DFC(v49, (uint64_t)v56);
                uint64_t v51 = v63
                    + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
                swift_beginAccess();
                sub_100566E64(v50, v51);
                swift_endAccess();
                sub_100566F30((uint64_t)v21);
                a2 = v57;
                goto LABEL_14;
              }
            }
            if (qword_1007051D0 == -1)
            {
LABEL_16:
              id v33 = [a5 contentType];
              static UTType._unconditionallyBridgeFromObjectiveC(_:)();

              char v32 = sub_1000A3170();
              (*((void (**)(char *, NSObject *))isa + 1))(v12, v59);
              goto LABEL_17;
            }
LABEL_23:
            swift_once();
            goto LABEL_16;
          }
        }
        else
        {
          uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v25) {
            goto LABEL_6;
          }
        }

        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
  }
LABEL_14:
  dispatch_group_leave(a2);
}

uint64_t sub_1005631B0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (char *)Strong;
    if (objc_msgSend(a3, "doc_isAppContainerRoot")) {
      goto LABEL_13;
    }
    id v39 = a5;
    uint64_t v13 = *(void **)&v12[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager];
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1005A04F0;
    *(void *)(v14 + 32) = a3;
    unint64_t aBlock = v14;
    specialized Array._endMutation()();
    unint64_t v15 = aBlock;
    if (aBlock >> 62)
    {
      id v35 = v13;
      id v36 = a3;
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v37 >= 1)
      {
LABEL_5:
        id v19 = sub_1003D9208();
        id v20 = [v19 filteringPredicate];

        sub_1000CBE70((uint64_t *)&unk_1007141D0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A0030;
        *(void *)(inited + 32) = 0x7365646F4E636F64;
        *(void *)(inited + 40) = 0xE800000000000000;
        *(void *)(inited + 48) = v15;
        swift_bridgeObjectRetain();
        sub_10049342C(inited);
        sub_1000CBE70((uint64_t *)&unk_100707B20);
        uint64_t v40 = a6;
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        LOBYTE(inited) = [v20 evaluateWithObject:isa];

        swift_bridgeObjectRelease();
        a6 = v40;
        if (inited)
        {
          uint64_t v23 = &v12[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_interactionDelegate];
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v24 = *((void *)v23 + 1);
            uint64_t ObjectType = swift_getObjectType();
            id v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 + 8) + 8))(a4, ObjectType);
            swift_unknownObjectRelease();
            if (v26)
            {
              uint64_t v27 = swift_allocObject();
              *(void *)(v27 + 16) = v26;
              id v45 = sub_100117B1C;
              uint64_t v46 = v27;
              unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
              uint64_t v42 = 1107296256;
              id v43 = sub_100559B58;
              id v44 = &unk_1006B7CE8;
              unint64_t v28 = _Block_copy(&aBlock);
              id v29 = v26;
              swift_release();
              [v39 setActivityViewControllerProvider:v28];
              _Block_release(v28);
            }
          }
          uint64_t v30 = swift_allocObject();
          *(void *)(v30 + 16) = a3;
          id v45 = sub_100567108;
          uint64_t v46 = v30;
          unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
          uint64_t v42 = 1107296256;
          id v43 = sub_100563690;
          id v44 = &unk_1006B7C98;
          unsigned int v31 = _Block_copy(&aBlock);
          id v32 = a3;
          swift_release();
          [v39 setDragItemsProvider:v31];
          _Block_release(v31);
          uint64_t v33 = v40(a1);
          goto LABEL_14;
        }
LABEL_13:
        uint64_t v33 = a6(a1);
LABEL_14:
        uint64_t v34 = v33;

        return v34;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v17 = v13;
      id v18 = a3;
      if (v16 >= 1) {
        goto LABEL_5;
      }
    }

    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  return 0;
}

uint64_t sub_1005635BC(uint64_t a1, void *a2)
{
  id v3 = [objc_allocWithZone((Class)NSItemProvider) init];
  NSItemProvider.registerFPItem(_:supportsPickingFolders:disableExternalFolders:disableRealUTI:)(a2, 2u, 0, 0);
  id v4 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v3];
  [v4 setLocalObject:a2];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
  *(void *)(v5 + 32) = v4;
  uint64_t v7 = v5;
  specialized Array._endMutation()();

  return v7;
}

Class sub_100563690(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  swift_unknownObjectRelease();
  sub_10009E6C4(0, (unint64_t *)&unk_10070C600);
  v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v3.super.isa;
}

void sub_10056372C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_pendingTitleMenuContext))
    {
      swift_retain();
      swift_retain();
      char v6 = static UUID.== infix(_:_:)();
      swift_release();
      uint64_t v7 = swift_release();
      if (v6) {
        a3(v7);
      }
    }
  }
}

Class sub_100563800(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v5 = (void *)Strong;
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1005A04F0;
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  char v8 = (void *)swift_allocObject();
  _OWORD v8[2] = v7;
  v8[3] = a3;
  aBlock[4]._rawValue = sub_100567180;
  aBlock[5]._rawValue = v8;
  aBlock[0]._rawValue = _NSConcreteStackBlock;
  aBlock[1]._rawValue = (void *)1107296256;
  aBlock[2]._rawValue = sub_100514064;
  aBlock[3]._rawValue = &unk_1006B7D88;
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = self;
  swift_retain();
  id v11 = a3;
  id v12 = [v10 elementWithProvider:v9];
  _Block_release(v9);
  swift_release();
  swift_release();
  *(void *)(v6 + 32) = v12;
  aBlock[0]._rawValue = (void *)v6;
  specialized Array._endMutation()();
  v13._uint64_t countAndFlagsBits = 0;
  v13._uint64_t object = (void *)0xE000000000000000;
  v17.value.super.Class isa = 0;
  v17.is_nil = 0;
  v14.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v13, (Swift::String_optional)0, v17, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock[0]._rawValue, aBlock[0]).super.super.isa;

  return v14.super.super.isa;
}

uint64_t sub_1005639F8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = (void (*)(uint64_t))type metadata accessor for DispatchTime();
  uint64_t v44 = *((void *)v7 - 1);
  id v45 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (char *)v42 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  UIImage_optional v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)v42 - v18;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v21 = (void *)Strong;
    uint64_t v22 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v23 = (void *)swift_allocObject();
    id v43 = v21;
    uint64_t v24 = v23;
    long long v23[2] = v22;
    v23[3] = a1;
    void v23[4] = a2;
    swift_retain_n();
    swift_retain_n();
    id v25 = [a4 node];
    if (v25)
    {
      id v26 = v25;
      uint64_t v27 = dispatch_group_create();
      dispatch_group_enter(v27);
      unint64_t v28 = (void *)swift_allocObject();
      _DWORD v28[2] = sub_1005671A0;
      v28[3] = v24;
      v28[4] = v27;
      id v29 = (void *)swift_allocObject();
      v29[2] = v26;
      v29[3] = sub_1005671EC;
      v29[4] = v28;
      aBlock[4] = sub_100567290;
      aBlock[5] = v29;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1004EEC24;
      void aBlock[3] = &unk_1006B7E28;
      uint64_t v30 = _Block_copy(aBlock);
      v42[1] = a2;
      unsigned int v31 = v30;
      swift_retain();
      id v32 = v27;
      swift_retain();
      swift_unknownObjectRetain();
      swift_release();
      [v26 fetchParents:v31];
      _Block_release(v31);
      static DispatchTime.now()();
      + infix(_:_:)();
      uint64_t v33 = v45;
      uint64_t v34 = *(void (**)(char *, void (*)(uint64_t)))(v44 + 8);
      v34(v10, v45);
      OS_dispatch_group.wait(timeout:)();

      swift_unknownObjectRelease();
      swift_release();
      v34(v12, v33);
    }
    else
    {
      id v45 = a1;
      static Logger.UI.getter();
      id v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v39, v40))
      {
        unint64_t v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v41 = 0;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot load parents: referenceLocation has no fileProviderItem", v41, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
      sub_100563F38(0, v22, v45);
    }
    swift_release();
    swift_release_n();
    return swift_release();
  }
  else
  {
    static Logger.UI.getter();
    id v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "[LocationHierarchyMenu] skipping fetch: weak self is null", v37, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    return ((uint64_t (*)(void *))a1)(_swiftEmptyArrayStorage);
  }
}

void sub_100563F38(unint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  id v12 = (char *)&v44 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v44 - v14;
  __chkstk_darwin(v13);
  UIImage_optional v17 = (char *)&v44 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v19 = (void *)Strong;
    if (a1)
    {
      if (*(void *)(Strong + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_documentManager))
      {
        id v20 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v20)
        {
          uint64_t v21 = v20;
          id v22 = [v20 sourceObserver];
          if (v22)
          {
            uint64_t v23 = v22;
            id v24 = [v21 hierarchyController];
            id v25 = v23;
            id v26 = v24;
            unint64_t v27 = (unint64_t)sub_1005653F8(a1, v25, v26);
            id v45 = v25;

            id v44 = v26;
            unint64_t v28 = (void *)static DOCLog.UI.getter();
            static os_log_type_t.info.getter();
            sub_1000CBE70((uint64_t *)&unk_100708800);
            uint64_t v29 = swift_allocObject();
            *(_OWORD *)(v29 + 16) = xmmword_1005A0030;
            if (a1 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            *(void *)(v29 + 56) = &type metadata for Int;
            *(void *)(v29 + 64) = &protocol witness table for Int;
            *(void *)(v29 + 32) = v30;
            os_log(_:dso:log:type:_:)();

            swift_bridgeObjectRelease();
            if (v27 >> 62)
            {
              sub_10009E6C4(0, (unint64_t *)&qword_100708610);
              swift_bridgeObjectRetain();
              uint64_t v31 = _bridgeCocoaArray<A>(_:)();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRetain();
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
              sub_10009E6C4(0, (unint64_t *)&qword_100708610);
              uint64_t v31 = v27;
            }
            swift_bridgeObjectRelease();
            a3(v31);

            swift_bridgeObjectRelease();
          }
          else
          {
            static Logger.UI.getter();
            unint64_t v41 = Logger.logObject.getter();
            os_log_type_t v42 = static os_log_type_t.info.getter();
            if (os_log_type_enabled(v41, v42))
            {
              id v43 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)id v43 = 0;
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "[LocationHierarchyMenu] loadDeferred failed to locate sourceObserver", v43, 2u);
              swift_slowDealloc();
            }

            (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
            a3((uint64_t)_swiftEmptyArrayStorage);
          }
          return;
        }
      }
      static Logger.UI.getter();
      id v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v37 = 0;
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "[LocationHierarchyMenu] loadDeferred failed to locate browser", v37, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    }
    else
    {
      static Logger.UI.getter();
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "[LocationHierarchyMenu] loadDeferred failed to fetch any parentLocations", v40, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    }
    a3((uint64_t)_swiftEmptyArrayStorage);

    return;
  }
  static Logger.UI.getter();
  id v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "[LocationHierarchyMenu] bailing after fetch: weak self is null", v34, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v17, v5);
  a3((uint64_t)_swiftEmptyArrayStorage);
}

uint64_t sub_10056452C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = sub_100225C60();
  char v5 = sub_1000BB74C((uint64_t)a3, (unint64_t)v4);
  swift_bridgeObjectRelease();
  if (v5) {
    return sub_10022AEE8(a3, 1, 0, 0);
  }
  else {
    return sub_1000BCD84(a3, a3, 1, 1, 0, 0, 0);
  }
}

Class sub_1005645B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v10 = (char *)Strong;
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v11._uint64_t countAndFlagsBits = 0;
  v11._uint64_t object = (void *)0xE000000000000000;
  v31.value.super.Class isa = 0;
  v31.is_nil = 0;
  v12.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v11, (Swift::String_optional)0, v31, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v29).super.super.isa;
  if (a3)
  {
    type metadata accessor for DOCSystemMenuItemCollection();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    uint64_t v14 = *(void **)&v10[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
    swift_bridgeObjectRetain();
    id v15 = v14;
    swift_retain();
    uint64_t v16 = sub_10018D7A4(a4, (uint64_t (*)(void))sub_100567168, inited);
    swift_release_n();

    v12.super.super.Class isa = v16;
  }
  if (a5)
  {
    id v17 = a5;
    id v18 = [v17 children];
    sub_10009E6C4(0, (unint64_t *)&qword_100708610);
    UIMenuElementSize preferredElementSize = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v20._uint64_t countAndFlagsBits = 0;
    v20._uint64_t object = (void *)0xE000000000000000;
    v32.value.super.Class isa = 0;
    v32.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v20, (Swift::String_optional)0, v32, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)v30.super.super.isa).super.super.isa;
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A04F0;
    *(void *)(v22 + 32) = isa;
    specialized Array._endMutation()();
    uint64_t v23 = isa;
    id v24 = [(objc_class *)v12.super.super.isa children];
    unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_1001698A4(v25);
    Class v26 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unint64_t v27 = (objc_class *)[(objc_class *)v12.super.super.isa menuByReplacingChildren:v26];

    v12.super.super.Class isa = v27;
  }

  return v12.super.super.isa;
}

void *sub_100564864(void *a1)
{
  id v2 = [a1 identifier];
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    return sub_100564A4C();
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8) {
    return sub_100564A4C();
  }
  id v9 = [a1 identifier];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  if (v10 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0) {
      goto LABEL_16;
    }
  }
  [a1 setState:1];
LABEL_16:
  id v17 = a1;
  return a1;
}

uint64_t DOCItemCollectionViewController.navigationItem(_:willBeginRenamingWith:selectedRange:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10056611C(a2, a3);
}

Swift::Void __swiftcall DOCItemCollectionViewController.navigationItem(_:didEndRenamingWith:)(UINavigationItem _, Swift::String didEndRenamingWith)
{
}

void *sub_100564A4C()
{
  unint64_t v0 = (unint64_t)sub_100564B58();
  unint64_t v1 = v0;
  if (v0 >> 62) {
    goto LABEL_14;
  }
  uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      [v4 action];
      if (static Selector.== infix(_:_:)())
      {
        swift_bridgeObjectRelease_n();
        return v5;
      }

      ++v3;
      if (v6 == v2) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  return 0;
}

void *sub_100564B58()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)result;
    if (!result) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain_n();
    if (!v2) {
      goto LABEL_14;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v1 + 8 * i + 32);
    }
    uint64_t v7 = v8;
    self;
    id v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      id v5 = [v9 children];
      sub_10009E6C4(0, (unint64_t *)&qword_100708610);
      uint64_t v6 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v7 = v5;
    }
    else
    {
      uint64_t v6 = _swiftEmptyArrayStorage;
    }

    sub_1001698A4((unint64_t)v6);
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  sub_1001698A4((unint64_t)_swiftEmptyArrayStorage);
  if (!(v1 >> 62))
  {
    uint64_t v10 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_16;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = (uint64_t)result;
  if (!result) {
    goto LABEL_29;
  }
LABEL_16:
  if (v10 >= 1)
  {
    for (uint64_t j = 0; j != v10; ++j)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v1 + 8 * j + 32);
      }
      uint64_t v13 = v12;
      self;
      if (swift_dynamicCastObjCClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_29;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_100564E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a3;
  void v10[4] = a2;
  v10[5] = a4;
  void v10[6] = a5;
  uint64_t v12[4] = sub_1005672EC;
  _OWORD v12[5] = v10;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_1000666D8;
  void v12[3] = &unk_1006B7E78;
  uint64_t v11 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_errorRetain();
  swift_retain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);
}

uint64_t sub_100564F48(unint64_t a1, id a2, uint64_t a3, uint64_t i, void (*a5)(void))
{
  if (!a1)
  {
    char v15 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.error.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_10059B760;
    swift_unknownObjectRetain();
    sub_1000CBE70((uint64_t *)&unk_100706730);
    uint64_t v17 = String.init<A>(describing:)();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v20 = sub_100073F48();
    *(void *)(v16 + 64) = v20;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076E0);
    uint64_t v21 = String.init<A>(describing:)();
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v20;
    *(void *)(v16 + 72) = v21;
    *(void *)(v16 + 80) = v22;
    os_log(_:dso:log:type:_:)();

    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void))i)(0);
  }
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62) {
    goto LABEL_41;
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_4:
  uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v34 = a5;
  if (v10)
  {
    unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    if (v10 < 0)
    {
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v12 = i;
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = 0;
      do
      {
        uint64_t v14 = v13 + 1;
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_getObjectType();
        DOCNode.representedLocation.getter();
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        uint64_t v13 = v14;
      }
      while (v10 != v14);
    }
    else
    {
      unint64_t v24 = a1 + 32;
      do
      {
        v24 += 8;
        swift_getObjectType();
        swift_unknownObjectRetain();
        DOCNode.representedLocation.getter();
        swift_unknownObjectRelease();
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        --v10;
      }
      while (v10);
    }
    uint64_t i = v12;
    uint64_t v11 = (uint64_t)_swiftEmptyArrayStorage;
  }
  if ((objc_msgSend(a2, "isTrashed", v34) & 1) == 0)
  {
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      if (v25) {
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v25)
      {
LABEL_17:
        a5 = (void (*)(void))i;
        unint64_t v9 = a1 & 0xC000000000000001;
        for (uint64_t i = 4; ; ++i)
        {
          uint64_t v26 = i - 4;
          if (v9)
          {
            a2 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            uint64_t v27 = i - 3;
            if (__OFADD__(v26, 1)) {
              goto LABEL_40;
            }
          }
          else
          {
            a2 = *(id *)(a1 + 8 * i);
            swift_unknownObjectRetain();
            uint64_t v27 = i - 3;
            if (__OFADD__(v26, 1))
            {
LABEL_40:
              __break(1u);
LABEL_41:
              swift_bridgeObjectRetain();
              uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              goto LABEL_4;
            }
          }
          unsigned int v28 = [a2 isTrashed];
          swift_unknownObjectRelease();
          if (v28)
          {
            swift_bridgeObjectRelease();
            uint64_t i = (uint64_t)a5;
            goto LABEL_29;
          }
          if (v27 == v25)
          {
            swift_bridgeObjectRelease();
            a5(_swiftEmptyArrayStorage);
            return swift_bridgeObjectRelease();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
LABEL_29:
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_31;
    }
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (!*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_44;
  }
LABEL_31:
  unint64_t v35 = (unint64_t)_swiftEmptyArrayStorage;
  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
    || ((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
    || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
    uint64_t v11 = sub_1000BC324(_swiftEmptyArrayStorage);
    unint64_t v35 = v11;
  }
  uint64_t v29 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v29) {
    goto LABEL_45;
  }
  uint64_t v30 = v29 - 1;
  UIImage_optional v31 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 8 * v30 + 0x20);
  *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v30;
  specialized Array._endMutation()();

  id v32 = [self trashedItemsLocation];
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_46:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v11 = v35;
LABEL_38:
  ((void (*)(uint64_t))i)(v11);
  return swift_bridgeObjectRelease();
}

void *sub_1005653F8(unint64_t a1, void *a2, void *a3)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v25 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      unint64_t v23 = v3;
      while (1)
      {
        if (v25) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5);
        }
        uint64_t v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_23;
        }
        id v9 = [v6 sourceIdentifier];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v11 = [a2 sourceForIdentifier:v10];

        if (v11) {
          break;
        }

LABEL_5:
        ++v5;
        if (v8 == v4) {
          goto LABEL_24;
        }
      }
      id v12 = v7;
      id v13 = v11;
      id v14 = [v12 representedTag];
      if (!v14)
      {
        if ([v12 isRoot])
        {
          id v15 = [v12 sourceIdentifier];
          id v16 = [v13 displayName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          goto LABEL_17;
        }
        id v14 = [v12 fileProviderItem];
      }

      id v17 = [v12 displayName];
      if (!v17)
      {
LABEL_18:
        sub_1002CA514(v12, (uint64_t)v13);
        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = a3;
        *(void *)(v18 + 24) = v12;
        id v19 = v12;
        id v20 = a3;
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v4 = v22;
        unint64_t v3 = v23;
        uint64_t v8 = v5 - 3;
        goto LABEL_5;
      }
      id v16 = v17;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_17:

      goto LABEL_18;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100565770(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_actionManager);
  id v6 = (void *)FPActionRename;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = a2;
  unint64_t v11 = inited;
  specialized Array._endMutation()();
  id v8 = v5;
  swift_unknownObjectRetain();
  LOBYTE(v6) = sub_1000301E0(v6, v11);
  swift_bridgeObjectRelease();
  if (v6)
  {
    type metadata accessor for DOCNavigationItemRenameHandler();
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_unknownObjectWeakAssign();
    *(void *)(v9 + 24) = v8;
    *(void *)(v9 + 32) = a2;
    *(unsigned char *)(v9 + 40) = a3 & 1;
    swift_unknownObjectRetain();
  }
  else
  {

    return 0;
  }
  return v9;
}

uint64_t sub_100565884()
{
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)FPActionRename;
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
  *(void *)(inited + 32) = v1;
  unint64_t v7 = inited;
  specialized Array._endMutation()();
  swift_unknownObjectRetain_n();
  id v5 = v2;
  LOBYTE(v3) = sub_1000301E0(v3, v7);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return v3 & 1;
}

uint64_t sub_100565930(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    unint64_t v7 = (void *)(Strong + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_existingOverlayTitleBeforeRename);
    *unint64_t v7 = a1;
    v7[1] = a2;
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
  }
  swift_getObjectType();
  char v8 = *(unsigned char *)(v2 + 40);
  swift_unknownObjectRetain();
  uint64_t countAndFlagsBits = DOCNode.displayName(withHiddenPathExtension:)((v8 & 1) == 0)._countAndFlagsBits;
  swift_unknownObjectRelease();
  return countAndFlagsBits;
}

void sub_100565A18(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v35 = Strong;
    if (String.count.getter() < 1)
    {
      sub_10056244C(0xD000000000000010, 0x8000000100601110, v3, (uint64_t)v35);
      id v14 = v35;
    }
    else
    {
      uint64_t v34 = a1;
      static Logger.Rename.getter();
      swift_bridgeObjectRetain_n();
      unint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v11, v12))
      {
        id v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v33 = v3;
        *(_DWORD *)id v13 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_10009B0E4(v34, a2, &v37);
        uint64_t v3 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[NavRename]: will change name to %s", v13, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      type metadata accessor for RenameControllerDelegate();
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_unknownObjectWeakInit();
      *(unsigned char *)(v15 + 32) = 0;
      swift_unknownObjectWeakAssign();
      id v16 = objc_allocWithZone((Class)type metadata accessor for DOCItemCollectionGridCell());
      id v17 = sub_1000882AC(0, 0.0, 0.0, 0.0, 0.0);
      uint64_t v18 = *(void *)(v3 + 32);
      type metadata accessor for DOCInlineRenameController();
      uint64_t v19 = swift_allocObject();
      swift_getObjectType();
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v20 = sub_100427710(v15, (uint64_t)v17, v18, v19);
      swift_release();
      swift_unknownObjectRelease();
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v21 = (void *)DOCNode.fpfs_syncFetchFPItem()();
      swift_unknownObjectRelease();
      if (v21)
      {
        uint64_t v22 = self;
        unint64_t v23 = *(void **)&v35[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_configuration];
        id v24 = v21;
        id v25 = [v23 sceneIdentifier];
        id v26 = [v22 globalTabbedBrowserControllerForIdentifier:v25];

        if (v26)
        {
          id v27 = [v26 effectiveFullBrowser];

          id v26 = (id)sub_1004B8B18();
        }
        uint64_t v28 = v34;
        *(void *)(v20 + 144) = v26;
        swift_release();
        char v29 = *(unsigned char *)(v3 + 40);
        uint64_t v30 = (void *)swift_allocObject();
        void v30[2] = v3;
        v30[3] = v35;
        v30[4] = v28;
        v30[5] = a2;
        v30[6] = v15;
        v30[7] = v20;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        UIImage_optional v31 = v35;
        swift_retain();
        sub_100425ED0(v24, v28, a2, v29, (void (*)(void))sub_100566D50, (uint64_t)v30, (void (*)(id, uint64_t))DOCSplitBrowserViewController.didCommitPreview(of:), 0);

        swift_release();
        swift_release();
      }
      else
      {
        sub_10056244C(v34, a2, v3, (uint64_t)v35);

        swift_release();
      }
      swift_release();
    }
  }
}

uint64_t _s5Files31DOCItemCollectionViewControllerC33navigationItemShouldBeginRenamingySbSo012UINavigationG0CF_0()
{
  uint64_t v1 = sub_1000CBE70(&qword_10071C7D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v4)
  {
    uint64_t v5 = v4 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess();
    sub_1000CBC00(v5, (uint64_t)v3, &qword_10071C7D8);
    uint64_t v6 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6))
    {
      sub_1000CBBA4((uint64_t)v3, &qword_10071C7D8);
    }
    else
    {
      uint64_t v9 = *(void *)&v3[*(int *)(v6 + 32)];
      swift_retain();
      sub_1000CBBA4((uint64_t)v3, &qword_10071C7D8);
      if (v9)
      {
        unint64_t v11 = *(void **)(v9 + 24);
        uint64_t v10 = *(void *)(v9 + 32);
        os_log_type_t v12 = (void *)FPActionRename;
        sub_1000CBE70((uint64_t *)&unk_1007084E0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1005A04F0;
        *(void *)(inited + 32) = v10;
        unint64_t v17 = inited;
        specialized Array._endMutation()();
        unint64_t v14 = v17;
        swift_unknownObjectRetain_n();
        id v15 = v11;
        char v7 = sub_1000301E0(v12, v14);
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();

        return v7 & 1;
      }
    }
  }
  char v7 = 0;
  return v7 & 1;
}

uint64_t sub_10056611C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1000CBE70(&qword_10070F5B8);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1000CBE70(&qword_10071C7D8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v11)
  {
    uint64_t v12 = v11
        + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess();
    sub_1000CBC00(v12, (uint64_t)v10, &qword_10071C7D8);
    uint64_t v13 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13))
    {
      sub_1000CBBA4((uint64_t)v10, &qword_10071C7D8);
    }
    else
    {
      uint64_t v19 = *(void *)&v10[*(int *)(v13 + 32)];
      swift_retain();
      sub_1000CBBA4((uint64_t)v10, &qword_10071C7D8);
      if (v19)
      {
        uint64_t v18 = sub_100565930(a1, a2);
        swift_release();
        return v18;
      }
    }
  }
  v20[3] = 0;
  v20[4] = 0xE000000000000000;
  v20[1] = 0;
  _OWORD v20[2] = 0xE000000000000000;
  uint64_t v14 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v7, 1, 1, v14);
  sub_10009D28C();
  StringProtocol.range<A>(of:options:range:locale:)();
  char v16 = v15;
  sub_1000CBBA4((uint64_t)v7, &qword_10070F5B8);
  uint64_t result = swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return 0;
  }
  __break(1u);
  return result;
}

void sub_100566398(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_1000CBE70(&qword_10071C7D8);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_titleMenuContext);
  if (v8)
  {
    uint64_t v9 = v8 + OBJC_IVAR____TtCC5Files31DOCItemCollectionViewController16TitleMenuContext_folderActionsMenuConfiguration;
    swift_beginAccess();
    sub_1000CBC00(v9, (uint64_t)v7, &qword_10071C7D8);
    uint64_t v10 = _s23FolderMenuConfigurationVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v7, 1, v10))
    {
      sub_1000CBBA4((uint64_t)v7, &qword_10071C7D8);
    }
    else
    {
      uint64_t v11 = *(void *)&v7[*(int *)(v10 + 32)];
      swift_retain();
      sub_1000CBBA4((uint64_t)v7, &qword_10071C7D8);
      if (v11)
      {
        sub_100565A18(a1, a2);
        swift_release();
      }
    }
  }
}

uint64_t sub_1005664F8()
{
  return _s16TitleMenuContextCMa(0);
}

uint64_t _s16TitleMenuContextCMa(uint64_t a1)
{
  return sub_10009E984(a1, (uint64_t *)&unk_10071C2B8);
}

void sub_100566520()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1005665F4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1005665F4()
{
  if (!qword_10071C2C8)
  {
    _s23FolderMenuConfigurationVMa(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10071C2C8);
    }
  }
}

uint64_t type metadata accessor for RenameControllerDelegate()
{
  return self;
}

uint64_t type metadata accessor for DOCNavigationItemRenameHandler()
{
  return self;
}

uint64_t type metadata accessor for DOCSystemMenuItemCollection()
{
  return self;
}

uint64_t type metadata accessor for DOCNavigationTitleBehavior()
{
  return self;
}

uint64_t *sub_1005666DC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)v4 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)v4 + v12) = (uint64_t)v14;
    *(uint64_t *)((char *)v4 + v13) = *(uint64_t *)((char *)a2 + v13);
    swift_unknownObjectRetain();
    swift_retain();
    id v15 = v14;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1005667E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_10056687C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_unknownObjectRetain();
  swift_retain();
  id v14 = v13;
  swift_retain();
  return a1;
}

uint64_t sub_10056693C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[7];
  uint64_t v12 = *(void **)(a1 + v11);
  uint64_t v13 = *(void **)(a2 + v11);
  *(void *)(a1 + v11) = v13;
  id v14 = v13;

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100566A20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_100566AB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  swift_release();
  uint64_t v7 = a3[7];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_100566B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100566C3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100566CF8()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100566D50(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_1005626B0(a1, a2, a3 & 0x1FF, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_100566D84()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100566DBC(uint64_t a1)
{
  return sub_100562380(a1, *(void *)(v1 + 16));
}

id sub_100566DC4()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

uint64_t sub_100566DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071C7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100566E64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70(&qword_10071C7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100566ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s23FolderMenuConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100566F30(uint64_t a1)
{
  uint64_t v2 = _s23FolderMenuConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100566F8C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100566FC4()
{
  return sub_10002646C();
}

uint64_t sub_100566FCC()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_100567014()
{
  sub_10056372C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t sub_100567020(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100567068()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_1005670C0(uint64_t a1)
{
  return sub_1005631B0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(uint64_t (**)(void))(v1 + 48));
}

uint64_t sub_1005670D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100567108(uint64_t a1)
{
  return sub_1005635BC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100567110()
{
  swift_release();
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

Class sub_100567158(uint64_t a1)
{
  return sub_1005645B4(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void *sub_100567168(void *a1)
{
  return sub_100564864(a1);
}

Class sub_100567174(uint64_t a1)
{
  return sub_100563800(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100567180(void (*a1)(uint64_t), uint64_t a2)
{
  return sub_1005639F8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_100567188()
{
  return sub_100567248((void (*)(void))&_swift_release);
}

void sub_1005671A0(unint64_t a1)
{
  sub_100563F38(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_1005671AC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005671EC()
{
  uint64_t v1 = *(NSObject **)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();

  dispatch_group_leave(v1);
}

uint64_t sub_100567230()
{
  return sub_100567248((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100567248(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return _swift_deallocObject(v1, 40, 7);
}

void sub_100567290(uint64_t a1, uint64_t a2)
{
  sub_100564E40(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_10056729C()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005672EC()
{
  return sub_100564F48(*(void *)(v0 + 16), *(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48));
}

uint64_t sub_1005672FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10056733C(uint64_t a1)
{
  return sub_10056452C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

BOOL DOCButton.invalidateIntrinsicSizeWhenContentSizeCategoryChanges.getter()
{
  if (qword_100705338 != -1) {
    swift_once();
  }
  return (byte_10071C7E8 & 1) == 0;
}

BOOL UITraitCollection.preferredNavigationBarStyle.getter()
{
  return DOCUsePadIdiomForTraits() && [v0 horizontalSizeClass] == (id)2;
}

uint64_t sub_100567408()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors;
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors);
  }
  else
  {
    type metadata accessor for DOCOffsetAdjustmentBehaviors();
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100567494()
{
  uint64_t v0 = sub_100567408();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
    return;
  }
  *(void *)(v0 + 24) = v2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2 < 1)
  {
    if (Strong)
    {
      id v4 = Strong;
      [Strong _setAutomaticContentOffsetAdjustmentEnabled:1];
      goto LABEL_7;
    }
  }
  else if (Strong)
  {
    id v4 = Strong;
    [Strong _setAutomaticContentOffsetAdjustmentEnabled:0];
LABEL_7:
    swift_release();

    return;
  }

  swift_release();
}

void sub_100567554()
{
  uint64_t v0 = sub_100567408();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = v1 - 1;
  if (__OFSUB__(v1, 1))
  {
    __break(1u);
    return;
  }
  *(void *)(v0 + 24) = v2;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (v2 < 1)
  {
    if (Strong)
    {
      id v4 = Strong;
      [Strong _setAutomaticContentOffsetAdjustmentEnabled:1];
      goto LABEL_7;
    }
  }
  else if (Strong)
  {
    id v4 = Strong;
    [Strong _setAutomaticContentOffsetAdjustmentEnabled:0];
LABEL_7:
    swift_release();

    return;
  }

  swift_release();
}

id sub_100567614(id result)
{
  uint64_t v2 = OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled;
  int v3 = v1[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled];
  v1[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled] = (_BYTE)result;
  if (v3 != (result & 1))
  {
    id v4 = [v1 isUserInteractionEnabled];
    int v5 = &v1[v2];
    uint64_t v6 = v1[v2];
    uint64_t v7 = OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override;
    v1[OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override] = 2;
    [v1 setUserInteractionEnabled:v6 ^ 1];
    [v1 setUserInteractionEnabled:v6];
    v1[v7] = (*v5 & 1) == 0;
    return [v1 setUserInteractionEnabled:v4];
  }
  return result;
}

id DOCViewController.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCViewController);
}

void DOCCollectionViewController.init(nibName:bundle:)()
{
}

id DOCCollectionViewController.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCCollectionViewController);
}

id DOCCollectionView.contentSize.getter()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCCollectionView();
  return [super contentSize];
}

id DOCCollectionView.contentSize.setter(double a1, double a2)
{
  uint64_t v5 = *(void *)(sub_100567408() + 24);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = Strong;
  if (v5 < 1)
  {
    if (Strong)
    {
      [Strong _setAutomaticContentOffsetAdjustmentEnabled:1];
      goto LABEL_6;
    }
LABEL_7:
    swift_release();
    goto LABEL_8;
  }
  if (!Strong) {
    goto LABEL_7;
  }
  [Strong _setAutomaticContentOffsetAdjustmentEnabled:0];
LABEL_6:
  swift_release();

LABEL_8:
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DOCCollectionView();
  return [super setContentSize:a1, a2];
}

id DOCCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors] = 0;
  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for DOCCollectionView();
  id v11 = [super initWithFrame:a1 collectionViewLayout:a2];

  return v11;
}

id DOCCollectionView.init(coder:)(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC5Files17DOCCollectionView____lazy_storage___offsetAdjustmentBehaviors] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for DOCCollectionView();
  id v3 = [super initWithCoder:a1];

  return v3;
}

id DOCCollectionView.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCCollectionView);
}

id sub_100567C94(void *a1)
{
  type metadata accessor for DOCNavigationBar();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for DOCNavigationController();
  id v4 = [super initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:0];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1005A04F0;
  *(void *)(v5 + 32) = a1;
  specialized Array._endMutation()();
  sub_10009E6C4(0, (unint64_t *)&qword_100707710);
  id v6 = v4;
  id v7 = a1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setViewControllers:isa];

  return v6;
}

id DOCNavigationController.__allocating_init(navigationBarClass:toolbarClass:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2;
  if (a1)
  {
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if (!v3) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t ObjCClassFromMetadata = 0;
  if (a2) {
LABEL_3:
  }
    uint64_t v3 = swift_getObjCClassFromMetadata();
LABEL_4:
  id v5 = objc_allocWithZone(v2);

  return [v5 initWithNavigationBarClass:ObjCClassFromMetadata toolbarClass:v3];
}

void DOCNavigationController.init(navigationBarClass:toolbarClass:)()
{
}

id DOCNavigationController.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCNavigationController);
}

Files::DOCNavigationBar::Style_optional __swiftcall DOCNavigationBar.Style.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    v1.value = Files_DOCNavigationBar_Style_desktopStyle;
  }
  else {
    v1.value = Files_DOCNavigationBar_Style_unknownDefault;
  }
  if (rawValue) {
    return v1;
  }
  else {
    return 0;
  }
}

uint64_t DOCNavigationBar.Style.rawValue.getter(char a1)
{
  return a1 & 1;
}

id sub_100567F0C()
{
  return sub_1005688A8(type metadata accessor for DOCNavigationBarStyle);
}

double DOCNavigationBar.titlePositionAdjustment.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment;
  swift_beginAccess();
  return *(double *)v1;
}

void DOCNavigationBar.titlePositionAdjustment.setter(double a1)
{
  uint64_t v3 = (double *)&v1[OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment];
  swift_beginAccess();
  *uint64_t v3 = a1;
  id v4 = [v1 standardAppearance];
  [v4 setTitlePositionAdjustment:*v3];
}

void (*DOCNavigationBar.titlePositionAdjustment.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files16DOCNavigationBar_titlePositionAdjustment;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_100568198;
}

void sub_100568198(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (char *)v3[3];
    uint64_t v5 = v3[4];
    id v6 = [v4 standardAppearance];
    [v6 setTitlePositionAdjustment:*(double *)&v4[v5] forBarMetrics:0];
  }

  free(v3);
}

Swift::Void __swiftcall DOCNavigationBar.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCNavigationBar();
  [super layoutSubviews];
  id v1 = [v0 doc_nearestAncestorViewController];
  [v1 doc_updateBarButtonTrackingViewsIfNecessary];
}

uint64_t DOCNavigationBar.chromelessAppearanceDisabled.getter()
{
  id v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess();
  return *v1;
}

void DOCNavigationBar.chromelessAppearanceDisabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled);
  swift_beginAccess();
  id v4 = 0;
  *uint64_t v3 = a1;
  if (a1) {
    id v4 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
  }
  sub_100064AD8(v4);
}

void (*DOCNavigationBar.chromelessAppearanceDisabled.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC5Files16DOCNavigationBar_chromelessAppearanceDisabled;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1005683B0;
}

void sub_1005683B0(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(v3[3] + v3[4]) == 1) {
      id v4 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    }
    else {
      id v4 = 0;
    }
    sub_100064AD8(v4);
  }

  free(v3);
}

id DOCNavigationBar.scrollEdgeAppearance.getter()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC5Files16DOCNavigationBar_overrideScrollEdgeAppearance];
  id v2 = v1;
  if (!v1)
  {
    v5.receiver = v0;
    v5.super_class = (Class)type metadata accessor for DOCNavigationBar();
    [super scrollEdgeAppearance];
  }
  id v3 = v1;
  return v2;
}

void DOCNavigationBar.scrollEdgeAppearance.setter(void *a1)
{
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DOCNavigationBar();
  [super setScrollEdgeAppearance:a1];
}

id DOCNavigationBar.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCNavigationBar);
}

id DOCView.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCView);
}

id DOCStackView.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCStackView);
}

id sub_10056866C()
{
  return sub_1005688A8(type metadata accessor for DOCTableView);
}

id sub_10056870C(double a1, double a2, double a3, double a4)
{
  swift_getObjectType();
  v4[OBJC_IVAR____TtC5Files9DOCButton_hoverEffectsAllowedIfInteractionDisabled] = 0;
  v4[OBJC_IVAR____TtC5Files9DOCButton__userInteractionStateDeterminesLayerHitTestState_override] = 2;
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for DOCButton();
  [super initWithFrame:a1, a2, a3, a4];
  uint64_t v10 = qword_100705338;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  if ((byte_10071C7E8 & 1) == 0)
  {
    sub_1000CBE70((uint64_t *)&unk_100708760);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1005A0030;
    *(void *)(v12 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v12 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    id v13 = v11;
    UIView.registerForTraitChanges<A>(_:handler:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v11;
}

id DOCButton.__deallocating_deinit()
{
  return sub_1005688A8(type metadata accessor for DOCButton);
}

id sub_1005688A8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

void sub_1005688E0()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  byte_10071C7E8 = v2;
}

uint64_t type metadata accessor for DOCCollectionView()
{
  return self;
}

uint64_t type metadata accessor for DOCStackView()
{
  return self;
}

uint64_t type metadata accessor for DOCButton()
{
  return self;
}

unint64_t sub_1005689E0()
{
  unint64_t result = qword_10071C810;
  if (!qword_10071C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071C810);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DOCNavigationBar.Style(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100568B00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNavigationBar.Style()
{
  return &type metadata for DOCNavigationBar.Style;
}

uint64_t type metadata accessor for DOCNavigationBarStyle()
{
  return self;
}

uint64_t type metadata accessor for DOCTableView()
{
  return self;
}

void *sub_100568B90(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_100190C40(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v16 = v6 + 32;
    id v11 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v12 = *v11;
      v20[0] = *(v11 - 1);
      v20[1] = v12;
      swift_bridgeObjectRetain();
      v18(v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v21 = v10;
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100190C40(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      v11 += 2;
      v10[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v17);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

void *sub_100568D5C(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_100059E2C(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v17[0] = *(v8 - 1);
      v17[1] = v9;
      swift_bridgeObjectRetain();
      a1(v18, v17);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v11 = v18[0];
      uint64_t v10 = v18[1];
      uint64_t v19 = v6;
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_100059E2C(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v19;
      }
      v8 += 2;
      _OWORD v6[2] = v13 + 1;
      unint64_t v14 = &v6[2 * v13];
      v14[4] = v11;
      v14[5] = v10;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void *sub_100568E84(void (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    id v24 = _swiftEmptyArrayStorage;
    sub_100190C40(0, v9, 0);
    uint64_t v10 = v24;
    uint64_t v17 = v6 + 32;
    for (uint64_t i = (uint64_t *)(a3 + 56); ; i += 4)
    {
      uint64_t v12 = *(i - 1);
      uint64_t v13 = *i;
      long long v21 = *(_OWORD *)(i - 3);
      uint64_t v22 = v12;
      uint64_t v23 = v13;
      swift_bridgeObjectRetain();
      v19(&v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      id v24 = v10;
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_100190C40(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v24;
      }
      v10[2] = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, v8, v18);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_100569058()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment);
  unsigned __int8 v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment + 8);
  swift_bridgeObjectRetain();
  v3._uint64_t countAndFlagsBits = v1;
  v3._uint64_t object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._uint64_t countAndFlagsBits = 41;
  v4._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  sub_100516D08(40, (void *)0xE100000000000000);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005690F8()
{
  return swift_bridgeObjectRelease();
}

id sub_10056910C()
{
  return sub_10056C840(type metadata accessor for DOCQueryFragmentSuggestion);
}

uint64_t type metadata accessor for DOCQueryFragmentSuggestion()
{
  return self;
}

uint64_t sub_10056915C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    uint64_t v9 = result;
    uint64_t v10 = (void **)(a8 + 16);
    swift_beginAccess();
    uint64_t v11 = *v10;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v10 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v11 = sub_1000825D0(0, v11[2] + 1, 1, v11);
      *uint64_t v10 = v11;
    }
    unint64_t v14 = v11[2];
    unint64_t v13 = v11[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t v11 = sub_1000825D0((void *)(v13 > 1), v14 + 1, 1, v11);
      *uint64_t v10 = v11;
    }
    _OWORD v11[2] = v14 + 1;
    unint64_t v15 = &v11[2 * v14];
    v15[4] = v9;
    uint64_t v15[5] = a2;
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_100569240()
{
  sub_1000CBE70(&qword_100707EF0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A0230;
  *(void *)(v0 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 56) = v2;
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v0 + 64) = result;
  *(void *)(v0 + 72) = v4;
  qword_1007377C8 = v0;
  return result;
}

void sub_1005692C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id Strong = (id)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_12:
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  uint64_t v7 = v3 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = a3;
    uint64_t v8 = *(void *)(v7 + 8);
    uint64_t v9 = _swiftEmptyArrayStorage;
    id v24 = _swiftEmptyArrayStorage;
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [Strong parse:v10];

    if (!v11)
    {
      uint64_t v15 = a2;
      uint64_t v16 = a1;
      uint64_t v20 = 0;
      goto LABEL_10;
    }
    id v19 = [v11 length];
    uint64_t v12 = (void *)swift_allocObject();
    _OWORD v12[2] = a1;
    void v12[3] = a2;
    uint64_t v12[4] = &v24;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10056E4CC;
    *(void *)(v13 + 24) = v12;
    aBlock[4] = sub_10056E4E8;
    aBlock[5] = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100569D28;
    void aBlock[3] = &unk_1006B8138;
    unint64_t v14 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    [v11 enumerateAttributesInRange:0 options:2 usingBlock:v14];

    _Block_release(v14);
    LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = a2;
      uint64_t v16 = a1;
      uint64_t v20 = sub_10056E4CC;
      uint64_t v9 = v24;
LABEL_10:
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v18 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8);
      swift_bridgeObjectRetain();
      v18(v3, v9, v21, v16, v15, ObjectType, v8);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      sub_1000A7258((uint64_t)v20);
      return;
    }
    __break(1u);
    goto LABEL_12;
  }
}

uint64_t sub_100569608(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6, void *a7)
{
  NSString v12 = String._bridgeToObjectiveC()();
  uint64_t v13 = v12;
  if (!*(void *)(a1 + 16) || (uint64_t v14 = sub_1000A54AC(v12), (v15 & 1) == 0))
  {
    long long v72 = 0u;
    long long v73 = 0u;

    goto LABEL_8;
  }
  sub_10009B208(*(void *)(a1 + 56) + 32 * v14, (uint64_t)&v72);

  if (!*((void *)&v73 + 1))
  {
LABEL_8:
    uint64_t v20 = &v72;
    return sub_10006273C((uint64_t)v20);
  }
  sub_1000A54B0(&v72, v74);
  NSString v16 = String._bridgeToObjectiveC()();
  uint64_t v17 = v16;
  if (*(void *)(a1 + 16) && (uint64_t v18 = sub_1000A54AC(v16), (v19 & 1) != 0))
  {
    sub_10009B208(*(void *)(a1 + 56) + 32 * v18, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }

  if (!*((void *)&v71 + 1))
  {
    sub_10009B1B8((uint64_t)v74);
    uint64_t v20 = &v70;
    return sub_10006273C((uint64_t)v20);
  }
  uint64_t v22 = (uint64_t)sub_1000A54B0(&v70, &v72);
  if (qword_100705340 != -1) {
    uint64_t v22 = swift_once();
  }
  uint64_t v23 = qword_1007377C8;
  __chkstk_darwin(v22);
  v66[2] = v74;
  v66[3] = &v72;
  swift_bridgeObjectRetain();
  id v24 = sub_100568D5C((void (*)(void *__return_ptr, void *))sub_10056E558, (uint64_t)v66, v23);
  swift_bridgeObjectRelease();
  *(void *)&long long v70 = v24;
  sub_1000CBE70(&qword_10070AEB0);
  sub_100073DF0((unint64_t *)&qword_100711820, &qword_10070AEB0);
  uint64_t v25 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  char v29 = (uint64_t *)&v28[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  uint64_t *v29 = v25;
  v29[1] = v27;
  v28[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  uint64_t v30 = &v28[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *uint64_t v30 = a5;
  v30[1] = a6;
  UIImage_optional v31 = (objc_class *)type metadata accessor for DOCSearchSuggestion();
  v69.receiver = v28;
  v69.super_class = v31;
  swift_bridgeObjectRetain();
  uint64_t v32 = [super init];
  v32[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 1;
  NSString v33 = String._bridgeToObjectiveC()();
  uint64_t v34 = v33;
  if (*(void *)(a1 + 16) && (uint64_t v35 = sub_1000A54AC(v33), (v36 & 1) != 0))
  {
    sub_10009B208(*(void *)(a1 + 56) + 32 * v35, (uint64_t)&v70);
  }
  else
  {
    long long v70 = 0u;
    long long v71 = 0u;
  }

  if (!*((void *)&v71 + 1))
  {
    sub_10006273C((uint64_t)&v70);
    goto LABEL_25;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_25:
    uint64_t v51 = &v32[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    void *v51 = a5;
    v51[1] = a6;
    swift_bridgeObjectRetain();
    uint64_t v52 = v32;
    swift_bridgeObjectRelease();
    uint64_t v53 = v51[1];
    *(void *)&long long v70 = *v51;
    *((void *)&v70 + 1) = v53;
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v55 = *(void *)&v52[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString + 8];
    *(void *)&long long v70 = *(void *)&v52[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    *((void *)&v70 + 1) = v55;
    StringProtocol.localizedLowercase.getter();
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v57 = [v54 rangeOfString:v56 options:132];
    uint64_t v59 = v58;

    uint64_t v60 = NSNotFound.getter();
    if (v57 != (id)v60)
    {
      uint64_t v61 = &v52[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)uint64_t v61 = v57;
      *((void *)v61 + 1) = v59;
      v61[16] = 0;
    }

    uint64_t v62 = v51[1];
    uint64_t v63 = &v52[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    *(void *)uint64_t v63 = *v51;
    *((void *)v63 + 1) = v62;
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  uint64_t v38 = v67;
  uint64_t v37 = v68;
  os_log_type_t v39 = &v32[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
  *os_log_type_t v39 = v67;
  v39[1] = v37;
  os_log_type_t v40 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v39[1];
  *(void *)&long long v70 = *v39;
  *((void *)&v70 + 1) = v41;
  sub_10009D28C();
  StringProtocol.localizedLowercase.getter();
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)&v40[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString + 8];
  *(void *)&long long v70 = *(void *)&v40[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *((void *)&v70 + 1) = v43;
  StringProtocol.localizedLowercase.getter();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v45 = [v42 rangeOfString:v44 options:132];
  uint64_t v47 = v46;

  uint64_t v48 = NSNotFound.getter();
  if (v45 != (id)v48)
  {
    uint64_t v49 = &v40[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
    *(void *)uint64_t v49 = v45;
    *((void *)v49 + 1) = v47;
    v49[16] = 0;
  }

  uint64_t v50 = &v40[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
  *(void *)uint64_t v50 = v38;
  *((void *)v50 + 1) = v37;
LABEL_28:
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1005A04F0;
  *(void *)(v64 + 32) = v32;
  *(void *)&long long v70 = v64;
  specialized Array._endMutation()();
  *a7 = v70;
  uint64_t v65 = v32;
  swift_bridgeObjectRelease();
  *a4 = 1;

  sub_10009B1B8((uint64_t)&v72);
  return sub_10009B1B8((uint64_t)v74);
}

void sub_100569C08(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)a1[1];
  _StringGuts.grow(_:)(19);
  v5._uint64_t countAndFlagsBits = 0x2865676E61526E49;
  v5._uint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  v6._uint64_t countAndFlagsBits = v3;
  v6._uint64_t object = v4;
  String.append(_:)(v6);
  v7._uint64_t countAndFlagsBits = 8236;
  v7._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  _print_unlocked<A, B>(_:_:)();
  v8._uint64_t countAndFlagsBits = 8236;
  v8._uint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  _print_unlocked<A, B>(_:_:)();
  v9._uint64_t countAndFlagsBits = 41;
  v9._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
}

uint64_t sub_100569D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  Swift::String v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  type metadata accessor for Key(0);
  sub_10056E510((unint64_t *)&qword_100706230, type metadata accessor for Key);
  uint64_t v9 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  v8(v9, a3, a4, a5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100569DF8()
{
  return swift_unknownObjectWeakDestroy();
}

id sub_100569E08()
{
  return sub_10056C840(type metadata accessor for DOCDateSuggester);
}

uint64_t type metadata accessor for DOCDateSuggester()
{
  return self;
}

void sub_100569E54()
{
}

void sub_100569EB0()
{
}

uint64_t sub_100569F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = String.doc_sanitizedForComparison.getter();
  NSString v10 = v9;
  id v11 = *(void (**)(void))((swift_isaMask & *v3) + 0x98);
  v11();
  uint64_t v12 = String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
  uint64_t v13 = swift_bridgeObjectRelease();
  uint64_t v14 = ((uint64_t (*)(uint64_t))v11)(v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = HIBYTE(v16) & 0xF;
  if ((v16 & 0x2000000000000000) == 0) {
    uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (v17)
  {
    uint64_t v18 = *(void *)(v12 + 16);
    if (v18)
    {
      uint64_t v30 = a3;
      swift_bridgeObjectRetain();
      uint64_t v19 = v12 + 40;
      while (1)
      {
        swift_bridgeObjectRetain();
        v20._uint64_t countAndFlagsBits = v8;
        v20._uint64_t object = v10;
        Swift::Bool v21 = String.hasPrefix(_:)(v20);
        swift_bridgeObjectRelease();
        if (v21) {
          break;
        }
        v19 += 16;
        if (!--v18)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease_n();
      LODWORD(v18) = 1;
LABEL_12:
      a3 = v30;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    LODWORD(v18) = 1;
  }
  uint64_t v22 = String.count.getter();
  if (v22 >= (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x88))() && v18)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1005A04F0;
    uint64_t v24 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))((swift_isaMask & *v4) + 0xA0))(v8, v10, a1, a2);
    swift_bridgeObjectRelease();
    *(void *)(v23 + 32) = v24;
    specialized Array._endMutation()();
    uint64_t v25 = (void *)v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = _swiftEmptyArrayStorage;
  }
  uint64_t v26 = (char *)v4 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v27 = *((void *)v26 + 1);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8))(v4, v25, a3, a1, a2, ObjectType, v27);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

id sub_10056A214()
{
  return sub_10056C840(type metadata accessor for DOCHasTraitSuggester);
}

uint64_t type metadata accessor for DOCHasTraitSuggester()
{
  return self;
}

id sub_10056A250()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v2._uint64_t countAndFlagsBits = 0xD000000000000013;
    v6._uint64_t countAndFlagsBits = 0xD000000000000069;
    v6._uint64_t object = (void *)0x8000000100601A40;
    v2._uint64_t object = (void *)0x8000000100601A00;
    v3._uint64_t object = (void *)0x8000000100601A20;
    v4._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v4._uint64_t object = (void *)0xEB00000000656C62;
    v3._uint64_t countAndFlagsBits = 0xD000000000000010;
    uint64_t countAndFlagsBits = DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v4, (NSBundle)v1, v3, v6)._countAndFlagsBits;

    return (id)countAndFlagsBits;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_10056A318(uint64_t a1, uint64_t a2)
{
  uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v35 = v4;
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 0x31203D3D20;
  v5._uint64_t object = (void *)0xE500000000000000;
  String.append(_:)(v5);
  uint64_t v6 = v35;
  Swift::String v7 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  uint64_t v8 = (uint64_t *)&v7[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *uint64_t v8 = countAndFlagsBits;
  v8[1] = v6;
  v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  uint64_t v9 = &v7[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *uint64_t v9 = a1;
  v9[1] = a2;
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  NSString v10 = (char *)[super init];
  id result = (char *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v12 = result;
    v36._uint64_t countAndFlagsBits = 0xD000000000000033;
    v36._uint64_t object = (void *)0x8000000100601970;
    v13._uint64_t object = (void *)0x8000000100601950;
    v13._uint64_t countAndFlagsBits = 0xD000000000000015;
    v14._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v14._uint64_t object = (void *)0xEB00000000656C62;
    v15._uint64_t countAndFlagsBits = 0xD000000000000015;
    v15._uint64_t object = (void *)0x8000000100601950;
    Swift::String v16 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v36);

    uint64_t v17 = (Swift::String *)&v10[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    *uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    uint64_t object = v17->_object;
    uint64_t countAndFlagsBits = v17->_countAndFlagsBits;
    uint64_t v35 = (uint64_t)object;
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString + 8];
    uint64_t countAndFlagsBits = *(void *)&v10[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    uint64_t v35 = v20;
    StringProtocol.localizedLowercase.getter();
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v22 = [v19 rangeOfString:v21 options:132];
    uint64_t v24 = v23;

    uint64_t v25 = NSNotFound.getter();
    if (v22 != (id)v25)
    {
      uint64_t v26 = &v10[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)uint64_t v26 = v22;
      *((void *)v26 + 1) = v24;
      v26[16] = 0;
    }

    uint64_t v27 = v10;
    id result = (char *)(id)_DocumentManagerBundle();
    if (result)
    {
      uint64_t v28 = result;
      v37._uint64_t countAndFlagsBits = 0xD000000000000040;
      v37._uint64_t object = (void *)0x80000001006019B0;
      v29._uint64_t countAndFlagsBits = 0x6572616853207349;
      v29._uint64_t object = (void *)0xE900000000000064;
      v30._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v30._uint64_t object = (void *)0xEB00000000656C62;
      v31._uint64_t countAndFlagsBits = 0x6572616853207349;
      v31._uint64_t object = (void *)0xE900000000000064;
      Swift::String v32 = DOCLocalizedString(_:tableName:bundle:value:comment:)(v29, v30, (NSBundle)v28, v31, v37);

      *(Swift::String *)&v27[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle] = v32;
      swift_bridgeObjectRelease();
      v27[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 6;
      return v27;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_10056A62C()
{
  return sub_10056C840(type metadata accessor for DOCIsSharedSuggester);
}

uint64_t type metadata accessor for DOCIsSharedSuggester()
{
  return self;
}

char *sub_10056A668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v42 = v8;
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = 540884256;
  v9._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = String.doc_searchQueryValue.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = v42;
  uint64_t v12 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  Swift::String v13 = (uint64_t *)&v12[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *Swift::String v13 = v41;
  v13[1] = v11;
  v12[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  Swift::String v14 = &v12[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *Swift::String v14 = a1;
  v14[1] = a2;
  v40.receiver = v12;
  v40.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  id v15 = [super init];
  id result = (char *)(id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v17 = result;
    v43._uint64_t countAndFlagsBits = 0xD000000000000037;
    v43._uint64_t object = (void *)0x8000000100601910;
    v18._uint64_t object = (void *)0x80000001006018F0;
    v18._uint64_t countAndFlagsBits = 0xD000000000000010;
    v19._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v19._uint64_t object = (void *)0xEB00000000656C62;
    v20._uint64_t countAndFlagsBits = 0xD000000000000010;
    v20._uint64_t object = (void *)0x80000001006018F0;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v43);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1005A0030;
    id v22 = (char *)v15;
    uint64_t v23 = String.doc_localizedQuotedString.getter();
    uint64_t v25 = v24;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_100073F48();
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 40) = v25;
    uint64_t v26 = String.init(format:_:)();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    Swift::String v29 = (uint64_t *)&v22[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    uint64_t *v29 = v26;
    v29[1] = v28;
    swift_bridgeObjectRelease();
    uint64_t v30 = v29[1];
    uint64_t v41 = *v29;
    uint64_t v42 = v30;
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void *)&v22[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString + 8];
    uint64_t v41 = *(void *)&v22[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    uint64_t v42 = v32;
    StringProtocol.localizedLowercase.getter();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v34 = [v31 rangeOfString:v33 options:132];
    uint64_t v36 = v35;

    uint64_t v37 = NSNotFound.getter();
    if (v34 != (id)v37)
    {
      uint64_t v38 = &v22[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)uint64_t v38 = v34;
      *((void *)v38 + 1) = v36;
      v38[16] = 0;
    }

    os_log_type_t v39 = &v22[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    *(void *)os_log_type_t v39 = a3;
    *((void *)v39 + 1) = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v22[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 4;
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10056A990()
{
  return sub_10056C840(type metadata accessor for DOCFilenameSuggester);
}

uint64_t type metadata accessor for DOCFilenameSuggester()
{
  return self;
}

uint64_t sub_10056A9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = v4 + OBJC_IVAR____TtC5Files15DOCTagSuggester_dataSource;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_16;
  }
  uint64_t v9 = Strong;
  uint64_t v10 = *(void *)(v7 + 8);
  v33[1] = a2;
  sub_10009D28C();
  uint64_t v11 = StringProtocol.localizedLowercase.getter();
  Swift::String v13 = v12;
  v33[0] = _swiftEmptyArrayStorage;
  id v14 = [self sharedInstance];
  id v15 = [v14 userTags];

  id v16 = v15;
  sub_10056D3C0(v16);
  uint64_t v18 = v17;

  Swift::String v19 = sub_100038F00(v18);
  swift_release();
  swift_bridgeObjectRetain();
  unint64_t v20 = (unint64_t)sub_10056D93C((unint64_t)v19, v11, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v31 = v4;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v21)
    {
LABEL_4:
      if (v21 >= 1)
      {
        uint64_t v22 = 0;
        do
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v23 = *(id *)(v20 + 8 * v22 + 32);
          }
          uint64_t v24 = v23;
          ++v22;
          uint64_t v32 = v23;
          sub_10056ACC0(&v32, v11, (uint64_t)v13, v9, v10, v33);
        }
        while (v21 != v22);
        goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      uint64_t result = _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
  }
LABEL_11:
  swift_bridgeObjectRelease_n();
  uint64_t v25 = v31 + OBJC_IVAR____TtC5Files12DOCSuggester_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = v33[0];
    Swift::String v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t))(v26 + 8);
    swift_bridgeObjectRetain();
    v29(v31, v28, a3, v11, v13, ObjectType, v26);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void sub_10056ACC0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v8 = *a1;
  uint64_t v9 = self;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 defaultFontForTextStyle:v10];

  if (v11)
  {
    [v11 pointSize];
    double v13 = v12;

    uint64_t v14 = swift_allocObject();
    *(double *)(v14 + 16) = v13 + -2.0;
    uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v66 = v15;
    swift_bridgeObjectRetain();
    v16._uint64_t countAndFlagsBits = 0x22203D3D20;
    v16._uint64_t object = (void *)0xE500000000000000;
    String.append(_:)(v16);
    id v17 = [v8 displayName];
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    v21._uint64_t countAndFlagsBits = v18;
    v21._uint64_t object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    v22._uint64_t countAndFlagsBits = 34;
    v22._uint64_t object = (void *)0xE100000000000000;
    String.append(_:)(v22);
    uint64_t v23 = v66;
    uint64_t v24 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
    uint64_t v25 = (uint64_t *)&v24[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
    *uint64_t v25 = v65;
    v25[1] = v23;
    v24[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
    uint64_t v26 = &v24[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    void *v26 = a2;
    v26[1] = a3;
    v64.receiver = v24;
    v64.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
    uint64_t v27 = (char *)[super init];
    id v28 = [v8 displayName];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    uint64_t v32 = (uint64_t *)&v27[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    *uint64_t v32 = v29;
    v32[1] = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v32[1];
    uint64_t v65 = *v32;
    uint64_t v66 = v33;
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)&v27[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString + 8];
    uint64_t v65 = *(void *)&v27[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
    uint64_t v66 = v35;
    StringProtocol.localizedLowercase.getter();
    NSString v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v37 = [v34 rangeOfString:v36 options:132];
    uint64_t v39 = v38;

    uint64_t v40 = NSNotFound.getter();
    if (v37 != (id)v40)
    {
      uint64_t v41 = &v27[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)uint64_t v41 = v37;
      *((void *)v41 + 1) = v39;
      v41[16] = 0;
    }

    uint64_t v42 = v27;
    id v43 = [v8 displayName];
    uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v46 = v45;

    uint64_t v47 = (uint64_t *)&v42[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    *uint64_t v47 = v44;
    v47[1] = v46;

    swift_bridgeObjectRelease();
    v42[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 7;
    uint64_t v48 = (uint64_t (*)())swift_allocObject();
    *((void *)v48 + 2) = a4;
    *((void *)v48 + 3) = a5;
    *((void *)v48 + 4) = v8;
    *((void *)v48 + 5) = sub_10056E3F4;
    *((void *)v48 + 6) = v14;
    uint64_t v49 = (uint64_t (**)())&v42[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    uint64_t v50 = *(void *)&v42[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator];
    uint64_t v51 = *(void *)&v42[OBJC_IVAR____TtC5Files13DOCSuggestion_customImageGenerator + 8];
    *uint64_t v49 = sub_10056E400;
    v49[1] = v48;
    uint64_t v52 = v42;
    swift_unknownObjectRetain();
    id v53 = v8;
    swift_retain();
    sub_1000C0640(v50);
    swift_retain();
    sub_1000A7258(v50);
    sub_100102AA8(v50, v51);
    swift_release();
    sub_1000A7258(v50);

    NSString v54 = (uint64_t (*)())swift_allocObject();
    *((void *)v54 + 2) = a4;
    *((void *)v54 + 3) = a5;
    *((void *)v54 + 4) = v53;
    *((void *)v54 + 5) = sub_10056E3F4;
    *((void *)v54 + 6) = v14;
    uint64_t v55 = (uint64_t (**)())&v52[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    uint64_t v56 = *(void *)&v52[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator];
    uint64_t v57 = *(void *)&v52[OBJC_IVAR____TtC5Files13DOCSuggestion_customAtomImageGenerator + 8];
    *uint64_t v55 = sub_10056E464;
    v55[1] = v54;
    uint64_t v58 = v52;
    swift_unknownObjectRetain();
    id v59 = v53;
    swift_retain();
    sub_1000C0640(v56);
    swift_retain();
    sub_1000A7258(v56);
    sub_100102ABC(v56, v57);
    swift_release();
    sub_1000A7258(v56);

    uint64_t v60 = v58;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

double sub_10056B1EC(double a1)
{
  id v2 = [self defaultMetrics];
  [v2 scaledValueForValue:a1];
  double v4 = v3;

  return v4;
}

id sub_10056B254(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  id v6 = [self tertiarySystemBackgroundColor];
  double v7 = a4();
  id v8 = [self requestForTag:a3 tagDimension:v7];
  [v8 setAllowUnsizedSymbolImages:1];
  [v8 setSelectionOutlineColor:0];
  [v8 setRingColor:v6];
  id v9 = [self shared];
  id v10 = [v9 renderImageWithRequest:v8];

  return v10;
}

id sub_10056B370(uint64_t a1, uint64_t a2, uint64_t a3, double (*a4)(void))
{
  id v6 = self;
  id v7 = [v6 whiteColor];
  id v8 = [v6 systemBackgroundColor];
  double v9 = a4();
  id v10 = [self requestForTag:a3 tagDimension:v9];
  [v10 setAllowUnsizedSymbolImages:1];
  [v10 setSelectionOutlineColor:v7];
  [v10 setRingColor:v8];
  id v11 = [self shared];
  id v12 = [v11 renderImageWithRequest:v10];

  return v12;
}

uint64_t sub_10056B4B8()
{
  return sub_10003A094(v0 + OBJC_IVAR____TtC5Files15DOCTagSuggester_dataSource);
}

id sub_10056B4C8()
{
  return sub_10056C840(type metadata accessor for DOCTagSuggester);
}

uint64_t type metadata accessor for DOCTagSuggester()
{
  return self;
}

Swift::Int sub_10056B514()
{
  Hasher.init(_seed:)();
  Swift::UInt v0 = String.hashValue.getter();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

void sub_10056B564()
{
  Swift::UInt v0 = String.hashValue.getter();
  Hasher._combine(_:)(v0);
}

Swift::Int sub_10056B594()
{
  Hasher.init(_seed:)();
  Swift::UInt v0 = String.hashValue.getter();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

void sub_10056B5E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = OBJC_IVAR____TtC5Files18DOCPersonSuggester_currentQuery;
  [*(id *)(v2 + OBJC_IVAR____TtC5Files18DOCPersonSuggester_currentQuery) cancel];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = &_swiftEmptySetSingleton;
  sub_10056E348();
  _StringGuts.grow(_:)(33);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x2620292A203D3D20;
  v7._uint64_t object = (void *)0xEB00000000282026;
  String.append(_:)(v7);
  v8._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x7C7C202A203D3D20;
  v9._uint64_t object = (void *)0xE900000000000020;
  String.append(_:)(v9);
  v10._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x292A203D3D20;
  v11._uint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v11);
  sub_1000CBE70(&qword_100707EF0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10059B760;
  *(void *)(v12 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v12 + 40) = v13;
  *(void *)(v12 + 48) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v12 + 56) = v14;
  uint64_t v15 = (void *)static CSSearchQuery.withString(_:fetchedAttributes:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10056E388;
  uint64_t v27 = (void *)v5;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_100197400;
  uint64_t v25 = &unk_1006B7FD0;
  Swift::String v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v15 setFoundItemsHandler:v16];
  _Block_release(v16);
  id v17 = (void *)swift_allocObject();
  void v17[2] = a1;
  v17[3] = a2;
  v17[4] = v5;
  uint64_t v26 = sub_10056E3D0;
  uint64_t v27 = v17;
  unint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1001950CC;
  uint64_t v25 = &unk_1006B8020;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  [v15 setCompletionHandler:v18];
  _Block_release(v18);
  [v15 start];
  Swift::String v19 = *(void **)(v3 + v4);
  *(void *)(v3 + v4) = v15;
  swift_release();
}

uint64_t sub_10056B944(unint64_t a1, unint64_t a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 0;
      unint64_t v47 = a2 + 16;
      unint64_t v44 = v3 & 0xC000000000000001;
      uint64_t v42 = v3 + 32;
      Swift::String v6 = &selRef_cellForItemAtIndexPath_;
      Swift::String v7 = _swiftEmptyArrayStorage;
      unint64_t v45 = v3;
      uint64_t v43 = v4;
      while (1)
      {
        if (v44) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(v42 + 8 * v5);
        }
        Swift::String v10 = v9;
        if (__OFADD__(v5++, 1))
        {
          __break(1u);
          goto LABEL_32;
        }
        sub_1000CBE70((uint64_t *)&unk_100708C00);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10059B760;
        id v13 = [v10 v6[296]];
        id v14 = [v13 lastEditorName];

        if (v14)
        {
          uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          a2 = v16;
        }
        else
        {
          uint64_t v15 = 0;
          a2 = 0;
        }
        uint64_t v17 = v15;
        *(void *)(inited + 32) = v15;
        *(void *)(inited + 40) = a2;
        id v18 = [v10 v6[296] v42];
        id v19 = [v18 ownerName];

        if (v19)
        {
          uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v22 = v21;

          *(void *)(inited + 48) = v20;
          *(void *)(inited + 56) = v22;
          if (a2) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v20 = 0;
          uint64_t v22 = 0;
          *(void *)(inited + 48) = 0;
          *(void *)(inited + 56) = 0;
          if (a2)
          {
LABEL_17:
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_1000825D0(0, 1, 1, _swiftEmptyArrayStorage);
            unint64_t v25 = v23[2];
            unint64_t v24 = v23[3];
            uint64_t v26 = v23;
            if (v25 >= v24 >> 1) {
              uint64_t v26 = sub_1000825D0((void *)(v24 > 1), v25 + 1, 1, v23);
            }
            _OWORD v26[2] = v25 + 1;
            uint64_t v27 = &v26[2 * v25];
            Swift::String v7 = v26;
            v27[4] = v17;
            void v27[5] = a2;
          }
        }
        uint64_t v46 = v10;
        if (v22)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v7 = sub_1000825D0(0, v7[2] + 1, 1, v7);
          }
          unint64_t v29 = v7[2];
          unint64_t v28 = v7[3];
          a2 = v29 + 1;
          if (v29 >= v28 >> 1) {
            Swift::String v7 = sub_1000825D0((void *)(v28 > 1), v29 + 1, 1, v7);
          }
          _OWORD v7[2] = a2;
          uint64_t v30 = &v7[2 * v29];
          v30[4] = v20;
          v30[5] = v22;
        }
        swift_release();
        uint64_t v31 = v7[2];
        unint64_t v3 = v45;
        if (v31)
        {
          swift_bridgeObjectRetain();
          sub_10009D28C();
          uint64_t v32 = v7 + 5;
          do
          {
            Swift::Int v33 = *v32;
            Swift::Int v48 = *(v32 - 1);
            Swift::Int v34 = v48;
            Swift::Int v49 = v33;
            swift_bridgeObjectRetain_n();
            uint64_t v35 = StringProtocol.localizedLowercase.getter();
            Swift::Int v37 = v36;
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = _swiftEmptyArrayStorage;
            uint64_t v39 = (Swift::Int *)(v38 + 16);
            Swift::Int v48 = v35;
            Swift::Int v49 = v37;
            swift_retain();
            sub_1000CBE70(&qword_10071CB08);
            sub_100073DF0(&qword_10071CB10, &qword_10071CB08);
            StringProtocol.enumerateSubstrings<A>(in:options:_:)();
            swift_release();
            swift_beginAccess();
            Swift::Int v40 = *v39;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            swift_release();
            a2 = v47;
            swift_beginAccess();
            sub_1000EF230(&v48, v34, v33, v40);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v32 += 2;
            --v31;
          }
          while (v31);

          swift_bridgeObjectRelease();
          unint64_t v3 = v45;
          uint64_t v8 = v43;
          Swift::String v6 = &selRef_cellForItemAtIndexPath_;
        }
        else
        {

          uint64_t v8 = v43;
        }
        swift_bridgeObjectRelease();
        Swift::String v7 = _swiftEmptyArrayStorage;
        if (v5 == v8) {
          return swift_bridgeObjectRelease();
        }
      }
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_10056BE58(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  a2(v4, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10056BEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  Swift::String v6 = &v3[OBJC_IVAR____TtC5Files12DOCSuggester_delegate];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = *((void *)v6 + 1);
    sub_10009D28C();
    uint64_t v10 = StringProtocol.localizedLowercase.getter();
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = _swiftEmptyArrayStorage;
    id v14 = (void *)swift_allocObject();
    v14[2] = v8;
    v14[3] = v9;
    v14[4] = v4;
    v14[5] = a3;
    v14[6] = v10;
    v14[7] = v12;
    v14[8] = v13;
    swift_unknownObjectRetain();
    id v15 = v4;
    swift_retain();
    sub_10056B5E0((uint64_t)sub_10056C934, (uint64_t)v14);
    swift_unknownObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10056BFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v47 = a6;
  uint64_t v14 = a9;
  uint64_t v15 = type metadata accessor for Logger();
  __chkstk_darwin(v15);
  id v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v43 = v17;
    uint64_t v44 = v16;
    uint64_t v45 = a9;
    uint64_t v46 = a5;
    uint64_t v49 = a2;
    swift_errorRetain();
    swift_errorRetain();
    sub_1000CBE70((uint64_t *)&unk_1007076D0);
    type metadata accessor for CSSearchQueryError(0);
    if (swift_dynamicCast())
    {
      uint64_t v20 = v48;
      sub_10056E510(&qword_100706138, type metadata accessor for CSSearchQueryError);
      _BridgedStoredNSError.code.getter();
      if (v49 == -2003)
      {
      }
      else
      {
        static Logger.UI.getter();
        uint64_t v21 = v20;
        uint64_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        int v24 = v23;
        if (os_log_type_enabled(v22, v23))
        {
          os_log_t v40 = v22;
          uint64_t v25 = swift_slowAlloc();
          int v39 = v24;
          uint64_t v26 = (uint8_t *)v25;
          uint64_t v38 = (void *)swift_slowAlloc();
          uint64_t v41 = v26;
          uint64_t v42 = v21;
          *(_DWORD *)uint64_t v26 = 138412290;
          Swift::Int v37 = v26 + 4;
          uint64_t v27 = v21;
          uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v49 = v28;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v38 = v28;

          os_log_t v29 = v40;
          _os_log_impl((void *)&_mh_execute_header, v40, (os_log_type_t)v39, "An error occurred while querying for all available persons: %@", v41, 0xCu);
          sub_1000CBE70(&qword_100707CC0);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v21 = v42;
          swift_slowDealloc();
        }
        else
        {

          os_log_t v29 = v21;
        }

        (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v44);
      }
    }
    uint64_t v14 = v45;
    a5 = v46;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a5, _swiftEmptyArrayStorage, v47, a7, a8, ObjectType, a4);
    swift_errorRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_10056E170(v31, a7, a8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_10056D720(v32, a7, a8, (void *)(v14 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_getObjectType();
  swift_beginAccess();
  uint64_t v34 = *(void *)(v14 + 16);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
  swift_bridgeObjectRetain();
  v35(a5, v34, v47, a7, a8, v33, a4);
  return swift_bridgeObjectRelease();
}

void sub_10056C3E8(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(20);
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 540884256;
  v12._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v12);
  v13._uint64_t countAndFlagsBits = String.doc_searchQueryValue.getter();
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 545029152;
  v14._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 540884256;
  v16._uint64_t object = (void *)0xE400000000000000;
  String.append(_:)(v16);
  v17._uint64_t countAndFlagsBits = String.doc_searchQueryValue.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = objc_allocWithZone((Class)type metadata accessor for DOCQueryFragmentSuggestion());
  id v19 = (uint64_t *)&v18[OBJC_IVAR____TtC5Files26DOCQueryFragmentSuggestion_queryStringFragment];
  *id v19 = v9;
  v19[1] = v11;
  v18[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 0;
  uint64_t v20 = &v18[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_inputString];
  *uint64_t v20 = a2;
  v20[1] = a3;
  v42.receiver = v18;
  v42.super_class = (Class)type metadata accessor for DOCSearchSuggestion();
  id v21 = [super init];
  id v22 = (id)_DocumentManagerBundle();
  if (v22)
  {
    os_log_type_t v23 = v22;
    v43._uint64_t object = (void *)0x8000000100601850;
    v24._uint64_t countAndFlagsBits = 0x6220646572616853;
    v24._uint64_t object = (void *)0xEC00000040252079;
    v25._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v25._uint64_t object = (void *)0xEB00000000656C62;
    v26._uint64_t countAndFlagsBits = 0x6220646572616853;
    v26._uint64_t object = (void *)0xEC00000040252079;
    v43._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v23, v26, v43);

    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1005A0030;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_100073F48();
    *(void *)(v27 + 32) = v8;
    *(void *)(v27 + 40) = v7;
    uint64_t v28 = (char *)v21;
    swift_bridgeObjectRetain();
    uint64_t v29 = String.init(format:_:)();
    uint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t *)&v28[OBJC_IVAR____TtC5Files13DOCSuggestion_title];
    *uint64_t v32 = v29;
    v32[1] = v31;
    swift_bridgeObjectRelease();
    sub_10009D28C();
    StringProtocol.localizedLowercase.getter();
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    StringProtocol.localizedLowercase.getter();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [v33 rangeOfString:v34 options:132];
    uint64_t v37 = v36;

    uint64_t v38 = NSNotFound.getter();
    if (v35 != (id)v38)
    {
      int v39 = &v28[OBJC_IVAR____TtC5Files13DOCSuggestion_matchingInputRange];
      *(void *)int v39 = v35;
      *((void *)v39 + 1) = v37;
      v39[16] = 0;
    }

    os_log_t v40 = &v28[OBJC_IVAR____TtC5Files13DOCSuggestion_atomTitle];
    *(void *)os_log_t v40 = v8;
    *((void *)v40 + 1) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28[OBJC_IVAR____TtC5Files19DOCSearchSuggestion_category] = 8;
    swift_beginAccess();
    uint64_t v41 = v28;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

void sub_10056C818()
{
}

id sub_10056C828()
{
  return sub_10056C840(type metadata accessor for DOCPersonSuggester);
}

id sub_10056C840(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for DOCPersonSuggester()
{
  return self;
}

uint64_t sub_10056C8AC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10056C8E4()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10056C934(uint64_t a1, uint64_t a2)
{
  return sub_10056BFF4(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_10056C968(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000CBE70((uint64_t *)&unk_1007179E0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v9 = (unsigned char *)result;
  uint64_t v30 = a1;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = v30[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_36;
      }
      unint64_t v16 = v30[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_36;
        }
        unint64_t v16 = v30[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void **)(*(void *)(v4 + 48) + 8 * v14);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    id v19 = v18;
    String.hash(into:)();
    Swift::Int v20 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v21 = -1 << v9[32];
    unint64_t v22 = v20 & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(*((void *)v9 + 6) + 8 * v24) = v19;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= v31) {
    goto LABEL_36;
  }
  unint64_t v16 = v30[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = v30[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10056CC04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000CBE70(&qword_100717A10);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10056CE9C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000CBE70((uint64_t *)&unk_100705CC0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = NSObject._rawHashValue(seed:)(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10056D0FC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1000CBE70(&qword_100705B78);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    long long v32 = *(_OWORD *)(v17 + 8);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::UInt v19 = String.hashValue.getter();
    Hasher._combine(_:)(v19);
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = *((void *)v8 + 6) + 24 * v23;
    *(void *)uint64_t v28 = v18;
    *(_OWORD *)(v28 + 8) = v32;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_10056D3C0(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  Swift::String v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = [a1 count];
  if (v7 <= 0)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v11 = _swiftEmptyArrayStorage[3];
  }
  else
  {
    sub_1000CBE70(&qword_100708BE0);
    uint64_t v8 = (void *)swift_allocObject();
    int64_t v9 = j__malloc_size(v8);
    uint64_t v10 = v9 - 32;
    if (v9 < 32) {
      uint64_t v10 = v9 - 1;
    }
    unint64_t v11 = 2 * (v10 >> 5);
    _OWORD v8[2] = v7;
    v8[3] = v11;
  }
  id v12 = a1;
  NSOrderedSet.makeIterator()();

  if (v7 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v13 = v11 >> 1;
  uint64_t v14 = v8 + 4;
  if (v7)
  {
    v13 -= v7;
    sub_10056E510(&qword_10071CB18, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    do
    {
      dispatch thunk of IteratorProtocol.next()();
      if (!v34) {
        goto LABEL_38;
      }
      sub_1000A54B0(&v33, v14);
      v14 += 2;
    }
    while (--v7);
  }
  uint64_t v30 = v3;
  sub_10056E510(&qword_10071CB18, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  if (v32)
  {
    while (1)
    {
      sub_1000A54B0(&v31, &v33);
      if (!v13)
      {
        unint64_t v15 = v8[3];
        if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
        if (v16 <= 1) {
          uint64_t v17 = 1;
        }
        else {
          uint64_t v17 = v16;
        }
        sub_1000CBE70(&qword_100708BE0);
        uint64_t v18 = (void *)swift_allocObject();
        int64_t v19 = j__malloc_size(v18);
        uint64_t v20 = v19 - 32;
        if (v19 < 32) {
          uint64_t v20 = v19 - 1;
        }
        uint64_t v21 = v20 >> 5;
        void v18[2] = v17;
        _OWORD v18[3] = 2 * (v20 >> 5);
        unint64_t v22 = (unint64_t)(v18 + 4);
        uint64_t v23 = v8[3] >> 1;
        if (v8[2])
        {
          if (v18 != v8 || v22 >= (unint64_t)&v8[4 * v23 + 4]) {
            memmove(v18 + 4, v8 + 4, 32 * v23);
          }
          _OWORD v8[2] = 0;
        }
        uint64_t v14 = (_OWORD *)(v22 + 32 * v23);
        unint64_t v13 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
        swift_release();
        uint64_t v8 = v18;
      }
      BOOL v25 = __OFSUB__(v13--, 1);
      if (v25) {
        break;
      }
      sub_1000A54B0(&v33, v14);
      v14 += 2;
      dispatch thunk of IteratorProtocol.next()();
      if (!v32) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v2);
  sub_10006273C((uint64_t)&v31);
  unint64_t v26 = v8[3];
  if (v26 >= 2)
  {
    unint64_t v27 = v26 >> 1;
    BOOL v25 = __OFSUB__(v27, v13);
    unint64_t v28 = v27 - v13;
    if (v25)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    _OWORD v8[2] = v28;
  }
}

uint64_t sub_10056D720(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v23 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    int64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 24 * i);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    v24[0] = *v19;
    v24[1] = v20;
    v24[2] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10056C3E8(v24, a2, a3, a4);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v25) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v23 + 8 * v13);
    if (!v17)
    {
      int64_t v18 = v13 + 1;
      if (v13 + 1 >= v25) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v23 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v25) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v23 + 8 * v18);
      if (v17) {
        goto LABEL_14;
      }
      int64_t v18 = v13 + 3;
      if (v13 + 3 >= v25) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v23 + 8 * v18);
      if (v17)
      {
LABEL_14:
        int64_t v13 = v18;
        goto LABEL_15;
      }
      int64_t v22 = v13 + 4;
      if (v13 + 4 >= v25) {
        return swift_release();
      }
      unint64_t v17 = *(void *)(v23 + 8 * v22);
      v13 += 4;
      if (!v17) {
        break;
      }
    }
LABEL_15:
    unint64_t v11 = (v17 - 1) & v17;
  }
  while (1)
  {
    int64_t v13 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v13 >= v25) {
      return swift_release();
    }
    unint64_t v17 = *(void *)(v23 + 8 * v13);
    ++v22;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10056D93C(unint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = a1;
  if (a1 >> 62) {
    goto LABEL_25;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6)
  {
    while (1)
    {
      unint64_t v7 = 0;
      uint64_t v24 = v5 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = v5 & 0xC000000000000001;
      unint64_t v22 = v5;
      uint64_t v23 = a2;
      while (v25)
      {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v9 = v8;
        unint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          goto LABEL_24;
        }
        id v11 = [v8 displayName];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10009D28C();
        StringProtocol.localizedLowercase.getter();
        swift_bridgeObjectRelease();
        if (String.count.getter() < 4)
        {
          v13._uint64_t countAndFlagsBits = a2;
          v13._uint64_t object = a3;
          Swift::Bool v14 = String.hasPrefix(_:)(v13);
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_20;
          }
        }
        else
        {
          uint64_t v12 = String.count.getter();
          if (String.count.getter() < v12)
          {

            swift_bridgeObjectRelease();
            goto LABEL_5;
          }
          swift_bridgeObjectRetain();
          uint64_t v15 = String.count.getter();
          sub_100062330(v15);
          swift_bridgeObjectRelease();
          static String._fromSubstring(_:)();
          a2 = v23;
          swift_bridgeObjectRelease();
          v16._uint64_t countAndFlagsBits = v23;
          v16._uint64_t object = a3;
          Swift::Int v17 = String.doc_editDistance(from:)(v16);
          swift_bridgeObjectRelease();
          if (v17 <= 3)
          {
            double v19 = (double)v17 * 100.0;
            uint64_t v20 = String.count.getter();
            swift_bridgeObjectRelease();
            double v18 = 100.0 - v19 / (double)v20;
            if (v18 <= 0.0) {
              double v18 = 0.0;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            double v18 = 0.0;
          }
          unint64_t v5 = v22;
          if (v18 * 0.98 >= 70.0)
          {
LABEL_20:
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
            specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized ContiguousArray._endMutation()();
            goto LABEL_5;
          }
        }

LABEL_5:
        ++v7;
        if (v10 == v6) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v7 < *(void *)(v24 + 16)) {
        break;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      if (!v6) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v8 = *(id *)(v5 + 8 * v7 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10056DC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10009D28C();
  uint64_t v4 = StringProtocol.localizedLowercase.getter();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(a3 + 16);
  if (v7)
  {
    uint64_t v8 = v4;
    uint64_t v9 = a3 + 40;
    uint64_t result = swift_bridgeObjectRetain_n();
    Swift::Bool v11 = 0;
    uint64_t v12 = 1;
    do
    {
      if (v11)
      {
        if (v7 == v12)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 1;
        }
        Swift::Bool v11 = 1;
      }
      else
      {
        swift_bridgeObjectRetain();
        if (String.count.getter() < 4)
        {
          v13._uint64_t countAndFlagsBits = v8;
          v13._uint64_t object = v6;
          Swift::Bool v11 = String.hasPrefix(_:)(v13);
          uint64_t result = swift_bridgeObjectRelease();
          if (v7 == v12) {
            goto LABEL_21;
          }
        }
        else
        {
          uint64_t v15 = String.count.getter();
          if (String.count.getter() >= v15)
          {
            swift_bridgeObjectRetain();
            uint64_t result = String.count.getter();
            if (result < 0) {
              goto LABEL_27;
            }
            String.index(_:offsetBy:limitedBy:)();
            String.subscript.getter();
            swift_bridgeObjectRelease();
            static String._fromSubstring(_:)();
            swift_bridgeObjectRelease();
            v16._uint64_t countAndFlagsBits = v8;
            v16._uint64_t object = v6;
            Swift::Int v17 = String.doc_editDistance(from:)(v16);
            swift_bridgeObjectRelease();
            if (v17 < 4)
            {
              double v19 = (double)v17 * 100.0;
              uint64_t v20 = String.count.getter();
              uint64_t result = swift_bridgeObjectRelease();
              double v18 = 100.0 - v19 / (double)v20;
              if (v18 <= 0.0) {
                double v18 = 0.0;
              }
            }
            else
            {
              uint64_t result = swift_bridgeObjectRelease();
              double v18 = 0.0;
            }
            Swift::Bool v11 = v18 * 0.98 >= 70.0;
            if (v7 == v12)
            {
LABEL_21:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return v11;
            }
          }
          else
          {
            uint64_t result = swift_bridgeObjectRelease();
            if (v7 == v12)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              return 0;
            }
            Swift::Bool v11 = 0;
          }
        }
      }
      v9 += 16;
    }
    while (!__OFADD__(v12++, 1));
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_10056DF68(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = (unint64_t *)result;
  uint64_t v22 = 0;
  int64_t v8 = 0;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v24) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v24) {
        goto LABEL_24;
      }
      unint64_t v17 = *(void *)(v23 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v24) {
          goto LABEL_24;
        }
        unint64_t v17 = *(void *)(v23 + 8 * v8);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    uint64_t v14 = *(void *)(*(void *)(a3 + 48) + 24 * v13 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v15 = sub_10056DC64(a4, a5, v14);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)v21 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_10056D0FC(v21, a2, v22, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v24) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v23 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v24) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v23 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10056E170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10056DF68((uint64_t)&v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10056DF68((uint64_t)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

unint64_t sub_10056E348()
{
  unint64_t result = qword_1007092F0;
  if (!qword_1007092F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007092F0);
  }
  return result;
}

uint64_t sub_10056E388(unint64_t a1)
{
  return sub_10056B944(a1, v1);
}

uint64_t sub_10056E390()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10056E3D0(uint64_t a1)
{
  return sub_10056BE58(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_10056E3DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10056915C(a1, a2, a3, a4, a5, a6, a7, v7);
}

uint64_t sub_10056E3E4()
{
  return _swift_deallocObject(v0, 24, 7);
}

double sub_10056E3F4()
{
  return sub_10056B1EC(*(double *)(v0 + 16));
}

uint64_t sub_10056E400()
{
  return sub_10056E47C((uint64_t (*)(void, void, void, void, void))sub_10056B254);
}

uint64_t sub_10056E41C()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10056E464()
{
  return sub_10056E47C((uint64_t (*)(void, void, void, void, void))sub_10056B370);
}

uint64_t sub_10056E47C(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10056E494()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10056E4CC(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  return sub_100569608(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32));
}

uint64_t sub_10056E4D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10056E4E8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10056E510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10056E558(uint64_t *a1@<X0>, void *a2@<X8>)
{
}

uint64_t destroy for DOCPersonSuggester.DOCPerson()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s5Files18DOCPersonSuggesterC9DOCPersonVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DOCPersonSuggester.DOCPerson(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DOCPersonSuggester.DOCPerson(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DOCPersonSuggester.DOCPerson()
{
  return &type metadata for DOCPersonSuggester.DOCPerson;
}

unint64_t sub_10056E6BC()
{
  unint64_t result = qword_10071CB20;
  if (!qword_10071CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CB20);
  }
  return result;
}

void sub_10056E78C()
{
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC5FilesP33_A5A64235B1E100244B7B9EBD6441597E28DOCPlaceHolderViewController_location));
}

id sub_10056E8B4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCFakeFPItemDecoration();
  return [super dealloc];
}

void sub_10056E900()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v4 setNumberStyle:3];
  [v4 setMaximumFractionDigits:0];
  [v4 setMinimumFractionDigits:0];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  qword_1007377D8 = (uint64_t)v4;
}

uint64_t DOCItemCollectionCellContent.node.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t DOCItemCollectionCellContent.node.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  *uint64_t v3 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  sub_10008FA2C();
  return swift_unknownObjectRelease();
}

void (*DOCItemCollectionCellContent.node.modify(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_10056EB64;
}

void sub_10056EB64(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_10008FA2C();
  }
}

id DOCItemCollectionCellContent.__deallocating_deinit()
{
  sub_1000D6480();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCItemCollectionCellContent();
  return [super dealloc];
}

void DOCItemCollectionCellContent.observeValue(forKeyPath:of:change:context:)(uint64_t a1, uint64_t a2, uint64_t a3, Class isa, void *a5)
{
  if (a5 && a5 == &unk_10071CC00)
  {
    sub_100053674(a3, (uint64_t)v25);
    uint64_t v9 = swift_allocObject();
    sub_1000CBE0C((uint64_t)v25, v9 + 16, (uint64_t *)&unk_100705D60);
    *(void *)(v9 + 48) = v5;
    uint64_t v23 = sub_10056F098;
    uint64_t v24 = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    uint64_t v22 = &unk_1006B8250;
    size_t v10 = _Block_copy(aBlock);
    id v11 = v5;
    swift_release();
    DOCRunInMainThread();
    _Block_release(v10);
    return;
  }
  if (a2) {
    NSString v12 = String._bridgeToObjectiveC()();
  }
  else {
    NSString v12 = 0;
  }
  sub_100053674(a3, (uint64_t)aBlock);
  unint64_t v13 = v22;
  if (!v22)
  {
    uint64_t v19 = 0;
    if (!isa) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v14 = sub_1000A6B78(aBlock, (uint64_t)v22);
  uint64_t v15 = *(v13 - 1);
  double v16 = __chkstk_darwin(v14);
  int64_t v18 = (char *)aBlock - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v18, v16);
  uint64_t v19 = _bridgeAnythingToObjectiveC<A>(_:)();
  (*(void (**)(char *, void *))(v15 + 8))(v18, v13);
  sub_10009B1B8((uint64_t)aBlock);
  if (isa)
  {
LABEL_9:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_100094E5C(&qword_100705B08, type metadata accessor for NSKeyValueChangeKey);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  }
LABEL_10:
  uint64_t v20 = (objc_class *)type metadata accessor for DOCItemCollectionCellContent();
  v26.receiver = v5;
  v26.super_class = v20;
  [super observeValueForKeyPath:v12 ofObject:v19 change:isa context:a5];

  swift_unknownObjectRelease();
}

void sub_10056EEA0(uint64_t a1, uint64_t a2)
{
  sub_100053674(a1, (uint64_t)v15);
  if (!v16)
  {
    sub_1000CBBA4((uint64_t)v15, (uint64_t *)&unk_100705D60);
    goto LABEL_8;
  }
  sub_10009E6C4(0, &qword_10070EB70);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    uint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
LABEL_9:
    if (!v3) {
      return;
    }
    goto LABEL_10;
  }
  uint64_t v3 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress);
  if (!v14) {
    goto LABEL_9;
  }
  if (v3)
  {
    id v4 = v3;
    id v5 = v14;
    char v6 = static NSObject.== infix(_:_:)();

    if (v6) {
      return;
    }
  }
  else
  {
  }
LABEL_10:
  uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  unsigned int v8 = (void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  *unsigned int v8 = 0;
  v8[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeCompactWidthTextTableSubtitle);
  *uint64_t v9 = 0;
  v9[1] = 0;
  swift_bridgeObjectRelease();
  size_t v10 = (void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__largeRegularWidthTextTableSubtitle);
  *size_t v10 = 0;
  v10[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v11 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) | 0x84;
  if ((~*(_DWORD *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) & 0x84) != 0) {
    *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v12;
  }
  if (!*(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_1000CBC64())
  {
    *(void *)(a2 + v11) = 0;
    sub_100090F98(v12, a2);
  }
}

uint64_t sub_10056F050()
{
  if (*(void *)(v0 + 40)) {
    sub_10009B1B8(v0 + 16);
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_10056F098()
{
  sub_10056EEA0(v0 + 16, *(void *)(v0 + 48));
}

void DOCItemCollectionCellContent.thumbnailLoaded(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a1;
  v5[4] = sub_100066720;
  v5[5] = v3;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  uint64_t v5[2] = sub_1000666D8;
  v5[3] = &unk_1006B82C8;
  id v4 = _Block_copy(v5);
  swift_unknownObjectRetain();
  swift_release();
  DOCRunInMainThread();
  _Block_release(v4);
}

uint64_t sub_10056F2E4()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10056F320(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle + 8);
  if (v4)
  {
    if (a2)
    {
      BOOL v5 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_inflightRenameTitle) == a1 && v4 == a2;
      if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        return;
      }
    }
  }
  else if (!a2)
  {
    return;
  }
  char v6 = (void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__title);
  void *v6 = 0;
  v6[1] = 0;
  swift_bridgeObjectRelease();
  sub_1000951C8((uint64_t)v13);
  uint64_t v7 = v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags;
  sub_1000CBE0C(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithTags, (uint64_t)v14, &qword_100705560);
  sub_1000CBE0C((uint64_t)v13, v7, &qword_100705560);
  sub_10009A828(v14, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009A89C);
  unsigned int v8 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags) = 0;

  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle) = 0;

  uint64_t v10 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
  if ((v11 & 1) == 0)
  {
    v11 |= 1uLL;
    *(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v11;
  }
  if (!*(void *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
    && !sub_1000CBC64())
  {
    *(void *)(v2 + v10) = 0;
    sub_100090F98(v11, v2);
  }
}

double sub_10056F47C(void *a1)
{
  uint64_t v3 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v7 = sub_10009BA18();
  unsigned int v8 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v7 - 3 < 3 || v7 != 8)
  {
    if (v8)
    {
      id v9 = v8;
      [v9 displayScale];
    }
    else
    {
      id v10 = [self mainScreen];
      [v10 scale];

      id v9 = 0;
    }
    [a1 capHeight];
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for FloatingPointRoundingRule.down(_:), v3);
    CGFloat.init(_:roundedBy:inScale:)();
  }
  return 4.0;
}

id sub_10056F624()
{
  return sub_10009B69C((SEL *)&selRef_quaternaryLabelColor, &OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__suffixColor);
}

void sub_10056F638(CGContext *a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v6 = (char *)Strong;
    id v7 = [a3 CGImage];
    if (v7)
    {
      unsigned int v8 = v7;
      [a3 size];
      CGFloat v10 = v9;
      CGFloat v12 = v11;
      CGContextRef.draw(_:in:byTiling:)();
      CGContextSetBlendMode(a1, kCGBlendModeSourceIn);
      unint64_t v13 = (CGColor *)[*(id *)&v6[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_trailingAttachmentcolor] CGColor];
      CGContextSetFillColorWithColor(a1, v13);

      v14.origin.CGFloat x = 0.0;
      v14.origin.CGFloat y = 0.0;
      v14.size.CGFloat width = v10;
      v14.size.CGFloat height = v12;
      CGContextFillRect(a1, v14);
    }
  }
}

void sub_10056F750()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags;
  id v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__titleWithIconAndTags);
  if (v7) {
    goto LABEL_29;
  }
  sub_1000CBE0C(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v89, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v89, (uint64_t)v90, (uint64_t *)&unk_10070AD40);
  if (sub_1000CBEB4(v90) == 1)
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  unsigned int v8 = (void *)v90[0];
  double v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  uint64_t v10 = *v9;
  id v11 = v8;
  if (v10)
  {
    sub_100094988();
    CGFloat v12 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
    if (v12)
    {
      id v13 = [v12 thumbnail];
      id v14 = [objc_allocWithZone((Class)NSTextAttachment) init];
      [v13 size];
      double v16 = v15;
      [v13 size];
      double v18 = v16 / v17;
      [v11 lineHeight];
      double v20 = v19;
      [v11 descender];
      [v14 setBounds:0.0, v21, v18 * v20, v20];
      unsigned __int8 v22 = sub_1000948A0();
      id v87 = v14;
      id v85 = v13;
      if (v22)
      {
        id v23 = [objc_allocWithZone((Class)DOCBorderedFittingImageView) initWithImage:v13];
        [v23 setAddDecoration:1];
        id v24 = v23;
        [v14 bounds];
        [v24 setFrame:0.0, 0.0];

        id v25 = v24;
        [v14 bounds];
        [v25 setFittingSize:v26, v27];

        [v25 bounds];
        v91.CGFloat width = v28;
        v91.CGFloat height = v29;
        UIGraphicsBeginImageContextWithOptions(v91, 0, 0.0);
        uint64_t v30 = UIGraphicsGetCurrentContext();
        if (v30)
        {
          long long v31 = v30;
          id v32 = [v25 layer];
          [v32 renderInContext:v31];

          id v14 = v87;
        }
        long long v33 = UIGraphicsGetImageFromCurrentImageContext();
        UIGraphicsEndImageContext();
        [v14 setImage:v33];
      }
      else
      {
        [v14 setImage:v13];
      }
      uint64_t v83 = sub_1000CBE70((uint64_t *)&unk_100706750);
      uint64_t inited = swift_initStackObject();
      long long v82 = xmmword_10059B760;
      *(_OWORD *)(inited + 16) = xmmword_10059B760;
      *(void *)(inited + 32) = NSFontAttributeName;
      uint64_t v41 = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
      *(void *)(inited + 40) = v11;
      uint64_t v81 = v41;
      *(void *)(inited + 64) = v41;
      *(void *)(inited + 72) = NSForegroundColorAttributeName;
      id v77 = v11;
      id v42 = v11;
      uint64_t v80 = NSFontAttributeName;
      uint64_t v79 = NSForegroundColorAttributeName;
      id v43 = sub_10009B76C();
      uint64_t v78 = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
      *(void *)(inited + 104) = v78;
      *(void *)(inited + 80) = v43;
      unint64_t v84 = sub_10009CC48(inited);
      uint64_t v86 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection;
      uint64_t v44 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
      if (v44)
      {
        [v44 displayScale];
      }
      else
      {
        id v45 = [self mainScreen];
        [v45 scale];
      }
      [v42 capHeight];
      (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for FloatingPointRoundingRule.down(_:), v2);
      CGFloat.init(_:roundedBy:inScale:)();
      if (v46 < 5.0) {
        double v47 = 10.0;
      }
      else {
        double v47 = v46 + v46;
      }
      sub_10009B86C();
      swift_bridgeObjectRetain();
      sub_10009B780();
      uint64_t v48 = swift_initStackObject();
      *(_OWORD *)(v48 + 16) = v82;
      uint64_t v50 = v80;
      uint64_t v49 = v81;
      *(void *)(v48 + 32) = v80;
      *(void *)(v48 + 40) = v42;
      uint64_t v51 = v79;
      *(void *)(v48 + 64) = v49;
      *(void *)(v48 + 72) = v51;
      id v52 = v42;
      swift_bridgeObjectRetain();
      id v53 = v50;
      NSString v54 = v51;
      id v55 = sub_10009B76C();
      *(void *)(v48 + 104) = v78;
      *(void *)(v48 + 80) = v55;
      sub_10009CC48(v48);
      sub_10009E6C4(0, &qword_10070E2D0);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      NSString v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_100094E5C((unint64_t *)&qword_100706230, type metadata accessor for Key);
      Class v58 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      Class v59 = (Class)[self requestForChainedTags:isa tagDimension:v57 text:v58 textAttributes:v47];

      if (v59)
      {
        swift_bridgeObjectRelease();
        [(objc_class *)v59 setTagToTitleSpacing:8.0];
        [(objc_class *)v59 setTagBaselineAdjustment:0.0];
        uint64_t v60 = *(void **)(v1 + v86);
        uint64_t v61 = v59;
        if (v60) {
          BOOL v62 = [v60 layoutDirection] == (id)1;
        }
        else {
          BOOL v62 = 0;
        }
        id v11 = v77;
        id v66 = v87;
        uint64_t v67 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
        [(objc_class *)v59 setLayoutDirection:v62];

        NSString v64 = [self shared];
        id v65 = [v64 renderAttributedStringWithRequest:v59];
      }
      else
      {
        sub_10009B780();
        id v63 = objc_allocWithZone((Class)NSAttributedString);
        swift_bridgeObjectRetain();
        NSString v64 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class v59 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v65 = [v63 initWithString:v64 attributes:v59];
        id v11 = v77;
        id v66 = v87;
        uint64_t v67 = &selRef_contextMenuInteraction_previewForHighlightingMenuWithConfiguration_;
      }

      id v68 = [self attributedStringWithAttachment:v66];
      id v69 = [objc_allocWithZone((Class)NSMutableAttributedString) v67[407]];
      type metadata accessor for DOCUnicode();
      long long v70 = (void *)static DOCUnicode.nonBreakingSpace_zeroWidth.getter();
      NSMutableAttributedString.append(_:)();

      [v69 appendAttributedString:v68];
      long long v71 = (void *)static DOCUnicode.nonBreakingSpace.getter();
      NSMutableAttributedString.append(_:)();

      id v72 = [v65 wrappedInDirectionalIsolation:0];
      [v69 appendAttributedString:v72];

      id v88 = v69;
      long long v73 = *(void **)(v1 + v86);
      if (v73) {
        [v73 layoutDirection];
      }
      sub_10009E6C4(0, (unint64_t *)&qword_100709D50);
      BidiDirectionalIsolationUpdating.wrapInDirectionalIsolation(_:)();
      int v39 = *(void **)(v1 + v6);
      *(void *)(v1 + v6) = v69;

LABEL_27:
      uint64_t v74 = *(void **)(v1 + v6);
      if (v74)
      {
        v74;

        id v7 = 0;
LABEL_29:
        id v75 = v7;
        return;
      }
      goto LABEL_31;
    }
  }
  uint64_t v34 = *(void **)(v1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_appearance);
  if (v34)
  {
    id v35 = [v34 collectionCreateButtonTitle];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v36 = objc_allocWithZone((Class)NSAttributedString);
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v38 = [v36 initWithString:v37];

    int v39 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v38;
    goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100570110(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v13 = (char *)result;
    id v14 = *(id *)(result + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sizeLock);
    uint64_t v21 = v5;
    uint64_t v22 = v8;
    id v15 = v14;
    [v14 lock];
    double v16 = &v13[OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__size];
    *(void *)double v16 = a1;
    *((void *)v16 + 1) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    [v15 unlock];

    sub_10009E6C4(0, (unint64_t *)&qword_100705380);
    double v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1005741AC;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000666D8;
    void aBlock[3] = &unk_1006B83A8;
    double v19 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100094E5C((unint64_t *)&qword_100706770, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_1000CBE70((uint64_t *)&unk_100705390);
    sub_10009449C((unint64_t *)&qword_100706780, (uint64_t *)&unk_100705390);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
  }
  return result;
}

void sub_100570478()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications;
    uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications);
    if ((v3 & 0x80) == 0)
    {
      v3 |= 0x80uLL;
      *(void *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_pendingNotifications) = v3;
    }
    if (!*(void *)(Strong + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_disabledNotificationCount)
      && !sub_1000CBC64())
    {
      *(void *)&v1[v2] = 0;
      sub_100090F98(v3, (uint64_t)v1);
    }
  }
}

uint64_t sub_100570524(uint64_t result, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress);
  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_lastPartialProgress + 8)) {
    goto LABEL_9;
  }
  uint64_t v4 = *v3;
  uint64_t v5 = result - *v3;
  if (__OFSUB__(result, *v3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5 < 0)
  {
    BOOL v6 = __OFSUB__(0, v5);
    uint64_t v5 = *v3 - result;
    if (v6) {
      goto LABEL_15;
    }
  }
  double v7 = (double)a2 * 0.05;
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0) {
    goto LABEL_12;
  }
  if (v7 > -9.22337204e18)
  {
    if (v7 < 9.22337204e18)
    {
      if (v5 <= (uint64_t)v7) {
        return v4;
      }
LABEL_9:
      *uint64_t v3 = result;
      *((unsigned char *)v3 + 8) = 0;
      return result;
    }
    goto LABEL_14;
  }
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

id sub_1005705C8()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (!*v1) {
    return 0;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (!v2) {
    return 0;
  }
  sub_1000CBE0C(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v13, (uint64_t *)&unk_100705550);
  sub_1000CBE0C((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100705550);
  if (sub_1000CBEB4(v14) == 1) {
    return 0;
  }
  id v3 = v2;
  sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
  uint64_t v4 = (void *)sub_1000A3D9C();
  if (!v4)
  {
    sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);

    return 0;
  }
  uint64_t v5 = v4;
  double v6 = *(double *)&v14[19];
  double v7 = *(double *)&v14[20];
  NSString v8 = [v4 imageType];
  if (!v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = self;
  [v3 displayScale];
  id v11 = [v9 vendorBadgeDecorationForType:v8 size:v6 scale:v7];

  sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
  return v11;
}

id sub_100570784()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  uint64_t v2 = *v1;
  if (!v2) {
    return 0;
  }
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  if (v3)
  {
    sub_1000CBE0C(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_gridItemLayoutTraits, (uint64_t)v13, (uint64_t *)&unk_100705550);
    sub_1000CBE0C((uint64_t)v13, (uint64_t)v14, (uint64_t *)&unk_100705550);
    if (sub_1000CBEB4(v14) != 1)
    {
      id v4 = v3;
      swift_unknownObjectRetain();
      sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_100097430);
      uint64_t v5 = sub_100570920(v2);
      if ((v6 & 1) == 0)
      {
        uint64_t v7 = v5;
        double v8 = *(double *)&v14[19];
        double v9 = *(double *)&v14[20];
        double v10 = self;
        [v4 displayScale];
        id v3 = [v10 itemAccessDecorationForType:v7 size:v8 scale:v9];
        swift_unknownObjectRelease();

        sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
        return v3;
      }
      sub_1000958FC(v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1000973E0);
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return v3;
}

uint64_t sub_100570920(void *a1)
{
  if (([a1 isReadable] & 1) == 0
    && ([a1 isWritable] & 1) != 0)
  {
    return 1;
  }
  if (([a1 isReadable] & 1) != 0 || objc_msgSend(a1, "isWritable")) {
    return 0;
  }
  return 2;
}

uint64_t DOCItemCollectionCellContent.thumbnail.getter()
{
  sub_100094988();

  return swift_unknownObjectRetain();
}

uint64_t sub_1005709DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v4 = a3();
    uint64_t v6 = v5;
    swift_beginAccess();
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100570A78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  else
  {
    uint64_t v4 = a3();
    uint64_t v6 = v5;
    swift_beginAccess();
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_100570B10(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24))
  {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  else
  {
    if (*(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8))
    {
      uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName);
      unint64_t v4 = *(void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__sourceName + 8);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = (void *)(a2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
      swift_beginAccess();
      if (!*v5) {
        goto LABEL_9;
      }
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v8);
      swift_unknownObjectRelease();
      sub_1000CBE0C((uint64_t)v8, (uint64_t)v9, (uint64_t *)&unk_10071CDF0);
      if (v9[0] == 1) {
        goto LABEL_9;
      }
      uint64_t v3 = v9[8];
      unint64_t v4 = v9[9];
      swift_bridgeObjectRetain();
      sub_1002B9150((uint64_t)v8);
      if (v4)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_9:
        swift_bridgeObjectRelease();
        uint64_t v3 = 0;
        unint64_t v4 = 0xE000000000000000;
      }
    }
    swift_beginAccess();
    *(void *)(a1 + 16) = v3;
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_100570C64(uint64_t a1, void *a2)
{
  sub_1000CBE0C(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v35, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v35, (uint64_t)v36, (uint64_t *)&unk_10070AD40);
  uint64_t result = sub_1000CBEB4(v36);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    char v5 = v37;
    uint64_t v6 = sub_100093FD0();
    unint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000929F0();
    unint64_t v11 = v10;
    uint64_t v12 = (uint64_t)sub_100092EFC();
    unint64_t v14 = v13;
    id v15 = (id *)(v2 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    if (*v15 && [*v15 isExternalDownloadPlaceholder])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12;
    }
    else if ((v5 & 8) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = HIBYTE(v8) & 0xF;
      if ((v8 & 0x2000000000000000) == 0) {
        uint64_t v22 = v6 & 0xFFFFFFFFFFFFLL;
      }
      if (v22) {
        uint64_t v23 = v6;
      }
      else {
        uint64_t v23 = v12;
      }
      swift_bridgeObjectRelease();
      return v23;
    }
    else
    {
      sub_100092D1C();
      uint64_t v33 = v16;
      unint64_t v34 = v17;
      uint64_t v18 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v18 = v9 & 0xFFFFFFFFFFFFLL;
      }
      if (v18)
      {
        if ((v17 & 0x2000000000000000) != 0) {
          uint64_t v19 = HIBYTE(v17) & 0xF;
        }
        else {
          uint64_t v19 = v16 & 0xFFFFFFFFFFFFLL;
        }
        swift_bridgeObjectRetain();
        if (v19)
        {
          v20._uint64_t countAndFlagsBits = 0x209380E220;
          v20._uint64_t object = (void *)0xA500000000000000;
          String.append(_:)(v20);
        }
        v21._uint64_t countAndFlagsBits = v9;
        v21._uint64_t object = (void *)v11;
        String.append(_:)(v21);
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      uint64_t v24 = v14 & 0x2000000000000000;
      uint64_t v25 = HIBYTE(v14) & 0xF;
      uint64_t v26 = v12 & 0xFFFFFFFFFFFFLL;
      if ((v14 & 0x2000000000000000) != 0) {
        uint64_t v27 = HIBYTE(v14) & 0xF;
      }
      else {
        uint64_t v27 = v12 & 0xFFFFFFFFFFFFLL;
      }
      if (v27)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = v8 & 0x2000000000000000;
        uint64_t v25 = HIBYTE(v8) & 0xF;
        uint64_t v26 = v6 & 0xFFFFFFFFFFFFLL;
        uint64_t v12 = v6;
        unint64_t v14 = v8;
      }
      if (v24) {
        uint64_t v28 = v25;
      }
      else {
        uint64_t v28 = v26;
      }
      if (v28)
      {
        uint64_t v29 = v33 & 0xFFFFFFFFFFFFLL;
        if ((v34 & 0x2000000000000000) != 0) {
          uint64_t v29 = HIBYTE(v34) & 0xF;
        }
        if (v29)
        {
          v30._uint64_t countAndFlagsBits = a1;
          v30._uint64_t object = a2;
          String.append(_:)(v30);
        }
        v31._uint64_t countAndFlagsBits = v12;
        v31._uint64_t object = (void *)v14;
        String.append(_:)(v31);
      }
      swift_bridgeObjectRelease();
    }
    return v33;
  }
  return result;
}

uint64_t sub_100570EAC()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__listAccessory);
  if (v2 != 2) {
    return v2 & 1;
  }
  uint64_t v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (!*v3) {
    goto LABEL_15;
  }
  if (![(id)swift_unknownObjectRetain() isActionable]
    || (unint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_loadingProgress)) != 0
    && ![v4 isFinished])
  {
LABEL_14:
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  uint64_t v5 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  int v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
  if (v6 == 2)
  {
    if (*v3)
    {
      unsigned __int8 v7 = [*v3 isFolder];
      *(unsigned char *)(v0 + v5) = v7;
      swift_unknownObjectRelease();
      if ((v7 & 1) == 0) {
        goto LABEL_15;
      }
LABEL_12:
      uint64_t result = 0;
      *(unsigned char *)(v0 + v1) = 0;
      return result;
    }
    *(unsigned char *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder) = 0;
    goto LABEL_14;
  }
  swift_unknownObjectRelease();
  if (v6) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t result = 1;
  *(unsigned char *)(v0 + v1) = 1;
  return result;
}

id sub_100571038()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__isFolder);
  if (v2 != 2) {
    return (id)(v2 & 1);
  }
  uint64_t v3 = (id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  id result = *v3;
  if (*v3)
  {
    id result = [result isFolder];
    *(unsigned char *)(v0 + v1) = (_BYTE)result;
  }
  else
  {
    *(unsigned char *)(v0 + v1) = 0;
  }
  return result;
}

uint64_t type metadata accessor for DOCFakeFPItemDecoration()
{
  return self;
}

uint64_t sub_100571140()
{
  return type metadata accessor for DOCItemCollectionCellContent();
}

unsigned char *storeEnumTagSinglePayload for DOCListAccessoryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100571214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCListAccessoryType()
{
  return &type metadata for DOCListAccessoryType;
}

ValueMetadata *type metadata accessor for DOCItemCollectionCellContent.PendingNotifications()
{
  return &type metadata for DOCItemCollectionCellContent.PendingNotifications;
}

unint64_t sub_100571260()
{
  unint64_t result = qword_10071CDC8;
  if (!qword_10071CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CDC8);
  }
  return result;
}

unint64_t sub_1005712B8()
{
  unint64_t result = qword_10071CDD0;
  if (!qword_10071CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CDD0);
  }
  return result;
}

unint64_t sub_100571310()
{
  unint64_t result = qword_10071CDD8;
  if (!qword_10071CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CDD8);
  }
  return result;
}

unint64_t sub_100571368()
{
  unint64_t result = qword_10071CDE0;
  if (!qword_10071CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CDE0);
  }
  return result;
}

unint64_t sub_1005713C0()
{
  unint64_t result = qword_10071CDE8;
  if (!qword_10071CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CDE8);
  }
  return result;
}

id sub_100571414()
{
  uint64_t v1 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle;
  id result = *(id *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableTitle);
  if (result) {
    return result;
  }
  uint64_t v3 = v0;
  sub_10009B780();
  uint64_t v4 = v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits;
  sub_1000CBE0C(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v58, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v58, (uint64_t)v59, (uint64_t *)&unk_10070AD40);
  id result = (id)sub_1000CBEB4(v59);
  if (result == 1) {
    goto LABEL_21;
  }
  char v5 = v60;
  swift_bridgeObjectRetain();
  if ((v5 & 4) != 0)
  {
    uint64_t v6 = sub_100093FD0();
    unint64_t v7 = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  sub_1000CBE0C(v4, (uint64_t)v56, (uint64_t *)&unk_10070AD40);
  sub_1000CBE0C((uint64_t)v56, (uint64_t)v57, (uint64_t *)&unk_10070AD40);
  id result = (id)sub_1000CBEB4((uint64_t *)v57);
  if (result == 1) {
    goto LABEL_22;
  }
  if ((v7 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v7) & 0xF;
  }
  else {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  id v10 = v57[0];
  if (!v9)
  {
    swift_bridgeObjectRelease();
    sub_1000CBE70((uint64_t *)&unk_100706750);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    id v43 = NSForegroundColorAttributeName;
    id v44 = sub_10009B76C();
    uint64_t v45 = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
    *(void *)(inited + 40) = v44;
    *(void *)(inited + 64) = v45;
    *(void *)(inited + 72) = NSFontAttributeName;
    *(void *)(inited + 104) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
    *(void *)(inited + 80) = v10;
    id v46 = v10;
    double v47 = NSFontAttributeName;
    sub_10009CC48(inited);
    id v48 = objc_allocWithZone((Class)NSAttributedString);
    NSString v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_100094E5C((unint64_t *)&qword_100706230, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v51 = [v48 initWithString:v49 attributes:isa];

    id v52 = *(void **)(v3 + v1);
    *(void *)(v3 + v1) = v51;

    id result = *(id *)(v3 + v1);
    if (result) {
      return result;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  id result = (id)_DocumentManagerBundle();
  if (!result)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  unint64_t v11 = result;
  v61._uint64_t object = (void *)0x8000000100602550;
  v12._uint64_t countAndFlagsBits = 0x25209380E2204025;
  v12._uint64_t object = (void *)0xA900000000000040;
  v13._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
  v13._uint64_t object = (void *)0xEB00000000656C62;
  v14._uint64_t countAndFlagsBits = 0;
  v14._uint64_t object = (void *)0xE000000000000000;
  v61._uint64_t countAndFlagsBits = 0x1000000000000053;
  DOCLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v61);

  id v15 = *(void **)(v3 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__traitCollection);
  uint64_t v54 = v1;
  if (v15) {
    [v15 layoutDirection];
  }
  BidiDirectionalIsolationReturning.wrappedInDirectionalIsolation(_:)();
  swift_bridgeObjectRelease();
  uint64_t v16 = String.wrappedInDirectionalIsolation(_:)();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = String.wrappedInDirectionalIsolation(_:)();
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10059B760;
  *(void *)(v22 + 56) = &type metadata for String;
  unint64_t v23 = sub_100073F48();
  *(void *)(v22 + 32) = v16;
  *(void *)(v22 + 40) = v18;
  *(void *)(v22 + 96) = &type metadata for String;
  *(void *)(v22 + 104) = v23;
  *(void *)(v22 + 64) = v23;
  *(void *)(v22 + 72) = v19;
  *(void *)(v22 + 80) = v21;
  swift_bridgeObjectRetain();
  String.init(format:_:)();
  swift_bridgeObjectRelease();
  sub_1000CBE70((uint64_t *)&unk_100706750);
  uint64_t v24 = swift_initStackObject();
  *(_OWORD *)(v24 + 16) = xmmword_10059B760;
  *(void *)(v24 + 32) = NSForegroundColorAttributeName;
  id v53 = NSForegroundColorAttributeName;
  id v25 = sub_10056F624();
  uint64_t v26 = sub_10009E6C4(0, (unint64_t *)&qword_1007088B0);
  *(void *)(v24 + 40) = v25;
  *(void *)(v24 + 64) = v26;
  *(void *)(v24 + 72) = NSFontAttributeName;
  *(void *)(v24 + 104) = sub_10009E6C4(0, (unint64_t *)&unk_10070AD10);
  *(void *)(v24 + 80) = v10;
  id v55 = v10;
  uint64_t v27 = NSFontAttributeName;
  sub_10009CC48(v24);
  id v28 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_100094E5C((unint64_t *)&qword_100706230, type metadata accessor for Key);
  Class v30 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v31 = [v28 initWithString:v29 attributes:v30];

  id result = [v31 string];
  if (!result) {
    goto LABEL_24;
  }
  id v32 = result;
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v34 = [v32 rangeOfString:v33];
  uint64_t v36 = v35;

  if (v34 != (id)NSNotFound.getter())
  {
    uint64_t v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_1005A0030;
    *(void *)(v37 + 32) = v53;
    id v38 = v53;
    id v39 = sub_10009B76C();
    *(void *)(v37 + 64) = v26;
    *(void *)(v37 + 40) = v39;
    sub_10009CC48(v37);
    Class v40 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v31 addAttributes:v40 range:v34];
  }
  uint64_t v41 = *(void **)(v3 + v54);
  *(void *)(v3 + v54) = v31;

  id result = *(id *)(v3 + v54);
  if (!result) {
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_100571AD8()
{
  uint64_t v4 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle);
  if (!*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__tableSubtitle + 8))
  {
    sub_1000CBE0C(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_listItemLayoutTraits, (uint64_t)v197, (uint64_t *)&unk_10070AD40);
    sub_1000CBE0C((uint64_t)v197, (uint64_t)v198, (uint64_t *)&unk_10070AD40);
    if (sub_1000CBEB4(v198) == 1)
    {
      __break(1u);
      goto LABEL_347;
    }
    uint64_t v5 = v198[2];
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0;
    uint64_t v1 = swift_allocObject();
    *(void *)(v1 + 16) = 0;
    *(void *)(v1 + 24) = 0;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = 0;
    *(void *)(v7 + 24) = 0;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = 0;
    *(void *)(v2 + 24) = 0;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = 0;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = 0;
    *(void *)(v8 + 24) = 0;
    uint64_t v186 = v8;
    uint64_t v9 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
    swift_beginAccess();
    uint64_t v185 = v0;
    if (*v9)
    {
      uint64_t v184 = v5;
      uint64_t v5 = v6;
      uint64_t v10 = v3;
      uint64_t v11 = v1;
      uint64_t v12 = v2;
      uint64_t v13 = v7;
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      sub_100093E64(ObjectType, (uint64_t)v199);
      swift_unknownObjectRelease();
      sub_1000CBE0C((uint64_t)v199, (uint64_t)v200, (uint64_t *)&unk_10071CDF0);
      if (v200[0] != 1)
      {
        v201[0] = *(_OWORD *)&v200[4];
        v201[1] = *(_OWORD *)&v200[6];
        v201[2] = *(_OWORD *)&v200[8];
        *(_OWORD *)&v200[11] = *(_OWORD *)v200;
        *(_OWORD *)&v200[13] = *(_OWORD *)&v200[2];
        sub_1000CBE0C((uint64_t)v201, (uint64_t)v202, (uint64_t *)&unk_10070BD50);
        sub_10021FE8C((uint64_t)v202);
        sub_1002B9150((uint64_t)v199);
        sub_1000CBE0C((uint64_t)v202, (uint64_t)&v203, (uint64_t *)&unk_10070BD50);
        uint64_t i = v204;
        if (v204)
        {
          uint64_t v16 = v203;
          uint64_t v2 = v12;
          uint64_t v1 = v11;
          uint64_t v3 = v10;
          goto LABEL_168;
        }
      }
      uint64_t v7 = v13;
      uint64_t v2 = v12;
      uint64_t v1 = v11;
      uint64_t v3 = v10;
      uint64_t v6 = v5;
      LOBYTE(v5) = v184;
      if (*v9)
      {
        if ([(id)swift_unknownObjectRetain() isExternalDownloadPlaceholder])
        {
          uint64_t v16 = sub_100570A78(v2, v0, (uint64_t (*)(void))sub_100092EFC);
          uint64_t i = v17;
          swift_unknownObjectRelease();
          goto LABEL_168;
        }
        swift_unknownObjectRelease();
      }
    }
    if ((v5 & 8) != 0)
    {
      uint64_t v36 = sub_1005709DC(v1, v0, sub_100093FD0);
      unint64_t v38 = v37;
      swift_bridgeObjectRelease();
      uint64_t v39 = HIBYTE(v38) & 0xF;
      if ((v38 & 0x2000000000000000) == 0) {
        uint64_t v39 = v36 & 0xFFFFFFFFFFFFLL;
      }
      if (v39)
      {
        uint64_t v40 = sub_1005709DC(v1, v0, sub_100093FD0);
LABEL_51:
        uint64_t v16 = v40;
        uint64_t i = v41;
        goto LABEL_168;
      }
      uint64_t v52 = v2;
      uint64_t v53 = v0;
LABEL_50:
      uint64_t v40 = sub_100570A78(v52, v53, (uint64_t (*)(void))sub_100092EFC);
      goto LABEL_51;
    }
    uint64_t v183 = v6;
    if ((v5 & 2) == 0)
    {
      uint64_t v18 = sub_1005709DC(v6, v0, (uint64_t (*)(void))sub_100092D1C);
      uint64_t v19 = v0;
      uint64_t v21 = v20;
      uint64_t v178 = v1;
      uint64_t v22 = sub_1005709DC(v1, v0, sub_100093FD0);
      uint64_t v24 = v23;
      uint64_t v182 = sub_100570A78(v7, v19, sub_1000929F0);
      uint64_t v26 = v25;
      uint64_t v177 = v2;
      uint64_t v179 = v3;
      uint64_t v180 = sub_100570A78(v2, v19, (uint64_t (*)(void))sub_100092EFC);
      uint64_t v28 = v27;
      uint64_t v29 = v19;
      uint64_t v30 = v22;
      uint64_t v172 = sub_100570B10(v3, v29);
      uint64_t v32 = v31;
      uint64_t v184 = v21;
      if (v18) {
        BOOL v33 = 0;
      }
      else {
        BOOL v33 = v21 == 0xE000000000000000;
      }
      uint64_t v34 = v26;
      int v35 = v33;
      if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_66;
      }
      if (!v30 && v24 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v182 && v26 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && (!v180 && v28 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v1 = v178;
        uint64_t v3 = v179;
        uint64_t v2 = v177;
LABEL_122:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = sub_100570B10(v3, v185);
LABEL_123:
        uint64_t v16 = v78;
        uint64_t i = v79;
        goto LABEL_168;
      }
      if ((v35 & 1) == 0)
      {
LABEL_66:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_94;
        }
      }
      int v171 = v35;
      uint64_t v3 = v179;
      uint64_t v173 = v26;
      uint64_t v174 = v28;
      uint64_t v181 = v7;
      uint64_t v2 = v177;
      uint64_t v1 = v178;
      if (!v30 && v24 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (sub_1000943F0(v186) == v182 && v65 == v173)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v68 & 1) == 0) {
            goto LABEL_93;
          }
        }
        if (!v180 && v174 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_122;
        }
      }
LABEL_93:
      uint64_t v7 = v181;
      uint64_t v34 = v173;
      uint64_t v28 = v174;
      int v35 = v171;
      if (v171)
      {
LABEL_95:
        if (!v30 && v24 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
          && (!v182 && v34 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v177;
          uint64_t v1 = v178;
LABEL_132:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v179;
LABEL_164:
          uint64_t v95 = v185;
          uint64_t v96 = sub_100570B10(v3, v185);
          goto LABEL_165;
        }
        if (v35)
        {
LABEL_106:
          uint64_t v175 = v28;
          uint64_t v71 = v24;
          uint64_t v72 = v34;
          uint64_t v73 = v71;
          uint64_t v74 = v7;
          if (!v30 && v71 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            if (sub_1000943F0(v186) == v182 && v75 == v72)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
LABEL_131:
              uint64_t v2 = v177;
              uint64_t v1 = v178;
              goto LABEL_132;
            }
            char v80 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v80)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_131;
            }
          }
          uint64_t v7 = v74;
          uint64_t v28 = v175;
          uint64_t v81 = v73;
          uint64_t v34 = v72;
          uint64_t v24 = v81;
          if (v35)
          {
LABEL_135:
            if (!v30 && v24 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
              && (!v180 && v28 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v16 = sub_100570A78(v7, v185, sub_1000929F0);
              uint64_t i = v82;
              uint64_t v1 = v178;
              uint64_t v3 = v179;
              uint64_t v2 = v177;
              goto LABEL_168;
            }
            if (v35)
            {
LABEL_150:
              if (!v30 && v24 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v187 = sub_100570A78(v7, v185, sub_1000929F0);
                uint64_t v192 = v85;
                v86._uint64_t countAndFlagsBits = 2108704;
                v86._uint64_t object = (void *)0xE300000000000000;
                String.append(_:)(v86);
                uint64_t v2 = v177;
                v87._uint64_t countAndFlagsBits = sub_100570A78(v177, v185, (uint64_t (*)(void))sub_100092EFC);
                String.append(_:)(v87);
                swift_bridgeObjectRelease();
                uint64_t v16 = v187;
                uint64_t i = v192;
                uint64_t v1 = v178;
                uint64_t v3 = v179;
                goto LABEL_168;
              }
              if (v35)
              {
LABEL_180:
                if (!v180 && v28 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
                  && (!v172 && v32 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v1 = v178;
                  uint64_t v16 = sub_1005709DC(v178, v185, sub_100093FD0);
                  uint64_t i = v102;
                  uint64_t v3 = v179;
                  uint64_t v2 = v177;
                  goto LABEL_168;
                }
                if (v35)
                {
LABEL_189:
                  if (!v180 && v28 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    uint64_t v1 = v178;
                    uint64_t v189 = sub_1005709DC(v178, v185, sub_100093FD0);
                    uint64_t v194 = v103;
                    v104._uint64_t countAndFlagsBits = 2108704;
                    v104._uint64_t object = (void *)0xE300000000000000;
                    String.append(_:)(v104);
                    uint64_t v3 = v179;
                    v105._uint64_t countAndFlagsBits = sub_100570B10(v179, v185);
                    String.append(_:)(v105);
                    swift_bridgeObjectRelease();
                    uint64_t v16 = v189;
                    uint64_t i = v194;
                    uint64_t v2 = v177;
                    goto LABEL_168;
                  }
                  if (v35)
                  {
LABEL_206:
                    if (!v172 && v32 == 0xE000000000000000
                      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v1 = v178;
                      uint64_t v190 = sub_1005709DC(v178, v185, sub_100093FD0);
                      uint64_t v195 = v108;
                      v109._uint64_t countAndFlagsBits = 2108704;
                      v109._uint64_t object = (void *)0xE300000000000000;
                      String.append(_:)(v109);
                      uint64_t v2 = v177;
                      v110._uint64_t countAndFlagsBits = sub_100570A78(v177, v185, (uint64_t (*)(void))sub_100092EFC);
                      String.append(_:)(v110);
                      swift_bridgeObjectRelease();
                      uint64_t v16 = v190;
                      uint64_t i = v195;
                      uint64_t v3 = v179;
                      goto LABEL_168;
                    }
                    if (v35)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
LABEL_221:
                      uint64_t v1 = v178;
                      uint64_t v3 = v179;
                      uint64_t v2 = v177;
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v188 = sub_1005709DC(v178, v185, sub_100093FD0);
                      uint64_t v193 = v112;
                      v113._uint64_t countAndFlagsBits = 2108704;
                      v113._uint64_t object = (void *)0xE300000000000000;
                      String.append(_:)(v113);
                      v114._uint64_t countAndFlagsBits = sub_100570B10(v179, v185);
                      String.append(_:)(v114);
                      swift_bridgeObjectRelease();
                      v115._uint64_t countAndFlagsBits = 2108704;
                      v115._uint64_t object = (void *)0xE300000000000000;
                      String.append(_:)(v115);
                      uint64_t v99 = v177;
                      uint64_t v100 = v185;
                      goto LABEL_166;
                    }
LABEL_219:
                    uint64_t v170 = v30;
                    uint64_t v181 = v7;
                    uint64_t v176 = v28;
                    char v111 = _stringCompareWithSmolCheck(_:_:expecting:)();
                    swift_bridgeObjectRelease();
                    if (v111)
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      goto LABEL_221;
                    }
                    uint64_t v116 = v32;
                    uint64_t v117 = v34;
                    if (v170) {
                      BOOL v118 = 0;
                    }
                    else {
                      BOOL v118 = v24 == 0xE000000000000000;
                    }
                    int v119 = v118;
                    if (!v118 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                      goto LABEL_260;
                    }
                    if ((!v182 && v117 == 0xE000000000000000
                       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                      && (!v180 && v28 == 0xE000000000000000
                       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                      && (!v172 && v116 == 0xE000000000000000
                       || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v127 = v185;
                      uint64_t v1 = v178;
                      uint64_t v3 = v179;
                      uint64_t v2 = v177;
                      swift_bridgeObjectRelease();
                      uint64_t v128 = v183;
LABEL_275:
                      swift_bridgeObjectRelease();
                      uint64_t v40 = sub_1005709DC(v128, v127, (uint64_t (*)(void))sub_100092D1C);
                      goto LABEL_51;
                    }
                    if ((v119 & 1) == 0)
                    {
LABEL_260:
                      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v1 = v178;
                        uint64_t v3 = v179;
                        uint64_t v2 = v177;
LABEL_277:
                        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                        {
LABEL_286:
                          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
                          {
                            swift_bridgeObjectRelease();
                            goto LABEL_298;
                          }
LABEL_287:
                          uint64_t v184 = v24;
                          if (sub_1000943F0(v186) == v182 && v132 == v117)
                          {
                            swift_bridgeObjectRelease_n();
                          }
                          else
                          {
                            char v133 = _stringCompareWithSmolCheck(_:_:expecting:)();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v133 & 1) == 0) {
                              goto LABEL_296;
                            }
                          }
                          if (!v180 && v176 == 0xE000000000000000
                            || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                          {
                            goto LABEL_295;
                          }
LABEL_296:
                          if (v119)
                          {
                            swift_bridgeObjectRelease();
                            uint64_t v136 = v180;
LABEL_299:
                            if (!v136 && v176 == 0xE000000000000000
                              || (uint64_t v136 = v180, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                            {
                              swift_bridgeObjectRelease();
                              uint64_t v188 = sub_1005709DC(v183, v185, (uint64_t (*)(void))sub_100092D1C);
                              uint64_t v193 = v138;
                              v139._uint64_t countAndFlagsBits = 2108704;
                              v139._uint64_t object = (void *)0xE300000000000000;
                              String.append(_:)(v139);
                              uint64_t v93 = sub_100570A78(v181, v185, sub_1000929F0);
                              goto LABEL_167;
                            }
LABEL_303:
                            if (v136 || v176 != 0xE000000000000000)
                            {
                              char v141 = _stringCompareWithSmolCheck(_:_:expecting:)();
                              swift_bridgeObjectRelease();
                              if ((v141 & 1) == 0)
                              {
                                uint64_t v188 = sub_1005709DC(v183, v185, (uint64_t (*)(void))sub_100092D1C);
                                uint64_t v193 = v149;
                                v150._uint64_t countAndFlagsBits = 2108704;
                                v150._uint64_t object = (void *)0xE300000000000000;
                                String.append(_:)(v150);
                                uint64_t v93 = sub_100570A78(v2, v185, (uint64_t (*)(void))sub_100092EFC);
                                goto LABEL_167;
                              }
                            }
                            else
                            {
                              swift_bridgeObjectRelease();
                            }
                            uint64_t v188 = sub_1005709DC(v183, v185, (uint64_t (*)(void))sub_100092D1C);
                            uint64_t v193 = v142;
                            v143._uint64_t countAndFlagsBits = 2108704;
                            v143._uint64_t object = (void *)0xE300000000000000;
                            String.append(_:)(v143);
                            uint64_t v93 = sub_1005709DC(v1, v185, sub_100093FD0);
                            goto LABEL_167;
                          }
LABEL_298:
                          char v137 = _stringCompareWithSmolCheck(_:_:expecting:)();
                          swift_bridgeObjectRelease();
                          uint64_t v136 = v180;
                          if ((v137 & 1) == 0) {
                            goto LABEL_303;
                          }
                          goto LABEL_299;
                        }
LABEL_278:
                        if ((!v182 && v117 == 0xE000000000000000
                           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                          && (!v180 && v176 == 0xE000000000000000
                           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
                        {
                          swift_bridgeObjectRelease();
LABEL_295:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t v188 = sub_1005709DC(v183, v185, (uint64_t (*)(void))sub_100092D1C);
                          uint64_t v193 = v134;
                          v135._uint64_t countAndFlagsBits = 2108704;
                          v135._uint64_t object = (void *)0xE300000000000000;
                          String.append(_:)(v135);
                          uint64_t v91 = v3;
                          uint64_t v92 = v185;
                          goto LABEL_161;
                        }
                        if (v119) {
                          goto LABEL_287;
                        }
                        goto LABEL_286;
                      }
                    }
                    if (sub_1000943F0(v186) == v182 && v129 == v117)
                    {
                      swift_bridgeObjectRelease();
                    }
                    else
                    {
                      char v130 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if ((v130 & 1) == 0) {
                        goto LABEL_272;
                      }
                    }
                    if (!v180 && v28 == 0xE000000000000000
                      || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      if (!v172 && v116 == 0xE000000000000000)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v128 = v183;
                        uint64_t v127 = v185;
                        uint64_t v1 = v178;
                        uint64_t v3 = v179;
                        uint64_t v2 = v177;
                        goto LABEL_275;
                      }
                      char v131 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      uint64_t v1 = v178;
                      uint64_t v3 = v179;
                      uint64_t v2 = v177;
                      if (v131)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v128 = v183;
                        uint64_t v127 = v185;
                        goto LABEL_275;
                      }
LABEL_276:
                      if (v119) {
                        goto LABEL_278;
                      }
                      goto LABEL_277;
                    }
LABEL_272:
                    swift_bridgeObjectRelease();
                    uint64_t v1 = v178;
                    uint64_t v3 = v179;
                    uint64_t v2 = v177;
                    goto LABEL_276;
                  }
LABEL_205:
                  if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                    goto LABEL_219;
                  }
                  goto LABEL_206;
                }
LABEL_188:
                if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                  goto LABEL_205;
                }
                goto LABEL_189;
              }
LABEL_179:
              if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                goto LABEL_188;
              }
              goto LABEL_180;
            }
LABEL_149:
            if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
              goto LABEL_179;
            }
            goto LABEL_150;
          }
LABEL_134:
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_149;
          }
          goto LABEL_135;
        }
LABEL_105:
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_134;
        }
        goto LABEL_106;
      }
LABEL_94:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_105;
      }
      goto LABEL_95;
    }
    if ((v5 & 1) == 0)
    {
      uint64_t v42 = sub_100570A78(v7, v0, sub_1000929F0);
      uint64_t v44 = v43;
      uint64_t v45 = sub_1005709DC(v1, v0, sub_100093FD0);
      uint64_t v47 = v46;
      uint64_t v182 = sub_100570A78(v2, v0, (uint64_t (*)(void))sub_100092EFC);
      uint64_t v184 = v48;
      uint64_t v178 = sub_100570B10(v3, v0);
      uint64_t v180 = v49;
      if (v42) {
        BOOL v50 = 0;
      }
      else {
        BOOL v50 = v44 == 0xE000000000000000;
      }
      int v51 = v50;
      if (v50 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v45 && v47 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        goto LABEL_121;
      }
      uint64_t v181 = v7;
      if (sub_1000943F0(v186) == v42 && v69 == v44)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v70 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v70 & 1) == 0) {
          goto LABEL_124;
        }
      }
      if (!v45 && v47 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
LABEL_121:
        swift_bridgeObjectRelease();
        goto LABEL_122;
      }
LABEL_124:
      if ((v51 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v45 && v47 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        goto LABEL_163;
      }
      if (sub_1000943F0(v186) == v42 && v84 == v44)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v88 & 1) == 0) {
          goto LABEL_170;
        }
      }
      if (!v45 && v47 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_163:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_164;
      }
LABEL_170:
      if ((v51 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        && (!v178 && v180 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        goto LABEL_211;
      }
      if (sub_1000943F0(v186) == v42 && v106 == v44)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v107 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v107 & 1) == 0) {
          goto LABEL_212;
        }
      }
      if (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v178 && v180 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
LABEL_211:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = sub_1005709DC(v1, v185, sub_100093FD0);
        goto LABEL_123;
      }
LABEL_212:
      if ((v51 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        goto LABEL_247;
      }
      if (sub_1000943F0(v186) == v42 && v120 == v44)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v121 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v121 & 1) == 0) {
          goto LABEL_249;
        }
      }
      if (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_247:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v122 = v185;
        uint64_t v123 = sub_1005709DC(v1, v185, sub_100093FD0);
        goto LABEL_248;
      }
LABEL_249:
      if ((v51 & 1) != 0 || (_stringCompareWithSmolCheck(_:_:expecting:)())
        && (!v178 && v180 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
      {
        goto LABEL_313;
      }
      if (sub_1000943F0(v186) == v42 && v126 == v44)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v140 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v140 & 1) == 0) {
          goto LABEL_315;
        }
      }
      if (!v178 && v180 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
LABEL_313:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v191 = sub_1005709DC(v1, v185, sub_100093FD0);
        uint64_t v196 = v144;
        v145._uint64_t countAndFlagsBits = 2108704;
        v145._uint64_t object = (void *)0xE300000000000000;
        String.append(_:)(v145);
        uint64_t v146 = v2;
        uint64_t v147 = v185;
LABEL_314:
        v148._uint64_t countAndFlagsBits = sub_100570A78(v146, v147, (uint64_t (*)(void))sub_100092EFC);
        String.append(_:)(v148);
        swift_bridgeObjectRelease();
        uint64_t v16 = v191;
        for (uint64_t i = v196; ; uint64_t i = v193)
        {
LABEL_168:
          *uint64_t v4 = v16;
          v4[1] = i;
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          if (v4[1]) {
            return *v4;
          }
LABEL_347:
          __break(1u);
LABEL_348:
          if (_stringCompareWithSmolCheck(_:_:expecting:)())
          {
LABEL_349:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v122 = v185;
            uint64_t v123 = sub_100570A78(v181, v185, sub_1000929F0);
LABEL_248:
            uint64_t v188 = v123;
            uint64_t v193 = v124;
            v125._uint64_t countAndFlagsBits = 2108704;
            v125._uint64_t object = (void *)0xE300000000000000;
            String.append(_:)(v125);
            uint64_t v93 = sub_100570B10(v3, v122);
          }
          else
          {
LABEL_350:
            if (v182) {
              BOOL v160 = 0;
            }
            else {
              BOOL v160 = v184 == 0xE000000000000000;
            }
            int v161 = v160;
            if (v160 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              if (!v178 && v180 == 0xE000000000000000)
              {
                swift_bridgeObjectRelease();
LABEL_362:
                swift_bridgeObjectRelease();
                uint64_t v188 = sub_100570A78(v181, v185, sub_1000929F0);
                uint64_t v193 = v163;
                v164._uint64_t countAndFlagsBits = 2108704;
                v164._uint64_t object = (void *)0xE300000000000000;
                String.append(_:)(v164);
                uint64_t v93 = sub_1005709DC(v1, v185, sub_100093FD0);
                goto LABEL_167;
              }
              char v162 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v162) {
                goto LABEL_362;
              }
              if (v161)
              {
                swift_bridgeObjectRelease();
LABEL_367:
                uint64_t v188 = sub_100570A78(v181, v185, sub_1000929F0);
                uint64_t v193 = v166;
                v167._uint64_t countAndFlagsBits = 2108704;
                v167._uint64_t object = (void *)0xE300000000000000;
                String.append(_:)(v167);
                v168._uint64_t countAndFlagsBits = sub_1005709DC(v1, v185, sub_100093FD0);
                String.append(_:)(v168);
                swift_bridgeObjectRelease();
                v169._uint64_t countAndFlagsBits = 2108704;
                v169._uint64_t object = (void *)0xE300000000000000;
                String.append(_:)(v169);
                uint64_t v93 = sub_100570B10(v3, v185);
                goto LABEL_167;
              }
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            char v165 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v165) {
              goto LABEL_367;
            }
            uint64_t v95 = v185;
            uint64_t v96 = sub_100570A78(v181, v185, sub_1000929F0);
LABEL_165:
            uint64_t v188 = v96;
            uint64_t v193 = v97;
            v98._uint64_t countAndFlagsBits = 2108704;
            v98._uint64_t object = (void *)0xE300000000000000;
            String.append(_:)(v98);
            uint64_t v99 = v2;
            uint64_t v100 = v95;
LABEL_166:
            uint64_t v93 = sub_100570A78(v99, v100, (uint64_t (*)(void))sub_100092EFC);
          }
LABEL_167:
          String.append(_:)(*(Swift::String *)&v93);
          swift_bridgeObjectRelease();
          uint64_t v16 = v188;
        }
      }
LABEL_315:
      if (v51 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else if (sub_1000943F0(v186) == v42 && v151 == v44)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v184 = v44;
      }
      else
      {
        char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v152 & 1) == 0)
        {
          if (v45) {
            BOOL v157 = 0;
          }
          else {
            BOOL v157 = v47 == 0xE000000000000000;
          }
          int v158 = v157;
          if (!v157 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_342;
          }
          if (!v182 && v184 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)())
            && (!v178 && v180 == 0xE000000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v78 = sub_100570A78(v181, v185, sub_1000929F0);
            goto LABEL_123;
          }
          if (v158)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
LABEL_342:
            char v159 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v159 & 1) == 0) {
              goto LABEL_350;
            }
          }
          if (!v182 && v184 == 0xE000000000000000) {
            goto LABEL_349;
          }
          goto LABEL_348;
        }
        swift_bridgeObjectRelease();
        uint64_t v184 = v180;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v191 = sub_1005709DC(v1, v185, sub_100093FD0);
      uint64_t v196 = v153;
      v154._uint64_t countAndFlagsBits = 2108704;
      v154._uint64_t object = (void *)0xE300000000000000;
      String.append(_:)(v154);
      v155._uint64_t countAndFlagsBits = sub_100570B10(v3, v185);
      String.append(_:)(v155);
      swift_bridgeObjectRelease();
      v156._uint64_t countAndFlagsBits = 2108704;
      v156._uint64_t object = (void *)0xE300000000000000;
      String.append(_:)(v156);
      uint64_t v146 = v2;
      uint64_t v147 = v185;
      goto LABEL_314;
    }
    uint64_t v181 = v7;
    uint64_t v54 = sub_100570A78(v2, v0, (uint64_t (*)(void))sub_100092EFC);
    uint64_t v56 = v55;
    uint64_t v57 = sub_1005709DC(v1, v0, sub_100093FD0);
    uint64_t v59 = v58;
    uint64_t v60 = sub_100570B10(v3, v0);
    uint64_t v62 = v61;
    if (v54) {
      BOOL v63 = 0;
    }
    else {
      BOOL v63 = v56 == 0xE000000000000000;
    }
    int v64 = v63;
    LODWORD(v184) = v64;
    if (v63 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      if (!v57 && v59 == 0xE000000000000000)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_75:
        swift_bridgeObjectRelease();
        uint64_t v16 = sub_100570B10(v3, v185);
        uint64_t i = v67;
        goto LABEL_168;
      }
      char v66 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v66)
      {
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
      if (v184) {
        goto LABEL_114;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v76 = v185;
LABEL_118:
      char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v77)
      {
LABEL_160:
        uint64_t v188 = sub_1005709DC(v1, v76, sub_100093FD0);
        uint64_t v193 = v89;
        v90._uint64_t countAndFlagsBits = 2108704;
        v90._uint64_t object = (void *)0xE300000000000000;
        String.append(_:)(v90);
        uint64_t v91 = v3;
        uint64_t v92 = v76;
LABEL_161:
        uint64_t v93 = sub_100570B10(v91, v92);
        goto LABEL_167;
      }
      uint64_t v52 = v2;
      uint64_t v53 = v76;
      goto LABEL_50;
    }
LABEL_114:
    if (!v60 && v62 == 0xE000000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_143:
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_1005709DC(v1, v185, sub_100093FD0);
      goto LABEL_51;
    }
    char v83 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v83) {
      goto LABEL_143;
    }
    uint64_t v76 = v185;
    if (v184)
    {
      swift_bridgeObjectRelease();
      goto LABEL_160;
    }
    goto LABEL_118;
  }
  return *v4;
}

uint64_t sub_100573FDC()
{
  uint64_t v1 = type metadata accessor for UTType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind);
  if (*(void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__kind + 8)) {
    return *v5;
  }
  uint64_t v6 = (void *)(v0 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_node);
  swift_beginAccess();
  if (*v6)
  {
    id v7 = [(id)swift_unknownObjectRetain() contentType];
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = UTType.localizedDescription.getter();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    if (v10)
    {
      *uint64_t v5 = v8;
      v5[1] = v10;
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
    swift_unknownObjectRelease();
  }
  *(_OWORD *)uint64_t v5 = xmmword_1005B0980;
LABEL_7:
  uint64_t result = swift_bridgeObjectRelease();
  if (v5[1]) {
    return *v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_10057416C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  uint64_t v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1005741A4(uint64_t a1, uint64_t a2)
{
  return sub_100570110(a1, a2);
}

void sub_1005741AC()
{
}

uint64_t sub_1005741B4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005741F4(CGContext *a1)
{
  sub_10056F638(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1005741FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100574238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, void *a6)
{
  uint64_t v12 = (uint64_t (*)())swift_allocObject();
  *((void *)v12 + 2) = a2;
  *((void *)v12 + 3) = a3;
  *((void *)v12 + 4) = a4;
  *((void *)v12 + 5) = a5;
  *((void *)v12 + 6) = a6;
  uint64_t v13 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail;
  Swift::String v14 = *(void **)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail);
  *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent__thumbnail) = 0;
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  id v15 = a6;
  sub_100098488(v14);
  swift_unknownObjectRelease();
  sub_100094988();
  uint64_t v16 = *(void **)(a1 + v13);
  if (v16)
  {
    uint64_t v31 = (uint64_t)v15;
    [(id)swift_unknownObjectRetain() scheduleUpdateIfNeeded];
    uint64_t v17 = OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock;
    [*(id *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateLock) lock];
    unsigned __int8 v18 = [v16 hasFinishedTryingToFetchCorrectThumbnail];
    uint64_t v19 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    if (v18)
    {
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10059B760;
      uint64_t v30 = v17;
      swift_unknownObjectRetain();
      sub_1000CBE70(&qword_100707718);
      uint64_t v29 = a4;
      uint64_t v21 = v19;
      sub_1000CBE70((uint64_t *)&unk_100711810);
      swift_dynamicCast();
      swift_beginAccess();
      swift_unknownObjectRetain();
      sub_1000CBE70(&qword_100717520);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v24 = v23;
      *(void *)(v20 + 96) = &type metadata for String;
      *(void *)(v20 + 104) = sub_100073F48();
      *(void *)(v20 + 72) = v22;
      *(void *)(v20 + 80) = v24;
      uint64_t v17 = v30;
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      sub_1001D951C(a2, a3, v29, a5, v31);
    }
    else
    {
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_1005A0030;
      swift_unknownObjectRetain();
      sub_1000CBE70(&qword_100707718);
      sub_1000CBE70((uint64_t *)&unk_100711810);
      swift_dynamicCast();
      os_log(_:dso:log:type:_:)();

      swift_bridgeObjectRelease();
      uint64_t v27 = (uint64_t (**)())(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
      uint64_t v28 = *(void *)(a1 + OBJC_IVAR____TtC5Files28DOCItemCollectionCellContent_thumbnailUpdateBlock);
      *uint64_t v27 = sub_100574694;
      v27[1] = v12;
      swift_retain();
      sub_1000A7258(v28);
    }
    [*(id *)(a1 + v17) unlock];
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v25 = (void *)static DOCLog.UI.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    sub_1001D951C(a2, a3, a4, a5, (uint64_t)v15);
    return swift_release();
  }
}

void sub_100574600(void *a1)
{
}

uint64_t sub_10057460C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100574644()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100574694()
{
  return sub_1001D951C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

Swift::Bool __swiftcall DOCGridLayoutDebuggingEnabled()()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  unsigned __int8 v2 = [v0 BOOLForKey:v1];

  return v2;
}

Swift::Bool *DOCGridLayoutAssertsInvalidTypeRequests.unsafeMutableAddressor()
{
  return &DOCGridLayoutAssertsInvalidTypeRequests;
}

Class DOCSidebarViewController.collectionView(_:contextMenuConfigurationForItemAt:point:)(uint64_t a1, uint64_t a2)
{
  return sub_10057B388(a2);
}

Class sub_100574750(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_1007069A0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (IndexPath.count.getter() < 1) {
    return 0;
  }
  id v46 = (id)sub_100482C08(a1, 1);
  uint64_t v47 = v7;
  uint64_t v48 = v8;
  int v49 = v9;
  if ((_BYTE)v9 == 0xFF) {
    return 0;
  }
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  id v12 = sub_100483178((uint64_t)v6);
  sub_10011631C((uint64_t)v6);
  id v45 = v12;
  if (!v12)
  {
    sub_1000A7C1C(v46, v47, v48, v49);
    return 0;
  }
  unint64_t v13 = sub_1003D5B7C();
  unint64_t v14 = v13;
  if (v13 >> 62) {
    goto LABEL_23;
  }
  uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v2; v15; uint64_t i = v2)
  {
    uint64_t v2 = 4;
    while (1)
    {
      id v16 = (v14 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v14 + 8 * v2);
      id v52 = v16;
      uint64_t v17 = v2 - 3;
      if (__OFADD__(v2 - 4, 1)) {
        break;
      }
      id v18 = [v52 identifier];
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;

      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22)
      {
        swift_bridgeObjectRelease_n();
LABEL_21:
        swift_bridgeObjectRelease_n();
        uint64_t v2 = i;
        goto LABEL_25;
      }
      char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_21;
      }

      ++v2;
      if (v17 == v15)
      {
        swift_bridgeObjectRelease_n();
        id v52 = 0;
        uint64_t v2 = i;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  }
  swift_bridgeObjectRelease_n();
  id v52 = 0;
LABEL_25:
  unint64_t v53 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v26 = sub_100574D80((uint64_t)v46, v47, v48, v49);
  uint64_t v50 = v26[2];
  if (v50)
  {
    uint64_t v27 = 0;
    uint64_t v43 = v26;
    uint64_t v28 = v47;
    uint64_t v29 = v48;
    char v30 = v49;
    do
    {
      if (*(void *)(v26[v27 + 4] + 16))
      {
        id v31 = v52;
        id v51 = v52;
        id v32 = v46;
        sub_1000A9454(v46, v28, v29, v30);
        BOOL v33 = (char *)(id)v2;
        id v34 = v45;
        uint64_t v35 = swift_bridgeObjectRetain();
        uint64_t v36 = sub_10057B244(v35, v31, v32, v28, v29, v30, v33, v34);

        sub_1000A7C1C(v32, v28, v29, v30);
        swift_bridgeObjectRelease();

        sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
        v37._uint64_t countAndFlagsBits = 0;
        v37._uint64_t object = (void *)0xE000000000000000;
        v54.value.super.Class isa = 0;
        v54.is_nil = 0;
        unint64_t v38 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v37, (Swift::String_optional)0, v54, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v36, v42).super.super.isa;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        uint64_t v26 = v43;
        uint64_t v2 = i;
      }
      ++v27;
    }
    while (v50 != v27);
    swift_bridgeObjectRelease();
    uint64_t v39 = (void *)v53;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = _swiftEmptyArrayStorage;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100708B50);
  v40._uint64_t countAndFlagsBits = 0;
  v40._uint64_t object = (void *)0xE000000000000000;
  v55.value.super.Class isa = 0;
  v55.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v40, (Swift::String_optional)0, v55, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v39, v42).super.super.isa;

  sub_1000A7C1C(v46, v47, v48, v49);
  return isa;
}

void *sub_100574D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = (char *)_swiftEmptyArrayStorage;
  uint64_t v5 = (char *)_swiftEmptyArrayStorage;
  uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  switch(a4)
  {
    case 1:
      uint64_t v4 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v23 = *((void *)v4 + 2);
      unint64_t v22 = *((void *)v4 + 3);
      if (v23 >= v22 >> 1) {
        uint64_t v4 = sub_100190ADC((char *)(v22 > 1), v23 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v23 + 1;
      v4[v23 + 32] = 0;
      uint64_t v5 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v25 = *((void *)v5 + 2);
      unint64_t v24 = *((void *)v5 + 3);
      int64_t v26 = v24 >> 1;
      unint64_t v27 = v25 + 1;
      if (v24 >> 1 <= v25)
      {
        uint64_t v5 = sub_100190ADC((char *)(v24 > 1), v25 + 1, 1, v5);
        unint64_t v24 = *((void *)v5 + 3);
        int64_t v26 = v24 >> 1;
      }
      *((void *)v5 + 2) = v27;
      v5[v25 + 32] = 3;
      unint64_t v28 = v25 + 2;
      if (v26 < (uint64_t)(v25 + 2))
      {
        uint64_t v5 = sub_100190ADC((char *)(v24 > 1), v25 + 2, 1, v5);
        unint64_t v24 = *((void *)v5 + 3);
        int64_t v26 = v24 >> 1;
      }
      *((void *)v5 + 2) = v28;
      v5[v27 + 32] = 5;
      if (v26 < (uint64_t)(v25 + 3)) {
        uint64_t v5 = sub_100190ADC((char *)(v24 > 1), v25 + 3, 1, v5);
      }
      *((void *)v5 + 2) = v25 + 3;
      v5[v28 + 32] = 2;
      uint64_t v17 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v29 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      int64_t v30 = v18 >> 1;
      unint64_t v31 = v29 + 1;
      if (v18 >> 1 <= v29)
      {
        uint64_t v17 = sub_100190ADC((char *)(v18 > 1), v29 + 1, 1, v17);
        unint64_t v18 = *((void *)v17 + 3);
        int64_t v30 = v18 >> 1;
      }
      *((void *)v17 + 2) = v31;
      v17[v29 + 32] = 4;
      unint64_t v19 = v29 + 2;
      if (v30 < (uint64_t)(v29 + 2))
      {
        uint64_t v17 = sub_100190ADC((char *)(v18 > 1), v29 + 2, 1, v17);
        unint64_t v18 = *((void *)v17 + 3);
        int64_t v30 = v18 >> 1;
      }
      *((void *)v17 + 2) = v19;
      v17[v31 + 32] = 6;
      int64_t v20 = v29 + 3;
      if (v30 >= (uint64_t)(v29 + 3)) {
        goto LABEL_11;
      }
      goto LABEL_25;
    case 2:
      uint64_t v4 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v33 = *((void *)v4 + 2);
      unint64_t v32 = *((void *)v4 + 3);
      if (v33 >= v32 >> 1) {
        uint64_t v4 = sub_100190ADC((char *)(v32 > 1), v33 + 1, 1, v4);
      }
      *((void *)v4 + 2) = v33 + 1;
      v4[v33 + 32] = 0;
      uint64_t v5 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v35 = *((void *)v5 + 2);
      unint64_t v34 = *((void *)v5 + 3);
      if (v35 >= v34 >> 1) {
        uint64_t v5 = sub_100190ADC((char *)(v34 > 1), v35 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v35 + 1;
      v5[v35 + 32] = 3;
      uint64_t v36 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      uint64_t v17 = v36;
      unint64_t v19 = *((void *)v36 + 2);
      unint64_t v37 = *((void *)v36 + 3);
      int64_t v20 = v19 + 1;
      if (v19 >= v37 >> 1)
      {
        uint64_t v17 = sub_100190ADC((char *)(v37 > 1), v19 + 1, 1, v36);
        char v21 = 7;
        uint64_t v6 = v17;
      }
      else
      {
        char v21 = 7;
        uint64_t v6 = v36;
      }
      goto LABEL_35;
    case 4:
      goto LABEL_36;
    case 5:
      uint64_t v5 = (char *)_swiftEmptyArrayStorage;
      unint64_t v38 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      uint64_t v17 = v38;
      unint64_t v19 = *((void *)v38 + 2);
      unint64_t v39 = *((void *)v38 + 3);
      int64_t v20 = v19 + 1;
      if (v19 >= v39 >> 1)
      {
        uint64_t v17 = sub_100190ADC((char *)(v39 > 1), v19 + 1, 1, v38);
        char v21 = 0;
        uint64_t v4 = v17;
      }
      else
      {
        char v21 = 0;
        uint64_t v4 = v38;
      }
      uint64_t v6 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_35;
    default:
      uint64_t v4 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v8 = *((void *)v4 + 2);
      unint64_t v7 = *((void *)v4 + 3);
      int64_t v9 = v7 >> 1;
      unint64_t v10 = v8 + 1;
      if (v7 >> 1 <= v8)
      {
        uint64_t v4 = sub_100190ADC((char *)(v7 > 1), v8 + 1, 1, v4);
        unint64_t v7 = *((void *)v4 + 3);
        int64_t v9 = v7 >> 1;
      }
      *((void *)v4 + 2) = v10;
      v4[v8 + 32] = 0;
      int64_t v11 = v8 + 2;
      if (v9 < v11) {
        uint64_t v4 = sub_100190ADC((char *)(v7 > 1), v11, 1, v4);
      }
      *((void *)v4 + 2) = v11;
      v4[v10 + 32] = 1;
      uint64_t v5 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v13 = *((void *)v5 + 2);
      unint64_t v12 = *((void *)v5 + 3);
      int64_t v14 = v12 >> 1;
      unint64_t v15 = v13 + 1;
      if (v12 >> 1 <= v13)
      {
        uint64_t v5 = sub_100190ADC((char *)(v12 > 1), v13 + 1, 1, v5);
        unint64_t v12 = *((void *)v5 + 3);
        int64_t v14 = v12 >> 1;
      }
      *((void *)v5 + 2) = v15;
      v5[v13 + 32] = 2;
      int64_t v16 = v13 + 2;
      if (v14 < v16) {
        uint64_t v5 = sub_100190ADC((char *)(v12 > 1), v16, 1, v5);
      }
      *((void *)v5 + 2) = v16;
      v5[v15 + 32] = 3;
      uint64_t v17 = sub_100190ADC(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v19 = *((void *)v17 + 2);
      unint64_t v18 = *((void *)v17 + 3);
      int64_t v20 = v19 + 1;
      if (v19 >= v18 >> 1)
      {
LABEL_25:
        uint64_t v17 = sub_100190ADC((char *)(v18 > 1), v20, 1, v17);
        char v21 = 8;
        uint64_t v6 = v17;
      }
      else
      {
LABEL_11:
        char v21 = 8;
        uint64_t v6 = v17;
      }
LABEL_35:
      *((void *)v17 + 2) = v20;
      v17[v19 + 32] = v21;
LABEL_36:
      if (*((void *)v4 + 2))
      {
        Swift::String v40 = sub_1001909AC(0, 1, 1, _swiftEmptyArrayStorage);
        unint64_t v42 = v40[2];
        unint64_t v41 = v40[3];
        if (v42 >= v41 >> 1) {
          Swift::String v40 = sub_1001909AC((void *)(v41 > 1), v42 + 1, 1, v40);
        }
        v40[2] = v42 + 1;
        v40[v42 + 4] = v4;
        if (*((void *)v5 + 2))
        {
LABEL_40:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v40 = sub_1001909AC(0, v40[2] + 1, 1, v40);
          }
          unint64_t v44 = v40[2];
          unint64_t v43 = v40[3];
          if (v44 >= v43 >> 1) {
            Swift::String v40 = sub_1001909AC((void *)(v43 > 1), v44 + 1, 1, v40);
          }
          v40[2] = v44 + 1;
          v40[v44 + 4] = v5;
          if (*((void *)v6 + 2)) {
            goto LABEL_45;
          }
LABEL_52:
          swift_bridgeObjectRelease();
          return v40;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        Swift::String v40 = _swiftEmptyArrayStorage;
        if (*((void *)v5 + 2)) {
          goto LABEL_40;
        }
      }
      swift_bridgeObjectRelease();
      if (!*((void *)v6 + 2)) {
        goto LABEL_52;
      }
LABEL_45:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        Swift::String v40 = sub_1001909AC(0, v40[2] + 1, 1, v40);
      }
      unint64_t v46 = v40[2];
      unint64_t v45 = v40[3];
      if (v46 >= v45 >> 1) {
        Swift::String v40 = sub_1001909AC((void *)(v45 > 1), v46 + 1, 1, v40);
      }
      v40[2] = v46 + 1;
      v40[v46 + 4] = v6;
      return v40;
  }
}

void sub_100575484(id a1@<X2>, unsigned char *a2@<X0>, void *a3@<X1>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char *a7@<X6>, void *a8@<X7>, void *a9@<X8>)
{
  unint64_t v15 = a9;
  switch(*a2)
  {
    case 1:
      uint64_t v151 = a9;
      id v29 = (id)_DocumentManagerBundle();
      if (v29)
      {
        int64_t v30 = v29;
        v31._uint64_t countAndFlagsBits = 0xD000000000000018;
        v153._uint64_t countAndFlagsBits = 0xD000000000000048;
        v153._uint64_t object = (void *)0x8000000100602A00;
        v31._uint64_t object = (void *)0x80000001005ECE40;
        v32._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v32._uint64_t object = (void *)0xEB00000000656C62;
        v33._uint64_t countAndFlagsBits = 0xD000000000000018;
        v33._uint64_t object = (void *)0x80000001005ECE40;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v153);

        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        NSString v34 = String._bridgeToObjectiveC()();
        [self systemImageNamed:v34];

        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = a1;
        *(void *)(v35 + 24) = a4;
        *(void *)(v35 + 32) = a5;
        *(unsigned char *)(v35 + 40) = a6;
        *(void *)(v35 + 48) = a7;
        sub_10010ED28(a1, a4, a5, a6);
        uint64_t v36 = a7;
LABEL_75:
        id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        goto LABEL_76;
      }
      __break(1u);
      goto LABEL_79;
    case 2:
      if (!a6 || a6 == 3) {
        goto LABEL_72;
      }
      if (a6 != 1) {
        goto LABEL_71;
      }
      uint64_t v151 = a9;
      id v142 = a1;
      id v37 = [v142 identifier];
      uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v40 = v39;
      if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41) {
        goto LABEL_19;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = a5;
      if (v43) {
        goto LABEL_20;
      }
      id v37 = [v142 identifier:a5];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;
      if (v45 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v47 == v48)
      {
LABEL_19:

        swift_bridgeObjectRelease_n();
        uint64_t v44 = a5;
LABEL_20:
        sub_10010EDB8(a1, a4, v44, 1u);
        id v17 = 0;
        goto LABEL_76;
      }
      char v127 = _stringCompareWithSmolCheck(_:_:expecting:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10010EDB8(a1, a4, a5, 1u);
      unint64_t v15 = v151;
      if (v127)
      {
LABEL_71:
        id v17 = 0;
        goto LABEL_77;
      }
LABEL_72:
      id v17 = (id)sub_100576C28(a1, a4, a5, a6);
      if (!v17) {
        goto LABEL_77;
      }
      uint64_t v151 = v15;
      id v128 = (id)_DocumentManagerBundle();
      if (v128)
      {
        uint64_t v129 = v128;
        v158._uint64_t countAndFlagsBits = 0xD000000000000050;
        v158._uint64_t object = (void *)0x80000001005D64D0;
        v130._uint64_t countAndFlagsBits = 0x6F666E4920746547;
        v130._uint64_t object = (void *)0xE800000000000000;
        v131._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
        v131._uint64_t object = (void *)0xEB00000000656C62;
        v132._uint64_t countAndFlagsBits = 0;
        v132._uint64_t object = (void *)0xE000000000000000;
        DOCLocalizedString(_:tableName:bundle:value:comment:)(v130, v131, (NSBundle)v129, v132, v158);

        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        NSString v133 = String._bridgeToObjectiveC()();
        [self systemImageNamed:v133];

        uint64_t v134 = swift_allocObject();
        *(void *)(v134 + 16) = a1;
        *(void *)(v134 + 24) = a4;
        *(void *)(v134 + 32) = a5;
        *(unsigned char *)(v134 + 40) = a6;
        *(void *)(v134 + 48) = a7;
        *(void *)(v134 + 56) = a8;
        *(void *)(v134 + 64) = v17;
        sub_10010ED28(a1, a4, a5, a6);
        Swift::String v135 = a7;
        id v136 = a8;
        goto LABEL_75;
      }
      goto LABEL_82;
    case 3:
      if ((sub_10024A5A0(a1, a4, a5, a6) & 1) == 0) {
        goto LABEL_71;
      }
      uint64_t v49 = a5;
      if ([*(id *)&a7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI])BOOL v50 = a6 == 1; {
      else
      }
        BOOL v50 = 0;
      if (!v50 || (type metadata accessor for DOCExternalDeviceSource(), id v17 = 0, !swift_dynamicCastClass())) {
        id v17 = (id)sub_100576808(a7, a8, a1, a4, v49, a6);
      }
      goto LABEL_77;
    case 4:
      if (a6 != 1) {
        goto LABEL_71;
      }
      type metadata accessor for DOCFileProviderSource(0);
      id v51 = (void *)swift_dynamicCastClass();
      if (!v51 || ![v51 isEjectable]) {
        goto LABEL_71;
      }
      uint64_t v151 = v15;
      id v52 = (id)_DocumentManagerBundle();
      if (!v52) {
        goto LABEL_85;
      }
      unint64_t v53 = v52;
      v154._uint64_t countAndFlagsBits = 0xD000000000000046;
      v154._uint64_t object = (void *)0x80000001006028D0;
      v54._uint64_t countAndFlagsBits = 0x7463656A45;
      v54._uint64_t object = (void *)0xE500000000000000;
      v55._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v55._uint64_t object = (void *)0xEB00000000656C62;
      v56._uint64_t countAndFlagsBits = 0;
      v56._uint64_t object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v154);

      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      NSString v57 = String._bridgeToObjectiveC()();
      [self systemImageNamed:v57];

      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = a1;
      *(void *)(v58 + 24) = a4;
      *(void *)(v58 + 32) = a5;
      *(unsigned char *)(v58 + 40) = 1;
      *(void *)(v58 + 48) = a8;
      sub_10010ED28(a1, a4, a5, 1u);
      id v59 = a8;
      goto LABEL_75;
    case 5:
      id v17 = 0;
      if (([*(id *)&a7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] isPickerUI] & 1) != 0|| a6 != 1)
      {
        goto LABEL_77;
      }
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v60 = (void *)swift_dynamicCastClass();
      if (!v60) {
        goto LABEL_71;
      }
      uint64_t v151 = v15;
      char v61 = (*(uint64_t (**)(id))((swift_isaMask & *v60) + 0x130))(a1);
      sub_10010EDB8(a1, a4, a5, 1u);
      if ((v61 & 1) == 0) {
        goto LABEL_46;
      }
      id v62 = (id)_DocumentManagerBundle();
      if (!v62) {
        goto LABEL_86;
      }
      BOOL v63 = v62;
      v155._uint64_t countAndFlagsBits = 0xD000000000000051;
      v155._uint64_t object = (void *)0x8000000100602850;
      v64._uint64_t countAndFlagsBits = 0x6573617245;
      v64._uint64_t object = (void *)0xE500000000000000;
      v65._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v65._uint64_t object = (void *)0xEB00000000656C62;
      v66._uint64_t countAndFlagsBits = 0;
      v66._uint64_t object = (void *)0xE000000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v155);

      sub_10009E6C4(0, (unint64_t *)&qword_100706740);
      NSString v67 = String._bridgeToObjectiveC()();
      [self systemImageNamed:v67];

      uint64_t v68 = swift_allocObject();
      *(void *)(v68 + 16) = a1;
      *(void *)(v68 + 24) = a4;
      *(void *)(v68 + 32) = a5;
      *(unsigned char *)(v68 + 40) = 1;
      *(void *)(v68 + 48) = a7;
      *(void *)(v68 + 56) = a8;
      sub_10010ED28(a1, a4, a5, 1u);
      uint64_t v69 = a7;
      id v70 = a8;
      uint64_t v138 = sub_10057B5F8;
      uint64_t v139 = v68;
      goto LABEL_62;
    case 6:
      if (a6 != 1) {
        goto LABEL_71;
      }
      uint64_t v151 = a9;
      id v73 = [a1 identifier];
      uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v76 = v75;
      if (v74 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v76 == v77)
      {

        swift_bridgeObjectRelease_n();
        uint64_t v80 = a4;
        uint64_t v81 = a5;
        sub_10010EDB8(a1, a4, a5, 1u);
      }
      else
      {
        char v79 = _stringCompareWithSmolCheck(_:_:expecting:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = a4;
        uint64_t v81 = a5;
        sub_10010EDB8(a1, a4, a5, 1u);
        if ((v79 & 1) == 0)
        {
LABEL_46:
          id v17 = 0;
          goto LABEL_76;
        }
      }
      uint64_t v113 = swift_allocObject();
      *(void *)(v113 + 16) = a1;
      *(void *)(v113 + 24) = v80;
      *(void *)(v113 + 32) = v81;
      *(unsigned char *)(v113 + 40) = 1;
      *(void *)(v113 + 48) = a7;
      *(void *)(v113 + 56) = sub_100579DC4;
      *(void *)(v113 + 64) = 0;
      aBlock[4] = sub_10057B5DC;
      aBlock[5] = v113;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100514064;
      void aBlock[3] = &unk_1006B8588;
      Swift::String v114 = _Block_copy(aBlock);
      uint64_t v115 = self;
      uint64_t v116 = v81;
      uint64_t v117 = (void *)v115;
      sub_10010ED28(a1, v80, v116, 1u);
      BOOL v118 = a7;
      id v17 = [v117 elementWithProvider:v114];
      _Block_release(v114);
      swift_release();
      goto LABEL_76;
    case 7:
      uint64_t v151 = a9;
      if (a6 == 2)
      {
        id v82 = [a1 displayName];
        uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v85 = v84;

        id v86 = (id)_DocumentManagerBundle();
        if (v86)
        {
          Swift::String v87 = v86;
          v156._uint64_t countAndFlagsBits = 0xD000000000000050;
          v156._uint64_t object = (void *)0x80000001006027F0;
          v88._uint64_t object = (void *)0x80000001006027D0;
          v88._uint64_t countAndFlagsBits = 0x1000000000000013;
          v89._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v89._uint64_t object = (void *)0xEB00000000656C62;
          v90._uint64_t countAndFlagsBits = 0x1000000000000013;
          v90._uint64_t object = (void *)0x80000001006027D0;
          DOCLocalizedString(_:tableName:bundle:value:comment:)(v88, v89, (NSBundle)v87, v90, v156);

          sub_1000CBE70((uint64_t *)&unk_100708800);
          uint64_t v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = xmmword_1005A0030;
          *(void *)(v91 + 56) = &type metadata for String;
          *(void *)(v91 + 64) = sub_100073F48();
          *(void *)(v91 + 32) = v83;
          *(void *)(v91 + 40) = v85;
          String.init(format:_:)();
          swift_bridgeObjectRelease();
LABEL_56:
          sub_10009E6C4(0, (unint64_t *)&qword_100706740);
          NSString v110 = String._bridgeToObjectiveC()();
          [self systemImageNamed:v110];

          uint64_t v111 = swift_allocObject();
          *(void *)(v111 + 16) = a1;
          *(void *)(v111 + 24) = a4;
          *(void *)(v111 + 32) = a5;
          *(unsigned char *)(v111 + 40) = a6;
          *(void *)(v111 + 48) = a7;
          sub_10010ED28(a1, a4, a5, a6);
          uint64_t v112 = a7;
          uint64_t v138 = sub_10057B574;
          uint64_t v139 = v111;
LABEL_62:
          id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
          [v17 setAttributes:2, 0, 0, 0, v138, v139];
          goto LABEL_76;
        }
LABEL_79:
        __break(1u);
      }
      else
      {
        id v105 = (id)_DocumentManagerBundle();
        if (v105)
        {
          uint64_t v106 = v105;
          v157._uint64_t countAndFlagsBits = 0xD000000000000053;
          v157._uint64_t object = (void *)0x8000000100602770;
          v107._uint64_t countAndFlagsBits = 0x54206574656C6544;
          v107._uint64_t object = (void *)0xEA00000000006761;
          v108._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
          v108._uint64_t object = (void *)0xEB00000000656C62;
          v109._uint64_t countAndFlagsBits = 0x54206574656C6544;
          v109._uint64_t object = (void *)0xEA00000000006761;
          DOCLocalizedString(_:tableName:bundle:value:comment:)(v107, v108, (NSBundle)v106, v109, v157);

          goto LABEL_56;
        }
      }
      __break(1u);
      goto LABEL_81;
    case 8:
      uint64_t v92 = *(void *)&a7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourceVisibilityController];
      if ((sub_10024A3B4(v92, a1, a4, a5, a6) & 1) == 0) {
        goto LABEL_71;
      }
      uint64_t v149 = a5;
      uint64_t v151 = v15;
      id v93 = [a7 traitCollection];
      id v94 = [v93 sourceOutlineStyle];

      uint64_t v95 = (objc_class *)(id)_DocumentManagerBundle();
      uint64_t v96 = v95;
      if (!v94)
      {
        if (v95)
        {
          unint64_t v98 = 0xD000000000000013;
          unint64_t v97 = 0xD00000000000005FLL;
          unint64_t v137 = 0x80000001006029A0;
          unint64_t v99 = 0x8000000100602980;
          uint64_t v100 = 0x617A696C61636F4CLL;
          unint64_t v101 = 0xEB00000000656C62;
          v102.super.Class isa = v96;
          unint64_t v103 = 0xD000000000000013;
          unint64_t v104 = 0x8000000100602980;
          goto LABEL_61;
        }
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        JUMPOUT(0x1005767CCLL);
      }
      if (v95)
      {
        unint64_t v97 = 0xD00000000000005FLL;
        unint64_t v137 = 0x8000000100602920;
        unint64_t v98 = 0x65766F6D6552;
        unint64_t v99 = 0xE600000000000000;
        uint64_t v100 = 0x617A696C61636F4CLL;
        unint64_t v101 = 0xEB00000000656C62;
        v102.super.Class isa = v96;
        unint64_t v103 = 0x65766F6D6552;
        unint64_t v104 = 0xE600000000000000;
LABEL_61:
        DOCLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v98, *(Swift::String *)&v100, v102, *(Swift::String *)&v103, *(Swift::String *)&v97);

        sub_10009E6C4(0, (unint64_t *)&qword_100706740);
        NSString v119 = String._bridgeToObjectiveC()();
        [self systemImageNamed:v119];

        uint64_t v120 = swift_allocObject();
        *(void *)(v120 + 16) = a1;
        *(void *)(v120 + 24) = a4;
        *(void *)(v120 + 32) = v149;
        *(unsigned char *)(v120 + 40) = a6;
        *(void *)(v120 + 48) = a8;
        *(void *)(v120 + 56) = v92;
        sub_10010ED28(a1, a4, v149, a6);
        id v121 = a8;
        swift_retain();
        uint64_t v138 = sub_10057B678;
        uint64_t v139 = v120;
        goto LABEL_62;
      }
      goto LABEL_83;
    default:
      if (!a3) {
        goto LABEL_71;
      }
      id v17 = 0;
      switch(a6)
      {
        case 1:
          type metadata accessor for DOCFileProviderSource(0);
          uint64_t v122 = swift_dynamicCastClass();
          if (!v122) {
            goto LABEL_71;
          }
          id v17 = *(id *)(v122 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
          if (!v17) {
            goto LABEL_77;
          }
          uint64_t v151 = v15;
          id v140 = a3;
          sub_10010ED28(a1, a4, a5, 1u);
          uint64_t v123 = qword_100704FC0;
          id v124 = v17;
          if (v123 != -1) {
            swift_once();
          }
          char v144 = byte_10070BC60;
          id v125 = [v124 identifier];
          int v126 = DOCProviderDomainIDIsSharedServerDomainID();

          sub_10010EDB8(a1, a4, a5, 1u);
          unint64_t v15 = v151;
          if (!v126 || (v144 & 1) != 0)
          {
LABEL_5:
            uint64_t v151 = v15;
            id v19 = (id)_DocumentManagerBundle();
            if (v19)
            {
              int64_t v20 = v19;
              v152._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
              v152._uint64_t object = (void *)0x8000000100602A50;
              v21._uint64_t object = (void *)0x80000001005E01C0;
              v21._uint64_t countAndFlagsBits = 0xD000000000000012;
              v22._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
              v22._uint64_t object = (void *)0xEB00000000656C62;
              v23._uint64_t countAndFlagsBits = 0xD000000000000012;
              v23._uint64_t object = (void *)0x80000001005E01C0;
              DOCLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v152);

              sub_10009E6C4(0, (unint64_t *)&qword_100706740);
              NSString v24 = String._bridgeToObjectiveC()();
              id v25 = [self systemImageNamed:v24];

              uint64_t v26 = swift_allocObject();
              *(void *)(v26 + 16) = a1;
              *(void *)(v26 + 24) = a4;
              *(void *)(v26 + 32) = a5;
              *(unsigned char *)(v26 + 40) = a6;
              *(void *)(v26 + 48) = a7;
              *(void *)(v26 + 56) = a3;
              sub_10010ED28(a1, a4, a5, a6);
              unint64_t v27 = a7;
              id v17 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
LABEL_76:
              unint64_t v15 = v151;
              goto LABEL_77;
            }
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            __break(1u);
            goto LABEL_84;
          }

          id v17 = 0;
LABEL_77:
          void *v15 = v17;
          return;
        case 4:
          goto LABEL_77;
        default:
          id v18 = a3;
          goto LABEL_5;
      }
  }
}

uint64_t sub_100576808(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  switch(a6)
  {
    case 0u:
      id v11 = [a3 displayName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      unint64_t v15 = a3;
      uint64_t v16 = a4;
      uint64_t v17 = a5;
      unsigned __int8 v18 = 0;
      goto LABEL_5;
    case 1u:
      id v19 = [a3 displayName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v20;

      unint64_t v15 = a3;
      uint64_t v16 = a4;
      uint64_t v17 = a5;
      unsigned __int8 v18 = 1;
      goto LABEL_5;
    case 2u:
      id v21 = [a3 displayName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v22;

      unint64_t v15 = a3;
      uint64_t v16 = a4;
      uint64_t v17 = a5;
      unsigned __int8 v18 = 2;
LABEL_5:
      sub_10010EDB8(v15, v16, v17, v18);
      goto LABEL_7;
    case 3u:
      id v23 = a3;
      id v24 = [v23 displayName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v25;

LABEL_7:
      id v26 = (id)_DocumentManagerBundle();
      if (!v26)
      {
        __break(1u);
LABEL_13:
        __break(1u);
        JUMPOUT(0x100576C18);
      }
      unint64_t v27 = v26;
      v44._uint64_t object = (void *)0x8000000100602C80;
      v28._uint64_t object = (void *)0x8000000100602C60;
      v28._uint64_t countAndFlagsBits = 0x1000000000000016;
      v29._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v29._uint64_t object = (void *)0xEB00000000656C62;
      v30._uint64_t countAndFlagsBits = 0xE220656D616E6552;
      v30._uint64_t object = (void *)0xAF9D80E240259C80;
      v44._uint64_t countAndFlagsBits = 0xD000000000000052;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v44);

      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1005A0030;
      *(void *)(v31 + 56) = &type metadata for String;
      *(void *)(v31 + 64) = sub_100073F48();
      *(void *)(v31 + 32) = v12;
      *(void *)(v31 + 40) = v14;
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      break;
    default:
      id v38 = (id)_DocumentManagerBundle();
      if (!v38) {
        goto LABEL_13;
      }
      uint64_t v39 = v38;
      v45._uint64_t countAndFlagsBits = 0xD000000000000055;
      v45._uint64_t object = (void *)0x8000000100602C00;
      v40._uint64_t countAndFlagsBits = 0x5B20656D616E6552;
      v40._uint64_t object = (void *)0xED00005D6D657449;
      v41._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
      v41._uint64_t object = (void *)0xEB00000000656C62;
      v42._uint64_t countAndFlagsBits = 0x656D616E6552;
      v42._uint64_t object = (void *)0xE600000000000000;
      DOCLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v45);

      break;
  }
  sub_10009E6C4(0, (unint64_t *)&qword_100706740);
  NSString v32 = String._bridgeToObjectiveC()();
  id v33 = [self systemImageNamed:v32];

  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a3;
  *(void *)(v34 + 24) = a4;
  *(void *)(v34 + 32) = a5;
  *(unsigned char *)(v34 + 40) = a6;
  *(void *)(v34 + 48) = a1;
  *(void *)(v34 + 56) = a2;
  sub_10010ED28(a3, a4, a5, a6);
  id v35 = a1;
  id v36 = a2;
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_100576C28(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 && a4 != 3)
  {
    if (a4 == 1)
    {
      type metadata accessor for DOCFileProviderSource(0);
      uint64_t v6 = swift_dynamicCastClass();
      if (v6) {
        id v7 = a1;
      }
      return v6;
    }
    return 0;
  }
  id v8 = a1;
  int64_t v9 = v8;
  uint64_t v10 = *(void *)(v4 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver);
  if (!v10)
  {

    return 0;
  }
  id v11 = *(id *)(v10 + OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_sourceObserver);
  id v12 = [v9 providerDomainID];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [v11 sourceForIdentifier:v13];

  if (!v14) {
    return 0;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v6 = swift_dynamicCastClass();
  if (!v6) {

  }
  return v6;
}

void sub_100576D6C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  void v10[4] = a1;
  v10[5] = a2;
  void v10[6] = a5;
  v14[4] = sub_10057D368;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_1000666D8;
  v14[3] = &unk_1006B89C0;
  id v11 = _Block_copy(v14);
  swift_retain();
  id v12 = a1;
  swift_errorRetain();
  id v13 = a5;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v11);
}

uint64_t sub_100576E6C(uint64_t (*a1)(uint64_t, uint64_t, double), uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  id v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a1(a3, a4, v11);
  if (!a3)
  {
    static Logger.UI.getter();
    id v15 = a5;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      int v26 = v18;
      uint64_t v20 = v19;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v29 = v27;
      *(_DWORD *)uint64_t v20 = 136315394;
      uint64_t v28 = sub_10009B0E4(0xD000000000000021, 0x8000000100602D30, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2080;
      v25[1] = v20 + 14;
      id v21 = [v15 providerDisplayName];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      uint64_t v28 = sub_10009B0E4(v22, v24, &v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v26, "%s: can't fetch root item for : %s.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return result;
}

void sub_100577104()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver;
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver);
    if (v3)
    {
      if (*(void *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber])
      {
        [v3 removeSubscriber:];
        uint64_t v3 = *(void **)&v1[v2];
      }
    }
    *(void *)&v1[v2] = 0;

    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber];
    *(void *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber] = 0;
  }
}

id sub_1005771AC(void *a1, void *a2, void *a3)
{
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
  id v6 = [a1 popoverPresentationController];
  if (v6)
  {
    id v7 = v6;
    [v6 setSourceView:a2];
  }
  id v8 = [a1 popoverPresentationController];
  if (v8)
  {
    uint64_t v9 = v8;
    [a2 bounds];
    [v9 setSourceRect:];
  }

  return [a3 presentViewController:a1 animated:1 completion:0];
}

void sub_100577288(char *a1, uint64_t a2, void *a3, char *a4, void *a5, uint64_t a6, uint64_t a7, int a8)
{
  int v74 = a8;
  id v72 = a5;
  uint64_t v73 = a7;
  uint64_t v69 = a4;
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  __chkstk_darwin(v12);
  uint64_t v75 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_actionManager];
  id v15 = *(id *)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  id v16 = v14;
  swift_errorRetain();
  id v17 = a3;
  id v18 = [v17 identifier];
  id v19 = [v17 displayName];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v20 = objc_allocWithZone((Class)DOCConcreteLocation);
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v22 = [v20 initWithSourceIdentifier:v18 title:v21];

  self;
  [v22 setIsFPV2:swift_dynamicCastObjCClass() == 0];
  NSString v23 = [v17 promptText];
  if (!v23)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v22 setPromptText:v23];

  id v24 = objc_allocWithZone((Class)type metadata accessor for DOCErrorViewController());
  uint64_t v25 = (char *)sub_10032ACFC(v15, 0, v16, a2, v17, v22, 0);

  swift_errorRelease();
  id v26 = [a1 view];
  if (v26)
  {
    uint64_t v27 = v26;
    id v28 = [v26 window];

    id v30 = v72;
    uint64_t v29 = v73;
    uint64_t v31 = v69;
    if (v28)
    {
      id v32 = [v28 rootViewController];

      if (v32)
      {
        self;
        id v33 = (void *)swift_dynamicCastObjCClass();
        if (v33)
        {
          id v34 = [v33 effectiveBrowserViewController];
          if (v34)
          {
            id v35 = v34;
            *(void *)&v25[OBJC_IVAR____TtC5Files33DOCBrowserContainedViewController_eventReporting + 8] = &off_1006A2B00;
            swift_unknownObjectWeakAssign();

            id v32 = v35;
          }
        }
      }
    }
    id v36 = (objc_class *)type metadata accessor for DOCGetInfoErrorPresentingViewController();
    id v37 = (char *)objc_allocWithZone(v36);
    *(void *)&v37[OBJC_IVAR____TtC5Files39DOCGetInfoErrorPresentingViewController_errorViewController] = v25;
    v78.receiver = v37;
    v78.super_class = v36;
    id v38 = v25;
    id v39 = [super init];
    UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
    id v40 = [v39 popoverPresentationController];
    if (v40)
    {
      Swift::String v41 = v40;
      [v40 setSourceView:v31];
    }
    id v42 = [v39 popoverPresentationController];
    if (v42)
    {
      char v43 = v42;
      [v31 bounds];
      [v43 setSourceRect:];
    }
    id v44 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v38 action:"doc_dismissViewController"];
    uint64_t v69 = v38;
    id v45 = [v38 navigationItem];
    id v68 = v44;
    [v45 setRightBarButtonItem:v44];

    uint64_t v46 = v75;
    static Logger.Sidebar.getter();
    swift_errorRetain();
    char v47 = v74;
    sub_10010ED28(v30, a6, v29, v74);
    swift_errorRetain();
    sub_10010ED28(v30, a6, v29, v47);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v65 = a2;
      NSString v67 = a1;
      uint64_t v50 = v29;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v77 = v64;
      *(_DWORD *)uint64_t v51 = 136315650;
      uint64_t v76 = sub_10009B0E4(0xD000000000000032, 0x8000000100602D60, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v66 = a6;
      id v52 = sub_10024AAE8((unint64_t)v30, a6, v50, v47);
      id v53 = [v52 displayName];

      if (v53)
      {
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v56 = v55;
      }
      else
      {
        uint64_t v54 = 0;
        unint64_t v56 = 0xE000000000000000;
      }
      uint64_t v76 = sub_10009B0E4(v54, v56, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v58 = v72;
      uint64_t v57 = v73;
      uint64_t v59 = v66;
      unsigned __int8 v60 = v74;
      sub_10010EDB8(v72, v66, v73, v74);
      sub_10010EDB8(v58, v59, v57, v60);
      *(_WORD *)(v51 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v61 = Error.localizedDescription.getter();
      uint64_t v76 = sub_10009B0E4(v61, v62, &v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s: Showing error controller for location: %s and error: %s.", (uint8_t *)v51, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v75, v71);
      a1 = v67;
    }
    else
    {
      sub_10010EDB8(v30, a6, v29, v47);
      sub_10010EDB8(v30, a6, v29, v47);
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v70 + 8))(v46, v71);
    }
    [a1 presentViewController:v39 animated:1 completion:0];
  }
  else
  {
    __break(1u);
  }
}

void sub_100577A1C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, char a6)
{
  double v11 = (objc_class *)type metadata accessor for DOCSidebarItemCell(0);
  v25.receiver = a1;
  v25.super_class = v11;
  unsigned int v12 = [super isSelected];
  v24.receiver = a1;
  v24.super_class = v11;
  [super setSelected:0];
  v23.receiver = a1;
  v23.super_class = v11;
  if (v12 != objc_msgSendSuper2(&v23, "isSelected")) {
    [a1 setNeedsUpdateConfiguration];
  }
  if (a6)
  {
    if (a6 == 3)
    {
      type metadata accessor for DOCSmartFolderManager();
      id v21 = a3;
      id v22 = (void *)static DOCSmartFolderManager.sharedManager.getter();
      DOCSmartFolderManager.delete(hotFolder:for:)();
    }
    else if (a6 == 1)
    {
      id v13 = a3;
      sub_10047DB60();
      uint64_t v15 = v14;
      id v16 = [v13 identifier];
      char v17 = sub_1005350BC(v16, v15);

      swift_bridgeObjectRelease();
      if ((v17 & 1) == 0 && [v13 status] && objc_msgSend(v13, "status") != (id)2) {
        sub_10047D7F8(v13);
      }
      sub_10024AFE0(1, v13);
      sub_10010EDB8(a3, a4, a5, 1u);
      sub_10010EDB8(a3, a4, a5, 1u);
    }
  }
  else
  {
    id v18 = self;
    id v19 = a3;
    id v20 = [v18 sharedManager];
    [v20 removeFavorite:v19 completion:0];

    sub_10010EDB8(a3, a4, a5, 0);
  }
}

void sub_100577C40(uint64_t a1, void *a2, void *a3)
{
  id v6 = (void *)swift_allocObject();
  _OWORD v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  void v10[4] = sub_10057CEA0;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_1000666D8;
  v10[3] = &unk_1006B86C8;
  id v7 = _Block_copy(v10);
  swift_errorRetain();
  id v8 = a2;
  id v9 = a3;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v7);
}

uint64_t sub_100577D2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned int v12 = (char *)&v49 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v49 - v14;
  if (a1)
  {
    swift_errorRetain();
    static Logger.Rename.getter();
    id v16 = a2;
    swift_errorRetain();
    id v17 = v16;
    swift_errorRetain();
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      os_log_t v50 = v18;
      id v22 = (void *)v21;
      uint64_t v51 = swift_slowAlloc();
      uint64_t v55 = (uint64_t)v17;
      unint64_t v56 = v51;
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v53 = a3;
      uint64_t v54 = v7;
      id v23 = v17;
      id v52 = (char *)v6;
      id v24 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v22 = v17;

      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v55 = a1;
      swift_errorRetain();
      sub_1000CBE70((uint64_t *)&unk_1007076D0);
      uint64_t v25 = String.init<A>(describing:)();
      uint64_t v55 = sub_10009B0E4(v25, v26, (uint64_t *)&v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v27 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, v19, "[Erase] Source: %@ failed with error: %s ", (uint8_t *)v20, 0x16u);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, char *))(v54 + 8))(v12, v52);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    id v34 = (void *)_convertErrorToNSError(_:)();
    DOCPresentAlertForError();

    return swift_errorRelease();
  }
  else
  {
    static Logger.Rename.getter();
    id v28 = a2;
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.debug.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    id v52 = v9;
    uint64_t v53 = a3;
    if (v31)
    {
      id v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      *(_DWORD *)id v32 = 138412290;
      uint64_t v54 = v7;
      unint64_t v56 = v28;
      id v33 = v28;
      uint64_t v7 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v51->Class isa = (Class)v28;

      id v9 = v52;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "[Erase] Source: %@ succeeded.", v32, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v29 = v28;
    }

    id v36 = *(NSObject **)(v7 + 8);
    uint64_t v54 = v7 + 8;
    ((void (*)(char *, uint64_t))v36)(v15, v6);
    static Logger.Rename.getter();
    id v37 = v28;
    id v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = (uint8_t *)swift_slowAlloc();
      Swift::String v41 = (void *)swift_slowAlloc();
      uint64_t v51 = v36;
      *(_DWORD *)id v40 = 138412290;
      unint64_t v56 = v37;
      uint64_t v42 = v6;
      char v43 = v37;
      id v36 = v51;
      id v9 = v52;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v41 = v37;

      uint64_t v6 = v42;
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[Erase] Source: %@ finished. Invoking sidebar update block to refresh items.", v40, 0xCu);
      sub_1000CBE70(&qword_100707CC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v38 = v37;
    }
    uint64_t v44 = v53;

    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v9, v6);
    id v45 = *(char **)(v44 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_sourcesOrderObserver);
    if (v45)
    {
      uint64_t v46 = *(void (**)(uint64_t))&v45[OBJC_IVAR____TtC5Files22DOCSourceOrderObserver_updateBlock];
      swift_beginAccess();
      char v47 = v45;
      swift_retain();
      uint64_t v48 = swift_bridgeObjectRetain();
      v46(v48);

      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1005783A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if (a6 > 3u) {
    return;
  }
  uint64_t v8 = self;
  [v8 begin];
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  v19[4] = sub_10057D1B8;
  v19[5] = v9;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  void v19[2] = sub_1000666D8;
  void v19[3] = &unk_1006B88A8;
  uint64_t v10 = _Block_copy(v19);
  id v11 = a2;
  swift_release();
  [v8 setCompletionBlock:v10];
  _Block_release(v10);
  uint64_t v12 = OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount;
  uint64_t v13 = *(void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableReloadsCoalescedCount) = v15;
  sub_10030DCC4(1u, 1);
  uint64_t v16 = *(void *)(a1 + v12);
  BOOL v14 = __OFSUB__(v16, 1);
  uint64_t v17 = v16 - 1;
  if (v14)
  {
LABEL_10:
    __break(1u);
    return;
  }
  *(void *)(a1 + v12) = v17;
  if (!v17 && *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_diffableNeedsReload) == 1)
  {
    char v18 = [self areAnimationsEnabled];
    sub_10004DBB0(v18, 1);
  }
  *(unsigned char *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_shouldStopEditingOnFinishedEdit) = 1;
  [v8 commit];
}

id sub_100578554(char *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v10.receiver = a1;
  v10.super_class = ObjectType;
  if (objc_msgSendSuper2(&v10, "isSelected"))
  {
    a1[qword_100715660] = 1;
    v9.receiver = a1;
    v9.super_class = ObjectType;
    unsigned int v3 = [super isSelected];
    v8.receiver = a1;
    v8.super_class = ObjectType;
    [super setSelected:0];
    v7.receiver = a1;
    v7.super_class = ObjectType;
    if (v3 != objc_msgSendSuper2(&v7, "isSelected")) {
      [a1 setNeedsUpdateConfiguration];
    }
  }
  sub_10042EBBC(1);
  sub_10042EBBC(0);
  uint64_t v4 = qword_100715608;
  uint64_t v5 = *(void **)&a1[qword_100715608];
  if (v5) {
    [v5 setUserInteractionEnabled:1];
  }
  sub_10042E8B8(1);
  sub_10042EBBC(0);
  id result = *(id *)&a1[v4];
  if (result) {
    return [result becomeFirstResponder];
  }
  return result;
}

void sub_100578660(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5, char *a6, void *a7)
{
  uint64_t v77 = a7;
  objc_super v78 = a6;
  LODWORD(v7) = a5;
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28((id)a2, a3, a4, v7);
  sub_10010ED28((id)a2, a3, a4, v7);
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.info.getter();
  BOOL v17 = os_log_type_enabled(v15, (os_log_type_t)v16);
  uint64_t v76 = a3;
  if (v17)
  {
    int v70 = v16;
    uint64_t v71 = v12;
    uint64_t v72 = v11;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v82 = v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v79 = sub_10009B0E4(0xD000000000000020, 0x8000000100602AA0, &v82);
    v69[0] = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    id v74 = (id)a2;
    uint64_t v75 = a4;
    int v73 = (int)v7;
    id v20 = sub_10024AAE8(a2, a3, a4, (char)v7);
    id v21 = [v20 displayName];

    v69[1] = v19;
    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    uint64_t v79 = sub_10009B0E4(v22, v24, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    a2 = (unint64_t)v74;
    a4 = v75;
    a3 = v76;
    LOBYTE(v7) = v73;
    sub_10010EDB8(v74, v76, v75, v73);
    sub_10010EDB8((id)a2, a3, a4, v7);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v70, "%s: Performing context menu action for location: %s.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v71 + 8))(v14, v72);
  }
  else
  {
    sub_10010EDB8((id)a2, a3, a4, v7);
    sub_10010EDB8((id)a2, a3, a4, v7);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (v7 == 1) {
    goto LABEL_13;
  }
  if (v7 == 2)
  {
    id v47 = (id)a2;
    id v48 = sub_10024AAE8(a2, a3, a4, 2);
    id v49 = [v47 displayName];
    uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v51 = a3;
    uint64_t v75 = a4;
    uint64_t v53 = v52;

    sub_1000CBE70((uint64_t *)&unk_1007141F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10059B760;
    *(void *)(inited + 32) = 0xD000000000000036;
    *(void *)(inited + 40) = 0x80000001005E0230;
    uint64_t v55 = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    *(void *)(inited + 48) = v48;
    *(void *)(inited + 72) = v55;
    *(void *)(inited + 80) = 0xD000000000000035;
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 88) = 0x80000001005E0270;
    *(void *)(inited + 96) = v50;
    *(void *)(inited + 104) = v53;
    id v56 = v48;
    unint64_t v57 = sub_100042C20(inited);
    id v58 = v78;
    id v59 = [v78 effectiveAppearance];
    unsigned __int8 v60 = (void *)a2;
    uint64_t v61 = *(void **)&v58[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    unint64_t v62 = (objc_class *)type metadata accessor for DOCActionContext();
    uint64_t v63 = (char *)objc_allocWithZone(v62);
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v59;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v61;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v58;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(void *)&v63[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v57;
    v80[0].receiver = v63;
    v80[0].super_class = v62;
    id v64 = v61;
    uint64_t v65 = v58;
    id v39 = [(objc_super *)v80 init];

    sub_10010EDB8(v60, v51, v75, 2u);
LABEL_23:
    sub_1003EC438(v77, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v39);
    goto LABEL_24;
  }
  if (v7 == 5 && (!(a4 | a3 | a2) || a2 == 1 && !(a4 | a3)))
  {
LABEL_13:
    unint64_t v25 = a2;
    uint64_t v26 = a3;
    uint64_t v27 = a4;
    id v28 = sub_10024AAE8(a2, v26, a4, (char)v7);
    char v29 = (char)v7;
    objc_super v7 = v78;
    id v30 = [v78 effectiveAppearance];
    BOOL v31 = *(void **)&v7[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    sub_1000CBE70((uint64_t *)&unk_1007141F0);
    uint64_t v32 = swift_initStackObject();
    *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
    *(void *)(v32 + 32) = 0xD000000000000036;
    *(void *)(v32 + 40) = 0x80000001005E0230;
    *(void *)(v32 + 72) = sub_10009E6C4(0, (unint64_t *)&unk_1007085C0);
    *(void *)(v32 + 48) = v28;
    id v33 = v31;
    id v34 = v28;
    unint64_t v35 = sub_100042C20(v32);
    id v36 = (objc_class *)type metadata accessor for DOCActionContext();
    id v37 = (char *)objc_allocWithZone(v36);
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v30;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v33;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v7;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(void *)&v37[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v35;
    v81.receiver = v37;
    v81.super_class = v36;
    id v38 = v7;
    LOBYTE(v7) = v29;
    [super init];
  }
  else
  {
    unint64_t v25 = a2;
    uint64_t v27 = a4;
    id v40 = v78;
    id v41 = [v78 effectiveAppearance];
    id v42 = *(id *)&v40[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    unint64_t v43 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    uint64_t v44 = (objc_class *)type metadata accessor for DOCActionContext();
    id v45 = (char *)objc_allocWithZone(v44);
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v41;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v42;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = v40;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = 0;
    *(void *)&v45[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v43;
    v83.receiver = v45;
    v83.super_class = v44;
    uint64_t v46 = v40;
    [super init];
  }
  if (v7 - 1 < 2) {
    goto LABEL_23;
  }
  if (!(_BYTE)v7)
  {
    sub_1000CBE70((uint64_t *)&unk_1007084E0);
    uint64_t v66 = swift_allocObject();
    *(_OWORD *)(v66 + 16) = xmmword_1005A04F0;
    *(void *)(v66 + 32) = v25;
    uint64_t v82 = v66;
    specialized Array._endMutation()();
    uint64_t v67 = v82;
    uint64_t v68 = v76;
    sub_10010ED28((id)v25, v76, v27, 0);
    sub_10010ED28((id)v25, v68, v27, 0);
    sub_1003EC438(v77, v67, (uint64_t)v39);
    swift_bridgeObjectRelease();
    sub_10010EDB8((id)v25, v68, v27, 0);
    goto LABEL_24;
  }
  if (v7 == 5 && (!(v27 | v76 | v25) || v25 == 1 && !(v27 | v76))) {
    goto LABEL_23;
  }
LABEL_24:
}

uint64_t sub_100578F18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v28 = v16;
    uint64_t v29 = v12;
    uint64_t v30 = v11;
    uint64_t v31 = a6;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v33 = v27;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v32 = sub_10009B0E4(0xD000000000000020, 0x8000000100602AD0, &v33);
    uint64_t v26 = &v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v19 = [v18 displayName];

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v32 = sub_10009B0E4(v20, v22, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v28, "%s: Performing context menu action for location: %s.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v30);
    a6 = v31;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v24 = (void *)result;
    id v25 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    [v24 sidebarViewController:a6 wantsToReveal:v25];

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100579298(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  uint64_t v15 = Logger.logObject.getter();
  int v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, (os_log_type_t)v16))
  {
    int v27 = v16;
    uint64_t v28 = v12;
    uint64_t v29 = v11;
    uint64_t v30 = a6;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = v26;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v31 = sub_10009B0E4(0xD000000000000014, 0x8000000100602B50, &v32);
    id v25 = &v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    id v18 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v19 = [v18 displayName];

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v31 = sub_10009B0E4(v20, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v27, "%s: Performing context menu action for location: %s.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v29);
    a6 = v30;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  unint64_t v23 = *(void **)(a6 + qword_100715638);
  if (v23)
  {
    id v24 = v23;
    sub_1002B8AC4();
  }
}

void sub_1005795E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, char *a6, void *a7, void *a8)
{
  id v56 = a6;
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  id v18 = Logger.logObject.getter();
  int v55 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v18, (os_log_type_t)v55))
  {
    uint64_t v49 = v15;
    uint64_t v50 = v14;
    uint64_t v51 = a7;
    uint64_t v52 = a8;
    uint64_t v19 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315394;
    uint64_t v57 = sub_10009B0E4(0xD000000000000021, 0x8000000100602D00, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v53 = a3;
    uint64_t v54 = a4;
    id v20 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v21 = [v20 displayName];

    if (v21)
    {
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;
    }
    else
    {
      uint64_t v22 = 0;
      unint64_t v24 = 0xE000000000000000;
    }
    uint64_t v57 = sub_10009B0E4(v22, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    a3 = v53;
    a4 = v54;
    sub_10010EDB8(a2, v53, v54, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v55, "%s: Performing context menu action for location: %s.", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v17, v50);
    id v25 = v51;
    a8 = v52;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    id v25 = a7;
  }
  uint64_t v26 = v56;
  if (!a5 || a5 == 3)
  {
    id v27 = a2;
    sub_10057B93C(v26, v27, v25);

    return;
  }
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = a2;
  *(void *)(v28 + 24) = a3;
  *(void *)(v28 + 32) = a4;
  *(unsigned char *)(v28 + 40) = a5;
  *(void *)(v28 + 48) = v26;
  *(void *)(v28 + 56) = v25;
  *(void *)(v28 + 64) = a8;
  if (a5 != 1)
  {
    id v41 = a2;
    uint64_t v42 = a3;
    uint64_t v43 = a4;
    unsigned __int8 v44 = a5;
LABEL_18:
    sub_10010ED28(v41, v42, v43, v44);
    id v45 = v26;
    id v46 = v25;
    id v47 = a8;
    goto LABEL_19;
  }
  type metadata accessor for DOCFileProviderSource(0);
  uint64_t v29 = swift_dynamicCastClass();
  if (!v29)
  {
    id v41 = a2;
    uint64_t v42 = a3;
LABEL_17:
    uint64_t v43 = a4;
    unsigned __int8 v44 = 1;
    goto LABEL_18;
  }
  uint64_t v30 = a3;
  uint64_t v31 = *(void **)(v29 + OBJC_IVAR____TtC5Files21DOCFileProviderSource_providerDomain);
  if (!v31)
  {
    id v41 = a2;
    uint64_t v42 = v30;
    goto LABEL_17;
  }
  uint64_t v32 = self;
  sub_10010ED28(a2, v30, a4, 1u);
  sub_10010ED28(a2, v30, a4, 1u);
  sub_10010ED28(a2, v30, a4, 1u);
  uint64_t v33 = v26;
  id v34 = v25;
  id v35 = a8;
  id v36 = v31;
  id v37 = [v32 defaultManager];
  id v38 = (void *)swift_allocObject();
  v38[2] = sub_10057D21C;
  v38[3] = v28;
  v38[4] = v36;
  aBlock[4] = (uint64_t)sub_10057D2B4;
  aBlock[5] = (uint64_t)v38;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10000CAE4;
  void aBlock[3] = (uint64_t)&unk_1006B8920;
  id v39 = _Block_copy(aBlock);
  id v40 = v36;
  swift_retain();
  swift_release();
  [v37 doc_fetchRootItemForProviderDomain:v40 completionHandler:v39];
  _Block_release(v39);

  sub_10010EDB8(a2, v30, a4, 1u);
  sub_10010EDB8(a2, v30, a4, 1u);
LABEL_19:
  swift_release();
}

void sub_100579B78(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void *a7, void *a8, void *a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a1;
  *(void *)(v17 + 24) = a3;
  *(void *)(v17 + 32) = a4;
  *(void *)(v17 + 40) = a5;
  *(unsigned char *)(v17 + 48) = a6;
  *(void *)(v17 + 56) = a7;
  *(void *)(v17 + 64) = a8;
  *(void *)(v17 + 72) = a2;
  *(void *)(v17 + 80) = a9;
  aBlock[4] = sub_10057D3E0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000666D8;
  void aBlock[3] = &unk_1006B8A10;
  id v18 = _Block_copy(aBlock);
  id v19 = a1;
  sub_10010ED28(a3, a4, a5, a6);
  id v20 = a7;
  id v21 = a8;
  swift_errorRetain();
  id v22 = a9;
  swift_release();
  DOCRunInMainThread();
  _Block_release(v18);
}

void sub_100579CBC(void *a1, void *a2, uint64_t a3, uint64_t a4, int a5, char *a6, void *a7, uint64_t a8, void *a9)
{
  if (a1)
  {
    id v16 = a1;
    sub_10057B93C(a6, v16, a7);
  }
  else if (a8)
  {
    swift_errorRetain();
    sub_100577288(a6, a8, a9, (char *)a7, a2, a3, a4, a5);
    swift_errorRelease();
  }
}

id sub_100579DC4()
{
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v1 = result;
    v7._uint64_t object = (void *)0x8000000100602B90;
    v2._uint64_t countAndFlagsBits = 0x41206574656C6544;
    v2._uint64_t object = (void *)0xEA00000000006C6CLL;
    v3._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v3._uint64_t object = (void *)0xEB00000000656C62;
    v4._uint64_t countAndFlagsBits = 0;
    v4._uint64_t object = (void *)0xE000000000000000;
    v7._uint64_t countAndFlagsBits = 0xD000000000000042;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, (NSBundle)v1, v4, v7);

    sub_10009E6C4(0, (unint64_t *)&qword_100706740);
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self systemImageNamed:v5];

    swift_retain();
    return (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100579F28(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, void *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a8;
  *(void *)(v17 + 24) = a9;
  *(void *)(v17 + 32) = a3;
  *(void *)(v17 + 40) = a4;
  *(void *)(v17 + 48) = a5;
  *(unsigned char *)(v17 + 56) = a6;
  *(void *)(v17 + 64) = a1;
  *(void *)(v17 + 72) = a2;
  *(void *)(v17 + 80) = a7;
  swift_retain();
  sub_10010ED28(a3, a4, a5, a6);
  swift_retain();
  sub_10057B760((uint64_t)a7, (uint64_t)sub_10057CF04, v17);

  return swift_release();
}

uint64_t sub_10057A010(unint64_t a1, uint64_t (*a2)(uint64_t (*)(uint64_t a1), uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, unsigned __int8 a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a4;
    *(void *)(v16 + 24) = a5;
    *(void *)(v16 + 32) = a6;
    *(unsigned char *)(v16 + 40) = a7;
    *(void *)(v16 + 48) = a1;
    *(void *)(v16 + 56) = a10;
    swift_bridgeObjectRetain();
    sub_10010ED28(a4, a5, a6, a7);
    id v17 = a10;
    id v18 = (void *)a2(sub_10057D054, v16);
    swift_release();
    [v18 setAttributes:2, a8];
    goto LABEL_6;
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a4;
  *(void *)(v20 + 24) = a5;
  *(void *)(v20 + 32) = a6;
  *(unsigned char *)(v20 + 40) = a7;
  sub_10010ED28(a4, a5, a6, a7);
  id v18 = (void *)a2(sub_10057D0AC, v20);
  swift_release();
  [v18 setAttributes:1, a8];
LABEL_6:
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1005A04F0;
  *(void *)(v21 + 32) = v18;
  uint64_t v26 = v21;
  specialized Array._endMutation()();
  id v22 = v18;
  v25(v26);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10057A224(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  uint64_t v13 = Logger.logObject.getter();
  int v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v24 = v14;
    uint64_t v25 = v10;
    uint64_t v26 = v9;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v28 = v23;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v27 = sub_10009B0E4(0xD000000000000016, 0x8000000100602B70, &v28);
    v22[1] = &v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2080;
    id v16 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v17 = [v16 displayName];

    if (v17)
    {
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v20 = v19;
    }
    else
    {
      uint64_t v18 = 0;
      unint64_t v20 = 0xE000000000000000;
    }
    uint64_t v27 = sub_10009B0E4(v18, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v24, "%s: No items, disabling context menu action for location: %s.", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v12, v26);
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

id sub_10057A540(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, unint64_t a6, char *a7)
{
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  id v17 = Logger.logObject.getter();
  int v31 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, (os_log_type_t)v31))
  {
    uint64_t v27 = v14;
    uint64_t v28 = v13;
    unint64_t v29 = a6;
    uint64_t v30 = a7;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v33 = v26;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v32 = sub_10009B0E4(0xD000000000000016, 0x8000000100602B70, &v33);
    v25[1] = &v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2080;
    id v19 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v20 = [v19 displayName];

    if (v20)
    {
      uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
    uint64_t v32 = sub_10009B0E4(v21, v23, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v31, "%s: Performing context menu action for location: %s.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v28);
    a6 = v29;
    a7 = v30;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return sub_10057BEE0(a6, a7);
}

void sub_10057A874(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v38 = v12;
    uint64_t v39 = v11;
    id v40 = a6;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    aBlock[0] = v37;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v43 = sub_10009B0E4(0xD000000000000016, 0x8000000100602BE0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2080;
    uint64_t v41 = a3;
    uint64_t v42 = a4;
    id v18 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v19 = [v18 displayName];

    if (v19)
    {
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v22 = v21;
    }
    else
    {
      uint64_t v20 = 0;
      unint64_t v22 = 0xE000000000000000;
    }
    uint64_t v43 = sub_10009B0E4(v20, v22, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    a3 = v41;
    a4 = v42;
    sub_10010EDB8(a2, v41, v42, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: Performing context menu action for location: %s.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
    a6 = v40;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if (a5 == 3)
  {
    type metadata accessor for DOCSmartFolderManager();
    id v33 = a2;
    id v34 = (void *)static DOCSmartFolderManager.sharedManager.getter();
    DOCSmartFolderManager.delete(hotFolder:for:)();
  }
  else
  {
    if (a5 == 2)
    {
      id v35 = a2;
      sub_10024AE30(a6, (uint64_t)DOCSplitBrowserViewController.didCommitPreview(of:), 0);
      unint64_t v29 = a2;
      uint64_t v30 = a3;
      uint64_t v31 = a4;
      unsigned __int8 v32 = 2;
    }
    else
    {
      if (a5) {
        return;
      }
      unint64_t v23 = self;
      id v24 = a2;
      uint64_t v25 = a3;
      id v26 = [v23 sharedManager];
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = DOCSplitBrowserViewController.didCommitPreview(of:);
      *(void *)(v27 + 24) = 0;
      aBlock[4] = (uint64_t)sub_100312858;
      aBlock[5] = v27;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10000A884;
      void aBlock[3] = (uint64_t)&unk_1006B8830;
      uint64_t v28 = _Block_copy(aBlock);
      swift_release();
      [v26 removeFavorite:v24 completion:v28];
      _Block_release(v28);

      unint64_t v29 = a2;
      uint64_t v30 = v25;
      uint64_t v31 = a4;
      unsigned __int8 v32 = 0;
    }
    sub_10010EDB8(v29, v30, v31, v32);
  }
}

uint64_t sub_10057AD2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9, uint64_t (*a10)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v37 = a8;
  uint64_t v39 = a7;
  uint64_t v15 = a10;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.Sidebar.getter();
  sub_10010ED28(a2, a3, a4, a5);
  sub_10010ED28(a2, a3, a4, a5);
  uint64_t v20 = Logger.logObject.getter();
  int v38 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, (os_log_type_t)v38))
  {
    unsigned __int8 v32 = v19;
    uint64_t v33 = v17;
    uint64_t v30 = v20;
    uint64_t v34 = v16;
    uint64_t v35 = a6;
    uint64_t v36 = a10;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v41 = v31;
    *(_DWORD *)uint64_t v21 = 136315394;
    uint64_t v40 = sub_10009B0E4(v37, a9, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2080;
    id v22 = sub_10024AAE8((unint64_t)a2, a3, a4, a5);
    id v23 = [v22 displayName];

    if (v23)
    {
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v26 = v25;
    }
    else
    {
      uint64_t v24 = 0;
      unint64_t v26 = 0xE000000000000000;
    }
    uint64_t v28 = v30;
    uint64_t v40 = sub_10009B0E4(v24, v26, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v38, "%s: Performing context menu action for location: %s.", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
    uint64_t v27 = v39;
    a6 = v35;
    uint64_t v15 = v36;
  }
  else
  {
    sub_10010EDB8(a2, a3, a4, a5);
    sub_10010EDB8(a2, a3, a4, a5);

    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v27 = v39;
  }
  return v15(a6, v27, a2, a3, a4, a5);
}

void sub_10057B080()
{
  uint64_t v1 = v0;
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for DOCGetInfoErrorPresentingViewController();
  [super viewDidLoad];
  Swift::String v2 = *(void **)&v0[OBJC_IVAR____TtC5Files39DOCGetInfoErrorPresentingViewController_errorViewController];
  id v3 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v2];
  UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationPopover);
  id v4 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v2 action:"doc_dismissViewController"];
  id v5 = [v2 navigationItem];
  [v5 setRightBarButtonItem:v4];

  [v1 doc_addChildWithEqualAutoresizingFrame:v3];
}

void sub_10057B1F0()
{
}

id sub_10057B200()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCGetInfoErrorPresentingViewController();
  return [super dealloc];
}

void *sub_10057B244(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, char a6, char *a7, void *a8)
{
  id result = _swiftEmptyArrayStorage;
  unint64_t v22 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v11; ++i)
    {
      char v21 = *(unsigned char *)(a1 + i + 32);
      sub_100575484(a3, &v21, a2, a4, a5, a6, a7, a8, &v20);
      if (v8)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v20)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return (void *)v22;
  }
  return result;
}

Class sub_10057B388(uint64_t a1)
{
  if (([v1 isEditing] & 1) != 0
    || [*(id *)&v1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration] browserViewContext])
  {
    return 0;
  }
  Class v3 = sub_100574750(a1);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    objc_super v6 = self;
    v9[4] = sub_1000B1434;
    void v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_1001FCE6C;
    v9[3] = &unk_1006B84E8;
    Swift::String v7 = _Block_copy(v9);
    uint64_t v8 = v3;
    swift_retain();
    swift_release();
    Class v3 = (Class)[v6 configurationWithIdentifier:0 previewProvider:0 actionProvider:v7];
    swift_release();
    _Block_release(v7);
  }
  return v3;
}

uint64_t type metadata accessor for DOCGetInfoErrorPresentingViewController()
{
  return self;
}

uint64_t sub_10057B51C()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10057B558(uint64_t a1)
{
  sub_1005795E4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), *(char **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_10057B574(uint64_t a1)
{
  return sub_10057B70C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10057A874);
}

uint64_t sub_10057B58C()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10057B5DC(uint64_t a1, uint64_t a2)
{
  return sub_10057D234(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100579F28);
}

void sub_10057B5F8()
{
  sub_10057C2D0(*(void **)(v0 + 48), *(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_10057B610(uint64_t a1)
{
  return sub_10057B70C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100579298);
}

uint64_t sub_10057B628()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  swift_release();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057B678(uint64_t a1)
{
  return sub_10057D178(a1, 0xD000000000000040, 0x8000000100602B00, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_100577A1C);
}

uint64_t sub_10057B6AC()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10057B6F4(uint64_t a1)
{
  return sub_10057B70C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100578F18);
}

uint64_t sub_10057B70C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_10057B72C(uint64_t a1)
{
  return sub_10057B744(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_100578660);
}

uint64_t sub_10057B744(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

void sub_10057B760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = [self defaultManager];
  id v8 = [v7 newTrashCollection];

  id v9 = [objc_allocWithZone((Class)DOCItemCollectionObserver) initWithItemCollection:v8];
  uint64_t v10 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver);
  *(void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashObserver) = v9;
  id v11 = v9;

  uint64_t v12 = (void *)swift_allocObject();
  _OWORD v12[2] = a2;
  void v12[3] = a3;
  uint64_t v12[4] = sub_10057CF78;
  _OWORD v12[5] = v6;
  void v16[4] = sub_10057CFC0;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_100007C6C;
  void v16[3] = &unk_1006B8768;
  uint64_t v13 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  id v14 = [v11 addSubscriber:v13];
  _Block_release(v13);
  uint64_t v15 = *(void **)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber);
  *(void *)(a1 + OBJC_IVAR____TtC5Files24DOCSidebarViewController_trashSubscriber) = v14;
  swift_release();
}

void sub_10057B93C(char *a1, void *a2, void *a3)
{
  id v6 = [a1 effectiveAppearance];
  id v7 = *(void **)&a1[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  id v9 = v7;
  unint64_t v10 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
  id v11 = (objc_class *)type metadata accessor for DOCActionContext();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v6;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v9;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = a1;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
  *(void *)&v12[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v10;
  v52.receiver = v12;
  v52.super_class = v11;
  uint64_t v13 = a1;
  id v14 = [(char *)[super init]];
  uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_configuration];
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting];
  sub_1000CBE70((uint64_t *)&unk_1007084E0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1005A04F0;
  *(void *)(v17 + 32) = a2;
  uint64_t v50 = v17;
  specialized Array._endMutation()();
  uint64_t v18 = (objc_class *)type metadata accessor for DOCServiceInfoViewController();
  id v19 = objc_allocWithZone(v18);
  v19[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_isInPopoverMode] = 0;
  *(void *)&v19[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_configuration] = v15;
  id v20 = objc_allocWithZone((Class)DOCItemInfoViewController);
  swift_unknownObjectRetain_n();
  id v21 = v15;
  id v22 = a2;
  id v23 = v19;
  id v24 = v21;
  sub_1000CBE70((uint64_t *)&unk_100706730);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v20 initWithNodes:isa configuration:v24 actionReporting:v16];

  swift_unknownObjectRelease();
  *(void *)&v23[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoViewController] = v26;
  id v27 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v26];
  *(void *)&v23[OBJC_IVAR____TtC5Files28DOCServiceInfoViewController_infoNavigationController] = v27;
  [v27 _setBuiltinTransitionStyle:1];

  v51.receiver = v23;
  v51.super_class = v18;
  id v28 = [super init];

  swift_unknownObjectRelease();
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  v29[3] = a3;
  v29[4] = v13;
  uint64_t v30 = v13;
  id v31 = v28;
  id v32 = a3;
  uint64_t v33 = v30;
  id v34 = v31;
  id v35 = v32;
  uint64_t v36 = v33;
  id v37 = v34;
  id v38 = v35;
  uint64_t v39 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  swift_release();
  if (!v50 && swift_dynamicCastObjCProtocolConditional())
  {
    id v40 = v37;
    uint64_t v41 = (void *)UIViewController.associatedObjectStorage.getter();
    swift_getKeyPath();
    type metadata accessor for DOCPresentationPreheatController();
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = 0x3FE0000000000000;
    swift_unknownObjectWeakInit();
    *(void *)(v42 + 32) = _swiftEmptyArrayStorage;
    *(unsigned char *)(v42 + 40) = 0;
    swift_unknownObjectWeakAssign();
    uint64_t v50 = v42;
    dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
  }
  uint64_t v43 = (void *)UIViewController.associatedObjectStorage.getter();
  swift_getKeyPath();
  dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
  swift_release();

  if (v50)
  {
    if (*(unsigned char *)(v50 + 40) == 2)
    {
      sub_1005771AC(v37, v38, v36);
    }
    else
    {
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = sub_10057D308;
      *(void *)(v44 + 24) = v29;
      swift_beginAccess();
      id v45 = *(char **)(v50 + 32);
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v50 + 32) = v45;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v45 = sub_1000B7F78(0, *((void *)v45 + 2) + 1, 1, v45);
        *(void *)(v50 + 32) = v45;
      }
      unint64_t v48 = *((void *)v45 + 2);
      unint64_t v47 = *((void *)v45 + 3);
      if (v48 >= v47 >> 1)
      {
        id v45 = sub_1000B7F78((char *)(v47 > 1), v48 + 1, 1, v45);
        *(void *)(v50 + 32) = v45;
      }
      *((void *)v45 + 2) = v48 + 1;
      uint64_t v49 = &v45[16 * v48];
      *((void *)v49 + 4) = sub_1000879B8;
      *((void *)v49 + 5) = v44;
      swift_endAccess();
      sub_10010FB6C();
    }

    swift_release();
  }
  else
  {
    sub_1005771AC(v37, v38, v36);
  }
  swift_release();
}

id sub_10057BEE0(unint64_t a1, char *a2)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id result = (id)_DocumentManagerBundle();
  if (result)
  {
    uint64_t v5 = result;
    v28._uint64_t object = (void *)0x80000001005F0F20;
    v6._uint64_t countAndFlagsBits = 0x41206574656C6544;
    v6._uint64_t object = (void *)0xEA00000000006C6CLL;
    v7._uint64_t countAndFlagsBits = 0x617A696C61636F4CLL;
    v7._uint64_t object = (void *)0xEB00000000656C62;
    v8._uint64_t countAndFlagsBits = 0;
    v8._uint64_t object = (void *)0xE000000000000000;
    v28._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
    DOCLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v28);

    id v9 = objc_allocWithZone((Class)UIDocumentBrowserAction);
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_100152290;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100156760;
    void aBlock[3] = &unk_1006B87E0;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = [v9 initWithIdentifier:v10 localizedTitle:v11 unresolvedHandler:v12];

    _Block_release(v12);
    swift_release();
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self systemImageNamed:v14];

    [v13 setImage:v15];
    [v13 setAvailability:1];
    [v13 setNavigationSide:1];
    [v13 setMenuSortOrder:28];
    [v13 setActionStyle:1];
    [v13 setRequiresFullyFormedItems:0];
    id v16 = [a2 effectiveAppearance];
    uint64_t v17 = *(void **)&a2[OBJC_IVAR____TtC5Files24DOCSidebarViewController_configuration];
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    id v19 = v17;
    unint64_t v20 = sub_100042C20((uint64_t)_swiftEmptyArrayStorage);
    id v21 = (objc_class *)type metadata accessor for DOCActionContext();
    id v22 = (char *)objc_allocWithZone(v21);
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_popoverPresentationSourceItem] = 0;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_appearance] = v16;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_configuration] = v19;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_presentingViewController] = a2;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_transitionProxy] = 0;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_actionReporting] = Strong;
    *(void *)&v22[OBJC_IVAR____TtC5Files16DOCActionContext_userInfo] = v20;
    v26.receiver = v22;
    v26.super_class = v21;
    id v23 = a2;
    id v24 = [super init];
    swift_bridgeObjectRetain();
    if (a1 >> 62)
    {
      sub_1000CBE70((uint64_t *)&unk_100706730);
      uint64_t v25 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
      a1 = v25;
    }
    else
    {
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    }
    sub_1003EC438(v13, a1, (uint64_t)v24);

    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10057C2D0(void *a1, id a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v9 = a5;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (uint8_t *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  id v19 = (char *)&v81 - v18;
  if (v9 != 1) {
    return;
  }
  uint64_t v93 = v16;
  id v85 = v17;
  id v20 = a2;
  static Logger.Rename.getter();
  sub_10010ED28(a2, a3, a4, 1u);
  sub_10010ED28(a2, a3, a4, 1u);
  sub_10010ED28(a2, a3, a4, 1u);
  id v21 = a1;
  sub_10010ED28(a2, a3, a4, 1u);
  id v22 = (char *)v21;
  id v23 = Logger.logObject.getter();
  uint64_t v24 = a3;
  int v25 = static os_log_type_t.error.getter();
  BOOL v26 = os_log_type_enabled(v23, (os_log_type_t)v25);
  id v91 = a2;
  uint64_t v92 = v24;
  id v89 = v20;
  uint64_t v90 = v11;
  Swift::String v88 = v13;
  if (v26)
  {
    objc_super v83 = v19;
    LODWORD(v86) = v25;
    os_log_t v87 = v23;
    uint64_t v27 = swift_slowAlloc();
    Swift::String v28 = (char *)swift_slowAlloc();
    uint64_t v82 = (void *)swift_slowAlloc();
    v94[0] = v82;
    *(_DWORD *)uint64_t v27 = 138412802;
    id v96 = v20;
    id v29 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v84 = v28;
    *(void *)Swift::String v28 = a2;
    sub_10010EDB8(a2, v24, a4, 1u);
    uint64_t v30 = a4;
    sub_10010EDB8(a2, v24, a4, 1u);
    *(_WORD *)(v27 + 12) = 2080;
    id v31 = *(id *)(*(void *)&v22[OBJC_IVAR____TtC5Files24DOCSidebarViewController_locationSelection] + 16);
    if (v31) {
      id v31 = [v31 sourceIdentifier];
    }
    id v96 = v31;
    sub_1000CBE70((uint64_t *)&unk_100711B40);
    uint64_t v32 = String.init<A>(describing:)();
    id v96 = (id)sub_10009B0E4(v32, v33, (uint64_t *)v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2080;
    id v96 = [v29 identifier];
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    uint64_t v34 = String.init<A>(describing:)();
    id v96 = (id)sub_10009B0E4(v34, v35, (uint64_t *)v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    a2 = v91;
    uint64_t v24 = v92;
    sub_10010EDB8(v91, v92, a4, 1u);
    sub_10010EDB8(a2, v24, a4, 1u);
    os_log_t v36 = v87;
    _os_log_impl((void *)&_mh_execute_header, v87, (os_log_type_t)v86, "[Erase] Source: %@ current sidebar selection: %s source location: %s ", (uint8_t *)v27, 0x20u);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v37 = *(void (**)(char *, uint64_t))(v90 + 8);
    v37(v83, v93);
    id v20 = v89;
  }
  else
  {
    sub_10010EDB8(a2, v24, a4, 1u);
    sub_10010EDB8(a2, v24, a4, 1u);

    sub_10010EDB8(a2, v24, a4, 1u);
    sub_10010EDB8(a2, v24, a4, 1u);

    id v37 = *(void (**)(char *, uint64_t))(v11 + 8);
    v37(v19, v93);
    uint64_t v30 = a4;
  }
  id v38 = swift_allocObject();
  v38[2].Class isa = (Class)v20;
  v38[3].Class isa = (Class)v22;
  type metadata accessor for DOCUSBFormatting();
  sub_10010ED28(a2, v24, v30, 1u);
  uint64_t v39 = v22;
  static DOCUSBFormatting.shared.getter();
  os_log_t v87 = v38;
  dispatch thunk of DOCUSBFormatting.performErase(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)();
  swift_release();
  id v40 = &v39[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem];
  int v41 = v39[OBJC_IVAR____TtC5Files24DOCSidebarViewController_currentlySelectedSidebarItem + 24];
  if (v41 == 255)
  {
    id v85 = 0;
    id v54 = v91;
    goto LABEL_18;
  }
  uint64_t v84 = v39;
  id v86 = v37;
  uint64_t v42 = v20;
  uint64_t v44 = *((void *)v40 + 1);
  uint64_t v43 = *((void *)v40 + 2);
  id v45 = *(id *)v40;
  sub_10010ED28(*(id *)v40, v44, v43, v41);
  id v46 = sub_10024AAE8((unint64_t)v45, v44, v43, v41);
  sub_1000A7C1C(v45, v44, v43, v41);
  id v47 = [v46 sourceIdentifier];

  id v48 = v47;
  id v49 = [v42 identifier];
  uint64_t v50 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v52 = v51;
  if (v50 != static String._unconditionallyBridgeFromObjectiveC(_:)() || v52 != v53)
  {
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v54 = v91;
    if (v55) {
      goto LABEL_13;
    }
    id v85 = v48;

    id v37 = v86;
    uint64_t v39 = v84;
LABEL_18:
    static Logger.Rename.getter();
    uint64_t v68 = v92;
    sub_10010ED28(v54, v92, v30, 1u);
    uint64_t v69 = v39;
    sub_10010ED28(v54, v68, v30, 1u);
    int v70 = v69;
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      id v91 = (id)swift_slowAlloc();
      id v96 = v91;
      *(_DWORD *)uint64_t v73 = 136315394;
      id v74 = (void *)*((void *)v40 + 1);
      uint64_t v75 = (void *)*((void *)v40 + 2);
      unsigned __int8 v76 = v40[24];
      v94[0] = *(id *)v40;
      v94[1] = v74;
      v94[2] = v75;
      unsigned __int8 v95 = v76;
      sub_1000A9454(v94[0], (uint64_t)v74, (uint64_t)v75, v76);
      sub_1000CBE70((uint64_t *)&unk_10071CE60);
      uint64_t v77 = String.init<A>(describing:)();
      id v86 = v37;
      v94[0] = (id)sub_10009B0E4(v77, v78, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v73 + 12) = 2080;
      v94[0] = [v89 identifier];
      type metadata accessor for DOCDocumentSourceIdentifier(0);
      uint64_t v79 = String.init<A>(describing:)();
      v94[0] = (id)sub_10009B0E4(v79, v80, (uint64_t *)&v96);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10010EDB8(v54, v68, v30, 1u);
      sub_10010EDB8(v54, v68, v30, 1u);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "[Erase] Erase requested when the current sidebar selection is NOT the drive to be erased. Current selection ID: %s Drive to be erased ID: %s ", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      sub_10010EDB8(v54, v68, v30, 1u);
      v86((char *)v88, v93);
    }
    else
    {
      sub_10010EDB8(v54, v68, v30, 1u);

      swift_release();
      sub_10010EDB8(v54, v68, v30, 1u);
      sub_10010EDB8(v54, v68, v30, 1u);

      v37((char *)v88, v93);
    }
    return;
  }

  swift_bridgeObjectRelease_n();
  id v54 = v91;
LABEL_13:
  id v56 = (char *)v85;
  static Logger.Rename.getter();
  id v57 = v48;
  id v58 = Logger.logObject.getter();
  os_log_type_t v59 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v58, v59))
  {
    unsigned __int8 v60 = (uint8_t *)swift_slowAlloc();
    id v91 = (id)swift_slowAlloc();
    v94[0] = v91;
    *(_DWORD *)unsigned __int8 v60 = 136315138;
    Swift::String v88 = v60 + 4;
    id v96 = v57;
    type metadata accessor for DOCDocumentSourceIdentifier(0);
    id v61 = v57;
    uint64_t v62 = String.init<A>(describing:)();
    id v96 = (id)sub_10009B0E4(v62, v63, (uint64_t *)v94);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "[Erase] Erase requested when the current sidebar selection is the drive to be erased. Marking for reselection when the drive reappears location: %s", v60, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v86(v56, v93);
  id v64 = [v89 identifier];
  uint64_t v65 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v67 = v66;

  sub_100287B88(v65, v67);
  sub_10010EDB8(v54, v92, v30, 1u);
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_10057CE10()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10057CE50(uint64_t a1)
{
  sub_100577C40(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10057CE58()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10057CEA0()
{
  return sub_100577D2C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10057CEAC()
{
  swift_release();
  sub_10010EDB8(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned char *)(v0 + 56));
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10057CF04(unint64_t a1)
{
  return sub_10057A010(a1, *(uint64_t (**)(uint64_t (*)(uint64_t), uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_10057CF40()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10057CF78()
{
}

uint64_t sub_10057CF80()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10057CFC0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t v2 = (*(uint64_t (**)(void))(v0 + 16))();
  return v1(v2);
}

uint64_t sub_10057D004()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057D054(uint64_t a1)
{
  return sub_10057B744(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10057A540);
}

uint64_t sub_10057D06C()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10057D0AC(uint64_t a1)
{
  return sub_10057A224(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_10057D0BC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10057D0F8()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057D148(uint64_t a1)
{
  return sub_10057D178(a1, 0xD000000000000016, 0x8000000100602CE0, (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))sub_1005783A8);
}

uint64_t sub_10057D178(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t))
{
  return sub_10057AD2C(a1, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(unsigned __int8 *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), a2, a3, a4);
}

id sub_10057D1B8()
{
  return sub_100578554(*(char **)(v0 + 16));
}

uint64_t sub_10057D1C4()
{
  sub_10010EDB8(*(id *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10057D21C(uint64_t a1, uint64_t a2)
{
  return sub_10057D234(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void, void))sub_100579B78);
}

uint64_t sub_10057D234(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void, void))
{
  return a3(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(unsigned __int8 *)(v3 + 40), *(void *)(v3 + 48), *(void *)(v3 + 56), *(void *)(v3 + 64));
}

uint64_t sub_10057D274()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10057D2B4(void *a1, uint64_t a2)
{
  sub_100576D6C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_10057D2C0()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_10057D308()
{
  return sub_1005771AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_10057D318()
{
  swift_release();

  swift_errorRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10057D368()
{
  return sub_100576E6C(*(uint64_t (**)(uint64_t, uint64_t, double))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_10057D378()
{
  sub_10010EDB8(*(id *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  swift_errorRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_10057D3E0()
{
  sub_100579CBC(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(char **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80));
}

unsigned char *_s17ContextMenuActionOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *id result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057D4E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17ContextMenuActionOMa()
{
  return &_s17ContextMenuActionON;
}

unint64_t sub_10057D520()
{
  unint64_t result = qword_10071CE70;
  if (!qword_10071CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071CE70);
  }
  return result;
}

uint64_t sub_10057D5CC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  int v3 = *(void **)(v0 + 32);
  unsigned int v4 = *(void **)(v0 + 40);
  uint64_t v5 = *(void **)(v0 + 48);
  unsigned int v6 = *(void **)(v0 + 56);
  Swift::String v7 = *(void **)(v0 + 64);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t destroy for DOCItemCollectionContainerDataSourceConfiguration(id *a1)
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  unsigned int v6 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  Swift::String v7 = *(void **)(a2 + 32);
  Swift::String v8 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  int v9 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  Swift::String v7 = *(void **)(a2 + 8);
  Swift::String v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  id v10 = *(void **)(a2 + 16);
  id v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  id v13 = *(void **)(a2 + 24);
  id v14 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v13;
  id v15 = v13;

  id v16 = *(void **)(a2 + 32);
  uint64_t v17 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v16;
  id v18 = v16;

  id v19 = *(void **)(a2 + 40);
  id v20 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v19;
  id v21 = v19;

  id v22 = *(void **)(a1 + 48);
  id v23 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v23;
  id v24 = v23;

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v25 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 72) = v25;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

__n128 initializeWithTake for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for DOCItemCollectionContainerDataSourceConfiguration(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  long long v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  Swift::String v7 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for DOCItemCollectionContainerDataSourceConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 82)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DOCItemCollectionContainerDataSourceConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 82) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 82) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCItemCollectionContainerDataSourceConfiguration()
{
  return &type metadata for DOCItemCollectionContainerDataSourceConfiguration;
}

uint64_t *sub_10057D9E8()
{
  sub_1000A7258(v0[4]);
  sub_1000A7258(v0[6]);
  uint64_t v1 = (char *)v0 + *(void *)(*v0 + 128);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_10057DA9C()
{
  id v1 = [*v0 shortDescription];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._uint64_t object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  return 0x20646E65707061;
}

uint64_t sub_10057DB28()
{
  uint64_t result = static DOCLog.UI.getter();
  qword_10071CF90 = result;
  return result;
}

uint64_t sub_10057DB48(char *a1, char *a2)
{
  int v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v11 = (char *)&v49 - v10;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10011029C();
  *(void *)uint64_t v18 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  char v19 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v20 = *(void *)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_hierarchyController]
      + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
  swift_beginAccess();
  uint64_t v21 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21)
    && *(unsigned char *)(v20 + *(int *)(v21 + 20)) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v14, 1, 1, v21);
    sub_1002268E0((uint64_t)v14);
  }
  uint64_t v18 = 0x20646E65707061;
  id v23 = &v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
  id v24 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
  uint64_t v25 = *(void **)&v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
  *(void *)id v23 = a1;
  *((void *)v23 + 1) = a2;
  BOOL v26 = a2;
  a2 = a1;
  sub_100180FC8(v24, v25);
  Date.init()();
  a1 = &v3[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_timestampOfLastLocationChangeAttempt];
  swift_beginAccess();
  uint64_t v27 = v50;
  uint64_t v28 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v9, a1, v51);
  Date.timeIntervalSince(_:)();
  double v30 = v29;
  id v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  v31(v9, v28);
  v31(v11, v28);
  [self cancelPreviousPerformRequestsWithTarget:v3 selector:"performPendingLocationChange" object:0];
  if (v30 < 0.5)
  {
    [v3 performSelector:@"performPendingLocationChange" withObject:0 afterDelay:0];
    if (qword_100705358 == -1)
    {
LABEL_7:
      static os_log_type_t.debug.getter();
      sub_1000CBE70((uint64_t *)&unk_100708800);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1005A0030;
      uint64_t v52 = v18;
      unint64_t v53 = 0xE700000000000000;
      id v33 = [a2 shortDescription];
      uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_t v36 = v35;

      v37._uint64_t countAndFlagsBits = v34;
      v37._uint64_t object = v36;
      String.append(_:)(v37);
      swift_bridgeObjectRelease();
      uint64_t v38 = v52;
      unint64_t v39 = v53;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_100073F48();
      *(void *)(v32 + 32) = v38;
      *(void *)(v32 + 40) = v39;
      os_log(_:dso:log:type:_:)();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
LABEL_13:
    swift_once();
    goto LABEL_7;
  }
  if (qword_100705358 != -1) {
    swift_once();
  }
  static os_log_type_t.debug.getter();
  sub_1000CBE70((uint64_t *)&unk_100708800);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1005A0030;
  uint64_t v52 = 0x20646E65707061;
  unint64_t v53 = 0xE700000000000000;
  id v41 = [a2 shortDescription];
  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v44 = v43;

  v45._uint64_t countAndFlagsBits = v42;
  v45._uint64_t object = v44;
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  uint64_t v46 = v52;
  unint64_t v47 = v53;
  *(void *)(v40 + 56) = &type metadata for String;
  *(void *)(v40 + 64) = sub_100073F48();
  *(void *)(v40 + 32) = v46;
  *(void *)(v40 + 40) = v47;
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();
  sub_10057E17C();
LABEL_11:
  Date.init()();
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v50 + 40))(a1, v11, v51);
  return swift_endAccess();
}

void sub_10057E17C()
{
  uint64_t v1 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  long long v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v41 - v5;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange);
  if (v7)
  {
    v41[0] = v0 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange;
    v41[1] = v0;
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8);
    uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC5Files22DOCLocationChangePacer_hierarchyController);
    uint64_t v10 = v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_loadingDisabledOperation;
    swift_beginAccess();
    sub_10057F370(v10, (uint64_t)v4);
    uint64_t v11 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
    int v14 = v13(v4, 1, v11);
    uint64_t v42 = v9;
    if (v14 == 1)
    {
      uint64_t v15 = v9 + OBJC_IVAR____TtC5Files22DOCHierarchyController_localOperation;
      swift_beginAccess();
      sub_10057F370(v15, (uint64_t)v6);
      id v16 = v8;
      id v17 = v7;
      sub_10057F3D8((uint64_t)v4);
    }
    else
    {
      sub_10017FEEC((uint64_t)v4, (uint64_t)v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
      id v18 = v8;
      id v19 = v7;
    }
    uint64_t v20 = v8;
    if (v13(v6, 1, v11) == 1)
    {
      sub_10057F3D8((uint64_t)v6);
    }
    else
    {
      char v21 = v6[*(int *)(v11 + 24)];
      sub_10057F4C4((uint64_t)v6);
      if (v21)
      {
        if (qword_100705358 != -1) {
          swift_once();
        }
        static os_log_type_t.debug.getter();
        os_log(_:dso:log:type:_:)();
        goto LABEL_24;
      }
    }
    if (qword_100705358 != -1) {
      swift_once();
    }
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1005A0030;
    uint64_t v43 = 0x20646E65707061;
    unint64_t v44 = 0xE700000000000000;
    id v23 = [v7 shortDescription];
    uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    BOOL v26 = v25;

    v27._uint64_t countAndFlagsBits = v24;
    v27._uint64_t object = v26;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    uint64_t v28 = v43;
    unint64_t v29 = v44;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_100073F48();
    *(void *)(v22 + 32) = v28;
    *(void *)(v22 + 40) = v29;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v31 = (void *)swift_allocObject();
    void v31[2] = v30;
    v31[3] = v7;
    void v31[4] = v20;
    if (v20)
    {
      uint64_t v32 = (unint64_t *)(v42 + OBJC_IVAR____TtC5Files22DOCHierarchyController_locations);
      swift_beginAccess();
      unint64_t v33 = *v32;
      sub_100180F88(v7, v20);
      id v34 = v7;
      id v35 = v20;
      swift_bridgeObjectRetain();
      char v36 = sub_1000BB74C((uint64_t)v35, v33);
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0)
      {
        static os_log_type_t.debug.getter();
        os_log(_:dso:log:type:_:)();
        swift_release();

LABEL_23:
        uint64_t v38 = v41[0];
        unint64_t v39 = *(void **)v41[0];
        uint64_t v40 = *(void **)(v41[0] + 8);
        *(void *)v41[0] = 0;
        *(void *)(v38 + 8) = 0;
        sub_100180FC8(v39, v40);
LABEL_24:
        sub_100180FC8(v7, v20);
        return;
      }
    }
    else
    {
      sub_100180F88(v7, 0);
      id v37 = v7;
      id v35 = 0;
    }
    swift_retain();
    sub_10022EBF4(v7, v20, 1, 1, 1, (uint64_t)sub_10057F4B8, (uint64_t)v31);

    swift_release_n();
    goto LABEL_23;
  }
  if (qword_100705358 != -1) {
    swift_once();
  }
  static os_log_type_t.debug.getter();

  os_log(_:dso:log:type:_:)();
}

void sub_10057E724(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v4 = (char *)Strong;
    if (qword_100705358 != -1) {
      swift_once();
    }
    static os_log_type_t.debug.getter();
    sub_1000CBE70((uint64_t *)&unk_100708800);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1005A0030;
    id v6 = [a2 shortDescription];
    uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v9 = v8;

    v10._uint64_t countAndFlagsBits = v7;
    v10._uint64_t object = v9;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_100073F48();
    *(void *)(v5 + 32) = 0x20646E65707061;
    *(void *)(v5 + 40) = 0xE700000000000000;
    os_log(_:dso:log:type:_:)();
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void **)&v4[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange];
    if (v11)
    {
      uint64_t v12 = *(void **)&v4[OBJC_IVAR____TtC5Files22DOCLocationChangePacer_pendingLocationChange + 8];
      id v13 = v12;
      id v14 = v11;
      static os_log_type_t.debug.getter();
      os_log(_:dso:log:type:_:)();
      sub_10057DB48(v14, v12);

      sub_100180FC8(v11, v12);
    }
    else
    {
    }
  }
}

id sub_10057E994()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DOCLocationChangePacer();
  return [super dealloc];
}

unsigned char *sub_10057EA60@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10057EA6C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v3 = sub_10057F31C();

  return OptionSet<>.init()(a1, WitnessTable, v3);
}

uint64_t sub_10057EADC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet<>.contains(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10057EB3C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet.union(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10057EBA4(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet.intersection(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10057EC0C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet.symmetricDifference(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10057EC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet<>.insert(_:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_10057ECE0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet<>.remove(_:)(a1, a2, WitnessTable);
}

uint64_t sub_10057ED48(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return OptionSet<>.update(with:)(a1, a2, WitnessTable);
}

uint64_t sub_10057EDB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10057EDF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formUnion(_:));
}

uint64_t sub_10057EDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10057EDF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formIntersection(_:));
}

uint64_t sub_10057EDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10057EDF8(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))&OptionSet<>.formSymmetricDifference(_:));
}

uint64_t sub_10057EDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v7 = sub_10057F31C();

  return a4(a1, a2, WitnessTable, v7);
}

unsigned __int8 *sub_10057EE90@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10057EEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return == infix<A>(_:_:)(a1, a2, a3, WitnessTable, &protocol witness table for UInt8);
}

uint64_t sub_10057EF14(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return SetAlgebra<>.init(arrayLiteral:)(a1, a2, WitnessTable);
}

id *sub_10057EF7C()
{
  uint64_t v1 = (char *)v0 + *((void *)*v0 + 13);
  uint64_t v2 = type metadata accessor for Optional();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_10057F00C()
{
  sub_10057EF7C();

  return swift_deallocClassInstance();
}

uint64_t sub_10057F060()
{
  sub_10057D9E8();

  return swift_deallocClassInstance();
}

uint64_t sub_10057F0B8()
{
  uint64_t result = type metadata accessor for Optional();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCValueChangePacer.CoalescingSession()
{
  return sub_1000D21B0();
}

unsigned char *sub_10057F178(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057F244);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t type metadata accessor for DOCValueChangePacer.ValueContext()
{
  return sub_1000D21B0();
}

uint64_t type metadata accessor for DOCValueChangePacer.Behaviors()
{
  return sub_1000D21B0();
}

ValueMetadata *type metadata accessor for DOCLocationChange()
{
  return &type metadata for DOCLocationChange;
}

uint64_t sub_10057F2AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_10057F2C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_10057F2E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_10057F300()
{
  return swift_getWitnessTable();
}

unint64_t sub_10057F31C()
{
  unint64_t result = qword_10071D1E8;
  if (!qword_10071D1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071D1E8);
  }
  return result;
}

uint64_t sub_10057F370(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057F3D8(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070B640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10057F438()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10057F470()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10057F4B8()
{
  sub_10057E724(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10057F4C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DOCHierarchyController.FetchingOperationToken(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10057F520()
{
  sub_1000CBE70(&qword_10071D1F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1005A0030;
  uint64_t v1 = type metadata accessor for DocumentManagerExecutablesIntentsPackage();
  unint64_t result = sub_10057F5EC();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = result;
  qword_100737890 = v0;
  return result;
}

uint64_t sub_10057F580()
{
  if (qword_100705360 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for FilesAppIntentsPackage()
{
  return &type metadata for FilesAppIntentsPackage;
}

unint64_t sub_10057F5EC()
{
  unint64_t result = qword_10071D1F8;
  if (!qword_10071D1F8)
  {
    type metadata accessor for DocumentManagerExecutablesIntentsPackage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071D1F8);
  }
  return result;
}

void sub_10057F644(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DOCFileEntity();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(v4 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v55 = (uint64_t)&v48 - v8;
  uint64_t v9 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 56);
  uint64_t v53 = v12;
  uint64_t v50 = v13 + 56;
  v52(v11, 1, 1);
  uint64_t v14 = type metadata accessor for MainActor();
  uint64_t v15 = v2;
  uint64_t v51 = v14;
  uint64_t v16 = static MainActor.shared.getter();
  id v17 = (void *)swift_allocObject();
  void v17[2] = v16;
  v17[3] = &protocol witness table for MainActor;
  v17[4] = v15;
  sub_10003D154((uint64_t)v11, (uint64_t)&unk_10071D228, (uint64_t)v17);
  swift_release();
  uint64_t v18 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction;
  id v19 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkCreateFolderInteraction];
  if (v19)
  {
    id v20 = v19;
    [v15 loadViewIfNeeded];
    char v21 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (!v21)
    {
      __break(1u);
      goto LABEL_17;
    }
    [v21 removeInteraction:v20];
    uint64_t v22 = *(void **)&v15[v18];
    *(void *)&v15[v18] = 0;
  }
  uint64_t v23 = OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction;
  uint64_t v24 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController_linkTrashFileInteraction];
  if (!v24) {
    goto LABEL_7;
  }
  id v25 = v24;
  [v15 loadViewIfNeeded];
  BOOL v26 = *(void **)&v15[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (!v26)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  [v26 removeInteraction:v25];
  Swift::String v27 = *(void **)&v15[v23];
  *(void *)&v15[v23] = 0;

LABEL_7:
  if (!a1) {
    return;
  }
  id v28 = a1;
  uint64_t v29 = v55;
  id v49 = v28;
  sub_100162CCC(v28, v55);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)(v11, 1, 1, v53);
  uint64_t v30 = v54;
  sub_1001173A0(v29, v54);
  id v31 = v15;
  uint64_t v32 = static MainActor.shared.getter();
  unint64_t v33 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v34 = (void *)swift_allocObject();
  _OWORD v34[2] = v32;
  void v34[3] = &protocol witness table for MainActor;
  v34[4] = v31;
  sub_100142DFC(v30, (uint64_t)v34 + v33);
  sub_10003D154((uint64_t)v11, (uint64_t)&unk_10071D238, (uint64_t)v34);
  swift_release();
  id v35 = (objc_class *)type metadata accessor for UIAppIntentInteraction();
  id v36 = objc_allocWithZone(v35);
  sub_10030BF30();
  uint64_t v37 = UIAppIntentInteraction.init<A>(intent:perform:)();
  uint64_t v38 = *(void **)&v15[v18];
  *(void *)&v15[v18] = v37;

  unint64_t v39 = *(void **)&v15[v18];
  if (v39)
  {
    id v40 = v39;
    [v31 loadViewIfNeeded];
    id v41 = *(void **)&v31[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v41)
    {
      [v41 addInteraction:v40];

      goto LABEL_11;
    }
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_11:
  id v42 = objc_allocWithZone(v35);
  sub_100116A50();
  uint64_t v43 = UIAppIntentInteraction.init<A>(intent:perform:)();
  unint64_t v44 = *(void **)&v15[v23];
  *(void *)&v15[v23] = v43;

  Swift::String v45 = *(void **)&v15[v23];
  if (v45)
  {
    id v46 = v45;
    [v31 loadViewIfNeeded];
    unint64_t v47 = *(void **)&v31[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
    if (v47)
    {
      [v47 addInteraction:v46];

      sub_100117404(v55);
      return;
    }
    goto LABEL_19;
  }
  sub_100117404(v55);
}

uint64_t sub_10057FAE8(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1000CBE70(&qword_100707AC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.AppIntents.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134217984;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v20[1] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Change corpus content donated to Siri Vocabulary with %ld items", v13, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
  type metadata accessor for MainActor();
  swift_bridgeObjectRetain();
  id v16 = v2;
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  _OWORD v18[3] = &protocol witness table for MainActor;
  v18[4] = v16;
  v18[5] = a1;
  sub_100149288((uint64_t)v6, (uint64_t)&unk_10071D210, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10057FDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for DOCFileEntity();
  v5[5] = swift_task_alloc();
  sub_1000CBE70((uint64_t *)&unk_10070C630);
  void v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10057FEB4, v7, v6);
}

id sub_10057FEB4()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  id result = [v1 view];
  if (result)
  {
    int v3 = result;
    uint64_t v4 = v0[6];
    sub_1001173A0(v0[3], v0[5]);
    sub_1000CC05C(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
    EntityIdentifier.init<A>(for:)();
    uint64_t v5 = type metadata accessor for EntityIdentifier();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
    UIView.appEntityIdentifier.setter();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return (id)v6();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10057FFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_1000CBE70((uint64_t *)&unk_10070C630);
  v4[3] = swift_task_alloc();
  type metadata accessor for MainActor();
  void v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005800C0, v6, v5);
}

id sub_1005800C0()
{
  uint64_t v1 = (char *)v0[2];
  swift_release();
  id result = [v1 loadViewIfNeeded];
  int v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    uint64_t v4 = v0[3];
    uint64_t v5 = type metadata accessor for EntityIdentifier();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    id v6 = v3;
    UIView.appEntityIdentifier.setter();

    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return (id)v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005801A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for DOCFileEntity();
  v5[5] = swift_task_alloc();
  sub_1000CBE70((uint64_t *)&unk_10070C630);
  void v5[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[7] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005802A0, v7, v6);
}

id sub_1005802A0()
{
  uint64_t v1 = (char *)v0[2];
  swift_release();
  id result = [v1 loadViewIfNeeded];
  int v3 = *(void **)&v1[OBJC_IVAR____TtC5Files31DOCItemCollectionViewController__loadedCollectionView];
  if (v3)
  {
    uint64_t v4 = v0[6];
    sub_1001173A0(v0[3], v0[5]);
    sub_1000CC05C(&qword_100707F70, (void (*)(uint64_t))type metadata accessor for DOCFileEntity);
    id v5 = v3;
    EntityIdentifier.init<A>(for:)();
    uint64_t v6 = type metadata accessor for EntityIdentifier();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 0, 1, v6);
    UIView.appEntityIdentifier.setter();

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return (id)v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005803FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(void *)(v2 + 40) = *(void *)(a2 + 16);
  type metadata accessor for MainActor();
  *(void *)(v2 + 48) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = v3;
  return _swift_task_switch(sub_1005804A4, v4, v3);
}

uint64_t sub_1005804A4()
{
  uint64_t v1 = (uint64_t *)v0[2];
  v1[3] = sub_1000CBE70(&qword_10071D260);
  v1[4] = sub_1005828E8((unint64_t *)&unk_10071D268, &qword_10071D260);
  uint64_t v2 = sub_100052C70(v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100580578;
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[3];
  return sub_10030C440((uint64_t)v2, v6, v4, v5);
}

uint64_t sub_100580578()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_1005806B4;
  }
  else {
    uint64_t v5 = sub_1004E0F00;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005806B4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_10039B764(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100580724(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  v2[2] = a1;
  v2[3] = v3;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v5;
  void v2[6] = v4;
  return _swift_task_switch(sub_1005807C0, v5, v4);
}

uint64_t sub_1005807C0()
{
  uint64_t v1 = (uint64_t *)v0[2];
  v1[3] = sub_1000CBE70(&qword_10071B630);
  v1[4] = sub_1005828E8(&qword_100712F60, &qword_10071B630);
  uint64_t v2 = sub_100052C70(v1);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100580890;
  uint64_t v4 = v0[3];
  return sub_1001164C4((uint64_t)v2, v4);
}

uint64_t sub_100580890()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 64) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_100580A30;
  }
  else {
    uint64_t v5 = sub_1005809CC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005809CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100580A30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  sub_10039B764(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100580AA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  void v3[5] = a1;
  type metadata accessor for MainActor();
  v3[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100580B3C, v5, v4);
}

uint64_t sub_100580B3C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(uint64_t **)(v0 + 40);
    sub_100580CC0();
    v3[3] = sub_1000CBE70(&qword_10071B630);
    v3[4] = sub_1005828E8(&qword_100712F60, &qword_10071B630);
    sub_100052C70(v3);
    static IntentResult.result<>()();
  }
  else
  {
    uint64_t v5 = type metadata accessor for DOCAppIntentsGenericError();
    sub_1000CC05C((unint64_t *)&unk_100712F50, (void (*)(uint64_t))&type metadata accessor for DOCAppIntentsGenericError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for DOCAppIntentsGenericError.performIntentError(_:), v5);
    swift_willThrow();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100580CC0()
{
  uint64_t v0 = type metadata accessor for ShowHideOperation();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  SetFilenameExtensionVisibilityIntent.operation.getter();
  int v4 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v3, v0);
  if (v4 == enum case for ShowHideOperation.toggle(_:))
  {
    if (qword_1007051D0 != -1) {
      swift_once();
    }
    [*(id *)(qword_100737550 + 40) setForceDisplayFilenameExtensions:[*(id *)(qword_100737550 + 40) forceDisplayFilenameExtensions] ^ 1];
LABEL_13:
    sub_10007D85C();
    _s5Files31DOCItemCollectionViewControllerC13updateOverlay8animatedySb_tF_0();
    return;
  }
  if (v4 == enum case for ShowHideOperation.show(_:))
  {
    if (qword_1007051D0 != -1) {
      swift_once();
    }
    [*(id *)(qword_100737550 + 40) setForceDisplayFilenameExtensions:1];
    goto LABEL_13;
  }
  if (v4 == enum case for ShowHideOperation.hide(_:))
  {
    if (qword_1007051D0 != -1) {
      swift_once();
    }
    [*(id *)(qword_100737550 + 40) setForceDisplayFilenameExtensions:0];
    goto LABEL_13;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
}

uint64_t sub_100580EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  void v3[5] = a1;
  uint64_t v4 = type metadata accessor for GroupingMode();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[11] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100580FD8, v6, v5);
}

uint64_t sub_100580FD8()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = v0[10];
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v6 = (uint64_t *)v0[5];
    SetGroupingModeIntent.groupingMode.getter();
    sub_1005811B0(v2);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    v6[3] = sub_1000CBE70(&qword_10071B630);
    v6[4] = sub_1005828E8(&qword_100712F60, &qword_10071B630);
    sub_100052C70(v6);
    static IntentResult.result<>()();
  }
  else
  {
    uint64_t v8 = type metadata accessor for DOCAppIntentsGenericError();
    sub_1000CC05C((unint64_t *)&unk_100712F50, (void (*)(uint64_t))&type metadata accessor for DOCAppIntentsGenericError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v8 - 8) + 104))(v9, enum case for DOCAppIntentsGenericError.performIntentError(_:), v8);
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1005811B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = (uint64_t (**)(char *, uint64_t))v2;
  __chkstk_darwin(v2);
  id v86 = (char *)v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DOCItemSortMode();
  uint64_t v87 = *(void *)(v4 - 8);
  uint64_t v88 = v4;
  __chkstk_darwin(v4);
  uint64_t v92 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v89 = (char *)v70 - v7;
  __chkstk_darwin(v8);
  uint64_t v93 = (char *)v70 - v9;
  __chkstk_darwin(v10);
  unsigned __int8 v95 = (char *)v70 - v11;
  uint64_t v12 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  __chkstk_darwin(v12 - 8);
  uint64_t v84 = (char *)v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v85 = (char *)v70 - v15;
  uint64_t v16 = type metadata accessor for DOCItemGroupingBehavior();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v90 = (char *)v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v91 = (char *)v70 - v20;
  __chkstk_darwin(v21);
  objc_super v83 = (char *)v70 - v22;
  __chkstk_darwin(v23);
  id v25 = (char *)v70 - v24;
  uint64_t v26 = type metadata accessor for GroupingMode();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v79 = (char *)v70 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v82 = (char *)v70 - v30;
  double v32 = __chkstk_darwin(v31);
  id v34 = (char *)v70 - v33;
  id v35 = *(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16);
  uint64_t v36 = a1;
  v35((char *)v70 - v33, a1, v26, v32);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v27 + 88))(v34, v26);
  if (v37 == enum case for GroupingMode.none(_:))
  {
    (*(void (**)(char *, void, uint64_t))(v17 + 104))(v25, enum case for DOCItemGroupingBehavior.none(_:), v16);
    DOCItemCollectionViewController.groupOption(changeTo:)((uint64_t)v25);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v25, v16);
  }
  uint64_t v76 = v17;
  if (v37 == enum case for GroupingMode.kind(_:))
  {
    (*(void (**)(char *, void, uint64_t))(v87 + 104))(v25, enum case for DOCItemSortMode.kind(_:), v88);
    goto LABEL_25;
  }
  uint64_t v39 = v88;
  if (v37 != enum case for GroupingMode.date(_:))
  {
    if (v37 == enum case for GroupingMode.size(_:))
    {
      uint64_t v55 = (unsigned int *)&enum case for DOCItemSortMode.size(_:);
    }
    else
    {
      if (v37 != enum case for GroupingMode.sharedBy(_:))
      {
        uint64_t v62 = v86;
        static Logger.AppIntents.getter();
        unint64_t v63 = v82;
        ((void (*)(char *, uint64_t, uint64_t))v35)(v82, v36, v26);
        id v64 = Logger.logObject.getter();
        os_log_type_t v65 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v66 = (uint8_t *)swift_slowAlloc();
          unsigned __int8 v95 = (char *)swift_slowAlloc();
          unint64_t v98 = v95;
          *(_DWORD *)uint64_t v66 = 136315138;
          id v94 = v66 + 4;
          ((void (*)(char *, char *, uint64_t))v35)(v79, v63, v26);
          uint64_t v67 = String.init<A>(describing:)();
          uint64_t v96 = sub_10009B0E4(v67, v68, (uint64_t *)&v98);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v69 = *(void (**)(char *, uint64_t))(v27 + 8);
          v69(v82, v26);
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "Unknown grouping mode: %s", v66, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*(void (**)(char *, uint64_t (**)(char *, uint64_t)))(v80 + 8))(v86, v81);
        }
        else
        {
          uint64_t v69 = *(void (**)(char *, uint64_t))(v27 + 8);
          v69(v63, v26);

          (*(void (**)(char *, uint64_t (**)(char *, uint64_t)))(v80 + 8))(v62, v81);
        }
        return ((uint64_t (*)(char *, uint64_t))v69)(v34, v26);
      }
      uint64_t v55 = (unsigned int *)&enum case for DOCItemSortMode.sharedBy(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v87 + 104))(v25, *v55, v88);
LABEL_25:
    uint64_t v56 = v76;
    (*(void (**)(char *, void, uint64_t))(v76 + 104))(v25, enum case for DOCItemGroupingBehavior.grouped(_:), v16);
    DOCItemCollectionViewController.groupOption(changeTo:)((uint64_t)v25);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v25, v16);
  }
  id v40 = sub_10007DA34(0);
  uint64_t v41 = *((void *)v40 + 2);
  v70[0] = v40;
  if (!v41)
  {
    uint64_t v57 = 1;
    uint64_t v58 = v76;
    uint64_t v60 = (uint64_t)v84;
    uint64_t v59 = (uint64_t)v85;
    uint64_t v61 = (uint64_t)v83;
    goto LABEL_34;
  }
  id v42 = *(char **)(v76 + 16);
  uint64_t v43 = &v40[(*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80)];
  uint64_t v81 = (uint64_t (**)(char *, uint64_t))(v76 + 88);
  uint64_t v82 = v42;
  LODWORD(v80) = enum case for DOCItemGroupingBehavior.grouped(_:);
  uint64_t v77 = (void (**)(char *, uint64_t))(v76 + 8);
  uint64_t v75 = (void (**)(char *, uint64_t))(v76 + 96);
  id v74 = (void (**)(char *, char *, uint64_t))(v87 + 32);
  unsigned int v73 = enum case for DOCItemSortMode.modificationDate(_:);
  uint64_t v79 = (char *)(v87 + 104);
  id v86 = (char *)(v87 + 8);
  os_log_type_t v72 = (void (**)(char *, char *, uint64_t))(v87 + 16);
  unsigned int v71 = enum case for DOCItemSortMode.lastUsedDate(_:);
  uint64_t v78 = *(void *)(v76 + 72);
  Swift::String v45 = v90;
  unint64_t v44 = v91;
  v70[1] = v76 + 16;
  while (1)
  {
    unint64_t v47 = (void (*)(char *, char *, uint64_t))v82;
    ((void (*)(char *, char *, uint64_t))v82)(v44, v43, v16);
    v47(v45, v44, v16);
    int v48 = (*v81)(v45, v16);
    if (v48 != v80)
    {
      id v46 = *v77;
      (*v77)(v45, v16);
      v46(v44, v16);
      goto LABEL_9;
    }
    (*v75)(v45, v16);
    (*v74)(v95, v45, v39);
    id v49 = *(void (**)(char *, void, uint64_t))v79;
    (*(void (**)(char *, void, uint64_t))v79)(v93, v73, v39);
    sub_1000CC05C((unint64_t *)&unk_10071D2C0, (void (*)(uint64_t))&type metadata accessor for DOCItemSortMode);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v98 == (char *)v96 && v99 == v97) {
      char v50 = 1;
    }
    else {
      char v50 = _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void (**)(char *, uint64_t))v86;
    (*(void (**)(char *, uint64_t))v86)(v93, v39);
    uint64_t v52 = v89;
    (*v72)(v89, v95, v39);
    if (v50) {
      goto LABEL_31;
    }
    v49(v92, v71, v39);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v98 == (char *)v96 && v99 == v97) {
      break;
    }
    uint64_t v53 = v52;
    char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v51(v92, v39);
    v51(v95, v39);
    v51(v53, v39);
    if (v54) {
      goto LABEL_32;
    }
    Swift::String v45 = v90;
    unint64_t v44 = v91;
    (*v77)(v91, v16);
LABEL_9:
    v43 += v78;
    if (!--v41)
    {
      uint64_t v57 = 1;
      uint64_t v58 = v76;
      uint64_t v59 = (uint64_t)v85;
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease_n();
  v51(v92, v39);
LABEL_31:
  v51(v95, v39);
  v51(v52, v39);
LABEL_32:
  uint64_t v58 = v76;
  uint64_t v59 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v85, v91, v16);
  uint64_t v57 = 0;
LABEL_33:
  uint64_t v61 = (uint64_t)v83;
  uint64_t v60 = (uint64_t)v84;
LABEL_34:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, v57, 1, v16);
  swift_bridgeObjectRelease();
  sub_100582AD0(v59, v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v16) == 1)
  {
    (*(void (**)(uint64_t, void, uint64_t))(v87 + 104))(v61, enum case for DOCItemSortMode.modificationDate(_:), v39);
    (*(void (**)(uint64_t, void, uint64_t))(v58 + 104))(v61, enum case for DOCItemGroupingBehavior.grouped(_:), v16);
    sub_100582B38(v60);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 32))(v61, v60, v16);
  }
  DOCItemCollectionViewController.groupOption(changeTo:)(v61);
  (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v61, v16);
  return sub_100582B38(v59);
}

uint64_t sub_100581E60()
{
  swift_release();
  swift_bridgeObjectRelease();
  static Logger.AppIntents.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Dynamic donation to Siri Vocabulary failed with error: %@.", v3, 0xCu);
    sub_1000CBE70(&qword_100707CC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100582050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  void v5[6] = v6;
  return _swift_task_switch(sub_1005820E8, v7, v6);
}

uint64_t sub_1005820E8()
{
  v0[7] = (unint64_t)sub_1000CB7E4(v0[3], 500);
  v0[8] = sub_1000D52C8();
  return _swift_task_switch(sub_100582160, 0, 0);
}

uint64_t sub_100582160()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v5 = (uint64_t (*)(uint64_t (*)(), uint64_t))((char *)&async function pointer to dispatch thunk of SiriVocabulary.Corpus.change(_:)
                                                      + async function pointer to dispatch thunk of SiriVocabulary.Corpus.change(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100582260;
  return v5(sub_1003CC5A8, v2);
}

uint64_t sub_100582260()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1005823F0;
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v2 = sub_100582384;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100582384()
{
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_1005809CC, v1, v2);
}

uint64_t sub_1005823F0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_10058245C, v1, v2);
}

uint64_t sub_10058245C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005824D4()
{
  return sub_100012A50(48);
}

uint64_t sub_1005824DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000D1744;
  return sub_100582050(a1, v4, v5, v7, v6);
}

uint64_t sub_10058259C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005825D4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100582614(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000D1744;
  return sub_10057FFF8(a1, v4, v5, v6);
}

uint64_t sub_1005826C8()
{
  uint64_t v1 = (int *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();

  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for FileEntityIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1005827EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for DOCFileEntity() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000CB70;
  return sub_1005801A8(a1, v5, v6, v7, v8);
}

uint64_t sub_1005828E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100074618(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100582938()
{
  return sub_100012A50(56);
}

uint64_t sub_100582940()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100582978(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1000D1744;
  return sub_100580AA0(a1, a2, v2);
}

uint64_t sub_100582A24(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_10000CB70;
  return sub_100580EE0(a1, a2, v2);
}

uint64_t sub_100582AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100582B38(uint64_t a1)
{
  uint64_t v2 = sub_1000CBE70((uint64_t *)&unk_10070A1B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_UNKNOWN **static DOCNamedLocation.allCases.getter()
{
  return &off_10068ABC0;
}

uint64_t static DOCNamedLocation.from(location:)(uint64_t a1, unint64_t a2)
{
  return sub_100582BEC(a1, a2);
}

unint64_t DOCNamedLocation.init(rawValue:)(unint64_t a1)
{
  return sub_100336BE0(a1);
}

void sub_100582BDC(void *a1@<X8>)
{
  *a1 = &off_10068B6F8;
}

uint64_t sub_100582BEC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v8 = String.lowercased()();
  if (v8._countAndFlagsBits == 0x746E656D75636F64 && v8._object == (void *)0xE900000000000073
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v8._countAndFlagsBits == 0x706F746B736564 && v8._object == (void *)0xE700000000000000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v8._countAndFlagsBits == 0x64616F6C6E776F64 && v8._object == (void *)0xE900000000000073
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  if (v8._countAndFlagsBits == 0x726464756F6C6369 && v8._object == (void *)0xEB00000000657669)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v10) {
    return 3;
  }
  static Logger.UI.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    v14[1] = v13 + 4;
    swift_bridgeObjectRetain();
    v14[2] = sub_10009B0E4(a1, a2, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Can not create a named location from provided string: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

unint64_t sub_100583004()
{
  unint64_t result = qword_10071D2D0;
  if (!qword_10071D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071D2D0);
  }
  return result;
}

unint64_t sub_10058305C()
{
  unint64_t result = qword_10071D2D8;
  if (!qword_10071D2D8)
  {
    sub_100074618(&qword_1007118A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10071D2D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DOCNamedLocation()
{
  return &type metadata for DOCNamedLocation;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_1005830EC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v2 displayName];
  sub_1000DAB68((void *)&_mh_execute_header, v5, v6, "user did download node %@", v7, v8, v9, v10, 2u);
}

void sub_100583184(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  uint64_t v5 = a2;
  uint64_t v6 = [v4 displayName];
  int v7 = 138412546;
  uint64_t v8 = v6;
  __int16 v9 = 2112;
  uint64_t v10 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Error downloading item %@: %@", (uint8_t *)&v7, 0x16u);
}

void sub_100583244(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v3 = a2;
  uint64_t v4 = [v2 displayName];
  sub_1000DAB68((void *)&_mh_execute_header, v5, v6, "user did evict node %@", v7, v8, v9, v10, 2u);
}

void sub_1005832DC(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [a1 hierarchyController];
  uint64_t v5 = a1[12];
  int v6 = 138412802;
  uint64_t v7 = a1;
  __int16 v8 = 2048;
  uint64_t v9 = v4;
  __int16 v10 = 2048;
  uint64_t v11 = v5;
  _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Initializing the %@ with hierarchy controller %p and data source %p", (uint8_t *)&v6, 0x20u);
}

void sub_1005833B0(uint64_t a1, NSObject *a2)
{
  CFStringRef v2 = @"YES";
  if (a1) {
    CFStringRef v2 = @"NO";
  }
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  CFStringRef v6 = v2;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Will show location %@, or empty location, if nil (%@)", (uint8_t *)&v3, 0x16u);
}

void sub_10058344C()
{
  sub_1000DC6B0();
  sub_1000DC6CC((void *)&_mh_execute_header, v0, v1, "Will show location %@ (from root, animated: %@), or empty location, if nil (%@)");
}

void sub_1005834D8()
{
  sub_1000DC6B0();
  sub_1000DC6CC((void *)&_mh_execute_header, v0, v1, "Will reveal location %@ (from root, animated: %@), or empty location, if nil (%@)");
}

void sub_100583564(void *a1, void *a2)
{
  int v3 = a1;
  uint64_t v4 = [a2 lastObject];
  __int16 v5 = [a2 lastObject];
  CFStringRef v6 = [v5 fileProviderItem];
  uint64_t v7 = [a2 lastObject];
  __int16 v8 = [v7 sourceIdentifier];
  uint64_t v9 = [a2 lastObject];
  int v10 = 138413058;
  uint64_t v11 = v4;
  __int16 v12 = 2112;
  uint64_t v13 = v6;
  __int16 v14 = 2112;
  uint64_t v15 = v8;
  __int16 v16 = 1024;
  unsigned int v17 = [v9 isFPV2];
  _os_log_debug_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEBUG, "Last location is %@: item %@, source identifier %@, isFPV2 %d", (uint8_t *)&v10, 0x26u);
}

void sub_1005836A4(void *a1)
{
  os_log_t v1 = a1;
  CFStringRef v2 = (objc_class *)objc_opt_class();
  int v3 = NSStringFromClass(v2);
  int v4 = 138412290;
  __int16 v5 = v3;
  _os_log_fault_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_FAULT, "ERROR(performance): %@'s view was loaded during init", (uint8_t *)&v4, 0xCu);
}

void sub_100583750(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2112;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error getting item from URL: %@ error: %@", (uint8_t *)&v3, 0x16u);
}

void sub_1005837D8(uint64_t a1, void *a2)
{
  int v3 = *(void **)(a1 + 32);
  uint64_t v4 = a2;
  __int16 v5 = [v3 displayName];
  uint64_t v6 = [*(id *)(a1 + 40) displayName];
  int v7 = 138412546;
  __int16 v8 = v5;
  __int16 v9 = 2112;
  int v10 = v6;
  _os_log_debug_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEBUG, "User did delete tag %@ on item %@", (uint8_t *)&v7, 0x16u);
}

void sub_1005838AC(uint64_t a1, void *a2, uint64_t a3)
{
  __int16 v5 = *(void **)(a1 + 32);
  uint64_t v6 = a2;
  int v7 = [v5 displayName];
  __int16 v8 = [*(id *)(a1 + 40) displayName];
  int v9 = 138412802;
  int v10 = v7;
  __int16 v11 = 2112;
  __int16 v12 = v8;
  __int16 v13 = 2112;
  uint64_t v14 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_ERROR, "Failed to delete tag %@ on item %@. Error: %@", (uint8_t *)&v9, 0x20u);
}

void sub_10058398C(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Scene Identifier was nil. This may not be not be a problem. Reproduce and investigate if it is ok.", v1, 2u);
}

void sub_1005839D0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Cleaning tabbed browser from map table for identifier: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100583A48(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 138412546;
  uint64_t v4 = a1;
  __int16 v5 = 2048;
  uint64_t v6 = a2;
  _os_log_fault_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_FAULT, "%@ Couldn't find DOCTab (%lu) index", (uint8_t *)&v3, 0x16u);
}

uint64_t static _AssistantIntentsProvider.uniqueEntities.getter()
{
  return static _AssistantIntentsProvider.uniqueEntities.getter();
}

uint64_t type metadata accessor for AppIntentError()
{
  return type metadata accessor for AppIntentError();
}

uint64_t AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)()
{
  return AppEntityVisualState.init(isSelected:isHighlighted:isFocused:isDisabled:isEditing:isPrimary:)();
}

uint64_t type metadata accessor for AppEntityVisualState()
{
  return type metadata accessor for AppEntityVisualState();
}

uint64_t static AppIntent.openAppWhenRun.getter()
{
  return static AppIntent.openAppWhenRun.getter();
}

uint64_t static AppIntent.description.getter()
{
  return static AppIntent.description.getter();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t IntentFile.init(fileURL:filename:type:)()
{
  return IntentFile.init(fileURL:filename:type:)();
}

uint64_t IntentDialog.init(stringLiteral:)()
{
  return IntentDialog.init(stringLiteral:)();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t IntentDialog.init(_:)()
{
  return IntentDialog.init(_:)();
}

uint64_t static IntentResult.result<A>(opensIntent:)()
{
  return static IntentResult.result<A>(opensIntent:)();
}

uint64_t static IntentResult.result<A, B>(value:opensIntent:)()
{
  return static IntentResult.result<A, B>(value:opensIntent:)();
}

uint64_t static IntentResult.result<A>(value:)()
{
  return static IntentResult.result<A>(value:)();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t static ViewLocation.unknown.getter()
{
  return static ViewLocation.unknown.getter();
}

uint64_t type metadata accessor for ViewLocation()
{
  return type metadata accessor for ViewLocation();
}

uint64_t type metadata accessor for OpenURLIntent()
{
  return type metadata accessor for OpenURLIntent();
}

uint64_t OpenURLIntent.init(_:)()
{
  return OpenURLIntent.init(_:)();
}

uint64_t EntityProperty.wrappedValue.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t EntityProperty<>.init()()
{
  return EntityProperty<>.init()();
}

{
  return EntityProperty<>.init()();
}

uint64_t type metadata accessor for SiriVocabulary.DynamicTerm()
{
  return type metadata accessor for SiriVocabulary.DynamicTerm();
}

uint64_t SiriVocabulary.DynamicTerm.init<A>(_:entity:)()
{
  return SiriVocabulary.DynamicTerm.init<A>(_:entity:)();
}

uint64_t SiriVocabulary.Corpus.init(contents:capacity:)()
{
  return SiriVocabulary.Corpus.init(contents:capacity:)();
}

uint64_t type metadata accessor for SiriVocabulary.Corpus()
{
  return type metadata accessor for SiriVocabulary.Corpus();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t IntentParameter.needsValueError(_:)()
{
  return IntentParameter.needsValueError(_:)();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init<A>(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)()
{
  return IntentParameter<>.init<A>(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
}

uint64_t IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init<A>(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)()
{
  return IntentParameter<>.init<A>(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:optionsProvider:)();
}

uint64_t IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:supportedContentTypes:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:inputOptions:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:displayName:requestValueDialog:inputConnectionBehavior:)();
}

uint64_t EntityIdentifier.init<A>(for:)()
{
  return EntityIdentifier.init<A>(for:)();
}

uint64_t type metadata accessor for EntityIdentifier()
{
  return type metadata accessor for EntityIdentifier();
}

uint64_t static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.NegativeAssistantIntentPhrasesBuilder.buildExpression(_:)();
}

uint64_t _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)()
{
  return _AssistantIntent.NegativeAssistantIntentPhrases.init<A>(for:phrases:)();
}

uint64_t type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases()
{
  return type metadata accessor for _AssistantIntent.NegativeAssistantIntentPhrases();
}

uint64_t _AssistantIntent.IntentProjection.subscript.getter()
{
  return _AssistantIntent.IntentProjection.subscript.getter();
}

uint64_t type metadata accessor for _AssistantIntent.PhraseToken()
{
  return type metadata accessor for _AssistantIntent.PhraseToken();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.PhraseBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.PhraseBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.StringValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.StringValueBuilder.buildExpression(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)()
{
  return static _AssistantIntent.ParameterValueBuilder.buildExpression(_:)();
}

uint64_t _AssistantIntent.Value.init<A>(for:builder:)()
{
  return _AssistantIntent.Value.init<A>(for:builder:)();
}

uint64_t type metadata accessor for _AssistantIntent.Value()
{
  return type metadata accessor for _AssistantIntent.Value();
}

uint64_t _AssistantIntent.Phrase.init(stringLiteral:)()
{
  return _AssistantIntent.Phrase.init(stringLiteral:)();
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

{
  return _AssistantIntent.Phrase.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall _AssistantIntent.Phrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return _AssistantIntent.Phrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t _AssistantIntent.Phrase.init(stringInterpolation:)()
{
  return _AssistantIntent.Phrase.init(stringInterpolation:)();
}

uint64_t static _AssistantIntent.Builder.buildBlock(_:)()
{
  return static _AssistantIntent.Builder.buildBlock(_:)();
}

uint64_t static _AssistantIntent.Builder.buildExpression(_:)()
{
  return static _AssistantIntent.Builder.buildExpression(_:)();
}

uint64_t type metadata accessor for _AssistantIntent()
{
  return type metadata accessor for _AssistantIntent();
}

uint64_t _AssistantIntent.init<A>(_:phrases:parameterValues:)()
{
  return _AssistantIntent.init<A>(_:phrases:parameterValues:)();
}

uint64_t type metadata accessor for StringSearchScope()
{
  return type metadata accessor for StringSearchScope();
}

uint64_t FileEntityIdentifier.init(fileProviderItemID:)()
{
  return FileEntityIdentifier.init(fileProviderItemID:)();
}

uint64_t FileEntityIdentifier.fpItemID.getter()
{
  return FileEntityIdentifier.fpItemID.getter();
}

uint64_t type metadata accessor for FileEntityIdentifier()
{
  return type metadata accessor for FileEntityIdentifier();
}

uint64_t StringSearchCriteria.term.getter()
{
  return StringSearchCriteria.term.getter();
}

uint64_t type metadata accessor for StringSearchCriteria()
{
  return type metadata accessor for StringSearchCriteria();
}

uint64_t static AssistantSchemaEntity.isAssistantOnly.getter()
{
  return static AssistantSchemaEntity.isAssistantOnly.getter();
}

uint64_t static AssistantSchemaIntent.isAssistantOnly.getter()
{
  return static AssistantSchemaIntent.isAssistantOnly.getter();
}

uint64_t type metadata accessor for DisplayRepresentation.Image()
{
  return type metadata accessor for DisplayRepresentation.Image();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:synonyms:)()
{
  return DisplayRepresentation.init(title:subtitle:image:synonyms:)();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t type metadata accessor for DisplayRepresentation()
{
  return type metadata accessor for DisplayRepresentation();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)()
{
  return static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
}

uint64_t static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)()
{
  return static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
}

uint64_t IntentParameterSummary.init(_:table:)()
{
  return IntentParameterSummary.init(_:table:)();
}

uint64_t IntentParameterSummary.init(_:table:_:)()
{
  return IntentParameterSummary.init(_:table:_:)();
}

uint64_t ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)()
{
  return ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
}

Swift::Void __swiftcall ParameterSummaryString.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t ParameterSummaryString.init(stringInterpolation:)()
{
  return ParameterSummaryString.init(stringInterpolation:)();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t ProgressReportingIntent.progress.getter()
{
  return ProgressReportingIntent.progress.getter();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t _RepresentedEntityElement.init<A>(appEntity:geometry:state:subelements:)()
{
  return _RepresentedEntityElement.init<A>(appEntity:geometry:state:subelements:)();
}

uint64_t type metadata accessor for _RepresentedEntityElement()
{
  return type metadata accessor for _RepresentedEntityElement();
}

uint64_t type metadata accessor for IntentAuthenticationPolicy()
{
  return type metadata accessor for IntentAuthenticationPolicy();
}

uint64_t static CocoaError.fileReadNoPermission.getter()
{
  return static CocoaError.fileReadNoPermission.getter();
}

uint64_t type metadata accessor for CocoaError.Code()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t static FormatStyle<>.dateTime.getter()
{
  return static FormatStyle<>.dateTime.getter();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t CharacterSet.init(charactersIn:)()
{
  return CharacterSet.init(charactersIn:)();
}

uint64_t static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CharacterSet._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)Notification._bridgeToObjectiveC()();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.name.getter()
{
  return Notification.name.getter();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t URLQueryItem.name.getter()
{
  return URLQueryItem.name.getter();
}

uint64_t URLQueryItem.value.getter()
{
  return URLQueryItem.value.getter();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.getter()
{
  return URLComponents.queryItems.getter();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t static URLComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URLComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.path.setter()
{
  return URLComponents.path.setter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.month.getter()
{
  return DateComponents.month.getter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t LocalizedError.helpAnchor.getter()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t LocalizedError.failureReason.getter()
{
  return LocalizedError.failureReason.getter();
}

uint64_t LocalizedError.recoverySuggestion.getter()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter()
{
  return AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter();
}

uint64_t AttributeScopes.UIKitAttributes.font.getter()
{
  return AttributeScopes.UIKitAttributes.font.getter();
}

uint64_t AttributedString.subscript.setter()
{
  return AttributedString.subscript.setter();
}

uint64_t type metadata accessor for AttributedString.FormattingOptions()
{
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t AttributedString.init(doc_localized:options:locale:comment:)()
{
  return AttributedString.init(doc_localized:options:locale:comment:)();
}

uint64_t AttributedString.Runs.Run.subscript.getter()
{
  return AttributedString.Runs.Run.subscript.getter();
}

uint64_t AttributedString.Runs.Run.range.getter()
{
  return AttributedString.Runs.Run.range.getter();
}

uint64_t type metadata accessor for AttributedString.Runs.Run()
{
  return type metadata accessor for AttributedString.Runs.Run();
}

uint64_t type metadata accessor for AttributedString.Runs.Index()
{
  return type metadata accessor for AttributedString.Runs.Index();
}

uint64_t type metadata accessor for AttributedString.Runs()
{
  return type metadata accessor for AttributedString.Runs();
}

uint64_t AttributedString.runs.getter()
{
  return AttributedString.runs.getter();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t AttributedString.subscript.modify()
{
  return AttributedString.subscript.modify();
}

uint64_t AttributedString.init(_:)()
{
  return AttributedString.init(_:)();
}

uint64_t URLResourceValues.isDirectory.getter()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t URLResourceValues.localizedName.getter()
{
  return URLResourceValues.localizedName.getter();
}

uint64_t URLResourceValues.contentType.getter()
{
  return URLResourceValues.contentType.getter();
}

uint64_t URLResourceValues.isPackage.getter()
{
  return URLResourceValues.isPackage.getter();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t static _ErrorCodeProtocol.~= infix(_:_:)()
{
  return static _ErrorCodeProtocol.~= infix(_:_:)();
}

uint64_t AttributedSubstring.subscript.setter()
{
  return AttributedSubstring.subscript.setter();
}

NSPersonNameComponents __swiftcall PersonNameComponents._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)PersonNameComponents._bridgeToObjectiveC()();
  result._private = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)()
{
  return static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
}

uint64_t static PredicateExpressions.build_Arg<A>(_:)()
{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

{
  return static PredicateExpressions.build_Arg<A>(_:)();
}

uint64_t dispatch thunk of NSKeyValueObservation.invalidate()()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t type metadata accessor for NSKeyValueObservation()
{
  return type metadata accessor for NSKeyValueObservation();
}

uint64_t _BridgedStoredNSError.code.getter()
{
  return _BridgedStoredNSError.code.getter();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t LocalizedStringResource.init(stringLiteral:)()
{
  return LocalizedStringResource.init(stringLiteral:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t NSKeyValueObservedChange.newValue.getter()
{
  return NSKeyValueObservedChange.newValue.getter();
}

uint64_t NSKeyValueObservedChange.oldValue.getter()
{
  return NSKeyValueObservedChange.oldValue.getter();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t _KeyValueCodingAndObserving.willChangeValue<A>(for:)()
{
  return _KeyValueCodingAndObserving.willChangeValue<A>(for:)();
}

uint64_t _KeyValueCodingAndObserving.didChangeValue<A>(for:)()
{
  return _KeyValueCodingAndObserving.didChangeValue<A>(for:)();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

uint64_t URL.standardizedFileURL.getter()
{
  return URL.standardizedFileURL.getter();
}

uint64_t URL.isFileURL.getter()
{
  return URL.isFileURL.getter();
}

uint64_t URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)()
{
  return URL.bookmarkData(options:includingResourceValuesForKeys:relativeTo:)();
}

uint64_t URL.pathExtension.getter()
{
  return URL.pathExtension.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.resourceValues(forKeys:)()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t URL.init(fileURLWithPath:isDirectory:)()
{
  return URL.init(fileURLWithPath:isDirectory:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)()
{
  return URL.init(resolvingBookmarkData:options:relativeTo:bookmarkDataIsStale:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.checkResourceIsReachable()()
{
  return URL.checkResourceIsReachable()();
}

uint64_t URL.deletingLastPathComponent()()
{
  return URL.deletingLastPathComponent()();
}

uint64_t URL.contentType.getter()
{
  return URL.contentType.getter();
}

uint64_t URL.bumpLastOpenDate(delay:completionHandler:)()
{
  return URL.bumpLastOpenDate(delay:completionHandler:)();
}

uint64_t URL.promisedContentType.getter()
{
  return URL.promisedContentType.getter();
}

uint64_t URL.promisedItemResourceValues(forKeys:)()
{
  return URL.promisedItemResourceValues(forKeys:)();
}

Swift::Void __swiftcall URL.stopAccessingSecurityScopedResource()()
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Bool __swiftcall URL.startAccessingSecurityScopedResource()()
{
  return URL.startAccessingSecurityScopedResource()();
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.init(string:relativeTo:)()
{
  return URL.init(string:relativeTo:)();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.FormatStyle.year(_:)()
{
  return Date.FormatStyle.year(_:)();
}

uint64_t Date.FormatStyle.month(_:)()
{
  return Date.FormatStyle.month(_:)();
}

uint64_t static Date.FormatStyle.Symbol.Year.defaultDigits.getter()
{
  return static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Year()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Year();
}

uint64_t static Date.FormatStyle.Symbol.Month.wide.getter()
{
  return static Date.FormatStyle.Symbol.Month.wide.getter();
}

uint64_t type metadata accessor for Date.FormatStyle.Symbol.Month()
{
  return type metadata accessor for Date.FormatStyle.Symbol.Month();
}

uint64_t type metadata accessor for Date.FormatStyle()
{
  return type metadata accessor for Date.FormatStyle();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t Date.init(timeIntervalSinceNow:)()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.formatted<A>(_:)()
{
  return Date.formatted<A>(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t NSLog(_:_:)()
{
  return NSLog(_:_:)();
}

NSLocale __swiftcall Locale._bridgeToObjectiveC()()
{
  return (NSLocale)Locale._bridgeToObjectiveC()();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t Calendar.dateComponents(_:from:to:)()
{
  return Calendar.dateComponents(_:from:to:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t Calendar.isDateInYesterday(_:)()
{
  return Calendar.isDateInYesterday(_:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t IndexPath.description.getter()
{
  return IndexPath.description.getter();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath.> infix(_:_:)()
{
  return static IndexPath.> infix(_:_:)();
}

uint64_t static IndexPath.< infix(_:_:)()
{
  return static IndexPath.< infix(_:_:)();
}

uint64_t static IndexPath.== infix(_:_:)()
{
  return static IndexPath.== infix(_:_:)();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t IndexPath.count.getter()
{
  return IndexPath.count.getter();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t Selector.description.getter()
{
  return Selector.description.getter();
}

uint64_t static Selector.== infix(_:_:)()
{
  return static Selector.== infix(_:_:)();
}

uint64_t static AVPartialAsyncProperty<A>.tracks.getter()
{
  return static AVPartialAsyncProperty<A>.tracks.getter();
}

uint64_t static AVPartialAsyncProperty<A>.naturalSize.getter()
{
  return static AVPartialAsyncProperty<A>.naturalSize.getter();
}

uint64_t static AVPartialAsyncProperty<A>.formatDescriptions.getter()
{
  return static AVPartialAsyncProperty<A>.formatDescriptions.getter();
}

uint64_t static AVPartialAsyncProperty<A>.stringValue.getter()
{
  return static AVPartialAsyncProperty<A>.stringValue.getter();
}

uint64_t static AVPartialAsyncProperty<A>.commonMetadata.getter()
{
  return static AVPartialAsyncProperty<A>.commonMetadata.getter();
}

uint64_t static AVPartialAsyncProperty<A>.hasProtectedContent.getter()
{
  return static AVPartialAsyncProperty<A>.hasProtectedContent.getter();
}

uint64_t static AVPartialAsyncProperty<A>.duration.getter()
{
  return static AVPartialAsyncProperty<A>.duration.getter();
}

uint64_t _CGColorInitTrampoline.init(_colorLiteralRed:green:blue:alpha:)()
{
  return _CGColorInitTrampoline.init(_colorLiteralRed:green:blue:alpha:)();
}

NSNumber __swiftcall CGFloat._bridgeToObjectiveC()()
{
  return (NSNumber)CGFloat._bridgeToObjectiveC()();
}

uint64_t static CGFloat._forceBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static CGFloat._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t CGFloat.init(_:roundedBy:inScale:)()
{
  return CGFloat.init(_:roundedBy:inScale:)();
}

uint64_t FileRepresentation.init(contentType:shouldAttemptToOpenInPlace:exporting:importing:)()
{
  return FileRepresentation.init(contentType:shouldAttemptToOpenInPlace:exporting:importing:)();
}

uint64_t SentTransferredFile.init(_:allowAccessingOriginalFile:)()
{
  return SentTransferredFile.init(_:allowAccessingOriginalFile:)();
}

uint64_t ReceivedTransferredFile.file.getter()
{
  return ReceivedTransferredFile.file.getter();
}

uint64_t UIAppIntentInteraction.init<A>(intent:perform:)()
{
  return UIAppIntentInteraction.init<A>(intent:perform:)();
}

uint64_t type metadata accessor for UIAppIntentInteraction()
{
  return type metadata accessor for UIAppIntentInteraction();
}

uint64_t DOCUIPBrowserState.contentMode.getter()
{
  return DOCUIPBrowserState.contentMode.getter();
}

uint64_t DOCUIPBrowserState.contentMode.setter()
{
  return DOCUIPBrowserState.contentMode.setter();
}

uint64_t DOCUIPBrowserState._bridgeToObjectiveC()()
{
  return DOCUIPBrowserState._bridgeToObjectiveC()();
}

uint64_t DOCUIPBrowserState.documentLandingMode.getter()
{
  return DOCUIPBrowserState.documentLandingMode.getter();
}

uint64_t DOCUIPBrowserState.documentLandingMode.setter()
{
  return DOCUIPBrowserState.documentLandingMode.setter();
}

uint64_t static DOCUIPBrowserState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DOCUIPBrowserState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t DOCUIPBrowserState.init()()
{
  return DOCUIPBrowserState.init()();
}

uint64_t type metadata accessor for DOCUIPBrowserState()
{
  return type metadata accessor for DOCUIPBrowserState();
}

uint64_t static UTType.cPlusPlusHeader.getter()
{
  return static UTType.cPlusPlusHeader.getter();
}

uint64_t static UTType.cPlusPlusSource.getter()
{
  return static UTType.cPlusPlusSource.getter();
}

uint64_t static UTType.executable.getter()
{
  return static UTType.executable.getter();
}

uint64_t UTType.identifier.getter()
{
  return UTType.identifier.getter();
}

uint64_t static UTType.mpeg2Video.getter()
{
  return static UTType.mpeg2Video.getter();
}

uint64_t static UTType.mpeg4Audio.getter()
{
  return static UTType.mpeg4Audio.getter();
}

uint64_t static UTType.mpeg4Movie.getter()
{
  return static UTType.mpeg4Movie.getter();
}

uint64_t static UTType.sourceCode.getter()
{
  return static UTType.sourceCode.getter();
}

uint64_t static UTType.webArchive.getter()
{
  return static UTType.webArchive.getter();
}

uint64_t static UTType.spreadsheet.getter()
{
  return static UTType.spreadsheet.getter();
}

uint64_t static UTType.swiftSource.getter()
{
  return static UTType.swiftSource.getter();
}

uint64_t static UTType.presentation.getter()
{
  return static UTType.presentation.getter();
}

uint64_t static UTType.propertyList.getter()
{
  return static UTType.propertyList.getter();
}

uint64_t static UTType.symbolicLink.getter()
{
  return static UTType.symbolicLink.getter();
}

uint64_t static UTType.quickTimeMovie.getter()
{
  return static UTType.quickTimeMovie.getter();
}

uint64_t static UTType.xmlPropertyList.getter()
{
  return static UTType.xmlPropertyList.getter();
}

uint64_t static UTType.objectiveCSource.getter()
{
  return static UTType.objectiveCSource.getter();
}

uint64_t UTType.init(filenameExtension:conformingTo:)()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t static UTType.audiovisualContent.getter()
{
  return static UTType.audiovisualContent.getter();
}

uint64_t static UTType.binaryPropertyList.getter()
{
  return static UTType.binaryPropertyList.getter();
}

UTType __swiftcall UTType._bridgeToObjectiveC()()
{
  return (UTType)UTType._bridgeToObjectiveC()();
}

uint64_t UTType.localizedDescription.getter()
{
  return UTType.localizedDescription.getter();
}

uint64_t static UTType.objectiveCPlusPlusSource.getter()
{
  return static UTType.objectiveCPlusPlusSource.getter();
}

uint64_t UTType.isFolderUTI.getter()
{
  return UTType.isFolderUTI.getter();
}

uint64_t static UTType.docWatchface.getter()
{
  return static UTType.docWatchface.getter();
}

uint64_t static UTType.doc_identifiers(forContentTypes:)()
{
  return static UTType.doc_identifiers(forContentTypes:)();
}

uint64_t static UTType.doc_contentTypes(forIdentifiers:)()
{
  return static UTType.doc_contentTypes(forIdentifiers:)();
}

Swift::Bool __swiftcall UTType.doc_conformsToAny(inContentTypes:)(Swift::OpaquePointer inContentTypes)
{
  return UTType.doc_conformsToAny(inContentTypes:)(inContentTypes._rawValue);
}

uint64_t static UTType.docMSOfficeWordProcessing.getter()
{
  return static UTType.docMSOfficeWordProcessing.getter();
}

uint64_t static UTType.docMSOfficeXMLWordProcessing.getter()
{
  return static UTType.docMSOfficeXMLWordProcessing.getter();
}

uint64_t static UTType.docOfficeOpenXMLWordProcessing.getter()
{
  return static UTType.docOfficeOpenXMLWordProcessing.getter();
}

uint64_t static UTType.docMSOfficeWordProcessingTemplate.getter()
{
  return static UTType.docMSOfficeWordProcessingTemplate.getter();
}

uint64_t static UTType.docOfficeOpenXMLWordProcessingTemplate.getter()
{
  return static UTType.docOfficeOpenXMLWordProcessingTemplate.getter();
}

uint64_t UTType.capitalizedSentenceLocalizedDescription.getter()
{
  return UTType.capitalizedSentenceLocalizedDescription.getter();
}

uint64_t static UTType.docOfficeOpenXMLMacroEnabledWordProcessing.getter()
{
  return static UTType.docOfficeOpenXMLMacroEnabledWordProcessing.getter();
}

uint64_t static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.getter()
{
  return static UTType.docOfficeOpenXMLMacroEnabledWordProcessingTemplate.getter();
}

uint64_t UTType.preferredFilenameExtension.getter()
{
  return UTType.preferredFilenameExtension.getter();
}

uint64_t static UTType.== infix(_:_:)()
{
  return static UTType.== infix(_:_:)();
}

uint64_t static UTType._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UTType._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static UTType.avi.getter()
{
  return static UTType.avi.getter();
}

uint64_t static UTType.bmp.getter()
{
  return static UTType.bmp.getter();
}

uint64_t static UTType.gif.getter()
{
  return static UTType.gif.getter();
}

uint64_t static UTType.ico.getter()
{
  return static UTType.ico.getter();
}

uint64_t static UTType.mp3.getter()
{
  return static UTType.mp3.getter();
}

uint64_t static UTType.pdf.getter()
{
  return static UTType.pdf.getter();
}

uint64_t static UTType.png.getter()
{
  return static UTType.png.getter();
}

uint64_t static UTType.rtf.getter()
{
  return static UTType.rtf.getter();
}

uint64_t static UTType.svg.getter()
{
  return static UTType.svg.getter();
}

uint64_t static UTType.url.getter()
{
  return static UTType.url.getter();
}

uint64_t static UTType.wav.getter()
{
  return static UTType.wav.getter();
}

uint64_t static UTType.zip.getter()
{
  return static UTType.zip.getter();
}

uint64_t static UTType.data.getter()
{
  return static UTType.data.getter();
}

uint64_t static UTType.gzip.getter()
{
  return static UTType.gzip.getter();
}

uint64_t static UTType.heic.getter()
{
  return static UTType.heic.getter();
}

uint64_t static UTType.icns.getter()
{
  return static UTType.icns.getter();
}

uint64_t static UTType.item.getter()
{
  return static UTType.item.getter();
}

uint64_t static UTType.jpeg.getter()
{
  return static UTType.jpeg.getter();
}

uint64_t static UTType.json.getter()
{
  return static UTType.json.getter();
}

uint64_t static UTType.midi.getter()
{
  return static UTType.midi.getter();
}

uint64_t static UTType.mpeg.getter()
{
  return static UTType.mpeg.getter();
}

uint64_t static UTType.rtfd.getter()
{
  return static UTType.rtfd.getter();
}

uint64_t static UTType.text.getter()
{
  return static UTType.text.getter();
}

uint64_t static UTType.tiff.getter()
{
  return static UTType.tiff.getter();
}

uint64_t static UTType.audio.getter()
{
  return static UTType.audio.getter();
}

uint64_t static UTType.image.getter()
{
  return static UTType.image.getter();
}

uint64_t static UTType.movie.getter()
{
  return static UTType.movie.getter();
}

uint64_t static UTType.video.getter()
{
  return static UTType.video.getter();
}

uint64_t static UTType.folder.getter()
{
  return static UTType.folder.getter();
}

uint64_t static UTType.script.getter()
{
  return static UTType.script.getter();
}

uint64_t static UTType.archive.getter()
{
  return static UTType.archive.getter();
}

uint64_t static UTType.cHeader.getter()
{
  return static UTType.cHeader.getter();
}

uint64_t static UTType.cSource.getter()
{
  return static UTType.cSource.getter();
}

uint64_t static UTType.content.getter()
{
  return static UTType.content.getter();
}

uint64_t static UTType.package.getter()
{
  return static UTType.package.getter();
}

uint64_t UTType.conforms(to:)()
{
  return UTType.conforms(to:)();
}

uint64_t static UTType.flatRTFD.getter()
{
  return static UTType.flatRTFD.getter();
}

uint64_t static UTType.playlist.getter()
{
  return static UTType.playlist.getter();
}

uint64_t static UTType.rawImage.getter()
{
  return static UTType.rawImage.getter();
}

uint64_t static UTType.plainText.getter()
{
  return static UTType.plainText.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t UTType.init(_:)()
{
  return UTType.init(_:)();
}

uint64_t DOCAnalyticsManager.sendActionEvent(_:)()
{
  return DOCAnalyticsManager.sendActionEvent(_:)();
}

uint64_t DOCAnalyticsManager.sendAPIAbuseEvent(_:)()
{
  return DOCAnalyticsManager.sendAPIAbuseEvent(_:)();
}

uint64_t DOCAnalyticsManager.sendItemTaggedEvent(_:)()
{
  return DOCAnalyticsManager.sendItemTaggedEvent(_:)();
}

uint64_t DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)()
{
  return DOCAnalyticsManager.sendSidebarTagSelectedEvent(_:)();
}

uint64_t DOCAnalyticsManager.sendConnectToServerShownEvent(_:)()
{
  return DOCAnalyticsManager.sendConnectToServerShownEvent(_:)();
}

uint64_t static DOCAnalyticsManager.shared.getter()
{
  return static DOCAnalyticsManager.shared.getter();
}

uint64_t type metadata accessor for DOCAnalyticsManager()
{
  return type metadata accessor for DOCAnalyticsManager();
}

uint64_t static DOCSmartFolderManager.sharedManager.getter()
{
  return static DOCSmartFolderManager.sharedManager.getter();
}

uint64_t dispatch thunk of DOCSmartFolderManager.suggestions(for:configuration:managedPermission:)()
{
  return dispatch thunk of DOCSmartFolderManager.suggestions(for:configuration:managedPermission:)();
}

uint64_t dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()()
{
  return dispatch thunk of DOCSmartFolderManager.refreshSmartFolders()();
}

uint64_t dispatch thunk of DOCSmartFolderManager.defaultSaveLocationItemId.getter()
{
  return dispatch thunk of DOCSmartFolderManager.defaultSaveLocationItemId.getter();
}

uint64_t DOCSmartFolderManager.delete(hotFolder:for:)()
{
  return DOCSmartFolderManager.delete(hotFolder:for:)();
}

uint64_t DOCSmartFolderManager.database.getter()
{
  return DOCSmartFolderManager.database.getter();
}

uint64_t DOCSmartFolderManager.register(event:)()
{
  return DOCSmartFolderManager.register(event:)();
}

uint64_t dispatch thunk of DOCSmartFolderManager.register(savedFile:in:)()
{
  return dispatch thunk of DOCSmartFolderManager.register(savedFile:in:)();
}

uint64_t type metadata accessor for DOCSmartFolderManager()
{
  return type metadata accessor for DOCSmartFolderManager();
}

uint64_t dispatch thunk of DOCUSBStorageKitManager.prewarmStorageKitManagerIfNeeded()()
{
  return dispatch thunk of DOCUSBStorageKitManager.prewarmStorageKitManagerIfNeeded()();
}

uint64_t static DOCUSBStorageKitManager.shared.getter()
{
  return static DOCUSBStorageKitManager.shared.getter();
}

uint64_t type metadata accessor for DOCUSBStorageKitManager()
{
  return type metadata accessor for DOCUSBStorageKitManager();
}

uint64_t static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.getter()
{
  return static DOCCollaborationHighlightManager.HighlightsDidChangeIdentifiersKey.getter();
}

uint64_t type metadata accessor for DOCCollaborationHighlightManager()
{
  return type metadata accessor for DOCCollaborationHighlightManager();
}

uint64_t dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)()
{
  return dispatch thunk of DOCTagManager.scheduleAction(_:completionBlock:)();
}

uint64_t static DOCTagManager.shared.getter()
{
  return static DOCTagManager.shared.getter();
}

uint64_t type metadata accessor for DOCTagManager()
{
  return type metadata accessor for DOCTagManager();
}

uint64_t type metadata accessor for DOCTagManagerAction()
{
  return type metadata accessor for DOCTagManagerAction();
}

uint64_t type metadata accessor for DocumentManagerExecutablesIntentsPackage()
{
  return type metadata accessor for DocumentManagerExecutablesIntentsPackage();
}

uint64_t static DOCUnicode.nonBreakingSpace.getter()
{
  return static DOCUnicode.nonBreakingSpace.getter();
}

uint64_t static DOCUnicode.horizontalEllipsis.getter()
{
  return static DOCUnicode.horizontalEllipsis.getter();
}

uint64_t static DOCUnicode.nonBreakingSpace_zeroWidth.getter()
{
  return static DOCUnicode.nonBreakingSpace_zeroWidth.getter();
}

uint64_t dispatch thunk of DOCUnicode.rawValue.getter()
{
  return dispatch thunk of DOCUnicode.rawValue.getter();
}

uint64_t type metadata accessor for DOCUnicode()
{
  return type metadata accessor for DOCUnicode();
}

uint64_t static DOCNodeType.== infix(_:_:)()
{
  return static DOCNodeType.== infix(_:_:)();
}

uint64_t type metadata accessor for DOCNodeType()
{
  return type metadata accessor for DOCNodeType();
}

uint64_t static DOCRootNode.rootNode(for:)()
{
  return static DOCRootNode.rootNode(for:)();
}

uint64_t type metadata accessor for DOCRootNode()
{
  return type metadata accessor for DOCRootNode();
}

uint64_t static DOCVibrancy.featureEnabled.getter()
{
  return static DOCVibrancy.featureEnabled.getter();
}

uint64_t type metadata accessor for DOCVibrancy.Style.Weight()
{
  return type metadata accessor for DOCVibrancy.Style.Weight();
}

uint64_t static DOCVibrancy.Style.stroke(_:)()
{
  return static DOCVibrancy.Style.stroke(_:)();
}

uint64_t type metadata accessor for DOCVibrancy.Style()
{
  return type metadata accessor for DOCVibrancy.Style();
}

uint64_t type metadata accessor for LaunchUtils.LaunchAction()
{
  return type metadata accessor for LaunchUtils.LaunchAction();
}

uint64_t static LaunchUtils.launchAction(for:urlManagedState:providerBundleId:appContainerBundleId:requireOpenIn:preferQuickLook:)()
{
  return static LaunchUtils.launchAction(for:urlManagedState:providerBundleId:appContainerBundleId:requireOpenIn:preferQuickLook:)();
}

uint64_t static LaunchUtils.allOpeningApps(for:requireOpenInPlace:)()
{
  return static LaunchUtils.allOpeningApps(for:requireOpenInPlace:)();
}

uint64_t static LaunchUtils.tryOpeningInApp(applicationIdentifier:url:item:urlManagedState:requireOpenIn:alertPresenting:completionBlock:)()
{
  return static LaunchUtils.tryOpeningInApp(applicationIdentifier:url:item:urlManagedState:requireOpenIn:alertPresenting:completionBlock:)();
}

uint64_t static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)()
{
  return static LaunchUtils.tryOpeningInDefaultApp(_:item:requireOpenInPlace:preferQuickLook:alertPresenting:completionBlock:)();
}

uint64_t static LaunchUtils.bundleIdentifierOfDefaultApp(for:)()
{
  return static LaunchUtils.bundleIdentifierOfDefaultApp(for:)();
}

uint64_t dispatch thunk of DOCAssertion.invalidate()()
{
  return dispatch thunk of DOCAssertion.invalidate()();
}

uint64_t DOCAssertion.init(traceInfo:)()
{
  return DOCAssertion.init(traceInfo:)();
}

uint64_t type metadata accessor for DOCAssertion()
{
  return type metadata accessor for DOCAssertion();
}

uint64_t dispatch thunk of DOCOperation.finishedBlock.setter()
{
  return dispatch thunk of DOCOperation.finishedBlock.setter();
}

uint64_t type metadata accessor for GroupingMode()
{
  return type metadata accessor for GroupingMode();
}

uint64_t DOCFolderSize.logicalBytes.getter()
{
  return DOCFolderSize.logicalBytes.getter();
}

uint64_t DOCFolderSize.physicalBytes.getter()
{
  return DOCFolderSize.physicalBytes.getter();
}

uint64_t type metadata accessor for DOCFolderSize()
{
  return type metadata accessor for DOCFolderSize();
}

uint64_t type metadata accessor for DeepLinkError()
{
  return type metadata accessor for DeepLinkError();
}

uint64_t doc_keepAlive(_:)()
{
  return doc_keepAlive(_:)();
}

uint64_t static DOCDeviceModel.current.getter()
{
  return static DOCDeviceModel.current.getter();
}

uint64_t type metadata accessor for DOCDeviceModel()
{
  return type metadata accessor for DOCDeviceModel();
}

uint64_t DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)()
{
  return DOCGuardAssert(_:_:logOnlyIfDebugging:logOnlyIfUnitTesting:)();
}

uint64_t dispatch thunk of DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)()
{
  return dispatch thunk of DOCSystemAlert.presentError(title:message:primaryButtonTitle:alternateButtonTitle:responseHandler:)();
}

uint64_t static DOCSystemAlert.shared.getter()
{
  return static DOCSystemAlert.shared.getter();
}

uint64_t type metadata accessor for DOCSystemAlert()
{
  return type metadata accessor for DOCSystemAlert();
}

uint64_t dispatch thunk of DOCUSBRenaming.performRename(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)()
{
  return dispatch thunk of DOCUSBRenaming.performRename(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)();
}

uint64_t static DOCUSBRenaming.shared.getter()
{
  return static DOCUSBRenaming.shared.getter();
}

uint64_t dispatch thunk of DOCUSBRenaming.canRename.getter()
{
  return dispatch thunk of DOCUSBRenaming.canRename.getter();
}

uint64_t type metadata accessor for DOCUSBRenaming()
{
  return type metadata accessor for DOCUSBRenaming();
}

uint64_t static FISentinelNode.createSentinelNode.getter()
{
  return static FISentinelNode.createSentinelNode.getter();
}

uint64_t type metadata accessor for FISentinelNode()
{
  return type metadata accessor for FISentinelNode();
}

uint64_t DOCItemSortMode.DisplayableMode.compatibleSortModes.getter()
{
  return DOCItemSortMode.DisplayableMode.compatibleSortModes.getter();
}

uint64_t DOCItemSortMode.DisplayableMode.localizedName.getter()
{
  return DOCItemSortMode.DisplayableMode.localizedName.getter();
}

uint64_t DOCItemSortMode.DisplayableMode.accessibilityIdentifierComponent.getter()
{
  return DOCItemSortMode.DisplayableMode.accessibilityIdentifierComponent.getter();
}

uint64_t DOCItemSortMode.DisplayableMode.rawValue.getter()
{
  return DOCItemSortMode.DisplayableMode.rawValue.getter();
}

uint64_t type metadata accessor for DOCItemSortMode.DisplayableMode()
{
  return type metadata accessor for DOCItemSortMode.DisplayableMode();
}

uint64_t DOCItemSortMode.displayableMode.getter()
{
  return DOCItemSortMode.displayableMode.getter();
}

uint64_t DOCItemSortMode.init(rawValue:)()
{
  return DOCItemSortMode.init(rawValue:)();
}

uint64_t DOCItemSortMode.rawValue.getter()
{
  return DOCItemSortMode.rawValue.getter();
}

uint64_t type metadata accessor for DOCItemSortMode()
{
  return type metadata accessor for DOCItemSortMode();
}

uint64_t dispatch thunk of DOCUSBFormatting.performErase(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)()
{
  return dispatch thunk of DOCUSBFormatting.performErase(source:newDisplayName:alertPresenting:requiresAlertPresentation:completion:finishedBlock:)();
}

uint64_t dispatch thunk of DOCUSBFormatting.hasOperations.getter()
{
  return dispatch thunk of DOCUSBFormatting.hasOperations.getter();
}

uint64_t dispatch thunk of DOCUSBFormatting.currentOperation.getter()
{
  return dispatch thunk of DOCUSBFormatting.currentOperation.getter();
}

uint64_t static DOCUSBFormatting.shared.getter()
{
  return static DOCUSBFormatting.shared.getter();
}

uint64_t dispatch thunk of DOCUSBFormatting.canErase(domain:)()
{
  return dispatch thunk of DOCUSBFormatting.canErase(domain:)();
}

uint64_t dispatch thunk of DOCUSBFormatting.operation(for:)()
{
  return dispatch thunk of DOCUSBFormatting.operation(for:)();
}

uint64_t type metadata accessor for DOCUSBFormatting()
{
  return type metadata accessor for DOCUSBFormatting();
}

uint64_t DOCUTIDescriptor.localizedDescription.getter()
{
  return DOCUTIDescriptor.localizedDescription.getter();
}

uint64_t DOCUTIDescriptor.utis.getter()
{
  return DOCUTIDescriptor.utis.getter();
}

uint64_t DOCUTIDescriptor.isFolder.getter()
{
  return DOCUTIDescriptor.isFolder.getter();
}

uint64_t type metadata accessor for DOCUTIDescriptor()
{
  return type metadata accessor for DOCUTIDescriptor();
}

uint64_t DOCViewDecorator.embeddable.getter()
{
  return DOCViewDecorator.embeddable.getter();
}

uint64_t DOCViewDecorator.widthAnchor.getter()
{
  return DOCViewDecorator.widthAnchor.getter();
}

uint64_t DOCViewDecorator.bottomAnchor.getter()
{
  return DOCViewDecorator.bottomAnchor.getter();
}

uint64_t DOCViewDecorator.heightAnchor.getter()
{
  return DOCViewDecorator.heightAnchor.getter();
}

uint64_t DOCViewDecorator.centerXAnchor.getter()
{
  return DOCViewDecorator.centerXAnchor.getter();
}

uint64_t DOCViewDecorator.centerYAnchor.getter()
{
  return DOCViewDecorator.centerYAnchor.getter();
}

uint64_t DOCViewDecorator.leadingAnchor.getter()
{
  return DOCViewDecorator.leadingAnchor.getter();
}

Swift::Void __swiftcall DOCViewDecorator.layoutIfNeeded()()
{
}

uint64_t DOCViewDecorator.trailingAnchor.getter()
{
  return DOCViewDecorator.trailingAnchor.getter();
}

uint64_t DOCViewDecorator.lastBaselineAnchor.getter()
{
  return DOCViewDecorator.lastBaselineAnchor.getter();
}

uint64_t DOCViewDecorator.firstBaselineAnchor.getter()
{
  return DOCViewDecorator.firstBaselineAnchor.getter();
}

uint64_t DOCViewDecorator.init(contentWithoutWrapping:)()
{
  return DOCViewDecorator.init(contentWithoutWrapping:)();
}

uint64_t DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter()
{
  return DOCViewDecorator.translatesAutoresizingMaskIntoConstraints.setter();
}

uint64_t DOCViewDecorator.content.getter()
{
  return DOCViewDecorator.content.getter();
}

uint64_t DOCViewDecorator.isHidden.getter()
{
  return DOCViewDecorator.isHidden.getter();
}

uint64_t DOCViewDecorator.isHidden.setter()
{
  return DOCViewDecorator.isHidden.setter();
}

uint64_t DOCViewDecorator.topAnchor.getter()
{
  return DOCViewDecorator.topAnchor.getter();
}

uint64_t DOCViewDecorator<>.textAlignment.setter()
{
  return DOCViewDecorator<>.textAlignment.setter();
}

uint64_t DOCViewDecorator<>.attributedText.getter()
{
  return DOCViewDecorator<>.attributedText.getter();
}

uint64_t DOCViewDecorator<>.attributedText.setter()
{
  return DOCViewDecorator<>.attributedText.setter();
}

uint64_t DOCViewDecorator<>.text.getter()
{
  return DOCViewDecorator<>.text.getter();
}

uint64_t DOCViewDecorator<>.textColor.setter()
{
  return DOCViewDecorator<>.textColor.setter();
}

uint64_t DOCViewDecorator<>.buttonType.getter()
{
  return DOCViewDecorator<>.buttonType.getter();
}

uint64_t DOCViewDecorator<>.setNeedsUpdateConfiguration()()
{
  return DOCViewDecorator<>.setNeedsUpdateConfiguration()();
}

uint64_t DOCViewDecorator.init(_:wrappedForVibrancy:)()
{
  return DOCViewDecorator.init(_:wrappedForVibrancy:)();
}

uint64_t static DeepLinkLocation.filesAppURLScheme.getter()
{
  return static DeepLinkLocation.filesAppURLScheme.getter();
}

uint64_t updateLogHandler.getter()
{
  return updateLogHandler.getter();
}

uint64_t dispatch thunk of DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)()
{
  return dispatch thunk of DOCAPIRateLimiter.performRateLimitedCall(apiIdentifier:hostIdentifier:roleIdentifier:blockToRun:)();
}

uint64_t static DOCAPIRateLimiter.shared.getter()
{
  return static DOCAPIRateLimiter.shared.getter();
}

uint64_t type metadata accessor for DOCAPIRateLimiter()
{
  return type metadata accessor for DOCAPIRateLimiter();
}

uint64_t DOCBlockOperation.init(block:)()
{
  return DOCBlockOperation.init(block:)();
}

uint64_t type metadata accessor for DOCBlockOperation()
{
  return type metadata accessor for DOCBlockOperation();
}

uint64_t type metadata accessor for DOCChainOperation.DOCChainOperationMode()
{
  return type metadata accessor for DOCChainOperation.DOCChainOperationMode();
}

uint64_t DOCChainOperation.init(operations:)()
{
  return DOCChainOperation.init(operations:)();
}

uint64_t dispatch thunk of DOCChainOperation.mode.setter()
{
  return dispatch thunk of DOCChainOperation.mode.setter();
}

uint64_t type metadata accessor for DOCChainOperation()
{
  return type metadata accessor for DOCChainOperation();
}

uint64_t DOCDiskProperties.Size.totalSpace.getter()
{
  return DOCDiskProperties.Size.totalSpace.getter();
}

uint64_t DOCDiskProperties.Size.availableSpace.getter()
{
  return DOCDiskProperties.Size.availableSpace.getter();
}

uint64_t DOCDiskProperties.Size.purgeableSpace.getter()
{
  return DOCDiskProperties.Size.purgeableSpace.getter();
}

uint64_t DOCDiskProperties.Size.usedSpace.getter()
{
  return DOCDiskProperties.Size.usedSpace.getter();
}

uint64_t type metadata accessor for DOCDiskProperties.Size()
{
  return type metadata accessor for DOCDiskProperties.Size();
}

uint64_t DOCDiskProperties.size.getter()
{
  return DOCDiskProperties.size.getter();
}

uint64_t DOCDiskProperties.format.getter()
{
  return DOCDiskProperties.format.getter();
}

uint64_t type metadata accessor for DOCDiskProperties()
{
  return type metadata accessor for DOCDiskProperties();
}

uint64_t dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter()
{
  return dispatch thunk of DOCICloudRootNode.deferredCreationNode.getter();
}

uint64_t static DOCICloudRootNode.iCloudRootNode(for:)()
{
  return static DOCICloudRootNode.iCloudRootNode(for:)();
}

uint64_t dispatch thunk of DOCICloudRootNode.observerBlock.setter()
{
  return dispatch thunk of DOCICloudRootNode.observerBlock.setter();
}

uint64_t type metadata accessor for DOCICloudRootNode()
{
  return type metadata accessor for DOCICloudRootNode();
}

uint64_t DOCSplitViewState.isSidebarShownInline.getter()
{
  return DOCSplitViewState.isSidebarShownInline.getter();
}

uint64_t static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DOCSplitViewState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t DOCSplitViewState.with(isCollapsed:)()
{
  return DOCSplitViewState.with(isCollapsed:)();
}

uint64_t type metadata accessor for DOCSplitViewState()
{
  return type metadata accessor for DOCSplitViewState();
}

uint64_t static DOCUIPPrototyping.enhandedMajestyGridLayout.getter()
{
  return static DOCUIPPrototyping.enhandedMajestyGridLayout.getter();
}

uint64_t type metadata accessor for ShowHideOperation()
{
  return type metadata accessor for ShowHideOperation();
}

uint64_t DOCColumnViewSpecs.columnWidth.getter()
{
  return DOCColumnViewSpecs.columnWidth.getter();
}

uint64_t DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)()
{
  return DOCColumnViewSpecs.__allocating_init(traitCollection:columnBrowserSize:)();
}

uint64_t static DOCColumnViewSpecs.specWithBrowsingContext(traitCollection:columnBrowserSize:)()
{
  return static DOCColumnViewSpecs.specWithBrowsingContext(traitCollection:columnBrowserSize:)();
}

uint64_t dispatch thunk of DOCColumnViewSpecs.fullBrowserColumnWidthSpec.getter()
{
  return dispatch thunk of DOCColumnViewSpecs.fullBrowserColumnWidthSpec.getter();
}

uint64_t type metadata accessor for DOCColumnViewSpecs()
{
  return type metadata accessor for DOCColumnViewSpecs();
}

uint64_t DOCDeleteOperation.init(items:originalOperation:undoManager:)()
{
  return DOCDeleteOperation.init(items:originalOperation:undoManager:)();
}

uint64_t type metadata accessor for DOCDeleteOperation()
{
  return type metadata accessor for DOCDeleteOperation();
}

Swift::String __swiftcall DOCLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = DOCLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName._countAndFlagsBits, tableName._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._uint64_t object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)()
{
  return DOCRenameOperation.__allocating_init(item:newFileName:undoManager:)();
}

uint64_t DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)()
{
  return DOCRenameOperation.__allocating_init(item:newDisplayName:undoManager:)();
}

uint64_t type metadata accessor for DOCRenameOperation()
{
  return type metadata accessor for DOCRenameOperation();
}

uint64_t dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)()
{
  return dispatch thunk of DOCThreadSafeState.withSharedAccess<A>(_:)();
}

uint64_t dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)()
{
  return dispatch thunk of DOCThreadSafeState.withExclusiveAccess<A>(_:)();
}

uint64_t DOCThreadSafeState.init(_:)()
{
  return DOCThreadSafeState.init(_:)();
}

uint64_t type metadata accessor for DeepLinkComponents.DeepLinkError()
{
  return type metadata accessor for DeepLinkComponents.DeepLinkError();
}

uint64_t DeepLinkComponents.Scheme.init(rawValue:)()
{
  return DeepLinkComponents.Scheme.init(rawValue:)();
}

uint64_t DeepLinkComponents.Scheme.rawValue.getter()
{
  return DeepLinkComponents.Scheme.rawValue.getter();
}

uint64_t type metadata accessor for DeepLinkComponents.Scheme()
{
  return type metadata accessor for DeepLinkComponents.Scheme();
}

uint64_t DeepLinkComponents.QueryName.rawValue.getter()
{
  return DeepLinkComponents.QueryName.rawValue.getter();
}

uint64_t type metadata accessor for DeepLinkComponents.QueryName()
{
  return type metadata accessor for DeepLinkComponents.QueryName();
}

uint64_t type metadata accessor for DOCAPIRateLimiterAPI()
{
  return type metadata accessor for DOCAPIRateLimiterAPI();
}

uint64_t DOCUSBEraseOperation.State.rawValue.getter()
{
  return DOCUSBEraseOperation.State.rawValue.getter();
}

uint64_t DOCUSBEraseOperation.source.getter()
{
  return DOCUSBEraseOperation.source.getter();
}

uint64_t DOCDragPasteboardType.typeIdentifier.getter()
{
  return DOCDragPasteboardType.typeIdentifier.getter();
}

uint64_t DOCDragPasteboardType.isFPItemFileOrLocation.getter()
{
  return DOCDragPasteboardType.isFPItemFileOrLocation.getter();
}

uint64_t type metadata accessor for DOCDragPasteboardType()
{
  return type metadata accessor for DOCDragPasteboardType();
}

uint64_t DOCDragPasteboardType.init(_:)()
{
  return DOCDragPasteboardType.init(_:)();
}

Swift::Bool __swiftcall DOCIsRunningUnitTests()()
{
  return DOCIsRunningUnitTests()();
}

uint64_t DOCItemSortDescriptor.nodePropertiesAffectingSort.getter()
{
  return DOCItemSortDescriptor.nodePropertiesAffectingSort.getter();
}

uint64_t DOCItemSortDescriptor.isReversed.getter()
{
  return DOCItemSortDescriptor.isReversed.getter();
}

uint64_t DOCItemSortDescriptor.sortDescriptors.getter()
{
  return DOCItemSortDescriptor.sortDescriptors.getter();
}

uint64_t DOCItemSortDescriptor.init(type:isReversed:)()
{
  return DOCItemSortDescriptor.init(type:isReversed:)();
}

uint64_t DOCItemSortDescriptor.sortType.getter()
{
  return DOCItemSortDescriptor.sortType.getter();
}

uint64_t DOCItemSortDescriptor.ascending.getter()
{
  return DOCItemSortDescriptor.ascending.getter();
}

uint64_t type metadata accessor for DOCItemSortDescriptor()
{
  return type metadata accessor for DOCItemSortDescriptor();
}

uint64_t SetGroupingModeIntent.groupingMode.getter()
{
  return SetGroupingModeIntent.groupingMode.getter();
}

uint64_t type metadata accessor for SetGroupingModeIntent()
{
  return type metadata accessor for SetGroupingModeIntent();
}

uint64_t type metadata accessor for DOCAdjustmentDirection()
{
  return type metadata accessor for DOCAdjustmentDirection();
}

uint64_t dispatch thunk of DOCAssertionCollection.invalidateAll()()
{
  return dispatch thunk of DOCAssertionCollection.invalidateAll()();
}

uint64_t dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter()
{
  return dispatch thunk of DOCAssertionCollection.hasValidAssertions.getter();
}

uint64_t dispatch thunk of DOCAssertionCollection.add(_:autoInvalidationTimeout:)()
{
  return dispatch thunk of DOCAssertionCollection.add(_:autoInvalidationTimeout:)();
}

uint64_t DOCAssertionCollection.init(debugName:_:)()
{
  return DOCAssertionCollection.init(debugName:_:)();
}

uint64_t type metadata accessor for DOCAssertionCollection()
{
  return type metadata accessor for DOCAssertionCollection();
}

uint64_t dispatch thunk of DOCEncryptedVolumeNode.tryResolving()()
{
  return dispatch thunk of DOCEncryptedVolumeNode.tryResolving()();
}

uint64_t type metadata accessor for DOCEncryptedVolumeNode()
{
  return type metadata accessor for DOCEncryptedVolumeNode();
}

uint64_t type metadata accessor for DOCAnalyticsActionEvent.Action()
{
  return type metadata accessor for DOCAnalyticsActionEvent.Action();
}

uint64_t DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)()
{
  return DOCAnalyticsActionEvent.init(actionType:configuration:provider:bundleIdentifier:source:viewMode:)();
}

uint64_t DOCAnalyticsActionEvent.FileProvider.init(items:)()
{
  return DOCAnalyticsActionEvent.FileProvider.init(items:)();
}

uint64_t type metadata accessor for DOCAnalyticsActionEvent.FileProvider()
{
  return type metadata accessor for DOCAnalyticsActionEvent.FileProvider();
}

uint64_t DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)()
{
  return DOCAnalyticsActionEvent.Source.init(sourceIdentifier:)();
}

uint64_t type metadata accessor for DOCAnalyticsActionEvent.Source()
{
  return type metadata accessor for DOCAnalyticsActionEvent.Source();
}

uint64_t type metadata accessor for DOCAnalyticsActionEvent.ViewMode()
{
  return type metadata accessor for DOCAnalyticsActionEvent.ViewMode();
}

uint64_t type metadata accessor for DOCAnalyticsActionEvent()
{
  return type metadata accessor for DOCAnalyticsActionEvent();
}

uint64_t DOCItemGroupingBehavior.localizedName.getter()
{
  return DOCItemGroupingBehavior.localizedName.getter();
}

uint64_t static DOCItemGroupingBehavior.== infix(_:_:)()
{
  return static DOCItemGroupingBehavior.== infix(_:_:)();
}

uint64_t DOCItemGroupingBehavior.accessibilityIdentifierComponent.getter()
{
  return DOCItemGroupingBehavior.accessibilityIdentifierComponent.getter();
}

uint64_t type metadata accessor for DOCItemGroupingBehavior()
{
  return type metadata accessor for DOCItemGroupingBehavior();
}

uint64_t DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)()
{
  return DOCSmartFolderInputFile.init(filename:filetype:dateSaved:)();
}

uint64_t type metadata accessor for DOCSmartFolderInputFile()
{
  return type metadata accessor for DOCSmartFolderInputFile();
}

Swift::Void __swiftcall DOCAssertUnexpectedError(errorTitle:message:)(Swift::String errorTitle, Swift::String message)
{
}

uint64_t static DOCCreateFolderOperation.untitledFolderName.getter()
{
  return static DOCCreateFolderOperation.untitledFolderName.getter();
}

uint64_t dispatch thunk of DOCCreateFolderOperation.folderItem.setter()
{
  return dispatch thunk of DOCCreateFolderOperation.folderItem.setter();
}

uint64_t DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)()
{
  return DOCCreateFolderOperation.init(parentItem:folderName:undoManager:)();
}

uint64_t static DOCCreateFolderOperation.isFilenameCollisionError(_:)()
{
  return static DOCCreateFolderOperation.isFilenameCollisionError(_:)();
}

uint64_t static DOCCreateFolderOperation.renameCollisionFormattedString(folderName:)()
{
  return static DOCCreateFolderOperation.renameCollisionFormattedString(folderName:)();
}

uint64_t type metadata accessor for DOCCreateFolderOperation()
{
  return type metadata accessor for DOCCreateFolderOperation();
}

uint64_t type metadata accessor for DOCNodeCollaborationType()
{
  return type metadata accessor for DOCNodeCollaborationType();
}

uint64_t static DOCTabSwitcherStyleTrait.defaultStyle(for:)()
{
  return static DOCTabSwitcherStyleTrait.defaultStyle(for:)();
}

uint64_t static DOCTabSwitcherStyleTrait.defaultValue.getter()
{
  return static DOCTabSwitcherStyleTrait.defaultValue.getter();
}

uint64_t dispatch thunk of DOCTypeToFocusController.handlePressesBegan(_:with:)()
{
  return dispatch thunk of DOCTypeToFocusController.handlePressesBegan(_:with:)();
}

uint64_t dispatch thunk of DOCTypeToFocusController.delegate.setter()
{
  return dispatch thunk of DOCTypeToFocusController.delegate.setter();
}

uint64_t dispatch thunk of DOCTypeToFocusController.isTyping.getter()
{
  return dispatch thunk of DOCTypeToFocusController.isTyping.getter();
}

uint64_t type metadata accessor for DOCTypeToFocusController()
{
  return type metadata accessor for DOCTypeToFocusController();
}

uint64_t DOCUserActivityFPItemKey.getter()
{
  return DOCUserActivityFPItemKey.getter();
}

uint64_t static DOCAnalyticsAPIAbuseEvent.createDocumentSPI(hostIdentifier:type:)()
{
  return static DOCAnalyticsAPIAbuseEvent.createDocumentSPI(hostIdentifier:type:)();
}

uint64_t type metadata accessor for DOCAnalyticsAPIAbuseEvent.EventType()
{
  return type metadata accessor for DOCAnalyticsAPIAbuseEvent.EventType();
}

uint64_t static DOCAnalyticsAPIAbuseEvent.renameAPI(hostIdentifier:type:)()
{
  return static DOCAnalyticsAPIAbuseEvent.renameAPI(hostIdentifier:type:)();
}

uint64_t type metadata accessor for DOCAnalyticsAPIAbuseEvent()
{
  return type metadata accessor for DOCAnalyticsAPIAbuseEvent();
}

uint64_t type metadata accessor for DOCAppIntentsGenericError()
{
  return type metadata accessor for DOCAppIntentsGenericError();
}

uint64_t dispatch thunk of DOCUTIDescriptorCollector.filteredUTIs(matching:allowedContentTypes:completion:)()
{
  return dispatch thunk of DOCUTIDescriptorCollector.filteredUTIs(matching:allowedContentTypes:completion:)();
}

uint64_t dispatch thunk of DOCUTIDescriptorCollector.cancelGathering()()
{
  return dispatch thunk of DOCUTIDescriptorCollector.cancelGathering()();
}

uint64_t static DOCUTIDescriptorCollector.shared.getter()
{
  return static DOCUTIDescriptorCollector.shared.getter();
}

uint64_t type metadata accessor for DOCUTIDescriptorCollector()
{
  return type metadata accessor for DOCUTIDescriptorCollector();
}

uint64_t dispatch thunk of static DOCUserActivityController.userActivityFor(item:completion:)()
{
  return dispatch thunk of static DOCUserActivityController.userActivityFor(item:completion:)();
}

uint64_t static DOCUserActivityController.alertController(with:)()
{
  return static DOCUserActivityController.alertController(with:)();
}

uint64_t static DOCUserActivityController.deleteActivity(_:item:)()
{
  return static DOCUserActivityController.deleteActivity(_:item:)();
}

uint64_t static DOCUserActivityController.fetchURLFrom(activity:completion:)()
{
  return static DOCUserActivityController.fetchURLFrom(activity:completion:)();
}

uint64_t type metadata accessor for DOCUserActivityController()
{
  return type metadata accessor for DOCUserActivityController();
}

uint64_t static DOCUserActivityIdentifier.identifierSupportsRestoration(_:)()
{
  return static DOCUserActivityIdentifier.identifierSupportsRestoration(_:)();
}

uint64_t DOCUserActivityIdentifier.rawValue.getter()
{
  return DOCUserActivityIdentifier.rawValue.getter();
}

uint64_t type metadata accessor for DOCUserActivityIdentifier()
{
  return type metadata accessor for DOCUserActivityIdentifier();
}

uint64_t DOCUserActivityTagNameKey.getter()
{
  return DOCUserActivityTagNameKey.getter();
}

uint64_t static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)()
{
  return static DOCAssociatedObjectStorage.makeUniqueStorageKey(_:)();
}

uint64_t static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)()
{
  return static DOCAssociatedObjectStorage.attachedTo(_:storageKey:)();
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)()
{
  return dispatch thunk of DOCAssociatedObjectStorage.nonNullValue<A>(for:defaultValue:)();
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.subscript.getter()
{
  return dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
}

{
  return dispatch thunk of DOCAssociatedObjectStorage.subscript.getter();
}

uint64_t dispatch thunk of DOCAssociatedObjectStorage.subscript.setter()
{
  return dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
}

{
  return dispatch thunk of DOCAssociatedObjectStorage.subscript.setter();
}

uint64_t DOCAuthenticationMechanism.localizedDescription.getter()
{
  return DOCAuthenticationMechanism.localizedDescription.getter();
}

uint64_t type metadata accessor for DOCAuthenticationMechanism()
{
  return type metadata accessor for DOCAuthenticationMechanism();
}

uint64_t type metadata accessor for DOCButtonGestureRecognizer()
{
  return type metadata accessor for DOCButtonGestureRecognizer();
}

uint64_t type metadata accessor for DOCUIPHorizontalInsetTrait()
{
  return type metadata accessor for DOCUIPHorizontalInsetTrait();
}

uint64_t DOCUserActivityLocationKey.getter()
{
  return DOCUserActivityLocationKey.getter();
}

uint64_t type metadata accessor for DOCAnalyticsItemTaggedEvent.TaggingFlow()
{
  return type metadata accessor for DOCAnalyticsItemTaggedEvent.TaggingFlow();
}

uint64_t DOCAnalyticsItemTaggedEvent.init(bundleID:taggingFlow:)()
{
  return DOCAnalyticsItemTaggedEvent.init(bundleID:taggingFlow:)();
}

uint64_t type metadata accessor for DOCAnalyticsItemTaggedEvent()
{
  return type metadata accessor for DOCAnalyticsItemTaggedEvent();
}

uint64_t DOCFPItemDragPasteboardType.typeIdentifier.getter()
{
  return DOCFPItemDragPasteboardType.typeIdentifier.getter();
}

uint64_t type metadata accessor for DOCFPItemDragPasteboardType()
{
  return type metadata accessor for DOCFPItemDragPasteboardType();
}

uint64_t DOCContentLayoutSizeCategory.isLargerThanRegularLayout.getter()
{
  return DOCContentLayoutSizeCategory.isLargerThanRegularLayout.getter();
}

uint64_t type metadata accessor for DOCContentLayoutSizeCategory()
{
  return type metadata accessor for DOCContentLayoutSizeCategory();
}

Swift::String __swiftcall DOCLocalizedDictionaryString(_:comment:)(Swift::String _, Swift::String comment)
{
  uint64_t v2 = DOCLocalizedDictionaryString(_:comment:)(_._countAndFlagsBits, _._object, comment._countAndFlagsBits, comment._object);
  result._uint64_t object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t DOCAssociatedObjectStorageKey.rawPointer.getter()
{
  return DOCAssociatedObjectStorageKey.rawPointer.getter();
}

uint64_t type metadata accessor for DOCAssociatedObjectStorageKey()
{
  return type metadata accessor for DOCAssociatedObjectStorageKey();
}

uint64_t DOCDeletePreflightUIOperation.init(items:alertPresenting:)()
{
  return DOCDeletePreflightUIOperation.init(items:alertPresenting:)();
}

uint64_t type metadata accessor for DOCDeletePreflightUIOperation()
{
  return type metadata accessor for DOCDeletePreflightUIOperation();
}

uint64_t updatePointsOfInterestHandler.getter()
{
  return updatePointsOfInterestHandler.getter();
}

uint64_t == infix(_:_:)()
{
  return == infix(_:_:)();
}

uint64_t != infix(_:_:)()
{
  return != infix(_:_:)();
}

uint64_t static DOCTraitChangeObservingOptions.triggerInitialObservance.getter()
{
  return static DOCTraitChangeObservingOptions.triggerInitialObservance.getter();
}

uint64_t type metadata accessor for DOCTraitChangeObservingOptions()
{
  return type metadata accessor for DOCTraitChangeObservingOptions();
}

uint64_t BidiDirectionalIsolationUpdating.wrapInDirectionalIsolation(_:)()
{
  return BidiDirectionalIsolationUpdating.wrapInDirectionalIsolation(_:)();
}

uint64_t DOCAcceptableDragPasteboardTypes.getter()
{
  return DOCAcceptableDragPasteboardTypes.getter();
}

uint64_t BidiDirectionalIsolationReturning.wrappedInDirectionalIsolation(_:)()
{
  return BidiDirectionalIsolationReturning.wrappedInDirectionalIsolation(_:)();
}

uint64_t DOCAnalyticsSidebarTagSelectedEvent.init(bundleID:isUserSelection:)()
{
  return DOCAnalyticsSidebarTagSelectedEvent.init(bundleID:isUserSelection:)();
}

uint64_t type metadata accessor for DOCAnalyticsSidebarTagSelectedEvent()
{
  return type metadata accessor for DOCAnalyticsSidebarTagSelectedEvent();
}

uint64_t dispatch thunk of DOCOpenLocationIntentActionResolver.tagLocationResolutionHandler.setter()
{
  return dispatch thunk of DOCOpenLocationIntentActionResolver.tagLocationResolutionHandler.setter();
}

uint64_t dispatch thunk of DOCOpenLocationIntentActionResolver.urlLocationResolutionHandler.setter()
{
  return dispatch thunk of DOCOpenLocationIntentActionResolver.urlLocationResolutionHandler.setter();
}

uint64_t dispatch thunk of DOCOpenLocationIntentActionResolver.semanticLocationResolutionHandler.setter()
{
  return dispatch thunk of DOCOpenLocationIntentActionResolver.semanticLocationResolutionHandler.setter();
}

uint64_t dispatch thunk of DOCOpenLocationIntentActionResolver.startResolving()()
{
  return dispatch thunk of DOCOpenLocationIntentActionResolver.startResolving()();
}

uint64_t DOCOpenLocationIntentActionResolver.init(with:)()
{
  return DOCOpenLocationIntentActionResolver.init(with:)();
}

uint64_t type metadata accessor for DOCOpenLocationIntentActionResolver()
{
  return type metadata accessor for DOCOpenLocationIntentActionResolver();
}

uint64_t DOCNotificationDidUpdateSmartFolders.getter()
{
  return DOCNotificationDidUpdateSmartFolders.getter();
}

uint64_t SetFilenameExtensionVisibilityIntent.operation.getter()
{
  return SetFilenameExtensionVisibilityIntent.operation.getter();
}

uint64_t type metadata accessor for SetFilenameExtensionVisibilityIntent()
{
  return type metadata accessor for SetFilenameExtensionVisibilityIntent();
}

uint64_t type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin()
{
  return type metadata accessor for DOCAnalyticsConnectToServerShownEvent.Origin();
}

uint64_t DOCAnalyticsConnectToServerShownEvent.init(bundleID:origin:)()
{
  return DOCAnalyticsConnectToServerShownEvent.init(bundleID:origin:)();
}

uint64_t type metadata accessor for DOCAnalyticsConnectToServerShownEvent()
{
  return type metadata accessor for DOCAnalyticsConnectToServerShownEvent();
}

uint64_t DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)()
{
  return DOCCreateNewFolderPostflightUIOperation.init(folderName:alertPresenting:)();
}

uint64_t type metadata accessor for DOCCreateNewFolderPostflightUIOperation()
{
  return type metadata accessor for DOCCreateNewFolderPostflightUIOperation();
}

uint64_t doc_warnUnrecognizedEnumValueEncountered(_:)()
{
  return doc_warnUnrecognizedEnumValueEncountered(_:)();
}

uint64_t DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)()
{
  return DOCPerformWithDeferredTransitionsDisabled(allowAnimation:_:)();
}

uint64_t doc_fatalErrorUnrecognizedEnumValueEncountered(_:)()
{
  return doc_fatalErrorUnrecognizedEnumValueEncountered(_:)();
}

uint64_t DOCUserActivityQuickLookStateRestorationUserInfoKey.getter()
{
  return DOCUserActivityQuickLookStateRestorationUserInfoKey.getter();
}

uint64_t static DOCLog.UI.getter()
{
  return static DOCLog.UI.getter();
}

uint64_t static DOCLog.Source.getter()
{
  return static DOCLog.Source.getter();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_log(_:dso:log:_:_:)()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:_:_:)()
{
  return os_signpost(_:dso:log:name:signpostID:_:_:)();
}

uint64_t static OSSignpostID.exclusive.getter()
{
  return static OSSignpostID.exclusive.getter();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t static Logger.DocumentManager.getter()
{
  return static Logger.DocumentManager.getter();
}

uint64_t static Logger.AppIntents.getter()
{
  return static Logger.AppIntents.getter();
}

uint64_t static Logger.ProgressUI.getter()
{
  return static Logger.ProgressUI.getter();
}

uint64_t static Logger.StateStore.getter()
{
  return static Logger.StateStore.getter();
}

uint64_t static Logger.Application.getter()
{
  return static Logger.Application.getter();
}

uint64_t static Logger.Enumeration.getter()
{
  return static Logger.Enumeration.getter();
}

Swift::Bool __swiftcall Logger.doc_isEnabled(for:)(os_log_type_t a1)
{
  return Logger.doc_isEnabled(for:)(a1);
}

uint64_t static Logger.BrowserHistory.getter()
{
  return static Logger.BrowserHistory.getter();
}

uint64_t static Logger.FileProviderSyncState.getter()
{
  return static Logger.FileProviderSyncState.getter();
}

uint64_t static Logger.UI.getter()
{
  return static Logger.UI.getter();
}

uint64_t static Logger.Tests.getter()
{
  return static Logger.Tests.getter();
}

uint64_t static Logger.Picker.getter()
{
  return static Logger.Picker.getter();
}

uint64_t static Logger.Rename.getter()
{
  return static Logger.Rename.getter();
}

uint64_t static Logger.Preview.getter()
{
  return static Logger.Preview.getter();
}

uint64_t static Logger.Sidebar.getter()
{
  return static Logger.Sidebar.getter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.+ infix(_:_:)();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

uint64_t UIContentView.supports(_:)()
{
  return UIContentView.supports(_:)();
}

uint64_t static UIHoverEffect<>.highlight.getter()
{
  return static UIHoverEffect<>.highlight.getter();
}

uint64_t static UIPointerShape.defaultCornerRadius.getter()
{
  return static UIPointerShape.defaultCornerRadius.getter();
}

uint64_t type metadata accessor for UIPointerShape()
{
  return type metadata accessor for UIPointerShape();
}

uint64_t type metadata accessor for UICellAccessory.AccessoryType()
{
  return type metadata accessor for UICellAccessory.AccessoryType();
}

uint64_t static UICellAccessory.customView(configuration:)()
{
  return static UICellAccessory.customView(configuration:)();
}

uint64_t static UICellAccessory.multiselect(displayed:options:)()
{
  return static UICellAccessory.multiselect(displayed:options:)();
}

uint64_t UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)()
{
  return UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
}

uint64_t type metadata accessor for UICellAccessory.DeleteOptions()
{
  return type metadata accessor for UICellAccessory.DeleteOptions();
}

uint64_t UICellAccessory.accessoryType.getter()
{
  return UICellAccessory.accessoryType.getter();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return type metadata accessor for UICellAccessory.DisplayedState();
}

uint64_t UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)()
{
  return UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)();
}

uint64_t type metadata accessor for UICellAccessory.ReorderOptions()
{
  return type metadata accessor for UICellAccessory.ReorderOptions();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return type metadata accessor for UICellAccessory.LayoutDimension();
}

uint64_t static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)()
{
  return static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)();
}

uint64_t UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)()
{
  return UICellAccessory.MultiselectOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
}

uint64_t type metadata accessor for UICellAccessory.MultiselectOptions()
{
  return type metadata accessor for UICellAccessory.MultiselectOptions();
}

uint64_t static UICellAccessory.disclosureIndicator(displayed:options:)()
{
  return static UICellAccessory.disclosureIndicator(displayed:options:)();
}

uint64_t UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)()
{
  return UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
}

uint64_t type metadata accessor for UICellAccessory.CustomViewConfiguration()
{
  return type metadata accessor for UICellAccessory.CustomViewConfiguration();
}

uint64_t type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style()
{
  return type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style();
}

uint64_t UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)()
{
  return UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)();
}

uint64_t type metadata accessor for UICellAccessory.OutlineDisclosureOptions()
{
  return type metadata accessor for UICellAccessory.OutlineDisclosureOptions();
}

uint64_t UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)()
{
  return UICellAccessory.DisclosureIndicatorOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
}

uint64_t type metadata accessor for UICellAccessory.DisclosureIndicatorOptions()
{
  return type metadata accessor for UICellAccessory.DisclosureIndicatorOptions();
}

uint64_t static UICellAccessory.delete(displayed:options:actionHandler:)()
{
  return static UICellAccessory.delete(displayed:options:actionHandler:)();
}

uint64_t static UICellAccessory.reorder(displayed:options:)()
{
  return static UICellAccessory.reorder(displayed:options:)();
}

uint64_t type metadata accessor for UICellAccessory.Placement()
{
  return type metadata accessor for UICellAccessory.Placement();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return type metadata accessor for UICellAccessory();
}

uint64_t UIMutableTraits.uipDocumentLandingMode.setter()
{
  return UIMutableTraits.uipDocumentLandingMode.setter();
}

uint64_t UIMutableTraits.enclosingTabSwitcherStyle.setter()
{
  return UIMutableTraits.enclosingTabSwitcherStyle.setter();
}

uint64_t UIMutableTraits.enclosingUIPHorizontalInset.setter()
{
  return UIMutableTraits.enclosingUIPHorizontalInset.setter();
}

uint64_t UIMutableTraits.horizontalSizeClass.setter()
{
  return UIMutableTraits.horizontalSizeClass.setter();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.getter()
{
  return dispatch thunk of UIMutableTraits.subscript.getter();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter()
{
  return dispatch thunk of UIMutableTraits.subscript.setter();
}

uint64_t type metadata accessor for UIPointerEffect()
{
  return type metadata accessor for UIPointerEffect();
}

uint64_t UITraitOverrides.remove(_:)()
{
  return UITraitOverrides.remove(_:)();
}

uint64_t type metadata accessor for UITraitOverrides()
{
  return type metadata accessor for UITraitOverrides();
}

uint64_t UITraitOverrides.subscript.setter()
{
  return UITraitOverrides.subscript.setter();
}

uint64_t static UITraitDefinition._isPrivate.getter()
{
  return static UITraitDefinition._isPrivate.getter();
}

uint64_t static UITraitDefinition.identifier.getter()
{
  return static UITraitDefinition.identifier.getter();
}

uint64_t static UITraitDefinition.affectsColorAppearance.getter()
{
  return static UITraitDefinition.affectsColorAppearance.getter();
}

uint64_t static UITraitDefinition._defaultValueRepresentsUnspecified.getter()
{
  return static UITraitDefinition._defaultValueRepresentsUnspecified.getter();
}

uint64_t type metadata accessor for UITraitDisplayScale()
{
  return type metadata accessor for UITraitDisplayScale();
}

uint64_t UIContentConfiguration.asVibrancyCapableConfiguration.getter()
{
  return UIContentConfiguration.asVibrancyCapableConfiguration.getter();
}

uint64_t type metadata accessor for UIHoverHighlightEffect()
{
  return type metadata accessor for UIHoverHighlightEffect();
}

uint64_t static UIWindowScenePlacement<>._largeProminentPlacement()()
{
  return static UIWindowScenePlacement<>._largeProminentPlacement()();
}

uint64_t UICellConfigurationState.isExpanded.getter()
{
  return UICellConfigurationState.isExpanded.getter();
}

uint64_t UICellConfigurationState.isSelected.getter()
{
  return UICellConfigurationState.isSelected.getter();
}

uint64_t UICellConfigurationState.isHighlighted.getter()
{
  return UICellConfigurationState.isHighlighted.getter();
}

uint64_t UICellConfigurationState.init(traitCollection:)()
{
  return UICellConfigurationState.init(traitCollection:)();
}

uint64_t UICellConfigurationState.traitCollection.getter()
{
  return UICellConfigurationState.traitCollection.getter();
}

UICellConfigurationState __swiftcall UICellConfigurationState._bridgeToObjectiveC()()
{
  return (UICellConfigurationState)UICellConfigurationState._bridgeToObjectiveC()();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UICellConfigurationState.isPinned.setter()
{
  return UICellConfigurationState.isPinned.setter();
}

uint64_t UICellConfigurationState.isEditing.getter()
{
  return UICellConfigurationState.isEditing.getter();
}

uint64_t UICellConfigurationState.isFocused.getter()
{
  return UICellConfigurationState.isFocused.getter();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t UIBackgroundConfiguration.customView.setter()
{
  return UIBackgroundConfiguration.customView.setter();
}

uint64_t static UIBackgroundConfiguration.listHeader()()
{
  return static UIBackgroundConfiguration.listHeader()();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return UIBackgroundConfiguration.cornerRadius.setter();
}

uint64_t UIBackgroundConfiguration.visualEffect.getter()
{
  return UIBackgroundConfiguration.visualEffect.getter();
}

uint64_t UIBackgroundConfiguration.visualEffect.setter()
{
  return UIBackgroundConfiguration.visualEffect.setter();
}

uint64_t UIBackgroundConfiguration.backgroundColor.getter()
{
  return UIBackgroundConfiguration.backgroundColor.getter();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t UIBackgroundConfiguration.backgroundInsets.setter()
{
  return UIBackgroundConfiguration.backgroundInsets.setter();
}

UIColor __swiftcall UIBackgroundConfiguration.resolvedBackgroundColor(for:)(UIColor a1)
{
  return (UIColor)UIBackgroundConfiguration.resolvedBackgroundColor(for:)(a1.super.isa);
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return static UIBackgroundConfiguration.clear()();
}

uint64_t UIBackgroundConfiguration.updated(for:)()
{
  return UIBackgroundConfiguration.updated(for:)();
}

uint64_t static UIBackgroundConfiguration.listCell()()
{
  return static UIBackgroundConfiguration.listCell()();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t type metadata accessor for UITraitUserInterfaceStyle()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t static UIListContentConfiguration.subtitleCell()()
{
  return static UIListContentConfiguration.subtitleCell()();
}

uint64_t UIListContentConfiguration.secondaryText.getter()
{
  return UIListContentConfiguration.secondaryText.getter();
}

uint64_t UIListContentConfiguration.secondaryText.setter()
{
  return UIListContentConfiguration.secondaryText.setter();
}

uint64_t UIListContentConfiguration.TextProperties.lineBreakMode.setter()
{
  return UIListContentConfiguration.TextProperties.lineBreakMode.setter();
}

uint64_t UIListContentConfiguration.TextProperties.numberOfLines.setter()
{
  return UIListContentConfiguration.TextProperties.numberOfLines.setter();
}

uint64_t UIListContentConfiguration.TextProperties.font.getter()
{
  return UIListContentConfiguration.TextProperties.font.getter();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return UIListContentConfiguration.TextProperties.font.setter();
}

uint64_t UIListContentConfiguration.TextProperties.color.getter()
{
  return UIListContentConfiguration.TextProperties.color.getter();
}

uint64_t UIListContentConfiguration.TextProperties.color.setter()
{
  return UIListContentConfiguration.TextProperties.color.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration.TextProperties()
{
  return type metadata accessor for UIListContentConfiguration.TextProperties();
}

uint64_t UIListContentConfiguration.attributedText.setter()
{
  return UIListContentConfiguration.attributedText.setter();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t UIListContentConfiguration.textProperties.getter()
{
  return UIListContentConfiguration.textProperties.getter();
}

uint64_t UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter()
{
  return UIListContentConfiguration.ImageProperties.preferredSymbolConfiguration.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.maximumSize.setter()
{
  return UIListContentConfiguration.ImageProperties.maximumSize.setter();
}

UIColor __swiftcall UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)(UIColor a1)
{
  return (UIColor)UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)(a1.super.isa);
}

uint64_t static UIListContentConfiguration.ImageProperties.standardDimension.getter()
{
  return static UIListContentConfiguration.ImageProperties.standardDimension.getter();
}

uint64_t UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter()
{
  return UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.accessibilityIgnoresInvertColors.setter()
{
  return UIListContentConfiguration.ImageProperties.accessibilityIgnoresInvertColors.setter();
}

uint64_t UIListContentConfiguration.ImageProperties.tintColor.setter()
{
  return UIListContentConfiguration.ImageProperties.tintColor.setter();
}

uint64_t type metadata accessor for UIListContentConfiguration.ImageProperties()
{
  return type metadata accessor for UIListContentConfiguration.ImageProperties();
}

uint64_t UIListContentConfiguration.imageProperties.modify()
{
  return UIListContentConfiguration.imageProperties.modify();
}

uint64_t UIListContentConfiguration.imageProperties.getter()
{
  return UIListContentConfiguration.imageProperties.getter();
}

uint64_t UIListContentConfiguration.imageToTextPadding.getter()
{
  return UIListContentConfiguration.imageToTextPadding.getter();
}

uint64_t UIListContentConfiguration.imageToTextPadding.setter()
{
  return UIListContentConfiguration.imageToTextPadding.setter();
}

uint64_t UIListContentConfiguration.secondaryTextProperties.modify()
{
  return UIListContentConfiguration.secondaryTextProperties.modify();
}

uint64_t UIListContentConfiguration.secondaryTextProperties.getter()
{
  return UIListContentConfiguration.secondaryTextProperties.getter();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.getter()
{
  return UIListContentConfiguration.directionalLayoutMargins.getter();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.setter()
{
  return UIListContentConfiguration.directionalLayoutMargins.setter();
}

uint64_t static UIListContentConfiguration.prominentInsetGroupedHeader()()
{
  return static UIListContentConfiguration.prominentInsetGroupedHeader()();
}

uint64_t static UIListContentConfiguration.== infix(_:_:)()
{
  return static UIListContentConfiguration.== infix(_:_:)();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.getter()
{
  return UIListContentConfiguration.text.getter();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.getter()
{
  return UIListContentConfiguration.image.getter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t static UIListContentConfiguration.header()()
{
  return static UIListContentConfiguration.header()();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t type metadata accessor for UITraitHorizontalSizeClass()
{
  return type metadata accessor for UITraitHorizontalSizeClass();
}

uint64_t NSDiffableDataSourceSnapshot.appendItems(_:toSection:)()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteItems(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.indexOfItem(_:)()
{
  return NSDiffableDataSourceSnapshot.indexOfItem(_:)();
}

uint64_t NSDiffableDataSourceSnapshot.numberOfItems(inSection:)()
{
  return NSDiffableDataSourceSnapshot.numberOfItems(inSection:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.appendSections(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.indexOfSection(_:)()
{
  return NSDiffableDataSourceSnapshot.indexOfSection(_:)();
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)()
{
  return NSDiffableDataSourceSnapshot.itemIdentifiers(inSection:)();
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers.getter()
{
  return NSDiffableDataSourceSnapshot.itemIdentifiers.getter();
}

uint64_t NSDiffableDataSourceSnapshot.numberOfSections.getter()
{
  return NSDiffableDataSourceSnapshot.numberOfSections.getter();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)()
{
  return NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)();
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifiers.getter()
{
  return NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
}

uint64_t NSDiffableDataSourceSnapshot.init()()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t UIListSeparatorConfiguration.topSeparatorVisibility.setter()
{
  return UIListSeparatorConfiguration.topSeparatorVisibility.setter();
}

uint64_t UIListSeparatorConfiguration.topSeparatorInsets.getter()
{
  return UIListSeparatorConfiguration.topSeparatorInsets.getter();
}

uint64_t UIListSeparatorConfiguration.topSeparatorInsets.setter()
{
  return UIListSeparatorConfiguration.topSeparatorInsets.setter();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorVisibility.setter()
{
  return UIListSeparatorConfiguration.bottomSeparatorVisibility.setter();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorInsets.modify()
{
  return UIListSeparatorConfiguration.bottomSeparatorInsets.modify();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorInsets.getter()
{
  return UIListSeparatorConfiguration.bottomSeparatorInsets.getter();
}

uint64_t UIListSeparatorConfiguration.bottomSeparatorInsets.setter()
{
  return UIListSeparatorConfiguration.bottomSeparatorInsets.setter();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration.Visibility()
{
  return type metadata accessor for UIListSeparatorConfiguration.Visibility();
}

uint64_t type metadata accessor for UIListSeparatorConfiguration()
{
  return type metadata accessor for UIListSeparatorConfiguration();
}

Swift::Bool __swiftcall UINavigationItemRenameDelegate.navigationItem(_:shouldEndRenamingWith:)(UINavigationItem _, Swift::String shouldEndRenamingWith)
{
  return UINavigationItemRenameDelegate.navigationItem(_:shouldEndRenamingWith:)(_.super.isa, shouldEndRenamingWith._countAndFlagsBits, shouldEndRenamingWith._object);
}

uint64_t NSDiffableDataSourceTransaction.sectionTransactions.getter()
{
  return NSDiffableDataSourceTransaction.sectionTransactions.getter();
}

uint64_t type metadata accessor for UIWindowSceneProminentPlacement()
{
  return type metadata accessor for UIWindowSceneProminentPlacement();
}

uint64_t _UIWindowScenePreservedPlacement.init()()
{
  return _UIWindowScenePreservedPlacement.init()();
}

uint64_t type metadata accessor for _UIWindowScenePreservedPlacement()
{
  return type metadata accessor for _UIWindowScenePreservedPlacement();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter()
{
  return UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
}

uint64_t UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter()
{
  return UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter();
}

uint64_t UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter()
{
  return UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.reorderingHandlers.modify()
{
  return UICollectionViewDiffableDataSource.reorderingHandlers.modify();
}

uint64_t UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willExpandItem.setter()
{
  return UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willExpandItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldExpandItem.setter()
{
  return UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldExpandItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willCollapseItem.setter()
{
  return UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willCollapseItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldCollapseItem.setter()
{
  return UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldCollapseItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify()
{
  return UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)()
{
  return UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();
}

uint64_t UICollectionViewDiffableDataSource.snapshot(for:)()
{
  return UICollectionViewDiffableDataSource.snapshot(for:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.snapshot()()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
}

uint64_t NSDiffableDataSourceSectionSnapshot.isExpanded(_:)()
{
  return NSDiffableDataSourceSectionSnapshot.isExpanded(_:)();
}

uint64_t NSDiffableDataSourceSectionSnapshot.items.getter()
{
  return NSDiffableDataSourceSectionSnapshot.items.getter();
}

uint64_t NSDiffableDataSourceSectionSnapshot.append(_:to:)()
{
  return NSDiffableDataSourceSectionSnapshot.append(_:to:)();
}

Swift::Void __swiftcall NSDiffableDataSourceSectionSnapshot.delete(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSectionSnapshot.expand(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall NSDiffableDataSourceSectionSnapshot.collapse(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NSDiffableDataSourceSectionSnapshot.init()()
{
  return NSDiffableDataSourceSectionSnapshot.init()();
}

uint64_t UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter()
{
  return UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.HeaderMode();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t UICollectionLayoutListConfiguration.headerMode.setter()
{
  return UICollectionLayoutListConfiguration.headerMode.setter();
}

uint64_t UICollectionLayoutListConfiguration.backgroundColor.setter()
{
  return UICollectionLayoutListConfiguration.backgroundColor.setter();
}

uint64_t UICollectionLayoutListConfiguration.showsSeparators.setter()
{
  return UICollectionLayoutListConfiguration.showsSeparators.setter();
}

uint64_t UICollectionLayoutListConfiguration.headerTopPadding.setter()
{
  return UICollectionLayoutListConfiguration.headerTopPadding.setter();
}

uint64_t UICollectionLayoutListConfiguration.itemSeparatorHandler.setter()
{
  return UICollectionLayoutListConfiguration.itemSeparatorHandler.setter();
}

uint64_t UICollectionLayoutListConfiguration._didEndSwipingHandler.setter()
{
  return UICollectionLayoutListConfiguration._didEndSwipingHandler.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.ContentHuggingElements();
}

uint64_t UICollectionLayoutListConfiguration.contentHuggingElements.setter()
{
  return UICollectionLayoutListConfiguration.contentHuggingElements.setter();
}

uint64_t UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter()
{
  return UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t type metadata accessor for UITraitPreferredContentSizeCategory()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

uint64_t NSDiffableDataSourceSectionTransaction.finalSnapshot.getter()
{
  return NSDiffableDataSourceSectionTransaction.finalSnapshot.getter();
}

uint64_t NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter()
{
  return NSDiffableDataSourceSectionTransaction.sectionIdentifier.getter();
}

uint64_t static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)()
{
  return static UIShape.rect(cornerRadius:cornerCurve:maskedCorners:)();
}

uint64_t UIShape.inset(by:)()
{
  return UIShape.inset(by:)();
}

uint64_t static UIShape.circle.getter()
{
  return static UIShape.circle.getter();
}

uint64_t static UIShape.capsule.getter()
{
  return static UIShape.capsule.getter();
}

uint64_t type metadata accessor for UIShape()
{
  return type metadata accessor for UIShape();
}

uint64_t Tip.invalidate(reason:)()
{
  return Tip.invalidate(reason:)();
}

uint64_t Tip.shouldDisplayUpdates.getter()
{
  return Tip.shouldDisplayUpdates.getter();
}

uint64_t type metadata accessor for TipUIView()
{
  return type metadata accessor for TipUIView();
}

uint64_t TipUIView.init(_:arrowEdge:actionHandler:)()
{
  return TipUIView.init(_:arrowEdge:actionHandler:)();
}

uint64_t static Tips.showAllTipsForTesting()()
{
  return static Tips.showAllTipsForTesting()();
}

uint64_t static Tips.RuleBuilder.buildExpression(_:)()
{
  return static Tips.RuleBuilder.buildExpression(_:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
}

uint64_t static Tips.RuleBuilder.buildPartialBlock(first:)()
{
  return static Tips.RuleBuilder.buildPartialBlock(first:)();
}

uint64_t static Tips.OptionsBuilder.buildExpression<A>(_:)()
{
  return static Tips.OptionsBuilder.buildExpression<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildFinalResult<A>(_:)()
{
  return static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
}

uint64_t static Tips.OptionsBuilder.buildPartialBlock<A>(first:)()
{
  return static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
}

uint64_t type metadata accessor for Tips.UsesConstellation()
{
  return type metadata accessor for Tips.UsesConstellation();
}

uint64_t Tips.UsesConstellation.init(_:)()
{
  return Tips.UsesConstellation.init(_:)();
}

uint64_t type metadata accessor for Tips.InvalidationReason()
{
  return type metadata accessor for Tips.InvalidationReason();
}

uint64_t static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter()
{
  return static Tips.ConfigurationOption.AnalyticsEngine.coreAnalytics.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine()
{
  return type metadata accessor for Tips.ConfigurationOption.AnalyticsEngine();
}

uint64_t static Tips.ConfigurationOption.analyticsEngine(_:)()
{
  return static Tips.ConfigurationOption.analyticsEngine(_:)();
}

uint64_t static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter()
{
  return static Tips.ConfigurationOption.DatastoreLocation.tipsGroupContainer.getter();
}

uint64_t type metadata accessor for Tips.ConfigurationOption.DatastoreLocation()
{
  return type metadata accessor for Tips.ConfigurationOption.DatastoreLocation();
}

uint64_t static Tips.ConfigurationOption.datastoreLocation(_:)()
{
  return static Tips.ConfigurationOption.datastoreLocation(_:)();
}

uint64_t type metadata accessor for Tips.ConfigurationOption()
{
  return type metadata accessor for Tips.ConfigurationOption();
}

uint64_t type metadata accessor for Tips.Rule()
{
  return type metadata accessor for Tips.Rule();
}

uint64_t Tips.Rule.init<A>(_:_:)()
{
  return Tips.Rule.init<A>(_:_:)();
}

uint64_t Tips.Action.init<A>(id:title:perform:)()
{
  return Tips.Action.init<A>(id:title:perform:)();
}

uint64_t Tips.Action.with(index:)()
{
  return Tips.Action.with(index:)();
}

uint64_t type metadata accessor for Tips.Action()
{
  return type metadata accessor for Tips.Action();
}

uint64_t type metadata accessor for Tips.Status()
{
  return type metadata accessor for Tips.Status();
}

uint64_t Tips.Parameter.wrappedValue.getter()
{
  return Tips.Parameter.wrappedValue.getter();
}

uint64_t Tips.Parameter.wrappedValue.setter()
{
  return Tips.Parameter.wrappedValue.setter();
}

uint64_t Tips.Parameter.init<A>(_:_:_:_:)()
{
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

uint64_t ObservableObject<>.objectWillChange.getter()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t Published.projectedValue.setter()
{
  return Published.projectedValue.setter();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.assign(to:)()
{
  return Publisher<>.assign(to:)();
}

uint64_t ObservedObject.init(wrappedValue:)()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t ObservedObject.projectedValue.getter()
{
  return ObservedObject.projectedValue.getter();
}

uint64_t ObservedObject.Wrapper.subscript.getter()
{
  return ObservedObject.Wrapper.subscript.getter();
}

uint64_t ModifiedContent<>.accessibilityValue<A>(_:)()
{
  return ModifiedContent<>.accessibilityValue<A>(_:)();
}

uint64_t _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t EnvironmentValues.imageScale.getter()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t EnvironmentValues.imageScale.setter()
{
  return EnvironmentValues.imageScale.setter();
}

uint64_t static VerticalAlignment.center.getter()
{
  return static VerticalAlignment.center.getter();
}

uint64_t TitleOnlyLabelStyle.init()()
{
  return TitleOnlyLabelStyle.init()();
}

uint64_t type metadata accessor for TitleOnlyLabelStyle()
{
  return type metadata accessor for TitleOnlyLabelStyle();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return dispatch thunk of UIHostingController.sizingOptions.setter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t dispatch thunk of UIHostingController.rootView.modify()
{
  return dispatch thunk of UIHostingController.rootView.modify();
}

uint64_t _ConditionalContent<>.init(storage:)()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t static AccessibilityChildBehavior.combine.getter()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t type metadata accessor for AccessibilityChildBehavior()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t static UIHostingControllerSizingOptions.preferredContentSize.getter()
{
  return static UIHostingControllerSizingOptions.preferredContentSize.getter();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return type metadata accessor for UIHostingControllerSizingOptions();
}

uint64_t static Log.runtimeIssuesLog.getter()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t static Edge.Set.all.getter()
{
  return static Edge.Set.all.getter();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.labelStyle<A>(_:)()
{
  return View.labelStyle<A>(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.listSizesToFit(maxHeight:)()
{
  return View.listSizesToFit(maxHeight:)();
}

uint64_t View.accessibilityLabel<A>(_:)()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t View.accessibilityElement(children:)()
{
  return View.accessibilityElement(children:)();
}

uint64_t View.accessibilityIdentifier(_:)()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t View.scrollContentBackground(_:)()
{
  return View.scrollContentBackground(_:)();
}

uint64_t Image.init(systemName:)()
{
  return Image.init(systemName:)();
}

uint64_t type metadata accessor for Image.Scale()
{
  return type metadata accessor for Image.Scale();
}

uint64_t Picker.init(selection:label:content:)()
{
  return Picker.init(selection:label:content:)();
}

uint64_t Picker.init<A>(selection:content:label:currentValueLabel:)()
{
  return Picker.init<A>(selection:content:label:currentValueLabel:)();
}

uint64_t Toggle<>.init<A>(_:isOn:)()
{
  return Toggle<>.init<A>(_:isOn:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Section<>.init(header:footer:content:)()
{
  return Section<>.init(header:footer:content:)();
}

uint64_t static Material.thick.getter()
{
  return static Material.thick.getter();
}

uint64_t type metadata accessor for Material()
{
  return type metadata accessor for Material();
}

uint64_t static Alignment.center.getter()
{
  return static Alignment.center.getter();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.utility.getter()
{
  return static DispatchQoS.utility.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.< infix(_:_:)()
{
  return static DispatchTime.< infix(_:_:)();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t DispatchTime.advanced(by:)()
{
  return DispatchTime.advanced(by:)();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t dispatch thunk of DispatchWorkItem.isCancelled.getter()
{
  return dispatch thunk of DispatchWorkItem.isCancelled.getter();
}

uint64_t dispatch thunk of DispatchWorkItem.wait(timeout:)()
{
  return dispatch thunk of DispatchWorkItem.wait(timeout:)();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.removeValue(forKey:)()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t Dictionary<>.doc_firstKey(forValue:)()
{
  return Dictionary<>.doc_firstKey(forValue:)();
}

uint64_t type metadata accessor for Dictionary()
{
  return type metadata accessor for Dictionary();
}

uint64_t Dictionary.subscript.getter()
{
  return Dictionary.subscript.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t static Comparable.> infix(_:_:)()
{
  return static Comparable.> infix(_:_:)();
}

uint64_t static Comparable.>= infix(_:_:)()
{
  return static Comparable.>= infix(_:_:)();
}

uint64_t static Comparable.<= infix(_:_:)()
{
  return static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t type metadata accessor for String.IntentInputOptions.KeyboardType()
{
  return type metadata accessor for String.IntentInputOptions.KeyboardType();
}

uint64_t String.IntentInputOptions.init(keyboardType:capitalizationType:multiline:autocorrect:smartQuotes:smartDashes:)()
{
  return String.IntentInputOptions.init(keyboardType:capitalizationType:multiline:autocorrect:smartQuotes:smartDashes:)();
}

uint64_t type metadata accessor for String.IntentInputOptions.CapitalizationType()
{
  return type metadata accessor for String.IntentInputOptions.CapitalizationType();
}

uint64_t type metadata accessor for String.IntentInputOptions()
{
  return type metadata accessor for String.IntentInputOptions();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t String.LocalizationValue.init(stringInterpolation:)()
{
  return String.LocalizationValue.init(stringInterpolation:)();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

Swift::String __swiftcall String.init(_:)(NSString a1)
{
  uint64_t v1 = String.init(_:)(a1);
  result._uint64_t object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._uint64_t object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

Swift::Bool __swiftcall String.conformsToAnyOf(_:)(Swift::OpaquePointer a1)
{
  return String.conformsToAnyOf(_:)(a1._rawValue);
}

Swift::String __swiftcall String.fileSuffixChain()()
{
  uint64_t v0 = String.fileSuffixChain()();
  result._uint64_t object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.doc_editDistance(from:)(Swift::String from)
{
  return String.doc_editDistance(from:)(from._countAndFlagsBits, from._object);
}

Swift::Bool __swiftcall String.isKnownExtension()()
{
  return String.isKnownExtension()();
}

uint64_t String.doc_searchQueryValue.getter()
{
  return String.doc_searchQueryValue.getter();
}

uint64_t String.doc_searchEscapedString.getter()
{
  return String.doc_searchEscapedString.getter();
}

uint64_t String.doc_localizedQuotedString.getter()
{
  return String.doc_localizedQuotedString.getter();
}

uint64_t String.doc_sanitizedForComparison.getter()
{
  return String.doc_sanitizedForComparison.getter();
}

uint64_t String.wrappedInDirectionalIsolation(_:)()
{
  return String.wrappedInDirectionalIsolation(_:)();
}

uint64_t String.doc_pipeSeparatedSanitizedComponentsForComparison.getter()
{
  return String.doc_pipeSeparatedSanitizedComponentsForComparison.getter();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

uint64_t String.append<A>(contentsOf:)()
{
  return String.append<A>(contentsOf:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.remove(at:)()
{
  return String.remove(at:)();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.count.getter()
{
  return String.UTF16View.count.getter();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t Sequence.forEach(_:)()
{
  return Sequence.forEach(_:)();
}

uint64_t Sequence<>.contains(_:)()
{
  return Sequence<>.contains(_:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t Array<A>.displayableModes.getter()
{
  return Array<A>.displayableModes.getter();
}

uint64_t Array.prefix(upToAndIncluding:)()
{
  return Array.prefix(upToAndIncluding:)();
}

Swift::Void __swiftcall Array.remove(upTo:)(Swift::Int upTo)
{
}

uint64_t Array.dequeue()()
{
  return Array.dequeue()();
}

uint64_t Array.enqueue(_:)()
{
  return Array.enqueue(_:)();
}

uint64_t Array<A>.hasAny(_:)()
{
  return Array<A>.hasAny(_:)();
}

uint64_t Array<A>.doc_setActive(_:)()
{
  return Array<A>.doc_setActive(_:)();
}

uint64_t Array<A>.fpfs_fetchAllFPItems(completion:)()
{
  return Array<A>.fpfs_fetchAllFPItems(completion:)();
}

uint64_t Array<A>.fpfs_syncFetchAllFPItems()()
{
  return Array<A>.fpfs_syncFetchAllFPItems()();
}

uint64_t Array<A>.fpfs_syncFetchAvailableFPItems()()
{
  return Array<A>.fpfs_syncFetchAvailableFPItems()();
}

uint64_t Array<A>.contains(node:)()
{
  return Array<A>.contains(node:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.count.getter()
{
  return Array.count.getter();
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t type metadata accessor for Bool.IntentDisplayName()
{
  return type metadata accessor for Bool.IntentDisplayName();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

Swift::Void __swiftcall TaskGroup.cancelAll()()
{
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.background.getter()
{
  return static TaskPriority.background.getter();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t static Task.== infix(_:_:)()
{
  return static Task.== infix(_:_:)();
}

uint64_t Task.hash(into:)()
{
  return Task.hash(into:)();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

uint64_t ThrowingTaskGroup.makeAsyncIterator()()
{
  return ThrowingTaskGroup.makeAsyncIterator()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t AsyncThrowingStream.Continuation.yield(_:)()
{
  return AsyncThrowingStream.Continuation.yield(_:)();
}

uint64_t AsyncThrowingStream.Continuation.finish(throwing:)()
{
  return AsyncThrowingStream.Continuation.finish(throwing:)();
}

uint64_t AsyncThrowingStream.makeAsyncIterator()()
{
  return AsyncThrowingStream.makeAsyncIterator()();
}

uint64_t AsyncThrowingStream.init<>(_:bufferingPolicy:_:)()
{
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

NSNumber __swiftcall Double._bridgeToObjectiveC()()
{
  return (NSNumber)Double._bridgeToObjectiveC()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t NSProgress.fileTotalCount.getter()
{
  return NSProgress.fileTotalCount.getter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t CGContextRef.textPosition.setter()
{
  return CGContextRef.textPosition.setter();
}

uint64_t CGContextRef.draw(_:in:byTiling:)()
{
  return CGContextRef.draw(_:in:byTiling:)();
}

uint64_t NSOrderedSet.makeIterator()()
{
  return NSOrderedSet.makeIterator()();
}

uint64_t static UIBezierPath.document_44.getter()
{
  return static UIBezierPath.document_44.getter();
}

uint64_t static UIBezierPath.document_84.getter()
{
  return static UIBezierPath.document_84.getter();
}

uint64_t static UIBezierPath.folder.getter()
{
  return static UIBezierPath.folder.getter();
}

uint64_t static UIBezierPath.document.getter()
{
  return static UIBezierPath.document.getter();
}

uint64_t UIEdgeInsets.horizontalInsets.getter()
{
  return UIEdgeInsets.horizontalInsets.getter();
}

uint64_t UIEdgeInsets.horizontalInsetsOnly.getter()
{
  return UIEdgeInsets.horizontalInsetsOnly.getter();
}

uint64_t UIEdgeInsets.asDirectionalEdgeInsets(RTL:)()
{
  return UIEdgeInsets.asDirectionalEdgeInsets(RTL:)();
}

uint64_t UIEdgeInsets.verticalInsetsOnly.getter()
{
  return UIEdgeInsets.verticalInsetsOnly.getter();
}

uint64_t UIEdgeInsets.hash(into:)()
{
  return UIEdgeInsets.hash(into:)();
}

uint64_t static UIEdgeInsets.uniform(_:)()
{
  return static UIEdgeInsets.uniform(_:)();
}

uint64_t UIHoverStyle.init(shape:)()
{
  return UIHoverStyle.init(shape:)();
}

uint64_t UIHoverStyle.init<A>(effect:shape:)()
{
  return UIHoverStyle.init<A>(effect:shape:)();
}

uint64_t UIScrollView.doc_isMoving.getter()
{
  return UIScrollView.doc_isMoving.getter();
}

uint64_t UIScrollView.doc_translateContent(dx:dy:animated:)()
{
  return UIScrollView.doc_translateContent(dx:dy:animated:)();
}

uint64_t static CSSearchQuery.withString(_:fetchedAttributes:)()
{
  return static CSSearchQuery.withString(_:fetchedAttributes:)();
}

uint64_t FPItemManager.doc_fetchItem(for:completionHandler:)()
{
  return FPItemManager.doc_fetchItem(for:completionHandler:)();
}

uint64_t FPItemManager.doc_refetchItem(_:completion:)()
{
  return FPItemManager.doc_refetchItem(_:completion:)();
}

uint64_t NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)()
{
  return NSFileManager.replaceItemAt(_:withItemAt:backupItemName:options:)();
}

uint64_t static UIFocusSystem.focusSystem(for:)()
{
  return static UIFocusSystem.focusSystem(for:)();
}

uint64_t UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)()
{
  return UIWindowScene.configurationSupportsPreviewInNewWindow(contentType:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.invalidate(_:)()
{
  return dispatch thunk of NSNotification.SubscriptionsController.invalidate(_:)();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.invalidateAll()()
{
  return dispatch thunk of NSNotification.SubscriptionsController.invalidateAll()();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)()
{
  return dispatch thunk of NSNotification.SubscriptionsController.startObserving(nsName:object:queue:handler:)();
}

uint64_t dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)()
{
  return dispatch thunk of NSNotification.SubscriptionsController.startObserving(_:object:queue:handler:)();
}

uint64_t NSNotification.SubscriptionsController.init(observee:)()
{
  return NSNotification.SubscriptionsController.init(observee:)();
}

uint64_t static NSUserDefaults.docUserDefaults.getter()
{
  return static NSUserDefaults.docUserDefaults.getter();
}

uint64_t UIPointerStyle.init(shape:constrainedAxes:)()
{
  return UIPointerStyle.init(shape:constrainedAxes:)();
}

uint64_t UIPointerStyle.init(effect:shape:)()
{
  return UIPointerStyle.init(effect:shape:)();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(systemItem:primaryAction:menu:)(systemItem, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(title:image:primaryAction:menu:)(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(title:image:primaryAction:menu:)(title.value._countAndFlagsBits, title.value._object, image.value.super.isa, *(void *)&image.is_nil, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t FPProviderDomain.shouldUseDSCopyEngine.getter()
{
  return FPProviderDomain.shouldUseDSCopyEngine.getter();
}

uint64_t FPProviderDomain.shouldUseDSEnumeration.getter()
{
  return FPProviderDomain.shouldUseDSEnumeration.getter();
}

uint64_t FPProviderDomain.shouldResolveDSNodeAsFPv2.getter()
{
  return FPProviderDomain.shouldResolveDSNodeAsFPv2.getter();
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

uint64_t UINavigationItem.renameDelegate.getter()
{
  return UINavigationItem.renameDelegate.getter();
}

uint64_t UINavigationItem.renameDelegate.setter()
{
  return UINavigationItem.renameDelegate.setter();
}

uint64_t UIViewController.doc_dismiss(animated:includingPresented:completion:)()
{
  return UIViewController.doc_dismiss(animated:includingPresented:completion:)();
}

uint64_t UIViewController.doc_performBlock(allowingAnimations:block:)()
{
  return UIViewController.doc_performBlock(allowingAnimations:block:)();
}

uint64_t UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)()
{
  return UIViewController.doc_nearestAncestor<A>(ofType:searchPresentingHierarchy:)();
}

uint64_t UIViewController.doc_findSubtreeViews<A>(includingSelf:loadViewIfNeed:ofType:)()
{
  return UIViewController.doc_findSubtreeViews<A>(includingSelf:loadViewIfNeed:ofType:)();
}

uint64_t UIViewController.associatedObjectStorage.getter()
{
  return UIViewController.associatedObjectStorage.getter();
}

uint64_t UIViewController.doc_shouldAllowAnimations.getter()
{
  return UIViewController.doc_shouldAllowAnimations.getter();
}

uint64_t UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)()
{
  return UIViewController.registerForUIPTraitChanges<A>(tabStyle:documentLanding:options:_:)();
}

uint64_t UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)()
{
  return UIViewController.doc_registerForTraitChanges<A>(_:options:handler:)();
}

uint64_t UIViewController.registerForTabSwitcherTraitChanges<A>(options:_:)()
{
  return UIViewController.registerForTabSwitcherTraitChanges<A>(options:_:)();
}

Swift::Void __swiftcall UIViewController.doc_configureForPresentingLargeContent(withPreferredStyle:)(UIModalPresentationStyle withPreferredStyle)
{
}

uint64_t UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)()
{
  return UIViewController.registerForUIPDocumentLandingTraitChanges<A>(options:_:)();
}

uint64_t UIViewController.traitOverrides.getter()
{
  return UIViewController.traitOverrides.getter();
}

uint64_t UIViewController.traitOverrides.setter()
{
  return UIViewController.traitOverrides.setter();
}

uint64_t UIViewController.registerForTraitChanges<A>(_:handler:)()
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)();
}

uint64_t UIViewController.unregisterForTraitChanges(_:)()
{
  return UIViewController.unregisterForTraitChanges(_:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t OS_dispatch_group.wait(timeout:)()
{
  return OS_dispatch_group.wait(timeout:)();
}

Swift::Void __swiftcall OS_dispatch_group.wait()()
{
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.async(execute:)()
{
  return OS_dispatch_queue.async(execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)()
{
  return static UIAlertController.doc_presentPassphraseInputAlert(title:message:actionTitle:alertPresenting:completionHandler:)();
}

uint64_t UITraitCollection.doc_preferredLayoutSizeCategory.getter()
{
  return UITraitCollection.doc_preferredLayoutSizeCategory.getter();
}

uint64_t UITraitCollection.doc_preferredValidatedLayoutSizeCategory(_:)()
{
  return UITraitCollection.doc_preferredValidatedLayoutSizeCategory(_:)();
}

uint64_t UITraitCollection.modifyingTraits(_:)()
{
  return UITraitCollection.modifyingTraits(_:)();
}

uint64_t static UITraitCollection.systemTraitsAffectingColorAppearance.getter()
{
  return static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
}

uint64_t UITraitCollection.subscript.getter()
{
  return UITraitCollection.subscript.getter();
}

{
  return UITraitCollection.subscript.getter();
}

uint64_t static FILocalStorageNode.sharedInstance(for:)()
{
  return static FILocalStorageNode.sharedInstance(for:)();
}

uint64_t NSAttributedString.init(_:)()
{
  return NSAttributedString.init(_:)();
}

NSLayoutConstraint __swiftcall NSLayoutConstraint.with(priority:)(__C::UILayoutPriority priority)
{
  return (NSLayoutConstraint)NSLayoutConstraint.with(priority:)(*(__n128 *)&priority.rawValue);
}

uint64_t static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.getter()
{
  return static NSNotificationName.DOCCollaborationHighlightManagerHighlightsDidChange.getter();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t static os_signpost_type_t.event.getter()
{
  return static os_signpost_type_t.event.getter();
}

uint64_t static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)()
{
  return static DOCTabSwitcherStyle.preferredStyle(for:traitCollection:splitState:)();
}

uint64_t DOCTabSwitcherStyle.sidebarCanPresentNonBrowseTabItemContent.getter()
{
  return DOCTabSwitcherStyle.sidebarCanPresentNonBrowseTabItemContent.getter();
}

uint64_t DOCTabSwitcherStyle.showsTabs.getter()
{
  return DOCTabSwitcherStyle.showsTabs.getter();
}

uint64_t NSNotificationCenter.doc_observeOnce(forName:object:queue:using:)()
{
  return NSNotificationCenter.doc_observeOnce(forName:object:queue:using:)();
}

Swift::Void __swiftcall SYDocumentAttributes.performReturnToDocumentRequest()()
{
}

uint64_t SYDocumentAttributes.performReplyToSenderRequest(with:)()
{
  return SYDocumentAttributes.performReplyToSenderRequest(with:)();
}

uint64_t static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)()
{
  return static UIBarButtonItemGroup.fixedGroup(representativeItem:items:)();
}

uint64_t UICollectionViewCell.contentConfiguration.getter()
{
  return UICollectionViewCell.contentConfiguration.getter();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.getter()
{
  return UICollectionViewCell.backgroundConfiguration.getter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return UICollectionViewCell.backgroundConfiguration.setter();
}

uint64_t UICollectionViewCell.defaultBackgroundConfiguration()()
{
  return UICollectionViewCell.defaultBackgroundConfiguration()();
}

uint64_t OS_dispatch_semaphore.wait(timeout:)()
{
  return OS_dispatch_semaphore.wait(timeout:)();
}

Swift::Void __swiftcall OS_dispatch_semaphore.wait()()
{
}

Swift::Int __swiftcall OS_dispatch_semaphore.signal()()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

uint64_t NSDirectionalEdgeInsets.asUIEdgeInset(RTL:)()
{
  return NSDirectionalEdgeInsets.asUIEdgeInset(RTL:)();
}

uint64_t NSDirectionalEdgeInsets.by(adding:)()
{
  return NSDirectionalEdgeInsets.by(adding:)();
}

uint64_t static NSDirectionalEdgeInsets.uniform(_:)()
{
  return static NSDirectionalEdgeInsets.uniform(_:)();
}

uint64_t UIEditMenuConfiguration.init(identifier:sourcePoint:)()
{
  return UIEditMenuConfiguration.init(identifier:sourcePoint:)();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t UICollectionViewListCell.accessories.getter()
{
  return UICollectionViewListCell.accessories.getter();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return UICollectionViewListCell.accessories.setter();
}

uint64_t UICollectionViewListCell.defaultContentConfiguration()()
{
  return UICollectionViewListCell.defaultContentConfiguration()();
}

uint64_t UIModalPresentationStyle.doc_styleWhenPresentingLargeContent.getter()
{
  return UIModalPresentationStyle.doc_styleWhenPresentingLargeContent.getter();
}

uint64_t static NSCollectionLayoutSection.list(using:layoutEnvironment:)()
{
  return static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
}

uint64_t NSMutableAttributedString.append(_:)()
{
  return NSMutableAttributedString.append(_:)();
}

uint64_t static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)()
{
  return static DOCUserInterfaceStateStore.saveDefaultSortMode(_:configuration:)();
}

uint64_t static DOCUserInterfaceStateStore.retrieveDefaultSortMode(configuration:)()
{
  return static DOCUserInterfaceStateStore.retrieveDefaultSortMode(configuration:)();
}

uint64_t static DOCUserInterfaceStateStore.saveDefaultGroupingBehavior(_:for:configuration:)()
{
  return static DOCUserInterfaceStateStore.saveDefaultGroupingBehavior(_:for:configuration:)();
}

uint64_t static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)()
{
  return static DOCUserInterfaceStateStore.retrieveDefaultGroupingBehavior(configuration:sourceIdentifier:fallback:)();
}

uint64_t static DOCDocumentSourceIdentifier.iCloudCurrent.getter()
{
  return static DOCDocumentSourceIdentifier.iCloudCurrent.getter();
}

uint64_t static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter()
{
  return static DOCDocumentSourceIdentifier.iCloudCurrentManaged.getter();
}

uint64_t DOCDocumentSourceIdentifier.isICloud.getter()
{
  return DOCDocumentSourceIdentifier.isICloud.getter();
}

uint64_t AVAsynchronousKeyValueLoading.status<A>(of:)()
{
  return AVAsynchronousKeyValueLoading.status<A>(of:)();
}

uint64_t static UICollectionViewCompositionalLayout.list(using:)()
{
  return static UICollectionViewCompositionalLayout.list(using:)();
}

UIWindowSceneActivationConfiguration __swiftcall UIWindowSceneActivationConfiguration.init(userActivity:options:preview:)(NSUserActivity userActivity, UIWindowSceneActivationRequestOptions_optional options, UITargetedPreview_optional preview)
{
  return (UIWindowSceneActivationConfiguration)UIWindowSceneActivationConfiguration.init(userActivity:options:preview:)(userActivity.super.isa, options.value.super.super.isa, *(void *)&options.is_nil, preview.value.super.isa, *(void *)&preview.is_nil);
}

uint64_t _SWCollaborationDetailViewController.init(itemProvider:)()
{
  return _SWCollaborationDetailViewController.init(itemProvider:)();
}

uint64_t UIWindowSceneActivationRequestOptions.placement.setter()
{
  return UIWindowSceneActivationRequestOptions.placement.setter();
}

uint64_t UIPopoverPresentationControllerSourceItem.frame(in:)()
{
  return UIPopoverPresentationControllerSourceItem.frame(in:)();
}

uint64_t CGRect.debugDescription.getter()
{
  return CGRect.debugDescription.getter();
}

uint64_t CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)()
{
  return CGRect.byPositioning(leadingRelativeToRect:offset:isRTL:)();
}

uint64_t CGRect.byCenteringVertically(relativeToRect:isRTL:)()
{
  return CGRect.byCenteringVertically(relativeToRect:isRTL:)();
}

uint64_t static CGSize.doc_preferredSourceListIconSize(for:)()
{
  return static CGSize.doc_preferredSourceListIconSize(for:)();
}

uint64_t CGSize.floor()()
{
  return CGSize.floor()();
}

uint64_t CMTime.seconds.getter()
{
  return CMTime.seconds.getter();
}

uint64_t static FINode.startIfNeeded()()
{
  return static FINode.startIfNeeded()();
}

uint64_t static FINode.docNode(from:)()
{
  return static FINode.docNode(from:)();
}

uint64_t static FPItem.createDocumentSentinelItem()()
{
  return static FPItem.createDocumentSentinelItem()();
}

uint64_t FPItem.setLastOpenDate(_:delay:)()
{
  return FPItem.setLastOpenDate(_:delay:)();
}

Swift::Void __swiftcall FPItem.bumpLastOpenDate(delay:)(Swift::Double delay)
{
}

uint64_t static FPItem.SharingStatusOptions.compact.getter()
{
  return static FPItem.SharingStatusOptions.compact.getter();
}

uint64_t type metadata accessor for FPItem.SharingStatusOptions()
{
  return type metadata accessor for FPItem.SharingStatusOptions();
}

uint64_t FPItem.collaborationHighlight.getter()
{
  return FPItem.collaborationHighlight.getter();
}

uint64_t type metadata accessor for FPItem.SharingStatusStringType()
{
  return type metadata accessor for FPItem.SharingStatusStringType();
}

uint64_t FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)()
{
  return FPItem.getLocalizedDisplayPath(using:domain:layoutDirection:includeSelf:arrowColor:specialCasingLocations:completion:)();
}

Swift::Bool __swiftcall FPItem.openInvitationIfPossible()()
{
  return FPItem.openInvitationIfPossible()();
}

uint64_t FPItem.collaborationSenderDisplayName.getter()
{
  return FPItem.collaborationSenderDisplayName.getter();
}

UIFont __swiftcall UIFont.doc_withFeatureMonospacedDigits()()
{
  return (UIFont)UIFont.doc_withFeatureMonospacedDigits()();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.setEntityProvider<A>(_:)()
{
  return UIView.setEntityProvider<A>(_:)();
}

uint64_t UIView.appEntityIdentifier.setter()
{
  return UIView.appEntityIdentifier.setter();
}

uint64_t UIView.addSubview<A>(_:)()
{
  return UIView.addSubview<A>(_:)();
}

uint64_t UIView.doc_performBlock(allowingAnimations:block:)()
{
  return UIView.doc_performBlock(allowingAnimations:block:)();
}

uint64_t static UIView.doc_performBlock(allowingAnimations:block:)()
{
  return static UIView.doc_performBlock(allowingAnimations:block:)();
}

uint64_t UIView.doc_pixelRounded(_:)()
{
  return UIView.doc_pixelRounded(_:)();
}

uint64_t UIView.doc_nearestAncestor<A>(ofType:)()
{
  return UIView.doc_nearestAncestor<A>(ofType:)();
}

uint64_t UIView.doc_performOnSubtree(includingSelf:_:)()
{
  return UIView.doc_performOnSubtree(includingSelf:_:)();
}

uint64_t static UIView.doc_performAnimatable(allowingAnimations:animationDuration:animations:completion:)()
{
  return static UIView.doc_performAnimatable(allowingAnimations:animationDuration:animations:completion:)();
}

uint64_t UIView.doc_addAutoresizingSubview(_:insetBy:)()
{
  return UIView.doc_addAutoresizingSubview(_:insetBy:)();
}

uint64_t UIView.registerForTabSwitcherTraitChanges<A>(options:_:)()
{
  return UIView.registerForTabSwitcherTraitChanges<A>(options:_:)();
}

uint64_t static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter()
{
  return static UIView.doc_autolayoutFlexibleHorizontalSpacer.getter();
}

uint64_t UIView.doc_tintColorIgnoringVibrancyContainer.getter()
{
  return UIView.doc_tintColorIgnoringVibrancyContainer.getter();
}

uint64_t UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)()
{
  return UIView.registerForUIPDocumentLandingTraitChanges<A>(options:_:)();
}

uint64_t UIView.doc_isRTL.getter()
{
  return UIView.doc_isRTL.getter();
}

uint64_t UIView.registerForTraitChanges<A>(_:handler:)()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

Swift::Bool __swiftcall DOCNode.isCreateDocumentSentinel()()
{
  return DOCNode.isCreateDocumentSentinel()();
}

Swift::String __swiftcall DOCNode.displayName(withHiddenPathExtension:)(Swift::Bool withHiddenPathExtension)
{
  uint64_t v1 = DOCNode.displayName(withHiddenPathExtension:)(withHiddenPathExtension);
  result._uint64_t object = v2;
  result._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t DOCNode.identifierKey.getter()
{
  return DOCNode.identifierKey.getter();
}

uint64_t DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)()
{
  return DOCNode.localizedDate(horizontalSizeClass:preferLastUsedDate:)();
}

uint64_t DOCNode.diskProperties.getter()
{
  return DOCNode.diskProperties.getter();
}

uint64_t DOCNode.nodeDescription.getter()
{
  return DOCNode.nodeDescription.getter();
}

uint64_t DOCNode.typeToFocusItem.getter()
{
  return DOCNode.typeToFocusItem.getter();
}

uint64_t DOCNode.fpfs_fetchFPItem(completion:)()
{
  return DOCNode.fpfs_fetchFPItem(completion:)();
}

uint64_t DOCNode.sourceIdentifier.getter()
{
  return DOCNode.sourceIdentifier.getter();
}

uint64_t DOCNode.collaborationType.getter()
{
  return DOCNode.collaborationType.getter();
}

uint64_t DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)()
{
  return DOCNode.fetchAndAccessURL(downloadIfNeeded:handler:)();
}

uint64_t DOCNode.documentAttributes.getter()
{
  return DOCNode.documentAttributes.getter();
}

uint64_t DOCNode.isSharedServerNode.getter()
{
  return DOCNode.isSharedServerNode.getter();
}

uint64_t DOCNode.representedLocation.getter()
{
  return DOCNode.representedLocation.getter();
}

uint64_t DOCNode.fpfs_syncFetchFPItem()()
{
  return DOCNode.fpfs_syncFetchFPItem()();
}

uint64_t DOCNode.syncErrorDescription.getter()
{
  return DOCNode.syncErrorDescription.getter();
}

uint64_t DOCNode.compareBySharedStatus(node:)()
{
  return DOCNode.compareBySharedStatus(node:)();
}

uint64_t DOCNode.doc_isAppContainerRoot.getter()
{
  return DOCNode.doc_isAppContainerRoot.getter();
}

uint64_t DOCNode.isFolderSizingSupported.getter()
{
  return DOCNode.isFolderSizingSupported.getter();
}

Swift::String __swiftcall DOCNode.localizedSizeDescription()()
{
  uint64_t v0 = DOCNode.localizedSizeDescription()();
  result._uint64_t object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t DOCNode.areDiskPropertiesSupported.getter()
{
  return DOCNode.areDiskPropertiesSupported.getter();
}

uint64_t DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)()
{
  return DOCNode.fetchDiskPropertiesIfSupported(handlerQueue:_:)();
}

uint64_t DOCNode.performFolderSizingIfSupported(handlerQueue:_:)()
{
  return DOCNode.performFolderSizingIfSupported(handlerQueue:_:)();
}

uint64_t DOCNode.localizedSharingStatusDescription(type:options:)()
{
  return DOCNode.localizedSharingStatusDescription(type:options:)();
}

uint64_t DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)()
{
  return DOCNode.cachedLocalizedChildItemCountDescription(fetchIfStale:completionHandler:)();
}

uint64_t DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)()
{
  return DOCNode.markCachedLocalizedChildItemCountDescriptionAsStale(forProperty:)();
}

uint64_t DOCNode.isFINode.getter()
{
  return DOCNode.isFINode.getter();
}

uint64_t DOCNode.isFPItem.getter()
{
  return DOCNode.isFPItem.getter();
}

uint64_t DOCNode.nodeType.getter()
{
  return DOCNode.nodeType.getter();
}

uint64_t DOCNode.isEqualTo(node:)()
{
  return DOCNode.isEqualTo(node:)();
}

uint64_t NSCoder.decodeObject<A>(of:forKey:)()
{
  return NSCoder.decodeObject<A>(of:forKey:)();
}

uint64_t NSCoder.decodeTopLevelObject(of:forKey:)()
{
  return NSCoder.decodeTopLevelObject(of:forKey:)();
}

uint64_t static NSError.noSuchFileError.getter()
{
  return static NSError.noSuchFileError.getter();
}

uint64_t NSError.isProviderNotFound.getter()
{
  return NSError.isProviderNotFound.getter();
}

uint64_t static NSError.userCancelledError.getter()
{
  return static NSError.userCancelledError.getter();
}

uint64_t NSError.isUserCancelledError.getter()
{
  return NSError.isUserCancelledError.getter();
}

uint64_t NSError.isFilenameCollisionError.getter()
{
  return NSError.isFilenameCollisionError.getter();
}

uint64_t NSError.isProviderServerUnreachable.getter()
{
  return NSError.isProviderServerUnreachable.getter();
}

uint64_t NSError.isProviderDomainNotAuthenticated.getter()
{
  return NSError.isProviderDomainNotAuthenticated.getter();
}

uint64_t static UIImage.doc_executablesFrameworkImage(named:)()
{
  return static UIImage.doc_executablesFrameworkImage(named:)();
}

uint64_t FPItemID.identifierString.getter()
{
  return FPItemID.identifierString.getter();
}

NSNumber __swiftcall NSNumber.init(floatLiteral:)(Swift::Double floatLiteral)
{
  return (NSNumber)NSNumber.init(floatLiteral:)(floatLiteral);
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.setter()
{
  return UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
}

uint64_t UIButton.Configuration.background.setter()
{
  return UIButton.Configuration.background.setter();
}

uint64_t static UIButton.Configuration.borderless()()
{
  return static UIButton.Configuration.borderless()();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return UIButton.Configuration.imagePadding.setter();
}

uint64_t UIButton.Configuration.contentInsets.modify()
{
  return UIButton.Configuration.contentInsets.modify();
}

uint64_t UIButton.Configuration.contentInsets.getter()
{
  return UIButton.Configuration.contentInsets.getter();
}

uint64_t UIButton.Configuration.contentInsets.setter()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.TitleAlignment()
{
  return type metadata accessor for UIButton.Configuration.TitleAlignment();
}

uint64_t UIButton.Configuration.imagePlacement.setter()
{
  return UIButton.Configuration.imagePlacement.setter();
}

uint64_t UIButton.Configuration.titleAlignment.setter()
{
  return UIButton.Configuration.titleAlignment.setter();
}

uint64_t UIButton.Configuration.attributedTitle.modify()
{
  return UIButton.Configuration.attributedTitle.modify();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return UIButton.Configuration.attributedTitle.setter();
}

UIButtonConfiguration __swiftcall UIButton.Configuration._bridgeToObjectiveC()()
{
  return (UIButtonConfiguration)UIButton.Configuration._bridgeToObjectiveC()();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t UIButton.Configuration.image.getter()
{
  return UIButton.Configuration.image.getter();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t static UIButton.Configuration.plain()()
{
  return static UIButton.Configuration.plain()();
}

uint64_t UIButton.Configuration.title.setter()
{
  return UIButton.Configuration.title.setter();
}

uint64_t static UIButton.Configuration.filled()()
{
  return static UIButton.Configuration.filled()();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return UIButton.init(configuration:primaryAction:)();
}

uint64_t UIButton.configuration.getter()
{
  return UIButton.configuration.getter();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t UIButton.pointerStyleProvider.setter()
{
  return UIButton.pointerStyleProvider.setter();
}

UIButton __swiftcall UIButton.init(type:primaryAction:)(UIButtonType type, UIAction_optional primaryAction)
{
  return (UIButton)UIButton.init(type:primaryAction:)(type, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil);
}

uint64_t UIDevice.doc_preferredAuthenticationMechanism.getter()
{
  return UIDevice.doc_preferredAuthenticationMechanism.getter();
}

uint64_t static OS_os_log.default.getter()
{
  return static OS_os_log.default.getter();
}

uint64_t OS_os_log.init(subsystem:category:)()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)()
{
  return UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t UIControl.enumerateEventHandlers(_:)()
{
  return UIControl.enumerateEventHandlers(_:)();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t Optional._bridgeToObjectiveC()()
{
  return Optional._bridgeToObjectiveC()();
}

uint64_t Optional.isEqualTo(node:)()
{
  return Optional.isEqualTo(node:)();
}

{
  return Optional.isEqualTo(node:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Substring.init(_:)()
{
  return Substring.init(_:)();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.localizedCompare<A>(_:)()
{
  return StringProtocol.localizedCompare<A>(_:)();
}

uint64_t StringProtocol.rangeOfCharacter(from:options:range:)()
{
  return StringProtocol.rangeOfCharacter(from:options:range:)();
}

uint64_t StringProtocol.localizedLowercase.getter()
{
  return StringProtocol.localizedLowercase.getter();
}

uint64_t StringProtocol.enumerateSubstrings<A>(in:options:_:)()
{
  return StringProtocol.enumerateSubstrings<A>(in:options:_:)();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.caseInsensitiveCompare<A>(_:)()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.write(to:atomically:encoding:)()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t SetAlgebra.isDisjoint(with:)()
{
  return SetAlgebra.isDisjoint(with:)();
}

uint64_t SetAlgebra.isSuperset(of:)()
{
  return SetAlgebra.isSuperset(of:)();
}

uint64_t SetAlgebra.subtracting(_:)()
{
  return SetAlgebra.subtracting(_:)();
}

uint64_t SetAlgebra.isEmpty.getter()
{
  return SetAlgebra.isEmpty.getter();
}

uint64_t SetAlgebra.isSubset(of:)()
{
  return SetAlgebra.isSubset(of:)();
}

uint64_t SetAlgebra.subtract(_:)()
{
  return SetAlgebra.subtract(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

uint64_t AnyHashable.description.getter()
{
  return AnyHashable.description.getter();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.hash(into:)()
{
  return AnyHashable.hash(into:)();
}

uint64_t AnyHashable.hashValue.getter()
{
  return AnyHashable.hashValue.getter();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)()
{
  return static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t SignedNumeric.advanced(amount:direction:)()
{
  return SignedNumeric.advanced(amount:direction:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t _arrayForceCast<A, B>(_:)()
{
  return _arrayForceCast<A, B>(_:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t AsyncMapSequence.base.getter()
{
  return AsyncMapSequence.base.getter();
}

uint64_t AsyncMapSequence.Iterator.baseIterator.modify()
{
  return AsyncMapSequence.Iterator.baseIterator.modify();
}

uint64_t AsyncMapSequence.Iterator.transform.getter()
{
  return AsyncMapSequence.Iterator.transform.getter();
}

uint64_t AsyncMapSequence.Iterator.init(_:transform:)()
{
  return AsyncMapSequence.Iterator.init(_:transform:)();
}

uint64_t AsyncMapSequence.transform.getter()
{
  return AsyncMapSequence.transform.getter();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.contains(_:)()
{
  return KeyedDecodingContainer.contains(_:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for FloatingPointRoundingRule()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)()
{
  return _diagnoseUnexpectedEnumCaseValue<A, B>(type:rawValue:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t dispatch thunk of Error._code.getter()
{
  return dispatch thunk of Error._code.getter();
}

uint64_t dispatch thunk of Error._domain.getter()
{
  return dispatch thunk of Error._domain.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

uint64_t CALayerGetContext()
{
  return _CALayerGetContext();
}

uint64_t CALayerGetRenderId()
{
  return _CALayerGetRenderId();
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return _CATransform3DScale(retstr, t, sx, sy, sz);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDistributedCenter(void)
{
  return _CFNotificationCenterGetDistributedCenter();
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

void CFRelease(CFTypeRef cf)
{
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return _CGAffineTransformConcat(retstr, t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

void CGContextSetTextMatrix(CGContextRef c, CGAffineTransform *t)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

void CGImageMetadataEnumerateTagsUsingBlock(CGImageMetadataRef metadata, CFStringRef rootPath, CFDictionaryRef options, CGImageMetadataTagBlock block)
{
}

CFStringRef CGImageMetadataTagCopyName(CGImageMetadataTagRef tag)
{
  return _CGImageMetadataTagCopyName(tag);
}

CFTypeRef CGImageMetadataTagCopyValue(CGImageMetadataTagRef tag)
{
  return _CGImageMetadataTagCopyValue(tag);
}

CGImageMetadataRef CGImageSourceCopyMetadataAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCopyMetadataAtIndex(isrc, index, options);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCopyPropertiesAtIndex(isrc, index, options);
}

CFArrayRef CGImageSourceCopyTypeIdentifiers(void)
{
  return _CGImageSourceCopyTypeIdentifiers();
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

void CGPDFDictionaryApplyBlock(CGPDFDictionaryRef dict, CGPDFDictionaryApplierBlock block, void *info)
{
}

CGPDFDocumentRef CGPDFDocumentCreateWithURL(CFURLRef url)
{
  return _CGPDFDocumentCreateWithURL(url);
}

CGPDFDictionaryRef CGPDFDocumentGetInfo(CGPDFDocumentRef document)
{
  return _CGPDFDocumentGetInfo(document);
}

size_t CGPDFDocumentGetNumberOfPages(CGPDFDocumentRef document)
{
  return _CGPDFDocumentGetNumberOfPages(document);
}

CGPDFPageRef CGPDFDocumentGetPage(CGPDFDocumentRef document, size_t pageNumber)
{
  return _CGPDFDocumentGetPage(document, pageNumber);
}

void CGPDFDocumentGetVersion(CGPDFDocumentRef document, int *majorVersion, int *minorVersion)
{
}

BOOL CGPDFDocumentIsEncrypted(CGPDFDocumentRef document)
{
  return _CGPDFDocumentIsEncrypted(document);
}

BOOL CGPDFDocumentIsUnlocked(CGPDFDocumentRef document)
{
  return _CGPDFDocumentIsUnlocked(document);
}

void CGPDFDocumentRelease(CGPDFDocumentRef document)
{
}

CGPDFObjectType CGPDFObjectGetType(CGPDFObjectRef object)
{
  return _CGPDFObjectGetType(object);
}

BOOL CGPDFObjectGetValue(CGPDFObjectRef object, CGPDFObjectType type, void *value)
{
  return _CGPDFObjectGetValue(object, type, value);
}

CGRect CGPDFPageGetBoxRect(CGPDFPageRef page, CGPDFBox box)
{
  return _CGPDFPageGetBoxRect(page, box);
}

CFStringRef CGPDFStringCopyTextString(CGPDFStringRef string)
{
  return _CGPDFStringCopyTextString(string);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  return _CGRectApplyAffineTransform(rect, t);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMidY(CGRect rect)
{
  return _CGRectGetMidY(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntegral(CGRect rect)
{
  return _CGRectIntegral(rect);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectOffset(rect, dx, dy);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  return _CGRectUnion(r1, r2);
}

CFPropertyListRef CMFormatDescriptionGetExtension(CMFormatDescriptionRef desc, CFStringRef extensionKey)
{
  return _CMFormatDescriptionGetExtension(desc, extensionKey);
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return _CTFontCopySystemUIFontExcessiveLineHeightCharacterSet();
}

CGFloat CTFontGetAscent(CTFontRef font)
{
  return _CTFontGetAscent(font);
}

CGFloat CTFontGetDescent(CTFontRef font)
{
  return _CTFontGetDescent(font);
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return _CTFontGetLanguageAwareOutsets();
}

CGFloat CTFontGetLeading(CTFontRef font)
{
  return _CTFontGetLeading(font);
}

CTLineRef CTLineCreateTruncatedLine(CTLineRef line, double width, CTLineTruncationType truncationType, CTLineRef truncationToken)
{
  return _CTLineCreateTruncatedLine(line, width, truncationType, truncationToken);
}

CTLineRef CTLineCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return _CTLineCreateWithAttributedString(attrString);
}

void CTLineDraw(CTLineRef line, CGContextRef context)
{
}

double CTLineGetTrailingWhitespaceWidth(CTLineRef line)
{
  return _CTLineGetTrailingWhitespaceWidth(line);
}

double CTLineGetTypographicBounds(CTLineRef line, CGFloat *ascent, CGFloat *descent, CGFloat *leading)
{
  return _CTLineGetTypographicBounds(line, ascent, descent, leading);
}

CTLineRef CTTypesetterCreateLine(CTTypesetterRef typesetter, CFRange stringRange)
{
  return _CTTypesetterCreateLine(typesetter, stringRange);
}

CTTypesetterRef CTTypesetterCreateWithAttributedString(CFAttributedStringRef string)
{
  return _CTTypesetterCreateWithAttributedString(string);
}

CFIndex CTTypesetterSuggestLineBreak(CTTypesetterRef typesetter, CFIndex startIndex, double width)
{
  return _CTTypesetterSuggestLineBreak(typesetter, startIndex, width);
}

uint64_t DOCAdaptSizeToRect()
{
  return _DOCAdaptSizeToRect();
}

uint64_t DOCAlertItemIsNotReadable()
{
  return _DOCAlertItemIsNotReadable();
}

uint64_t DOCAlertUserTheNetworkIsNotReachable()
{
  return _DOCAlertUserTheNetworkIsNotReachable();
}

uint64_t DOCAlertUserTrashedFileCanNotBeOpened()
{
  return _DOCAlertUserTrashedFileCanNotBeOpened();
}

uint64_t DOCCenterSizeInRect()
{
  return _DOCCenterSizeInRect();
}

uint64_t DOCConstraintWithPriority()
{
  return _DOCConstraintWithPriority();
}

uint64_t DOCConstraintsToResizeWithReferenceView()
{
  return _DOCConstraintsToResizeWithReferenceView();
}

uint64_t DOCConstraintsToResizeWithSuperview()
{
  return _DOCConstraintsToResizeWithSuperview();
}

uint64_t DOCDebugMenuEnabled()
{
  return _DOCDebugMenuEnabled();
}

uint64_t DOCDeviceIsPad()
{
  return _DOCDeviceIsPad();
}

uint64_t DOCDeviceIsPhone()
{
  return _DOCDeviceIsPhone();
}

uint64_t DOCDocumentPickerExtensionUpdateWithConfiguration()
{
  return _DOCDocumentPickerExtensionUpdateWithConfiguration();
}

uint64_t DOCErrorNoLocationAvailableError()
{
  return _DOCErrorNoLocationAvailableError();
}

uint64_t DOCFirstResponderIsKeyInput()
{
  return _DOCFirstResponderIsKeyInput();
}

uint64_t DOCFocusGroupIdentifierBrowserFromConfiguration()
{
  return _DOCFocusGroupIdentifierBrowserFromConfiguration();
}

uint64_t DOCFrameworkBundle()
{
  return _DOCFrameworkBundle();
}

uint64_t DOCInitLogging()
{
  return _DOCInitLogging();
}

uint64_t DOCIsInternalBuild()
{
  return _DOCIsInternalBuild();
}

uint64_t DOCIsNetworkReachable()
{
  return _DOCIsNetworkReachable();
}

uint64_t DOCLocalizedDisplayName()
{
  return _DOCLocalizedDisplayName();
}

uint64_t DOCLocalizedMetadataStringForExposureProgramNumber()
{
  return _DOCLocalizedMetadataStringForExposureProgramNumber();
}

uint64_t DOCLocalizedMetadataStringForLatitude()
{
  return _DOCLocalizedMetadataStringForLatitude();
}

uint64_t DOCLocalizedMetadataStringForLongitude()
{
  return _DOCLocalizedMetadataStringForLongitude();
}

uint64_t DOCLocalizedMetadataStringForMeteringModeNumber()
{
  return _DOCLocalizedMetadataStringForMeteringModeNumber();
}

uint64_t DOCLocalizedMetadataStringForUnavailablePropertyValue()
{
  return _DOCLocalizedMetadataStringForUnavailablePropertyValue();
}

uint64_t DOCLocalizedMetadataStringForWhiteBalanceModeNumber()
{
  return _DOCLocalizedMetadataStringForWhiteBalanceModeNumber();
}

uint64_t DOCLocalizedMetadataStringForWidthByHeight()
{
  return _DOCLocalizedMetadataStringForWidthByHeight();
}

uint64_t DOCLocalizedMetadataStringInMMSSForDuration()
{
  return _DOCLocalizedMetadataStringInMMSSForDuration();
}

uint64_t DOCLocalizedMetadataYesNoStringForBool()
{
  return _DOCLocalizedMetadataYesNoStringForBool();
}

uint64_t DOCLocalizedProviderOnlyDisplayName()
{
  return _DOCLocalizedProviderOnlyDisplayName();
}

uint64_t DOCLogAssertionFailure()
{
  return _DOCLogAssertionFailure();
}

uint64_t DOCNewThumbnailFittingImageView()
{
  return _DOCNewThumbnailFittingImageView();
}

uint64_t DOCPresentAlertForError()
{
  return _DOCPresentAlertForError();
}

uint64_t DOCPresentAlertForErrorWithForceHandler()
{
  return _DOCPresentAlertForErrorWithForceHandler();
}

uint64_t DOCProviderDomainIDIsDefaultSharedServer()
{
  return _DOCProviderDomainIDIsDefaultSharedServer();
}

uint64_t DOCProviderDomainIDIsExternalDevice()
{
  return _DOCProviderDomainIDIsExternalDevice();
}

uint64_t DOCProviderDomainIDIsLegacyWebDAV()
{
  return _DOCProviderDomainIDIsLegacyWebDAV();
}

uint64_t DOCProviderDomainIDIsRemovable()
{
  return _DOCProviderDomainIDIsRemovable();
}

uint64_t DOCProviderDomainIDIsSharedServerDomainID()
{
  return _DOCProviderDomainIDIsSharedServerDomainID();
}

uint64_t DOCProviderDomainIDIsWebDAV()
{
  return _DOCProviderDomainIDIsWebDAV();
}

uint64_t DOCProviderDomainIsSharedServerDomain()
{
  return _DOCProviderDomainIsSharedServerDomain();
}

uint64_t DOCRunInMainThread()
{
  return _DOCRunInMainThread();
}

uint64_t DOCScreenSizePad12_9()
{
  return _DOCScreenSizePad12_9();
}

uint64_t DOCScreenSizeSEPhone()
{
  return _DOCScreenSizeSEPhone();
}

uint64_t DOCSizeIsFullScreenSize()
{
  return _DOCSizeIsFullScreenSize();
}

uint64_t DOCSpotlightGPSInfoFromCGImagePropertyDictionary()
{
  return _DOCSpotlightGPSInfoFromCGImagePropertyDictionary();
}

uint64_t DOCTagsFromFPTags()
{
  return _DOCTagsFromFPTags();
}

uint64_t DOCUsePadIdiomForTraits()
{
  return _DOCUsePadIdiomForTraits();
}

uint64_t DOCUsePhoneIdiomForTraits()
{
  return _DOCUsePhoneIdiomForTraits();
}

uint64_t FPExtendBookmarkForDocumentURL()
{
  return _FPExtendBookmarkForDocumentURL();
}

uint64_t FPIsCloudDocsWithFPFSEnabled()
{
  return _FPIsCloudDocsWithFPFSEnabled();
}

uint64_t FPTagFromDOCTag()
{
  return _FPTagFromDOCTag();
}

uint64_t FPTagsFromDOCTags()
{
  return _FPTagsFromDOCTags();
}

uint64_t GSEventIsHardwareKeyboardAttached()
{
  return _GSEventIsHardwareKeyboardAttached();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return _NSSelectorFromString(aSelectorName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t SWCollaborationMetadataForDocumentURL()
{
  return _SWCollaborationMetadataForDocumentURL();
}

uint64_t StartFINode()
{
  return _StartFINode();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return _UIAccessibilityIsReduceMotionEnabled();
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return _UIAccessibilityIsReduceTransparencyEnabled();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

uint64_t UIAnimationDragCoefficient()
{
  return _UIAnimationDragCoefficient();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

uint64_t UICeilToScale()
{
  return _UICeilToScale();
}

uint64_t UIFloorToScale()
{
  return _UIFloorToScale();
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
}

void UIGraphicsEndImageContext(void)
{
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return _UIGraphicsGetCurrentContext();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return _UIGraphicsGetImageFromCurrentImageContext();
}

uint64_t UIKeyboardGetCurrentInputMode()
{
  return _UIKeyboardGetCurrentInputMode();
}

uint64_t UIKeyboardInputModeGetLanguage()
{
  return _UIKeyboardInputModeGetLanguage();
}

uint64_t UIKeyboardInputModeGetNormalizedIdentifier()
{
  return _UIKeyboardInputModeGetNormalizedIdentifier();
}

uint64_t UIPointRoundToScale()
{
  return _UIPointRoundToScale();
}

uint64_t UIRectIntegralWithScale()
{
  return _UIRectIntegralWithScale();
}

uint64_t UIRoundToScale()
{
  return _UIRoundToScale();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _DocumentManagerBundle()
{
  return __DocumentManagerBundle();
}

uint64_t _UIBarsApplyChromelessEverywhere()
{
  return __UIBarsApplyChromelessEverywhere();
}

uint64_t _UIGraphicsDrawIntoImageContextWithOptions()
{
  return __UIGraphicsDrawIntoImageContextWithOptions();
}

UIImageSymbolWeight _UIImageSymbolWeightForFontWeight(UIFontWeight fontWeight)
{
  return __UIImageSymbolWeightForFontWeight(fontWeight);
}

uint64_t _UIPreviewParametersGenerateTextPlatter()
{
  return __UIPreviewParametersGenerateTextPlatter();
}

uint64_t _UIScaleTransformForAspectFitOfSizeInTargetSize()
{
  return __UIScaleTransformForAspectFitOfSizeInTargetSize();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

{
}

{
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

long double log10(long double __x)
{
  return _log10(__x);
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t os_variant_has_internal_diagnostics()
{
  return _os_variant_has_internal_diagnostics();
}

int setiopolicy_np(int a1, int a2, int a3)
{
  return _setiopolicy_np(a1, a2, a3);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastClassUnconditional()
{
  return _swift_dynamicCastClassUnconditional();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastMetatypeUnconditional()
{
  return _swift_dynamicCastMetatypeUnconditional();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_dynamicCastObjCProtocolUnconditional()
{
  return _swift_dynamicCastObjCProtocolUnconditional();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return _swift_dynamicCastUnknownClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassFromObject()
{
  return _swift_getObjCClassFromObject();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStaticObject()
{
  return _swift_initStaticObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced()
{
  return _swift_isUniquelyReferenced();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return _swift_isUniquelyReferenced_native();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGRectValue(void *a1, const char *a2, ...)
{
  return _[a1 CGRectValue];
}

id objc_msgSend_DOCColumnViewControllerUpdatedNavigationItem(void *a1, const char *a2, ...)
{
  return _[a1 DOCColumnViewControllerUpdatedNavigationItem];
}

id objc_msgSend_DOCTabBarItem(void *a1, const char *a2, ...)
{
  return _[a1 DOCTabBarItem];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__UIPTabInfrastructureEnabled(void *a1, const char *a2, ...)
{
  return _[a1 _UIPTabInfrastructureEnabled];
}

id objc_msgSend__activeTransitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 _activeTransitionCoordinator];
}

id objc_msgSend__addSubscriberForConfiguration_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_addSubscriberForConfiguration:usingBlock:");
}

id objc_msgSend__appearState(void *a1, const char *a2, ...)
{
  return _[a1 _appearState];
}

id objc_msgSend__arrangeSidebarForCollapsedPresentationForced_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_arrangeSidebarForCollapsedPresentationForced:");
}

id objc_msgSend__canNavigateBack(void *a1, const char *a2, ...)
{
  return _[a1 _canNavigateBack];
}

id objc_msgSend__canPopViewController(void *a1, const char *a2, ...)
{
  return _[a1 _canPopViewController];
}

id objc_msgSend__configureNumberFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_configureNumberFormatter:");
}

id objc_msgSend__contentUnavailableConfigurationState(void *a1, const char *a2, ...)
{
  return _[a1 _contentUnavailableConfigurationState];
}

id objc_msgSend__contextAllowsPersistingColumnVisibilityChanges(void *a1, const char *a2, ...)
{
  return _[a1 _contextAllowsPersistingColumnVisibilityChanges];
}

id objc_msgSend__customPreferredSplitBehavior_EmbeddedScreen(void *a1, const char *a2, ...)
{
  return [a1 _customPreferredSplitBehavior_EmbeddedScreen];
}

id objc_msgSend__customPreferredSplitBehavior_ExternalScreen(void *a1, const char *a2, ...)
{
  return [a1 _customPreferredSplitBehavior_ExternalScreen];
}

id objc_msgSend__decimalDefaultFormattedDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalDefaultFormattedDoubleValue:");
}

id objc_msgSend__decimalDisplayStringByFormattingDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalDisplayStringByFormattingDoubleValue:");
}

id objc_msgSend__decimalLengthFormattedDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_decimalLengthFormattedDoubleValue:");
}

id objc_msgSend__defaultLocationIsRecentsTab(void *a1, const char *a2, ...)
{
  return _[a1 _defaultLocationIsRecentsTab];
}

id objc_msgSend__definiteTransitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 _definiteTransitionCoordinator];
}

id objc_msgSend__displayModeButtonItemTitle(void *a1, const char *a2, ...)
{
  return _[a1 _displayModeButtonItemTitle];
}

id objc_msgSend__hostingNavigationBar(void *a1, const char *a2, ...)
{
  return _[a1 _hostingNavigationBar];
}

id objc_msgSend__integerFractionalDisplayStringByFormattingDoubleValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_integerFractionalDisplayStringByFormattingDoubleValue:");
}

id objc_msgSend__isEmbeddedScreen(void *a1, const char *a2, ...)
{
  return _[a1 _isEmbeddedScreen];
}

id objc_msgSend__largeTitleColorForTintColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_largeTitleColorForTintColor:");
}

id objc_msgSend__loadFullHierarchy(void *a1, const char *a2, ...)
{
  return _[a1 _loadFullHierarchy];
}

id objc_msgSend__loadMinimalHierarchy(void *a1, const char *a2, ...)
{
  return _[a1 _loadMinimalHierarchy];
}

id objc_msgSend__mostRecentBrowsedPathEffectiveTab(void *a1, const char *a2, ...)
{
  return _[a1 _mostRecentBrowsedPathEffectiveTab];
}

id objc_msgSend__multitaskingDragExclusionRects(void *a1, const char *a2, ...)
{
  return _[a1 _multitaskingDragExclusionRects];
}

id objc_msgSend__performWhileNotingInflightSelectedViewController_block_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhileNotingInflightSelectedViewController:block:");
}

id objc_msgSend__performWhilePreventingHierarchyControllerLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_performWhilePreventingHierarchyControllerLoading:");
}

id objc_msgSend__primaryDimmingView(void *a1, const char *a2, ...)
{
  return _[a1 _primaryDimmingView];
}

id objc_msgSend__referenceViewControllerForDirectTabChildViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_referenceViewControllerForDirectTabChildViewController:");
}

id objc_msgSend__rotatingToInterfaceOrientation(void *a1, const char *a2, ...)
{
  return _[a1 _rotatingToInterfaceOrientation];
}

id objc_msgSend__saveUserPrefersTiledSidebarForChangeFromDisplayMode_toDisplayMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_saveUserPrefersTiledSidebarForChangeFromDisplayMode:toDisplayMode:");
}

id objc_msgSend__scrollToTopIfPossible_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_scrollToTopIfPossible:");
}

id objc_msgSend__selectedOrInflightSelectedViewController(void *a1, const char *a2, ...)
{
  return _[a1 _selectedOrInflightSelectedViewController];
}

id objc_msgSend__setIgnoresSheetContext_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setIgnoresSheetContext:");
}

id objc_msgSend__setLocationsInBrowseTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setLocationsInBrowseTab:");
}

id objc_msgSend__setNeedsUpdateOfMultitaskingDragExclusionRects(void *a1, const char *a2, ...)
{
  return _[a1 _setNeedsUpdateOfMultitaskingDragExclusionRects];
}

id objc_msgSend__setShowSystemTabBar_isEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_setShowSystemTabBar:isEditing:");
}

id objc_msgSend__shouldForwardSelectorToDelegate_(void *a1, const char *a2, ...)
{
  return [a1 _shouldForwardSelectorToDelegate:];
}

id objc_msgSend__shouldOverlayTabBar(void *a1, const char *a2, ...)
{
  return _[a1 _shouldOverlayTabBar];
}

id objc_msgSend__sidebarVisibilityPinnedToWindowSizingOnly(void *a1, const char *a2, ...)
{
  return _[a1 _sidebarVisibilityPinnedToWindowSizingOnly];
}

id objc_msgSend__sourcesByBuildingWithSourceBuilder(void *a1, const char *a2, ...)
{
  return _[a1 _sourcesByBuildingWithSourceBuilder];
}

id objc_msgSend__splitViewBorderColor(void *a1, const char *a2, ...)
{
  return _[a1 _splitViewBorderColor];
}

id objc_msgSend__stopSearchingSources(void *a1, const char *a2, ...)
{
  return _[a1 _stopSearchingSources];
}

id objc_msgSend__swipeToCloseSidebarGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _swipeToCloseSidebarGestureRecognizer];
}

id objc_msgSend__tapToCloseSidebarGestureRecognizer(void *a1, const char *a2, ...)
{
  return _[a1 _tapToCloseSidebarGestureRecognizer];
}

id objc_msgSend__uip_isTabBarHidden(void *a1, const char *a2, ...)
{
  return [a1 _uip_isTabBarHidden];
}

id objc_msgSend__underlyingSelectedViewController(void *a1, const char *a2, ...)
{
  return _[a1 _underlyingSelectedViewController];
}

id objc_msgSend__updateBarVisibility(void *a1, const char *a2, ...)
{
  return _[a1 _updateBarVisibility];
}

id objc_msgSend__updateColumnViewAvailablityFromTraitCollection_andSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateColumnViewAvailablityFromTraitCollection:andSize:");
}

id objc_msgSend__updateLargeTitleTextAttributes(void *a1, const char *a2, ...)
{
  return _[a1 _updateLargeTitleTextAttributes];
}

id objc_msgSend__updateNavigationBarVisibilityAnimated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_updateNavigationBarVisibilityAnimated:");
}

id objc_msgSend__updatePreferredContentSizeForFirstAppearance(void *a1, const char *a2, ...)
{
  return _[a1 _updatePreferredContentSizeForFirstAppearance];
}

id objc_msgSend__updateTabButtonsVisibilityForTraits(void *a1, const char *a2, ...)
{
  return _[a1 _updateTabButtonsVisibilityForTraits];
}

id objc_msgSend__viewController_wantsToShowSystemTabBar_isEditing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_viewController:wantsToShowSystemTabBar:isEditing:");
}

id objc_msgSend__viewControllerForOverlayTabBar(void *a1, const char *a2, ...)
{
  return _[a1 _viewControllerForOverlayTabBar];
}

id objc_msgSend_actionManager(void *a1, const char *a2, ...)
{
  return _[a1 actionManager];
}

id objc_msgSend_actionManagersFromSources(void *a1, const char *a2, ...)
{
  return _[a1 actionManagersFromSources];
}

id objc_msgSend_actionWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 actionWithHandler:];
}

id objc_msgSend_activateConstraints_(void *a1, const char *a2, ...)
{
  return [a1 activateConstraints:];
}

id objc_msgSend_activateContainerViewControllersIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 activateContainerViewControllersIfNeeded];
}

id objc_msgSend_activationState(void *a1, const char *a2, ...)
{
  return _[a1 activationState];
}

id objc_msgSend_actualViewController(void *a1, const char *a2, ...)
{
  return _[a1 actualViewController];
}

id objc_msgSend_addCGExifPropertiesToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addCGExifPropertiesToDictionary];
}

id objc_msgSend_addChildViewController_(void *a1, const char *a2, ...)
{
  return [a1 addChildViewController:];
}

id objc_msgSend_addColorInfoToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addColorInfoToDictionary];
}

id objc_msgSend_addCreditTypeToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addCreditTypeToDictionary];
}

id objc_msgSend_addDigitalSourceTypeToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addDigitalSourceTypeToDictionary];
}

id objc_msgSend_addFlashProperitesToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addFlashProperitesToDictionary:];
}

id objc_msgSend_addGPSInfoToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addGPSInfoToDictionary:];
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return [a1 addGestureRecognizer:];
}

id objc_msgSend_addHasAlphaToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addHasAlphaToDictionary];
}

id objc_msgSend_addHasDPIToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addHasDPIToDictionary];
}

id objc_msgSend_addHasSizeToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addHasSizeToDictionary:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:selector:name:object:];
}

id objc_msgSend_addObserverForName_object_queue_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 addObserverForName:object:queue:usingBlock:];
}

id objc_msgSend_addPagesToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addPagesToDictionary:];
}

id objc_msgSend_addSecureToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addSecureToDictionary:];
}

id objc_msgSend_addSizeToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addSizeToDictionary];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_addVersionToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addVersionToDictionary];
}

id objc_msgSend_additionalLeadingNavigationBarButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 additionalLeadingNavigationBarButtonItems];
}

id objc_msgSend_additionalTrailingNavigationBarButtonItems(void *a1, const char *a2, ...)
{
  return _[a1 additionalTrailingNavigationBarButtonItems];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allowsDisplaying_(void *a1, const char *a2, ...)
{
  return [a1 allowsDisplaying:];
}

id objc_msgSend_allowsDocumentCreation(void *a1, const char *a2, ...)
{
  return _[a1 allowsDocumentCreation];
}

id objc_msgSend_animateAlongsideTransition_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateAlongsideTransition:];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_applicationExtensionRecords(void *a1, const char *a2, ...)
{
  return _[a1 applicationExtensionRecords];
}

id objc_msgSend_applicationIconForBundleIdentifier_size_(void *a1, const char *a2, ...)
{
  return [a1 applicationIconForBundleIdentifier:size:];
}

id objc_msgSend_applyTintColorToViews(void *a1, const char *a2, ...)
{
  return _[a1 applyTintColorToViews];
}

id objc_msgSend_areAnimationsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 areAnimationsEnabled];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayByExcludingObjectsInArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByExcludingObjectsInArray:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_asDOC(void *a1, const char *a2, ...)
{
  return _[a1 asDOC];
}

id objc_msgSend_asUIKit(void *a1, const char *a2, ...)
{
  return _[a1 asUIKit];
}

id objc_msgSend_attributes(void *a1, const char *a2, ...)
{
  return _[a1 attributes];
}

id objc_msgSend_background(void *a1, const char *a2, ...)
{
  return _[a1 background];
}

id objc_msgSend_beginAppearanceTransition_animated_(void *a1, const char *a2, ...)
{
  return [a1 beginAppearanceTransition:animated:];
}

id objc_msgSend_beginMatchingExtensionsWithAttributes_completion_(void *a1, const char *a2, ...)
{
  return [a1 beginMatchingExtensionsWithAttributes:completion:];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_block(void *a1, const char *a2, ...)
{
  return _[a1 block];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_borderedProminentButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 borderedProminentButtonConfiguration];
}

id objc_msgSend_bottomAnchor(void *a1, const char *a2, ...)
{
  return _[a1 bottomAnchor];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bringSubviewToFront_(void *a1, const char *a2, ...)
{
  return [a1 bringSubviewToFront:];
}

id objc_msgSend_browserContentStrategy(void *a1, const char *a2, ...)
{
  return _[a1 browserContentStrategy];
}

id objc_msgSend_browsingModeTabBar(void *a1, const char *a2, ...)
{
  return _[a1 browsingModeTabBar];
}

id objc_msgSend_buildSourcesFromLegacyPickerExtensions_legacyProviders_(void *a1, const char *a2, ...)
{
  return [a1 buildSourcesFromLegacyPickerExtensions:legacyProviders:];
}

id objc_msgSend_buildSourcesFromProviderDomains_(void *a1, const char *a2, ...)
{
  return [a1 buildSourcesFromProviderDomains:];
}

id objc_msgSend_buildSourcesProviders_legacyWebViewFileProviders_(void *a1, const char *a2, ...)
{
  return [a1 buildSourcesProviders:legacyWebViewFileProviders:];
}

id objc_msgSend_bumpLastOpenDateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 bumpLastOpenDateWithCompletionHandler:];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_buttonProperties(void *a1, const char *a2, ...)
{
  return _[a1 buttonProperties];
}

id objc_msgSend_buttonWithConfiguration_primaryAction_(void *a1, const char *a2, ...)
{
  return [a1 buttonWithConfiguration:primaryAction:];
}

id objc_msgSend_cachePersonaStringForProviders_(void *a1, const char *a2, ...)
{
  return [a1 cachePersonaStringForProviders:];
}

id objc_msgSend_canHaveTabs(void *a1, const char *a2, ...)
{
  return _[a1 canHaveTabs];
}

id objc_msgSend_canHostAppPerformAction_fileProviderDomain_(void *a1, const char *a2, ...)
{
  return [a1 canHostAppPerformAction:fileProviderDomain:];
}

id objc_msgSend_canHostAppPerformAction_legacyPickerExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "canHostAppPerformAction:legacyPickerExtension:");
}

id objc_msgSend_canPresentContentForTab_(void *a1, const char *a2, ...)
{
  return [a1 canPresentContentForTab:];
}

id objc_msgSend_canResetHierarchyController(void *a1, const char *a2, ...)
{
  return _[a1 canResetHierarchyController];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_childViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 childViewControllers];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearSharedControllerFor_(void *a1, const char *a2, ...)
{
  return [a1 clearSharedControllerFor:];
}

id objc_msgSend_clearSplitViewStateTransitionStateIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 clearSplitViewStateTransitionStateIfNecessary];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_color(void *a1, const char *a2, ...)
{
  return _[a1 color];
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return [a1 colorWithAlphaComponent:];
}

id objc_msgSend_commonInit(void *a1, const char *a2, ...)
{
  return _[a1 commonInit];
}

id objc_msgSend_compactMetadataValues(void *a1, const char *a2, ...)
{
  return _[a1 compactMetadataValues];
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsSeparatedByString:];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationWithTextStyle_scale_(void *a1, const char *a2, ...)
{
  return [a1 configurationWithTextStyle:scale:];
}

id objc_msgSend_configureContextForDisplayingTab_(void *a1, const char *a2, ...)
{
  return [a1 configureContextForDisplayingTab:];
}

id objc_msgSend_configureTabBarForUIPIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 configureTabBarForUIPIfNecessary];
}

id objc_msgSend_configureUIPDocumentLandingStyleIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 configureUIPDocumentLandingStyleIfNecessary];
}

id objc_msgSend_configureWithDefaultBackground(void *a1, const char *a2, ...)
{
  return _[a1 configureWithDefaultBackground];
}

id objc_msgSend_configureWithZeroInsetsIfAllowed(void *a1, const char *a2, ...)
{
  return _[a1 configureWithZeroInsetsIfAllowed];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return [a1 conformsToProtocol:];
}

id objc_msgSend_consolidatedErrorIfExists(void *a1, const char *a2, ...)
{
  return _[a1 consolidatedErrorIfExists];
}

id objc_msgSend_constraintEqualToAnchor_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToAnchor:];
}

id objc_msgSend_constraintEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintEqualToConstant:];
}

id objc_msgSend_constraintLessThanOrEqualToConstant_(void *a1, const char *a2, ...)
{
  return [a1 constraintLessThanOrEqualToConstant:];
}

id objc_msgSend_containerControllers(void *a1, const char *a2, ...)
{
  return _[a1 containerControllers];
}

id objc_msgSend_containingAppBundleIdentifierForBundleURL_(void *a1, const char *a2, ...)
{
  return [a1 containingAppBundleIdentifierForBundleURL];
}

id objc_msgSend_containingAppBundleIdentifierForPicker_(void *a1, const char *a2, ...)
{
  return [a1 containingAppBundleIdentifierForPicker:];
}

id objc_msgSend_containingAppBundleIdentifierForProvider_(void *a1, const char *a2, ...)
{
  return [a1 containingAppBundleIdentifierForProvider:];
}

id objc_msgSend_containingApplicationRecord(void *a1, const char *a2, ...)
{
  return _[a1 containingApplicationRecord];
}

id objc_msgSend_containingBundleRecord(void *a1, const char *a2, ...)
{
  return _[a1 containingBundleRecord];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_contentType(void *a1, const char *a2, ...)
{
  return _[a1 contentType];
}

id objc_msgSend_contentViewController(void *a1, const char *a2, ...)
{
  return _[a1 contentViewController];
}

id objc_msgSend_contextPrefersVariableBlurBottomTabBar(void *a1, const char *a2, ...)
{
  return _[a1 contextPrefersVariableBlurBottomTabBar];
}

id objc_msgSend_convertRect_fromCoordinateSpace_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromCoordinateSpace:];
}

id objc_msgSend_coordinateSpace(void *a1, const char *a2, ...)
{
  return _[a1 coordinateSpace];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return [a1 copyWithZone:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createSourceFrom_with_(void *a1, const char *a2, ...)
{
  return [a1 createSourceFrom:with:];
}

id objc_msgSend_createSpotlightSources(void *a1, const char *a2, ...)
{
  return _[a1 createSpotlightSources];
}

id objc_msgSend_currentContainers(void *a1, const char *a2, ...)
{
  return _[a1 currentContainers];
}

id objc_msgSend_currentViewController(void *a1, const char *a2, ...)
{
  return _[a1 currentViewController];
}

id objc_msgSend_currentViewControllers(void *a1, const char *a2, ...)
{
  return _[a1 currentViewControllers];
}

id objc_msgSend_customStateForKey_(void *a1, const char *a2, ...)
{
  return [a1 customStateForKey:];
}

id objc_msgSend_dataSource(void *a1, const char *a2, ...)
{
  return _[a1 dataSource];
}

id objc_msgSend_deactivateAlongsideContainingTransitionCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 deactivateAlongsideContainingTransitionCoordinator:];
}

id objc_msgSend_decimalFormatString(void *a1, const char *a2, ...)
{
  return _[a1 decimalFormatString];
}

id objc_msgSend_decimalNumberByDividingBy_withBehavior_(void *a1, const char *a2, ...)
{
  return [a1 decimalNumberByDividingBy:withBehavior:];
}

id objc_msgSend_decimalNumberHandlerWithRoundingMode_scale_raiseOnExactness_raiseOnOverflow_raiseOnUnderflow_raiseOnDivideByZero_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:");
}

id objc_msgSend_decimalNumberWithString_(void *a1, const char *a2, ...)
{
  return [a1 decimalNumberWithString:];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultInitialBrowsedPathEffectiveTab(void *a1, const char *a2, ...)
{
  return _[a1 defaultInitialBrowsedPathEffectiveTab];
}

id objc_msgSend_defaultLocation(void *a1, const char *a2, ...)
{
  return _[a1 defaultLocation];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultMetrics(void *a1, const char *a2, ...)
{
  return _[a1 defaultMetrics];
}

id objc_msgSend_defaultPermission(void *a1, const char *a2, ...)
{
  return _[a1 defaultPermission];
}

id objc_msgSend_defaultSaveLocationObserverContext(void *a1, const char *a2, ...)
{
  return _[a1 defaultSaveLocationObserverContext];
}

id objc_msgSend_defaultSourceUIManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultSourceUIManager];
}

id objc_msgSend_deferredBrowserStateChanges(void *a1, const char *a2, ...)
{
  return _[a1 deferredBrowserStateChanges];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryForKey:];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 didChangeValueForKey:];
}

id objc_msgSend_didMoveToParentViewController_(void *a1, const char *a2, ...)
{
  return [a1 didMoveToParentViewController:];
}

id objc_msgSend_didReceiveSourceUpdate(void *a1, const char *a2, ...)
{
  return _[a1 didReceiveSourceUpdate];
}

id objc_msgSend_disableWorkaroundFor123787016(void *a1, const char *a2, ...)
{
  return _[a1 disableWorkaroundFor123787016];
}

id objc_msgSend_disableWorkaroundFor124376396(void *a1, const char *a2, ...)
{
  return _[a1 disableWorkaroundFor124376396];
}

id objc_msgSend_dismissSearch(void *a1, const char *a2, ...)
{
  return _[a1 dismissSearch];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:completion:];
}

id objc_msgSend_displayAddTagsViewWithItems_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayAddTagsViewWithItems:");
}

id objc_msgSend_displayMode(void *a1, const char *a2, ...)
{
  return _[a1 displayMode];
}

id objc_msgSend_displayModeButtonItem(void *a1, const char *a2, ...)
{
  return _[a1 displayModeButtonItem];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayStringForMetadataNumberValue_(void *a1, const char *a2, ...)
{
  return [a1 displayStringForMetadataNumberValue:];
}

id objc_msgSend_displayStringForMetadataStringValue_(void *a1, const char *a2, ...)
{
  return [a1 displayStringForMetadataStringValue:];
}

id objc_msgSend_displayStringForMetadataValue_(void *a1, const char *a2, ...)
{
  return [a1 displayStringForMetadataValue:];
}

id objc_msgSend_displayedRootLocation(void *a1, const char *a2, ...)
{
  return _[a1 displayedRootLocation];
}

id objc_msgSend_docContentUnavailableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 docContentUnavailableConfiguration];
}

id objc_msgSend_docContentUnavailableConfigurationState(void *a1, const char *a2, ...)
{
  return _[a1 docContentUnavailableConfigurationState];
}

id objc_msgSend_docSearchControllerForSearchingIn_configuration_collectionViewPool_documentManager_actionManager_(void *a1, const char *a2, ...)
{
  return [a1 docSearchControllerForSearchingIn:configuration:collectionViewPool:documentManager:actionManager:];
}

id objc_msgSend_docUpdateContentUnavailableConfigurationUsingState_(void *a1, const char *a2, ...)
{
  return [a1 docUpdateContentUnavailableConfigurationUsingState:];
}

id objc_msgSend_doc_applicationExtensionRecordAtURL_(void *a1, const char *a2, ...)
{
  return [a1 doc_applicationExtensionRecordAtURL:];
}

id objc_msgSend_doc_circleWithInset_(void *a1, const char *a2, ...)
{
  return [a1 doc_circleWithInset:];
}

id objc_msgSend_doc_commonInit(void *a1, const char *a2, ...)
{
  return [a1 doc_commonInit];
}

id objc_msgSend_doc_commonInitWithSourceObserver_(void *a1, const char *a2, ...)
{
  return [a1 doc_commonInitWithSourceObserver:];
}

id objc_msgSend_doc_contentTypesForIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 doc_contentTypesForIdentifiers:];
}

id objc_msgSend_doc_deprecated_interfaceOrientation(void *a1, const char *a2, ...)
{
  return [a1 doc_deprecated_interfaceOrientation];
}

id objc_msgSend_doc_hasAppeared(void *a1, const char *a2, ...)
{
  return [a1 doc_hasAppeared];
}

id objc_msgSend_doc_inWindowPerformingSnapshotting(void *a1, const char *a2, ...)
{
  return [a1 doc_inWindowPerformingSnapshotting];
}

id objc_msgSend_doc_isAppearing(void *a1, const char *a2, ...)
{
  return [a1 doc_isAppearing];
}

id objc_msgSend_doc_performAllowingAnimations_block_(void *a1, const char *a2, ...)
{
  return [a1 doc_performAllowingAnimations:block:];
}

id objc_msgSend_doc_performWithDeferredTransitionsAndAnimationsDisabled_(void *a1, const char *a2, ...)
{
  return [a1 doc_performWithDeferredTransitionsAndAnimationsDisabled:];
}

id objc_msgSend_doc_removeFromParentWithRemoveSubviewBlock_(void *a1, const char *a2, ...)
{
  return [a1 doc_removeFromParentWithRemoveSubviewBlock:];
}

id objc_msgSend_doc_setContentUnavailableConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 doc_setContentUnavailableConfiguration:];
}

id objc_msgSend_doc_splitViewState(void *a1, const char *a2, ...)
{
  return [a1 doc_splitViewState];
}

id objc_msgSend_doc_splitViewStateTransitionEnd(void *a1, const char *a2, ...)
{
  return [a1 doc_splitViewStateTransitionEnd];
}

id objc_msgSend_doc_splitViewStateTransitionStart(void *a1, const char *a2, ...)
{
  return [a1 doc_splitViewStateTransitionStart];
}

id objc_msgSend_documentBrowser_applicationActivitiesForDocumentURLs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:applicationActivitiesForDocumentURLs:");
}

id objc_msgSend_documentBrowser_didImportDocumentAtURL_toDestinationURL_(void *a1, const char *a2, ...)
{
  return [a1 documentBrowser:didImportDocumentAtURL:toDestinationURL:];
}

id objc_msgSend_documentBrowser_didPickDocumentURLs_(void *a1, const char *a2, ...)
{
  return [a1 documentBrowser:didPickDocumentURLs:];
}

id objc_msgSend_documentBrowser_didPickDocumentsAtURLs_(void *a1, const char *a2, ...)
{
  return [a1 documentBrowser:didPickDocumentsAtURLs:];
}

id objc_msgSend_documentBrowser_didRequestDocumentCreationWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:didRequestDocumentCreationWithHandler:");
}

id objc_msgSend_documentBrowser_failedToImportDocumentAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 documentBrowser:failedToImportDocumentAtURL:error:];
}

id objc_msgSend_documentBrowser_shouldShowActivityViewControllerForDocumentURLs_barButtonItem_popoverTracker_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentBrowser:shouldShowActivityViewControllerForDocumentURLs:barButtonItem:popoverTracker:");
}

id objc_msgSend_documentBrowser_willPresentActivityViewController_(void *a1, const char *a2, ...)
{
  return [a1 documentBrowser:willPresentActivityViewController:];
}

id objc_msgSend_documentManager(void *a1, const char *a2, ...)
{
  return _[a1 documentManager];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadButton(void *a1, const char *a2, ...)
{
  return _[a1 downloadButton];
}

id objc_msgSend_downloadState(void *a1, const char *a2, ...)
{
  return _[a1 downloadState];
}

id objc_msgSend_downloadingProgress(void *a1, const char *a2, ...)
{
  return _[a1 downloadingProgress];
}

id objc_msgSend_effectWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 effectWithStyle:];
}

id objc_msgSend_effectiveBrowserViewController(void *a1, const char *a2, ...)
{
  return _[a1 effectiveBrowserViewController];
}

id objc_msgSend_effectiveFullBrowser(void *a1, const char *a2, ...)
{
  return _[a1 effectiveFullBrowser];
}

id objc_msgSend_effectiveFullBrowserForTab_(void *a1, const char *a2, ...)
{
  return [a1 effectiveFullBrowserForTab:];
}

id objc_msgSend_effectiveLocations(void *a1, const char *a2, ...)
{
  return _[a1 effectiveLocations];
}

id objc_msgSend_effectiveRootLocation(void *a1, const char *a2, ...)
{
  return _[a1 effectiveRootLocation];
}

id objc_msgSend_effectiveSearchController(void *a1, const char *a2, ...)
{
  return _[a1 effectiveSearchController];
}

id objc_msgSend_effectiveTabSwitcherTab(void *a1, const char *a2, ...)
{
  return _[a1 effectiveTabSwitcherTab];
}

id objc_msgSend_emptyConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 emptyConfiguration];
}

id objc_msgSend_emptyExtraProminentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 emptyExtraProminentConfiguration];
}

id objc_msgSend_emptyLocation(void *a1, const char *a2, ...)
{
  return _[a1 emptyLocation];
}

id objc_msgSend_emptyProminentConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 emptyProminentConfiguration];
}

id objc_msgSend_enclosedInUIPDocumentLanding(void *a1, const char *a2, ...)
{
  return _[a1 enclosedInUIPDocumentLanding];
}

id objc_msgSend_enclosingTabSwitcherCanBeFloating(void *a1, const char *a2, ...)
{
  return _[a1 enclosingTabSwitcherCanBeFloating];
}

id objc_msgSend_enclosingTabSwitcherStyle(void *a1, const char *a2, ...)
{
  return _[a1 enclosingTabSwitcherStyle];
}

id objc_msgSend_endForcedNavigationTransitionChrome_appearingViewController_(void *a1, const char *a2, ...)
{
  return [a1 endForcedNavigationTransitionChrome:appearingViewController:];
}

id objc_msgSend_endMatchingExtensions_(void *a1, const char *a2, ...)
{
  return [a1 endMatchingExtensions:];
}

id objc_msgSend_ensureInternalNavigationControllerIsInstalled(void *a1, const char *a2, ...)
{
  return _[a1 ensureInternalNavigationControllerIsInstalled];
}

id objc_msgSend_ensureNonZeroPreferredSize_traits_(void *a1, const char *a2, ...)
{
  return [a1 ensureNonZeroPreferredSize:traits:];
}

id objc_msgSend_enumerateAllFullBrowserViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 enumerateAllFullBrowserViewControllers:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateObjectsUsingBlock:];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_establishFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 establishFirstResponder];
}

id objc_msgSend_establishFirstResponderIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 establishFirstResponderIfNeeded];
}

id objc_msgSend_extensionBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 extensionBundleIdentifier];
}

id objc_msgSend_extensionBundleURL(void *a1, const char *a2, ...)
{
  return _[a1 extensionBundleURL];
}

id objc_msgSend_extensionPointRecord(void *a1, const char *a2, ...)
{
  return _[a1 extensionPointRecord];
}

id objc_msgSend_fetchItemForURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchItemForURL:completionHandler:];
}

id objc_msgSend_fetchItemWithBumpLastOpenDate_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchItemWithBumpLastOpenDate:configuration:completionHandler:];
}

id objc_msgSend_fetchLastUsedTab(void *a1, const char *a2, ...)
{
  return _[a1 fetchLastUsedTab];
}

id objc_msgSend_fetchParentsForItemID_recursively_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 fetchParentsForItemID:recursively:completionHandler:];
}

id objc_msgSend_fileProviderItem(void *a1, const char *a2, ...)
{
  return _[a1 fileProviderItem];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_filterNonObsoleteLegacyPickersFromPickers_modernProviders_(void *a1, const char *a2, ...)
{
  return [a1 filterNonObsoleteLegacyPickersFromPickers:modernProviders:];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [a1 filteredArrayUsingPredicate:];
}

id objc_msgSend_first(void *a1, const char *a2, ...)
{
  return _[a1 first];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_focusSystemForEnvironment_(void *a1, const char *a2, ...)
{
  return [a1 focusSystemForEnvironment:];
}

id objc_msgSend_forPickingDocuments(void *a1, const char *a2, ...)
{
  return _[a1 forPickingDocuments];
}

id objc_msgSend_forbiddenActionIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 forbiddenActionIdentifiers];
}

id objc_msgSend_forceBrowseTabDefaultsValue(void *a1, const char *a2, ...)
{
  return _[a1 forceBrowseTabDefaultsValue];
}

id objc_msgSend_forceSidebarHiddenByDefaultForUIPDocLandingIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 forceSidebarHiddenByDefaultForUIPDocLandingIfNecessary];
}

id objc_msgSend_forceUpdatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 forceUpdatePreferredContentSize];
}

id objc_msgSend_fpDomain(void *a1, const char *a2, ...)
{
  return _[a1 fpDomain];
}

id objc_msgSend_fpfs_fpItem(void *a1, const char *a2, ...)
{
  return [a1 fpfs_fpItem];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_fullBrowserHierarchyController(void *a1, const char *a2, ...)
{
  return _[a1 fullBrowserHierarchyController];
}

id objc_msgSend_fullDocumentManagerViewController(void *a1, const char *a2, ...)
{
  return _[a1 fullDocumentManagerViewController];
}

id objc_msgSend_fullMetadataValues(void *a1, const char *a2, ...)
{
  return _[a1 fullMetadataValues];
}

id objc_msgSend_fullRecentsViewController(void *a1, const char *a2, ...)
{
  return _[a1 fullRecentsViewController];
}

id objc_msgSend_fullSharedViewController(void *a1, const char *a2, ...)
{
  return _[a1 fullSharedViewController];
}

id objc_msgSend_fullyPopulated(void *a1, const char *a2, ...)
{
  return _[a1 fullyPopulated];
}

id objc_msgSend_genericDocumentIcon(void *a1, const char *a2, ...)
{
  return _[a1 genericDocumentIcon];
}

id objc_msgSend_gestureRecognizers(void *a1, const char *a2, ...)
{
  return _[a1 gestureRecognizers];
}

id objc_msgSend_globalMapTable(void *a1, const char *a2, ...)
{
  return _[a1 globalMapTable];
}

id objc_msgSend_globalTabbedBrowserControllerForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 globalTabbedBrowserControllerForIdentifier:];
}

id objc_msgSend_hasHistoryButtons(void *a1, const char *a2, ...)
{
  return _[a1 hasHistoryButtons];
}

id objc_msgSend_hasPendingLocationChange(void *a1, const char *a2, ...)
{
  return _[a1 hasPendingLocationChange];
}

id objc_msgSend_hasReceivedFirstFullUpdate(void *a1, const char *a2, ...)
{
  return _[a1 hasReceivedFirstFullUpdate];
}

id objc_msgSend_heightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 heightAnchor];
}

id objc_msgSend_hiddenSourcesIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 hiddenSourcesIdentifiers];
}

id objc_msgSend_hideBar(void *a1, const char *a2, ...)
{
  return _[a1 hideBar];
}

id objc_msgSend_hideMenu(void *a1, const char *a2, ...)
{
  return _[a1 hideMenu];
}

id objc_msgSend_hideSidebar(void *a1, const char *a2, ...)
{
  return _[a1 hideSidebar];
}

id objc_msgSend_hierarchyController(void *a1, const char *a2, ...)
{
  return _[a1 hierarchyController];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_hostAppCanSeeFileProviderDomain_(void *a1, const char *a2, ...)
{
  return [a1 hostAppCanSeeFileProviderDomain:];
}

id objc_msgSend_hostApplicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hostApplicationBundleIdentifier];
}

id objc_msgSend_hostIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 hostIdentifier];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageDescriptorNamed_(void *a1, const char *a2, ...)
{
  return [a1 imageDescriptorNamed:];
}

id objc_msgSend_imageForDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 imageForDescriptor:];
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return [a1 imageWithCGImage:];
}

id objc_msgSend_implClass(void *a1, const char *a2, ...)
{
  return _[a1 implClass];
}

id objc_msgSend_importDocumentAt_mode_toCurrentBrowserLocationWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 importDocumentAt:mode:toCurrentBrowserLocationWithCompletion:];
}

id objc_msgSend_importDocumentAt_nextTo_mode_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 importDocumentAt:nextTo:mode:completionHandler:];
}

id objc_msgSend_includeSidebarInCollapsedNavStack(void *a1, const char *a2, ...)
{
  return _[a1 includeSidebarInCollapsedNavStack];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_infoDictionary(void *a1, const char *a2, ...)
{
  return _[a1 infoDictionary];
}

id objc_msgSend_initForCovering_(void *a1, const char *a2, ...)
{
  return [a1 initForCovering:];
}

id objc_msgSend_initWithArrangedSubviews_(void *a1, const char *a2, ...)
{
  return [a1 initWithArrangedSubviews:];
}

id objc_msgSend_initWithArray_copyItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:copyItems:];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:];
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:allowPlaceholder:error:];
}

id objc_msgSend_initWithBundleIdentifier_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:error:];
}

id objc_msgSend_initWithCoder_(void *a1, const char *a2, ...)
{
  return [a1 initWithCoder:];
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:];
}

id objc_msgSend_initWithConfiguration_defaultSourceUIManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:defaultSourceUIManager:];
}

id objc_msgSend_initWithConfiguration_nodes_allowOpenButton_documentManager_actionManager_actionDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:nodes:allowOpenButton:documentManager:actionManager:actionDelegate:];
}

id objc_msgSend_initWithConfiguration_sourceObserver_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:sourceObserver:];
}

id objc_msgSend_initWithConfiguration_sourceObserver_hierarchyController_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:nil sourceObserver:nil hierarchyController:nil];
}

id objc_msgSend_initWithConfiguration_sourceObserver_minParentLocations_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:minParentLocations:];
}

id objc_msgSend_initWithConfiguration_sourceObserver_presentAlertsOn_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:nil sourceObserver:nil presentAlertsOn:nil];
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:code:userInfo:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithHierarchyController_(void *a1, const char *a2, ...)
{
  return [a1 initWithHierarchyController:];
}

id objc_msgSend_initWithItems_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:];
}

id objc_msgSend_initWithItems_tagsLists_isUndoable_shouldClearUndoStack_undoManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithItems:tagsLists:isUndoable:shouldClearUndoStack:undoManager];
}

id objc_msgSend_initWithPicker_providerDomain_(void *a1, const char *a2, ...)
{
  return [a1 initWithPicker:providerDomain:];
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:scale:];
}

id objc_msgSend_initWithSourceIdentifier_node_(void *a1, const char *a2, ...)
{
  return [a1 initWithSourceIdentifier:node:];
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuiteName:];
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return [a1 initWithTarget:action:];
}

id objc_msgSend_initWithTitle_attributes_optedIn_identifier_providerDomain_pickerExtension_(void *a1, const char *a2, ...)
{
  return [a1 initWithTitle:attributes:optedIn:identifier:providerDomain:pickerExtension:];
}

id objc_msgSend_initWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 initWithTraitCollection:];
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:];
}

id objc_msgSend_initWithURLs_(void *a1, const char *a2, ...)
{
  return [a1 initWithURLs:];
}

id objc_msgSend_initWithUserAction_hostIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserAction:hostIdentifier:];
}

id objc_msgSend_initWithUserAction_hostIdentifier_managedPermissions_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserAction:hostIdentifier:managedPermissions:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_installDebugMenuGesture(void *a1, const char *a2, ...)
{
  return _[a1 installDebugMenuGesture];
}

id objc_msgSend_instanceWrappingImpl_(void *a1, const char *a2, ...)
{
  return [a1 instanceWrappingImpl];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactionMode(void *a1, const char *a2, ...)
{
  return _[a1 interactionMode];
}

id objc_msgSend_interfaceStateForConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 interfaceStateForConfiguration:];
}

id objc_msgSend_internalNavigationController(void *a1, const char *a2, ...)
{
  return _[a1 internalNavigationController];
}

id objc_msgSend_invalidateAllAssertions(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAllAssertions];
}

id objc_msgSend_invalidateIntrinsicContentSize(void *a1, const char *a2, ...)
{
  return _[a1 invalidateIntrinsicContentSize];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isBrowserCurrentLocation_(void *a1, const char *a2, ...)
{
  return [a1 isBrowserCurrentLocation:];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCloudItem(void *a1, const char *a2, ...)
{
  return _[a1 isCloudItem];
}

id objc_msgSend_isCollapsed(void *a1, const char *a2, ...)
{
  return _[a1 isCollapsed];
}

id objc_msgSend_isDownloaded(void *a1, const char *a2, ...)
{
  return _[a1 isDownloaded];
}

id objc_msgSend_isDownloading(void *a1, const char *a2, ...)
{
  return _[a1 isDownloading];
}

id objc_msgSend_isEditing(void *a1, const char *a2, ...)
{
  return _[a1 isEditing];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToArray:];
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDictionary:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isExtensionOptedIn(void *a1, const char *a2, ...)
{
  return _[a1 isExtensionOptedIn];
}

id objc_msgSend_isFPV2(void *a1, const char *a2, ...)
{
  return _[a1 isFPV2];
}

id objc_msgSend_isFetchingLocations(void *a1, const char *a2, ...)
{
  return _[a1 isFetchingLocations];
}

id objc_msgSend_isFilesApp(void *a1, const char *a2, ...)
{
  return _[a1 isFilesApp];
}

id objc_msgSend_isFolder(void *a1, const char *a2, ...)
{
  return _[a1 isFolder];
}

id objc_msgSend_isHideOverlayTransitionFromState_toState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isHideOverlayTransitionFromState:toState:");
}

id objc_msgSend_isInUIPDocumentLanding(void *a1, const char *a2, ...)
{
  return _[a1 isInUIPDocumentLanding];
}

id objc_msgSend_isInUserTriggeredSelectionMode(void *a1, const char *a2, ...)
{
  return _[a1 isInUserTriggeredSelectionMode];
}

id objc_msgSend_isInfoInPopoverMode(void *a1, const char *a2, ...)
{
  return _[a1 isInfoInPopoverMode];
}

id objc_msgSend_isOnScreen(void *a1, const char *a2, ...)
{
  return _[a1 isOnScreen];
}

id objc_msgSend_isPickerUI(void *a1, const char *a2, ...)
{
  return _[a1 isPickerUI];
}

id objc_msgSend_isProviderNode_(void *a1, const char *a2, ...)
{
  return [a1 isProviderNode:];
}

id objc_msgSend_isResetBeingPerformed(void *a1, const char *a2, ...)
{
  return _[a1 isResetBeingPerformed];
}

id objc_msgSend_isRoot(void *a1, const char *a2, ...)
{
  return _[a1 isRoot];
}

id objc_msgSend_isShowOverlayTransitionFromState_toState_(void *a1, const char *a2, ...)
{
  return [a1 isShowOverlayTransitionFromState:toState:];
}

id objc_msgSend_isShowingCollapsedSidebarViewController(void *a1, const char *a2, ...)
{
  return _[a1 isShowingCollapsedSidebarViewController];
}

id objc_msgSend_isShowingMovePanel(void *a1, const char *a2, ...)
{
  return _[a1 isShowingMovePanel];
}

id objc_msgSend_isSidebarShown(void *a1, const char *a2, ...)
{
  return _[a1 isSidebarShown];
}

id objc_msgSend_isSidebarShownInOverlay(void *a1, const char *a2, ...)
{
  return _[a1 isSidebarShownInOverlay];
}

id objc_msgSend_isSystemTabBarAllowedByTraits(void *a1, const char *a2, ...)
{
  return _[a1 isSystemTabBarAllowedByTraits];
}

id objc_msgSend_isToolbarHidden(void *a1, const char *a2, ...)
{
  return _[a1 isToolbarHidden];
}

id objc_msgSend_isTrashed(void *a1, const char *a2, ...)
{
  return _[a1 isTrashed];
}

id objc_msgSend_isValidForConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 isValidForConfiguration:];
}

id objc_msgSend_isViewLoaded(void *a1, const char *a2, ...)
{
  return _[a1 isViewLoaded];
}

id objc_msgSend_itemCollectionViewPool(void *a1, const char *a2, ...)
{
  return _[a1 itemCollectionViewPool];
}

id objc_msgSend_itemForURL_error_(void *a1, const char *a2, ...)
{
  return [a1 itemForURL:error:];
}

id objc_msgSend_itemID(void *a1, const char *a2, ...)
{
  return _[a1 itemID];
}

id objc_msgSend_itemTapDrillsIntoNode_(void *a1, const char *a2, ...)
{
  return [a1 itemTapDrillsIntoNode];
}

id objc_msgSend_itemToFocusDuringAppearance(void *a1, const char *a2, ...)
{
  return _[a1 itemToFocusDuringAppearance];
}

id objc_msgSend_itemWithTab_(void *a1, const char *a2, ...)
{
  return [a1 itemWithTab:];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_iteratorWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 iteratorWithOptions:];
}

id objc_msgSend_lastLocation(void *a1, const char *a2, ...)
{
  return _[a1 lastLocation];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastOperation(void *a1, const char *a2, ...)
{
  return _[a1 lastOperation];
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _[a1 layer];
}

id objc_msgSend_layoutHeightForWidth_(void *a1, const char *a2, ...)
{
  return [a1 layoutHeightForWidth:];
}

id objc_msgSend_layoutIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 layoutIfNeeded];
}

id objc_msgSend_layoutMargins(void *a1, const char *a2, ...)
{
  return _[a1 layoutMargins];
}

id objc_msgSend_layoutMarginsGuide(void *a1, const char *a2, ...)
{
  return _[a1 layoutMarginsGuide];
}

id objc_msgSend_leadingWidth(void *a1, const char *a2, ...)
{
  return _[a1 leadingWidth];
}

id objc_msgSend_leftAnchor(void *a1, const char *a2, ...)
{
  return _[a1 leftAnchor];
}

id objc_msgSend_legacyPickers(void *a1, const char *a2, ...)
{
  return _[a1 legacyPickers];
}

id objc_msgSend_legacyPickersObserverContext(void *a1, const char *a2, ...)
{
  return _[a1 legacyPickersObserverContext];
}

id objc_msgSend_legacyPickersObserverError(void *a1, const char *a2, ...)
{
  return _[a1 legacyPickersObserverError];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lengthUnits(void *a1, const char *a2, ...)
{
  return _[a1 lengthUnits];
}

id objc_msgSend_linkColor(void *a1, const char *a2, ...)
{
  return _[a1 linkColor];
}

id objc_msgSend_loadViewControllers_initialIndex_(void *a1, const char *a2, ...)
{
  return [a1 loadViewControllers:initialIndex:];
}

id objc_msgSend_loadingConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 loadingConfiguration];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringFromNumber:numberStyle:];
}

id objc_msgSend_localizedStringWithValidatedFormat_validFormatSpecifiers_error_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithValidatedFormat:validFormatSpecifiers:error:];
}

id objc_msgSend_localizedUppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 localizedUppercaseString];
}

id objc_msgSend_locationForDeterminingCurrentEffectiveTab(void *a1, const char *a2, ...)
{
  return _[a1 locationForDeterminingCurrentEffectiveTab];
}

id objc_msgSend_locations(void *a1, const char *a2, ...)
{
  return _[a1 locations];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_makeContentView(void *a1, const char *a2, ...)
{
  return _[a1 makeContentView];
}

id objc_msgSend_matchingLegacyProviderIdentifierForPicker_(void *a1, const char *a2, ...)
{
  return [a1 matchingLegacyProviderIdentifierForPicker:];
}

id objc_msgSend_maxFractionalDigits(void *a1, const char *a2, ...)
{
  return _[a1 maxFractionalDigits];
}

id objc_msgSend_maxListPresentationHeight(void *a1, const char *a2, ...)
{
  return _[a1 maxListPresentationHeight];
}

id objc_msgSend_mostRecentlyVisitedBrowseSourceWithFallback_(void *a1, const char *a2, ...)
{
  return [a1 mostRecentlyVisitedBrowseSourceWithFallback:];
}

id objc_msgSend_mostRecentlyVisitedBrowsedState_FullBrowser(void *a1, const char *a2, ...)
{
  return [a1 mostRecentlyVisitedBrowsedState_FullBrowser];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_navigationBar(void *a1, const char *a2, ...)
{
  return _[a1 navigationBar];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_needsForcedUnderNavBarAppearanceOnAppear(void *a1, const char *a2, ...)
{
  return _[a1 needsForcedUnderNavBarAppearanceOnAppear];
}

id objc_msgSend_neverAllowShowingSystemTabs(void *a1, const char *a2, ...)
{
  return _[a1 neverAllowShowingSystemTabs];
}

id objc_msgSend_neverAllowsAnyTypeOfTabs(void *a1, const char *a2, ...)
{
  return _[a1 neverAllowsAnyTypeOfTabs];
}

id objc_msgSend_newViewControllersSharing_tabBarItems_(void *a1, const char *a2, ...)
{
  return [a1 newViewControllersSharing:tabBarItems:];
}

id objc_msgSend_next(void *a1, const char *a2, ...)
{
  return _[a1 next];
}

id objc_msgSend_node(void *a1, const char *a2, ...)
{
  return _[a1 node];
}

id objc_msgSend_nodeCanBeOpened(void *a1, const char *a2, ...)
{
  return _[a1 nodeCanBeOpened];
}

id objc_msgSend_nodeDownloadButton_downloadingNode_encounteredError_(void *a1, const char *a2, ...)
{
  return [a1 nodeDownloadButton:downloadingNode:encounteredError:];
}

id objc_msgSend_nodeDownloadButton_requestedOpeningNode_(void *a1, const char *a2, ...)
{
  return [a1 nodeDownloadButton:requestedOpeningNode:];
}

id objc_msgSend_notANumber(void *a1, const char *a2, ...)
{
  return _[a1 notANumber];
}

id objc_msgSend_notifySubscriber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "notifySubscriber:");
}

id objc_msgSend_numberFormatter(void *a1, const char *a2, ...)
{
  return _[a1 numberFormatter];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_numberWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedLong:];
}

id objc_msgSend_objc_doc_preheatForPresentingWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 objc_doc_preheatForPresentingWithCompletion:];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKey_ofClass_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:ofClass:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_observationCount(void *a1, const char *a2, ...)
{
  return _[a1 observationCount];
}

id objc_msgSend_observerErrorWithUnderlyingErrors_(void *a1, const char *a2, ...)
{
  return [a1 observerErrorWithUnderlyingErrors:];
}

id objc_msgSend_observerForFINode_withObserver_(void *a1, const char *a2, ...)
{
  return [a1 observerForFINode:withObserver:];
}

id objc_msgSend_openButton(void *a1, const char *a2, ...)
{
  return _[a1 openButton];
}

id objc_msgSend_optedIn(void *a1, const char *a2, ...)
{
  return _[a1 optedIn];
}

id objc_msgSend_parentViewController(void *a1, const char *a2, ...)
{
  return _[a1 parentViewController];
}

id objc_msgSend_pendingChildPropertyChanges(void *a1, const char *a2, ...)
{
  return _[a1 pendingChildPropertyChanges];
}

id objc_msgSend_performBrowserStateChange_(void *a1, const char *a2, ...)
{
  return [a1 performBrowserStateChange:];
}

id objc_msgSend_performWhileForcingChangeInPreparationQueue_(void *a1, const char *a2, ...)
{
  return [a1 performWhileForcingChangeInPreparationQueue:];
}

id objc_msgSend_performWhilePreventingLoading_(void *a1, const char *a2, ...)
{
  return [a1 performWhilePreventingLoading:];
}

id objc_msgSend_performWithoutAnimation_(void *a1, const char *a2, ...)
{
  return [a1 performWithoutAnimation];
}

id objc_msgSend_pickerExtension(void *a1, const char *a2, ...)
{
  return _[a1 pickerExtension];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_plainButtonConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 plainButtonConfiguration];
}

id objc_msgSend_plainGazeableConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 plainGazeableConfiguration];
}

id objc_msgSend_popToRootViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popToRootViewControllerAnimated:];
}

id objc_msgSend_popToViewController_animated_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popToViewController:animated:");
}

id objc_msgSend_popViewControllerAnimated_(void *a1, const char *a2, ...)
{
  return [a1 popViewControllerAnimated:];
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithBlock:];
}

id objc_msgSend_preferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSize];
}

id objc_msgSend_preferredDisplayMode(void *a1, const char *a2, ...)
{
  return _[a1 preferredDisplayMode];
}

id objc_msgSend_preferredNavigationBarStyle_objc(void *a1, const char *a2, ...)
{
  return [a1 preferredNavigationBarStyle_objc];
}

id objc_msgSend_prefersAnimatedTabVibilityChanges(void *a1, const char *a2, ...)
{
  return _[a1 prefersAnimatedTabVibilityChanges];
}

id objc_msgSend_prefersIntegerFractionalDisplay(void *a1, const char *a2, ...)
{
  return _[a1 prefersIntegerFractionalDisplay];
}

id objc_msgSend_prefersTabBarHidden(void *a1, const char *a2, ...)
{
  return _[a1 prefersTabBarHidden];
}

id objc_msgSend_preloadLaunchServiceDatabase(void *a1, const char *a2, ...)
{
  return _[a1 preloadLaunchServiceDatabase];
}

id objc_msgSend_prepareImageForDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 prepareImageForDescriptor:];
}

id objc_msgSend_prepareSnapshotForSplitStateChangingFromState_toState_alongside_(void *a1, const char *a2, ...)
{
  return [a1 prepareSnapshotForSplitStateChangingFromState:toState:alongside:];
}

id objc_msgSend_presentBrowseTabFromFullBrowser(void *a1, const char *a2, ...)
{
  return _[a1 presentBrowseTabFromFullBrowser];
}

id objc_msgSend_presentConnectToServer_(void *a1, const char *a2, ...)
{
  return [a1 presentConnectToServer:];
}

id objc_msgSend_presentRecentsTabFromFullBrowse(void *a1, const char *a2, ...)
{
  return _[a1 presentRecentsTabFromFullBrowse];
}

id objc_msgSend_presentSharedTabFromFullBrowser(void *a1, const char *a2, ...)
{
  return _[a1 presentSharedTabFromFullBrowser];
}

id objc_msgSend_presentTab_(void *a1, const char *a2, ...)
{
  return [a1 presentTab:];
}

id objc_msgSend_presentTab_rawTabSwitchOnly_(void *a1, const char *a2, ...)
{
  return [a1 presentTab:rawTabSwitchOnly:];
}

id objc_msgSend_presentationController(void *a1, const char *a2, ...)
{
  return _[a1 presentationController];
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _[a1 presentedViewController];
}

id objc_msgSend_primaryAction(void *a1, const char *a2, ...)
{
  return _[a1 primaryAction];
}

id objc_msgSend_primaryContentScrollView(void *a1, const char *a2, ...)
{
  return _[a1 primaryContentScrollView];
}

id objc_msgSend_progressView(void *a1, const char *a2, ...)
{
  return _[a1 progressView];
}

id objc_msgSend_progressViewHeightConstraint(void *a1, const char *a2, ...)
{
  return _[a1 progressViewHeightConstraint];
}

id objc_msgSend_promisedItemResourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "promisedItemResourceValuesForKeys:error:");
}

id objc_msgSend_providerDomain(void *a1, const char *a2, ...)
{
  return _[a1 providerDomain];
}

id objc_msgSend_providerDomainID(void *a1, const char *a2, ...)
{
  return _[a1 providerDomainID];
}

id objc_msgSend_providerDomainWithID_cachePolicy_error_(void *a1, const char *a2, ...)
{
  return [a1 providerDomainWithID:cachePolicy:error:];
}

id objc_msgSend_providerDomainsContainer(void *a1, const char *a2, ...)
{
  return _[a1 providerDomainsContainer];
}

id objc_msgSend_providerDomainsFINodeObserver(void *a1, const char *a2, ...)
{
  return _[a1 providerDomainsFINodeObserver];
}

id objc_msgSend_providerDomainsNode(void *a1, const char *a2, ...)
{
  return _[a1 providerDomainsNode];
}

id objc_msgSend_providerID(void *a1, const char *a2, ...)
{
  return _[a1 providerID];
}

id objc_msgSend_providerNodes(void *a1, const char *a2, ...)
{
  return _[a1 providerNodes];
}

id objc_msgSend_providers(void *a1, const char *a2, ...)
{
  return _[a1 providers];
}

id objc_msgSend_providersChanged(void *a1, const char *a2, ...)
{
  return _[a1 providersChanged];
}

id objc_msgSend_pushViewController_animated_(void *a1, const char *a2, ...)
{
  return [a1 pushViewController:animated:];
}

id objc_msgSend_readTag_path_title_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readTag:path:title:value:");
}

id objc_msgSend_recentDocumentsLocation(void *a1, const char *a2, ...)
{
  return _[a1 recentDocumentsLocation];
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return [a1 registerDefaults:];
}

id objc_msgSend_registerForTabSwitcherTraitChangesWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 registerForTabSwitcherTraitChangesWithHandler:];
}

id objc_msgSend_registerForTraitChanges_withAction_(void *a1, const char *a2, ...)
{
  return [a1 registerForTraitChanges:withAction:];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [a1 removeObject:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:name:object:");
}

id objc_msgSend_removeTrailingLocationCount_animated_(void *a1, const char *a2, ...)
{
  return [a1 removeTrailingLocationCount:animated:];
}

id objc_msgSend_replaceObjectAtIndex_withObject_(void *a1, const char *a2, ...)
{
  return [a1 replaceObjectAtIndex:withObject:];
}

id objc_msgSend_requestFocusUpdateToEnvironment_(void *a1, const char *a2, ...)
{
  return [a1 requestFocusUpdateToEnvironment:];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetFromRootWith_animated_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 resetFromRootWith:animated:completionHandler:];
}

id objc_msgSend_resetNavigationStepwise(void *a1, const char *a2, ...)
{
  return _[a1 resetNavigationStepwise];
}

id objc_msgSend_resetWith_animated_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 resetWith:animated:completionHandler:];
}

id objc_msgSend_resetWithDefaultLocationWithAnimated_(void *a1, const char *a2, ...)
{
  return [a1 resetWithDefaultLocationWithAnimated:];
}

id objc_msgSend_restoreLastBrowsedStateForTab_(void *a1, const char *a2, ...)
{
  return [a1 restoreLastBrowsedStateForTab:];
}

id objc_msgSend_resultCollectionViewController(void *a1, const char *a2, ...)
{
  return _[a1 resultCollectionViewController];
}

id objc_msgSend_retrieveAllSourcesCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 retrieveAllSourcesCompletionBlock:];
}

id objc_msgSend_revealDocumentAtURL_importIfNeeded_updateLastUsedDate_completion_(void *a1, const char *a2, ...)
{
  return [a1 revealDocumentAtURL:importIfNeeded:updateLastUsedDate:completion:];
}

id objc_msgSend_revealLocation_animated_completion_(void *a1, const char *a2, ...)
{
  return [a1 revealLocation:animated:completion:];
}

id objc_msgSend_revealWithItems_selectEvenIfVisible_completionBlock_(void *a1, const char *a2, ...)
{
  return [a1 revealWithItems:selectEvenIfVisible:completionBlock:];
}

id objc_msgSend_rightAnchor(void *a1, const char *a2, ...)
{
  return _[a1 rightAnchor];
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _[a1 rootViewController];
}

id objc_msgSend_saveSelectedTabState(void *a1, const char *a2, ...)
{
  return _[a1 saveSelectedTabState];
}

id objc_msgSend_scaledValueForValue_(void *a1, const char *a2, ...)
{
  return [a1 scaledValueForValue:];
}

id objc_msgSend_sceneIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sceneIdentifier];
}

id objc_msgSend_scheduleAction_(void *a1, const char *a2, ...)
{
  return [a1 scheduleAction:];
}

id objc_msgSend_screen(void *a1, const char *a2, ...)
{
  return _[a1 screen];
}

id objc_msgSend_scrollEdgeAppearance(void *a1, const char *a2, ...)
{
  return _[a1 scrollEdgeAppearance];
}

id objc_msgSend_scrollView(void *a1, const char *a2, ...)
{
  return _[a1 scrollView];
}

id objc_msgSend_searchConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 searchConfiguration];
}

id objc_msgSend_searchController(void *a1, const char *a2, ...)
{
  return _[a1 searchController];
}

id objc_msgSend_searchControllerText(void *a1, const char *a2, ...)
{
  return _[a1 searchControllerText];
}

id objc_msgSend_secondaryText(void *a1, const char *a2, ...)
{
  return _[a1 secondaryText];
}

id objc_msgSend_selectedIndex(void *a1, const char *a2, ...)
{
  return _[a1 selectedIndex];
}

id objc_msgSend_selectedOrInflightSelectedTab(void *a1, const char *a2, ...)
{
  return _[a1 selectedOrInflightSelectedTab];
}

id objc_msgSend_selectedTabDirectChildViewController(void *a1, const char *a2, ...)
{
  return _[a1 selectedTabDirectChildViewController];
}

id objc_msgSend_selectedTabReferenceViewController(void *a1, const char *a2, ...)
{
  return _[a1 selectedTabReferenceViewController];
}

id objc_msgSend_serviceViewControllerProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 serviceViewControllerProxyWithErrorHandler:];
}

id objc_msgSend_setAccessibilityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityIdentifier:];
}

id objc_msgSend_setAccessibilityLabel_(void *a1, const char *a2, ...)
{
  return [a1 setAccessibilityLabel:];
}

id objc_msgSend_setActionCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setActionCompletionBlock:];
}

id objc_msgSend_setActionReporting_(void *a1, const char *a2, ...)
{
  return [a1 setActionReporting:];
}

id objc_msgSend_setActive_(void *a1, const char *a2, ...)
{
  return [a1 setActive:];
}

id objc_msgSend_setActiveStrokeColor_(void *a1, const char *a2, ...)
{
  return [a1 setActiveStrokeColor:];
}

id objc_msgSend_setActualViewController_(void *a1, const char *a2, ...)
{
  return [a1 setActualViewController:];
}

id objc_msgSend_setAdditionalLeadingNavigationBarButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalLeadingNavigationBarButtonItems:];
}

id objc_msgSend_setAdditionalTrailingNavigationBarButtonItems_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalTrailingNavigationBarButtonItems:];
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return [a1 setAlignment:];
}

id objc_msgSend_setAllowsDocumentCreation_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsDocumentCreation:];
}

id objc_msgSend_setAllowsPickingMultipleItems_(void *a1, const char *a2, ...)
{
  return [a1 setAllowsPickingMultipleItems:];
}

id objc_msgSend_setAssociatedActionManagers_(void *a1, const char *a2, ...)
{
  return [a1 setAssociatedActionManagers:];
}

id objc_msgSend_setAutohideWhenPossibleDropTarget_(void *a1, const char *a2, ...)
{
  return [a1 setAutohideWhenPossibleDropTarget];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setAxis_(void *a1, const char *a2, ...)
{
  return [a1 setAxis:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setBackgroundEffect_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundEffect:];
}

id objc_msgSend_setBlock_(void *a1, const char *a2, ...)
{
  return [a1 setBlock:];
}

id objc_msgSend_setBorderColor_(void *a1, const char *a2, ...)
{
  return [a1 setBorderColor:];
}

id objc_msgSend_setButtonSize_(void *a1, const char *a2, ...)
{
  return [a1 setButtonSize:];
}

id objc_msgSend_setCanShowStopButton_(void *a1, const char *a2, ...)
{
  return [a1 setCanShowStopButton:];
}

id objc_msgSend_setColor_(void *a1, const char *a2, ...)
{
  return [a1 setColor:];
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionBlock:];
}

id objc_msgSend_setConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setConfiguration:];
}

id objc_msgSend_setConstant_(void *a1, const char *a2, ...)
{
  return [a1 setConstant:];
}

id objc_msgSend_setContentCompressionResistancePriority_forAxis_(void *a1, const char *a2, ...)
{
  return [a1 setContentCompressionResistancePriority:forAxis:];
}

id objc_msgSend_setCornerStyle_(void *a1, const char *a2, ...)
{
  return [a1 setCornerStyle:];
}

id objc_msgSend_setCurrentHostAppIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentHostAppIdentifier:];
}

id objc_msgSend_setCurrentLocationTitle_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentLocationTitle:];
}

id objc_msgSend_setCustomActions_(void *a1, const char *a2, ...)
{
  return [a1 setCustomActions:];
}

id objc_msgSend_setCustomState_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setCustomState:forKey:];
}

id objc_msgSend_setDecimalFormatString_(void *a1, const char *a2, ...)
{
  return [a1 setDecimalFormatString:];
}

id objc_msgSend_setDefaultLocation_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultLocation:];
}

id objc_msgSend_setDefaultSaveLocationObserverContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultSaveLocationObserverContext:];
}

id objc_msgSend_setDefaultSourceUIManager_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultSourceUIManager:];
}

id objc_msgSend_setDefaultTab_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultTab:];
}

id objc_msgSend_setDeferredBrowserStateChanges_(void *a1, const char *a2, ...)
{
  return [a1 setDeferredBrowserStateChanges:];
}

id objc_msgSend_setDefinesPresentationContext_(void *a1, const char *a2, ...)
{
  return [a1 setDefinesPresentationContext:];
}

id objc_msgSend_setDelayResizingUntilAppeared_(void *a1, const char *a2, ...)
{
  return [a1 setDelayResizingUntilAppeared:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDisplayModeButtonVisibility_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayModeButtonVisibility:];
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayName:];
}

id objc_msgSend_setDistribution_(void *a1, const char *a2, ...)
{
  return [a1 setDistribution:];
}

id objc_msgSend_setDoc_splitViewStateTransitionEnd_(void *a1, const char *a2, ...)
{
  return [a1 setDoc_splitViewStateTransitionEnd:];
}

id objc_msgSend_setDoc_splitViewStateTransitionStart_(void *a1, const char *a2, ...)
{
  return [a1 setDoc_splitViewStateTransitionStart:];
}

id objc_msgSend_setDocumentBrowser_(void *a1, const char *a2, ...)
{
  return [a1 setDocumentBrowser:];
}

id objc_msgSend_setDocumentContentTypes_(void *a1, const char *a2, ...)
{
  return [a1 setDocumentContentTypes:];
}

id objc_msgSend_setDocumentLandingMode_(void *a1, const char *a2, ...)
{
  return [a1 setDocumentLandingMode:];
}

id objc_msgSend_setDocumentManager_(void *a1, const char *a2, ...)
{
  return [a1 setDocumentManager:];
}

id objc_msgSend_setDomainCache_(void *a1, const char *a2, ...)
{
  return [a1 setDomainCache];
}

id objc_msgSend_setDownloadButton_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadButton:];
}

id objc_msgSend_setDownloadCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setDownloadCompletionBlock:];
}

id objc_msgSend_setDrawBorder_(void *a1, const char *a2, ...)
{
  return [a1 setDrawBorder:];
}

id objc_msgSend_setEditing_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:];
}

id objc_msgSend_setEditing_animated_(void *a1, const char *a2, ...)
{
  return [a1 setEditing:animated:];
}

id objc_msgSend_setEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setEnabled:];
}

id objc_msgSend_setEnvironmentSupportsColumnView_(void *a1, const char *a2, ...)
{
  return [a1 setEnvironmentSupportsColumnView:];
}

id objc_msgSend_setForbiddenActionIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setForbiddenActionIdentifiers:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setFullDocumentManagerDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setFullDocumentManagerDelegate:];
}

id objc_msgSend_setFullRecentsViewController_(void *a1, const char *a2, ...)
{
  return [a1 setFullRecentsViewController:];
}

id objc_msgSend_setFullSharedViewController_(void *a1, const char *a2, ...)
{
  return [a1 setFullSharedViewController];
}

id objc_msgSend_setGlobalTabbedBrowserController_forIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setGlobalTabbedBrowserController:forIdentifier:];
}

id objc_msgSend_setHidden_(void *a1, const char *a2, ...)
{
  return [a1 setHidden:];
}

id objc_msgSend_setHiddenSourcesIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setHiddenSourcesIdentifiers:];
}

id objc_msgSend_setHidesSearchBarWhenScrolling_(void *a1, const char *a2, ...)
{
  return [a1 setHidesSearchBarWhenScrolling:];
}

id objc_msgSend_setHierarchyController_(void *a1, const char *a2, ...)
{
  return [a1 setHierarchyController:];
}

id objc_msgSend_setHitTestsAsOpaque_(void *a1, const char *a2, ...)
{
  return [a1 setHitTestsAsOpaque:];
}

id objc_msgSend_setHostIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setHostIdentifier:];
}

id objc_msgSend_setHoverStyle_(void *a1, const char *a2, ...)
{
  return [a1 setHoverStyle:];
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdentifier];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setInTagListMode_(void *a1, const char *a2, ...)
{
  return [a1 setInTagListMode:];
}

id objc_msgSend_setIsExtensionOptedIn_(void *a1, const char *a2, ...)
{
  return [a1 setIsExtensionOptedIn:];
}

id objc_msgSend_setIsInUIPDocumentLanding_(void *a1, const char *a2, ...)
{
  return [a1 setIsInUIPDocumentLanding:];
}

id objc_msgSend_setIsInfoInPopoverMode_(void *a1, const char *a2, ...)
{
  return [a1 setIsInfoInPopoverMode:];
}

id objc_msgSend_setItemProvider_(void *a1, const char *a2, ...)
{
  return [a1 setItemProvider:];
}

id objc_msgSend_setItemToFocusDuringAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setItemToFocusDuringAppearance:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setLargeTitleTextAttributes_(void *a1, const char *a2, ...)
{
  return [a1 setLargeTitleTextAttributes:];
}

id objc_msgSend_setLastOpenedItem_(void *a1, const char *a2, ...)
{
  return [a1 setLastOpenedItem:];
}

id objc_msgSend_setLastSelectedItem_(void *a1, const char *a2, ...)
{
  return [a1 setLastSelectedItem:];
}

id objc_msgSend_setLayoutMargins_(void *a1, const char *a2, ...)
{
  return [a1 setLayoutMargins:];
}

id objc_msgSend_setLegacyPickers_(void *a1, const char *a2, ...)
{
  return [a1 setLegacyPickers];
}

id objc_msgSend_setLegacyPickersObserverContext_(void *a1, const char *a2, ...)
{
  return [a1 setLegacyPickersObserverContext:];
}

id objc_msgSend_setLegacyPickersObserverError_(void *a1, const char *a2, ...)
{
  return [a1 setLegacyPickersObserverError:];
}

id objc_msgSend_setLengthUnits_(void *a1, const char *a2, ...)
{
  return [a1 setLengthUnits:];
}

id objc_msgSend_setManagedPermission_(void *a1, const char *a2, ...)
{
  return [a1 setManagedPermission:];
}

id objc_msgSend_setMaxFractionalDigits_(void *a1, const char *a2, ...)
{
  return [a1 setMaxFractionalDigits:];
}

id objc_msgSend_setMaximumFractionDigits_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumFractionDigits:];
}

id objc_msgSend_setNamedLocationResolver_(void *a1, const char *a2, ...)
{
  return [a1 setNamedLocationResolver:];
}

id objc_msgSend_setNavigationBarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:];
}

id objc_msgSend_setNavigationBarHidden_animated_(void *a1, const char *a2, ...)
{
  return [a1 setNavigationBarHidden:animated:];
}

id objc_msgSend_setNeedsFirstResponder_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsFirstResponder:];
}

id objc_msgSend_setNeverAllowShowingSystemTabs_(void *a1, const char *a2, ...)
{
  return [a1 setNeverAllowShowingSystemTabs:];
}

id objc_msgSend_setNeverCreateBookmarkForOpenInPlace_(void *a1, const char *a2, ...)
{
  return [a1 setNeverCreateBookmarkForOpenInPlace];
}

id objc_msgSend_setNumberOfTapsRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTapsRequired:];
}

id objc_msgSend_setNumberOfTouchesRequired_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfTouchesRequired:];
}

id objc_msgSend_setNumberStyle_(void *a1, const char *a2, ...)
{
  return [a1 setNumberStyle:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObservationCount_(void *a1, const char *a2, ...)
{
  return [a1 setObservationCount:];
}

id objc_msgSend_setObservedProgress_(void *a1, const char *a2, ...)
{
  return [a1 setObservedProgress:];
}

id objc_msgSend_setOpenButton_(void *a1, const char *a2, ...)
{
  return [a1 setOpenButton:];
}

id objc_msgSend_setPendingChildPropertyChanges_(void *a1, const char *a2, ...)
{
  return [a1 setPendingChildPropertyChanges:];
}

id objc_msgSend_setPickerContext_(void *a1, const char *a2, ...)
{
  return [a1 setPickerContext:];
}

id objc_msgSend_setPickerExtension_(void *a1, const char *a2, ...)
{
  return [a1 setPickerExtension:];
}

id objc_msgSend_setPreferLastUsedDate_(void *a1, const char *a2, ...)
{
  return [a1 setPreferLastUsedDate:];
}

id objc_msgSend_setPreferredContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredContentSize:];
}

id objc_msgSend_setPreferredDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredDisplayMode:];
}

id objc_msgSend_setPreferredSplitBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSplitBehavior:];
}

id objc_msgSend_setPreferredSymbolConfigurationForImage_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredSymbolConfigurationForImage:];
}

id objc_msgSend_setPrefersAnimatedTabVibilityChanges_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersAnimatedTabVibilityChanges];
}

id objc_msgSend_setPrefersIntegerFractionalDisplay_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersIntegerFractionalDisplay:];
}

id objc_msgSend_setPrefersLargeTitles_(void *a1, const char *a2, ...)
{
  return [a1 setPrefersLargeTitles:];
}

id objc_msgSend_setPresentationDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationDelegate:];
}

id objc_msgSend_setPresentsWithGesture_(void *a1, const char *a2, ...)
{
  return [a1 setPresentsWithGesture:];
}

id objc_msgSend_setPreventAppearanceForwarding_(void *a1, const char *a2, ...)
{
  return [a1 setPreventAppearanceForwarding:];
}

id objc_msgSend_setPrimaryAction_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryAction:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setProgressView_(void *a1, const char *a2, ...)
{
  return [a1 setProgressView:];
}

id objc_msgSend_setProgressViewHeightConstraint_(void *a1, const char *a2, ...)
{
  return [a1 setProgressViewHeightConstraint:];
}

id objc_msgSend_setProviderDomain_(void *a1, const char *a2, ...)
{
  return [a1 setProviderDomain:];
}

id objc_msgSend_setProviderName_(void *a1, const char *a2, ...)
{
  return [a1 setProviderName:];
}

id objc_msgSend_setProviderNodes_(void *a1, const char *a2, ...)
{
  return [a1 setProviderNodes:];
}

id objc_msgSend_setProviderNodesFullyPopulated_(void *a1, const char *a2, ...)
{
  return [a1 setProviderNodesFullyPopulated:];
}

id objc_msgSend_setRestoreLastVisitedLocation_(void *a1, const char *a2, ...)
{
  return [a1 setRestoreLastVisitedLocation:];
}

id objc_msgSend_setRole_(void *a1, const char *a2, ...)
{
  return [a1 setRole:];
}

id objc_msgSend_setRootViewController_(void *a1, const char *a2, ...)
{
  return [a1 setRootViewController:];
}

id objc_msgSend_setSafeAreaUpdatesDisabledDuringTransitions_(void *a1, const char *a2, ...)
{
  return [a1 setSafeAreaUpdatesDisabledDuringTransitions:];
}

id objc_msgSend_setSaveLastVisitedLocation_(void *a1, const char *a2, ...)
{
  return [a1 setSaveLastVisitedLocation:];
}

id objc_msgSend_setSceneIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSceneIdentifier:];
}

id objc_msgSend_setScrollEdgeAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setScrollEdgeAppearance:];
}

id objc_msgSend_setSearchController_(void *a1, const char *a2, ...)
{
  return [a1 setSearchController:];
}

id objc_msgSend_setSearchControllerText_(void *a1, const char *a2, ...)
{
  return [a1 setSearchControllerText:];
}

id objc_msgSend_setSecondaryText_(void *a1, const char *a2, ...)
{
  return [a1 setSecondaryText:];
}

id objc_msgSend_setSelectedIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedIndex:];
}

id objc_msgSend_setShortDebugID_(void *a1, const char *a2, ...)
{
  return [a1 setShortDebugID];
}

id objc_msgSend_setShowsShareButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowsShareButton:];
}

id objc_msgSend_setShowsVerticalScrollIndicator_(void *a1, const char *a2, ...)
{
  return [a1 setShowsVerticalScrollIndicator:];
}

id objc_msgSend_setSidebarDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSidebarDelegate:];
}

id objc_msgSend_setSoleValidIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSoleValidIndex:];
}

id objc_msgSend_setSources_(void *a1, const char *a2, ...)
{
  return [a1 setSources:];
}

id objc_msgSend_setSourcesObserverError_(void *a1, const char *a2, ...)
{
  return [a1 setSourcesObserverError:];
}

id objc_msgSend_setSpacing_(void *a1, const char *a2, ...)
{
  return [a1 setSpacing:];
}

id objc_msgSend_setSplitBrowserViewController_(void *a1, const char *a2, ...)
{
  return [a1 setSplitBrowserViewController:];
}

id objc_msgSend_setSplitViewDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setSplitViewDelegate:];
}

id objc_msgSend_setStandardAppearance_(void *a1, const char *a2, ...)
{
  return [a1 setStandardAppearance:];
}

id objc_msgSend_setSupportedInteractionModes_(void *a1, const char *a2, ...)
{
  return [a1 setSupportedInteractionModes:];
}

id objc_msgSend_setSupportsColumnView_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsColumnView:];
}

id objc_msgSend_setTab_(void *a1, const char *a2, ...)
{
  return [a1 setTab:];
}

id objc_msgSend_setTabBarController_(void *a1, const char *a2, ...)
{
  return [a1 setTabBarController:];
}

id objc_msgSend_setTabBarItem_(void *a1, const char *a2, ...)
{
  return [a1 setTabBarItem:];
}

id objc_msgSend_setTagsWorkflowDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setTagsWorkflowDelegate:];
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return [a1 setText:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return [a1 setToken:];
}

id objc_msgSend_setToolbarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setToolbarHidden:];
}

id objc_msgSend_setTranslatesAutoresizingMaskIntoConstraints_(void *a1, const char *a2, ...)
{
  return [a1 setTranslatesAutoresizingMaskIntoConstraints:];
}

id objc_msgSend_setUiBrowserDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setUiBrowserDelegate:];
}

id objc_msgSend_setUnderlyingButton_(void *a1, const char *a2, ...)
{
  return [a1 setUnderlyingButton:];
}

id objc_msgSend_setUpdateLocationsAfterPopTransition_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateLocationsAfterPopTransition:];
}

id objc_msgSend_setUpdateObserver_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateObserver:];
}

id objc_msgSend_setUseCompactColorPicker_(void *a1, const char *a2, ...)
{
  return [a1 setUseCompactColorPicker:];
}

id objc_msgSend_setUseExpandedSourceList_(void *a1, const char *a2, ...)
{
  return [a1 setUseExpandedSourceList:];
}

id objc_msgSend_setUserAction_(void *a1, const char *a2, ...)
{
  return [a1 setUserAction:];
}

id objc_msgSend_setUserInteractionEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUserInteractionEnabled:];
}

id objc_msgSend_setUserPrefersTiledSidebarHidden_(void *a1, const char *a2, ...)
{
  return [a1 setUserPrefersTiledSidebarHidden:];
}

id objc_msgSend_setUsingSharedSplitBrowserStrategy_(void *a1, const char *a2, ...)
{
  return [a1 setUsingSharedSplitBrowserStrategy:];
}

id objc_msgSend_setUsingVariableBlurBottomBar_(void *a1, const char *a2, ...)
{
  return [a1 setUsingVariableBlurBottomBar:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_setViewController_forColumn_(void *a1, const char *a2, ...)
{
  return [a1 setViewController:forColumn:];
}

id objc_msgSend_setViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:];
}

id objc_msgSend_setViewControllers_animated_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllers:animated:];
}

id objc_msgSend_setViewDidLoadResetLocationDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setViewDidLoadResetLocationDisabled:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedManagerFor_(void *a1, const char *a2, ...)
{
  return [a1 sharedManagerFor:];
}

id objc_msgSend_sharedStore(void *a1, const char *a2, ...)
{
  return _[a1 sharedStore];
}

id objc_msgSend_shouldDeferBrowserStateChanges(void *a1, const char *a2, ...)
{
  return _[a1 shouldDeferBrowserStateChanges];
}

id objc_msgSend_showBarIfAllowed(void *a1, const char *a2, ...)
{
  return _[a1 showBarIfAllowed];
}

id objc_msgSend_showLocation_fromRootAnimated_withCompletionBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showLocation:fromRootAnimated:withCompletionBlock:");
}

id objc_msgSend_showSidebar(void *a1, const char *a2, ...)
{
  return _[a1 showSidebar];
}

id objc_msgSend_sidebarHasActiveFocus(void *a1, const char *a2, ...)
{
  return _[a1 sidebarHasActiveFocus];
}

id objc_msgSend_sidebarViewController(void *a1, const char *a2, ...)
{
  return _[a1 sidebarViewController];
}

id objc_msgSend_sourceBuilder(void *a1, const char *a2, ...)
{
  return _[a1 sourceBuilder];
}

id objc_msgSend_sourceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sourceIdentifier];
}

id objc_msgSend_sourceObserver(void *a1, const char *a2, ...)
{
  return _[a1 sourceObserver];
}

id objc_msgSend_sourceObserverQueue(void *a1, const char *a2, ...)
{
  return _[a1 sourceObserverQueue];
}

id objc_msgSend_sourceObserverQueue_didReceiveSourceUpdate(void *a1, const char *a2, ...)
{
  return [a1 sourceObserverQueue_didReceiveSourceUpdate];
}

id objc_msgSend_sources(void *a1, const char *a2, ...)
{
  return _[a1 sources];
}

id objc_msgSend_sourcesActionManager(void *a1, const char *a2, ...)
{
  return _[a1 sourcesActionManager];
}

id objc_msgSend_sourcesObserverError(void *a1, const char *a2, ...)
{
  return _[a1 sourcesObserverError];
}

id objc_msgSend_sourcesSubscribers(void *a1, const char *a2, ...)
{
  return _[a1 sourcesSubscribers];
}

id objc_msgSend_splitBrowserViewController(void *a1, const char *a2, ...)
{
  return _[a1 splitBrowserViewController];
}

id objc_msgSend_splitViewController_didChangeFromState_toState_isUserDisplayModeChange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "splitViewController:didChangeFromState:toState:isUserDisplayModeChange:");
}

id objc_msgSend_splitViewController_wantsToShowTabBar_(void *a1, const char *a2, ...)
{
  return [a1 splitViewController:wantsToShowTabBar:];
}

id objc_msgSend_splitViewController_willChangeFromState_toState_(void *a1, const char *a2, ...)
{
  return [a1 splitViewController:willChangeFromState:toState:];
}

id objc_msgSend_splitViewDelegate(void *a1, const char *a2, ...)
{
  return _[a1 splitViewDelegate];
}

id objc_msgSend_splitViewWillChangeFrom_to_alongsideCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 splitViewWillChangeFrom:to:alongsideCoordinator:];
}

id objc_msgSend_splitViewWillDidExpand(void *a1, const char *a2, ...)
{
  return _[a1 splitViewWillDidExpand];
}

id objc_msgSend_standardAppearance(void *a1, const char *a2, ...)
{
  return _[a1 standardAppearance];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_startAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 startAccessingSecurityScopedResource];
}

id objc_msgSend_startObserving_(void *a1, const char *a2, ...)
{
  return [a1 startObserving:];
}

id objc_msgSend_startObservingDefaultSaveLocation(void *a1, const char *a2, ...)
{
  return _[a1 startObservingDefaultSaveLocation];
}

id objc_msgSend_startObservingLegacyPickers(void *a1, const char *a2, ...)
{
  return _[a1 startObservingLegacyPickers];
}

id objc_msgSend_startObservingSources(void *a1, const char *a2, ...)
{
  return _[a1 startObservingSources];
}

id objc_msgSend_stopAccessingSecurityScopedResource(void *a1, const char *a2, ...)
{
  return _[a1 stopAccessingSecurityScopedResource];
}

id objc_msgSend_stopObserving_(void *a1, const char *a2, ...)
{
  return [a1 stopObserving:];
}

id objc_msgSend_stopObservingDefaultSaveLocation(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingDefaultSaveLocation];
}

id objc_msgSend_stopObservingLegacyPickers(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingLegacyPickers];
}

id objc_msgSend_stopObservingSources(void *a1, const char *a2, ...)
{
  return _[a1 stopObservingSources];
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return [a1 stringFromNumber:];
}

id objc_msgSend_stringFromValue_unit_(void *a1, const char *a2, ...)
{
  return [a1 stringFromValue:unit:];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCString:];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_strongToWeakObjectsMapTable(void *a1, const char *a2, ...)
{
  return _[a1 strongToWeakObjectsMapTable];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringToIndex:];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_supportedInteractionModes(void *a1, const char *a2, ...)
{
  return _[a1 supportedInteractionModes];
}

id objc_msgSend_supportsDisplayInTraitCollection_availableArea_(void *a1, const char *a2, ...)
{
  return [a1 supportsDisplayInTraitCollection:availableArea:];
}

id objc_msgSend_supportsEnumeration(void *a1, const char *a2, ...)
{
  return _[a1 supportsEnumeration];
}

id objc_msgSend_supportsInteractionMode_(void *a1, const char *a2, ...)
{
  return [a1 supportsInteractionMode:];
}

id objc_msgSend_swift_commonInit(void *a1, const char *a2, ...)
{
  return [a1 swift_commonInit];
}

id objc_msgSend_swift_commonInitWith_(void *a1, const char *a2, ...)
{
  return [a1 swift_commonInitWith:];
}

id objc_msgSend_swift_navigationController_didShow_animated_(void *a1, const char *a2, ...)
{
  return [a1 swift_navigationController:didShow:animated:];
}

id objc_msgSend_swift_viewDidLoad(void *a1, const char *a2, ...)
{
  return [a1 swift_viewDidLoad];
}

id objc_msgSend_switchToBrowse(void *a1, const char *a2, ...)
{
  return _[a1 switchToBrowse];
}

id objc_msgSend_switchToRecents(void *a1, const char *a2, ...)
{
  return _[a1 switchToRecents];
}

id objc_msgSend_switchToTab_(void *a1, const char *a2, ...)
{
  return [a1 switchToTab:];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemDarkBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemDarkBlueColor];
}

id objc_msgSend_systemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 systemImageNamed:];
}

id objc_msgSend_tab(void *a1, const char *a2, ...)
{
  return _[a1 tab];
}

id objc_msgSend_tabBar(void *a1, const char *a2, ...)
{
  return _[a1 tabBar];
}

id objc_msgSend_tabBarController(void *a1, const char *a2, ...)
{
  return _[a1 tabBarController];
}

id objc_msgSend_tabBarCurrentRawTab(void *a1, const char *a2, ...)
{
  return _[a1 tabBarCurrentRawTab];
}

id objc_msgSend_tabBarItem(void *a1, const char *a2, ...)
{
  return _[a1 tabBarItem];
}

id objc_msgSend_tabControllerIndexForTab_(void *a1, const char *a2, ...)
{
  return [a1 tabControllerIndexForTab:];
}

id objc_msgSend_tabControllerIndexForTab_inViewControllers_(void *a1, const char *a2, ...)
{
  return [a1 tabControllerIndexForTab:inViewControllers:];
}

id objc_msgSend_tabIsSpecified(void *a1, const char *a2, ...)
{
  return _[a1 tabIsSpecified];
}

id objc_msgSend_tabbedBrowserView_didMoveToWindow_(void *a1, const char *a2, ...)
{
  return [a1 tabbedBrowserView:didMoveToWindow:];
}

id objc_msgSend_tabbedBrowserView_willMoveToWindow_(void *a1, const char *a2, ...)
{
  return [a1 tabbedBrowserView:willMoveToWindow:];
}

id objc_msgSend_tabbedBrowserViewController_didFinishInitialLoad_ofTab_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tabbedBrowserViewController:didFinishInitialLoad:ofTab:");
}

id objc_msgSend_tabbedBrowserViewControllerDelegate(void *a1, const char *a2, ...)
{
  return _[a1 tabbedBrowserViewControllerDelegate];
}

id objc_msgSend_tags(void *a1, const char *a2, ...)
{
  return _[a1 tags];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textProperties(void *a1, const char *a2, ...)
{
  return _[a1 textProperties];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_toggleSidebarShown(void *a1, const char *a2, ...)
{
  return _[a1 toggleSidebarShown];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_topAnchor(void *a1, const char *a2, ...)
{
  return _[a1 topAnchor];
}

id objc_msgSend_topViewController(void *a1, const char *a2, ...)
{
  return _[a1 topViewController];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_transitionCoordinator(void *a1, const char *a2, ...)
{
  return _[a1 transitionCoordinator];
}

id objc_msgSend_trashedItemsLocation(void *a1, const char *a2, ...)
{
  return _[a1 trashedItemsLocation];
}

id objc_msgSend_underlyingButton(void *a1, const char *a2, ...)
{
  return _[a1 underlyingButton];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_updateCachedDisplayNamesFromSources(void *a1, const char *a2, ...)
{
  return _[a1 updateCachedDisplayNamesFromSources];
}

id objc_msgSend_updateContentEditingOverlaysForState_(void *a1, const char *a2, ...)
{
  return [a1 updateContentEditingOverlaysForState:];
}

id objc_msgSend_updateCustomActions(void *a1, const char *a2, ...)
{
  return _[a1 updateCustomActions];
}

id objc_msgSend_updateDeferredBrowserStateChangesWith_(void *a1, const char *a2, ...)
{
  return [a1 updateDeferredBrowserStateChangesWith:];
}

id objc_msgSend_updateDisplayModeButtonVisibility(void *a1, const char *a2, ...)
{
  return _[a1 updateDisplayModeButtonVisibility];
}

id objc_msgSend_updateDownloadState(void *a1, const char *a2, ...)
{
  return _[a1 updateDownloadState];
}

id objc_msgSend_updateFileProvidersIcon_(void *a1, const char *a2, ...)
{
  return [a1 updateFileProvidersIcon:];
}

id objc_msgSend_updateFocusIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateFocusIfNeeded];
}

id objc_msgSend_updateForChangedHorizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 updateForChangedHorizontalSizeClass];
}

id objc_msgSend_updateForState(void *a1, const char *a2, ...)
{
  return _[a1 updateForState];
}

id objc_msgSend_updateInterfaceState_forConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 updateInterfaceState:forConfiguration:];
}

id objc_msgSend_updateLocationTitleFromCurrentState(void *a1, const char *a2, ...)
{
  return _[a1 updateLocationTitleFromCurrentState];
}

id objc_msgSend_updateLocationsAfterPopTransition(void *a1, const char *a2, ...)
{
  return _[a1 updateLocationsAfterPopTransition];
}

id objc_msgSend_updateMostRecentlyVisitedBrowseSourceToTab_(void *a1, const char *a2, ...)
{
  return [a1 updateMostRecentlyVisitedBrowseSourceToTab:];
}

id objc_msgSend_updateNavigationBarButtonItemsForViewController_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateNavigationBarButtonItemsForViewController:");
}

id objc_msgSend_updateNavigationBarPrefersLargeTitles(void *a1, const char *a2, ...)
{
  return _[a1 updateNavigationBarPrefersLargeTitles];
}

id objc_msgSend_updatePreferredContentSize(void *a1, const char *a2, ...)
{
  return _[a1 updatePreferredContentSize];
}

id objc_msgSend_updatePreferredDisplayModeFromPersistentStore(void *a1, const char *a2, ...)
{
  return _[a1 updatePreferredDisplayModeFromPersistentStore];
}

id objc_msgSend_updatePreferredSplitBehavior(void *a1, const char *a2, ...)
{
  return _[a1 updatePreferredSplitBehavior];
}

id objc_msgSend_updateProgressViewSizeConstraints(void *a1, const char *a2, ...)
{
  return _[a1 updateProgressViewSizeConstraints];
}

id objc_msgSend_updateProviderNodes(void *a1, const char *a2, ...)
{
  return _[a1 updateProviderNodes];
}

id objc_msgSend_updateRelatedViewControllersWithCurrentHierarchy(void *a1, const char *a2, ...)
{
  return _[a1 updateRelatedViewControllersWithCurrentHierarchy];
}

id objc_msgSend_updateSelectionToMatchBrowsedLocation_scrollToVisible_(void *a1, const char *a2, ...)
{
  return [a1 updateSelectionToMatchBrowsedLocation:scrollToVisible:];
}

id objc_msgSend_updateStateAndSceneIdentifiersWithWindow_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateStateAndSceneIdentifiersWithWindow:");
}

id objc_msgSend_updateTraitCollectionTabBarSetting(void *a1, const char *a2, ...)
{
  return _[a1 updateTraitCollectionTabBarSetting];
}

id objc_msgSend_updateUIPHorizontalInsetsIfNecessaryWithCoordinator_(void *a1, const char *a2, ...)
{
  return [a1 updateUIPHorizontalInsetsIfNecessaryWithCoordinator:];
}

id objc_msgSend_updatedConfigurationForState_(void *a1, const char *a2, ...)
{
  return [a1 updatedConfigurationForState:];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urls(void *a1, const char *a2, ...)
{
  return _[a1 urls];
}

id objc_msgSend_userAction(void *a1, const char *a2, ...)
{
  return _[a1 userAction];
}

id objc_msgSend_userDidTapDownloadButton(void *a1, const char *a2, ...)
{
  return _[a1 userDidTapDownloadButton];
}

id objc_msgSend_userDidTapOpenButton(void *a1, const char *a2, ...)
{
  return _[a1 userDidTapOpenButton];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userPrefersTiledSidebarHidden(void *a1, const char *a2, ...)
{
  return _[a1 userPrefersTiledSidebarHidden];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueWithCGRect_(void *a1, const char *a2, ...)
{
  return [a1 valueWithCGRect:];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_viewControllerForColumn_(void *a1, const char *a2, ...)
{
  return [a1 viewControllerForColumn:];
}

id objc_msgSend_viewControllers(void *a1, const char *a2, ...)
{
  return _[a1 viewControllers];
}

id objc_msgSend_viewIfLoaded(void *a1, const char *a2, ...)
{
  return _[a1 viewIfLoaded];
}

id objc_msgSend_widthAnchor(void *a1, const char *a2, ...)
{
  return _[a1 widthAnchor];
}

id objc_msgSend_willChangeValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 willChangeValueForKey:];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_windowScene(void *a1, const char *a2, ...)
{
  return _[a1 windowScene];
}

id objc_msgSend_withDisplayMode_(void *a1, const char *a2, ...)
{
  return [a1 withDisplayMode:];
}

id objc_msgSend_withIsCollapsed_(void *a1, const char *a2, ...)
{
  return [a1 withIsCollapsed:];
}

id objc_msgSend_withLocationChangePacingDisabled_(void *a1, const char *a2, ...)
{
  return [a1 withLocationChangePacingDisabled:];
}